    TEST(gbcemu, opcode_cb_21) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 21 0000
        gbc.setState(0x3b2c, 0x81c, 0x4ee0, 0x20e, 0x7273, 0xab24, 0x1, 0x1);
        gbc.writeMem(0x3b2c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0x3b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0001
        gbc.setState(0xa64e, 0x25a3, 0xcfe0, 0x8207, 0xe3db, 0x2f55, 0x1, 0x0);
        gbc.writeMem(0xa64e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0xa650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64e));
        EXPECT(0x21, gbc.readMem(0xa64f));
        // CB 21 0002
        gbc.setState(0x56b, 0xe5be, 0x3550, 0x6906, 0xacbb, 0x2c6f, 0x1, 0x0);
        gbc.writeMem(0x56b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe5be, gbc.sp());
        EXPECT(0x56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0003
        gbc.setState(0xca2c, 0xec4c, 0x6b50, 0x5f1b, 0xc82f, 0xd4a9, 0x0, 0x0);
        gbc.writeMem(0xca2c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xec4c, gbc.sp());
        EXPECT(0xca2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2c));
        EXPECT(0x21, gbc.readMem(0xca2d));
        // CB 21 0004
        gbc.setState(0xe649, 0xed4, 0x67c0, 0x6de, 0x2ce1, 0x3acb, 0x1, 0x1);
        gbc.writeMem(0xe649, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xed4, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0x21, gbc.readMem(0xe64a));
        // CB 21 0005
        gbc.setState(0x6fe9, 0x92de, 0x50a0, 0xaf7a, 0xb9f7, 0x6f37, 0x1, 0x1);
        gbc.writeMem(0x6fe9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0006
        gbc.setState(0xd03f, 0x4528, 0xdfa0, 0x896d, 0xb3bf, 0xdb96, 0x0, 0x0);
        gbc.writeMem(0xd03f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4528, gbc.sp());
        EXPECT(0xd041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03f));
        EXPECT(0x21, gbc.readMem(0xd040));
        // CB 21 0007
        gbc.setState(0x8db0, 0x983c, 0x1ce0, 0x37cc, 0xac34, 0xb8ab, 0x0, 0x0);
        gbc.writeMem(0x8db0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x983c, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db0));
        EXPECT(0x21, gbc.readMem(0x8db1));
        // CB 21 0008
        gbc.setState(0x70c8, 0x8f54, 0x98d0, 0xd6c7, 0xbd1b, 0x65c7, 0x1, 0x0);
        gbc.writeMem(0x70c8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8f54, gbc.sp());
        EXPECT(0x70ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0009
        gbc.setState(0x2c4c, 0xdc6b, 0xd790, 0xbd27, 0x39f4, 0x3d37, 0x0, 0x0);
        gbc.writeMem(0x2c4c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0x2c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 000A
        gbc.setState(0x3119, 0x562b, 0x4750, 0x557a, 0xdb41, 0xf82, 0x0, 0x0);
        gbc.writeMem(0x3119, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x562b, gbc.sp());
        EXPECT(0x311b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 000B
        gbc.setState(0x75d, 0x2326, 0x4fe0, 0x799d, 0xf66, 0xda6b, 0x1, 0x0);
        gbc.writeMem(0x75d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2326, gbc.sp());
        EXPECT(0x75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 000C
        gbc.setState(0x3b18, 0x3c72, 0x40f0, 0x805f, 0x9a3b, 0x1060, 0x0, 0x1);
        gbc.writeMem(0x3b18, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3c72, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 000D
        gbc.setState(0x7e63, 0xe011, 0xc920, 0x2abb, 0x2f89, 0x6cb3, 0x1, 0x1);
        gbc.writeMem(0x7e63, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe011, gbc.sp());
        EXPECT(0x7e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 000E
        gbc.setState(0x4488, 0x5483, 0x6d80, 0x39d2, 0x9314, 0xce3c, 0x0, 0x1);
        gbc.writeMem(0x4488, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x448a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 000F
        gbc.setState(0xd788, 0x72a9, 0x60f0, 0x19f0, 0x206a, 0xd028, 0x1, 0x1);
        gbc.writeMem(0xd788, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0xd78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd788));
        EXPECT(0x21, gbc.readMem(0xd789));
        // CB 21 0010
        gbc.setState(0x954b, 0x291, 0xb7e0, 0x4749, 0x8185, 0x3887, 0x1, 0x0);
        gbc.writeMem(0x954b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x291, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954b));
        EXPECT(0x21, gbc.readMem(0x954c));
        // CB 21 0011
        gbc.setState(0xd7f5, 0x510c, 0x3da0, 0x7b69, 0x48de, 0x9614, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x510c, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0x21, gbc.readMem(0xd7f6));
        // CB 21 0012
        gbc.setState(0x1d51, 0x30ec, 0x2d30, 0xfba5, 0xe9e, 0x411c, 0x1, 0x1);
        gbc.writeMem(0x1d51, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x1d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0013
        gbc.setState(0x6616, 0xc0da, 0xdf00, 0x2fbf, 0x8d9, 0x2482, 0x1, 0x1);
        gbc.writeMem(0x6616, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x6618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0014
        gbc.setState(0x95c7, 0x84b5, 0xc480, 0x2cb2, 0x32af, 0x1e38, 0x0, 0x1);
        gbc.writeMem(0x95c7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0x95c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c7));
        EXPECT(0x21, gbc.readMem(0x95c8));
        // CB 21 0015
        gbc.setState(0x81cb, 0x448b, 0xbaa0, 0x8ea4, 0xc7af, 0x8ea9, 0x1, 0x1);
        gbc.writeMem(0x81cb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x81cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cb));
        EXPECT(0x21, gbc.readMem(0x81cc));
        // CB 21 0016
        gbc.setState(0xe8db, 0xedbd, 0xa360, 0xaff6, 0xf394, 0x9035, 0x1, 0x0);
        gbc.writeMem(0xe8db, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xedbd, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8db));
        EXPECT(0x21, gbc.readMem(0xe8dc));
        // CB 21 0017
        gbc.setState(0xe4b0, 0x21cc, 0xe560, 0xde67, 0x9b60, 0xe4ec, 0x0, 0x0);
        gbc.writeMem(0xe4b0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21cc, gbc.sp());
        EXPECT(0xe4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b0));
        EXPECT(0x21, gbc.readMem(0xe4b1));
        // CB 21 0018
        gbc.setState(0xdb4b, 0x2c2e, 0x4010, 0xe4, 0x656a, 0x5625, 0x1, 0x0);
        gbc.writeMem(0xdb4b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2c2e, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0x21, gbc.readMem(0xdb4c));
        // CB 21 0019
        gbc.setState(0x8d22, 0x7707, 0xe60, 0xedbc, 0xb91, 0xf635, 0x0, 0x1);
        gbc.writeMem(0x8d22, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7707, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d22));
        EXPECT(0x21, gbc.readMem(0x8d23));
        // CB 21 001A
        gbc.setState(0x182c, 0xad2c, 0xab20, 0xe209, 0x9675, 0xc646, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0x182e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 001B
        gbc.setState(0xdaec, 0x5685, 0x4340, 0x5310, 0x22ce, 0xefb5, 0x1, 0x0);
        gbc.writeMem(0xdaec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5685, gbc.sp());
        EXPECT(0xdaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaec));
        EXPECT(0x21, gbc.readMem(0xdaed));
        // CB 21 001C
        gbc.setState(0x686, 0x6790, 0x63c0, 0x9904, 0x10ae, 0xf96d, 0x1, 0x1);
        gbc.writeMem(0x686, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6790, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 001D
        gbc.setState(0x2a6d, 0xdcc4, 0x12a0, 0xc631, 0x4c70, 0x5f12, 0x0, 0x0);
        gbc.writeMem(0x2a6d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdcc4, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 001E
        gbc.setState(0x5cb2, 0x8dba, 0x2220, 0x47f3, 0xb2f1, 0x22, 0x1, 0x0);
        gbc.writeMem(0x5cb2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8dba, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 001F
        gbc.setState(0xc27c, 0xc1e8, 0xa1d0, 0xfb73, 0x24b4, 0xa3e3, 0x0, 0x0);
        gbc.writeMem(0xc27c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27c));
        EXPECT(0x21, gbc.readMem(0xc27d));
        // CB 21 0020
        gbc.setState(0x199a, 0x9ae9, 0x1c90, 0x1e09, 0xb16b, 0xa1ec, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9ae9, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0021
        gbc.setState(0xab19, 0x5f22, 0x3840, 0xe1b2, 0xd93f, 0xf9d1, 0x0, 0x1);
        gbc.writeMem(0xab19, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab19));
        EXPECT(0x21, gbc.readMem(0xab1a));
        // CB 21 0022
        gbc.setState(0x4481, 0x8f73, 0x2ce0, 0x8d1f, 0x9ce0, 0x50a4, 0x0, 0x0);
        gbc.writeMem(0x4481, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8f73, gbc.sp());
        EXPECT(0x4483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0023
        gbc.setState(0x3d8f, 0x383e, 0x330, 0x9acc, 0x377, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x3d8f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x383e, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0024
        gbc.setState(0x3abc, 0xafef, 0xbdf0, 0x7028, 0x1a6f, 0x44eb, 0x1, 0x0);
        gbc.writeMem(0x3abc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xafef, gbc.sp());
        EXPECT(0x3abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0025
        gbc.setState(0x8578, 0xdd9b, 0xf9d0, 0xe17c, 0xef93, 0x21d9, 0x1, 0x1);
        gbc.writeMem(0x8578, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdd9b, gbc.sp());
        EXPECT(0x857a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8578));
        EXPECT(0x21, gbc.readMem(0x8579));
        // CB 21 0026
        gbc.setState(0xd1b8, 0xaf28, 0x8410, 0x7463, 0x3ed4, 0x1041, 0x0, 0x1);
        gbc.writeMem(0xd1b8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0xd1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b8));
        EXPECT(0x21, gbc.readMem(0xd1b9));
        // CB 21 0027
        gbc.setState(0xd248, 0xb0b7, 0xa150, 0xa76e, 0x471f, 0xd0a0, 0x1, 0x0);
        gbc.writeMem(0xd248, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd248));
        EXPECT(0x21, gbc.readMem(0xd249));
        // CB 21 0028
        gbc.setState(0x657a, 0x1b45, 0x6c20, 0xaacb, 0xd2c7, 0x562f, 0x1, 0x0);
        gbc.writeMem(0x657a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0029
        gbc.setState(0xebfa, 0x3ff9, 0x31a0, 0xcb44, 0xcb06, 0x640d, 0x0, 0x1);
        gbc.writeMem(0xebfa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfa));
        EXPECT(0x21, gbc.readMem(0xebfb));
        // CB 21 002A
        gbc.setState(0x155e, 0x379, 0x4be0, 0x4060, 0x61ae, 0xe0eb, 0x0, 0x1);
        gbc.writeMem(0x155e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x379, gbc.sp());
        EXPECT(0x1560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 002B
        gbc.setState(0xb91a, 0x25c5, 0x9c80, 0x1c9d, 0xfb64, 0x394b, 0x1, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x25c5, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91a));
        EXPECT(0x21, gbc.readMem(0xb91b));
        // CB 21 002C
        gbc.setState(0x2111, 0xe839, 0xbf30, 0x5025, 0xf8c9, 0x8829, 0x1, 0x1);
        gbc.writeMem(0x2111, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe839, gbc.sp());
        EXPECT(0x2113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 002D
        gbc.setState(0xa953, 0xfd50, 0x82d0, 0x232b, 0xd325, 0x3001, 0x0, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfd50, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0x21, gbc.readMem(0xa954));
        // CB 21 002E
        gbc.setState(0x52d, 0x860a, 0x4730, 0xb54a, 0x3ca9, 0x76ee, 0x1, 0x1);
        gbc.writeMem(0x52d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x860a, gbc.sp());
        EXPECT(0x52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 002F
        gbc.setState(0x30ea, 0xcf3d, 0x56f0, 0x9967, 0x99cf, 0xd46e, 0x0, 0x1);
        gbc.writeMem(0x30ea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcf3d, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0030
        gbc.setState(0x8181, 0x7fe3, 0x6720, 0xc9ed, 0x9c34, 0x46c0, 0x1, 0x1);
        gbc.writeMem(0x8181, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7fe3, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8181));
        EXPECT(0x21, gbc.readMem(0x8182));
        // CB 21 0031
        gbc.setState(0x5ed8, 0x8a3d, 0xbdd0, 0xabe2, 0x259f, 0x45fe, 0x0, 0x1);
        gbc.writeMem(0x5ed8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8a3d, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0032
        gbc.setState(0x5a96, 0x9503, 0x7840, 0xc6a4, 0xf08c, 0x2afb, 0x0, 0x0);
        gbc.writeMem(0x5a96, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0x5a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0033
        gbc.setState(0x3cdc, 0x99ed, 0x9780, 0xd2c, 0x392f, 0xfd30, 0x1, 0x1);
        gbc.writeMem(0x3cdc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0x3cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0034
        gbc.setState(0x6866, 0xed5f, 0x3c60, 0x8169, 0x8b9b, 0xb9bc, 0x0, 0x0);
        gbc.writeMem(0x6866, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0035
        gbc.setState(0x66b9, 0x8241, 0xd180, 0xe979, 0x6a36, 0xb9bb, 0x1, 0x1);
        gbc.writeMem(0x66b9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8241, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0036
        gbc.setState(0xcd63, 0x4af0, 0x2490, 0x6133, 0x379f, 0x718, 0x0, 0x1);
        gbc.writeMem(0xcd63, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4af0, gbc.sp());
        EXPECT(0xcd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd63));
        EXPECT(0x21, gbc.readMem(0xcd64));
        // CB 21 0037
        gbc.setState(0xb847, 0x47cd, 0xa5d0, 0x28aa, 0xa295, 0x9298, 0x1, 0x0);
        gbc.writeMem(0xb847, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x47cd, gbc.sp());
        EXPECT(0xb849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb847));
        EXPECT(0x21, gbc.readMem(0xb848));
        // CB 21 0038
        gbc.setState(0xe864, 0x9f65, 0xf6c0, 0x467b, 0x87c1, 0xe06c, 0x0, 0x1);
        gbc.writeMem(0xe864, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9f65, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe864));
        EXPECT(0x21, gbc.readMem(0xe865));
        // CB 21 0039
        gbc.setState(0x1337, 0x6e5a, 0xf450, 0xa9e7, 0x7e37, 0xf60f, 0x0, 0x1);
        gbc.writeMem(0x1337, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0x1339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 003A
        gbc.setState(0xd3a7, 0x60cb, 0x48e0, 0x82ae, 0x873a, 0x500, 0x1, 0x0);
        gbc.writeMem(0xd3a7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0xd3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a7));
        EXPECT(0x21, gbc.readMem(0xd3a8));
        // CB 21 003B
        gbc.setState(0xd31b, 0x2eea, 0x6310, 0x9c88, 0xf38f, 0xe3e, 0x0, 0x1);
        gbc.writeMem(0xd31b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2eea, gbc.sp());
        EXPECT(0xd31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31b));
        EXPECT(0x21, gbc.readMem(0xd31c));
        // CB 21 003C
        gbc.setState(0xac3c, 0x5497, 0xca0, 0xc157, 0x6dfd, 0xf07f, 0x0, 0x0);
        gbc.writeMem(0xac3c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5497, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3c));
        EXPECT(0x21, gbc.readMem(0xac3d));
        // CB 21 003D
        gbc.setState(0xc325, 0x40f7, 0xc830, 0x9bd3, 0x39c6, 0xd3cd, 0x0, 0x1);
        gbc.writeMem(0xc325, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc325));
        EXPECT(0x21, gbc.readMem(0xc326));
        // CB 21 003E
        gbc.setState(0xe1b4, 0x15df, 0x5b20, 0xd5ae, 0xbd1a, 0x1e7f, 0x1, 0x0);
        gbc.writeMem(0xe1b4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0xe1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b4));
        EXPECT(0x21, gbc.readMem(0xe1b5));
        // CB 21 003F
        gbc.setState(0xa8a7, 0x2907, 0x0, 0xa282, 0x8232, 0x516c, 0x0, 0x1);
        gbc.writeMem(0xa8a7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0xa8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a7));
        EXPECT(0x21, gbc.readMem(0xa8a8));
        // CB 21 0040
        gbc.setState(0xb915, 0x6d65, 0x1cb0, 0x57a3, 0x8e35, 0xa556, 0x0, 0x0);
        gbc.writeMem(0xb915, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb915));
        EXPECT(0x21, gbc.readMem(0xb916));
        // CB 21 0041
        gbc.setState(0x6c6d, 0x81d8, 0xce70, 0x78fa, 0x8f7c, 0xa315, 0x1, 0x1);
        gbc.writeMem(0x6c6d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x81d8, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0042
        gbc.setState(0x3fb1, 0x8397, 0x70b0, 0x537a, 0xe26f, 0x75a8, 0x1, 0x0);
        gbc.writeMem(0x3fb1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0x3fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0043
        gbc.setState(0x1f23, 0x491d, 0xc160, 0x43d6, 0x993d, 0x3e11, 0x1, 0x1);
        gbc.writeMem(0x1f23, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0044
        gbc.setState(0xaee5, 0x8550, 0xf0d0, 0x65e3, 0x9c71, 0x80f3, 0x1, 0x0);
        gbc.writeMem(0xaee5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8550, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee5));
        EXPECT(0x21, gbc.readMem(0xaee6));
        // CB 21 0045
        gbc.setState(0x646, 0x9576, 0x6830, 0x3cc9, 0x6561, 0x1ffc, 0x1, 0x0);
        gbc.writeMem(0x646, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9576, gbc.sp());
        EXPECT(0x648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0046
        gbc.setState(0xc88d, 0xbfe2, 0xba80, 0x4a61, 0x2a49, 0x1949, 0x0, 0x1);
        gbc.writeMem(0xc88d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbfe2, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88d));
        EXPECT(0x21, gbc.readMem(0xc88e));
        // CB 21 0047
        gbc.setState(0xa4ec, 0x6bba, 0xbd50, 0x50e8, 0x6e8d, 0x4442, 0x0, 0x1);
        gbc.writeMem(0xa4ec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0xa4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ec));
        EXPECT(0x21, gbc.readMem(0xa4ed));
        // CB 21 0048
        gbc.setState(0x1e7, 0xf713, 0x40, 0x3e06, 0x354, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x1e7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf713, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0049
        gbc.setState(0xcd1a, 0x186b, 0x6fc0, 0xec42, 0x4e6, 0x480c, 0x0, 0x0);
        gbc.writeMem(0xcd1a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1a));
        EXPECT(0x21, gbc.readMem(0xcd1b));
        // CB 21 004A
        gbc.setState(0xc4cd, 0x9057, 0xd580, 0x61cc, 0xdfd, 0x7afd, 0x1, 0x0);
        gbc.writeMem(0xc4cd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9057, gbc.sp());
        EXPECT(0xc4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cd));
        EXPECT(0x21, gbc.readMem(0xc4ce));
        // CB 21 004B
        gbc.setState(0x462e, 0xe989, 0x6cb0, 0x9d80, 0x6602, 0xc6a4, 0x1, 0x0);
        gbc.writeMem(0x462e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe989, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 004C
        gbc.setState(0x4981, 0x64a, 0xc370, 0xa87b, 0x9b47, 0xa5b7, 0x1, 0x0);
        gbc.writeMem(0x4981, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x64a, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 004D
        gbc.setState(0xe761, 0x6700, 0x4f20, 0x952a, 0x2f46, 0xbc39, 0x1, 0x0);
        gbc.writeMem(0xe761, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0xe763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe761));
        EXPECT(0x21, gbc.readMem(0xe762));
        // CB 21 004E
        gbc.setState(0xb2c1, 0x2dbd, 0x5170, 0xa4ac, 0xc21d, 0xdd53, 0x0, 0x1);
        gbc.writeMem(0xb2c1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0xb2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c1));
        EXPECT(0x21, gbc.readMem(0xb2c2));
        // CB 21 004F
        gbc.setState(0x5861, 0xfe9, 0xea20, 0x8b1f, 0xe83e, 0x29ea, 0x1, 0x0);
        gbc.writeMem(0x5861, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0x5863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0050
        gbc.setState(0xc142, 0x4a1c, 0x5cd0, 0x5b5b, 0x6ac, 0xf03, 0x0, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4a1c, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0x21, gbc.readMem(0xc143));
        // CB 21 0051
        gbc.setState(0x324, 0xb03a, 0xc300, 0x4b2d, 0xe883, 0xf524, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb03a, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0052
        gbc.setState(0xeeeb, 0x48e6, 0x2c80, 0x41fc, 0x3158, 0x6af9, 0x0, 0x0);
        gbc.writeMem(0xeeeb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0xeeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeeb));
        EXPECT(0x21, gbc.readMem(0xeeec));
        // CB 21 0053
        gbc.setState(0x6c47, 0xb6e4, 0x3cc0, 0x9b22, 0xb02a, 0x18d2, 0x1, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb6e4, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0054
        gbc.setState(0x3d3c, 0x7e8f, 0x9930, 0x8ad8, 0xfe34, 0x1c6f, 0x0, 0x0);
        gbc.writeMem(0x3d3c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0x3d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0055
        gbc.setState(0xcf5b, 0xc46a, 0x6e0, 0xd78a, 0xef6b, 0x43b1, 0x0, 0x1);
        gbc.writeMem(0xcf5b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc46a, gbc.sp());
        EXPECT(0xcf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5b));
        EXPECT(0x21, gbc.readMem(0xcf5c));
        // CB 21 0056
        gbc.setState(0xb70b, 0xcf6a, 0xa880, 0x91da, 0xc9d0, 0x70ad, 0x0, 0x1);
        gbc.writeMem(0xb70b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0x21, gbc.readMem(0xb70c));
        // CB 21 0057
        gbc.setState(0x4737, 0xfb53, 0x2430, 0x8f76, 0xef3, 0x39f7, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0058
        gbc.setState(0x5877, 0xcc1c, 0xadb0, 0x351b, 0xef80, 0xe89b, 0x1, 0x0);
        gbc.writeMem(0x5877, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcc1c, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0059
        gbc.setState(0xb5be, 0x5943, 0x2240, 0xe9f5, 0x2b14, 0x228e, 0x1, 0x1);
        gbc.writeMem(0xb5be, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0xb5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5be));
        EXPECT(0x21, gbc.readMem(0xb5bf));
        // CB 21 005A
        gbc.setState(0xc057, 0x5e90, 0x2270, 0x4b96, 0x321a, 0xcd41, 0x1, 0x0);
        gbc.writeMem(0xc057, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc057));
        EXPECT(0x21, gbc.readMem(0xc058));
        // CB 21 005D
        gbc.setState(0xa140, 0xfb9c, 0x1a0, 0xe20b, 0x5905, 0x731b, 0x1, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa140));
        EXPECT(0x21, gbc.readMem(0xa141));
        // CB 21 005E
        gbc.setState(0x521, 0xe6cf, 0xf8d0, 0xbd3a, 0xc87b, 0x323d, 0x0, 0x0);
        gbc.writeMem(0x521, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe6cf, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 005F
        gbc.setState(0x15ed, 0x30d9, 0x6d80, 0x787b, 0x1bd7, 0x1d84, 0x0, 0x0);
        gbc.writeMem(0x15ed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x30d9, gbc.sp());
        EXPECT(0x15ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0060
        gbc.setState(0xefa0, 0x5775, 0x18b0, 0x5a19, 0x5143, 0x25e4, 0x1, 0x0);
        gbc.writeMem(0xefa0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5775, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa0));
        EXPECT(0x21, gbc.readMem(0xefa1));
        // CB 21 0061
        gbc.setState(0xd8c0, 0x561, 0xe250, 0x3cac, 0x7fe8, 0x977a, 0x0, 0x1);
        gbc.writeMem(0xd8c0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c0));
        EXPECT(0x21, gbc.readMem(0xd8c1));
        // CB 21 0062
        gbc.setState(0x2326, 0xce07, 0x5150, 0xe991, 0xab2f, 0xb8aa, 0x1, 0x0);
        gbc.writeMem(0x2326, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0x2328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0063
        gbc.setState(0x9098, 0xe210, 0x87f0, 0xc4d2, 0x68de, 0xe54b, 0x0, 0x1);
        gbc.writeMem(0x9098, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9098));
        EXPECT(0x21, gbc.readMem(0x9099));
        // CB 21 0064
        gbc.setState(0x4ebb, 0x138e, 0xaaf0, 0x5cfd, 0xd94c, 0xf737, 0x0, 0x1);
        gbc.writeMem(0x4ebb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0x4ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0065
        gbc.setState(0xd96c, 0x7973, 0x10d0, 0xd293, 0xb735, 0xb640, 0x0, 0x0);
        gbc.writeMem(0xd96c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96c));
        EXPECT(0x21, gbc.readMem(0xd96d));
        // CB 21 0067
        gbc.setState(0x3e9a, 0x4685, 0xc070, 0x3171, 0xc47a, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0x3e9a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4685, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0068
        gbc.setState(0x6831, 0xcc3c, 0xec30, 0x98f4, 0xb19, 0xa775, 0x1, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0069
        gbc.setState(0x547d, 0x4b45, 0x8730, 0xa26b, 0xc1ab, 0xf544, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0x547f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 006A
        gbc.setState(0x7aed, 0xd86b, 0xaf20, 0x3fb3, 0x213c, 0x58dc, 0x0, 0x0);
        gbc.writeMem(0x7aed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd86b, gbc.sp());
        EXPECT(0x7aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 006B
        gbc.setState(0x1b2f, 0x11f2, 0x9690, 0xff9, 0xf3e0, 0xaf2d, 0x1, 0x1);
        gbc.writeMem(0x1b2f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x11f2, gbc.sp());
        EXPECT(0x1b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 006C
        gbc.setState(0x7b40, 0x7d0, 0x1a00, 0x8c2d, 0x48cd, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x7b40, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0x7b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 006D
        gbc.setState(0xb0cb, 0x8468, 0x7c0, 0x94fb, 0x9bf3, 0xe677, 0x1, 0x0);
        gbc.writeMem(0xb0cb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0xb0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cb));
        EXPECT(0x21, gbc.readMem(0xb0cc));
        // CB 21 006E
        gbc.setState(0xe810, 0x7f17, 0xfa10, 0x55fb, 0xe1db, 0x1f9a, 0x0, 0x0);
        gbc.writeMem(0xe810, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7f17, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe810));
        EXPECT(0x21, gbc.readMem(0xe811));
        // CB 21 006F
        gbc.setState(0xa15b, 0x7ec9, 0x3800, 0x38ff, 0xf5d1, 0xc8f8, 0x0, 0x1);
        gbc.writeMem(0xa15b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0xa15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15b));
        EXPECT(0x21, gbc.readMem(0xa15c));
        // CB 21 0070
        gbc.setState(0x1ed1, 0x1824, 0xe640, 0xba6b, 0xc3c5, 0xec3b, 0x0, 0x1);
        gbc.writeMem(0x1ed1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1824, gbc.sp());
        EXPECT(0x1ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0071
        gbc.setState(0x510c, 0x3532, 0xf7a0, 0xa159, 0x8f05, 0xc0d0, 0x1, 0x1);
        gbc.writeMem(0x510c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3532, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0072
        gbc.setState(0x803, 0x9223, 0xbe70, 0x3e8c, 0xa324, 0x7b4c, 0x1, 0x1);
        gbc.writeMem(0x803, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9223, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0073
        gbc.setState(0x7c38, 0xda00, 0xda80, 0xf670, 0x5ca8, 0x7308, 0x0, 0x0);
        gbc.writeMem(0x7c38, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xda00, gbc.sp());
        EXPECT(0x7c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0074
        gbc.setState(0x39ca, 0x905e, 0x9580, 0xfadd, 0xf55a, 0x610c, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0x39cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0075
        gbc.setState(0x19fd, 0xc32d, 0x9270, 0xb3b5, 0x283, 0xde5, 0x0, 0x0);
        gbc.writeMem(0x19fd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc32d, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0076
        gbc.setState(0xd456, 0x6e1d, 0x6eb0, 0x1dd6, 0x88b, 0xb905, 0x0, 0x0);
        gbc.writeMem(0xd456, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xd458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd456));
        EXPECT(0x21, gbc.readMem(0xd457));
        // CB 21 0077
        gbc.setState(0x439, 0x4735, 0x17e0, 0x2a22, 0xf409, 0xe735, 0x0, 0x0);
        gbc.writeMem(0x439, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4735, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0078
        gbc.setState(0x31ea, 0x31e0, 0xec80, 0xb549, 0xc454, 0xdf2c, 0x1, 0x1);
        gbc.writeMem(0x31ea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x31e0, gbc.sp());
        EXPECT(0x31ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0079
        gbc.setState(0x9e3e, 0x8f38, 0x6a70, 0xe164, 0xa81e, 0x1815, 0x1, 0x0);
        gbc.writeMem(0x9e3e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8f38, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0x21, gbc.readMem(0x9e3f));
        // CB 21 007A
        gbc.setState(0x2c6a, 0x16f9, 0x7c10, 0xa968, 0x82ac, 0xd7f4, 0x0, 0x0);
        gbc.writeMem(0x2c6a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x16f9, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 007B
        gbc.setState(0xd0f7, 0x2c0, 0xfec0, 0x8573, 0xc920, 0xc8a, 0x1, 0x0);
        gbc.writeMem(0xd0f7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xd0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f7));
        EXPECT(0x21, gbc.readMem(0xd0f8));
        // CB 21 007C
        gbc.setState(0xa98f, 0xe926, 0x2aa0, 0xc382, 0x28c9, 0xe161, 0x1, 0x1);
        gbc.writeMem(0xa98f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe926, gbc.sp());
        EXPECT(0xa991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98f));
        EXPECT(0x21, gbc.readMem(0xa990));
        // CB 21 007D
        gbc.setState(0x7013, 0x9ca0, 0xb420, 0xaf60, 0x1044, 0x8040, 0x0, 0x1);
        gbc.writeMem(0x7013, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x7015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 007E
        gbc.setState(0xee66, 0x990a, 0xefd0, 0xca96, 0xd159, 0x81a5, 0x0, 0x0);
        gbc.writeMem(0xee66, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee66));
        EXPECT(0x21, gbc.readMem(0xee67));
        // CB 21 007F
        gbc.setState(0x937f, 0x586f, 0x19d0, 0xd55, 0xda3d, 0x7fbf, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x586f, gbc.sp());
        EXPECT(0x9381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937f));
        EXPECT(0x21, gbc.readMem(0x9380));
        // CB 21 0080
        gbc.setState(0x15ff, 0x3a9b, 0xb960, 0xa27e, 0x500d, 0xd0d8, 0x1, 0x0);
        gbc.writeMem(0x15ff, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3a9b, gbc.sp());
        EXPECT(0x1601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0081
        gbc.setState(0xc719, 0x8eb2, 0x4b80, 0xe1e1, 0xb07b, 0xa0aa, 0x1, 0x0);
        gbc.writeMem(0xc719, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0xc71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc719));
        EXPECT(0x21, gbc.readMem(0xc71a));
        // CB 21 0082
        gbc.setState(0xa511, 0x9720, 0x3fd0, 0x8d88, 0x21af, 0x39bd, 0x0, 0x0);
        gbc.writeMem(0xa511, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9720, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa511));
        EXPECT(0x21, gbc.readMem(0xa512));
        // CB 21 0084
        gbc.setState(0xcbf, 0x2a48, 0x3830, 0x4998, 0x3b1d, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0xcbf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a48, gbc.sp());
        EXPECT(0xcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0085
        gbc.setState(0x597a, 0xeb47, 0xe240, 0xe363, 0xfa6, 0x46f2, 0x0, 0x0);
        gbc.writeMem(0x597a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xeb47, gbc.sp());
        EXPECT(0x597c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0086
        gbc.setState(0x4d11, 0x80bf, 0xa090, 0xe75, 0xe19a, 0x5ae8, 0x0, 0x1);
        gbc.writeMem(0x4d11, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x80bf, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0087
        gbc.setState(0x20f7, 0x6e1a, 0x5490, 0xa4bc, 0x2310, 0x7ed9, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6e1a, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0088
        gbc.setState(0x20b7, 0xa99c, 0x2d20, 0x290c, 0xdabe, 0xe2d8, 0x0, 0x1);
        gbc.writeMem(0x20b7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0089
        gbc.setState(0xefbd, 0x5b4a, 0x2310, 0xeff6, 0x566b, 0xe242, 0x1, 0x1);
        gbc.writeMem(0xefbd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5b4a, gbc.sp());
        EXPECT(0xefbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbd));
        EXPECT(0x21, gbc.readMem(0xefbe));
        // CB 21 008A
        gbc.setState(0xd3e1, 0xc969, 0x9b30, 0x9bd3, 0x831a, 0xd591, 0x1, 0x1);
        gbc.writeMem(0xd3e1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e1));
        EXPECT(0x21, gbc.readMem(0xd3e2));
        // CB 21 008B
        gbc.setState(0xdbf4, 0x6787, 0xee0, 0xc23, 0xf9af, 0x5764, 0x1, 0x1);
        gbc.writeMem(0xdbf4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6787, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf4));
        EXPECT(0x21, gbc.readMem(0xdbf5));
        // CB 21 008C
        gbc.setState(0x5831, 0x751a, 0xbc00, 0x34c6, 0x8938, 0xdf39, 0x0, 0x1);
        gbc.writeMem(0x5831, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x751a, gbc.sp());
        EXPECT(0x5833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 008D
        gbc.setState(0xdd32, 0xcc4c, 0xb10, 0xbd52, 0x2edf, 0x75df, 0x0, 0x1);
        gbc.writeMem(0xdd32, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcc4c, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd32));
        EXPECT(0x21, gbc.readMem(0xdd33));
        // CB 21 008E
        gbc.setState(0x2d06, 0xfc66, 0x7070, 0x1dab, 0x5a67, 0x725a, 0x1, 0x0);
        gbc.writeMem(0x2d06, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc66, gbc.sp());
        EXPECT(0x2d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 008F
        gbc.setState(0xc55b, 0x6935, 0x24c0, 0xccb1, 0xd11, 0xed53, 0x1, 0x1);
        gbc.writeMem(0xc55b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6935, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55b));
        EXPECT(0x21, gbc.readMem(0xc55c));
        // CB 21 0090
        gbc.setState(0x7618, 0xe833, 0x60b0, 0x8d3e, 0x52d8, 0x17e7, 0x1, 0x1);
        gbc.writeMem(0x7618, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe833, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0091
        gbc.setState(0x2295, 0x9dc7, 0xcab0, 0xe7a, 0x3f3e, 0x1238, 0x1, 0x1);
        gbc.writeMem(0x2295, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0x2297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0092
        gbc.setState(0x5d1c, 0x7723, 0x8980, 0xd3e2, 0xdb10, 0x7722, 0x0, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0093
        gbc.setState(0xe8d8, 0xed34, 0xfd90, 0x5857, 0xda86, 0xef64, 0x0, 0x0);
        gbc.writeMem(0xe8d8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xed34, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d8));
        EXPECT(0x21, gbc.readMem(0xe8d9));
        // CB 21 0094
        gbc.setState(0x7b8d, 0x4560, 0x94e0, 0xb27b, 0xa060, 0x271d, 0x1, 0x1);
        gbc.writeMem(0x7b8d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4560, gbc.sp());
        EXPECT(0x7b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0095
        gbc.setState(0x14c2, 0x8526, 0x83a0, 0x4023, 0x54fa, 0xfb4b, 0x0, 0x1);
        gbc.writeMem(0x14c2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8526, gbc.sp());
        EXPECT(0x14c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0096
        gbc.setState(0x32d6, 0x7ebc, 0xc50, 0x310c, 0x1d3, 0xf662, 0x0, 0x1);
        gbc.writeMem(0x32d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0097
        gbc.setState(0x9870, 0xeb3c, 0x7630, 0x9fc3, 0x81a4, 0xaca3, 0x0, 0x0);
        gbc.writeMem(0x9870, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x9872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9870));
        EXPECT(0x21, gbc.readMem(0x9871));
        // CB 21 0098
        gbc.setState(0x939e, 0x87f6, 0xdf50, 0xc1df, 0xef06, 0x4393, 0x1, 0x1);
        gbc.writeMem(0x939e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939e));
        EXPECT(0x21, gbc.readMem(0x939f));
        // CB 21 0099
        gbc.setState(0x656, 0xda7e, 0x4cd0, 0x9a32, 0x364d, 0x1ce7, 0x1, 0x1);
        gbc.writeMem(0x656, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xda7e, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 009A
        gbc.setState(0xef2d, 0x4068, 0xe890, 0xb2c9, 0xde81, 0x6a6e, 0x0, 0x0);
        gbc.writeMem(0xef2d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4068, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2d));
        EXPECT(0x21, gbc.readMem(0xef2e));
        // CB 21 009B
        gbc.setState(0xae46, 0xa19a, 0xb320, 0xa789, 0x7b43, 0x1fac, 0x1, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0x21, gbc.readMem(0xae47));
        // CB 21 009D
        gbc.setState(0x25c0, 0x6080, 0x9880, 0x102b, 0x45b2, 0x3a10, 0x1, 0x1);
        gbc.writeMem(0x25c0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x25c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 009E
        gbc.setState(0xc52f, 0x64f0, 0x6720, 0x1efa, 0x3035, 0xfdcf, 0x1, 0x0);
        gbc.writeMem(0xc52f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0xc531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52f));
        EXPECT(0x21, gbc.readMem(0xc530));
        // CB 21 009F
        gbc.setState(0x7a0d, 0xb299, 0x1910, 0x17c3, 0xc234, 0xcaa0, 0x0, 0x1);
        gbc.writeMem(0x7a0d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb299, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00A0
        gbc.setState(0xd0c9, 0xce3, 0xf460, 0x6e1a, 0xa75f, 0x2665, 0x1, 0x0);
        gbc.writeMem(0xd0c9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xce3, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c9));
        EXPECT(0x21, gbc.readMem(0xd0ca));
        // CB 21 00A1
        gbc.setState(0xed29, 0x29c, 0xd670, 0x1e46, 0xb9fe, 0xb8d0, 0x0, 0x1);
        gbc.writeMem(0xed29, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed29));
        EXPECT(0x21, gbc.readMem(0xed2a));
        // CB 21 00A2
        gbc.setState(0xce4a, 0xf988, 0xa050, 0xdf94, 0xc9a8, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf988, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4a));
        EXPECT(0x21, gbc.readMem(0xce4b));
        // CB 21 00A3
        gbc.setState(0x78a5, 0x764f, 0x8bc0, 0xed15, 0x9f81, 0xfda8, 0x1, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00A4
        gbc.setState(0x828c, 0x5a63, 0xf000, 0xbaca, 0xec4e, 0xae7a, 0x0, 0x0);
        gbc.writeMem(0x828c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828c));
        EXPECT(0x21, gbc.readMem(0x828d));
        // CB 21 00A5
        gbc.setState(0x77c9, 0x940f, 0x9240, 0x6e06, 0xc19b, 0x5661, 0x1, 0x0);
        gbc.writeMem(0x77c9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x940f, gbc.sp());
        EXPECT(0x77cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00A6
        gbc.setState(0x6cbe, 0xec03, 0x5720, 0xa40b, 0x9e4b, 0x8aa6, 0x1, 0x1);
        gbc.writeMem(0x6cbe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xec03, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00A7
        gbc.setState(0xec01, 0xb9b0, 0x1690, 0xccf2, 0x78b2, 0x7180, 0x1, 0x0);
        gbc.writeMem(0xec01, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb9b0, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec01));
        EXPECT(0x21, gbc.readMem(0xec02));
        // CB 21 00A8
        gbc.setState(0x76ed, 0x9cbe, 0xdc10, 0xf9f2, 0x1ed4, 0xd2d0, 0x1, 0x0);
        gbc.writeMem(0x76ed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9cbe, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00A9
        gbc.setState(0x2ec4, 0xed74, 0x4d30, 0xb292, 0xe86f, 0x8e07, 0x0, 0x1);
        gbc.writeMem(0x2ec4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xed74, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00AA
        gbc.setState(0x9d8c, 0x3871, 0xb620, 0x20a5, 0xdf5b, 0xadbf, 0x0, 0x0);
        gbc.writeMem(0x9d8c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3871, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8c));
        EXPECT(0x21, gbc.readMem(0x9d8d));
        // CB 21 00AB
        gbc.setState(0x234b, 0x4f91, 0x99e0, 0x42a3, 0xcc1e, 0x27a5, 0x0, 0x1);
        gbc.writeMem(0x234b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4f91, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00AC
        gbc.setState(0x532a, 0xba8f, 0x10d0, 0x8585, 0x42e4, 0x5e88, 0x0, 0x1);
        gbc.writeMem(0x532a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xba8f, gbc.sp());
        EXPECT(0x532c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00AD
        gbc.setState(0x9d05, 0x22ee, 0x41f0, 0x53dd, 0xd4eb, 0xb4e8, 0x0, 0x0);
        gbc.writeMem(0x9d05, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x22ee, gbc.sp());
        EXPECT(0x9d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d05));
        EXPECT(0x21, gbc.readMem(0x9d06));
        // CB 21 00AE
        gbc.setState(0xe781, 0xf19d, 0x56a0, 0xd9cd, 0x865a, 0x4403, 0x1, 0x0);
        gbc.writeMem(0xe781, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf19d, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe781));
        EXPECT(0x21, gbc.readMem(0xe782));
        // CB 21 00AF
        gbc.setState(0xaac0, 0x2f80, 0x7710, 0x5c53, 0xfcf9, 0x5866, 0x1, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0xaac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac0));
        EXPECT(0x21, gbc.readMem(0xaac1));
        // CB 21 00B0
        gbc.setState(0x3482, 0xbd28, 0xa010, 0x3bfc, 0xb6f4, 0x650f, 0x0, 0x1);
        gbc.writeMem(0x3482, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbd28, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00B1
        gbc.setState(0xcd2b, 0xef2, 0xbe30, 0xaed, 0x6551, 0x32d8, 0x1, 0x0);
        gbc.writeMem(0xcd2b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xef2, gbc.sp());
        EXPECT(0xcd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2b));
        EXPECT(0x21, gbc.readMem(0xcd2c));
        // CB 21 00B2
        gbc.setState(0x9c81, 0x783b, 0xec30, 0xbc8e, 0xa620, 0x4377, 0x1, 0x0);
        gbc.writeMem(0x9c81, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c81));
        EXPECT(0x21, gbc.readMem(0x9c82));
        // CB 21 00B3
        gbc.setState(0xe846, 0xa0cb, 0x7170, 0x893d, 0x4ad1, 0x9091, 0x0, 0x0);
        gbc.writeMem(0xe846, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0xe848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe846));
        EXPECT(0x21, gbc.readMem(0xe847));
        // CB 21 00B4
        gbc.setState(0x7859, 0x4dd4, 0xcfe0, 0x98f1, 0xf952, 0xbbc6, 0x0, 0x0);
        gbc.writeMem(0x7859, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4dd4, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00B6
        gbc.setState(0x2b6c, 0xdf20, 0x2370, 0x9e9d, 0x865a, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdf20, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00B7
        gbc.setState(0x2648, 0x31d0, 0xfcc0, 0x2335, 0x5894, 0xf999, 0x1, 0x1);
        gbc.writeMem(0x2648, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x31d0, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00B8
        gbc.setState(0x1505, 0x995f, 0xf5d0, 0x1622, 0xaac6, 0x4167, 0x1, 0x0);
        gbc.writeMem(0x1505, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x995f, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00B9
        gbc.setState(0xbd4b, 0x76c0, 0x84a0, 0xd04a, 0xdf2c, 0xa94d, 0x0, 0x0);
        gbc.writeMem(0xbd4b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x76c0, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4b));
        EXPECT(0x21, gbc.readMem(0xbd4c));
        // CB 21 00BA
        gbc.setState(0xbc26, 0xce53, 0x6210, 0x2f5f, 0x4f6a, 0x232f, 0x1, 0x1);
        gbc.writeMem(0xbc26, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xce53, gbc.sp());
        EXPECT(0xbc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc26));
        EXPECT(0x21, gbc.readMem(0xbc27));
        // CB 21 00BB
        gbc.setState(0x3918, 0x57d0, 0xa030, 0x1031, 0xa539, 0x5f35, 0x0, 0x1);
        gbc.writeMem(0x3918, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x57d0, gbc.sp());
        EXPECT(0x391a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00BC
        gbc.setState(0x6f4, 0x6719, 0x1d50, 0xc0fb, 0xeef4, 0x5ce2, 0x1, 0x1);
        gbc.writeMem(0x6f4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00BD
        gbc.setState(0x3f11, 0x502e, 0xbc50, 0x2180, 0x8699, 0x5554, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x502e, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00BE
        gbc.setState(0xada2, 0x4baf, 0x5c10, 0x8d17, 0x5ef9, 0xd98f, 0x0, 0x1);
        gbc.writeMem(0xada2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0xada4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada2));
        EXPECT(0x21, gbc.readMem(0xada3));
        // CB 21 00BF
        gbc.setState(0xa02e, 0x4682, 0x9290, 0x2f95, 0x5ecf, 0x4406, 0x1, 0x0);
        gbc.writeMem(0xa02e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4682, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02e));
        EXPECT(0x21, gbc.readMem(0xa02f));
        // CB 21 00C0
        gbc.setState(0x3ec9, 0xa53d, 0x910, 0xdb3c, 0x28da, 0x2706, 0x1, 0x1);
        gbc.writeMem(0x3ec9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa53d, gbc.sp());
        EXPECT(0x3ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00C1
        gbc.setState(0x6292, 0xedab, 0xc1d0, 0xae44, 0x176e, 0xbcc7, 0x1, 0x1);
        gbc.writeMem(0x6292, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0x6294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00C2
        gbc.setState(0x9b4b, 0x92da, 0x5ba0, 0x97f2, 0x3ed2, 0x1473, 0x1, 0x0);
        gbc.writeMem(0x9b4b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x92da, gbc.sp());
        EXPECT(0x9b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4b));
        EXPECT(0x21, gbc.readMem(0x9b4c));
        // CB 21 00C3
        gbc.setState(0xbf, 0xe546, 0xe100, 0x99cc, 0xcb34, 0xafaa, 0x0, 0x1);
        gbc.writeMem(0xbf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00C4
        gbc.setState(0x32f2, 0x29bd, 0xfb60, 0x1db2, 0x6dba, 0x3711, 0x1, 0x1);
        gbc.writeMem(0x32f2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x29bd, gbc.sp());
        EXPECT(0x32f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00C5
        gbc.setState(0xc9ea, 0xe86e, 0x8c00, 0xe23e, 0xc053, 0xfb82, 0x1, 0x1);
        gbc.writeMem(0xc9ea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe86e, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ea));
        EXPECT(0x21, gbc.readMem(0xc9eb));
        // CB 21 00C6
        gbc.setState(0x96fe, 0xceae, 0x1f30, 0x9920, 0xe6fa, 0x4c3b, 0x0, 0x1);
        gbc.writeMem(0x96fe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fe));
        EXPECT(0x21, gbc.readMem(0x96ff));
        // CB 21 00C7
        gbc.setState(0x3c5d, 0x4c6c, 0x1350, 0x8e8d, 0xdfb6, 0xeda3, 0x1, 0x1);
        gbc.writeMem(0x3c5d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4c6c, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00C8
        gbc.setState(0x9b26, 0xc45d, 0xd900, 0x878f, 0x1c54, 0x9f53, 0x0, 0x0);
        gbc.writeMem(0x9b26, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc45d, gbc.sp());
        EXPECT(0x9b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b26));
        EXPECT(0x21, gbc.readMem(0x9b27));
        // CB 21 00C9
        gbc.setState(0x3b5d, 0xca4a, 0x30d0, 0x3180, 0x2b76, 0x3bac, 0x0, 0x1);
        gbc.writeMem(0x3b5d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00CA
        gbc.setState(0x5cc8, 0xfc4e, 0x6580, 0x1527, 0xe9fd, 0x3019, 0x0, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00CB
        gbc.setState(0xa50b, 0xbbcb, 0xb790, 0x92cd, 0xf3d8, 0x6f1, 0x0, 0x1);
        gbc.writeMem(0xa50b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbbcb, gbc.sp());
        EXPECT(0xa50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50b));
        EXPECT(0x21, gbc.readMem(0xa50c));
        // CB 21 00CD
        gbc.setState(0x3661, 0xcb5, 0x3e90, 0x73e8, 0xe04f, 0xd900, 0x0, 0x1);
        gbc.writeMem(0x3661, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcb5, gbc.sp());
        EXPECT(0x3663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00CE
        gbc.setState(0x65e0, 0x498c, 0xd2a0, 0xc4fd, 0x18dc, 0x8753, 0x1, 0x0);
        gbc.writeMem(0x65e0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x498c, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00CF
        gbc.setState(0x5541, 0xdd05, 0xa100, 0x7ded, 0xb11e, 0x8080, 0x1, 0x1);
        gbc.writeMem(0x5541, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdd05, gbc.sp());
        EXPECT(0x5543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00D0
        gbc.setState(0xe44f, 0x3b9e, 0x79a0, 0x1368, 0x11f8, 0xe32b, 0x0, 0x0);
        gbc.writeMem(0xe44f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3b9e, gbc.sp());
        EXPECT(0xe451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe44f));
        EXPECT(0x21, gbc.readMem(0xe450));
        // CB 21 00D1
        gbc.setState(0x4d53, 0x1f74, 0x2d70, 0xc848, 0xb036, 0x6b5f, 0x0, 0x1);
        gbc.writeMem(0x4d53, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0x4d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00D2
        gbc.setState(0xc900, 0x2e6d, 0x5280, 0x42d2, 0x7a56, 0xb444, 0x1, 0x0);
        gbc.writeMem(0xc900, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2e6d, gbc.sp());
        EXPECT(0xc902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc900));
        EXPECT(0x21, gbc.readMem(0xc901));
        // CB 21 00D3
        gbc.setState(0x98c4, 0x5c3c, 0xa4b0, 0x8540, 0x6f04, 0x8a7f, 0x0, 0x1);
        gbc.writeMem(0x98c4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5c3c, gbc.sp());
        EXPECT(0x98c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c4));
        EXPECT(0x21, gbc.readMem(0x98c5));
        // CB 21 00D4
        gbc.setState(0xa21e, 0x3083, 0x8de0, 0x9001, 0xf181, 0x5e2f, 0x0, 0x1);
        gbc.writeMem(0xa21e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3083, gbc.sp());
        EXPECT(0xa220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21e));
        EXPECT(0x21, gbc.readMem(0xa21f));
        // CB 21 00D5
        gbc.setState(0xd085, 0xfa02, 0x3690, 0x897, 0xa067, 0xe23d, 0x1, 0x0);
        gbc.writeMem(0xd085, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0xd087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd085));
        EXPECT(0x21, gbc.readMem(0xd086));
        // CB 21 00D6
        gbc.setState(0xe6d5, 0xc982, 0x800, 0x5786, 0x84b0, 0x6581, 0x0, 0x1);
        gbc.writeMem(0xe6d5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc982, gbc.sp());
        EXPECT(0xe6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d5));
        EXPECT(0x21, gbc.readMem(0xe6d6));
        // CB 21 00D7
        gbc.setState(0xb60d, 0xcde2, 0x7e50, 0x3dd9, 0x5dc9, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0xb60d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0x21, gbc.readMem(0xb60e));
        // CB 21 00D8
        gbc.setState(0x8709, 0x1b32, 0xc8c0, 0xab24, 0x369d, 0x292, 0x0, 0x1);
        gbc.writeMem(0x8709, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0x870b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8709));
        EXPECT(0x21, gbc.readMem(0x870a));
        // CB 21 00D9
        gbc.setState(0x333e, 0xcd62, 0x98f0, 0x1b8f, 0x3a, 0x4b84, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcd62, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00DA
        gbc.setState(0x9383, 0x208f, 0xcfe0, 0xd24a, 0xf391, 0xda0, 0x0, 0x0);
        gbc.writeMem(0x9383, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x208f, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9383));
        EXPECT(0x21, gbc.readMem(0x9384));
        // CB 21 00DB
        gbc.setState(0x502e, 0xc43, 0xef00, 0x9bf8, 0x76e1, 0xa01b, 0x1, 0x0);
        gbc.writeMem(0x502e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc43, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00DC
        gbc.setState(0x9e5e, 0xdf83, 0x69a0, 0x458d, 0xfbce, 0x43, 0x0, 0x1);
        gbc.writeMem(0x9e5e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdf83, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5e));
        EXPECT(0x21, gbc.readMem(0x9e5f));
        // CB 21 00DD
        gbc.setState(0xc4ba, 0x39b0, 0x2e30, 0x64a2, 0x6ea1, 0xc619, 0x1, 0x0);
        gbc.writeMem(0xc4ba, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x39b0, gbc.sp());
        EXPECT(0xc4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ba));
        EXPECT(0x21, gbc.readMem(0xc4bb));
        // CB 21 00DE
        gbc.setState(0x489f, 0x3186, 0xbac0, 0xbc16, 0x8157, 0x3f24, 0x0, 0x0);
        gbc.writeMem(0x489f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3186, gbc.sp());
        EXPECT(0x48a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00DF
        gbc.setState(0xa46b, 0xfe13, 0xf360, 0x44ef, 0xb46, 0x5374, 0x1, 0x1);
        gbc.writeMem(0xa46b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46b));
        EXPECT(0x21, gbc.readMem(0xa46c));
        // CB 21 00E0
        gbc.setState(0x5939, 0x7de4, 0x3780, 0xe107, 0x63d9, 0xc02a, 0x1, 0x0);
        gbc.writeMem(0x5939, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7de4, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00E1
        gbc.setState(0x342c, 0xc1eb, 0xdf10, 0x3e00, 0xc8fa, 0xaa5e, 0x0, 0x1);
        gbc.writeMem(0x342c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc1eb, gbc.sp());
        EXPECT(0x342e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00E2
        gbc.setState(0xc741, 0xf2eb, 0xb2d0, 0xbf4d, 0xb10d, 0x7d5c, 0x0, 0x1);
        gbc.writeMem(0xc741, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0xc743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc741));
        EXPECT(0x21, gbc.readMem(0xc742));
        // CB 21 00E3
        gbc.setState(0x8d5f, 0x508, 0x4ad0, 0xe8e7, 0x245d, 0x5e97, 0x0, 0x1);
        gbc.writeMem(0x8d5f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x508, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5f));
        EXPECT(0x21, gbc.readMem(0x8d60));
        // CB 21 00E4
        gbc.setState(0xee49, 0xb300, 0xb770, 0xa698, 0x5043, 0xd769, 0x0, 0x0);
        gbc.writeMem(0xee49, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0xee4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee49));
        EXPECT(0x21, gbc.readMem(0xee4a));
        // CB 21 00E5
        gbc.setState(0x90d3, 0x2c78, 0x7020, 0x5f82, 0x2183, 0xe874, 0x1, 0x0);
        gbc.writeMem(0x90d3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2c78, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0x21, gbc.readMem(0x90d4));
        // CB 21 00E6
        gbc.setState(0x6c8a, 0xe8f, 0x7e80, 0x2165, 0x4e0, 0x1a71, 0x0, 0x0);
        gbc.writeMem(0x6c8a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe8f, gbc.sp());
        EXPECT(0x6c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00E8
        gbc.setState(0x516a, 0xb74d, 0x8430, 0x4d1, 0x3e1d, 0xe659, 0x1, 0x1);
        gbc.writeMem(0x516a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb74d, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00E9
        gbc.setState(0x29aa, 0xa87d, 0x5be0, 0xbfc, 0x1cf8, 0x38a1, 0x0, 0x1);
        gbc.writeMem(0x29aa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x29ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00EA
        gbc.setState(0xb30, 0x9df, 0x43f0, 0xc421, 0xc074, 0xf513, 0x1, 0x0);
        gbc.writeMem(0xb30, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00EB
        gbc.setState(0xd286, 0xf47d, 0x41c0, 0xb0e9, 0x8f12, 0x5f1, 0x0, 0x0);
        gbc.writeMem(0xd286, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd286));
        EXPECT(0x21, gbc.readMem(0xd287));
        // CB 21 00EC
        gbc.setState(0x7c8a, 0xbf30, 0x95a0, 0x691e, 0xdd5, 0xfd70, 0x1, 0x0);
        gbc.writeMem(0x7c8a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbf30, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00ED
        gbc.setState(0x78ef, 0x5fb7, 0x80e0, 0x3f0, 0xde8, 0xd00e, 0x0, 0x1);
        gbc.writeMem(0x78ef, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5fb7, gbc.sp());
        EXPECT(0x78f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00EE
        gbc.setState(0x210, 0xdfd8, 0x4650, 0xc6f1, 0x3cd7, 0x1daf, 0x1, 0x0);
        gbc.writeMem(0x210, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdfd8, gbc.sp());
        EXPECT(0x212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00EF
        gbc.setState(0xc260, 0x6bf5, 0xfca0, 0x1cde, 0x984d, 0x1d08, 0x0, 0x0);
        gbc.writeMem(0xc260, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6bf5, gbc.sp());
        EXPECT(0xc262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc260));
        EXPECT(0x21, gbc.readMem(0xc261));
        // CB 21 00F0
        gbc.setState(0xabe4, 0xd694, 0x68e0, 0x51fb, 0x39ab, 0x4cef, 0x1, 0x1);
        gbc.writeMem(0xabe4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe4));
        EXPECT(0x21, gbc.readMem(0xabe5));
        // CB 21 00F1
        gbc.setState(0xe317, 0xc44b, 0x7620, 0x2728, 0xe3ff, 0x5d3b, 0x0, 0x0);
        gbc.writeMem(0xe317, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc44b, gbc.sp());
        EXPECT(0xe319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe317));
        EXPECT(0x21, gbc.readMem(0xe318));
        // CB 21 00F2
        gbc.setState(0x2f08, 0x7fd7, 0x4130, 0x3ad3, 0x2758, 0xd0dc, 0x1, 0x1);
        gbc.writeMem(0x2f08, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7fd7, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00F3
        gbc.setState(0x2718, 0x2ee, 0xae0, 0xe24f, 0x3805, 0xe72e, 0x0, 0x0);
        gbc.writeMem(0x2718, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2ee, gbc.sp());
        EXPECT(0x271a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00F4
        gbc.setState(0x6eb8, 0xc009, 0xd760, 0xedc9, 0xc748, 0xa1d4, 0x1, 0x0);
        gbc.writeMem(0x6eb8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc009, gbc.sp());
        EXPECT(0x6eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00F5
        gbc.setState(0x5fb1, 0x8b1, 0x9be0, 0x368b, 0x3e4c, 0x58c7, 0x0, 0x1);
        gbc.writeMem(0x5fb1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8b1, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00F6
        gbc.setState(0xdf9, 0xb655, 0xf880, 0xca63, 0xa839, 0xfa7f, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0xdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00F7
        gbc.setState(0x48bc, 0xb675, 0x4890, 0x751c, 0x80b1, 0xaf15, 0x1, 0x0);
        gbc.writeMem(0x48bc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb675, gbc.sp());
        EXPECT(0x48be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00FA
        gbc.setState(0x1f82, 0x7e5f, 0x9870, 0xd488, 0x7b6e, 0xeac5, 0x1, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7e5f, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 00FB
        gbc.setState(0x94c3, 0xa920, 0x1630, 0xf390, 0x3bf8, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0x94c3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa920, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c3));
        EXPECT(0x21, gbc.readMem(0x94c4));
        // CB 21 00FC
        gbc.setState(0x6a2b, 0x1ffc, 0xb20, 0x756f, 0xb371, 0x3831, 0x0, 0x0);
        gbc.writeMem(0x6a2b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1ffc, gbc.sp());
        EXPECT(0x6a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00FD
        gbc.setState(0x1e36, 0xb9b1, 0x4150, 0xc75d, 0x3289, 0x6069, 0x0, 0x0);
        gbc.writeMem(0x1e36, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb9b1, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00FE
        gbc.setState(0x6f07, 0x77a8, 0xefe0, 0x946, 0x8f96, 0x9e6c, 0x1, 0x0);
        gbc.writeMem(0x6f07, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 00FF
        gbc.setState(0x3d86, 0x3b79, 0x7c60, 0x3848, 0x3105, 0x997d, 0x0, 0x1);
        gbc.writeMem(0x3d86, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b79, gbc.sp());
        EXPECT(0x3d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0100
        gbc.setState(0x2132, 0x3bc6, 0xc850, 0x9a55, 0x27b6, 0x2d39, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3bc6, gbc.sp());
        EXPECT(0x2134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0101
        gbc.setState(0x5698, 0x6815, 0xb180, 0xf39c, 0x8b5c, 0x8e00, 0x0, 0x1);
        gbc.writeMem(0x5698, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0102
        gbc.setState(0xe7b3, 0x5dd, 0x7590, 0xe5ad, 0x78a7, 0x174, 0x1, 0x0);
        gbc.writeMem(0xe7b3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b3));
        EXPECT(0x21, gbc.readMem(0xe7b4));
        // CB 21 0103
        gbc.setState(0x54e4, 0x640a, 0x560, 0x1f79, 0x6d74, 0x5b47, 0x0, 0x1);
        gbc.writeMem(0x54e4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x640a, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0104
        gbc.setState(0x5e5f, 0x2641, 0xb0, 0x21e1, 0xe92c, 0xd8b1, 0x1, 0x0);
        gbc.writeMem(0x5e5f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2641, gbc.sp());
        EXPECT(0x5e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0105
        gbc.setState(0xdbad, 0x9155, 0x2740, 0xf97d, 0x1dff, 0xff73, 0x1, 0x0);
        gbc.writeMem(0xdbad, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0xdbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbad));
        EXPECT(0x21, gbc.readMem(0xdbae));
        // CB 21 0106
        gbc.setState(0x4acf, 0xdb4d, 0xb340, 0xedec, 0x69cf, 0x12c2, 0x0, 0x0);
        gbc.writeMem(0x4acf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdb4d, gbc.sp());
        EXPECT(0x4ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0107
        gbc.setState(0x3e81, 0x8660, 0xa3a0, 0x83e7, 0x6600, 0xfb60, 0x1, 0x1);
        gbc.writeMem(0x3e81, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8660, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0109
        gbc.setState(0x4352, 0x6efc, 0x34b0, 0x8d4b, 0x2a7d, 0xf25, 0x1, 0x0);
        gbc.writeMem(0x4352, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6efc, gbc.sp());
        EXPECT(0x4354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 010A
        gbc.setState(0x3c4f, 0xab10, 0xf10, 0xb6ba, 0xd237, 0x27b, 0x1, 0x0);
        gbc.writeMem(0x3c4f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xab10, gbc.sp());
        EXPECT(0x3c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 010B
        gbc.setState(0xb227, 0xce13, 0x3240, 0xb164, 0xa858, 0x9e98, 0x1, 0x0);
        gbc.writeMem(0xb227, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xce13, gbc.sp());
        EXPECT(0xb229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb227));
        EXPECT(0x21, gbc.readMem(0xb228));
        // CB 21 010C
        gbc.setState(0x29bf, 0x2ff1, 0x6850, 0x72a3, 0x3221, 0xc881, 0x1, 0x0);
        gbc.writeMem(0x29bf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2ff1, gbc.sp());
        EXPECT(0x29c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 010E
        gbc.setState(0x11d7, 0xa10, 0x8fb0, 0x412c, 0x3dff, 0xffb7, 0x1, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa10, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 010F
        gbc.setState(0xcb1b, 0xac28, 0xebe0, 0xccd3, 0x9f9d, 0x437, 0x0, 0x0);
        gbc.writeMem(0xcb1b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xac28, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1b));
        EXPECT(0x21, gbc.readMem(0xcb1c));
        // CB 21 0110
        gbc.setState(0x9fbb, 0xc61a, 0x8780, 0xd8cf, 0x7df0, 0x5ab0, 0x0, 0x1);
        gbc.writeMem(0x9fbb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0x9fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbb));
        EXPECT(0x21, gbc.readMem(0x9fbc));
        // CB 21 0111
        gbc.setState(0x3dee, 0x506d, 0x6f00, 0x7c96, 0xbd93, 0x8d72, 0x0, 0x1);
        gbc.writeMem(0x3dee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x506d, gbc.sp());
        EXPECT(0x3df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0112
        gbc.setState(0x6f80, 0x6005, 0x7190, 0x9ba0, 0x5bb6, 0xe433, 0x0, 0x0);
        gbc.writeMem(0x6f80, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6005, gbc.sp());
        EXPECT(0x6f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0113
        gbc.setState(0xaf3b, 0x9866, 0x5440, 0xda, 0x3d, 0xdb1b, 0x1, 0x0);
        gbc.writeMem(0xaf3b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9866, gbc.sp());
        EXPECT(0xaf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3b));
        EXPECT(0x21, gbc.readMem(0xaf3c));
        // CB 21 0114
        gbc.setState(0x485d, 0xc27b, 0x3ba0, 0xf8bb, 0x5a7c, 0xc67e, 0x1, 0x1);
        gbc.writeMem(0x485d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc27b, gbc.sp());
        EXPECT(0x485f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0115
        gbc.setState(0xb56a, 0xfb5a, 0xdc50, 0xd882, 0xdda1, 0xc099, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfb5a, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0x21, gbc.readMem(0xb56b));
        // CB 21 0116
        gbc.setState(0x93ee, 0xdcb5, 0xc2f0, 0x2c57, 0xeddf, 0x50f4, 0x0, 0x0);
        gbc.writeMem(0x93ee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ee));
        EXPECT(0x21, gbc.readMem(0x93ef));
        // CB 21 0117
        gbc.setState(0x9526, 0x3d0b, 0xdf10, 0xb665, 0x8aa4, 0x65e8, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3d0b, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9526));
        EXPECT(0x21, gbc.readMem(0x9527));
        // CB 21 0118
        gbc.setState(0xd989, 0x63aa, 0xdf60, 0x468d, 0x7b4a, 0xa7c4, 0x1, 0x0);
        gbc.writeMem(0xd989, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x63aa, gbc.sp());
        EXPECT(0xd98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd989));
        EXPECT(0x21, gbc.readMem(0xd98a));
        // CB 21 0119
        gbc.setState(0x74da, 0x8c5f, 0x4790, 0xfec2, 0xa7e2, 0x325f, 0x0, 0x0);
        gbc.writeMem(0x74da, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8c5f, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 011B
        gbc.setState(0xe2fc, 0xe7cb, 0x9220, 0x76bf, 0x9aaa, 0x2640, 0x0, 0x0);
        gbc.writeMem(0xe2fc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe7cb, gbc.sp());
        EXPECT(0xe2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fc));
        EXPECT(0x21, gbc.readMem(0xe2fd));
        // CB 21 011C
        gbc.setState(0xd3a6, 0x4709, 0xe2a0, 0xb1aa, 0xfc03, 0xaed, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4709, gbc.sp());
        EXPECT(0xd3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a6));
        EXPECT(0x21, gbc.readMem(0xd3a7));
        // CB 21 011D
        gbc.setState(0xa7d5, 0x5ca3, 0x7b00, 0x55c2, 0x641b, 0xd606, 0x1, 0x1);
        gbc.writeMem(0xa7d5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d5));
        EXPECT(0x21, gbc.readMem(0xa7d6));
        // CB 21 011E
        gbc.setState(0x163e, 0xb407, 0x3a30, 0xd82f, 0xaf77, 0x614a, 0x0, 0x1);
        gbc.writeMem(0x163e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 011F
        gbc.setState(0x8be4, 0xe41b, 0x8820, 0x612, 0x1103, 0x173e, 0x1, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be4));
        EXPECT(0x21, gbc.readMem(0x8be5));
        // CB 21 0120
        gbc.setState(0x5e18, 0xec9, 0x2500, 0x87da, 0x4960, 0x8195, 0x1, 0x1);
        gbc.writeMem(0x5e18, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0x5e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0121
        gbc.setState(0x1794, 0x28eb, 0xf9b0, 0x3a7f, 0x5aee, 0x7a82, 0x0, 0x1);
        gbc.writeMem(0x1794, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0122
        gbc.setState(0x8b99, 0xefb3, 0xbc20, 0x3e9b, 0x1d55, 0x28e8, 0x1, 0x0);
        gbc.writeMem(0x8b99, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0x8b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b99));
        EXPECT(0x21, gbc.readMem(0x8b9a));
        // CB 21 0123
        gbc.setState(0x562f, 0x3277, 0x7600, 0x26b9, 0xa21f, 0xfaa1, 0x0, 0x1);
        gbc.writeMem(0x562f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3277, gbc.sp());
        EXPECT(0x5631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0124
        gbc.setState(0x2719, 0xd771, 0xb370, 0x35a8, 0x8e9, 0xb419, 0x1, 0x1);
        gbc.writeMem(0x2719, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd771, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0125
        gbc.setState(0x2233, 0x606c, 0x1170, 0x3e2a, 0x194c, 0xcd3d, 0x1, 0x0);
        gbc.writeMem(0x2233, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x606c, gbc.sp());
        EXPECT(0x2235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0126
        gbc.setState(0x2b0d, 0x87e3, 0xe680, 0x5b94, 0x5104, 0x8d4b, 0x1, 0x1);
        gbc.writeMem(0x2b0d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0127
        gbc.setState(0x2384, 0xbd40, 0xca00, 0xe04, 0x908c, 0xba6, 0x0, 0x0);
        gbc.writeMem(0x2384, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x2386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0128
        gbc.setState(0x5e70, 0x1f26, 0x5ba0, 0x415f, 0x6939, 0xfc35, 0x0, 0x1);
        gbc.writeMem(0x5e70, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1f26, gbc.sp());
        EXPECT(0x5e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0129
        gbc.setState(0x4c7f, 0xdca, 0xcfa0, 0x4147, 0xbcd9, 0xf94f, 0x1, 0x1);
        gbc.writeMem(0x4c7f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0x4c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 012A
        gbc.setState(0xb9, 0x8d4a, 0x5ed0, 0x240d, 0x1395, 0x3598, 0x1, 0x0);
        gbc.writeMem(0xb9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8d4a, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 012B
        gbc.setState(0x98cd, 0xf67a, 0x6410, 0xf311, 0x284d, 0x75ac, 0x0, 0x1);
        gbc.writeMem(0x98cd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf67a, gbc.sp());
        EXPECT(0x98cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cd));
        EXPECT(0x21, gbc.readMem(0x98ce));
        // CB 21 012C
        gbc.setState(0x70f1, 0xfcd6, 0x56a0, 0xc623, 0xc97e, 0xe2e1, 0x0, 0x1);
        gbc.writeMem(0x70f1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfcd6, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 012D
        gbc.setState(0xed78, 0xdcbf, 0x10a0, 0x1af9, 0x6e99, 0x66ef, 0x0, 0x0);
        gbc.writeMem(0xed78, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdcbf, gbc.sp());
        EXPECT(0xed7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed78));
        EXPECT(0x21, gbc.readMem(0xed79));
        // CB 21 012E
        gbc.setState(0x2023, 0x83cd, 0x6ef0, 0x40f, 0x573b, 0x272, 0x1, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 012F
        gbc.setState(0x784e, 0x8f5b, 0x1270, 0xa4b7, 0x1a25, 0xce0a, 0x0, 0x0);
        gbc.writeMem(0x784e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8f5b, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0130
        gbc.setState(0x4067, 0x7a79, 0xce20, 0x744a, 0x8aee, 0xd7ac, 0x1, 0x0);
        gbc.writeMem(0x4067, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7a79, gbc.sp());
        EXPECT(0x4069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0131
        gbc.setState(0x6ad3, 0xd54d, 0x9bb0, 0x662d, 0x8400, 0x22ee, 0x0, 0x1);
        gbc.writeMem(0x6ad3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x6ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0133
        gbc.setState(0x5781, 0x3d7e, 0x60f0, 0xc853, 0x5414, 0xcba0, 0x1, 0x0);
        gbc.writeMem(0x5781, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0134
        gbc.setState(0xd942, 0xe4bb, 0x13c0, 0x840c, 0xd5bb, 0xe407, 0x0, 0x0);
        gbc.writeMem(0xd942, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0xd944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd942));
        EXPECT(0x21, gbc.readMem(0xd943));
        // CB 21 0135
        gbc.setState(0x3cc7, 0xc024, 0x20e0, 0x22f4, 0x45b2, 0x3719, 0x0, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0136
        gbc.setState(0xa881, 0x200f, 0xe800, 0x8809, 0x6557, 0x2a1f, 0x1, 0x1);
        gbc.writeMem(0xa881, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0xa883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa881));
        EXPECT(0x21, gbc.readMem(0xa882));
        // CB 21 0137
        gbc.setState(0x823e, 0x2a48, 0x1960, 0x6222, 0xf74d, 0x1f21, 0x0, 0x0);
        gbc.writeMem(0x823e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2a48, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823e));
        EXPECT(0x21, gbc.readMem(0x823f));
        // CB 21 0138
        gbc.setState(0xb946, 0x7a38, 0xe3c0, 0x4eaf, 0xf4de, 0x2dc1, 0x0, 0x0);
        gbc.writeMem(0xb946, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7a38, gbc.sp());
        EXPECT(0xb948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb946));
        EXPECT(0x21, gbc.readMem(0xb947));
        // CB 21 0139
        gbc.setState(0x114c, 0xe739, 0xf0, 0x81e1, 0x805d, 0xb981, 0x1, 0x1);
        gbc.writeMem(0x114c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0x114e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 013A
        gbc.setState(0x5eec, 0xff0, 0xa880, 0x7cfc, 0x4370, 0x46a8, 0x0, 0x0);
        gbc.writeMem(0x5eec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xff0, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 013B
        gbc.setState(0x9e3c, 0x6465, 0xf8b0, 0xb8f, 0x29e7, 0xa3ef, 0x1, 0x1);
        gbc.writeMem(0x9e3c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6465, gbc.sp());
        EXPECT(0x9e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3c));
        EXPECT(0x21, gbc.readMem(0x9e3d));
        // CB 21 013C
        gbc.setState(0x842c, 0x733d, 0x9dd0, 0x182a, 0x33d4, 0x48b, 0x0, 0x1);
        gbc.writeMem(0x842c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x733d, gbc.sp());
        EXPECT(0x842e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x842c));
        EXPECT(0x21, gbc.readMem(0x842d));
        // CB 21 013D
        gbc.setState(0x771f, 0x9382, 0x1b50, 0xc5dc, 0x887b, 0x2c98, 0x0, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9382, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 013E
        gbc.setState(0x1211, 0x8c85, 0xd8f0, 0x2310, 0x77c0, 0x32ee, 0x0, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 013F
        gbc.setState(0x542e, 0xdfab, 0xef0, 0xbff, 0x8cc2, 0x69c0, 0x0, 0x1);
        gbc.writeMem(0x542e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdfab, gbc.sp());
        EXPECT(0x5430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0140
        gbc.setState(0x1efe, 0xf64e, 0x6a50, 0x7e6b, 0xb851, 0x36bd, 0x0, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0141
        gbc.setState(0xe1ea, 0x20c4, 0xcb20, 0xfe79, 0x1525, 0xdc42, 0x0, 0x1);
        gbc.writeMem(0xe1ea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ea));
        EXPECT(0x21, gbc.readMem(0xe1eb));
        // CB 21 0143
        gbc.setState(0xbe50, 0xca11, 0x1100, 0xb225, 0x16eb, 0xf225, 0x1, 0x1);
        gbc.writeMem(0xbe50, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xca11, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe50));
        EXPECT(0x21, gbc.readMem(0xbe51));
        // CB 21 0144
        gbc.setState(0x368e, 0xd35e, 0x9730, 0xfaee, 0x9d12, 0x61df, 0x0, 0x1);
        gbc.writeMem(0x368e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0145
        gbc.setState(0xaad3, 0xebaf, 0x1090, 0xdf7e, 0x795a, 0x3cd3, 0x1, 0x0);
        gbc.writeMem(0xaad3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0x21, gbc.readMem(0xaad4));
        // CB 21 0146
        gbc.setState(0x5bdd, 0x3eab, 0x65a0, 0xa138, 0xf401, 0x3d70, 0x1, 0x0);
        gbc.writeMem(0x5bdd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3eab, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0147
        gbc.setState(0x4b4a, 0xe4c0, 0x3fd0, 0xd8da, 0xd07c, 0x78c2, 0x0, 0x1);
        gbc.writeMem(0x4b4a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0148
        gbc.setState(0xc8c7, 0x7499, 0x81d0, 0xecc5, 0x8cdb, 0x794a, 0x0, 0x1);
        gbc.writeMem(0xc8c7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0xc8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c7));
        EXPECT(0x21, gbc.readMem(0xc8c8));
        // CB 21 0149
        gbc.setState(0x4fa, 0xc674, 0x6e20, 0x65b8, 0xce59, 0x3aa6, 0x0, 0x1);
        gbc.writeMem(0x4fa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc674, gbc.sp());
        EXPECT(0x4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 014A
        gbc.setState(0xca5c, 0x21b7, 0xa160, 0xc173, 0x7e43, 0x62b1, 0x1, 0x1);
        gbc.writeMem(0xca5c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x21b7, gbc.sp());
        EXPECT(0xca5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5c));
        EXPECT(0x21, gbc.readMem(0xca5d));
        // CB 21 014B
        gbc.setState(0x4eed, 0x5a06, 0x9730, 0xce82, 0xce2d, 0xd9a6, 0x1, 0x1);
        gbc.writeMem(0x4eed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0x4eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 014C
        gbc.setState(0xa4d0, 0x52f6, 0xf810, 0x51dc, 0x978b, 0x80b7, 0x0, 0x0);
        gbc.writeMem(0xa4d0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x52f6, gbc.sp());
        EXPECT(0xa4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d0));
        EXPECT(0x21, gbc.readMem(0xa4d1));
        // CB 21 014D
        gbc.setState(0x4cd9, 0x9ec9, 0x16e0, 0x4aa8, 0x9723, 0x8166, 0x0, 0x1);
        gbc.writeMem(0x4cd9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 014E
        gbc.setState(0x4970, 0xa792, 0x70d0, 0xe351, 0xd022, 0x8e5a, 0x1, 0x0);
        gbc.writeMem(0x4970, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0x4972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 014F
        gbc.setState(0x3c17, 0xc515, 0x55c0, 0x42c3, 0x8bf0, 0x35ed, 0x1, 0x1);
        gbc.writeMem(0x3c17, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x3c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0150
        gbc.setState(0xecab, 0x43cf, 0xda20, 0x263e, 0x7d5f, 0xdec0, 0x1, 0x1);
        gbc.writeMem(0xecab, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x43cf, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecab));
        EXPECT(0x21, gbc.readMem(0xecac));
        // CB 21 0151
        gbc.setState(0xccfc, 0x5e9a, 0xbb20, 0x2d9f, 0xc2c3, 0x64c9, 0x1, 0x1);
        gbc.writeMem(0xccfc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0xccfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfc));
        EXPECT(0x21, gbc.readMem(0xccfd));
        // CB 21 0152
        gbc.setState(0x2782, 0x74cf, 0xa180, 0xf950, 0xe208, 0x9540, 0x1, 0x1);
        gbc.writeMem(0x2782, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0153
        gbc.setState(0xaedd, 0xa1b6, 0xa7b0, 0x614d, 0x8dee, 0x4a6, 0x0, 0x0);
        gbc.writeMem(0xaedd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedd));
        EXPECT(0x21, gbc.readMem(0xaede));
        // CB 21 0154
        gbc.setState(0x3563, 0x31ec, 0x24e0, 0xf986, 0xf984, 0x90ac, 0x1, 0x0);
        gbc.writeMem(0x3563, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x31ec, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0155
        gbc.setState(0x67ac, 0xaeef, 0xe530, 0x9a9d, 0xeefa, 0xb275, 0x1, 0x0);
        gbc.writeMem(0x67ac, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaeef, gbc.sp());
        EXPECT(0x67ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0157
        gbc.setState(0x3b91, 0x56cb, 0x12d0, 0x5e90, 0xe0f, 0x3c87, 0x0, 0x1);
        gbc.writeMem(0x3b91, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0x3b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0158
        gbc.setState(0xa22c, 0xa613, 0x7d0, 0x1b92, 0xac0, 0xcf2d, 0x0, 0x1);
        gbc.writeMem(0xa22c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa613, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22c));
        EXPECT(0x21, gbc.readMem(0xa22d));
        // CB 21 0159
        gbc.setState(0x9b68, 0xdc05, 0xbcd0, 0xe880, 0xa8c2, 0x6e51, 0x0, 0x0);
        gbc.writeMem(0x9b68, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdc05, gbc.sp());
        EXPECT(0x9b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b68));
        EXPECT(0x21, gbc.readMem(0x9b69));
        // CB 21 015A
        gbc.setState(0x1b36, 0x68d5, 0xe1e0, 0x20ba, 0x999e, 0x4110, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x68d5, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 015B
        gbc.setState(0x41db, 0x8239, 0x17c0, 0x4d69, 0x4e1c, 0x2239, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8239, gbc.sp());
        EXPECT(0x41dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 015C
        gbc.setState(0xe0a3, 0x285, 0xc450, 0xd3f8, 0xa550, 0x75cb, 0x0, 0x1);
        gbc.writeMem(0xe0a3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0xe0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a3));
        EXPECT(0x21, gbc.readMem(0xe0a4));
        // CB 21 015D
        gbc.setState(0xcca6, 0x3ffc, 0xd750, 0x53f5, 0x56c2, 0x38fc, 0x0, 0x0);
        gbc.writeMem(0xcca6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3ffc, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca6));
        EXPECT(0x21, gbc.readMem(0xcca7));
        // CB 21 015E
        gbc.setState(0x54fc, 0x918b, 0xeef0, 0xd098, 0x9698, 0x1d15, 0x0, 0x0);
        gbc.writeMem(0x54fc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 015F
        gbc.setState(0xd32c, 0x4f5c, 0xb1f0, 0x8641, 0x38fc, 0x9a22, 0x1, 0x0);
        gbc.writeMem(0xd32c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4f5c, gbc.sp());
        EXPECT(0xd32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32c));
        EXPECT(0x21, gbc.readMem(0xd32d));
        // CB 21 0160
        gbc.setState(0x1479, 0x9228, 0x620, 0x42d7, 0xde6f, 0xc54c, 0x1, 0x1);
        gbc.writeMem(0x1479, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9228, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0161
        gbc.setState(0x29e7, 0x862a, 0x6bb0, 0xa190, 0xdb34, 0xfc37, 0x0, 0x0);
        gbc.writeMem(0x29e7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x862a, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0162
        gbc.setState(0xd12e, 0x755f, 0x4840, 0xdddc, 0xb996, 0xe581, 0x0, 0x1);
        gbc.writeMem(0xd12e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x755f, gbc.sp());
        EXPECT(0xd130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12e));
        EXPECT(0x21, gbc.readMem(0xd12f));
        // CB 21 0163
        gbc.setState(0xacf1, 0x60ad, 0xef50, 0x1b16, 0x5c15, 0x42b7, 0x1, 0x1);
        gbc.writeMem(0xacf1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x60ad, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf1));
        EXPECT(0x21, gbc.readMem(0xacf2));
        // CB 21 0164
        gbc.setState(0x9849, 0xf634, 0x4140, 0xb01c, 0xeff5, 0x94b4, 0x0, 0x1);
        gbc.writeMem(0x9849, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf634, gbc.sp());
        EXPECT(0x984b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9849));
        EXPECT(0x21, gbc.readMem(0x984a));
        // CB 21 0165
        gbc.setState(0x10d6, 0x52e5, 0x7000, 0xdb0b, 0xc177, 0x327e, 0x0, 0x1);
        gbc.writeMem(0x10d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x52e5, gbc.sp());
        EXPECT(0x10d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0166
        gbc.setState(0x5f4c, 0xb144, 0x12d0, 0x19c7, 0xa92f, 0x70fc, 0x1, 0x1);
        gbc.writeMem(0x5f4c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb144, gbc.sp());
        EXPECT(0x5f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0167
        gbc.setState(0xe1b1, 0xead, 0x98a0, 0xf8a2, 0x41b3, 0x176b, 0x1, 0x0);
        gbc.writeMem(0xe1b1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b1));
        EXPECT(0x21, gbc.readMem(0xe1b2));
        // CB 21 0168
        gbc.setState(0x419d, 0x7871, 0xe510, 0xe153, 0x2ec8, 0xc8f2, 0x1, 0x0);
        gbc.writeMem(0x419d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7871, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0169
        gbc.setState(0x8f36, 0xc995, 0x8f10, 0xaa16, 0xfb72, 0xffc0, 0x0, 0x0);
        gbc.writeMem(0x8f36, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0x8f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f36));
        EXPECT(0x21, gbc.readMem(0x8f37));
        // CB 21 016A
        gbc.setState(0x37d3, 0xbe1c, 0x1790, 0x1c5c, 0xc290, 0x1ccc, 0x1, 0x1);
        gbc.writeMem(0x37d3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 016B
        gbc.setState(0xb323, 0xd5b0, 0x3a30, 0x38ff, 0x8997, 0xba2a, 0x1, 0x1);
        gbc.writeMem(0xb323, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd5b0, gbc.sp());
        EXPECT(0xb325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb323));
        EXPECT(0x21, gbc.readMem(0xb324));
        // CB 21 016C
        gbc.setState(0x1084, 0x70ec, 0x7870, 0x1b42, 0x8e6d, 0x5431, 0x1, 0x0);
        gbc.writeMem(0x1084, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70ec, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 016D
        gbc.setState(0xaa, 0xac9b, 0x44b0, 0x6c91, 0x5a6c, 0xe312, 0x0, 0x0);
        gbc.writeMem(0xaa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xac9b, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 016E
        gbc.setState(0x761a, 0x362, 0xc8d0, 0x849b, 0xdef3, 0xbfe7, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 016F
        gbc.setState(0x87c0, 0x433a, 0x8100, 0x1fd8, 0x66ea, 0x7483, 0x1, 0x0);
        gbc.writeMem(0x87c0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x433a, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c0));
        EXPECT(0x21, gbc.readMem(0x87c1));
        // CB 21 0170
        gbc.setState(0xa70e, 0x111e, 0xd1d0, 0xbe99, 0x8e97, 0xb3d, 0x0, 0x1);
        gbc.writeMem(0xa70e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70e));
        EXPECT(0x21, gbc.readMem(0xa70f));
        // CB 21 0171
        gbc.setState(0x1249, 0x15cd, 0x4440, 0x101b, 0x94cd, 0xe9f1, 0x0, 0x0);
        gbc.writeMem(0x1249, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x124b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0172
        gbc.setState(0x16, 0xfb67, 0x130, 0x5a59, 0xc034, 0xd124, 0x0, 0x0);
        gbc.writeMem(0x16, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfb67, gbc.sp());
        EXPECT(0x18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0173
        gbc.setState(0x8bd9, 0xc0ff, 0x3610, 0x85b9, 0x3390, 0xee65, 0x1, 0x0);
        gbc.writeMem(0x8bd9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc0ff, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd9));
        EXPECT(0x21, gbc.readMem(0x8bda));
        // CB 21 0174
        gbc.setState(0x23eb, 0xbdce, 0xb480, 0x1c51, 0x321a, 0xba2b, 0x1, 0x0);
        gbc.writeMem(0x23eb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbdce, gbc.sp());
        EXPECT(0x23ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0175
        gbc.setState(0xb542, 0x3b71, 0x8140, 0xd985, 0x981b, 0x1efd, 0x0, 0x1);
        gbc.writeMem(0xb542, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0xb544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb542));
        EXPECT(0x21, gbc.readMem(0xb543));
        // CB 21 0176
        gbc.setState(0xdd85, 0x4051, 0xabe0, 0x8271, 0x7648, 0xdc18, 0x1, 0x0);
        gbc.writeMem(0xdd85, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd85));
        EXPECT(0x21, gbc.readMem(0xdd86));
        // CB 21 0177
        gbc.setState(0xc55b, 0x40df, 0x2500, 0x1316, 0x9e36, 0x3323, 0x1, 0x0);
        gbc.writeMem(0xc55b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55b));
        EXPECT(0x21, gbc.readMem(0xc55c));
        // CB 21 0178
        gbc.setState(0xb071, 0x267a, 0x31f0, 0x4f3, 0x7770, 0x47e1, 0x1, 0x1);
        gbc.writeMem(0xb071, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb071));
        EXPECT(0x21, gbc.readMem(0xb072));
        // CB 21 0179
        gbc.setState(0x21a4, 0x15ef, 0x12f0, 0x8037, 0x3fa7, 0x72cf, 0x0, 0x0);
        gbc.writeMem(0x21a4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x15ef, gbc.sp());
        EXPECT(0x21a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 017A
        gbc.setState(0x73a, 0xea6, 0xa2b0, 0x857f, 0xd7aa, 0xb398, 0x0, 0x1);
        gbc.writeMem(0x73a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 017B
        gbc.setState(0x5167, 0xdc8e, 0xc630, 0xa36, 0xf60f, 0x2d1d, 0x1, 0x0);
        gbc.writeMem(0x5167, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdc8e, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 017E
        gbc.setState(0x2dc6, 0xa3f6, 0xfca0, 0xce5, 0x9437, 0x606a, 0x1, 0x1);
        gbc.writeMem(0x2dc6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 017F
        gbc.setState(0xe669, 0xaf3a, 0x6a10, 0x350, 0xbff6, 0x9a5f, 0x0, 0x0);
        gbc.writeMem(0xe669, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe669));
        EXPECT(0x21, gbc.readMem(0xe66a));
        // CB 21 0180
        gbc.setState(0x11de, 0xea06, 0xedc0, 0xe66f, 0x61bd, 0xbc70, 0x1, 0x0);
        gbc.writeMem(0x11de, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0x11e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0181
        gbc.setState(0xe3c3, 0x87c9, 0xd670, 0xc13, 0x7688, 0x60fa, 0x1, 0x1);
        gbc.writeMem(0xe3c3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x87c9, gbc.sp());
        EXPECT(0xe3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c3));
        EXPECT(0x21, gbc.readMem(0xe3c4));
        // CB 21 0182
        gbc.setState(0x9239, 0x3fd0, 0xd870, 0xdf92, 0x5652, 0x281c, 0x1, 0x1);
        gbc.writeMem(0x9239, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3fd0, gbc.sp());
        EXPECT(0x923b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9239));
        EXPECT(0x21, gbc.readMem(0x923a));
        // CB 21 0183
        gbc.setState(0x6e54, 0x1049, 0x4910, 0x7e42, 0xd3d3, 0x735c, 0x0, 0x0);
        gbc.writeMem(0x6e54, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1049, gbc.sp());
        EXPECT(0x6e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0184
        gbc.setState(0x70f1, 0x246f, 0x31c0, 0xce69, 0x16b4, 0x97ae, 0x0, 0x1);
        gbc.writeMem(0x70f1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x246f, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0185
        gbc.setState(0xa227, 0x8b2b, 0x9550, 0x6130, 0x7c75, 0xf4bc, 0x0, 0x0);
        gbc.writeMem(0xa227, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa227));
        EXPECT(0x21, gbc.readMem(0xa228));
        // CB 21 0186
        gbc.setState(0x53fc, 0xa975, 0x5520, 0x56bc, 0xc01f, 0x44ef, 0x0, 0x0);
        gbc.writeMem(0x53fc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0x53fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0187
        gbc.setState(0x84d6, 0xfa21, 0x43e0, 0x735b, 0x9e71, 0xa5b9, 0x0, 0x1);
        gbc.writeMem(0x84d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfa21, gbc.sp());
        EXPECT(0x84d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d6));
        EXPECT(0x21, gbc.readMem(0x84d7));
        // CB 21 0188
        gbc.setState(0xad89, 0xa865, 0xcb40, 0x8e92, 0xe85f, 0x2646, 0x0, 0x0);
        gbc.writeMem(0xad89, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad89));
        EXPECT(0x21, gbc.readMem(0xad8a));
        // CB 21 0189
        gbc.setState(0x717e, 0xa418, 0xb450, 0x2828, 0xd7b3, 0xdb7a, 0x1, 0x1);
        gbc.writeMem(0x717e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa418, gbc.sp());
        EXPECT(0x7180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 018A
        gbc.setState(0xbe7c, 0x3cac, 0xb9f0, 0x93cb, 0xd125, 0xd9c8, 0x1, 0x0);
        gbc.writeMem(0xbe7c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3cac, gbc.sp());
        EXPECT(0xbe7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7c));
        EXPECT(0x21, gbc.readMem(0xbe7d));
        // CB 21 018B
        gbc.setState(0x9c03, 0x50, 0x4ab0, 0x85, 0x47b3, 0xf8c5, 0x0, 0x0);
        gbc.writeMem(0x9c03, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x50, gbc.sp());
        EXPECT(0x9c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c03));
        EXPECT(0x21, gbc.readMem(0x9c04));
        // CB 21 018C
        gbc.setState(0xf63, 0x2f89, 0xb580, 0x5b23, 0xc4a5, 0xb68d, 0x0, 0x1);
        gbc.writeMem(0xf63, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2f89, gbc.sp());
        EXPECT(0xf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 018D
        gbc.setState(0x4e2e, 0x3012, 0x7970, 0x6008, 0xb116, 0xe6bc, 0x1, 0x0);
        gbc.writeMem(0x4e2e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3012, gbc.sp());
        EXPECT(0x4e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 018E
        gbc.setState(0xe7fc, 0x3ad2, 0xc1b0, 0x8ff9, 0xac6c, 0xd9e1, 0x0, 0x0);
        gbc.writeMem(0xe7fc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ad2, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fc));
        EXPECT(0x21, gbc.readMem(0xe7fd));
        // CB 21 0190
        gbc.setState(0x53a9, 0x46c1, 0x2af0, 0x73ab, 0xca90, 0xb2e1, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0191
        gbc.setState(0x5708, 0xd92, 0x3b0, 0xf602, 0xb0e5, 0x2236, 0x1, 0x1);
        gbc.writeMem(0x5708, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x570a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0192
        gbc.setState(0x8e7d, 0x6fe1, 0x8a50, 0x9735, 0x61ac, 0x740f, 0x1, 0x0);
        gbc.writeMem(0x8e7d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7d));
        EXPECT(0x21, gbc.readMem(0x8e7e));
        // CB 21 0193
        gbc.setState(0x9567, 0x2735, 0xa880, 0x6fe5, 0xcc40, 0x3523, 0x0, 0x0);
        gbc.writeMem(0x9567, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2735, gbc.sp());
        EXPECT(0x9569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9567));
        EXPECT(0x21, gbc.readMem(0x9568));
        // CB 21 0194
        gbc.setState(0x27bc, 0xe771, 0x6000, 0x7429, 0x48ce, 0xf1cd, 0x1, 0x1);
        gbc.writeMem(0x27bc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe771, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0195
        gbc.setState(0x4c52, 0xf181, 0x6cc0, 0xaedc, 0x602e, 0x6c04, 0x0, 0x1);
        gbc.writeMem(0x4c52, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0196
        gbc.setState(0x3a51, 0x3751, 0x17f0, 0xfc28, 0x28f1, 0x81ba, 0x1, 0x1);
        gbc.writeMem(0x3a51, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3751, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0197
        gbc.setState(0x7784, 0x5c35, 0xe30, 0x825e, 0xa15c, 0x49d1, 0x1, 0x0);
        gbc.writeMem(0x7784, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5c35, gbc.sp());
        EXPECT(0x7786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0198
        gbc.setState(0xae2e, 0xf167, 0xb910, 0xefce, 0xbc99, 0xa927, 0x0, 0x0);
        gbc.writeMem(0xae2e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0xae30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2e));
        EXPECT(0x21, gbc.readMem(0xae2f));
        // CB 21 0199
        gbc.setState(0x64bd, 0x5ab7, 0xac90, 0xfcb9, 0x116b, 0x8655, 0x1, 0x0);
        gbc.writeMem(0x64bd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5ab7, gbc.sp());
        EXPECT(0x64bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 019A
        gbc.setState(0x97a5, 0x32d2, 0x6dc0, 0xbbd6, 0x66bc, 0xde94, 0x1, 0x0);
        gbc.writeMem(0x97a5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x32d2, gbc.sp());
        EXPECT(0x97a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a5));
        EXPECT(0x21, gbc.readMem(0x97a6));
        // CB 21 019B
        gbc.setState(0xcdc2, 0xf6eb, 0x31b0, 0xfce6, 0xfdc, 0x4d52, 0x0, 0x0);
        gbc.writeMem(0xcdc2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0xcdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc2));
        EXPECT(0x21, gbc.readMem(0xcdc3));
        // CB 21 019C
        gbc.setState(0x98eb, 0xb15b, 0xfe70, 0xa0c6, 0x6c, 0x1f7c, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98eb));
        EXPECT(0x21, gbc.readMem(0x98ec));
        // CB 21 019D
        gbc.setState(0xd4b3, 0xf040, 0x4980, 0xa831, 0xec1f, 0x9efb, 0x0, 0x0);
        gbc.writeMem(0xd4b3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf040, gbc.sp());
        EXPECT(0xd4b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b3));
        EXPECT(0x21, gbc.readMem(0xd4b4));
        // CB 21 019E
        gbc.setState(0xce70, 0x9062, 0x6140, 0x2d3d, 0x87d8, 0x2b13, 0x1, 0x1);
        gbc.writeMem(0xce70, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9062, gbc.sp());
        EXPECT(0xce72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce70));
        EXPECT(0x21, gbc.readMem(0xce71));
        // CB 21 019F
        gbc.setState(0xc332, 0xc05, 0xb810, 0xb616, 0x337a, 0xa1ce, 0x1, 0x1);
        gbc.writeMem(0xc332, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc05, gbc.sp());
        EXPECT(0xc334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc332));
        EXPECT(0x21, gbc.readMem(0xc333));
        // CB 21 01A0
        gbc.setState(0x4ae9, 0x62ba, 0xe150, 0x387d, 0x3f38, 0x7af2, 0x1, 0x1);
        gbc.writeMem(0x4ae9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x62ba, gbc.sp());
        EXPECT(0x4aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01A2
        gbc.setState(0x391, 0x42e3, 0x2500, 0xa14f, 0x6bf0, 0xcedd, 0x1, 0x1);
        gbc.writeMem(0x391, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0x393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01A3
        gbc.setState(0x16bb, 0x4994, 0xd8d0, 0xc2c3, 0x4e58, 0x8011, 0x1, 0x0);
        gbc.writeMem(0x16bb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0x16bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01A4
        gbc.setState(0x898a, 0x4aa2, 0x7860, 0xb059, 0x2c9f, 0xc45e, 0x0, 0x0);
        gbc.writeMem(0x898a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4aa2, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898a));
        EXPECT(0x21, gbc.readMem(0x898b));
        // CB 21 01A6
        gbc.setState(0x9d3a, 0xb616, 0x5aa0, 0x4bc6, 0x4db6, 0x382d, 0x0, 0x1);
        gbc.writeMem(0x9d3a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb616, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3a));
        EXPECT(0x21, gbc.readMem(0x9d3b));
        // CB 21 01A7
        gbc.setState(0x9dca, 0xbc59, 0x12e0, 0x61d8, 0x35b8, 0xb8e9, 0x0, 0x0);
        gbc.writeMem(0x9dca, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x9dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dca));
        EXPECT(0x21, gbc.readMem(0x9dcb));
        // CB 21 01A8
        gbc.setState(0xb75f, 0x86fa, 0x19d0, 0xd98a, 0x9437, 0xe564, 0x1, 0x1);
        gbc.writeMem(0xb75f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x86fa, gbc.sp());
        EXPECT(0xb761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75f));
        EXPECT(0x21, gbc.readMem(0xb760));
        // CB 21 01A9
        gbc.setState(0x5b2d, 0xf41f, 0x7c00, 0x90e, 0x6b0a, 0xe2c5, 0x1, 0x0);
        gbc.writeMem(0x5b2d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf41f, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01AA
        gbc.setState(0xa603, 0x2290, 0x2580, 0x8667, 0x130, 0x1d26, 0x1, 0x1);
        gbc.writeMem(0xa603, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0xa605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa603));
        EXPECT(0x21, gbc.readMem(0xa604));
        // CB 21 01AB
        gbc.setState(0x62b0, 0x3615, 0x5b40, 0x38f7, 0xf7ce, 0x21e3, 0x1, 0x0);
        gbc.writeMem(0x62b0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01AC
        gbc.setState(0x571a, 0x62ce, 0x1cf0, 0x3f7f, 0x6628, 0x53b7, 0x1, 0x1);
        gbc.writeMem(0x571a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0x571c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01AE
        gbc.setState(0x5ee6, 0xaeba, 0x2600, 0xbe1, 0xe923, 0x317e, 0x0, 0x0);
        gbc.writeMem(0x5ee6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaeba, gbc.sp());
        EXPECT(0x5ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01AF
        gbc.setState(0xc820, 0x8ee9, 0xff80, 0x6e8f, 0x2289, 0x262f, 0x1, 0x1);
        gbc.writeMem(0xc820, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8ee9, gbc.sp());
        EXPECT(0xc822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc820));
        EXPECT(0x21, gbc.readMem(0xc821));
        // CB 21 01B0
        gbc.setState(0xdc02, 0xebd9, 0x5a50, 0xa37, 0x8f95, 0xd3ab, 0x1, 0x1);
        gbc.writeMem(0xdc02, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xebd9, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc02));
        EXPECT(0x21, gbc.readMem(0xdc03));
        // CB 21 01B1
        gbc.setState(0x72ff, 0xa7d6, 0x2890, 0xf9ac, 0x6357, 0xb542, 0x1, 0x1);
        gbc.writeMem(0x72ff, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa7d6, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01B2
        gbc.setState(0x1cfe, 0xc85, 0x5280, 0x9915, 0xe78c, 0x7eaf, 0x1, 0x1);
        gbc.writeMem(0x1cfe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc85, gbc.sp());
        EXPECT(0x1d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01B4
        gbc.setState(0x48fe, 0x7b29, 0x6170, 0x9eda, 0x32d8, 0x58f6, 0x1, 0x0);
        gbc.writeMem(0x48fe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7b29, gbc.sp());
        EXPECT(0x4900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01B5
        gbc.setState(0xe51c, 0x3c9, 0xe5c0, 0xf443, 0xdd2f, 0xd904, 0x1, 0x0);
        gbc.writeMem(0xe51c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c9, gbc.sp());
        EXPECT(0xe51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51c));
        EXPECT(0x21, gbc.readMem(0xe51d));
        // CB 21 01B7
        gbc.setState(0x423c, 0xf9ea, 0x350, 0x7648, 0xb3d6, 0xfee0, 0x1, 0x1);
        gbc.writeMem(0x423c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf9ea, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01B8
        gbc.setState(0xd105, 0xf073, 0x1170, 0x45c6, 0x679c, 0x4ab3, 0x1, 0x1);
        gbc.writeMem(0xd105, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf073, gbc.sp());
        EXPECT(0xd107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd105));
        EXPECT(0x21, gbc.readMem(0xd106));
        // CB 21 01B9
        gbc.setState(0xea, 0x4662, 0x8400, 0xa49f, 0x4d26, 0xc8a1, 0x1, 0x1);
        gbc.writeMem(0xea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4662, gbc.sp());
        EXPECT(0xec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01BC
        gbc.setState(0x967f, 0xa1f1, 0xac30, 0x6ead, 0x3082, 0x1ca, 0x1, 0x0);
        gbc.writeMem(0x967f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0x9681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967f));
        EXPECT(0x21, gbc.readMem(0x9680));
        // CB 21 01BD
        gbc.setState(0x731, 0xd4c1, 0xc700, 0x6765, 0x83d3, 0xb578, 0x0, 0x0);
        gbc.writeMem(0x731, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd4c1, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01BE
        gbc.setState(0xab54, 0x9217, 0x8990, 0xfc3d, 0x6471, 0xfe51, 0x0, 0x0);
        gbc.writeMem(0xab54, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9217, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab54));
        EXPECT(0x21, gbc.readMem(0xab55));
        // CB 21 01BF
        gbc.setState(0xda57, 0x7d1f, 0xb790, 0xec10, 0x6c7c, 0xe0c1, 0x0, 0x1);
        gbc.writeMem(0xda57, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7d1f, gbc.sp());
        EXPECT(0xda59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda57));
        EXPECT(0x21, gbc.readMem(0xda58));
        // CB 21 01C0
        gbc.setState(0x53fb, 0x1e89, 0x1b90, 0x193, 0x7d95, 0xb2b, 0x1, 0x1);
        gbc.writeMem(0x53fb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1e89, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01C1
        gbc.setState(0x4633, 0x1264, 0xcf80, 0x8c86, 0xf6fb, 0xab06, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1264, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01C2
        gbc.setState(0x1b5b, 0x3653, 0x3580, 0x9855, 0x1af7, 0x9277, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3653, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01C4
        gbc.setState(0xa09f, 0xd6cf, 0xa1a0, 0xe089, 0xceee, 0x4095, 0x0, 0x1);
        gbc.writeMem(0xa09f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09f));
        EXPECT(0x21, gbc.readMem(0xa0a0));
        // CB 21 01C5
        gbc.setState(0x1fb7, 0x8f7, 0x7a00, 0x61f8, 0xe928, 0x6d0e, 0x1, 0x1);
        gbc.writeMem(0x1fb7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8f7, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01C6
        gbc.setState(0xc1fd, 0x142c, 0x3c20, 0xf1b6, 0xcc43, 0x9602, 0x0, 0x1);
        gbc.writeMem(0xc1fd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0xc1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fd));
        EXPECT(0x21, gbc.readMem(0xc1fe));
        // CB 21 01C7
        gbc.setState(0x147d, 0xf610, 0x3c40, 0xc8a2, 0x2d40, 0x737c, 0x0, 0x1);
        gbc.writeMem(0x147d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0x147f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01C8
        gbc.setState(0x82be, 0x4995, 0xd240, 0xe295, 0xcea9, 0x3e2c, 0x1, 0x0);
        gbc.writeMem(0x82be, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0x82c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82be));
        EXPECT(0x21, gbc.readMem(0x82bf));
        // CB 21 01C9
        gbc.setState(0x8c38, 0x74b7, 0x85a0, 0x68be, 0xa0e8, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x8c38, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x74b7, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c38));
        EXPECT(0x21, gbc.readMem(0x8c39));
        // CB 21 01CA
        gbc.setState(0xa045, 0x4c9f, 0x84b0, 0x67a0, 0x7d89, 0xae82, 0x1, 0x0);
        gbc.writeMem(0xa045, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4c9f, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa045));
        EXPECT(0x21, gbc.readMem(0xa046));
        // CB 21 01CB
        gbc.setState(0x2d80, 0xc399, 0x9160, 0x6166, 0x4b0d, 0x32ca, 0x1, 0x1);
        gbc.writeMem(0x2d80, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01CC
        gbc.setState(0x7752, 0xbac4, 0x20b0, 0x9a6, 0xd542, 0xd18f, 0x1, 0x0);
        gbc.writeMem(0x7752, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbac4, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01CD
        gbc.setState(0x9925, 0xe15f, 0x2620, 0x79cd, 0xdbdc, 0xd7ea, 0x0, 0x0);
        gbc.writeMem(0x9925, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9925));
        EXPECT(0x21, gbc.readMem(0x9926));
        // CB 21 01CE
        gbc.setState(0x71d9, 0x9141, 0xb440, 0xec6d, 0xc87d, 0xc6d2, 0x0, 0x1);
        gbc.writeMem(0x71d9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x71db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01D0
        gbc.setState(0x70f2, 0x4036, 0x23d0, 0x68cc, 0xbf35, 0x230c, 0x1, 0x0);
        gbc.writeMem(0x70f2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4036, gbc.sp());
        EXPECT(0x70f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D1
        gbc.setState(0x52f8, 0xafc5, 0x5ee0, 0xfab8, 0x8291, 0xb34, 0x0, 0x1);
        gbc.writeMem(0x52f8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D2
        gbc.setState(0x65f2, 0xa2d8, 0xcda0, 0xff81, 0x4322, 0xdfd6, 0x0, 0x1);
        gbc.writeMem(0x65f2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa2d8, gbc.sp());
        EXPECT(0x65f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D3
        gbc.setState(0x725e, 0x9f51, 0xff50, 0xd6, 0x9c67, 0x98ee, 0x0, 0x0);
        gbc.writeMem(0x725e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9f51, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D4
        gbc.setState(0x3a5, 0x1832, 0x900, 0xc5fa, 0x7a74, 0xe9f9, 0x0, 0x0);
        gbc.writeMem(0x3a5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D5
        gbc.setState(0x27a3, 0x6db4, 0x5ee0, 0x6f0e, 0xbabc, 0xe7f2, 0x1, 0x0);
        gbc.writeMem(0x27a3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6db4, gbc.sp());
        EXPECT(0x27a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01D6
        gbc.setState(0x10d4, 0x9a4, 0x9e20, 0x88cb, 0x997b, 0x9d32, 0x0, 0x0);
        gbc.writeMem(0x10d4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9a4, gbc.sp());
        EXPECT(0x10d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01D7
        gbc.setState(0xc947, 0xad8c, 0x98f0, 0x37dc, 0x1833, 0xdbe1, 0x1, 0x0);
        gbc.writeMem(0xc947, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0x21, gbc.readMem(0xc948));
        // CB 21 01D9
        gbc.setState(0x7871, 0x5e39, 0xbb20, 0xa14a, 0x3ec9, 0x267a, 0x1, 0x1);
        gbc.writeMem(0x7871, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5e39, gbc.sp());
        EXPECT(0x7873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01DA
        gbc.setState(0x3ac1, 0xe155, 0xf0, 0x1e30, 0x757b, 0x112c, 0x1, 0x1);
        gbc.writeMem(0x3ac1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0x3ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01DB
        gbc.setState(0x3758, 0xb0a5, 0xd050, 0xc13, 0x9cd6, 0xaecd, 0x1, 0x1);
        gbc.writeMem(0x3758, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0x375a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01DC
        gbc.setState(0x86f1, 0x2e28, 0xbd80, 0xda7b, 0xc2ca, 0x9d, 0x1, 0x0);
        gbc.writeMem(0x86f1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0x86f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f1));
        EXPECT(0x21, gbc.readMem(0x86f2));
        // CB 21 01DD
        gbc.setState(0xb2f3, 0xd51e, 0x52e0, 0xe681, 0x8a74, 0xd88f, 0x0, 0x1);
        gbc.writeMem(0xb2f3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0xb2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f3));
        EXPECT(0x21, gbc.readMem(0xb2f4));
        // CB 21 01DE
        gbc.setState(0x6b9, 0x3039, 0x55c0, 0x3c7a, 0x5773, 0xf6f2, 0x1, 0x0);
        gbc.writeMem(0x6b9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0x6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01DF
        gbc.setState(0xb00b, 0xa3de, 0x9d10, 0xbf8b, 0xe12f, 0xfd67, 0x1, 0x1);
        gbc.writeMem(0xb00b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0xb00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00b));
        EXPECT(0x21, gbc.readMem(0xb00c));
        // CB 21 01E0
        gbc.setState(0xcb65, 0x7c6a, 0x3b80, 0xe937, 0x45cb, 0xbab0, 0x0, 0x1);
        gbc.writeMem(0xcb65, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7c6a, gbc.sp());
        EXPECT(0xcb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb65));
        EXPECT(0x21, gbc.readMem(0xcb66));
        // CB 21 01E1
        gbc.setState(0x981b, 0xbf17, 0x4a10, 0x6446, 0x7bb4, 0x2613, 0x1, 0x1);
        gbc.writeMem(0x981b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbf17, gbc.sp());
        EXPECT(0x981d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981b));
        EXPECT(0x21, gbc.readMem(0x981c));
        // CB 21 01E2
        gbc.setState(0x59fb, 0x3f09, 0x9a30, 0xb4f4, 0x61b2, 0x25e0, 0x1, 0x1);
        gbc.writeMem(0x59fb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01E3
        gbc.setState(0x7a0d, 0x285, 0x32a0, 0xa02, 0x80e3, 0xa0d, 0x0, 0x0);
        gbc.writeMem(0x7a0d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01E4
        gbc.setState(0xb738, 0x5bb6, 0x9020, 0x3624, 0x70b2, 0xf4d6, 0x1, 0x1);
        gbc.writeMem(0xb738, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0xb73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb738));
        EXPECT(0x21, gbc.readMem(0xb739));
        // CB 21 01E5
        gbc.setState(0xc644, 0x7b97, 0x8b70, 0x342c, 0xa89b, 0x3543, 0x0, 0x1);
        gbc.writeMem(0xc644, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7b97, gbc.sp());
        EXPECT(0xc646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc644));
        EXPECT(0x21, gbc.readMem(0xc645));
        // CB 21 01E6
        gbc.setState(0x6600, 0xafda, 0xad80, 0xc5ee, 0x9e27, 0x470f, 0x1, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xafda, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01E7
        gbc.setState(0x323e, 0xc833, 0x7820, 0x3d98, 0xa902, 0xbe3a, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01E8
        gbc.setState(0x49e9, 0x267a, 0xdec0, 0x5085, 0x2ca1, 0xe711, 0x0, 0x1);
        gbc.writeMem(0x49e9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0x49eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01E9
        gbc.setState(0x3916, 0x6232, 0x6700, 0x3a1e, 0xf1cc, 0x49d5, 0x0, 0x0);
        gbc.writeMem(0x3916, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01EA
        gbc.setState(0xdc2b, 0x8331, 0x6c40, 0xd5f8, 0x93e8, 0x3377, 0x1, 0x0);
        gbc.writeMem(0xdc2b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8331, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2b));
        EXPECT(0x21, gbc.readMem(0xdc2c));
        // CB 21 01EB
        gbc.setState(0x4ad7, 0x4648, 0xa260, 0x8f01, 0xee7d, 0x4bf7, 0x1, 0x0);
        gbc.writeMem(0x4ad7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4648, gbc.sp());
        EXPECT(0x4ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01EC
        gbc.setState(0xd914, 0xe882, 0x11f0, 0x8383, 0xe539, 0xaac3, 0x0, 0x1);
        gbc.writeMem(0xd914, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe882, gbc.sp());
        EXPECT(0xd916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd914));
        EXPECT(0x21, gbc.readMem(0xd915));
        // CB 21 01ED
        gbc.setState(0xb0a0, 0x9b6e, 0xd880, 0x907b, 0x8cf7, 0xf466, 0x1, 0x1);
        gbc.writeMem(0xb0a0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9b6e, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x21, gbc.readMem(0xb0a1));
        // CB 21 01EE
        gbc.setState(0x41e2, 0x27f1, 0xf350, 0x71b4, 0x7b72, 0x4a41, 0x1, 0x0);
        gbc.writeMem(0x41e2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x27f1, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01EF
        gbc.setState(0xb7b2, 0x4ca3, 0x660, 0x9891, 0x305f, 0x8759, 0x0, 0x1);
        gbc.writeMem(0xb7b2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4ca3, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b2));
        EXPECT(0x21, gbc.readMem(0xb7b3));
        // CB 21 01F0
        gbc.setState(0x4bfa, 0xa8cf, 0xe650, 0x492b, 0xdb00, 0xd366, 0x1, 0x1);
        gbc.writeMem(0x4bfa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01F1
        gbc.setState(0xd0a6, 0xb8c1, 0xa2c0, 0x1a05, 0xee7c, 0xce2c, 0x1, 0x1);
        gbc.writeMem(0xd0a6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb8c1, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0x21, gbc.readMem(0xd0a7));
        // CB 21 01F2
        gbc.setState(0x499d, 0xff2a, 0x7e70, 0xeca5, 0x4559, 0xe408, 0x0, 0x1);
        gbc.writeMem(0x499d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01F3
        gbc.setState(0x3530, 0x1e8b, 0xac10, 0xe59f, 0x3a0e, 0xa3f0, 0x0, 0x0);
        gbc.writeMem(0x3530, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1e8b, gbc.sp());
        EXPECT(0x3532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01F4
        gbc.setState(0x2663, 0x54cf, 0x5290, 0xb72c, 0xc6f5, 0x2c45, 0x0, 0x1);
        gbc.writeMem(0x2663, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0x2665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01F5
        gbc.setState(0xb1e5, 0x846a, 0xe070, 0x1498, 0x9cd, 0x8eb2, 0x0, 0x1);
        gbc.writeMem(0xb1e5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x846a, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e5));
        EXPECT(0x21, gbc.readMem(0xb1e6));
        // CB 21 01F6
        gbc.setState(0xe8e4, 0xfa3f, 0xc100, 0xdbb1, 0xcd4b, 0x6a5, 0x0, 0x1);
        gbc.writeMem(0xe8e4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfa3f, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e4));
        EXPECT(0x21, gbc.readMem(0xe8e5));
        // CB 21 01F7
        gbc.setState(0x97e5, 0x5b09, 0xc4b0, 0x519b, 0x9b29, 0x54ac, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e5));
        EXPECT(0x21, gbc.readMem(0x97e6));
        // CB 21 01F8
        gbc.setState(0xe034, 0x500e, 0xb160, 0x75d4, 0x8b89, 0xd5b4, 0x1, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0x21, gbc.readMem(0xe035));
        // CB 21 01F9
        gbc.setState(0x86d7, 0x9a0e, 0xade0, 0xc58f, 0xdeae, 0x9ec3, 0x0, 0x0);
        gbc.writeMem(0x86d7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9a0e, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d7));
        EXPECT(0x21, gbc.readMem(0x86d8));
        // CB 21 01FA
        gbc.setState(0x9bfa, 0x3780, 0x42b0, 0x47f5, 0x35f1, 0x8dbb, 0x0, 0x1);
        gbc.writeMem(0x9bfa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3780, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfa));
        EXPECT(0x21, gbc.readMem(0x9bfb));
        // CB 21 01FB
        gbc.setState(0x76b0, 0x8348, 0xe7a0, 0x18e, 0x2dd3, 0x20ce, 0x1, 0x1);
        gbc.writeMem(0x76b0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8348, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01FC
        gbc.setState(0x64ef, 0x1e48, 0x34a0, 0xacbd, 0xa094, 0xc04c, 0x0, 0x0);
        gbc.writeMem(0x64ef, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x64f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01FD
        gbc.setState(0x5fdb, 0xa0bf, 0x6270, 0x19d4, 0x6637, 0xecd0, 0x0, 0x0);
        gbc.writeMem(0x5fdb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 01FE
        gbc.setState(0x3c7e, 0x1bbf, 0xebf0, 0xdf49, 0xadba, 0x1422, 0x1, 0x1);
        gbc.writeMem(0x3c7e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1bbf, gbc.sp());
        EXPECT(0x3c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 01FF
        gbc.setState(0xa54a, 0xff14, 0x2800, 0x314a, 0xe41, 0x3343, 0x0, 0x1);
        gbc.writeMem(0xa54a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0xa54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54a));
        EXPECT(0x21, gbc.readMem(0xa54b));
        // CB 21 0200
        gbc.setState(0x982e, 0x39e3, 0xca60, 0x5955, 0x1349, 0x3b24, 0x0, 0x1);
        gbc.writeMem(0x982e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x39e3, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982e));
        EXPECT(0x21, gbc.readMem(0x982f));
        // CB 21 0201
        gbc.setState(0xad91, 0x1bc, 0x7390, 0x454, 0x348b, 0xfa51, 0x0, 0x1);
        gbc.writeMem(0xad91, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1bc, gbc.sp());
        EXPECT(0xad93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad91));
        EXPECT(0x21, gbc.readMem(0xad92));
        // CB 21 0203
        gbc.setState(0xe937, 0xc683, 0x4230, 0x2dae, 0x1c00, 0x5500, 0x0, 0x1);
        gbc.writeMem(0xe937, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0xe939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe937));
        EXPECT(0x21, gbc.readMem(0xe938));
        // CB 21 0204
        gbc.setState(0xafa1, 0x2305, 0x49b0, 0xc618, 0x3e37, 0xb8de, 0x0, 0x1);
        gbc.writeMem(0xafa1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0xafa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa1));
        EXPECT(0x21, gbc.readMem(0xafa2));
        // CB 21 0205
        gbc.setState(0x29e8, 0xc557, 0x66c0, 0x1fad, 0xf8f8, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0206
        gbc.setState(0xaddf, 0x5fe3, 0xaad0, 0xb0ae, 0xf81e, 0x8f46, 0x1, 0x1);
        gbc.writeMem(0xaddf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5fe3, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddf));
        EXPECT(0x21, gbc.readMem(0xade0));
        // CB 21 0207
        gbc.setState(0x5ca4, 0x5e77, 0xd540, 0x5a88, 0x32b, 0xc540, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5e77, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0208
        gbc.setState(0x7a27, 0x2949, 0x1c80, 0x3add, 0x1893, 0x2f92, 0x0, 0x0);
        gbc.writeMem(0x7a27, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2949, gbc.sp());
        EXPECT(0x7a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0209
        gbc.setState(0x664b, 0xd832, 0xd780, 0x2310, 0xbd35, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0x664b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x664d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 020A
        gbc.setState(0xeb3a, 0xa2da, 0x9d20, 0xf39a, 0xce25, 0x106, 0x0, 0x1);
        gbc.writeMem(0xeb3a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0xeb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3a));
        EXPECT(0x21, gbc.readMem(0xeb3b));
        // CB 21 020D
        gbc.setState(0x2d0c, 0x33e6, 0x8ca0, 0x57f, 0xf6da, 0xeb71, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x33e6, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 020E
        gbc.setState(0xe2ee, 0x295f, 0x55a0, 0x7aa2, 0xe416, 0x917e, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x295f, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0x21, gbc.readMem(0xe2ef));
        // CB 21 020F
        gbc.setState(0x537d, 0x3850, 0x7570, 0x9c3a, 0x1ee1, 0x411, 0x1, 0x0);
        gbc.writeMem(0x537d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0x537f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0210
        gbc.setState(0x125d, 0xbc3f, 0x4a50, 0xc24a, 0x30e5, 0x9f56, 0x0, 0x1);
        gbc.writeMem(0x125d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbc3f, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0211
        gbc.setState(0xa7e6, 0xc222, 0x8580, 0x14f6, 0x2844, 0x7746, 0x1, 0x0);
        gbc.writeMem(0xa7e6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc222, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e6));
        EXPECT(0x21, gbc.readMem(0xa7e7));
        // CB 21 0212
        gbc.setState(0x4bf8, 0xa4b5, 0x90f0, 0x78e7, 0x75a0, 0xb9ee, 0x0, 0x0);
        gbc.writeMem(0x4bf8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa4b5, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0213
        gbc.setState(0x369c, 0xe413, 0xd150, 0x4bee, 0xfe2b, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0x369c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe413, gbc.sp());
        EXPECT(0x369e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0214
        gbc.setState(0x31b7, 0x4ec1, 0xa6c0, 0xfd31, 0x6a73, 0x8e8, 0x1, 0x1);
        gbc.writeMem(0x31b7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0215
        gbc.setState(0x1ebe, 0x1fe1, 0x40b0, 0x518f, 0x4ac5, 0xd0ca, 0x0, 0x1);
        gbc.writeMem(0x1ebe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1fe1, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0216
        gbc.setState(0xa54, 0x166f, 0xf5a0, 0xa55d, 0x6d6f, 0x89ec, 0x1, 0x1);
        gbc.writeMem(0xa54, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x166f, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0217
        gbc.setState(0x63d2, 0xbebf, 0xdf00, 0xc735, 0x2e51, 0xd8e1, 0x0, 0x0);
        gbc.writeMem(0x63d2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0218
        gbc.setState(0x599c, 0x7161, 0x3180, 0x28ad, 0xec1b, 0x49b0, 0x0, 0x1);
        gbc.writeMem(0x599c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7161, gbc.sp());
        EXPECT(0x599e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0219
        gbc.setState(0x5aae, 0xcc04, 0x4b70, 0xee48, 0x61c7, 0xcb1a, 0x1, 0x1);
        gbc.writeMem(0x5aae, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc04, gbc.sp());
        EXPECT(0x5ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 021A
        gbc.setState(0xa740, 0x90fa, 0xa660, 0xdbd5, 0x243d, 0xccfb, 0x1, 0x1);
        gbc.writeMem(0xa740, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x90fa, gbc.sp());
        EXPECT(0xa742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa740));
        EXPECT(0x21, gbc.readMem(0xa741));
        // CB 21 021B
        gbc.setState(0x551b, 0x1ba9, 0x76b0, 0x5ed1, 0x2037, 0xb24c, 0x0, 0x1);
        gbc.writeMem(0x551b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1ba9, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 021C
        gbc.setState(0x81e1, 0xbc51, 0x5ac0, 0xe46b, 0x700b, 0xe55a, 0x0, 0x1);
        gbc.writeMem(0x81e1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x81e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e1));
        EXPECT(0x21, gbc.readMem(0x81e2));
        // CB 21 021D
        gbc.setState(0x355b, 0xfee0, 0x58d0, 0x14f5, 0x44e3, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x355b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfee0, gbc.sp());
        EXPECT(0x355d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 021E
        gbc.setState(0x9a97, 0xc315, 0x2710, 0x48fd, 0xcab1, 0xff16, 0x0, 0x1);
        gbc.writeMem(0x9a97, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0x9a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a97));
        EXPECT(0x21, gbc.readMem(0x9a98));
        // CB 21 021F
        gbc.setState(0x104e, 0xadee, 0x4da0, 0x4b99, 0x2af4, 0x37d4, 0x0, 0x1);
        gbc.writeMem(0x104e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xadee, gbc.sp());
        EXPECT(0x1050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0220
        gbc.setState(0x4983, 0xf2c, 0x1250, 0x22c6, 0x7ccc, 0x2d9b, 0x0, 0x0);
        gbc.writeMem(0x4983, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf2c, gbc.sp());
        EXPECT(0x4985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0221
        gbc.setState(0xda5b, 0x7cb1, 0x4240, 0xa2fb, 0xff48, 0xee9a, 0x0, 0x0);
        gbc.writeMem(0xda5b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7cb1, gbc.sp());
        EXPECT(0xda5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5b));
        EXPECT(0x21, gbc.readMem(0xda5c));
        // CB 21 0222
        gbc.setState(0xcb39, 0x86c, 0x8630, 0x3410, 0xa135, 0x6276, 0x0, 0x0);
        gbc.writeMem(0xcb39, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x86c, gbc.sp());
        EXPECT(0xcb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb39));
        EXPECT(0x21, gbc.readMem(0xcb3a));
        // CB 21 0223
        gbc.setState(0x2206, 0x9fd7, 0x5000, 0x87d7, 0xb1, 0x806c, 0x0, 0x1);
        gbc.writeMem(0x2206, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0224
        gbc.setState(0x8233, 0xa2ea, 0x86a0, 0x4af5, 0x651, 0x9124, 0x1, 0x1);
        gbc.writeMem(0x8233, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa2ea, gbc.sp());
        EXPECT(0x8235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8233));
        EXPECT(0x21, gbc.readMem(0x8234));
        // CB 21 0225
        gbc.setState(0xe562, 0x1c36, 0xfc20, 0x70e3, 0x8433, 0xec9a, 0x0, 0x0);
        gbc.writeMem(0xe562, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0x21, gbc.readMem(0xe563));
        // CB 21 0226
        gbc.setState(0x372a, 0xf0bf, 0x6a40, 0x594b, 0x2dc9, 0xb8b7, 0x1, 0x0);
        gbc.writeMem(0x372a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0227
        gbc.setState(0x229f, 0x4d0f, 0x7f00, 0xdf71, 0x4683, 0x188b, 0x1, 0x0);
        gbc.writeMem(0x229f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4d0f, gbc.sp());
        EXPECT(0x22a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0228
        gbc.setState(0x7a90, 0xd93, 0x5110, 0xd8a5, 0xcd16, 0xc182, 0x1, 0x0);
        gbc.writeMem(0x7a90, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0229
        gbc.setState(0x9568, 0xb8b4, 0xaf90, 0x3d4d, 0x3507, 0x8ad6, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb8b4, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0x21, gbc.readMem(0x9569));
        // CB 21 022A
        gbc.setState(0x80dc, 0xcd2f, 0xb980, 0x3a65, 0x893b, 0x6a4f, 0x1, 0x1);
        gbc.writeMem(0x80dc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dc));
        EXPECT(0x21, gbc.readMem(0x80dd));
        // CB 21 022B
        gbc.setState(0xbe96, 0x230f, 0xc880, 0x94c1, 0xc852, 0x530c, 0x1, 0x1);
        gbc.writeMem(0xbe96, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x230f, gbc.sp());
        EXPECT(0xbe98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe96));
        EXPECT(0x21, gbc.readMem(0xbe97));
        // CB 21 022C
        gbc.setState(0x5cfd, 0x38bc, 0x1e0, 0xfd88, 0x73af, 0x945d, 0x1, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x38bc, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 022D
        gbc.setState(0xfd6, 0xd565, 0x2680, 0xce82, 0x1e7f, 0x5ec5, 0x0, 0x1);
        gbc.writeMem(0xfd6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0xfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 022E
        gbc.setState(0x1ce6, 0x671f, 0x3c10, 0xdb34, 0x305a, 0x4bee, 0x1, 0x1);
        gbc.writeMem(0x1ce6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x671f, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 022F
        gbc.setState(0xb5ed, 0x8658, 0x1b10, 0x9754, 0xcd83, 0x707a, 0x0, 0x0);
        gbc.writeMem(0xb5ed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8658, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ed));
        EXPECT(0x21, gbc.readMem(0xb5ee));
        // CB 21 0230
        gbc.setState(0xba3d, 0xa605, 0x41c0, 0x804e, 0xe4af, 0xeb12, 0x1, 0x1);
        gbc.writeMem(0xba3d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa605, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0x21, gbc.readMem(0xba3e));
        // CB 21 0231
        gbc.setState(0x3874, 0x8182, 0xaff0, 0xf813, 0x70f9, 0x32ff, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8182, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0232
        gbc.setState(0xc108, 0xdaa9, 0x2e50, 0xae64, 0x41eb, 0xe638, 0x0, 0x0);
        gbc.writeMem(0xc108, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc108));
        EXPECT(0x21, gbc.readMem(0xc109));
        // CB 21 0233
        gbc.setState(0xd71, 0x4e81, 0xa8c0, 0x3f30, 0xbdca, 0xe840, 0x1, 0x1);
        gbc.writeMem(0xd71, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0234
        gbc.setState(0x8bce, 0xaaea, 0x33f0, 0xf5cb, 0xee63, 0x10ca, 0x0, 0x0);
        gbc.writeMem(0x8bce, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bce));
        EXPECT(0x21, gbc.readMem(0x8bcf));
        // CB 21 0235
        gbc.setState(0x5b2a, 0xbda8, 0xc820, 0x8ca9, 0x1a1b, 0x740c, 0x1, 0x1);
        gbc.writeMem(0x5b2a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbda8, gbc.sp());
        EXPECT(0x5b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0236
        gbc.setState(0x9b84, 0xfa4c, 0x17b0, 0x119e, 0x8a1b, 0x2b4, 0x1, 0x1);
        gbc.writeMem(0x9b84, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfa4c, gbc.sp());
        EXPECT(0x9b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b84));
        EXPECT(0x21, gbc.readMem(0x9b85));
        // CB 21 0237
        gbc.setState(0xa97, 0xa3e3, 0x3f70, 0xe455, 0x727c, 0xea48, 0x0, 0x0);
        gbc.writeMem(0xa97, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0xa99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0238
        gbc.setState(0x21d4, 0x8f14, 0x29b0, 0x68ff, 0x55cc, 0xe6ca, 0x0, 0x0);
        gbc.writeMem(0x21d4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0239
        gbc.setState(0x37a4, 0x8ccf, 0xefc0, 0x3bbc, 0xa8cf, 0xa4a1, 0x0, 0x0);
        gbc.writeMem(0x37a4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8ccf, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 023A
        gbc.setState(0xe36e, 0x42df, 0x3fa0, 0x6db, 0x1534, 0x4fa7, 0x0, 0x1);
        gbc.writeMem(0xe36e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x42df, gbc.sp());
        EXPECT(0xe370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36e));
        EXPECT(0x21, gbc.readMem(0xe36f));
        // CB 21 023B
        gbc.setState(0x2019, 0xf8e0, 0xbdb0, 0xaf27, 0xa822, 0x94b2, 0x0, 0x0);
        gbc.writeMem(0x2019, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 023C
        gbc.setState(0x5536, 0x2332, 0xc40, 0x791b, 0x401e, 0x2de3, 0x1, 0x0);
        gbc.writeMem(0x5536, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2332, gbc.sp());
        EXPECT(0x5538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 023D
        gbc.setState(0x6b74, 0xdfbb, 0xba70, 0xf4e5, 0x1365, 0x400a, 0x0, 0x0);
        gbc.writeMem(0x6b74, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 023E
        gbc.setState(0xd849, 0xc919, 0x7810, 0x2b86, 0xedb, 0xeb11, 0x0, 0x1);
        gbc.writeMem(0xd849, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc919, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd849));
        EXPECT(0x21, gbc.readMem(0xd84a));
        // CB 21 023F
        gbc.setState(0xa089, 0x5c98, 0xb0b0, 0xa691, 0xaeaa, 0xe887, 0x1, 0x0);
        gbc.writeMem(0xa089, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5c98, gbc.sp());
        EXPECT(0xa08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa089));
        EXPECT(0x21, gbc.readMem(0xa08a));
        // CB 21 0240
        gbc.setState(0x1b7c, 0xe6ee, 0xd240, 0x68fa, 0xe340, 0xa93f, 0x0, 0x1);
        gbc.writeMem(0x1b7c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe6ee, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0241
        gbc.setState(0x331, 0x5bca, 0x2af0, 0x5a24, 0x40ab, 0xaddc, 0x1, 0x0);
        gbc.writeMem(0x331, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5bca, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0242
        gbc.setState(0x1bce, 0xcef8, 0x4690, 0xfd5c, 0xd733, 0xdf9d, 0x0, 0x1);
        gbc.writeMem(0x1bce, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcef8, gbc.sp());
        EXPECT(0x1bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0244
        gbc.setState(0x1bff, 0x72fc, 0xf50, 0x57ce, 0x906c, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x1bff, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x1c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0245
        gbc.setState(0xc607, 0xf717, 0xb60, 0xc524, 0xaf43, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0xc607, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf717, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc607));
        EXPECT(0x21, gbc.readMem(0xc608));
        // CB 21 0246
        gbc.setState(0xbf62, 0x4bbd, 0xf6e0, 0xc83, 0x2aa0, 0xc0d2, 0x1, 0x0);
        gbc.writeMem(0xbf62, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4bbd, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf62));
        EXPECT(0x21, gbc.readMem(0xbf63));
        // CB 21 0247
        gbc.setState(0x7db2, 0xb29, 0x1c50, 0x2186, 0x62e4, 0xa3fb, 0x1, 0x0);
        gbc.writeMem(0x7db2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0248
        gbc.setState(0x8d3a, 0xe7e3, 0xc6c0, 0xb142, 0x7d7d, 0xb439, 0x0, 0x0);
        gbc.writeMem(0x8d3a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe7e3, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3a));
        EXPECT(0x21, gbc.readMem(0x8d3b));
        // CB 21 0249
        gbc.setState(0x1658, 0x9656, 0x83e0, 0x36de, 0xba83, 0xd9b1, 0x1, 0x0);
        gbc.writeMem(0x1658, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9656, gbc.sp());
        EXPECT(0x165a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 024B
        gbc.setState(0xa775, 0xd299, 0x3150, 0xf724, 0x72c5, 0x5fef, 0x1, 0x0);
        gbc.writeMem(0xa775, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd299, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa775));
        EXPECT(0x21, gbc.readMem(0xa776));
        // CB 21 024C
        gbc.setState(0x57f5, 0x37a4, 0xa070, 0x1063, 0xd680, 0x8012, 0x1, 0x0);
        gbc.writeMem(0x57f5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x37a4, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 024D
        gbc.setState(0x3d44, 0xbae2, 0xbdc0, 0xa133, 0x988, 0x69fc, 0x1, 0x1);
        gbc.writeMem(0x3d44, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbae2, gbc.sp());
        EXPECT(0x3d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 024E
        gbc.setState(0x693a, 0x4b95, 0xf1a0, 0xf805, 0xb71d, 0x34b5, 0x1, 0x0);
        gbc.writeMem(0x693a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x693c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 024F
        gbc.setState(0x8625, 0x5946, 0xb440, 0x4b0b, 0xee99, 0x7eb7, 0x1, 0x1);
        gbc.writeMem(0x8625, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5946, gbc.sp());
        EXPECT(0x8627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8625));
        EXPECT(0x21, gbc.readMem(0x8626));
        // CB 21 0250
        gbc.setState(0xbfea, 0x6e32, 0x5180, 0xe97b, 0x5dbd, 0x71c9, 0x0, 0x0);
        gbc.writeMem(0xbfea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6e32, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfea));
        EXPECT(0x21, gbc.readMem(0xbfeb));
        // CB 21 0251
        gbc.setState(0x977e, 0x4b6c, 0xbc80, 0x3e12, 0x326, 0x3301, 0x0, 0x1);
        gbc.writeMem(0x977e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4b6c, gbc.sp());
        EXPECT(0x9780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977e));
        EXPECT(0x21, gbc.readMem(0x977f));
        // CB 21 0252
        gbc.setState(0xda61, 0x9cc0, 0xd720, 0xfe06, 0xa740, 0x8d72, 0x1, 0x1);
        gbc.writeMem(0xda61, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9cc0, gbc.sp());
        EXPECT(0xda63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda61));
        EXPECT(0x21, gbc.readMem(0xda62));
        // CB 21 0253
        gbc.setState(0xbe35, 0xa8c1, 0xa4c0, 0xd502, 0xdbbe, 0xa173, 0x1, 0x0);
        gbc.writeMem(0xbe35, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa8c1, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe35));
        EXPECT(0x21, gbc.readMem(0xbe36));
        // CB 21 0254
        gbc.setState(0x6bb7, 0x7958, 0xcc90, 0x6150, 0x6a99, 0xb15, 0x1, 0x0);
        gbc.writeMem(0x6bb7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7958, gbc.sp());
        EXPECT(0x6bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0255
        gbc.setState(0xd3cc, 0xd9e6, 0xec40, 0xc68e, 0xdf5c, 0x435, 0x0, 0x1);
        gbc.writeMem(0xd3cc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0xd3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cc));
        EXPECT(0x21, gbc.readMem(0xd3cd));
        // CB 21 0256
        gbc.setState(0x78d6, 0xbd44, 0xe240, 0x9922, 0x8f97, 0xab2, 0x0, 0x0);
        gbc.writeMem(0x78d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbd44, gbc.sp());
        EXPECT(0x78d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0257
        gbc.setState(0x48fb, 0xfaa, 0xa7b0, 0x1b41, 0x4bf0, 0x57fd, 0x0, 0x1);
        gbc.writeMem(0x48fb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfaa, gbc.sp());
        EXPECT(0x48fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0258
        gbc.setState(0xc917, 0x493f, 0x6d30, 0x6268, 0x856e, 0xaaba, 0x0, 0x0);
        gbc.writeMem(0xc917, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0xc919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc917));
        EXPECT(0x21, gbc.readMem(0xc918));
        // CB 21 0259
        gbc.setState(0x9cd4, 0x9e35, 0x8040, 0xff1b, 0x9125, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x9cd4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9e35, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd4));
        EXPECT(0x21, gbc.readMem(0x9cd5));
        // CB 21 025A
        gbc.setState(0x9e10, 0x294d, 0xf400, 0xdfd, 0x7e0, 0x8b21, 0x0, 0x1);
        gbc.writeMem(0x9e10, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x294d, gbc.sp());
        EXPECT(0x9e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e10));
        EXPECT(0x21, gbc.readMem(0x9e11));
        // CB 21 025B
        gbc.setState(0x88d6, 0x7c18, 0x9ea0, 0x7a5a, 0xb39b, 0x48c9, 0x1, 0x1);
        gbc.writeMem(0x88d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c18, gbc.sp());
        EXPECT(0x88d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d6));
        EXPECT(0x21, gbc.readMem(0x88d7));
        // CB 21 025C
        gbc.setState(0x23ef, 0x2cff, 0x8a70, 0xa2b9, 0x8557, 0x8908, 0x0, 0x1);
        gbc.writeMem(0x23ef, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 025D
        gbc.setState(0x7c15, 0x1955, 0x68c0, 0xf1bd, 0xd22e, 0x5066, 0x1, 0x0);
        gbc.writeMem(0x7c15, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1955, gbc.sp());
        EXPECT(0x7c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 025E
        gbc.setState(0x2708, 0x62a1, 0xb770, 0xb6fb, 0xfb44, 0x453d, 0x0, 0x0);
        gbc.writeMem(0x2708, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x62a1, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 025F
        gbc.setState(0x770e, 0x8893, 0xe670, 0xe9b1, 0x3ab4, 0x68c1, 0x1, 0x1);
        gbc.writeMem(0x770e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8893, gbc.sp());
        EXPECT(0x7710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0260
        gbc.setState(0xa3d6, 0xadb7, 0x3fa0, 0x9531, 0xafad, 0x5e8e, 0x0, 0x0);
        gbc.writeMem(0xa3d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0xa3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d6));
        EXPECT(0x21, gbc.readMem(0xa3d7));
        // CB 21 0261
        gbc.setState(0x1300, 0xc1c, 0x7000, 0xf032, 0x1123, 0xa33e, 0x1, 0x1);
        gbc.writeMem(0x1300, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc1c, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0262
        gbc.setState(0xb020, 0xa0c7, 0x8b60, 0xc4fc, 0x75b2, 0xa97f, 0x1, 0x1);
        gbc.writeMem(0xb020, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa0c7, gbc.sp());
        EXPECT(0xb022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb020));
        EXPECT(0x21, gbc.readMem(0xb021));
        // CB 21 0263
        gbc.setState(0x8dcb, 0x56e8, 0xd430, 0x2ef2, 0x1a1a, 0x1220, 0x1, 0x0);
        gbc.writeMem(0x8dcb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x56e8, gbc.sp());
        EXPECT(0x8dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcb));
        EXPECT(0x21, gbc.readMem(0x8dcc));
        // CB 21 0264
        gbc.setState(0x9daf, 0x43fc, 0xca60, 0xd5f0, 0xd432, 0x3f65, 0x1, 0x1);
        gbc.writeMem(0x9daf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x43fc, gbc.sp());
        EXPECT(0x9db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9daf));
        EXPECT(0x21, gbc.readMem(0x9db0));
        // CB 21 0266
        gbc.setState(0x463d, 0x794d, 0xfc10, 0x3822, 0x66c3, 0xb066, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x794d, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0267
        gbc.setState(0x3006, 0xc80, 0xbbf0, 0x3a72, 0x7e2d, 0xf85a, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc80, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0268
        gbc.setState(0x97b8, 0xba5f, 0x930, 0xe12e, 0xaed8, 0x8fee, 0x0, 0x1);
        gbc.writeMem(0x97b8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xba5f, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b8));
        EXPECT(0x21, gbc.readMem(0x97b9));
        // CB 21 0269
        gbc.setState(0x2031, 0x28b0, 0xceb0, 0x3241, 0xb810, 0x6c34, 0x1, 0x0);
        gbc.writeMem(0x2031, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 026B
        gbc.setState(0x4649, 0xf569, 0x1b60, 0xd192, 0xc89f, 0x2772, 0x1, 0x0);
        gbc.writeMem(0x4649, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf569, gbc.sp());
        EXPECT(0x464b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 026C
        gbc.setState(0xdb5c, 0x4c4, 0xebc0, 0x51b2, 0x61f8, 0x78be, 0x0, 0x0);
        gbc.writeMem(0xdb5c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4c4, gbc.sp());
        EXPECT(0xdb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5c));
        EXPECT(0x21, gbc.readMem(0xdb5d));
        // CB 21 026D
        gbc.setState(0x16e4, 0x913a, 0x1170, 0xee4f, 0xdd09, 0x7621, 0x0, 0x1);
        gbc.writeMem(0x16e4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x913a, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 026E
        gbc.setState(0x5c18, 0x9ca3, 0x71b0, 0x683d, 0x3bcd, 0x9c98, 0x0, 0x0);
        gbc.writeMem(0x5c18, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 026F
        gbc.setState(0x1259, 0x5b77, 0x5650, 0x61e1, 0x4183, 0xf8d0, 0x1, 0x1);
        gbc.writeMem(0x1259, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5b77, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0270
        gbc.setState(0xbc0a, 0x79bf, 0x8260, 0x3e61, 0x70dd, 0x51f8, 0x1, 0x1);
        gbc.writeMem(0xbc0a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x79bf, gbc.sp());
        EXPECT(0xbc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0a));
        EXPECT(0x21, gbc.readMem(0xbc0b));
        // CB 21 0271
        gbc.setState(0x6616, 0x984f, 0xec0, 0x2bc4, 0xaeb6, 0x115f, 0x1, 0x1);
        gbc.writeMem(0x6616, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x984f, gbc.sp());
        EXPECT(0x6618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0272
        gbc.setState(0x8b05, 0xbdb7, 0x4e50, 0xaf17, 0x97f6, 0x58ff, 0x0, 0x0);
        gbc.writeMem(0x8b05, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbdb7, gbc.sp());
        EXPECT(0x8b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b05));
        EXPECT(0x21, gbc.readMem(0x8b06));
        // CB 21 0273
        gbc.setState(0x8133, 0xa0bb, 0xe310, 0x7fb7, 0x30f6, 0x779a, 0x0, 0x0);
        gbc.writeMem(0x8133, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0x21, gbc.readMem(0x8134));
        // CB 21 0274
        gbc.setState(0x696f, 0xcc6b, 0x17e0, 0x22f0, 0x29e2, 0x7892, 0x1, 0x0);
        gbc.writeMem(0x696f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcc6b, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0275
        gbc.setState(0xce5f, 0x271d, 0x7da0, 0x46cb, 0xe639, 0xe0a7, 0x1, 0x0);
        gbc.writeMem(0xce5f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x271d, gbc.sp());
        EXPECT(0xce61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5f));
        EXPECT(0x21, gbc.readMem(0xce60));
        // CB 21 0276
        gbc.setState(0x404e, 0x51d4, 0x4340, 0xf5cc, 0x853, 0xfdd2, 0x0, 0x1);
        gbc.writeMem(0x404e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x51d4, gbc.sp());
        EXPECT(0x4050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0277
        gbc.setState(0x20d0, 0xb2cd, 0x6530, 0x2706, 0xcb9d, 0xd204, 0x0, 0x0);
        gbc.writeMem(0x20d0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0x20d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0278
        gbc.setState(0x8e, 0x5685, 0xb3e0, 0x6a7e, 0xe88b, 0x7f69, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5685, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0279
        gbc.setState(0x38a2, 0xdaf1, 0xdb70, 0x8a22, 0xd461, 0xc50e, 0x0, 0x1);
        gbc.writeMem(0x38a2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdaf1, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 027A
        gbc.setState(0xb071, 0x902f, 0x2340, 0xc0d1, 0x9726, 0xaa2e, 0x1, 0x1);
        gbc.writeMem(0xb071, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb071));
        EXPECT(0x21, gbc.readMem(0xb072));
        // CB 21 027C
        gbc.setState(0x87e2, 0x33a8, 0x6b0, 0xdcba, 0x290, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0x87e2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x33a8, gbc.sp());
        EXPECT(0x87e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e2));
        EXPECT(0x21, gbc.readMem(0x87e3));
        // CB 21 027D
        gbc.setState(0xc598, 0x185f, 0x1d70, 0x921, 0xeb1, 0x7d19, 0x0, 0x1);
        gbc.writeMem(0xc598, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x185f, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc598));
        EXPECT(0x21, gbc.readMem(0xc599));
        // CB 21 027E
        gbc.setState(0xd89a, 0x9e42, 0xc190, 0xbe55, 0x678b, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0xd89a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9e42, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0x21, gbc.readMem(0xd89b));
        // CB 21 027F
        gbc.setState(0x2924, 0x7cf4, 0xe1e0, 0x42, 0x1425, 0xf3f0, 0x1, 0x0);
        gbc.writeMem(0x2924, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7cf4, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0280
        gbc.setState(0x6ae7, 0x6e5b, 0x5c30, 0xe0b8, 0x2a6f, 0xf35f, 0x1, 0x0);
        gbc.writeMem(0x6ae7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6e5b, gbc.sp());
        EXPECT(0x6ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0281
        gbc.setState(0x2ae8, 0x6350, 0x40c0, 0x60f6, 0x14f4, 0x4d68, 0x1, 0x0);
        gbc.writeMem(0x2ae8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6350, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0282
        gbc.setState(0xf84, 0xc0b7, 0x3d90, 0xcac5, 0x3817, 0x7cd2, 0x0, 0x1);
        gbc.writeMem(0xf84, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc0b7, gbc.sp());
        EXPECT(0xf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0283
        gbc.setState(0x8481, 0x7d28, 0x2b50, 0xae94, 0x5bf1, 0x79f2, 0x1, 0x0);
        gbc.writeMem(0x8481, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7d28, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8481));
        EXPECT(0x21, gbc.readMem(0x8482));
        // CB 21 0284
        gbc.setState(0x4eb0, 0x838e, 0xe2a0, 0xf89b, 0x7086, 0x5c5a, 0x1, 0x0);
        gbc.writeMem(0x4eb0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x838e, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0285
        gbc.setState(0x2edf, 0x1f2c, 0x32c0, 0x633e, 0x43ac, 0x7587, 0x0, 0x0);
        gbc.writeMem(0x2edf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0286
        gbc.setState(0x1b61, 0x26ba, 0xc270, 0x9d13, 0xf871, 0x23f7, 0x1, 0x0);
        gbc.writeMem(0x1b61, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x26ba, gbc.sp());
        EXPECT(0x1b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0287
        gbc.setState(0xc626, 0x9cf9, 0xfc30, 0xa394, 0x4a7, 0x472f, 0x1, 0x0);
        gbc.writeMem(0xc626, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0xc628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc626));
        EXPECT(0x21, gbc.readMem(0xc627));
        // CB 21 0288
        gbc.setState(0x16c8, 0x1ff8, 0xd20, 0x1020, 0x5c28, 0x534b, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1ff8, gbc.sp());
        EXPECT(0x16ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0289
        gbc.setState(0x387, 0xab07, 0xc740, 0xde37, 0xa4b, 0xf3b, 0x1, 0x0);
        gbc.writeMem(0x387, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 028A
        gbc.setState(0x52b2, 0xf0d5, 0x5000, 0x64f5, 0xe9e6, 0x7ad, 0x0, 0x1);
        gbc.writeMem(0x52b2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf0d5, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 028B
        gbc.setState(0x4307, 0xbce, 0x6530, 0x34c5, 0x7dda, 0x8c79, 0x1, 0x1);
        gbc.writeMem(0x4307, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbce, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 028C
        gbc.setState(0xd1c5, 0xd316, 0x9db0, 0xfdbe, 0xcd9a, 0xb861, 0x1, 0x0);
        gbc.writeMem(0xd1c5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd316, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c5));
        EXPECT(0x21, gbc.readMem(0xd1c6));
        // CB 21 028D
        gbc.setState(0x6672, 0xa658, 0x9810, 0x1154, 0x39a1, 0x7495, 0x0, 0x1);
        gbc.writeMem(0x6672, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 028E
        gbc.setState(0x936e, 0xd031, 0x1a00, 0xdea4, 0x21ed, 0x5c11, 0x0, 0x0);
        gbc.writeMem(0x936e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x9370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936e));
        EXPECT(0x21, gbc.readMem(0x936f));
        // CB 21 028F
        gbc.setState(0x95b5, 0x8cb8, 0x9e80, 0xc909, 0x492, 0x28d, 0x0, 0x1);
        gbc.writeMem(0x95b5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8cb8, gbc.sp());
        EXPECT(0x95b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b5));
        EXPECT(0x21, gbc.readMem(0x95b6));
        // CB 21 0290
        gbc.setState(0x2230, 0xdb56, 0x1130, 0xba09, 0xd7fc, 0x6827, 0x0, 0x1);
        gbc.writeMem(0x2230, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0291
        gbc.setState(0x2e4a, 0xbf41, 0xd2b0, 0x22fc, 0x258a, 0x701e, 0x1, 0x1);
        gbc.writeMem(0x2e4a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbf41, gbc.sp());
        EXPECT(0x2e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0293
        gbc.setState(0xa637, 0x748e, 0x4150, 0xb05a, 0x2316, 0x2188, 0x1, 0x1);
        gbc.writeMem(0xa637, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x748e, gbc.sp());
        EXPECT(0xa639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa637));
        EXPECT(0x21, gbc.readMem(0xa638));
        // CB 21 0294
        gbc.setState(0x74f9, 0x1d9b, 0x7d10, 0xf9a3, 0xb87a, 0x87f9, 0x1, 0x0);
        gbc.writeMem(0x74f9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0295
        gbc.setState(0xcafe, 0x72f5, 0xde00, 0xe3a9, 0x7593, 0xfb72, 0x1, 0x0);
        gbc.writeMem(0xcafe, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x72f5, gbc.sp());
        EXPECT(0xcb00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcafe));
        EXPECT(0x21, gbc.readMem(0xcaff));
        // CB 21 0296
        gbc.setState(0x4468, 0xb05f, 0xb030, 0xc7a4, 0x6e23, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0x4468, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0x446a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0297
        gbc.setState(0xe22f, 0xba19, 0xc150, 0x6fd6, 0x5e81, 0xfcab, 0x1, 0x0);
        gbc.writeMem(0xe22f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22f));
        EXPECT(0x21, gbc.readMem(0xe230));
        // CB 21 0298
        gbc.setState(0xb5a1, 0x9ed3, 0x3370, 0xeb0f, 0xec7c, 0xf9a9, 0x0, 0x1);
        gbc.writeMem(0xb5a1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ed3, gbc.sp());
        EXPECT(0xb5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a1));
        EXPECT(0x21, gbc.readMem(0xb5a2));
        // CB 21 0299
        gbc.setState(0x6a42, 0xa3b4, 0xcca0, 0xfa08, 0x6772, 0xcaa, 0x0, 0x0);
        gbc.writeMem(0x6a42, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x6a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 029A
        gbc.setState(0xb723, 0xf0cf, 0x1dc0, 0x308a, 0x2740, 0x9d78, 0x1, 0x0);
        gbc.writeMem(0xb723, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0xb725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb723));
        EXPECT(0x21, gbc.readMem(0xb724));
        // CB 21 029B
        gbc.setState(0x58a4, 0xa286, 0x1020, 0xac83, 0x9615, 0x308a, 0x0, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 029C
        gbc.setState(0x167, 0x3f71, 0xa620, 0xeba5, 0xef57, 0x6c68, 0x1, 0x0);
        gbc.writeMem(0x167, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 029D
        gbc.setState(0x4493, 0xa228, 0x5aa0, 0xfe6b, 0xe096, 0x9abc, 0x1, 0x1);
        gbc.writeMem(0x4493, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa228, gbc.sp());
        EXPECT(0x4495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 029E
        gbc.setState(0x15d5, 0x747e, 0x15d0, 0x570a, 0xc655, 0x3ab, 0x1, 0x1);
        gbc.writeMem(0x15d5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x15d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 029F
        gbc.setState(0x5f2a, 0x3ed4, 0x1a00, 0x2c1f, 0x4de8, 0x7857, 0x1, 0x0);
        gbc.writeMem(0x5f2a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3ed4, gbc.sp());
        EXPECT(0x5f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02A0
        gbc.setState(0x993d, 0x3053, 0x9310, 0x191c, 0x497b, 0xe133, 0x1, 0x0);
        gbc.writeMem(0x993d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x993f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993d));
        EXPECT(0x21, gbc.readMem(0x993e));
        // CB 21 02A1
        gbc.setState(0x14f0, 0xe16e, 0x6830, 0x835, 0xd787, 0x715d, 0x0, 0x1);
        gbc.writeMem(0x14f0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02A2
        gbc.setState(0x74bb, 0x68e4, 0x8030, 0xe9bf, 0xe64f, 0x5977, 0x1, 0x1);
        gbc.writeMem(0x74bb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02A3
        gbc.setState(0xe031, 0xfaf7, 0x5ba0, 0xb879, 0x6214, 0x8ac9, 0x1, 0x0);
        gbc.writeMem(0xe031, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe031));
        EXPECT(0x21, gbc.readMem(0xe032));
        // CB 21 02A4
        gbc.setState(0x2686, 0x39a7, 0xb980, 0x5cea, 0xa830, 0x3a35, 0x0, 0x0);
        gbc.writeMem(0x2686, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x39a7, gbc.sp());
        EXPECT(0x2688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02A5
        gbc.setState(0xe1a9, 0x994, 0xc9f0, 0x4fe4, 0x2e26, 0x7de3, 0x1, 0x0);
        gbc.writeMem(0xe1a9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x994, gbc.sp());
        EXPECT(0xe1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a9));
        EXPECT(0x21, gbc.readMem(0xe1aa));
        // CB 21 02A6
        gbc.setState(0xa99a, 0x3f12, 0x1730, 0x446b, 0xd119, 0x53a4, 0x1, 0x1);
        gbc.writeMem(0xa99a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0xa99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99a));
        EXPECT(0x21, gbc.readMem(0xa99b));
        // CB 21 02A7
        gbc.setState(0xaba0, 0x8316, 0x45e0, 0x40dc, 0x3d50, 0xae67, 0x0, 0x1);
        gbc.writeMem(0xaba0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0xaba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba0));
        EXPECT(0x21, gbc.readMem(0xaba1));
        // CB 21 02A8
        gbc.setState(0xccd5, 0x4483, 0xf150, 0xf996, 0xa038, 0x632b, 0x1, 0x0);
        gbc.writeMem(0xccd5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0xccd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd5));
        EXPECT(0x21, gbc.readMem(0xccd6));
        // CB 21 02A9
        gbc.setState(0x4bb4, 0x89ba, 0x5cc0, 0x543, 0x37e1, 0x5094, 0x0, 0x0);
        gbc.writeMem(0x4bb4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x89ba, gbc.sp());
        EXPECT(0x4bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02AA
        gbc.setState(0x7b7e, 0xe2c0, 0xdf00, 0x7494, 0x678c, 0x8228, 0x1, 0x1);
        gbc.writeMem(0x7b7e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0x7b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02AB
        gbc.setState(0x2d08, 0x5b3b, 0x28e0, 0x5099, 0x60b0, 0x602b, 0x1, 0x0);
        gbc.writeMem(0x2d08, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5b3b, gbc.sp());
        EXPECT(0x2d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02AC
        gbc.setState(0xd4ad, 0xc6f7, 0xe4b0, 0xa3eb, 0x6123, 0xba65, 0x0, 0x1);
        gbc.writeMem(0xd4ad, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ad));
        EXPECT(0x21, gbc.readMem(0xd4ae));
        // CB 21 02AD
        gbc.setState(0x7fc5, 0x6458, 0x2920, 0x25bd, 0x298, 0xa254, 0x1, 0x0);
        gbc.writeMem(0x7fc5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0x7fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02AE
        gbc.setState(0xde9c, 0xa498, 0xfd30, 0xee16, 0x23e7, 0x18de, 0x0, 0x0);
        gbc.writeMem(0xde9c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa498, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9c));
        EXPECT(0x21, gbc.readMem(0xde9d));
        // CB 21 02AF
        gbc.setState(0x36a0, 0xec55, 0x7360, 0x7fbe, 0xf0e9, 0x994d, 0x0, 0x0);
        gbc.writeMem(0x36a0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xec55, gbc.sp());
        EXPECT(0x36a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02B0
        gbc.setState(0x3f35, 0xf71a, 0x3380, 0xa585, 0x7739, 0xbd6a, 0x1, 0x0);
        gbc.writeMem(0x3f35, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf71a, gbc.sp());
        EXPECT(0x3f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02B1
        gbc.setState(0x461a, 0x7a6, 0x1ff0, 0x5e60, 0x9b61, 0xcd2e, 0x1, 0x0);
        gbc.writeMem(0x461a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02B2
        gbc.setState(0x9a26, 0xc0eb, 0x1040, 0x5c32, 0xe2f3, 0xbf63, 0x1, 0x1);
        gbc.writeMem(0x9a26, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc0eb, gbc.sp());
        EXPECT(0x9a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a26));
        EXPECT(0x21, gbc.readMem(0x9a27));
        // CB 21 02B3
        gbc.setState(0x83d6, 0xd5cc, 0x86c0, 0xb1be, 0x8e5c, 0xe0bd, 0x0, 0x0);
        gbc.writeMem(0x83d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0x83d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d6));
        EXPECT(0x21, gbc.readMem(0x83d7));
        // CB 21 02B4
        gbc.setState(0xddf8, 0xc8dd, 0x4eb0, 0x7fac, 0x4ae5, 0xee0c, 0x0, 0x1);
        gbc.writeMem(0xddf8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf8));
        EXPECT(0x21, gbc.readMem(0xddf9));
        // CB 21 02B5
        gbc.setState(0x5bb7, 0xa2d9, 0x9660, 0xeb51, 0x8abb, 0x68cc, 0x1, 0x0);
        gbc.writeMem(0x5bb7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02B6
        gbc.setState(0x731, 0x3388, 0xb0d0, 0x5a76, 0x9f1f, 0x8ad6, 0x1, 0x0);
        gbc.writeMem(0x731, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02B7
        gbc.setState(0xb58a, 0xca7a, 0xda10, 0x489c, 0xdd5f, 0xf4ea, 0x1, 0x1);
        gbc.writeMem(0xb58a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0xb58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58a));
        EXPECT(0x21, gbc.readMem(0xb58b));
        // CB 21 02B8
        gbc.setState(0x40af, 0xe6dc, 0x7fb0, 0x6ba9, 0x8568, 0x59b0, 0x0, 0x1);
        gbc.writeMem(0x40af, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe6dc, gbc.sp());
        EXPECT(0x40b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02B9
        gbc.setState(0x2ca2, 0x9c3e, 0x61d0, 0x9aa3, 0x870a, 0xeacd, 0x1, 0x0);
        gbc.writeMem(0x2ca2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02BA
        gbc.setState(0x881b, 0xfa1c, 0x8750, 0x80e0, 0xbef6, 0xb159, 0x1, 0x0);
        gbc.writeMem(0x881b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfa1c, gbc.sp());
        EXPECT(0x881d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881b));
        EXPECT(0x21, gbc.readMem(0x881c));
        // CB 21 02BB
        gbc.setState(0x7db, 0x2417, 0x32a0, 0x6909, 0x7e03, 0x68f4, 0x0, 0x1);
        gbc.writeMem(0x7db, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02BC
        gbc.setState(0xe3ea, 0xb8b3, 0x9770, 0xd7b2, 0x2642, 0xbb58, 0x1, 0x0);
        gbc.writeMem(0xe3ea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0xe3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ea));
        EXPECT(0x21, gbc.readMem(0xe3eb));
        // CB 21 02BD
        gbc.setState(0xb7ae, 0xa112, 0xda0, 0x7dfe, 0x59b9, 0x1732, 0x1, 0x0);
        gbc.writeMem(0xb7ae, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa112, gbc.sp());
        EXPECT(0xb7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ae));
        EXPECT(0x21, gbc.readMem(0xb7af));
        // CB 21 02BE
        gbc.setState(0xefd0, 0x62bc, 0x5a10, 0x6888, 0xbfdb, 0x4fdb, 0x1, 0x1);
        gbc.writeMem(0xefd0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x62bc, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd0));
        EXPECT(0x21, gbc.readMem(0xefd1));
        // CB 21 02BF
        gbc.setState(0x724e, 0xe382, 0x3160, 0x6333, 0xad93, 0x46f4, 0x1, 0x1);
        gbc.writeMem(0x724e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe382, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02C0
        gbc.setState(0xdc0f, 0xf230, 0x5c70, 0x8791, 0xaf7f, 0xb2f1, 0x0, 0x1);
        gbc.writeMem(0xdc0f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0xdc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0f));
        EXPECT(0x21, gbc.readMem(0xdc10));
        // CB 21 02C1
        gbc.setState(0x8e4, 0xd2b5, 0xfe40, 0xdf3b, 0x47db, 0x28e7, 0x1, 0x0);
        gbc.writeMem(0x8e4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02C2
        gbc.setState(0x6684, 0xb4ba, 0x1b20, 0xa3a4, 0xaed8, 0x4b09, 0x1, 0x0);
        gbc.writeMem(0x6684, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb4ba, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02C3
        gbc.setState(0x461, 0xa14a, 0x9ce0, 0x63f7, 0x3d48, 0x3eb6, 0x1, 0x0);
        gbc.writeMem(0x461, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02C4
        gbc.setState(0x7bcb, 0xc665, 0xa6b0, 0xf2b3, 0x6be3, 0xee66, 0x1, 0x1);
        gbc.writeMem(0x7bcb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0x7bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02C5
        gbc.setState(0x82ac, 0x5729, 0xe0b0, 0xf771, 0x12a5, 0x6122, 0x0, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x82ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ac));
        EXPECT(0x21, gbc.readMem(0x82ad));
        // CB 21 02C6
        gbc.setState(0x747c, 0xf31c, 0xc5c0, 0x9278, 0x1449, 0x9f26, 0x0, 0x0);
        gbc.writeMem(0x747c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf31c, gbc.sp());
        EXPECT(0x747e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02C7
        gbc.setState(0x23b8, 0x7120, 0x1840, 0x188c, 0xba1c, 0x1c32, 0x1, 0x0);
        gbc.writeMem(0x23b8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02C8
        gbc.setState(0x581a, 0xf6e, 0x4100, 0x1c, 0xdf54, 0x5e8f, 0x1, 0x0);
        gbc.writeMem(0x581a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf6e, gbc.sp());
        EXPECT(0x581c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02C9
        gbc.setState(0x77be, 0x3627, 0xc840, 0x4c62, 0x646b, 0x4806, 0x0, 0x0);
        gbc.writeMem(0x77be, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3627, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02CA
        gbc.setState(0x383c, 0xe2e6, 0x2610, 0x518d, 0x1763, 0x11f7, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe2e6, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02CB
        gbc.setState(0x63a4, 0x2b81, 0xc470, 0xee0f, 0xdae6, 0x496e, 0x1, 0x1);
        gbc.writeMem(0x63a4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2b81, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02CD
        gbc.setState(0x3447, 0x2a2d, 0x3070, 0xe59b, 0x32fe, 0x8224, 0x1, 0x0);
        gbc.writeMem(0x3447, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02CE
        gbc.setState(0x561c, 0xf85c, 0x8e20, 0x7e54, 0x2a95, 0x9a14, 0x0, 0x0);
        gbc.writeMem(0x561c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0x561e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02CF
        gbc.setState(0x947b, 0xbce8, 0x98f0, 0x74f7, 0xb944, 0x251c, 0x1, 0x0);
        gbc.writeMem(0x947b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbce8, gbc.sp());
        EXPECT(0x947d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947b));
        EXPECT(0x21, gbc.readMem(0x947c));
        // CB 21 02D0
        gbc.setState(0x91b4, 0x72d5, 0xf050, 0xd432, 0x151a, 0xf516, 0x0, 0x1);
        gbc.writeMem(0x91b4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b4));
        EXPECT(0x21, gbc.readMem(0x91b5));
        // CB 21 02D1
        gbc.setState(0xc66d, 0x4cff, 0xda00, 0x3dde, 0x151d, 0xcb68, 0x1, 0x1);
        gbc.writeMem(0xc66d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4cff, gbc.sp());
        EXPECT(0xc66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66d));
        EXPECT(0x21, gbc.readMem(0xc66e));
        // CB 21 02D2
        gbc.setState(0x6808, 0x74bc, 0xf330, 0xe981, 0x429c, 0x4cf9, 0x1, 0x0);
        gbc.writeMem(0x6808, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02D3
        gbc.setState(0x3d46, 0xbcde, 0x4bb0, 0x8658, 0x8c55, 0x3958, 0x1, 0x0);
        gbc.writeMem(0x3d46, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbcde, gbc.sp());
        EXPECT(0x3d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02D4
        gbc.setState(0x69f6, 0x8f74, 0xb8f0, 0xbac5, 0x281e, 0x8646, 0x1, 0x0);
        gbc.writeMem(0x69f6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8f74, gbc.sp());
        EXPECT(0x69f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02D5
        gbc.setState(0xb4b0, 0x44, 0x57a0, 0x7d75, 0x1332, 0xd461, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x44, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0x21, gbc.readMem(0xb4b1));
        // CB 21 02D6
        gbc.setState(0xcf0a, 0x195, 0xf7d0, 0x62fa, 0x85ef, 0x15b, 0x1, 0x1);
        gbc.writeMem(0xcf0a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x195, gbc.sp());
        EXPECT(0xcf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0a));
        EXPECT(0x21, gbc.readMem(0xcf0b));
        // CB 21 02D7
        gbc.setState(0xec60, 0x1857, 0x5920, 0x3d96, 0x99cc, 0xeead, 0x0, 0x0);
        gbc.writeMem(0xec60, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0xec62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec60));
        EXPECT(0x21, gbc.readMem(0xec61));
        // CB 21 02D8
        gbc.setState(0xc47, 0xb38, 0x1b50, 0x5078, 0x8ff, 0x984a, 0x1, 0x0);
        gbc.writeMem(0xc47, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb38, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02D9
        gbc.setState(0x1dab, 0xe729, 0xcf50, 0x1938, 0x2853, 0xd756, 0x1, 0x1);
        gbc.writeMem(0x1dab, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe729, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02DA
        gbc.setState(0x6129, 0x219e, 0xf000, 0x6e99, 0xc473, 0x633c, 0x1, 0x1);
        gbc.writeMem(0x6129, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x219e, gbc.sp());
        EXPECT(0x612b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02DB
        gbc.setState(0x1e3d, 0xe17d, 0xcf30, 0x943e, 0x8524, 0xca8c, 0x0, 0x0);
        gbc.writeMem(0x1e3d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0x1e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02DC
        gbc.setState(0x4ae0, 0xf5f1, 0xee10, 0xdc76, 0xdc7, 0x1946, 0x0, 0x0);
        gbc.writeMem(0x4ae0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf5f1, gbc.sp());
        EXPECT(0x4ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02DD
        gbc.setState(0xa75b, 0xb18f, 0xefb0, 0xa7fc, 0x9301, 0x4c33, 0x0, 0x0);
        gbc.writeMem(0xa75b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb18f, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75b));
        EXPECT(0x21, gbc.readMem(0xa75c));
        // CB 21 02DE
        gbc.setState(0x38bf, 0xf2a5, 0x54a0, 0x6328, 0xcc64, 0xc0c6, 0x0, 0x1);
        gbc.writeMem(0x38bf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02DF
        gbc.setState(0xccff, 0xf66e, 0x83b0, 0x92da, 0x3c19, 0x8e81, 0x1, 0x0);
        gbc.writeMem(0xccff, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf66e, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccff));
        EXPECT(0x21, gbc.readMem(0xcd00));
        // CB 21 02E0
        gbc.setState(0x7c78, 0xd03d, 0xf690, 0xd38c, 0x86f4, 0x9cf4, 0x1, 0x0);
        gbc.writeMem(0x7c78, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd03d, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02E1
        gbc.setState(0x4609, 0x71c7, 0x3250, 0x4a86, 0x63cd, 0xd09c, 0x0, 0x0);
        gbc.writeMem(0x4609, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x71c7, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02E2
        gbc.setState(0x57b1, 0x9df1, 0x570, 0xc011, 0x819d, 0x25f4, 0x0, 0x1);
        gbc.writeMem(0x57b1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9df1, gbc.sp());
        EXPECT(0x57b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02E3
        gbc.setState(0x528a, 0xf236, 0xdf50, 0x710e, 0xb48b, 0x47fa, 0x0, 0x1);
        gbc.writeMem(0x528a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf236, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02E4
        gbc.setState(0x763e, 0x6f76, 0xb290, 0x7e08, 0x28b1, 0x66ed, 0x1, 0x1);
        gbc.writeMem(0x763e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6f76, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02E5
        gbc.setState(0x3419, 0x2faf, 0x870, 0x58eb, 0x9e74, 0x2281, 0x1, 0x1);
        gbc.writeMem(0x3419, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2faf, gbc.sp());
        EXPECT(0x341b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02E6
        gbc.setState(0xbad7, 0xcf04, 0x5720, 0xc141, 0xa22c, 0x9a19, 0x0, 0x1);
        gbc.writeMem(0xbad7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcf04, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad7));
        EXPECT(0x21, gbc.readMem(0xbad8));
        // CB 21 02E7
        gbc.setState(0xd8c4, 0x2703, 0x73a0, 0x19c6, 0x6efd, 0x1ee5, 0x0, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0x21, gbc.readMem(0xd8c5));
        // CB 21 02E8
        gbc.setState(0xe92f, 0xc8da, 0xbd0, 0x5e43, 0x11ed, 0xc765, 0x1, 0x1);
        gbc.writeMem(0xe92f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0x21, gbc.readMem(0xe930));
        // CB 21 02E9
        gbc.setState(0x3ce7, 0x2c89, 0xb000, 0x84e4, 0x6dd1, 0x4523, 0x1, 0x1);
        gbc.writeMem(0x3ce7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2c89, gbc.sp());
        EXPECT(0x3ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02EA
        gbc.setState(0x74ec, 0x9416, 0xd2c0, 0x357a, 0x7e55, 0x7417, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02EB
        gbc.setState(0x97d4, 0x79ce, 0xfc0, 0xd230, 0x4564, 0xe601, 0x0, 0x1);
        gbc.writeMem(0x97d4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x79ce, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d4));
        EXPECT(0x21, gbc.readMem(0x97d5));
        // CB 21 02EC
        gbc.setState(0xbfd1, 0x67b9, 0xd890, 0x3a, 0x21a0, 0xb2b3, 0x0, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0x21, gbc.readMem(0xbfd2));
        // CB 21 02ED
        gbc.setState(0x70b7, 0x1fb4, 0xcd00, 0x7f65, 0x3e11, 0x6795, 0x0, 0x1);
        gbc.writeMem(0x70b7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1fb4, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02EE
        gbc.setState(0x3ed, 0xe508, 0xf2b0, 0x4d9a, 0x705, 0x6ce5, 0x1, 0x0);
        gbc.writeMem(0x3ed, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe508, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02EF
        gbc.setState(0x909a, 0xadb8, 0x3b30, 0x9a24, 0x3341, 0xdb26, 0x0, 0x0);
        gbc.writeMem(0x909a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909a));
        EXPECT(0x21, gbc.readMem(0x909b));
        // CB 21 02F0
        gbc.setState(0x2b40, 0xe580, 0x5980, 0xf5a, 0x73db, 0x4e05, 0x0, 0x1);
        gbc.writeMem(0x2b40, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe580, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02F2
        gbc.setState(0x5bc2, 0x1e99, 0xe250, 0x96f, 0xf0e, 0x33c1, 0x0, 0x1);
        gbc.writeMem(0x5bc2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1e99, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02F3
        gbc.setState(0x7138, 0xf638, 0xf110, 0x9c5a, 0x3dc, 0x8e70, 0x1, 0x1);
        gbc.writeMem(0x7138, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf638, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02F4
        gbc.setState(0xc691, 0x195e, 0x1590, 0xbb41, 0xc0c9, 0x75b4, 0x1, 0x1);
        gbc.writeMem(0xc691, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc691));
        EXPECT(0x21, gbc.readMem(0xc692));
        // CB 21 02F5
        gbc.setState(0x499c, 0x1c5a, 0xa5d0, 0x5a21, 0x6425, 0x8aca, 0x0, 0x1);
        gbc.writeMem(0x499c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x499e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02F6
        gbc.setState(0xabcd, 0xbd43, 0xe850, 0x4ab2, 0x4c01, 0x3890, 0x0, 0x1);
        gbc.writeMem(0xabcd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbd43, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcd));
        EXPECT(0x21, gbc.readMem(0xabce));
        // CB 21 02F7
        gbc.setState(0x8ab3, 0x258b, 0x4830, 0xf7e2, 0x3ea3, 0x5c9b, 0x1, 0x0);
        gbc.writeMem(0x8ab3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0x8ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab3));
        EXPECT(0x21, gbc.readMem(0x8ab4));
        // CB 21 02F9
        gbc.setState(0x8868, 0xe13f, 0x6860, 0x9ecc, 0x4cd4, 0xc8ca, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe13f, gbc.sp());
        EXPECT(0x886a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8868));
        EXPECT(0x21, gbc.readMem(0x8869));
        // CB 21 02FA
        gbc.setState(0xd37c, 0x2723, 0xc870, 0x1cb5, 0xbbd9, 0x1a94, 0x0, 0x1);
        gbc.writeMem(0xd37c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37c));
        EXPECT(0x21, gbc.readMem(0xd37d));
        // CB 21 02FC
        gbc.setState(0x75b, 0x535b, 0x9fd0, 0x2584, 0x441c, 0x557f, 0x0, 0x0);
        gbc.writeMem(0x75b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 02FD
        gbc.setState(0x25ec, 0x7ebe, 0xbcb0, 0x2c40, 0xd51f, 0x8efd, 0x0, 0x0);
        gbc.writeMem(0x25ec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7ebe, gbc.sp());
        EXPECT(0x25ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 02FE
        gbc.setState(0xb2be, 0x49e0, 0x5f00, 0x192b, 0x518e, 0xe6b7, 0x1, 0x1);
        gbc.writeMem(0xb2be, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x49e0, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2be));
        EXPECT(0x21, gbc.readMem(0xb2bf));
        // CB 21 02FF
        gbc.setState(0x6e00, 0x6048, 0xe180, 0x4bb8, 0xf121, 0x51cd, 0x1, 0x0);
        gbc.writeMem(0x6e00, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6048, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0300
        gbc.setState(0xcf39, 0x810f, 0x46a0, 0x768, 0xeba3, 0xcdcd, 0x1, 0x0);
        gbc.writeMem(0xcf39, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0xcf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf39));
        EXPECT(0x21, gbc.readMem(0xcf3a));
        // CB 21 0301
        gbc.setState(0x1769, 0x8a2e, 0xf7c0, 0x9a79, 0x1904, 0x5d73, 0x0, 0x1);
        gbc.writeMem(0x1769, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8a2e, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0302
        gbc.setState(0x855d, 0x7abf, 0x7100, 0xd2da, 0xd29a, 0x3c8f, 0x0, 0x1);
        gbc.writeMem(0x855d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7abf, gbc.sp());
        EXPECT(0x855f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855d));
        EXPECT(0x21, gbc.readMem(0x855e));
        // CB 21 0303
        gbc.setState(0xe022, 0x5827, 0x9c0, 0x8a0d, 0x46b2, 0xe8bf, 0x0, 0x1);
        gbc.writeMem(0xe022, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5827, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe022));
        EXPECT(0x21, gbc.readMem(0xe023));
        // CB 21 0304
        gbc.setState(0xecd8, 0x80a5, 0x40c0, 0x9412, 0x23df, 0xdcf9, 0x0, 0x0);
        gbc.writeMem(0xecd8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0xecda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd8));
        EXPECT(0x21, gbc.readMem(0xecd9));
        // CB 21 0305
        gbc.setState(0x7b2d, 0x581a, 0xa7d0, 0x49f6, 0xfce8, 0x1d08, 0x0, 0x1);
        gbc.writeMem(0x7b2d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0x7b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0306
        gbc.setState(0x770b, 0x1e5c, 0x4a40, 0x7fae, 0x4c5b, 0x4105, 0x0, 0x1);
        gbc.writeMem(0x770b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0307
        gbc.setState(0xb748, 0x8549, 0xc210, 0x89fb, 0x6044, 0x57d5, 0x1, 0x0);
        gbc.writeMem(0xb748, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0xb74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb748));
        EXPECT(0x21, gbc.readMem(0xb749));
        // CB 21 0308
        gbc.setState(0xa733, 0xd72e, 0x9490, 0x6a4, 0x73f0, 0x6099, 0x0, 0x0);
        gbc.writeMem(0xa733, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd72e, gbc.sp());
        EXPECT(0xa735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa733));
        EXPECT(0x21, gbc.readMem(0xa734));
        // CB 21 0309
        gbc.setState(0xcc44, 0xe87f, 0x7180, 0x5776, 0x8fb0, 0xd2dd, 0x0, 0x0);
        gbc.writeMem(0xcc44, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe87f, gbc.sp());
        EXPECT(0xcc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc44));
        EXPECT(0x21, gbc.readMem(0xcc45));
        // CB 21 030A
        gbc.setState(0xb888, 0x21d6, 0x98a0, 0xc3a7, 0xdefa, 0xc164, 0x0, 0x0);
        gbc.writeMem(0xb888, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x21d6, gbc.sp());
        EXPECT(0xb88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb888));
        EXPECT(0x21, gbc.readMem(0xb889));
        // CB 21 030B
        gbc.setState(0x99b3, 0x189b, 0xc80, 0x7d3e, 0xab68, 0xdd6, 0x0, 0x1);
        gbc.writeMem(0x99b3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x189b, gbc.sp());
        EXPECT(0x99b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b3));
        EXPECT(0x21, gbc.readMem(0x99b4));
        // CB 21 030C
        gbc.setState(0x6ab2, 0x46c1, 0x1d60, 0x8b6f, 0x1dfa, 0x1e19, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46c1, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 030D
        gbc.setState(0x1ca7, 0xfdac, 0x9850, 0xe5a, 0x53c7, 0x5bbf, 0x0, 0x0);
        gbc.writeMem(0x1ca7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfdac, gbc.sp());
        EXPECT(0x1ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 030E
        gbc.setState(0xa059, 0x9fff, 0x5720, 0x7a5a, 0x21f8, 0x5eec, 0x1, 0x1);
        gbc.writeMem(0xa059, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9fff, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa059));
        EXPECT(0x21, gbc.readMem(0xa05a));
        // CB 21 030F
        gbc.setState(0x7128, 0x44c5, 0x1d10, 0xaac5, 0x82ae, 0x58ce, 0x0, 0x1);
        gbc.writeMem(0x7128, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0x712a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0310
        gbc.setState(0x5a88, 0x30eb, 0x3860, 0x2310, 0xb09a, 0x1785, 0x1, 0x1);
        gbc.writeMem(0x5a88, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x30eb, gbc.sp());
        EXPECT(0x5a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0311
        gbc.setState(0xe650, 0xc43f, 0x8e00, 0x3bbf, 0x351e, 0xbf60, 0x1, 0x0);
        gbc.writeMem(0xe650, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc43f, gbc.sp());
        EXPECT(0xe652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe650));
        EXPECT(0x21, gbc.readMem(0xe651));
        // CB 21 0312
        gbc.setState(0x5940, 0xdbd0, 0x3e70, 0xb6eb, 0xc231, 0x9f8b, 0x0, 0x1);
        gbc.writeMem(0x5940, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdbd0, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0313
        gbc.setState(0x5d25, 0x1ae0, 0x8d20, 0xf262, 0xcf1e, 0x96f4, 0x1, 0x0);
        gbc.writeMem(0x5d25, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ae0, gbc.sp());
        EXPECT(0x5d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0314
        gbc.setState(0x92e6, 0x10d8, 0x4470, 0xc783, 0xc942, 0x9097, 0x0, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0x21, gbc.readMem(0x92e7));
        // CB 21 0315
        gbc.setState(0x4f6a, 0x6a4c, 0x1a20, 0xe0f9, 0x2231, 0xc7e1, 0x0, 0x1);
        gbc.writeMem(0x4f6a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0316
        gbc.setState(0x26c0, 0xdb90, 0xd680, 0x6de7, 0xbcfc, 0xccc7, 0x0, 0x0);
        gbc.writeMem(0x26c0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb90, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0318
        gbc.setState(0x8e07, 0x89da, 0x3b10, 0xb24c, 0x17b7, 0x2bcd, 0x0, 0x0);
        gbc.writeMem(0x8e07, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x89da, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e07));
        EXPECT(0x21, gbc.readMem(0x8e08));
        // CB 21 0319
        gbc.setState(0x4a9c, 0x610e, 0xcdc0, 0x28cc, 0x6a22, 0x1574, 0x0, 0x0);
        gbc.writeMem(0x4a9c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x610e, gbc.sp());
        EXPECT(0x4a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 031A
        gbc.setState(0xc837, 0x2894, 0x4c70, 0xbe8, 0xae25, 0x4d71, 0x0, 0x1);
        gbc.writeMem(0xc837, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0xc839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc837));
        EXPECT(0x21, gbc.readMem(0xc838));
        // CB 21 031B
        gbc.setState(0x9dee, 0xe5be, 0xd410, 0xdc70, 0xe9d2, 0xf391, 0x1, 0x0);
        gbc.writeMem(0x9dee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe5be, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0x21, gbc.readMem(0x9def));
        // CB 21 031D
        gbc.setState(0x2533, 0xdec4, 0xb410, 0x8b26, 0x916b, 0x79be, 0x0, 0x0);
        gbc.writeMem(0x2533, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdec4, gbc.sp());
        EXPECT(0x2535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 031E
        gbc.setState(0xd92c, 0xaefc, 0xff20, 0xd564, 0xa2e7, 0xf283, 0x0, 0x0);
        gbc.writeMem(0xd92c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaefc, gbc.sp());
        EXPECT(0xd92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92c));
        EXPECT(0x21, gbc.readMem(0xd92d));
        // CB 21 031F
        gbc.setState(0xe3f2, 0x53d4, 0x9cc0, 0x736f, 0x1ece, 0x1281, 0x1, 0x1);
        gbc.writeMem(0xe3f2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f2));
        EXPECT(0x21, gbc.readMem(0xe3f3));
        // CB 21 0320
        gbc.setState(0xc0a6, 0xc036, 0x6da0, 0x7d33, 0xea0e, 0xf384, 0x1, 0x1);
        gbc.writeMem(0xc0a6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc036, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a6));
        EXPECT(0x21, gbc.readMem(0xc0a7));
        // CB 21 0321
        gbc.setState(0x59f8, 0xe07b, 0x2870, 0xdcc0, 0x132c, 0xe131, 0x0, 0x1);
        gbc.writeMem(0x59f8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe07b, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0322
        gbc.setState(0x3eaf, 0xae18, 0x7360, 0x7630, 0x37f9, 0xc3c0, 0x0, 0x1);
        gbc.writeMem(0x3eaf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xae18, gbc.sp());
        EXPECT(0x3eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0323
        gbc.setState(0x2541, 0x25e7, 0x2890, 0xc5cb, 0x8cd2, 0x873b, 0x0, 0x1);
        gbc.writeMem(0x2541, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0x2543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0324
        gbc.setState(0x94d6, 0x9560, 0x9660, 0xb0b1, 0xe95f, 0xf521, 0x1, 0x1);
        gbc.writeMem(0x94d6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d6));
        EXPECT(0x21, gbc.readMem(0x94d7));
        // CB 21 0325
        gbc.setState(0x7cd4, 0x824d, 0x7630, 0xe1d9, 0x2e8a, 0x274b, 0x0, 0x0);
        gbc.writeMem(0x7cd4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x824d, gbc.sp());
        EXPECT(0x7cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0327
        gbc.setState(0x2a0a, 0x9b27, 0x2df0, 0xb866, 0x7f1, 0xf893, 0x0, 0x1);
        gbc.writeMem(0x2a0a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0328
        gbc.setState(0x3e2f, 0xa4f, 0xda80, 0xbec0, 0x38d6, 0x1c5, 0x0, 0x0);
        gbc.writeMem(0x3e2f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0x3e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0329
        gbc.setState(0xcc9e, 0x747b, 0x2160, 0x827f, 0xd0a3, 0x4f76, 0x1, 0x0);
        gbc.writeMem(0xcc9e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x747b, gbc.sp());
        EXPECT(0xcca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9e));
        EXPECT(0x21, gbc.readMem(0xcc9f));
        // CB 21 032A
        gbc.setState(0x6a10, 0x8d91, 0x5be0, 0xd9f3, 0xd31, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x6a10, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8d91, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 032B
        gbc.setState(0x485a, 0x3e38, 0x6f00, 0x3f4f, 0xc4bf, 0x913c, 0x1, 0x0);
        gbc.writeMem(0x485a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3e38, gbc.sp());
        EXPECT(0x485c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 032C
        gbc.setState(0x1d6f, 0x25ad, 0x8a40, 0x8449, 0x6e62, 0x9023, 0x1, 0x1);
        gbc.writeMem(0x1d6f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x25ad, gbc.sp());
        EXPECT(0x1d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 032D
        gbc.setState(0x554d, 0x1626, 0xb340, 0xbeb6, 0x97ad, 0xb9cc, 0x0, 0x1);
        gbc.writeMem(0x554d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 032E
        gbc.setState(0x1e4e, 0xecd0, 0x8d70, 0x3eb0, 0xd2c4, 0xc732, 0x0, 0x0);
        gbc.writeMem(0x1e4e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0x1e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 032F
        gbc.setState(0xc20e, 0x1826, 0x2380, 0x4579, 0x7f15, 0x4a2b, 0x0, 0x1);
        gbc.writeMem(0xc20e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1826, gbc.sp());
        EXPECT(0xc210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20e));
        EXPECT(0x21, gbc.readMem(0xc20f));
        // CB 21 0330
        gbc.setState(0xcaf8, 0x4cbf, 0xb750, 0x5cc4, 0x96bb, 0xa199, 0x1, 0x0);
        gbc.writeMem(0xcaf8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0xcafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf8));
        EXPECT(0x21, gbc.readMem(0xcaf9));
        // CB 21 0331
        gbc.setState(0xe638, 0xf204, 0xe7b0, 0x4150, 0x9aff, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0xe638, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe638));
        EXPECT(0x21, gbc.readMem(0xe639));
        // CB 21 0332
        gbc.setState(0x7058, 0x5b52, 0xf720, 0xc651, 0x9026, 0x5e36, 0x1, 0x1);
        gbc.writeMem(0x7058, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5b52, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0333
        gbc.setState(0x6470, 0xf717, 0xf760, 0xf345, 0x12fb, 0x542f, 0x1, 0x1);
        gbc.writeMem(0x6470, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf717, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0334
        gbc.setState(0xe7bc, 0x57da, 0x7f00, 0xb341, 0x2e4b, 0x5daa, 0x1, 0x0);
        gbc.writeMem(0xe7bc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bc));
        EXPECT(0x21, gbc.readMem(0xe7bd));
        // CB 21 0335
        gbc.setState(0x45b6, 0x462d, 0xc180, 0x4469, 0x315b, 0x9f07, 0x1, 0x1);
        gbc.writeMem(0x45b6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0x45b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0336
        gbc.setState(0xaa97, 0xa31a, 0xd670, 0x3c9c, 0xc9b7, 0xf4dd, 0x1, 0x1);
        gbc.writeMem(0xaa97, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa31a, gbc.sp());
        EXPECT(0xaa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa97));
        EXPECT(0x21, gbc.readMem(0xaa98));
        // CB 21 0337
        gbc.setState(0x1c05, 0x681b, 0xad10, 0xf1c7, 0x304c, 0xd658, 0x1, 0x1);
        gbc.writeMem(0x1c05, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x681b, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0338
        gbc.setState(0x2a4e, 0x3fb, 0x130, 0x9301, 0x4ebc, 0xecc1, 0x1, 0x0);
        gbc.writeMem(0x2a4e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0339
        gbc.setState(0x4b48, 0xfbf3, 0xad70, 0x6ce8, 0x709b, 0x8119, 0x1, 0x0);
        gbc.writeMem(0x4b48, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfbf3, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 033A
        gbc.setState(0xa46f, 0xa87b, 0xb640, 0x3269, 0xda0d, 0x2787, 0x1, 0x0);
        gbc.writeMem(0xa46f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa87b, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46f));
        EXPECT(0x21, gbc.readMem(0xa470));
        // CB 21 033B
        gbc.setState(0x3b42, 0xdf87, 0x6400, 0xfdd5, 0xffb1, 0x9503, 0x0, 0x0);
        gbc.writeMem(0x3b42, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 033C
        gbc.setState(0x5525, 0x535f, 0x5d70, 0x6b9, 0x4f4e, 0xd3b, 0x0, 0x0);
        gbc.writeMem(0x5525, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0x5527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 033D
        gbc.setState(0x7dea, 0x488d, 0x7e10, 0xf14b, 0xd073, 0x14eb, 0x0, 0x1);
        gbc.writeMem(0x7dea, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x488d, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 033E
        gbc.setState(0x6150, 0xf87b, 0x44a0, 0x5b25, 0x7bf2, 0xb3b2, 0x1, 0x0);
        gbc.writeMem(0x6150, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf87b, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 033F
        gbc.setState(0x1d2a, 0x8410, 0xa780, 0x51a0, 0x6c1, 0xe355, 0x1, 0x0);
        gbc.writeMem(0x1d2a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8410, gbc.sp());
        EXPECT(0x1d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0340
        gbc.setState(0x226c, 0x68, 0x42d0, 0x2b4b, 0x479a, 0x7fd5, 0x1, 0x0);
        gbc.writeMem(0x226c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x68, gbc.sp());
        EXPECT(0x226e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0341
        gbc.setState(0x7e3a, 0x1462, 0x14e0, 0x6a0b, 0x49bb, 0xfe87, 0x1, 0x0);
        gbc.writeMem(0x7e3a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1462, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0342
        gbc.setState(0xb700, 0xeefa, 0x15e0, 0xf50b, 0xe207, 0x6676, 0x0, 0x1);
        gbc.writeMem(0xb700, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0xb702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb700));
        EXPECT(0x21, gbc.readMem(0xb701));
        // CB 21 0343
        gbc.setState(0x7f91, 0xbddf, 0xafa0, 0x54e2, 0xd5bf, 0x8729, 0x1, 0x0);
        gbc.writeMem(0x7f91, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbddf, gbc.sp());
        EXPECT(0x7f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0344
        gbc.setState(0x6c85, 0xf1b0, 0x6c90, 0xed2c, 0x9291, 0x3b9b, 0x0, 0x1);
        gbc.writeMem(0x6c85, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf1b0, gbc.sp());
        EXPECT(0x6c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0345
        gbc.setState(0xbb7, 0xab0, 0x87e0, 0x8691, 0x961f, 0xae16, 0x0, 0x0);
        gbc.writeMem(0xbb7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0xbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0346
        gbc.setState(0x1cf6, 0xa032, 0x290, 0x11bf, 0xb2b3, 0x3a82, 0x1, 0x1);
        gbc.writeMem(0x1cf6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x1cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0347
        gbc.setState(0xcf5c, 0x6cee, 0x9ac0, 0xd065, 0xc4a4, 0x65f6, 0x1, 0x1);
        gbc.writeMem(0xcf5c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6cee, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5c));
        EXPECT(0x21, gbc.readMem(0xcf5d));
        // CB 21 0348
        gbc.setState(0x1414, 0x1d27, 0x2870, 0x1197, 0x96a1, 0x5122, 0x1, 0x0);
        gbc.writeMem(0x1414, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1d27, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0349
        gbc.setState(0x3093, 0x2a75, 0x7190, 0xfb4, 0xb44, 0x4670, 0x1, 0x0);
        gbc.writeMem(0x3093, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a75, gbc.sp());
        EXPECT(0x3095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 034A
        gbc.setState(0xed3b, 0x7ff6, 0xcc70, 0xc039, 0xabe5, 0xc3f0, 0x0, 0x1);
        gbc.writeMem(0xed3b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ff6, gbc.sp());
        EXPECT(0xed3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3b));
        EXPECT(0x21, gbc.readMem(0xed3c));
        // CB 21 034B
        gbc.setState(0x1d64, 0x604f, 0x8060, 0x69ea, 0x8cba, 0x4530, 0x1, 0x0);
        gbc.writeMem(0x1d64, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x604f, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 034C
        gbc.setState(0x3c7f, 0xa988, 0x6290, 0xd792, 0x6a75, 0x20c, 0x1, 0x1);
        gbc.writeMem(0x3c7f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0x3c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 034D
        gbc.setState(0xaa17, 0x2187, 0xab90, 0x7818, 0xf3d9, 0x8f14, 0x0, 0x1);
        gbc.writeMem(0xaa17, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2187, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa17));
        EXPECT(0x21, gbc.readMem(0xaa18));
        // CB 21 034E
        gbc.setState(0xb643, 0xf158, 0x410, 0xc619, 0xfdfd, 0x1b57, 0x1, 0x0);
        gbc.writeMem(0xb643, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb643));
        EXPECT(0x21, gbc.readMem(0xb644));
        // CB 21 034F
        gbc.setState(0xa998, 0xea2c, 0xbb00, 0x94c, 0x6f06, 0x7be3, 0x0, 0x0);
        gbc.writeMem(0xa998, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0xa99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa998));
        EXPECT(0x21, gbc.readMem(0xa999));
        // CB 21 0350
        gbc.setState(0x1ce1, 0xf066, 0x270, 0xe3c3, 0x7f8, 0xdcfd, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0351
        gbc.setState(0x31cb, 0xa34a, 0xc1b0, 0xb33a, 0x7545, 0xc6d7, 0x0, 0x0);
        gbc.writeMem(0x31cb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa34a, gbc.sp());
        EXPECT(0x31cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0352
        gbc.setState(0x54e6, 0x7601, 0xe230, 0xf169, 0x175b, 0xa19c, 0x1, 0x1);
        gbc.writeMem(0x54e6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7601, gbc.sp());
        EXPECT(0x54e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0354
        gbc.setState(0xed9f, 0x9f96, 0x210, 0x8018, 0x68af, 0xa035, 0x1, 0x1);
        gbc.writeMem(0xed9f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9f96, gbc.sp());
        EXPECT(0xeda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9f));
        EXPECT(0x21, gbc.readMem(0xeda0));
        // CB 21 0355
        gbc.setState(0x2070, 0x9e72, 0xe100, 0x3524, 0xc095, 0xead, 0x0, 0x0);
        gbc.writeMem(0x2070, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x2072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0356
        gbc.setState(0x9772, 0x3178, 0x7c70, 0x257c, 0x7c58, 0xe68a, 0x0, 0x0);
        gbc.writeMem(0x9772, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3178, gbc.sp());
        EXPECT(0x9774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9772));
        EXPECT(0x21, gbc.readMem(0x9773));
        // CB 21 0357
        gbc.setState(0xd7de, 0xeda8, 0x1670, 0x9e59, 0xa79d, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0xd7de, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeda8, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7de));
        EXPECT(0x21, gbc.readMem(0xd7df));
        // CB 21 0358
        gbc.setState(0x821b, 0x2994, 0x4b90, 0x36d9, 0x402e, 0x60b1, 0x1, 0x1);
        gbc.writeMem(0x821b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2994, gbc.sp());
        EXPECT(0x821d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821b));
        EXPECT(0x21, gbc.readMem(0x821c));
        // CB 21 0359
        gbc.setState(0x49a7, 0x5b86, 0xda30, 0xf5a7, 0xf216, 0x7522, 0x1, 0x0);
        gbc.writeMem(0x49a7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5b86, gbc.sp());
        EXPECT(0x49a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 035A
        gbc.setState(0xb813, 0xb19d, 0x4310, 0xcf23, 0xb31f, 0xccbd, 0x0, 0x0);
        gbc.writeMem(0xb813, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb19d, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x21, gbc.readMem(0xb814));
        // CB 21 035B
        gbc.setState(0xbd50, 0xa466, 0x7bd0, 0x8bb3, 0x8d5e, 0xf80b, 0x1, 0x0);
        gbc.writeMem(0xbd50, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa466, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd50));
        EXPECT(0x21, gbc.readMem(0xbd51));
        // CB 21 035D
        gbc.setState(0xd8d, 0x5de, 0x45c0, 0x7ba, 0x3def, 0x8b5a, 0x1, 0x0);
        gbc.writeMem(0xd8d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 035E
        gbc.setState(0xb7ec, 0xf41a, 0xc770, 0x3291, 0x40f0, 0x8503, 0x0, 0x1);
        gbc.writeMem(0xb7ec, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf41a, gbc.sp());
        EXPECT(0xb7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ec));
        EXPECT(0x21, gbc.readMem(0xb7ed));
        // CB 21 035F
        gbc.setState(0x50ca, 0x790d, 0x27b0, 0x29e0, 0xc0e2, 0x35a4, 0x0, 0x1);
        gbc.writeMem(0x50ca, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x790d, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0360
        gbc.setState(0xdc1d, 0xe01c, 0xe2e0, 0x5975, 0xe48a, 0x2a99, 0x1, 0x0);
        gbc.writeMem(0xdc1d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe01c, gbc.sp());
        EXPECT(0xdc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1d));
        EXPECT(0x21, gbc.readMem(0xdc1e));
        // CB 21 0361
        gbc.setState(0x13fb, 0x8fb2, 0xb870, 0x4631, 0xa9db, 0xb223, 0x0, 0x0);
        gbc.writeMem(0x13fb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8fb2, gbc.sp());
        EXPECT(0x13fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0362
        gbc.setState(0x9b61, 0x578e, 0x24f0, 0x1c76, 0x1833, 0x50e7, 0x1, 0x1);
        gbc.writeMem(0x9b61, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b61));
        EXPECT(0x21, gbc.readMem(0x9b62));
        // CB 21 0363
        gbc.setState(0x8bca, 0x459, 0xed0, 0x7b20, 0x2a8a, 0xd0db, 0x1, 0x0);
        gbc.writeMem(0x8bca, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bca));
        EXPECT(0x21, gbc.readMem(0x8bcb));
        // CB 21 0364
        gbc.setState(0x7ed5, 0xa095, 0x8d30, 0x6d62, 0x2fb3, 0xc68f, 0x0, 0x1);
        gbc.writeMem(0x7ed5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0x7ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0365
        gbc.setState(0x4e4f, 0xee2e, 0x2780, 0xc6fc, 0x36cc, 0x1c37, 0x1, 0x1);
        gbc.writeMem(0x4e4f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee2e, gbc.sp());
        EXPECT(0x4e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0366
        gbc.setState(0xe9ab, 0x1640, 0xb300, 0x679d, 0xfd94, 0x1ea9, 0x1, 0x0);
        gbc.writeMem(0xe9ab, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1640, gbc.sp());
        EXPECT(0xe9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ab));
        EXPECT(0x21, gbc.readMem(0xe9ac));
        // CB 21 0367
        gbc.setState(0x8bf6, 0x9279, 0x74f0, 0xa1f, 0x552e, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0x8bf6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x8bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf6));
        EXPECT(0x21, gbc.readMem(0x8bf7));
        // CB 21 0368
        gbc.setState(0x7f2b, 0x6e59, 0x4680, 0xf3c2, 0x632c, 0x26f1, 0x1, 0x1);
        gbc.writeMem(0x7f2b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6e59, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0369
        gbc.setState(0x39ee, 0x63b2, 0x5450, 0xd4ff, 0x99f4, 0x78f1, 0x0, 0x0);
        gbc.writeMem(0x39ee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x63b2, gbc.sp());
        EXPECT(0x39f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 036A
        gbc.setState(0x7be3, 0xbb9d, 0x7c20, 0xbc42, 0x87d, 0xddcc, 0x1, 0x1);
        gbc.writeMem(0x7be3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbb9d, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 036B
        gbc.setState(0x4b23, 0xc1b6, 0x37a0, 0x7628, 0x1fe3, 0x88c7, 0x0, 0x0);
        gbc.writeMem(0x4b23, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc1b6, gbc.sp());
        EXPECT(0x4b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 036C
        gbc.setState(0xcda2, 0x8276, 0x7130, 0xda38, 0x33b2, 0x995a, 0x0, 0x0);
        gbc.writeMem(0xcda2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8276, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda2));
        EXPECT(0x21, gbc.readMem(0xcda3));
        // CB 21 036D
        gbc.setState(0x98d1, 0x7d0, 0xa430, 0x4e5d, 0xc58e, 0xe220, 0x1, 0x0);
        gbc.writeMem(0x98d1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d1));
        EXPECT(0x21, gbc.readMem(0x98d2));
        // CB 21 036E
        gbc.setState(0x99e, 0xdbdc, 0xf3b0, 0x57fb, 0x6aff, 0x77e6, 0x1, 0x0);
        gbc.writeMem(0x99e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 036F
        gbc.setState(0x95cc, 0xc924, 0x7ec0, 0x51a9, 0x1717, 0x6071, 0x1, 0x1);
        gbc.writeMem(0x95cc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0x95ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cc));
        EXPECT(0x21, gbc.readMem(0x95cd));
        // CB 21 0370
        gbc.setState(0xbd8c, 0x8859, 0x58c0, 0x9eac, 0xc85e, 0x17cb, 0x1, 0x0);
        gbc.writeMem(0xbd8c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8859, gbc.sp());
        EXPECT(0xbd8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8c));
        EXPECT(0x21, gbc.readMem(0xbd8d));
        // CB 21 0371
        gbc.setState(0x4dc3, 0xf1ab, 0x9240, 0x1eb7, 0x77d1, 0xd9ec, 0x0, 0x0);
        gbc.writeMem(0x4dc3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0x4dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0372
        gbc.setState(0xc3d1, 0xfd0a, 0x590, 0x700a, 0x7946, 0xdb6e, 0x1, 0x1);
        gbc.writeMem(0xc3d1, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfd0a, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d1));
        EXPECT(0x21, gbc.readMem(0xc3d2));
        // CB 21 0373
        gbc.setState(0x3a12, 0xbe2c, 0xa000, 0x8959, 0x176f, 0x867, 0x0, 0x1);
        gbc.writeMem(0x3a12, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbe2c, gbc.sp());
        EXPECT(0x3a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0374
        gbc.setState(0x7934, 0xc0e5, 0x2fe0, 0xb96b, 0x9f51, 0x617d, 0x1, 0x1);
        gbc.writeMem(0x7934, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x7936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0375
        gbc.setState(0x2da3, 0x9c9e, 0x9f90, 0xa9f5, 0x5586, 0x43eb, 0x1, 0x1);
        gbc.writeMem(0x2da3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0x2da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0376
        gbc.setState(0xd28f, 0xbaa7, 0x4310, 0xa061, 0xb136, 0xbcf8, 0x1, 0x1);
        gbc.writeMem(0xd28f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0xd291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28f));
        EXPECT(0x21, gbc.readMem(0xd290));
        // CB 21 0377
        gbc.setState(0x1c6c, 0x1c27, 0xc250, 0x1820, 0x6087, 0xda98, 0x1, 0x0);
        gbc.writeMem(0x1c6c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1c27, gbc.sp());
        EXPECT(0x1c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0378
        gbc.setState(0xde17, 0x1891, 0xfd50, 0x1773, 0x84f2, 0xdd0c, 0x0, 0x1);
        gbc.writeMem(0xde17, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0xde19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde17));
        EXPECT(0x21, gbc.readMem(0xde18));
        // CB 21 037A
        gbc.setState(0x438c, 0x3e3b, 0xe830, 0x6d01, 0xa52d, 0x388f, 0x0, 0x1);
        gbc.writeMem(0x438c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3e3b, gbc.sp());
        EXPECT(0x438e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 037B
        gbc.setState(0x78c9, 0xe332, 0x6490, 0xbd86, 0xc714, 0x8f72, 0x1, 0x0);
        gbc.writeMem(0x78c9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 037C
        gbc.setState(0x15ac, 0x43e1, 0x1200, 0x2686, 0xabab, 0x95b6, 0x1, 0x1);
        gbc.writeMem(0x15ac, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x43e1, gbc.sp());
        EXPECT(0x15ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 037D
        gbc.setState(0x4049, 0xe9f6, 0xad80, 0x1ec9, 0x4e8a, 0x1a79, 0x0, 0x1);
        gbc.writeMem(0x4049, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x404b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 037E
        gbc.setState(0x9f62, 0x7052, 0x8070, 0x3581, 0x23b5, 0xe44, 0x1, 0x0);
        gbc.writeMem(0x9f62, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7052, gbc.sp());
        EXPECT(0x9f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f62));
        EXPECT(0x21, gbc.readMem(0x9f63));
        // CB 21 037F
        gbc.setState(0xa2a5, 0x727, 0x5a0, 0xf8e1, 0xfc08, 0xe095, 0x1, 0x0);
        gbc.writeMem(0xa2a5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0xa2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a5));
        EXPECT(0x21, gbc.readMem(0xa2a6));
        // CB 21 0380
        gbc.setState(0xcf19, 0x97bd, 0x9280, 0xe869, 0x3ba, 0xa8a, 0x1, 0x1);
        gbc.writeMem(0xcf19, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97bd, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf19));
        EXPECT(0x21, gbc.readMem(0xcf1a));
        // CB 21 0381
        gbc.setState(0x3018, 0x80fe, 0x85f0, 0xb62, 0x38ed, 0x4b10, 0x1, 0x1);
        gbc.writeMem(0x3018, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x80fe, gbc.sp());
        EXPECT(0x301a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0382
        gbc.setState(0x99e2, 0x568c, 0x6500, 0xabfc, 0x92b8, 0x8df8, 0x0, 0x0);
        gbc.writeMem(0x99e2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0x99e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e2));
        EXPECT(0x21, gbc.readMem(0x99e3));
        // CB 21 0383
        gbc.setState(0xa2a0, 0x5319, 0x8c30, 0x3f74, 0xa05e, 0xf212, 0x1, 0x1);
        gbc.writeMem(0xa2a0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5319, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a0));
        EXPECT(0x21, gbc.readMem(0xa2a1));
        // CB 21 0384
        gbc.setState(0xe1bf, 0x1477, 0x2260, 0x42e1, 0xa4a6, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0xe1bf, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0xe1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1bf));
        EXPECT(0x21, gbc.readMem(0xe1c0));
        // CB 21 0385
        gbc.setState(0xad3, 0xe80e, 0x5ee0, 0xc6ea, 0x7f90, 0xfd91, 0x0, 0x0);
        gbc.writeMem(0xad3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0386
        gbc.setState(0x36c3, 0x2694, 0xc120, 0x7e20, 0x3303, 0x10dc, 0x1, 0x1);
        gbc.writeMem(0x36c3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0x36c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0387
        gbc.setState(0xa262, 0xd50b, 0xec80, 0x2619, 0x42bf, 0x205, 0x1, 0x0);
        gbc.writeMem(0xa262, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0xa264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa262));
        EXPECT(0x21, gbc.readMem(0xa263));
        // CB 21 0388
        gbc.setState(0x436, 0x81e2, 0xf330, 0xc9a4, 0x7fe7, 0xe9c4, 0x1, 0x0);
        gbc.writeMem(0x436, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x81e2, gbc.sp());
        EXPECT(0x438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 0389
        gbc.setState(0x8527, 0xd364, 0x5d60, 0x98a4, 0x6b8d, 0xa491, 0x1, 0x0);
        gbc.writeMem(0x8527, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0x8529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8527));
        EXPECT(0x21, gbc.readMem(0x8528));
        // CB 21 038B
        gbc.setState(0x5913, 0x6364, 0x4ee0, 0x35b3, 0x52dd, 0x9f96, 0x1, 0x1);
        gbc.writeMem(0x5913, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6364, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 038C
        gbc.setState(0x5b4a, 0x26a1, 0x6510, 0xaa8d, 0xf198, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0x5b4a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x5b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 038D
        gbc.setState(0x9ea8, 0xd642, 0x5f90, 0x98e, 0x3a4b, 0x37cc, 0x0, 0x0);
        gbc.writeMem(0x9ea8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd642, gbc.sp());
        EXPECT(0x9eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea8));
        EXPECT(0x21, gbc.readMem(0x9ea9));
        // CB 21 038E
        gbc.setState(0xc6b, 0x747b, 0x7650, 0xf242, 0xf996, 0x8ede, 0x0, 0x0);
        gbc.writeMem(0xc6b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x747b, gbc.sp());
        EXPECT(0xc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 038F
        gbc.setState(0x2ea6, 0x13e0, 0x7e60, 0x1967, 0x1473, 0x147f, 0x0, 0x0);
        gbc.writeMem(0x2ea6, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x13e0, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0390
        gbc.setState(0xb735, 0xae63, 0x2760, 0xc7c1, 0x85ef, 0xab2e, 0x0, 0x1);
        gbc.writeMem(0xb735, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xae63, gbc.sp());
        EXPECT(0xb737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb735));
        EXPECT(0x21, gbc.readMem(0xb736));
        // CB 21 0391
        gbc.setState(0x90b, 0x44e2, 0x9cd0, 0xdb5f, 0x7e2a, 0xdae9, 0x0, 0x1);
        gbc.writeMem(0x90b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0x90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0392
        gbc.setState(0x3cd2, 0xf80, 0x61d0, 0x230b, 0x29c, 0xb429, 0x1, 0x1);
        gbc.writeMem(0x3cd2, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0393
        gbc.setState(0xd96a, 0x6a5b, 0xb470, 0xcae4, 0x4ac2, 0x13d, 0x1, 0x0);
        gbc.writeMem(0xd96a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6a5b, gbc.sp());
        EXPECT(0xd96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96a));
        EXPECT(0x21, gbc.readMem(0xd96b));
        // CB 21 0394
        gbc.setState(0xc15c, 0x7a5e, 0x5890, 0x727b, 0xb637, 0xc65f, 0x1, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0x21, gbc.readMem(0xc15d));
        // CB 21 0395
        gbc.setState(0x678c, 0x4d9a, 0x9010, 0xc634, 0x8933, 0x78cd, 0x0, 0x1);
        gbc.writeMem(0x678c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0396
        gbc.setState(0xdfbc, 0xf6c2, 0xfa70, 0xad41, 0x7bb2, 0x3814, 0x1, 0x1);
        gbc.writeMem(0xdfbc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf6c2, gbc.sp());
        EXPECT(0xdfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbc));
        EXPECT(0x21, gbc.readMem(0xdfbd));
        // CB 21 0397
        gbc.setState(0x480, 0x5c9a, 0x6e0, 0xa55b, 0xc2e7, 0x1b2b, 0x1, 0x1);
        gbc.writeMem(0x480, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5c9a, gbc.sp());
        EXPECT(0x482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 0398
        gbc.setState(0xcf8b, 0xee5, 0xeb80, 0xc222, 0x986f, 0x2ed0, 0x0, 0x1);
        gbc.writeMem(0xcf8b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8b));
        EXPECT(0x21, gbc.readMem(0xcf8c));
        // CB 21 0399
        gbc.setState(0xd363, 0x52d, 0x52d0, 0xf119, 0x32ca, 0x4651, 0x1, 0x0);
        gbc.writeMem(0xd363, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x52d, gbc.sp());
        EXPECT(0xd365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd363));
        EXPECT(0x21, gbc.readMem(0xd364));
        // CB 21 039A
        gbc.setState(0xac93, 0xb3dc, 0xaff0, 0x1087, 0xb0a, 0xc81, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac93));
        EXPECT(0x21, gbc.readMem(0xac94));
        // CB 21 039B
        gbc.setState(0xd3c4, 0x77ce, 0x5cc0, 0xb703, 0x2e1b, 0xa40b, 0x1, 0x1);
        gbc.writeMem(0xd3c4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x77ce, gbc.sp());
        EXPECT(0xd3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c4));
        EXPECT(0x21, gbc.readMem(0xd3c5));
        // CB 21 039C
        gbc.setState(0x6912, 0x6192, 0x3480, 0x3b2, 0x64ab, 0xcd07, 0x0, 0x0);
        gbc.writeMem(0x6912, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6192, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 039D
        gbc.setState(0x7fc, 0x8ab3, 0xe200, 0x8aa4, 0x5407, 0x90c7, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8ab3, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 039E
        gbc.setState(0x2029, 0x6c7a, 0xb060, 0x362f, 0xe71, 0x8187, 0x0, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6c7a, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 039F
        gbc.setState(0xdd56, 0x9b2f, 0xf1c0, 0x2659, 0xb8a, 0x8891, 0x0, 0x1);
        gbc.writeMem(0xdd56, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0xdd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd56));
        EXPECT(0x21, gbc.readMem(0xdd57));
        // CB 21 03A0
        gbc.setState(0x2897, 0xe4bb, 0x7bf0, 0x68b6, 0x2beb, 0x41b, 0x1, 0x0);
        gbc.writeMem(0x2897, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4bb, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03A1
        gbc.setState(0x36f7, 0x17a1, 0x87b0, 0xdb45, 0x5807, 0x7ad, 0x1, 0x0);
        gbc.writeMem(0x36f7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x17a1, gbc.sp());
        EXPECT(0x36f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03A2
        gbc.setState(0xeb7a, 0xbbab, 0x8210, 0x5314, 0x964, 0x1bf7, 0x1, 0x0);
        gbc.writeMem(0xeb7a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0xeb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7a));
        EXPECT(0x21, gbc.readMem(0xeb7b));
        // CB 21 03A3
        gbc.setState(0x52f8, 0xfee, 0xd320, 0x57e8, 0xf9ef, 0x5293, 0x0, 0x1);
        gbc.writeMem(0x52f8, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfee, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03A4
        gbc.setState(0xb8b, 0x1982, 0x1f00, 0x97de, 0x2cc8, 0xf11c, 0x0, 0x1);
        gbc.writeMem(0xb8b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1982, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03A5
        gbc.setState(0xb3f5, 0xa9c3, 0xcb80, 0x43d0, 0x26c, 0x60cf, 0x0, 0x1);
        gbc.writeMem(0xb3f5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0xb3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f5));
        EXPECT(0x21, gbc.readMem(0xb3f6));
        // CB 21 03A6
        gbc.setState(0x54d9, 0x5ff4, 0xc930, 0x840e, 0xaf46, 0x39f0, 0x0, 0x0);
        gbc.writeMem(0x54d9, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5ff4, gbc.sp());
        EXPECT(0x54db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03A7
        gbc.setState(0x81d7, 0x6a83, 0x4b20, 0x24f9, 0xe066, 0x93ac, 0x1, 0x0);
        gbc.writeMem(0x81d7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6a83, gbc.sp());
        EXPECT(0x81d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d7));
        EXPECT(0x21, gbc.readMem(0x81d8));
        // CB 21 03A8
        gbc.setState(0xc279, 0x618e, 0x89a0, 0x6a5c, 0xcf43, 0xe877, 0x0, 0x1);
        gbc.writeMem(0xc279, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x618e, gbc.sp());
        EXPECT(0xc27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc279));
        EXPECT(0x21, gbc.readMem(0xc27a));
        // CB 21 03A9
        gbc.setState(0xd7d, 0x14b9, 0x7d20, 0x39ed, 0x4dc6, 0x6503, 0x1, 0x1);
        gbc.writeMem(0xd7d, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x14b9, gbc.sp());
        EXPECT(0xd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03AA
        gbc.setState(0xc0da, 0x75b3, 0xcb20, 0xc8a2, 0xb3b1, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0xc0da, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x75b3, gbc.sp());
        EXPECT(0xc0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0da));
        EXPECT(0x21, gbc.readMem(0xc0db));
        // CB 21 03AB
        gbc.setState(0x4fbc, 0xe5cf, 0xe350, 0x3ef0, 0x820d, 0x7dc6, 0x1, 0x0);
        gbc.writeMem(0x4fbc, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x4fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03AC
        gbc.setState(0x2d01, 0x5e86, 0xbb60, 0x50d, 0x300b, 0xbcbd, 0x1, 0x0);
        gbc.writeMem(0x2d01, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03AD
        gbc.setState(0x833e, 0x60af, 0x2950, 0x32db, 0x9e5d, 0xfce7, 0x1, 0x0);
        gbc.writeMem(0x833e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0x8340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833e));
        EXPECT(0x21, gbc.readMem(0x833f));
        // CB 21 03AE
        gbc.setState(0x5cc7, 0xc7c0, 0xad60, 0xf314, 0xd223, 0x53ee, 0x0, 0x0);
        gbc.writeMem(0x5cc7, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0x5cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03AF
        gbc.setState(0x4f06, 0x8900, 0x7840, 0x7bdc, 0x9835, 0x5cbf, 0x0, 0x0);
        gbc.writeMem(0x4f06, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03B0
        gbc.setState(0x8f11, 0xd890, 0xdb70, 0xaa5f, 0x2fe8, 0x158, 0x1, 0x0);
        gbc.writeMem(0x8f11, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd890, gbc.sp());
        EXPECT(0x8f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f11));
        EXPECT(0x21, gbc.readMem(0x8f12));
        // CB 21 03B1
        gbc.setState(0xc6b4, 0xaaa7, 0xf6d0, 0x87, 0x4a3a, 0x28c7, 0x1, 0x1);
        gbc.writeMem(0xc6b4, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaaa7, gbc.sp());
        EXPECT(0xc6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b4));
        EXPECT(0x21, gbc.readMem(0xc6b5));
        // CB 21 03B2
        gbc.setState(0x57e3, 0x74c8, 0x8a00, 0xc481, 0x1fe3, 0x8a9a, 0x0, 0x0);
        gbc.writeMem(0x57e3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0x57e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03B3
        gbc.setState(0x3fb0, 0x3ca7, 0x4160, 0xeef0, 0xfcc8, 0x4551, 0x1, 0x1);
        gbc.writeMem(0x3fb0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03B4
        gbc.setState(0x2740, 0x448d, 0x6ea0, 0x20bf, 0x6754, 0x7355, 0x1, 0x1);
        gbc.writeMem(0x2740, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x448d, gbc.sp());
        EXPECT(0x2742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03B5
        gbc.setState(0x339b, 0xac92, 0x7d20, 0x7ef7, 0x2752, 0x9197, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xac92, gbc.sp());
        EXPECT(0x339d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03B6
        gbc.setState(0xd299, 0x96c9, 0xde90, 0x638d, 0x4356, 0x62c7, 0x1, 0x1);
        gbc.writeMem(0xd299, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd299));
        EXPECT(0x21, gbc.readMem(0xd29a));
        // CB 21 03B7
        gbc.setState(0x6ca, 0x8a9c, 0xec80, 0x9066, 0x2e2, 0xde65, 0x0, 0x0);
        gbc.writeMem(0x6ca, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8a9c, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03B8
        gbc.setState(0x8bd3, 0xe22a, 0x13d0, 0x3a28, 0xb97f, 0x1d53, 0x0, 0x1);
        gbc.writeMem(0x8bd3, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe22a, gbc.sp());
        EXPECT(0x8bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd3));
        EXPECT(0x21, gbc.readMem(0x8bd4));
        // CB 21 03B9
        gbc.setState(0xa41f, 0xc66f, 0x6360, 0x5d60, 0xf12b, 0x4645, 0x0, 0x0);
        gbc.writeMem(0xa41f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0xa421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41f));
        EXPECT(0x21, gbc.readMem(0xa420));
        // CB 21 03BA
        gbc.setState(0x1562, 0xc37b, 0x8410, 0x6e52, 0x3609, 0x7ab5, 0x1, 0x1);
        gbc.writeMem(0x1562, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0x1564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03BB
        gbc.setState(0x1267, 0xec38, 0x8510, 0x38a9, 0x35d2, 0x2d12, 0x0, 0x1);
        gbc.writeMem(0x1267, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x1269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03BC
        gbc.setState(0x4b94, 0x2620, 0x680, 0x4486, 0xfb6e, 0x7cee, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0x4b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03BD
        gbc.setState(0x8c33, 0x6e84, 0x2000, 0x3068, 0xc237, 0x58a9, 0x1, 0x1);
        gbc.writeMem(0x8c33, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6e84, gbc.sp());
        EXPECT(0x8c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c33));
        EXPECT(0x21, gbc.readMem(0x8c34));
        // CB 21 03BE
        gbc.setState(0xac74, 0xea1b, 0xc10, 0xfbd6, 0x80d4, 0x7726, 0x0, 0x0);
        gbc.writeMem(0xac74, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xea1b, gbc.sp());
        EXPECT(0xac76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac74));
        EXPECT(0x21, gbc.readMem(0xac75));
        // CB 21 03BF
        gbc.setState(0xb5ee, 0x3449, 0x2460, 0x13cb, 0xc7bf, 0x5378, 0x0, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3449, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ee));
        EXPECT(0x21, gbc.readMem(0xb5ef));
        // CB 21 03C0
        gbc.setState(0x86fa, 0xbc13, 0x3ba0, 0xcda9, 0x82c3, 0x21bd, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0x21, gbc.readMem(0x86fb));
        // CB 21 03C1
        gbc.setState(0xee51, 0x317b, 0x43d0, 0x4eb4, 0xf614, 0x8410, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0x21, gbc.readMem(0xee52));
        // CB 21 03C2
        gbc.setState(0xbaf5, 0xbc3b, 0xd070, 0x6704, 0xe723, 0xb536, 0x0, 0x0);
        gbc.writeMem(0xbaf5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0xbaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf5));
        EXPECT(0x21, gbc.readMem(0xbaf6));
        // CB 21 03C3
        gbc.setState(0xa6c, 0x4d59, 0xe7e0, 0xe679, 0x38c, 0x1123, 0x1, 0x0);
        gbc.writeMem(0xa6c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0xa6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03C4
        gbc.setState(0xd14c, 0xcb8b, 0x5c80, 0xc1cd, 0xb1f5, 0xc285, 0x1, 0x1);
        gbc.writeMem(0xd14c, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcb8b, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14c));
        EXPECT(0x21, gbc.readMem(0xd14d));
        // CB 21 03C5
        gbc.setState(0x5101, 0x8399, 0x2db0, 0x27a2, 0x7b63, 0x5a65, 0x1, 0x0);
        gbc.writeMem(0x5101, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8399, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03C6
        gbc.setState(0xd588, 0x1261, 0x7ba0, 0x502f, 0x3045, 0x1a69, 0x1, 0x1);
        gbc.writeMem(0xd588, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1261, gbc.sp());
        EXPECT(0xd58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd588));
        EXPECT(0x21, gbc.readMem(0xd589));
        // CB 21 03C7
        gbc.setState(0x9372, 0x853, 0x2b60, 0x896d, 0x3c59, 0x24db, 0x1, 0x1);
        gbc.writeMem(0x9372, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0x9374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9372));
        EXPECT(0x21, gbc.readMem(0x9373));
        // CB 21 03C8
        gbc.setState(0x272, 0x21b1, 0x1e60, 0xed13, 0x6cc8, 0xaa0f, 0x1, 0x0);
        gbc.writeMem(0x272, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x21b1, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03C9
        gbc.setState(0xa969, 0xdf46, 0x1890, 0xa752, 0x527e, 0xb122, 0x0, 0x0);
        gbc.writeMem(0xa969, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdf46, gbc.sp());
        EXPECT(0xa96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa969));
        EXPECT(0x21, gbc.readMem(0xa96a));
        // CB 21 03CA
        gbc.setState(0x37dd, 0xaacb, 0x7850, 0x4f7e, 0x1c42, 0x9fe7, 0x0, 0x0);
        gbc.writeMem(0x37dd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaacb, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03CB
        gbc.setState(0x744a, 0xc8cc, 0x5630, 0x8130, 0xbd18, 0xe151, 0x0, 0x0);
        gbc.writeMem(0x744a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03CC
        gbc.setState(0x3052, 0xe035, 0xc0, 0x6bc2, 0xe4c0, 0xf324, 0x0, 0x1);
        gbc.writeMem(0x3052, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x3054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03CD
        gbc.setState(0x7330, 0x72a5, 0x1fd0, 0x8c25, 0x819c, 0xae6, 0x0, 0x0);
        gbc.writeMem(0x7330, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72a5, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03CE
        gbc.setState(0xe3dd, 0xa5dc, 0xd9d0, 0xccd, 0xe2b4, 0x140b, 0x1, 0x1);
        gbc.writeMem(0xe3dd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa5dc, gbc.sp());
        EXPECT(0xe3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dd));
        EXPECT(0x21, gbc.readMem(0xe3de));
        // CB 21 03CF
        gbc.setState(0x8d19, 0xdf18, 0x3fb0, 0xd0d8, 0x567c, 0x9d8d, 0x1, 0x0);
        gbc.writeMem(0x8d19, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdf18, gbc.sp());
        EXPECT(0x8d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d19));
        EXPECT(0x21, gbc.readMem(0x8d1a));
        // CB 21 03D0
        gbc.setState(0x72d0, 0x6db0, 0x79b0, 0x9d9c, 0x1677, 0xdcb8, 0x1, 0x0);
        gbc.writeMem(0x72d0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6db0, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03D1
        gbc.setState(0xe82a, 0xcdd8, 0x82d0, 0x90f7, 0xfd1c, 0x58e7, 0x0, 0x0);
        gbc.writeMem(0xe82a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcdd8, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82a));
        EXPECT(0x21, gbc.readMem(0xe82b));
        // CB 21 03D2
        gbc.setState(0xd75, 0xceb, 0x1ee0, 0x8c8e, 0x2539, 0x1975, 0x0, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0xd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03D3
        gbc.setState(0x3ea0, 0x70c1, 0xd660, 0xce40, 0x85b, 0x41d, 0x1, 0x1);
        gbc.writeMem(0x3ea0, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x70c1, gbc.sp());
        EXPECT(0x3ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03D4
        gbc.setState(0x92bb, 0x7bb5, 0xcc50, 0xd74f, 0x1667, 0xa637, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7bb5, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0x21, gbc.readMem(0x92bc));
        // CB 21 03D5
        gbc.setState(0xd246, 0xcf19, 0xb4f0, 0xdc98, 0xbe3f, 0xf768, 0x0, 0x0);
        gbc.writeMem(0xd246, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcf19, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd246));
        EXPECT(0x21, gbc.readMem(0xd247));
        // CB 21 03D6
        gbc.setState(0x2ad5, 0x2a51, 0x4590, 0x3449, 0xe85c, 0x92b4, 0x1, 0x0);
        gbc.writeMem(0x2ad5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2a51, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03D7
        gbc.setState(0x69e5, 0xbbe, 0x110, 0x1a32, 0xff38, 0xdf04, 0x0, 0x0);
        gbc.writeMem(0x69e5, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbbe, gbc.sp());
        EXPECT(0x69e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03D8
        gbc.setState(0x119, 0x1396, 0xe520, 0xaa75, 0x469b, 0xd09e, 0x0, 0x0);
        gbc.writeMem(0x119, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03D9
        gbc.setState(0x4051, 0x76b1, 0xb3d0, 0x419, 0x68ed, 0x456d, 0x0, 0x1);
        gbc.writeMem(0x4051, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x76b1, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03DA
        gbc.setState(0x5bfd, 0x8bdd, 0xc420, 0x2c8e, 0xe84c, 0xc72d, 0x0, 0x0);
        gbc.writeMem(0x5bfd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8bdd, gbc.sp());
        EXPECT(0x5bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03DB
        gbc.setState(0x6d66, 0xae5e, 0x94f0, 0x3a5e, 0x6d1d, 0x6ae3, 0x1, 0x1);
        gbc.writeMem(0x6d66, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae5e, gbc.sp());
        EXPECT(0x6d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03DC
        gbc.setState(0x7953, 0x93a1, 0x60e0, 0x9730, 0x79c5, 0x1c22, 0x0, 0x1);
        gbc.writeMem(0x7953, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03DD
        gbc.setState(0xbd37, 0x9a3a, 0xa350, 0xc720, 0x8217, 0x1098, 0x0, 0x1);
        gbc.writeMem(0xbd37, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9a3a, gbc.sp());
        EXPECT(0xbd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd37));
        EXPECT(0x21, gbc.readMem(0xbd38));
        // CB 21 03DE
        gbc.setState(0x378e, 0xd367, 0x7e30, 0xdcce, 0x5fcf, 0xee98, 0x0, 0x0);
        gbc.writeMem(0x378e, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x3790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03DF
        gbc.setState(0x3f7a, 0x7218, 0x9eb0, 0xc3cd, 0x18de, 0x8c90, 0x0, 0x1);
        gbc.writeMem(0x3f7a, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7218, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03E0
        gbc.setState(0x85fd, 0x437c, 0x4c50, 0xb492, 0x7418, 0x1e59, 0x1, 0x1);
        gbc.writeMem(0x85fd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fd));
        EXPECT(0x21, gbc.readMem(0x85fe));
        // CB 21 03E1
        gbc.setState(0x5891, 0x646d, 0x6c0, 0x2103, 0xe533, 0xabcf, 0x0, 0x0);
        gbc.writeMem(0x5891, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x646d, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03E2
        gbc.setState(0x3673, 0xb07e, 0x1010, 0x88a9, 0x52b8, 0x8d98, 0x0, 0x0);
        gbc.writeMem(0x3673, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb07e, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03E3
        gbc.setState(0x1cd, 0xe723, 0xd220, 0xac16, 0x430f, 0x2117, 0x1, 0x1);
        gbc.writeMem(0x1cd, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0x1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03E4
        gbc.setState(0x1690, 0x4af, 0xd70, 0x3e91, 0x303f, 0xfcdf, 0x1, 0x0);
        gbc.writeMem(0x1690, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4af, gbc.sp());
        EXPECT(0x1692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03E5
        gbc.setState(0x1b8b, 0x2969, 0xcad0, 0x32a1, 0xc010, 0xa94d, 0x1, 0x1);
        gbc.writeMem(0x1b8b, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 21 03E6
        gbc.setState(0x412f, 0x219b, 0x2c10, 0xa43, 0x4a46, 0xf343, 0x1, 0x0);
        gbc.writeMem(0x412f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x219b, gbc.sp());
        EXPECT(0x4131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 21 03E7
        gbc.setState(0x747f, 0x8da4, 0x5bd0, 0xfa50, 0x5bef, 0x3c0e, 0x0, 0x1);
        gbc.writeMem(0x747f, { 0xcb, 0x21 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
