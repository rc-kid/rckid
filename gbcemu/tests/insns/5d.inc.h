    TEST(gbcemu, opcode_5d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 5D 0000
        gbc.setState(0xc7b, 0xb370, 0x6f60, 0x82d7, 0xeaa2, 0x5131, 0x1, 0x0);
        gbc.writeMem(0xc7b, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb370, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0001
        gbc.setState(0xbc87, 0x7c2b, 0x9270, 0xccd1, 0xbb63, 0xf65b, 0x1, 0x1);
        gbc.writeMem(0xbc87, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7c2b, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbc87));
        // 5D 0002
        gbc.setState(0x754d, 0x3a48, 0x5810, 0xee93, 0x4480, 0xab31, 0x0, 0x0);
        gbc.writeMem(0x754d, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3a48, gbc.sp());
        EXPECT(0x754e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0003
        gbc.setState(0x17c5, 0xe5e4, 0x6f60, 0xc55, 0x7f39, 0x7a3b, 0x0, 0x1);
        gbc.writeMem(0x17c5, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe5e4, gbc.sp());
        EXPECT(0x17c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0004
        gbc.setState(0xa33e, 0xd373, 0x4cb0, 0xd212, 0x86fb, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0xa33e, { 0x5d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0xa33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa33e));
        // 5D 0005
        gbc.setState(0x414f, 0x4dfe, 0x3480, 0xd366, 0x785a, 0x6133, 0x0, 0x0);
        gbc.writeMem(0x414f, { 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4dfe, gbc.sp());
        EXPECT(0x4150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0006
        gbc.setState(0x285f, 0x5c7c, 0x7870, 0x6277, 0x1e52, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0x285f, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0007
        gbc.setState(0x84b3, 0xe97e, 0x36c0, 0x7616, 0xf6ac, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0x84b3, { 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe97e, gbc.sp());
        EXPECT(0x84b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x84b3));
        // 5D 0008
        gbc.setState(0xd7c2, 0xb65a, 0xcd10, 0x81cb, 0x77f5, 0x116b, 0x0, 0x1);
        gbc.writeMem(0xd7c2, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb65a, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd7c2));
        // 5D 0009
        gbc.setState(0xaf88, 0xac89, 0x4c30, 0xfcbf, 0xdb1f, 0xd56b, 0x0, 0x1);
        gbc.writeMem(0xaf88, { 0x5d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac89, gbc.sp());
        EXPECT(0xaf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaf88));
        // 5D 000A
        gbc.setState(0xcd3e, 0xb78d, 0xa3d0, 0x49b6, 0x4576, 0x8bb7, 0x0, 0x0);
        gbc.writeMem(0xcd3e, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb78d, gbc.sp());
        EXPECT(0xcd3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcd3e));
        // 5D 000B
        gbc.setState(0xc902, 0x8fe8, 0x2c40, 0x772, 0x4f36, 0x7da1, 0x1, 0x1);
        gbc.writeMem(0xc902, { 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8fe8, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc902));
        // 5D 000C
        gbc.setState(0x6855, 0x9e37, 0xdd0, 0xd4c3, 0xc4e0, 0xf8bd, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 000D
        gbc.setState(0xb309, 0xde8d, 0x38e0, 0x2da4, 0x5d6b, 0x7b08, 0x0, 0x1);
        gbc.writeMem(0xb309, { 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0xb30a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb309));
        // 5D 000E
        gbc.setState(0x7fd9, 0x70a9, 0x7100, 0xe2e2, 0xc9c8, 0xbb7d, 0x0, 0x0);
        gbc.writeMem(0x7fd9, { 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x70a9, gbc.sp());
        EXPECT(0x7fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 000F
        gbc.setState(0xf43, 0x72f3, 0xb670, 0x47b1, 0xd3ed, 0xbce5, 0x0, 0x0);
        gbc.writeMem(0xf43, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x72f3, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0010
        gbc.setState(0x6318, 0x19e3, 0x88a0, 0x2b17, 0x9e80, 0x541a, 0x0, 0x0);
        gbc.writeMem(0x6318, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x19e3, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0011
        gbc.setState(0x21e2, 0x2d5c, 0x5e40, 0x24b2, 0x1b67, 0x5c8a, 0x0, 0x1);
        gbc.writeMem(0x21e2, { 0x5d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0012
        gbc.setState(0xd810, 0x9598, 0x3530, 0x97bd, 0x207c, 0x94e2, 0x1, 0x1);
        gbc.writeMem(0xd810, { 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd810));
        // 5D 0013
        gbc.setState(0x19ae, 0x6d41, 0x22a0, 0xbd53, 0xdc5c, 0x81f4, 0x0, 0x1);
        gbc.writeMem(0x19ae, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0x19af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0014
        gbc.setState(0x17c2, 0xb49e, 0xfbc0, 0x2c0f, 0x551c, 0xb5af, 0x0, 0x0);
        gbc.writeMem(0x17c2, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb49e, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0015
        gbc.setState(0xa39d, 0x10d8, 0x9d0, 0x559d, 0x179e, 0x321e, 0x0, 0x0);
        gbc.writeMem(0xa39d, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa39d));
        // 5D 0016
        gbc.setState(0x6670, 0xcf17, 0xb10, 0xdf9e, 0x96a9, 0xaf1a, 0x0, 0x1);
        gbc.writeMem(0x6670, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0017
        gbc.setState(0xbebe, 0xe414, 0xcc60, 0x5fb5, 0x3cea, 0xc65f, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbebe));
        // 5D 0018
        gbc.setState(0xd299, 0x3db3, 0xf4c0, 0xd405, 0xaedc, 0x2869, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd299));
        // 5D 0019
        gbc.setState(0xe2a4, 0xd88c, 0x2b20, 0x61ad, 0x7fe6, 0x8e64, 0x0, 0x1);
        gbc.writeMem(0xe2a4, { 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd88c, gbc.sp());
        EXPECT(0xe2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe2a4));
        // 5D 001A
        gbc.setState(0xc70f, 0x9a54, 0x8e0, 0x40a2, 0xcda4, 0x1660, 0x0, 0x1);
        gbc.writeMem(0xc70f, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9a54, gbc.sp());
        EXPECT(0xc710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc70f));
        // 5D 001B
        gbc.setState(0x7bde, 0x5453, 0x9a70, 0x1e17, 0xf6c4, 0xf17c, 0x1, 0x0);
        gbc.writeMem(0x7bde, { 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5453, gbc.sp());
        EXPECT(0x7bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 001C
        gbc.setState(0x3184, 0xf61e, 0x1f50, 0x9202, 0x92f3, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x3184, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf61e, gbc.sp());
        EXPECT(0x3185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 001D
        gbc.setState(0x9e8b, 0x46c8, 0x9f10, 0x1471, 0xfc6c, 0xc0b3, 0x0, 0x0);
        gbc.writeMem(0x9e8b, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x46c8, gbc.sp());
        EXPECT(0x9e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9e8b));
        // 5D 001E
        gbc.setState(0xb6a9, 0x7bda, 0x6490, 0xc55b, 0x9db7, 0xf17e, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0x5d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7bda, gbc.sp());
        EXPECT(0xb6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb6a9));
        // 5D 001F
        gbc.setState(0x6c1e, 0x1a47, 0xf8e0, 0xf5d, 0x9b3f, 0xf39a, 0x1, 0x0);
        gbc.writeMem(0x6c1e, { 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a47, gbc.sp());
        EXPECT(0x6c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0020
        gbc.setState(0xa05f, 0xd34b, 0x8390, 0x976c, 0x1c0e, 0x9c2d, 0x1, 0x0);
        gbc.writeMem(0xa05f, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd34b, gbc.sp());
        EXPECT(0xa060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa05f));
        // 5D 0021
        gbc.setState(0xabe3, 0xaa60, 0xa300, 0x9d25, 0x3351, 0xd305, 0x1, 0x1);
        gbc.writeMem(0xabe3, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0xabe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xabe3));
        // 5D 0022
        gbc.setState(0x6a3e, 0x1229, 0x6d70, 0x8b26, 0x4116, 0x16c9, 0x0, 0x0);
        gbc.writeMem(0x6a3e, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1229, gbc.sp());
        EXPECT(0x6a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0023
        gbc.setState(0xca91, 0x5e4e, 0x1ca0, 0x4856, 0x3da0, 0xf327, 0x1, 0x1);
        gbc.writeMem(0xca91, { 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5e4e, gbc.sp());
        EXPECT(0xca92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xca91));
        // 5D 0024
        gbc.setState(0x7906, 0x38ae, 0x71c0, 0xd024, 0x63c2, 0x6597, 0x1, 0x0);
        gbc.writeMem(0x7906, { 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0025
        gbc.setState(0xbd1e, 0x4baf, 0x6270, 0xbf0f, 0x66be, 0xc859, 0x0, 0x1);
        gbc.writeMem(0xbd1e, { 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0xbd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbd1e));
        // 5D 0026
        gbc.setState(0x7933, 0xfd34, 0x9a0, 0xf7c9, 0x51a6, 0xf759, 0x0, 0x1);
        gbc.writeMem(0x7933, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0027
        gbc.setState(0xa934, 0x2c4d, 0xdea0, 0x38c4, 0x16e6, 0x717b, 0x0, 0x1);
        gbc.writeMem(0xa934, { 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2c4d, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa934));
        // 5D 0028
        gbc.setState(0x1c52, 0xe034, 0x9180, 0xa2e8, 0xfff1, 0x86f0, 0x1, 0x0);
        gbc.writeMem(0x1c52, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe034, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0029
        gbc.setState(0xe7c1, 0x2bd0, 0x3b90, 0x97d, 0x7d40, 0xac99, 0x1, 0x1);
        gbc.writeMem(0xe7c1, { 0x5d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe7c1));
        // 5D 002A
        gbc.setState(0xb87a, 0x992b, 0xec0, 0x9bc1, 0x236e, 0xc9bc, 0x1, 0x1);
        gbc.writeMem(0xb87a, { 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0xb87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb87a));
        // 5D 002B
        gbc.setState(0x7fc5, 0x774d, 0x60b0, 0x3300, 0x34d3, 0x4384, 0x1, 0x0);
        gbc.writeMem(0x7fc5, { 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 002C
        gbc.setState(0xabf, 0x4323, 0x4710, 0x8ca5, 0x1520, 0x1369, 0x1, 0x1);
        gbc.writeMem(0xabf, { 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4323, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 002D
        gbc.setState(0xf34, 0xec19, 0x2db0, 0x40d3, 0xdc6f, 0x2db0, 0x0, 0x1);
        gbc.writeMem(0xf34, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xec19, gbc.sp());
        EXPECT(0xf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 002E
        gbc.setState(0xb0cb, 0x3105, 0x3910, 0xf558, 0xd079, 0xc6d, 0x1, 0x0);
        gbc.writeMem(0xb0cb, { 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3105, gbc.sp());
        EXPECT(0xb0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb0cb));
        // 5D 002F
        gbc.setState(0x7476, 0xf54, 0xbbf0, 0x6af3, 0xf8e8, 0x5453, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf54, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0030
        gbc.setState(0x249c, 0xf9d4, 0x7ad0, 0xdd09, 0x7e56, 0x159, 0x0, 0x1);
        gbc.writeMem(0x249c, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0x249d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0031
        gbc.setState(0xe8c2, 0xc503, 0x9c30, 0xea71, 0x2d76, 0xa25e, 0x0, 0x0);
        gbc.writeMem(0xe8c2, { 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0xe8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe8c2));
        // 5D 0032
        gbc.setState(0xd9c, 0x561, 0x3350, 0xbbc9, 0xe253, 0xf062, 0x1, 0x0);
        gbc.writeMem(0xd9c, { 0x5d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0xd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0033
        gbc.setState(0xd7bf, 0xf018, 0xd210, 0x119e, 0x3e3, 0x7dbc, 0x1, 0x0);
        gbc.writeMem(0xd7bf, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf018, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd7bf));
        // 5D 0034
        gbc.setState(0x6c9d, 0xff3, 0x9cc0, 0x979f, 0x5fee, 0x8227, 0x0, 0x1);
        gbc.writeMem(0x6c9d, { 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0x6c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0035
        gbc.setState(0x6895, 0x42bf, 0xb0b0, 0x207b, 0xdbd1, 0x5876, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0036
        gbc.setState(0x360e, 0x37fd, 0x4570, 0xc999, 0xad29, 0x8394, 0x0, 0x0);
        gbc.writeMem(0x360e, { 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x37fd, gbc.sp());
        EXPECT(0x360f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0037
        gbc.setState(0x9153, 0x195, 0xa8b0, 0x7944, 0x3f98, 0x560, 0x1, 0x1);
        gbc.writeMem(0x9153, { 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x195, gbc.sp());
        EXPECT(0x9154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9153));
        // 5D 0038
        gbc.setState(0x5434, 0x6766, 0x160, 0x800d, 0x47e2, 0xde65, 0x0, 0x1);
        gbc.writeMem(0x5434, { 0x5d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6766, gbc.sp());
        EXPECT(0x5435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0039
        gbc.setState(0xea7a, 0x74d6, 0xb270, 0x7af3, 0x4872, 0xb2e8, 0x0, 0x1);
        gbc.writeMem(0xea7a, { 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x74d6, gbc.sp());
        EXPECT(0xea7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea7a));
        // 5D 003A
        gbc.setState(0xc319, 0x7ba0, 0x6ff0, 0x5145, 0x2c81, 0x910b, 0x0, 0x0);
        gbc.writeMem(0xc319, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7ba0, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc319));
        // 5D 003B
        gbc.setState(0x1706, 0xaa6b, 0x27d0, 0x2900, 0xd9d0, 0x9043, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaa6b, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 003C
        gbc.setState(0x4d73, 0x1bd0, 0x8a70, 0xbeb0, 0xecb9, 0x75d4, 0x0, 0x0);
        gbc.writeMem(0x4d73, { 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1bd0, gbc.sp());
        EXPECT(0x4d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 003D
        gbc.setState(0x6d3d, 0x955, 0x1f40, 0x157f, 0x3b8f, 0x1c07, 0x0, 0x0);
        gbc.writeMem(0x6d3d, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x955, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 003E
        gbc.setState(0xbd54, 0xcd88, 0x5430, 0xd97f, 0xe640, 0x1f78, 0x0, 0x0);
        gbc.writeMem(0xbd54, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcd88, gbc.sp());
        EXPECT(0xbd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbd54));
        // 5D 003F
        gbc.setState(0x5a4b, 0xcdca, 0xe4d0, 0xddb8, 0xd817, 0x35eb, 0x1, 0x0);
        gbc.writeMem(0x5a4b, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0x5a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0040
        gbc.setState(0x3840, 0x13a4, 0x6090, 0xb8ae, 0xeecc, 0xfda9, 0x0, 0x1);
        gbc.writeMem(0x3840, { 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x13a4, gbc.sp());
        EXPECT(0x3841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0041
        gbc.setState(0x77c7, 0x8c71, 0x9c0, 0x629c, 0x866a, 0xbfe6, 0x1, 0x1);
        gbc.writeMem(0x77c7, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0042
        gbc.setState(0x4ed, 0xbe5a, 0xea80, 0x1f15, 0xbf1c, 0x309f, 0x1, 0x1);
        gbc.writeMem(0x4ed, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0043
        gbc.setState(0x3f06, 0x755, 0x2490, 0xfa4b, 0x5eff, 0x54fc, 0x1, 0x0);
        gbc.writeMem(0x3f06, { 0x5d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0x3f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0044
        gbc.setState(0x124c, 0xd509, 0xed50, 0x2e4c, 0x4829, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x124c, { 0x5d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd509, gbc.sp());
        EXPECT(0x124d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0045
        gbc.setState(0x7c0a, 0xd01b, 0x6a70, 0x23af, 0xac45, 0x474d, 0x1, 0x0);
        gbc.writeMem(0x7c0a, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0046
        gbc.setState(0xb48f, 0xe2b6, 0xb380, 0xe235, 0xf01a, 0xea47, 0x0, 0x1);
        gbc.writeMem(0xb48f, { 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb48f));
        // 5D 0047
        gbc.setState(0x5d4f, 0x5b76, 0xebf0, 0x7fb7, 0x25e, 0x4341, 0x1, 0x1);
        gbc.writeMem(0x5d4f, { 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5b76, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0048
        gbc.setState(0x3ac3, 0x1a2e, 0x3000, 0x1118, 0x9c3a, 0xb27, 0x0, 0x0);
        gbc.writeMem(0x3ac3, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1a2e, gbc.sp());
        EXPECT(0x3ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0049
        gbc.setState(0xcbe4, 0x96f5, 0xded0, 0xcee0, 0xa012, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0xcbe4, { 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0xcbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcbe4));
        // 5D 004A
        gbc.setState(0x9d9, 0x7eec, 0x8380, 0x53e2, 0xdee9, 0x6868, 0x0, 0x0);
        gbc.writeMem(0x9d9, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7eec, gbc.sp());
        EXPECT(0x9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 004B
        gbc.setState(0x2ca6, 0x444f, 0x7460, 0x8686, 0x8158, 0x4415, 0x1, 0x0);
        gbc.writeMem(0x2ca6, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x444f, gbc.sp());
        EXPECT(0x2ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 004C
        gbc.setState(0xebd3, 0xd4a8, 0xaaa0, 0x4014, 0xa368, 0xd07f, 0x1, 0x0);
        gbc.writeMem(0xebd3, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd4a8, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xebd3));
        // 5D 004D
        gbc.setState(0xc974, 0x64d9, 0xad70, 0xe249, 0xdec9, 0xde2d, 0x1, 0x1);
        gbc.writeMem(0xc974, { 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0xc975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc974));
        // 5D 004E
        gbc.setState(0xcc85, 0x7f9c, 0xfa0, 0x79cd, 0x8b5e, 0xf732, 0x0, 0x1);
        gbc.writeMem(0xcc85, { 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7f9c, gbc.sp());
        EXPECT(0xcc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc85));
        // 5D 004F
        gbc.setState(0xbc06, 0xf1cc, 0xe390, 0x6dd8, 0x7c15, 0xbe90, 0x1, 0x1);
        gbc.writeMem(0xbc06, { 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf1cc, gbc.sp());
        EXPECT(0xbc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbc06));
        // 5D 0050
        gbc.setState(0x9de6, 0x9368, 0xadd0, 0xe12f, 0x34f, 0x4038, 0x0, 0x0);
        gbc.writeMem(0x9de6, { 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9de6));
        // 5D 0051
        gbc.setState(0x801f, 0xbc72, 0x67f0, 0x76c0, 0x6215, 0x365a, 0x1, 0x0);
        gbc.writeMem(0x801f, { 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc72, gbc.sp());
        EXPECT(0x8020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x801f));
        // 5D 0052
        gbc.setState(0xec72, 0x24a1, 0xfa30, 0x1e8b, 0x3b6b, 0xff8c, 0x1, 0x1);
        gbc.writeMem(0xec72, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x24a1, gbc.sp());
        EXPECT(0xec73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xec72));
        // 5D 0053
        gbc.setState(0xac05, 0x277c, 0x4f90, 0xe71b, 0x86a9, 0xcdc9, 0x1, 0x0);
        gbc.writeMem(0xac05, { 0x5d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0xac06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xac05));
        // 5D 0054
        gbc.setState(0xd50d, 0xc0b0, 0x9150, 0x73ee, 0x4c7d, 0x26cd, 0x1, 0x1);
        gbc.writeMem(0xd50d, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0xd50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd50d));
        // 5D 0055
        gbc.setState(0x4a5e, 0x27dd, 0x2cf0, 0xdcb7, 0x120c, 0x1e88, 0x0, 0x0);
        gbc.writeMem(0x4a5e, { 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x27dd, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0056
        gbc.setState(0xef41, 0x8c97, 0xc050, 0xd0ca, 0x420f, 0x79ff, 0x0, 0x1);
        gbc.writeMem(0xef41, { 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8c97, gbc.sp());
        EXPECT(0xef42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xef41));
        // 5D 0057
        gbc.setState(0x7dc, 0x5ca8, 0x8810, 0xdfec, 0x9767, 0x3ab7, 0x1, 0x1);
        gbc.writeMem(0x7dc, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0058
        gbc.setState(0xefe9, 0x75b5, 0x3130, 0xece8, 0xf441, 0x638d, 0x0, 0x1);
        gbc.writeMem(0xefe9, { 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0xefea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xefe9));
        // 5D 0059
        gbc.setState(0x3b7, 0x45cd, 0x2d60, 0x7501, 0xc5ee, 0x1c01, 0x1, 0x0);
        gbc.writeMem(0x3b7, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x45cd, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 005A
        gbc.setState(0xa8f5, 0xecaa, 0x3e70, 0xd0aa, 0xdeaf, 0xd1c2, 0x1, 0x1);
        gbc.writeMem(0xa8f5, { 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xecaa, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa8f5));
        // 5D 005B
        gbc.setState(0x8b54, 0x58b0, 0xa780, 0xd13a, 0x8b75, 0x6762, 0x1, 0x0);
        gbc.writeMem(0x8b54, { 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x8b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8b54));
        // 5D 005C
        gbc.setState(0xe788, 0xbda3, 0x72e0, 0x9fca, 0xf1b3, 0xb3c7, 0x1, 0x1);
        gbc.writeMem(0xe788, { 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xe789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe788));
        // 5D 005D
        gbc.setState(0x78f0, 0xd229, 0x5120, 0x174, 0x15e9, 0x8427, 0x1, 0x1);
        gbc.writeMem(0x78f0, { 0x5d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x78f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 005E
        gbc.setState(0x7ecb, 0xa8ed, 0xd390, 0xd90e, 0xd7b2, 0x3f70, 0x1, 0x0);
        gbc.writeMem(0x7ecb, { 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0x7ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 005F
        gbc.setState(0x10f4, 0xfd00, 0xc030, 0x5c4d, 0x3197, 0x277b, 0x1, 0x1);
        gbc.writeMem(0x10f4, { 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfd00, gbc.sp());
        EXPECT(0x10f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0060
        gbc.setState(0xbe66, 0x5642, 0xdcb0, 0x119f, 0x6fa3, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0xbe66, { 0x5d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5642, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbe66));
        // 5D 0061
        gbc.setState(0x461c, 0x132f, 0x1f60, 0xf271, 0x3f4, 0xf5b, 0x1, 0x1);
        gbc.writeMem(0x461c, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x132f, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0062
        gbc.setState(0xd383, 0xc0f1, 0xcdc0, 0x6e3d, 0x286d, 0xc4f0, 0x0, 0x0);
        gbc.writeMem(0xd383, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc0f1, gbc.sp());
        EXPECT(0xd384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd383));
        // 5D 0063
        gbc.setState(0x8775, 0x90a9, 0xcc40, 0xf652, 0x44cb, 0xc03a, 0x0, 0x0);
        gbc.writeMem(0x8775, { 0x5d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x90a9, gbc.sp());
        EXPECT(0x8776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8775));
        // 5D 0064
        gbc.setState(0xb61a, 0xd9cd, 0xb280, 0xda9d, 0xd59e, 0xd101, 0x0, 0x1);
        gbc.writeMem(0xb61a, { 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb61a));
        // 5D 0065
        gbc.setState(0xb553, 0xa71d, 0xda30, 0x6778, 0xe3c9, 0xeb3a, 0x1, 0x0);
        gbc.writeMem(0xb553, { 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa71d, gbc.sp());
        EXPECT(0xb554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb553));
        // 5D 0066
        gbc.setState(0xd557, 0xa6a, 0x3f30, 0x2de0, 0xeb56, 0x6cbb, 0x0, 0x1);
        gbc.writeMem(0xd557, { 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0xd558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd557));
        // 5D 0068
        gbc.setState(0x9aed, 0xc7af, 0x29c0, 0x2155, 0xc6c, 0x11bc, 0x1, 0x1);
        gbc.writeMem(0x9aed, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc7af, gbc.sp());
        EXPECT(0x9aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9aed));
        // 5D 0069
        gbc.setState(0x7bab, 0x960a, 0x6340, 0xea5c, 0x521b, 0x1f89, 0x0, 0x0);
        gbc.writeMem(0x7bab, { 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 006A
        gbc.setState(0x381a, 0x284e, 0xbd40, 0xbad4, 0x9875, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x381a, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 006B
        gbc.setState(0xaf19, 0x2e2f, 0xe690, 0x79ac, 0x761c, 0xdad1, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2e2f, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaf19));
        // 5D 006C
        gbc.setState(0xdd29, 0xbf77, 0xa2a0, 0xd6b9, 0x1686, 0x903b, 0x0, 0x1);
        gbc.writeMem(0xdd29, { 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbf77, gbc.sp());
        EXPECT(0xdd2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdd29));
        // 5D 006D
        gbc.setState(0x1ab, 0x4120, 0xbde0, 0xbc24, 0xb48b, 0x640f, 0x1, 0x0);
        gbc.writeMem(0x1ab, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4120, gbc.sp());
        EXPECT(0x1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 006E
        gbc.setState(0x25d5, 0x71bf, 0x7440, 0x59e6, 0xc22c, 0x1730, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x71bf, gbc.sp());
        EXPECT(0x25d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 006F
        gbc.setState(0x755, 0x6370, 0x2230, 0xe830, 0xa73d, 0x1990, 0x0, 0x1);
        gbc.writeMem(0x755, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6370, gbc.sp());
        EXPECT(0x756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0070
        gbc.setState(0xbeaa, 0x4786, 0xbe0, 0xd22e, 0x40d3, 0xcf7a, 0x1, 0x0);
        gbc.writeMem(0xbeaa, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4786, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbeaa));
        // 5D 0071
        gbc.setState(0x4cf0, 0xb421, 0xbde0, 0x7c1a, 0xde07, 0xcd6, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb421, gbc.sp());
        EXPECT(0x4cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0072
        gbc.setState(0x34f, 0xceb6, 0xf00, 0x511f, 0xbead, 0xd768, 0x0, 0x0);
        gbc.writeMem(0x34f, { 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0074
        gbc.setState(0x5f6e, 0xa5fd, 0xbaa0, 0x4fb, 0xf998, 0xd87f, 0x0, 0x0);
        gbc.writeMem(0x5f6e, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa5fd, gbc.sp());
        EXPECT(0x5f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0075
        gbc.setState(0x6177, 0xdac6, 0x7cd0, 0x597f, 0x5234, 0x9f3d, 0x0, 0x1);
        gbc.writeMem(0x6177, { 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdac6, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0076
        gbc.setState(0x8c60, 0x923a, 0xe170, 0xf572, 0xe7a1, 0xc3a9, 0x1, 0x0);
        gbc.writeMem(0x8c60, { 0x5d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x923a, gbc.sp());
        EXPECT(0x8c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8c60));
        // 5D 0077
        gbc.setState(0x733, 0x29af, 0x8160, 0x57b1, 0x7290, 0x99db, 0x0, 0x1);
        gbc.writeMem(0x733, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0078
        gbc.setState(0x61d4, 0xd832, 0xd9d0, 0x7e0, 0x6db4, 0xcefd, 0x0, 0x0);
        gbc.writeMem(0x61d4, { 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0x61d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0079
        gbc.setState(0x7680, 0x13b, 0x8710, 0xfff2, 0x8541, 0x5a90, 0x0, 0x0);
        gbc.writeMem(0x7680, { 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x13b, gbc.sp());
        EXPECT(0x7681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 007A
        gbc.setState(0x6302, 0x2acd, 0x2180, 0x5100, 0x8bfa, 0x56e0, 0x1, 0x1);
        gbc.writeMem(0x6302, { 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2acd, gbc.sp());
        EXPECT(0x6303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 007B
        gbc.setState(0xae64, 0x759f, 0x8f00, 0x61ca, 0x40fc, 0x5442, 0x0, 0x1);
        gbc.writeMem(0xae64, { 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x759f, gbc.sp());
        EXPECT(0xae65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xae64));
        // 5D 007C
        gbc.setState(0xa664, 0x9b9b, 0x7bf0, 0x5d4f, 0xf020, 0x587d, 0x1, 0x1);
        gbc.writeMem(0xa664, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9b9b, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa664));
        // 5D 007D
        gbc.setState(0xa32e, 0xd0f4, 0x6da0, 0xb013, 0xdd51, 0x6370, 0x1, 0x0);
        gbc.writeMem(0xa32e, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd0f4, gbc.sp());
        EXPECT(0xa32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa32e));
        // 5D 007E
        gbc.setState(0xc20b, 0x340f, 0xf4a0, 0xcb6a, 0x17fb, 0x12dc, 0x0, 0x1);
        gbc.writeMem(0xc20b, { 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x340f, gbc.sp());
        EXPECT(0xc20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc20b));
        // 5D 007F
        gbc.setState(0xd02d, 0xc491, 0x7490, 0x6e20, 0x6398, 0x9cc4, 0x1, 0x0);
        gbc.writeMem(0xd02d, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0xd02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd02d));
        // 5D 0080
        gbc.setState(0x123f, 0x22ff, 0xe370, 0x7840, 0x7175, 0x167, 0x1, 0x0);
        gbc.writeMem(0x123f, { 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x22ff, gbc.sp());
        EXPECT(0x1240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0082
        gbc.setState(0x90, 0xb683, 0x34e0, 0x2913, 0xbbdb, 0xc6a7, 0x0, 0x1);
        gbc.writeMem(0x90, { 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb683, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0083
        gbc.setState(0xea91, 0x1c1f, 0xfa60, 0xa9b7, 0xb4b3, 0x7431, 0x0, 0x0);
        gbc.writeMem(0xea91, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1c1f, gbc.sp());
        EXPECT(0xea92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea91));
        // 5D 0084
        gbc.setState(0x6826, 0x8792, 0x48b0, 0xb963, 0x7608, 0x8fb2, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0x6827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0085
        gbc.setState(0xefa3, 0x17dd, 0x1a70, 0x10f9, 0xb10, 0xbb2c, 0x0, 0x1);
        gbc.writeMem(0xefa3, { 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0xefa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xefa3));
        // 5D 0086
        gbc.setState(0x7170, 0x7382, 0x2d40, 0xe8c6, 0x5c7b, 0xff4d, 0x1, 0x0);
        gbc.writeMem(0x7170, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0087
        gbc.setState(0xdee4, 0x89fa, 0xc3b0, 0x767, 0x9563, 0xfff9, 0x0, 0x0);
        gbc.writeMem(0xdee4, { 0x5d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0xdee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdee4));
        // 5D 0088
        gbc.setState(0x7e68, 0x19e2, 0xc90, 0xd88d, 0xecb9, 0xc24, 0x0, 0x1);
        gbc.writeMem(0x7e68, { 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19e2, gbc.sp());
        EXPECT(0x7e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 008A
        gbc.setState(0x6449, 0xe43a, 0x1fe0, 0x8517, 0xd8f7, 0x266e, 0x1, 0x1);
        gbc.writeMem(0x6449, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe43a, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 008B
        gbc.setState(0x452, 0x1d36, 0x3010, 0x5af2, 0x2583, 0x2932, 0x0, 0x1);
        gbc.writeMem(0x452, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1d36, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 008C
        gbc.setState(0xee64, 0xacfa, 0x72f0, 0x930f, 0xf53a, 0xd6c2, 0x0, 0x0);
        gbc.writeMem(0xee64, { 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0xee65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee64));
        // 5D 008D
        gbc.setState(0x95fe, 0x2e04, 0xc8e0, 0xa264, 0xa96d, 0x80a2, 0x1, 0x0);
        gbc.writeMem(0x95fe, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x95ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x95fe));
        // 5D 008E
        gbc.setState(0xde63, 0xbd3e, 0x6700, 0x442b, 0x2da5, 0x9253, 0x0, 0x0);
        gbc.writeMem(0xde63, { 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0xde64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xde63));
        // 5D 008F
        gbc.setState(0x78a8, 0x67a0, 0x78f0, 0xfc2d, 0x8239, 0x2c1e, 0x1, 0x1);
        gbc.writeMem(0x78a8, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x67a0, gbc.sp());
        EXPECT(0x78a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0090
        gbc.setState(0xc85d, 0x9da9, 0x77c0, 0xa953, 0xd7e3, 0x1d78, 0x0, 0x0);
        gbc.writeMem(0xc85d, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9da9, gbc.sp());
        EXPECT(0xc85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc85d));
        // 5D 0091
        gbc.setState(0x742c, 0x13d4, 0xc8f0, 0x3d23, 0x92fb, 0xc60, 0x0, 0x0);
        gbc.writeMem(0x742c, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x742d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0092
        gbc.setState(0xcc16, 0x72ed, 0xc1b0, 0xc657, 0x932f, 0xf612, 0x1, 0x1);
        gbc.writeMem(0xcc16, { 0x5d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x72ed, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc16));
        // 5D 0093
        gbc.setState(0xd166, 0xb3ba, 0x5420, 0x2bef, 0x8fc6, 0xb8c5, 0x0, 0x0);
        gbc.writeMem(0xd166, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb3ba, gbc.sp());
        EXPECT(0xd167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd166));
        // 5D 0094
        gbc.setState(0x8ac9, 0xbd3, 0x78e0, 0x603b, 0x641b, 0x7ceb, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd3, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8ac9));
        // 5D 0095
        gbc.setState(0xd496, 0xab5d, 0x3e0, 0x1bac, 0x89b, 0x27, 0x0, 0x0);
        gbc.writeMem(0xd496, { 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xab5d, gbc.sp());
        EXPECT(0xd497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd496));
        // 5D 0096
        gbc.setState(0x3df4, 0xa432, 0x6630, 0xa538, 0xc288, 0x63, 0x0, 0x0);
        gbc.writeMem(0x3df4, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0x3df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0097
        gbc.setState(0x7e45, 0x5dd8, 0x5cb0, 0xb789, 0x13da, 0x4c39, 0x1, 0x1);
        gbc.writeMem(0x7e45, { 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0098
        gbc.setState(0x17b6, 0x38da, 0xee40, 0x31f4, 0x65b5, 0xe66c, 0x1, 0x1);
        gbc.writeMem(0x17b6, { 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x38da, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0099
        gbc.setState(0x2ccd, 0x14ea, 0xfb50, 0x3de, 0xc8da, 0xf96c, 0x0, 0x1);
        gbc.writeMem(0x2ccd, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 009A
        gbc.setState(0xb05e, 0x1d24, 0x6c60, 0x644b, 0xea4f, 0xa3a7, 0x1, 0x1);
        gbc.writeMem(0xb05e, { 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1d24, gbc.sp());
        EXPECT(0xb05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb05e));
        // 5D 009B
        gbc.setState(0xbca1, 0xf29b, 0xbca0, 0xfeea, 0x3c93, 0xa38e, 0x1, 0x0);
        gbc.writeMem(0xbca1, { 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf29b, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbca1));
        // 5D 009C
        gbc.setState(0x116a, 0x9d5f, 0xcb40, 0x55e3, 0xa649, 0x75be, 0x1, 0x1);
        gbc.writeMem(0x116a, { 0x5d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 009D
        gbc.setState(0x65b4, 0x8346, 0x3240, 0x71f0, 0xa853, 0x234a, 0x1, 0x0);
        gbc.writeMem(0x65b4, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 009E
        gbc.setState(0x9d37, 0xd1cf, 0x9670, 0x9656, 0x4179, 0x4e32, 0x0, 0x0);
        gbc.writeMem(0x9d37, { 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd1cf, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9d37));
        // 5D 009F
        gbc.setState(0xaff5, 0x816e, 0xf8f0, 0x8801, 0x28c, 0x43b1, 0x1, 0x0);
        gbc.writeMem(0xaff5, { 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x816e, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaff5));
        // 5D 00A0
        gbc.setState(0x24f5, 0x5a15, 0xf7f0, 0xd7b6, 0xdba0, 0x2e7d, 0x0, 0x1);
        gbc.writeMem(0x24f5, { 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5a15, gbc.sp());
        EXPECT(0x24f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00A1
        gbc.setState(0x8396, 0x1271, 0xf9a0, 0x3b30, 0x98b3, 0xa303, 0x0, 0x1);
        gbc.writeMem(0x8396, { 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x8397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8396));
        // 5D 00A2
        gbc.setState(0xd2ed, 0xec2e, 0x6630, 0x976f, 0x3111, 0xf869, 0x0, 0x1);
        gbc.writeMem(0xd2ed, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xec2e, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd2ed));
        // 5D 00A3
        gbc.setState(0x4a33, 0x1666, 0x96f0, 0xc6d1, 0x23f2, 0xc7ea, 0x1, 0x1);
        gbc.writeMem(0x4a33, { 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1666, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00A4
        gbc.setState(0x72fd, 0xf2c0, 0x4930, 0x38e0, 0xca47, 0xfd12, 0x0, 0x0);
        gbc.writeMem(0x72fd, { 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf2c0, gbc.sp());
        EXPECT(0x72fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00A5
        gbc.setState(0x429d, 0x841d, 0xc530, 0xd0ec, 0x3f5e, 0x540, 0x0, 0x1);
        gbc.writeMem(0x429d, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00A6
        gbc.setState(0xe3c0, 0x3c5b, 0xa20, 0x1457, 0x62d0, 0x6b01, 0x1, 0x0);
        gbc.writeMem(0xe3c0, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0xe3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe3c0));
        // 5D 00A7
        gbc.setState(0xb0c3, 0xb2b0, 0xc400, 0xda11, 0xaca, 0xf168, 0x0, 0x1);
        gbc.writeMem(0xb0c3, { 0x5d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb2b0, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb0c3));
        // 5D 00A8
        gbc.setState(0x7fe1, 0xa465, 0xd4c0, 0xcaa0, 0xb5bc, 0xa4b2, 0x0, 0x1);
        gbc.writeMem(0x7fe1, { 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa465, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00A9
        gbc.setState(0xcbaa, 0xc82e, 0xe010, 0xfce1, 0x9db6, 0xba9b, 0x0, 0x0);
        gbc.writeMem(0xcbaa, { 0x5d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc82e, gbc.sp());
        EXPECT(0xcbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcbaa));
        // 5D 00AA
        gbc.setState(0x65f1, 0x364b, 0xe190, 0x46e9, 0x792f, 0xa594, 0x1, 0x1);
        gbc.writeMem(0x65f1, { 0x5d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x364b, gbc.sp());
        EXPECT(0x65f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00AB
        gbc.setState(0x28ac, 0x9819, 0xceb0, 0xe710, 0x2935, 0x4eb0, 0x1, 0x1);
        gbc.writeMem(0x28ac, { 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9819, gbc.sp());
        EXPECT(0x28ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00AC
        gbc.setState(0xa886, 0x3caa, 0x3630, 0xd880, 0xdc9d, 0xf7b4, 0x0, 0x1);
        gbc.writeMem(0xa886, { 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa886));
        // 5D 00AD
        gbc.setState(0xb6fd, 0x33de, 0x79d0, 0x3e82, 0x3abc, 0xf152, 0x1, 0x0);
        gbc.writeMem(0xb6fd, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x33de, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb6fd));
        // 5D 00AE
        gbc.setState(0xe01f, 0x8659, 0xfdb0, 0x21ca, 0xeba, 0x2931, 0x0, 0x0);
        gbc.writeMem(0xe01f, { 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8659, gbc.sp());
        EXPECT(0xe020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe01f));
        // 5D 00B0
        gbc.setState(0xde66, 0x8c6b, 0x11a0, 0x8436, 0xdab2, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0xde66, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xde66));
        // 5D 00B1
        gbc.setState(0x87f5, 0xfee9, 0x3870, 0xa931, 0xc18b, 0x3608, 0x0, 0x1);
        gbc.writeMem(0x87f5, { 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfee9, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x87f5));
        // 5D 00B2
        gbc.setState(0xc8c3, 0xb670, 0x1c10, 0x88ba, 0x529f, 0x9c78, 0x1, 0x1);
        gbc.writeMem(0xc8c3, { 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb670, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc8c3));
        // 5D 00B3
        gbc.setState(0x2194, 0x48c4, 0x5ad0, 0x9f16, 0x2cde, 0x3edf, 0x0, 0x0);
        gbc.writeMem(0x2194, { 0x5d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0x2195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00B4
        gbc.setState(0x2aec, 0x1a7f, 0x3de0, 0x5313, 0xc3fb, 0x3455, 0x1, 0x1);
        gbc.writeMem(0x2aec, { 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1a7f, gbc.sp());
        EXPECT(0x2aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00B5
        gbc.setState(0x9cc1, 0x18c9, 0xa9b0, 0x8142, 0x69ff, 0x82cf, 0x1, 0x0);
        gbc.writeMem(0x9cc1, { 0x5d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x18c9, gbc.sp());
        EXPECT(0x9cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9cc1));
        // 5D 00B6
        gbc.setState(0x94f4, 0xcd87, 0x100, 0x4dca, 0x6e31, 0xd6e6, 0x1, 0x0);
        gbc.writeMem(0x94f4, { 0x5d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x94f4));
        // 5D 00B7
        gbc.setState(0x9dbb, 0xf902, 0xbd20, 0x6727, 0x21f7, 0xcee2, 0x1, 0x1);
        gbc.writeMem(0x9dbb, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0x9dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9dbb));
        // 5D 00B8
        gbc.setState(0x3d66, 0xab06, 0xa090, 0x5292, 0x7429, 0x86a6, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xab06, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00B9
        gbc.setState(0x89b7, 0xe6e0, 0x9fe0, 0xc073, 0x9ee1, 0x67e4, 0x1, 0x0);
        gbc.writeMem(0x89b7, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe6e0, gbc.sp());
        EXPECT(0x89b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x89b7));
        // 5D 00BA
        gbc.setState(0xa0ba, 0x53a3, 0xb020, 0x290a, 0x1c1d, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0xa0ba, { 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0xa0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa0ba));
        // 5D 00BB
        gbc.setState(0xa590, 0x43f7, 0x1380, 0x39f4, 0x2a5c, 0xbe59, 0x1, 0x1);
        gbc.writeMem(0xa590, { 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x43f7, gbc.sp());
        EXPECT(0xa591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa590));
        // 5D 00BC
        gbc.setState(0x300e, 0xe0c7, 0xa470, 0xa4c7, 0x1912, 0x2fb2, 0x0, 0x1);
        gbc.writeMem(0x300e, { 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00BD
        gbc.setState(0x3853, 0x8cf, 0xf2f0, 0x7a6, 0xe02c, 0xe14e, 0x1, 0x1);
        gbc.writeMem(0x3853, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8cf, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00BE
        gbc.setState(0x966c, 0xf8a8, 0xea10, 0xa785, 0x3bb1, 0x527a, 0x0, 0x1);
        gbc.writeMem(0x966c, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0x966d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x966c));
        // 5D 00BF
        gbc.setState(0x759a, 0x34c3, 0x9be0, 0x3651, 0x1588, 0x7e4f, 0x1, 0x0);
        gbc.writeMem(0x759a, { 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x34c3, gbc.sp());
        EXPECT(0x759b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00C0
        gbc.setState(0x1a62, 0x416b, 0x9ae0, 0x1fd6, 0x12c5, 0x507, 0x1, 0x0);
        gbc.writeMem(0x1a62, { 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x416b, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00C1
        gbc.setState(0x2e64, 0xa9f4, 0xb300, 0xcd57, 0x5430, 0x5954, 0x0, 0x1);
        gbc.writeMem(0x2e64, { 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x2e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00C2
        gbc.setState(0x368b, 0x2d8b, 0xa20, 0xa870, 0xdc06, 0xe1a7, 0x0, 0x1);
        gbc.writeMem(0x368b, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2d8b, gbc.sp());
        EXPECT(0x368c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00C3
        gbc.setState(0x2861, 0xd754, 0xdf80, 0xf9eb, 0x8de7, 0xd8cc, 0x0, 0x1);
        gbc.writeMem(0x2861, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0x2862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00C5
        gbc.setState(0xedbc, 0x7686, 0x15b0, 0x5147, 0x49c6, 0xbd86, 0x1, 0x1);
        gbc.writeMem(0xedbc, { 0x5d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7686, gbc.sp());
        EXPECT(0xedbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xedbc));
        // 5D 00C6
        gbc.setState(0x2cfa, 0x24ed, 0x4930, 0xc2b8, 0xcfc8, 0xa482, 0x1, 0x0);
        gbc.writeMem(0x2cfa, { 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x24ed, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00C7
        gbc.setState(0x8df6, 0xb0, 0x80d0, 0x52fa, 0x148d, 0x38bf, 0x1, 0x0);
        gbc.writeMem(0x8df6, { 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0x8df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8df6));
        // 5D 00C8
        gbc.setState(0x5fb2, 0xf72e, 0xfb50, 0x1e7a, 0x361f, 0x4456, 0x0, 0x1);
        gbc.writeMem(0x5fb2, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00CA
        gbc.setState(0x6181, 0x5e8, 0x41c0, 0x98c5, 0x13ac, 0xb6a5, 0x0, 0x1);
        gbc.writeMem(0x6181, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00CB
        gbc.setState(0xad49, 0x4821, 0xe8b0, 0x995e, 0x8caa, 0x5812, 0x0, 0x0);
        gbc.writeMem(0xad49, { 0x5d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4821, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xad49));
        // 5D 00CD
        gbc.setState(0x6a12, 0x30b1, 0x4160, 0x370c, 0xbdc9, 0x2220, 0x0, 0x1);
        gbc.writeMem(0x6a12, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00CE
        gbc.setState(0x47f, 0xcf6b, 0xfa00, 0x2c2b, 0x6a11, 0x1250, 0x0, 0x1);
        gbc.writeMem(0x47f, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcf6b, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00CF
        gbc.setState(0x6925, 0xf79d, 0xced0, 0x1b89, 0x6a4a, 0x2936, 0x0, 0x1);
        gbc.writeMem(0x6925, { 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf79d, gbc.sp());
        EXPECT(0x6926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00D0
        gbc.setState(0x3a41, 0x37b4, 0x9c30, 0x390f, 0x10d1, 0x7387, 0x0, 0x1);
        gbc.writeMem(0x3a41, { 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0x3a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00D1
        gbc.setState(0x224d, 0x9557, 0x9fe0, 0x6d18, 0x598d, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0x224d, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9557, gbc.sp());
        EXPECT(0x224e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00D2
        gbc.setState(0x555f, 0x24b2, 0x7c40, 0x2141, 0x2488, 0x5644, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00D3
        gbc.setState(0xdc89, 0x405e, 0x22d0, 0x26b9, 0xea1b, 0xac3f, 0x0, 0x1);
        gbc.writeMem(0xdc89, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x405e, gbc.sp());
        EXPECT(0xdc8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdc89));
        // 5D 00D5
        gbc.setState(0xbd15, 0xb196, 0xf670, 0x5412, 0x9e21, 0x9fe1, 0x1, 0x0);
        gbc.writeMem(0xbd15, { 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb196, gbc.sp());
        EXPECT(0xbd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbd15));
        // 5D 00D6
        gbc.setState(0x5aae, 0x95e8, 0x1460, 0x710e, 0x1577, 0xcda8, 0x0, 0x1);
        gbc.writeMem(0x5aae, { 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x95e8, gbc.sp());
        EXPECT(0x5aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00D7
        gbc.setState(0x2aae, 0xd721, 0x5590, 0x3fc2, 0xbf73, 0xf69c, 0x0, 0x0);
        gbc.writeMem(0x2aae, { 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd721, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00D8
        gbc.setState(0xe228, 0x8276, 0x3900, 0x23f0, 0xdd71, 0x95fc, 0x0, 0x0);
        gbc.writeMem(0xe228, { 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8276, gbc.sp());
        EXPECT(0xe229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe228));
        // 5D 00D9
        gbc.setState(0x209a, 0x84b1, 0x9e70, 0xac74, 0x4845, 0x5329, 0x1, 0x1);
        gbc.writeMem(0x209a, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x84b1, gbc.sp());
        EXPECT(0x209b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00DA
        gbc.setState(0x93ec, 0x9746, 0xe530, 0x5db6, 0x66b3, 0xd0ae, 0x0, 0x0);
        gbc.writeMem(0x93ec, { 0x5d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9746, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x93ec));
        // 5D 00DB
        gbc.setState(0x792a, 0xa1e7, 0x8970, 0x9a96, 0x7f3c, 0xf4c0, 0x1, 0x0);
        gbc.writeMem(0x792a, { 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0x792b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00DC
        gbc.setState(0x47b8, 0x8c5, 0x89f0, 0x5a11, 0x63f5, 0xfef6, 0x1, 0x0);
        gbc.writeMem(0x47b8, { 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8c5, gbc.sp());
        EXPECT(0x47b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00DD
        gbc.setState(0x2eeb, 0x33a6, 0x2710, 0x9db2, 0x25d7, 0x708b, 0x0, 0x0);
        gbc.writeMem(0x2eeb, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00DE
        gbc.setState(0x9aa8, 0x24c5, 0x4160, 0x803a, 0x87cc, 0xb7f, 0x1, 0x1);
        gbc.writeMem(0x9aa8, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x24c5, gbc.sp());
        EXPECT(0x9aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9aa8));
        // 5D 00DF
        gbc.setState(0xe89d, 0x8869, 0xba70, 0xf359, 0x97b9, 0xbfbd, 0x1, 0x1);
        gbc.writeMem(0xe89d, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8869, gbc.sp());
        EXPECT(0xe89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe89d));
        // 5D 00E0
        gbc.setState(0x7bd7, 0x9c43, 0xa1a0, 0x1f99, 0x10e6, 0x6ba1, 0x0, 0x0);
        gbc.writeMem(0x7bd7, { 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9c43, gbc.sp());
        EXPECT(0x7bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00E1
        gbc.setState(0xee6c, 0xad44, 0xf060, 0x4d8a, 0xaaa2, 0xc7e9, 0x0, 0x1);
        gbc.writeMem(0xee6c, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0xee6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee6c));
        // 5D 00E2
        gbc.setState(0x2167, 0xa47b, 0xcfc0, 0xecfe, 0xbd3f, 0xfa48, 0x0, 0x1);
        gbc.writeMem(0x2167, { 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0x2168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00E3
        gbc.setState(0x2609, 0x2249, 0xf730, 0xd396, 0x5153, 0x9286, 0x1, 0x0);
        gbc.writeMem(0x2609, { 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2249, gbc.sp());
        EXPECT(0x260a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00E4
        gbc.setState(0x8385, 0x7db3, 0xc7b0, 0xf101, 0x7f55, 0x28bb, 0x0, 0x0);
        gbc.writeMem(0x8385, { 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7db3, gbc.sp());
        EXPECT(0x8386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8385));
        // 5D 00E5
        gbc.setState(0xe77a, 0xedb1, 0x65f0, 0x9cb2, 0x753d, 0x2b4a, 0x0, 0x0);
        gbc.writeMem(0xe77a, { 0x5d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xedb1, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe77a));
        // 5D 00E7
        gbc.setState(0xb0cd, 0x5265, 0x8320, 0xe534, 0x8f3f, 0x8c02, 0x0, 0x1);
        gbc.writeMem(0xb0cd, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5265, gbc.sp());
        EXPECT(0xb0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb0cd));
        // 5D 00E8
        gbc.setState(0xe776, 0x992b, 0xe750, 0xdb18, 0x5f9d, 0xd4a3, 0x0, 0x0);
        gbc.writeMem(0xe776, { 0x5d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0xe777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe776));
        // 5D 00E9
        gbc.setState(0x939, 0x896c, 0xd270, 0x415d, 0x446f, 0x4fa, 0x0, 0x0);
        gbc.writeMem(0x939, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x896c, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00EA
        gbc.setState(0x69b8, 0x723c, 0xc5e0, 0x350e, 0xc726, 0xf516, 0x1, 0x0);
        gbc.writeMem(0x69b8, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x723c, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00EB
        gbc.setState(0x8e6f, 0x897b, 0xa5f0, 0xe33f, 0xf99d, 0x650f, 0x0, 0x1);
        gbc.writeMem(0x8e6f, { 0x5d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x897b, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8e6f));
        // 5D 00EC
        gbc.setState(0xd51f, 0x8dd1, 0x9ff0, 0x2ac2, 0xd11f, 0x9eef, 0x0, 0x0);
        gbc.writeMem(0xd51f, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8dd1, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd51f));
        // 5D 00EE
        gbc.setState(0x79a2, 0x9c4c, 0xb7e0, 0x2fa5, 0x71fc, 0x91b8, 0x1, 0x0);
        gbc.writeMem(0x79a2, { 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0x79a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00EF
        gbc.setState(0x48ec, 0xe749, 0x20, 0x4a04, 0xb157, 0x568b, 0x1, 0x0);
        gbc.writeMem(0x48ec, { 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00F0
        gbc.setState(0x753d, 0x3f7, 0x9920, 0x43e0, 0x21b3, 0x145, 0x1, 0x1);
        gbc.writeMem(0x753d, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3f7, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00F1
        gbc.setState(0x4c69, 0x7c50, 0xc430, 0x1ae5, 0x9097, 0xe9d7, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0x5d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7c50, gbc.sp());
        EXPECT(0x4c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00F2
        gbc.setState(0x19f, 0xb528, 0xd990, 0xf375, 0x3688, 0x844d, 0x1, 0x0);
        gbc.writeMem(0x19f, { 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0x1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00F3
        gbc.setState(0xe48b, 0x63d9, 0xc8a0, 0xa141, 0x7ff1, 0x4586, 0x0, 0x0);
        gbc.writeMem(0xe48b, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x63d9, gbc.sp());
        EXPECT(0xe48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe48b));
        // 5D 00F4
        gbc.setState(0x1f4d, 0x5fde, 0x1690, 0x67e, 0xa959, 0x75c7, 0x0, 0x1);
        gbc.writeMem(0x1f4d, { 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0x1f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00F5
        gbc.setState(0xb4e, 0x2abf, 0xaf0, 0xe3b2, 0xfb18, 0xcf54, 0x0, 0x1);
        gbc.writeMem(0xb4e, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2abf, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00F6
        gbc.setState(0x1044, 0xc550, 0xd1e0, 0xabc5, 0x3595, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0x1044, { 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x1045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00F7
        gbc.setState(0xcb04, 0x8305, 0x4360, 0x5e85, 0x3a5b, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0xcb04, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb04));
        // 5D 00F8
        gbc.setState(0xed7d, 0x4ff2, 0x2660, 0x91f0, 0x7658, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0xed7d, { 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0xed7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xed7d));
        // 5D 00F9
        gbc.setState(0xebad, 0x6bda, 0xb680, 0x730a, 0x8135, 0xd191, 0x1, 0x0);
        gbc.writeMem(0xebad, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6bda, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xebad));
        // 5D 00FA
        gbc.setState(0x438f, 0xcd11, 0xd3d0, 0xdc0b, 0x27e4, 0xed21, 0x1, 0x1);
        gbc.writeMem(0x438f, { 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00FB
        gbc.setState(0x7e0a, 0x55e3, 0xc5b0, 0x76e1, 0x65a1, 0xcb4e, 0x1, 0x1);
        gbc.writeMem(0x7e0a, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x55e3, gbc.sp());
        EXPECT(0x7e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00FC
        gbc.setState(0x83b0, 0x247, 0x3120, 0xb0de, 0x7ba, 0x4773, 0x0, 0x0);
        gbc.writeMem(0x83b0, { 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x247, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x83b0));
        // 5D 00FD
        gbc.setState(0x2398, 0x40f7, 0x2bf0, 0xd754, 0x21c9, 0x1581, 0x1, 0x0);
        gbc.writeMem(0x2398, { 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0x2399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 00FE
        gbc.setState(0x3891, 0x4e93, 0x1ee0, 0x151, 0xc1c4, 0xda76, 0x1, 0x1);
        gbc.writeMem(0x3891, { 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4e93, gbc.sp());
        EXPECT(0x3892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 00FF
        gbc.setState(0x1c0b, 0x264a, 0xa380, 0x4e53, 0x6960, 0xdebf, 0x1, 0x1);
        gbc.writeMem(0x1c0b, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x264a, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0100
        gbc.setState(0x25dd, 0xe315, 0xf730, 0xf4a2, 0xc87c, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0x25dd, { 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0102
        gbc.setState(0xcb01, 0xe2be, 0x9220, 0xf020, 0xdaa7, 0x7f06, 0x0, 0x0);
        gbc.writeMem(0xcb01, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe2be, gbc.sp());
        EXPECT(0xcb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb01));
        // 5D 0103
        gbc.setState(0x606c, 0xb156, 0x43e0, 0xaef6, 0xdb63, 0xaf18, 0x1, 0x1);
        gbc.writeMem(0x606c, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb156, gbc.sp());
        EXPECT(0x606d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0104
        gbc.setState(0xc79f, 0x9161, 0x72a0, 0x138, 0x5f1, 0x870e, 0x0, 0x1);
        gbc.writeMem(0xc79f, { 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9161, gbc.sp());
        EXPECT(0xc7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc79f));
        // 5D 0105
        gbc.setState(0xc5ee, 0x996d, 0xbf90, 0xfb6b, 0xdd11, 0xaa1c, 0x1, 0x1);
        gbc.writeMem(0xc5ee, { 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x996d, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc5ee));
        // 5D 0106
        gbc.setState(0xc2d, 0xe63b, 0x9140, 0x6299, 0x2d84, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xc2d, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe63b, gbc.sp());
        EXPECT(0xc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0107
        gbc.setState(0x909, 0xdedb, 0x4850, 0x223d, 0x1744, 0x3287, 0x1, 0x1);
        gbc.writeMem(0x909, { 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdedb, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0108
        gbc.setState(0xe306, 0x34e1, 0x4110, 0x11cd, 0xd6e8, 0x5235, 0x0, 0x1);
        gbc.writeMem(0xe306, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x34e1, gbc.sp());
        EXPECT(0xe307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe306));
        // 5D 0109
        gbc.setState(0x4f6f, 0x5420, 0x3280, 0xf578, 0x86ce, 0x5001, 0x1, 0x1);
        gbc.writeMem(0x4f6f, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5420, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 010A
        gbc.setState(0xdf32, 0xc4a6, 0xf670, 0x1f42, 0xbc44, 0x9f9e, 0x1, 0x1);
        gbc.writeMem(0xdf32, { 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0xdf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdf32));
        // 5D 010B
        gbc.setState(0x9448, 0xd6d7, 0x1220, 0x189d, 0x6aa3, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0x9448, { 0x5d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9448));
        // 5D 010C
        gbc.setState(0xbb04, 0xcb99, 0xa980, 0x841f, 0xdcc8, 0x49e9, 0x1, 0x0);
        gbc.writeMem(0xbb04, { 0x5d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0xbb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbb04));
        // 5D 010D
        gbc.setState(0x3c67, 0x5e26, 0x3e0, 0x325c, 0x5b5f, 0x4187, 0x1, 0x0);
        gbc.writeMem(0x3c67, { 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0x3c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 010E
        gbc.setState(0xa160, 0x9097, 0xd5f0, 0x3cd6, 0x5785, 0x817a, 0x0, 0x0);
        gbc.writeMem(0xa160, { 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9097, gbc.sp());
        EXPECT(0xa161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa160));
        // 5D 010F
        gbc.setState(0x19b8, 0x2ca5, 0x4b30, 0x6163, 0xf451, 0x2db7, 0x1, 0x1);
        gbc.writeMem(0x19b8, { 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2ca5, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0110
        gbc.setState(0x5f5f, 0x1d13, 0x36d0, 0x498e, 0xb61b, 0x4886, 0x0, 0x0);
        gbc.writeMem(0x5f5f, { 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x5f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0111
        gbc.setState(0xb1f4, 0xc227, 0x73e0, 0x767f, 0x7552, 0xf3b8, 0x1, 0x1);
        gbc.writeMem(0xb1f4, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0xb1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb1f4));
        // 5D 0112
        gbc.setState(0x23c5, 0x2edc, 0xd120, 0xac2, 0x5060, 0x3dd3, 0x1, 0x0);
        gbc.writeMem(0x23c5, { 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2edc, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0113
        gbc.setState(0x47d6, 0x715, 0x30f0, 0x6b9c, 0x481, 0x96f6, 0x0, 0x1);
        gbc.writeMem(0x47d6, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x715, gbc.sp());
        EXPECT(0x47d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0114
        gbc.setState(0x9c28, 0x665c, 0xb290, 0x9a6e, 0xd7af, 0xc2e3, 0x1, 0x1);
        gbc.writeMem(0x9c28, { 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0x9c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c28));
        // 5D 0115
        gbc.setState(0x155c, 0xcdc, 0x3cb0, 0x8b59, 0x8e3, 0x5740, 0x0, 0x1);
        gbc.writeMem(0x155c, { 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0x155d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0116
        gbc.setState(0x279b, 0xd8bf, 0x5860, 0x394f, 0xee65, 0xb144, 0x1, 0x0);
        gbc.writeMem(0x279b, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd8bf, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0117
        gbc.setState(0xe24c, 0xc479, 0xcaa0, 0xd1f4, 0x8b41, 0xc57d, 0x0, 0x1);
        gbc.writeMem(0xe24c, { 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc479, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe24c));
        // 5D 0118
        gbc.setState(0xd8d6, 0x3b8d, 0x3790, 0x2c26, 0xf7c5, 0x5754, 0x1, 0x0);
        gbc.writeMem(0xd8d6, { 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3b8d, gbc.sp());
        EXPECT(0xd8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd8d6));
        // 5D 0119
        gbc.setState(0xa6fa, 0x8124, 0xc610, 0xd022, 0xc506, 0xd2af, 0x0, 0x0);
        gbc.writeMem(0xa6fa, { 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8124, gbc.sp());
        EXPECT(0xa6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa6fa));
        // 5D 011A
        gbc.setState(0x6224, 0x7252, 0x56a0, 0xd854, 0xc8f5, 0x981e, 0x1, 0x1);
        gbc.writeMem(0x6224, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7252, gbc.sp());
        EXPECT(0x6225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 011B
        gbc.setState(0xca5a, 0xe3a8, 0x4dd0, 0x39b3, 0xf27b, 0x62ee, 0x0, 0x1);
        gbc.writeMem(0xca5a, { 0x5d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe3a8, gbc.sp());
        EXPECT(0xca5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xca5a));
        // 5D 011C
        gbc.setState(0x7e08, 0x1098, 0x2740, 0x4c5c, 0x7cf, 0x65df, 0x0, 0x0);
        gbc.writeMem(0x7e08, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1098, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 011D
        gbc.setState(0x49b5, 0xc24a, 0x9ef0, 0x1d46, 0xa7c0, 0xab74, 0x1, 0x1);
        gbc.writeMem(0x49b5, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc24a, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 011E
        gbc.setState(0x3639, 0x6e3f, 0xdb50, 0xcd79, 0xe554, 0x44dd, 0x0, 0x0);
        gbc.writeMem(0x3639, { 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 011F
        gbc.setState(0xe42f, 0xe0dd, 0xd5b0, 0x8e31, 0x8516, 0x386d, 0x0, 0x1);
        gbc.writeMem(0xe42f, { 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0dd, gbc.sp());
        EXPECT(0xe430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe42f));
        // 5D 0120
        gbc.setState(0x91f0, 0x60c0, 0x9940, 0xced5, 0xba82, 0xb1c6, 0x1, 0x1);
        gbc.writeMem(0x91f0, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x60c0, gbc.sp());
        EXPECT(0x91f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x91f0));
        // 5D 0121
        gbc.setState(0xbb6, 0x1426, 0x7900, 0x8fe8, 0xbcaf, 0x6387, 0x0, 0x0);
        gbc.writeMem(0xbb6, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0122
        gbc.setState(0x3809, 0x1cf1, 0x78c0, 0x4363, 0x96c, 0xe9c8, 0x1, 0x1);
        gbc.writeMem(0x3809, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1cf1, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0123
        gbc.setState(0xeb, 0x8057, 0xbf80, 0xf625, 0x62dc, 0x983b, 0x1, 0x0);
        gbc.writeMem(0xeb, { 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8057, gbc.sp());
        EXPECT(0xec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0124
        gbc.setState(0x4202, 0xcf9e, 0x1880, 0xb331, 0xd9fc, 0x6dc0, 0x1, 0x0);
        gbc.writeMem(0x4202, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x4203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0125
        gbc.setState(0x34f0, 0xafb1, 0xc8b0, 0x5c0f, 0x8b93, 0x2fe5, 0x1, 0x0);
        gbc.writeMem(0x34f0, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xafb1, gbc.sp());
        EXPECT(0x34f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0126
        gbc.setState(0x3bf5, 0x9183, 0xb700, 0x8745, 0x57c7, 0xcf4, 0x0, 0x1);
        gbc.writeMem(0x3bf5, { 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9183, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0127
        gbc.setState(0x1790, 0xd143, 0x9290, 0xafb6, 0x50c9, 0x584d, 0x1, 0x1);
        gbc.writeMem(0x1790, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd143, gbc.sp());
        EXPECT(0x1791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0128
        gbc.setState(0x78b1, 0x2a8a, 0xbd70, 0x1dd9, 0x3b2b, 0xa9f4, 0x0, 0x0);
        gbc.writeMem(0x78b1, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2a8a, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0129
        gbc.setState(0xb5e8, 0xf8a3, 0xeff0, 0xac29, 0x8db4, 0x9ae3, 0x1, 0x0);
        gbc.writeMem(0xb5e8, { 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf8a3, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb5e8));
        // 5D 012A
        gbc.setState(0x1380, 0x847b, 0x5ae0, 0x651f, 0x8ba6, 0x5ac6, 0x0, 0x0);
        gbc.writeMem(0x1380, { 0x5d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0x1381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 012B
        gbc.setState(0x67d2, 0xabd7, 0xa10, 0x2f68, 0xa6ee, 0xd790, 0x0, 0x1);
        gbc.writeMem(0x67d2, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0x67d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 012C
        gbc.setState(0x9757, 0x6089, 0xd140, 0xfbcb, 0xb3e, 0x76b2, 0x1, 0x0);
        gbc.writeMem(0x9757, { 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x9758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9757));
        // 5D 012D
        gbc.setState(0x47ad, 0x7b71, 0xa560, 0x1cb4, 0x4335, 0x94f7, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0x5d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 012E
        gbc.setState(0x8f4, 0x5be3, 0xcfa0, 0xb845, 0xdb89, 0xf330, 0x0, 0x0);
        gbc.writeMem(0x8f4, { 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5be3, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 012F
        gbc.setState(0x9b49, 0xf3ec, 0x17f0, 0x553f, 0x80bc, 0x52c3, 0x0, 0x0);
        gbc.writeMem(0x9b49, { 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x9b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9b49));
        // 5D 0130
        gbc.setState(0x8914, 0xaa57, 0xe9b0, 0xb81a, 0xc716, 0xd259, 0x0, 0x1);
        gbc.writeMem(0x8914, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0x8915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8914));
        // 5D 0131
        gbc.setState(0x7a25, 0xa9ce, 0x27d0, 0x907f, 0xe8bf, 0x33fa, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa9ce, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0132
        gbc.setState(0x25cf, 0x9caa, 0x2920, 0x6b79, 0x72cb, 0xadd4, 0x1, 0x1);
        gbc.writeMem(0x25cf, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9caa, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0133
        gbc.setState(0x3a0c, 0x4794, 0x82f0, 0x2cf, 0xa839, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0x3a0c, { 0x5d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4794, gbc.sp());
        EXPECT(0x3a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0134
        gbc.setState(0x46b1, 0x79a1, 0x5020, 0xe7f4, 0x8f21, 0x2a5b, 0x1, 0x1);
        gbc.writeMem(0x46b1, { 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x79a1, gbc.sp());
        EXPECT(0x46b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0136
        gbc.setState(0x8863, 0x4fd2, 0x7bd0, 0x608b, 0x5e37, 0xda43, 0x0, 0x1);
        gbc.writeMem(0x8863, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4fd2, gbc.sp());
        EXPECT(0x8864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8863));
        // 5D 0137
        gbc.setState(0xcc1, 0xa54, 0x3a90, 0xc97b, 0x2526, 0xb136, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa54, gbc.sp());
        EXPECT(0xcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0138
        gbc.setState(0x6474, 0x7618, 0xa790, 0x335e, 0x70a2, 0xc9ee, 0x0, 0x1);
        gbc.writeMem(0x6474, { 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0139
        gbc.setState(0xea2f, 0x40a4, 0x32f0, 0xe9e9, 0x13e3, 0x28e8, 0x1, 0x0);
        gbc.writeMem(0xea2f, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x40a4, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea2f));
        // 5D 013A
        gbc.setState(0x265b, 0xdbc3, 0x43d0, 0xc2b9, 0x1a90, 0xa3ef, 0x1, 0x1);
        gbc.writeMem(0x265b, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 013B
        gbc.setState(0x348b, 0x771c, 0xcaa0, 0x6e43, 0xc887, 0x55d0, 0x0, 0x1);
        gbc.writeMem(0x348b, { 0x5d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x771c, gbc.sp());
        EXPECT(0x348c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 013C
        gbc.setState(0x556b, 0x636b, 0x81d0, 0x7dc2, 0xa065, 0xecd1, 0x0, 0x1);
        gbc.writeMem(0x556b, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x636b, gbc.sp());
        EXPECT(0x556c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 013D
        gbc.setState(0x5ad6, 0xa987, 0x5910, 0x5bec, 0x8822, 0x2af8, 0x1, 0x0);
        gbc.writeMem(0x5ad6, { 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa987, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 013E
        gbc.setState(0xe1ab, 0x5d9, 0xea00, 0x4e94, 0xce84, 0xa077, 0x1, 0x1);
        gbc.writeMem(0xe1ab, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5d9, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe1ab));
        // 5D 013F
        gbc.setState(0xd108, 0xe9bd, 0x90d0, 0x6f83, 0x524c, 0xee5, 0x1, 0x0);
        gbc.writeMem(0xd108, { 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe9bd, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd108));
        // 5D 0140
        gbc.setState(0x58b8, 0xb8d1, 0x6c0, 0x20cf, 0x1c46, 0x887f, 0x0, 0x1);
        gbc.writeMem(0x58b8, { 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb8d1, gbc.sp());
        EXPECT(0x58b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0141
        gbc.setState(0x984e, 0x9a14, 0x56c0, 0x5f29, 0xaee9, 0xc5a1, 0x1, 0x0);
        gbc.writeMem(0x984e, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9a14, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x984e));
        // 5D 0142
        gbc.setState(0x6e31, 0xdd4b, 0x47f0, 0x2ced, 0x3b24, 0x1634, 0x1, 0x1);
        gbc.writeMem(0x6e31, { 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdd4b, gbc.sp());
        EXPECT(0x6e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0143
        gbc.setState(0x146d, 0x59c1, 0x3d40, 0x2a31, 0x57bd, 0x267a, 0x0, 0x1);
        gbc.writeMem(0x146d, { 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x59c1, gbc.sp());
        EXPECT(0x146e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0144
        gbc.setState(0xfbe, 0x61e, 0xf840, 0x4e03, 0xead5, 0xecca, 0x1, 0x0);
        gbc.writeMem(0xfbe, { 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x61e, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0145
        gbc.setState(0x3fd1, 0x8bcf, 0x9160, 0x28d8, 0xc2ff, 0xb775, 0x1, 0x0);
        gbc.writeMem(0x3fd1, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8bcf, gbc.sp());
        EXPECT(0x3fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0146
        gbc.setState(0xe5f5, 0xe3fe, 0x83d0, 0xc396, 0x5826, 0x30d0, 0x0, 0x1);
        gbc.writeMem(0xe5f5, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe5f5));
        // 5D 0147
        gbc.setState(0x277c, 0x208a, 0xf220, 0xea26, 0x776f, 0x41bd, 0x0, 0x0);
        gbc.writeMem(0x277c, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x208a, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0148
        gbc.setState(0x5f3b, 0x39c3, 0x50b0, 0x8811, 0x1394, 0x1d3d, 0x1, 0x1);
        gbc.writeMem(0x5f3b, { 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0x5f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0149
        gbc.setState(0x4ed, 0x34b4, 0xf260, 0xdc6f, 0xb4ef, 0x1cd3, 0x0, 0x0);
        gbc.writeMem(0x4ed, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x34b4, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 014A
        gbc.setState(0xe361, 0xfbaf, 0xbc10, 0xce7e, 0x1666, 0x9913, 0x1, 0x1);
        gbc.writeMem(0xe361, { 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfbaf, gbc.sp());
        EXPECT(0xe362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe361));
        // 5D 014B
        gbc.setState(0x967f, 0x6179, 0x8630, 0xfa7e, 0xbd22, 0xc980, 0x0, 0x0);
        gbc.writeMem(0x967f, { 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6179, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x967f));
        // 5D 014C
        gbc.setState(0x12fa, 0xb3cf, 0x5810, 0x24b3, 0xe0cb, 0xe2fb, 0x0, 0x1);
        gbc.writeMem(0x12fa, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb3cf, gbc.sp());
        EXPECT(0x12fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 014D
        gbc.setState(0xf09, 0x417a, 0xa310, 0xe7cb, 0x3181, 0x9a4f, 0x0, 0x1);
        gbc.writeMem(0xf09, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x417a, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 014E
        gbc.setState(0x9014, 0xac84, 0x3410, 0x5aa7, 0xa7c7, 0xee51, 0x1, 0x0);
        gbc.writeMem(0x9014, { 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x9015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9014));
        // 5D 014F
        gbc.setState(0x524d, 0x25d8, 0x5350, 0x2ae3, 0xe7bb, 0x70f3, 0x1, 0x1);
        gbc.writeMem(0x524d, { 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x25d8, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0150
        gbc.setState(0x42c9, 0xc34e, 0x57e0, 0x39d8, 0x8ca8, 0x13f8, 0x1, 0x1);
        gbc.writeMem(0x42c9, { 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc34e, gbc.sp());
        EXPECT(0x42ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0151
        gbc.setState(0xc3f4, 0xdd90, 0x1860, 0xba3e, 0xf2a6, 0xe0d1, 0x0, 0x0);
        gbc.writeMem(0xc3f4, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0xc3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc3f4));
        // 5D 0152
        gbc.setState(0xd0de, 0x32d3, 0x8b40, 0x296e, 0xcf91, 0x7a07, 0x1, 0x0);
        gbc.writeMem(0xd0de, { 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0xd0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd0de));
        // 5D 0153
        gbc.setState(0x4107, 0xcf59, 0xebe0, 0x15d8, 0xa9fb, 0x23ea, 0x1, 0x0);
        gbc.writeMem(0x4107, { 0x5d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x4108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0154
        gbc.setState(0x25d8, 0xeb9a, 0x5b30, 0xae57, 0x6a08, 0xd2af, 0x1, 0x0);
        gbc.writeMem(0x25d8, { 0x5d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xeb9a, gbc.sp());
        EXPECT(0x25d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0155
        gbc.setState(0xd9dd, 0xa8ad, 0xbb40, 0x4e9e, 0x5a60, 0xb3c9, 0x0, 0x0);
        gbc.writeMem(0xd9dd, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd9dd));
        // 5D 0156
        gbc.setState(0x47fd, 0xa744, 0x3e0, 0xc935, 0x5f42, 0x13b4, 0x0, 0x0);
        gbc.writeMem(0x47fd, { 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa744, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0158
        gbc.setState(0xdc9a, 0x1448, 0x13b0, 0x6b93, 0xe41, 0xb7ac, 0x0, 0x1);
        gbc.writeMem(0xdc9a, { 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdc9a));
        // 5D 0159
        gbc.setState(0xccf9, 0x2892, 0x840, 0x2711, 0x6864, 0x317a, 0x1, 0x0);
        gbc.writeMem(0xccf9, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2892, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xccf9));
        // 5D 015A
        gbc.setState(0xbf63, 0x2b5e, 0x9130, 0x979b, 0x8c4e, 0x1186, 0x1, 0x1);
        gbc.writeMem(0xbf63, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2b5e, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbf63));
        // 5D 015B
        gbc.setState(0x7d0e, 0xadaf, 0x8df0, 0x2dbf, 0xbbcf, 0x2a45, 0x0, 0x1);
        gbc.writeMem(0x7d0e, { 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xadaf, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 015C
        gbc.setState(0xab6d, 0x88ed, 0x74e0, 0x42a9, 0x9384, 0x6d8f, 0x1, 0x0);
        gbc.writeMem(0xab6d, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x88ed, gbc.sp());
        EXPECT(0xab6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xab6d));
        // 5D 015D
        gbc.setState(0x4c86, 0x3672, 0xaa60, 0x6294, 0xc912, 0x8f0f, 0x0, 0x1);
        gbc.writeMem(0x4c86, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3672, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 015E
        gbc.setState(0x40d5, 0xa1bc, 0xfd90, 0xc2ab, 0x885c, 0xcc3d, 0x1, 0x0);
        gbc.writeMem(0x40d5, { 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa1bc, gbc.sp());
        EXPECT(0x40d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 015F
        gbc.setState(0xd6e4, 0x8301, 0xa5f0, 0xda22, 0xe0a5, 0x475a, 0x1, 0x1);
        gbc.writeMem(0xd6e4, { 0x5d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8301, gbc.sp());
        EXPECT(0xd6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd6e4));
        // 5D 0160
        gbc.setState(0x8add, 0x56a4, 0x9570, 0xe231, 0x22fc, 0xe2f0, 0x0, 0x1);
        gbc.writeMem(0x8add, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x56a4, gbc.sp());
        EXPECT(0x8ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8add));
        // 5D 0161
        gbc.setState(0x82d5, 0xcb, 0x73d0, 0x936f, 0xd137, 0xb94a, 0x0, 0x0);
        gbc.writeMem(0x82d5, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0x82d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x82d5));
        // 5D 0162
        gbc.setState(0xe9eb, 0xefc, 0x6aa0, 0xc0a3, 0x5040, 0x202b, 0x1, 0x1);
        gbc.writeMem(0xe9eb, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe9eb));
        // 5D 0163
        gbc.setState(0x2a27, 0x4e0, 0x9d40, 0xb6a8, 0x3b34, 0xf1, 0x0, 0x0);
        gbc.writeMem(0x2a27, { 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x2a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0164
        gbc.setState(0xba61, 0xa5e1, 0x7ec0, 0xa960, 0x174b, 0x8e1a, 0x0, 0x0);
        gbc.writeMem(0xba61, { 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa5e1, gbc.sp());
        EXPECT(0xba62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xba61));
        // 5D 0165
        gbc.setState(0xb941, 0xbfa8, 0x3f70, 0x890, 0x89aa, 0x4932, 0x0, 0x1);
        gbc.writeMem(0xb941, { 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb941));
        // 5D 0166
        gbc.setState(0xad, 0x4620, 0xd9f0, 0xf032, 0x4c70, 0x461c, 0x1, 0x0);
        gbc.writeMem(0xad, { 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4620, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0167
        gbc.setState(0x9dd7, 0xbd21, 0xf630, 0xfaaf, 0xd5af, 0x4637, 0x1, 0x0);
        gbc.writeMem(0x9dd7, { 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd21, gbc.sp());
        EXPECT(0x9dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9dd7));
        // 5D 0168
        gbc.setState(0x461, 0x98d, 0xeab0, 0x5b7b, 0xdb92, 0x2d87, 0x0, 0x1);
        gbc.writeMem(0x461, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0169
        gbc.setState(0x2f03, 0xca45, 0x3fc0, 0x305f, 0x7721, 0x1fa1, 0x0, 0x0);
        gbc.writeMem(0x2f03, { 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xca45, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 016A
        gbc.setState(0xef4d, 0x1c42, 0xaaf0, 0x37ee, 0xc9ac, 0xa317, 0x0, 0x0);
        gbc.writeMem(0xef4d, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1c42, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xef4d));
        // 5D 016B
        gbc.setState(0x5c30, 0x6a03, 0xd460, 0x83bf, 0x5ad2, 0xb5c8, 0x0, 0x0);
        gbc.writeMem(0x5c30, { 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6a03, gbc.sp());
        EXPECT(0x5c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 016D
        gbc.setState(0xc9e, 0x46f7, 0x9e60, 0x9264, 0x1972, 0x547f, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x46f7, gbc.sp());
        EXPECT(0xc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 016E
        gbc.setState(0xea0e, 0x406f, 0x4040, 0xa149, 0x76cf, 0xd38a, 0x0, 0x1);
        gbc.writeMem(0xea0e, { 0x5d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x406f, gbc.sp());
        EXPECT(0xea0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea0e));
        // 5D 016F
        gbc.setState(0x5722, 0xd0bb, 0x5610, 0x3777, 0x2ed, 0x71a, 0x0, 0x0);
        gbc.writeMem(0x5722, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0170
        gbc.setState(0x691a, 0x9435, 0x5810, 0x95a0, 0x6bcb, 0x27b0, 0x1, 0x0);
        gbc.writeMem(0x691a, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9435, gbc.sp());
        EXPECT(0x691b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0171
        gbc.setState(0x4d3c, 0x5c95, 0xaca0, 0x867e, 0x832a, 0x84db, 0x1, 0x1);
        gbc.writeMem(0x4d3c, { 0x5d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5c95, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0172
        gbc.setState(0x6377, 0xd8e2, 0x14b0, 0xd3e4, 0x3e31, 0x9d2d, 0x1, 0x1);
        gbc.writeMem(0x6377, { 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd8e2, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0173
        gbc.setState(0x9aa9, 0x2ff7, 0xaa20, 0xcdc7, 0xdc60, 0x656c, 0x1, 0x1);
        gbc.writeMem(0x9aa9, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ff7, gbc.sp());
        EXPECT(0x9aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9aa9));
        // 5D 0174
        gbc.setState(0xd89f, 0xb3fc, 0x5370, 0xb17f, 0x276c, 0x4dd2, 0x0, 0x1);
        gbc.writeMem(0xd89f, { 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd89f));
        // 5D 0175
        gbc.setState(0x109, 0xad09, 0x8850, 0x1a2b, 0x917d, 0x8864, 0x1, 0x1);
        gbc.writeMem(0x109, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0176
        gbc.setState(0x967a, 0x9e0a, 0x3290, 0x417f, 0xc89b, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x967a, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x967a));
        // 5D 0177
        gbc.setState(0xbaf6, 0x42f7, 0xb4f0, 0xb2b, 0xab9b, 0xaf61, 0x0, 0x1);
        gbc.writeMem(0xbaf6, { 0x5d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x42f7, gbc.sp());
        EXPECT(0xbaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbaf6));
        // 5D 0178
        gbc.setState(0x59fa, 0x3652, 0xaa30, 0xbb3f, 0xe486, 0x18fb, 0x1, 0x0);
        gbc.writeMem(0x59fa, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3652, gbc.sp());
        EXPECT(0x59fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0179
        gbc.setState(0xd9a6, 0xf7c8, 0x42c0, 0xf3f9, 0x86fc, 0xc8b5, 0x0, 0x1);
        gbc.writeMem(0xd9a6, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0xd9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd9a6));
        // 5D 017A
        gbc.setState(0x4fe, 0x2e28, 0xbe10, 0xbc7a, 0xe4c1, 0xe7c6, 0x0, 0x0);
        gbc.writeMem(0x4fe, { 0x5d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0x4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 017C
        gbc.setState(0x7757, 0xa587, 0x2e90, 0x7745, 0xa8d, 0x4c98, 0x1, 0x0);
        gbc.writeMem(0x7757, { 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa587, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 017D
        gbc.setState(0xae00, 0x3ab4, 0x7d00, 0xbd01, 0x5439, 0x492, 0x1, 0x0);
        gbc.writeMem(0xae00, { 0x5d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0xae01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xae00));
        // 5D 017E
        gbc.setState(0x530c, 0x239e, 0x2890, 0x2f3d, 0x2c29, 0x9063, 0x1, 0x0);
        gbc.writeMem(0x530c, { 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x239e, gbc.sp());
        EXPECT(0x530d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 017F
        gbc.setState(0x3787, 0x42ff, 0x3570, 0x5417, 0xe735, 0xbb12, 0x0, 0x0);
        gbc.writeMem(0x3787, { 0x5d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x42ff, gbc.sp());
        EXPECT(0x3788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0181
        gbc.setState(0xe685, 0x2e38, 0x5740, 0xf5e1, 0x352, 0xd15e, 0x0, 0x1);
        gbc.writeMem(0xe685, { 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e38, gbc.sp());
        EXPECT(0xe686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe685));
        // 5D 0182
        gbc.setState(0x5a5e, 0x5c0e, 0xde0, 0xec00, 0x79b6, 0xa20d, 0x0, 0x1);
        gbc.writeMem(0x5a5e, { 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0x5a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0183
        gbc.setState(0x7b1b, 0xe45b, 0xdb60, 0x1f52, 0x50a9, 0x11ec, 0x0, 0x0);
        gbc.writeMem(0x7b1b, { 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe45b, gbc.sp());
        EXPECT(0x7b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0184
        gbc.setState(0x2406, 0x14ff, 0xe460, 0x6422, 0x1263, 0x790f, 0x1, 0x1);
        gbc.writeMem(0x2406, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0x2407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0185
        gbc.setState(0x6379, 0xcec2, 0xf2d0, 0x8795, 0x4c8f, 0xbc27, 0x0, 0x0);
        gbc.writeMem(0x6379, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcec2, gbc.sp());
        EXPECT(0x637a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0186
        gbc.setState(0x2da8, 0x3e40, 0xe630, 0xceb5, 0xc64f, 0xc062, 0x0, 0x1);
        gbc.writeMem(0x2da8, { 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0x2da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0187
        gbc.setState(0x41d9, 0x4ed4, 0x7230, 0x8d99, 0xec57, 0x5978, 0x0, 0x1);
        gbc.writeMem(0x41d9, { 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ed4, gbc.sp());
        EXPECT(0x41da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0188
        gbc.setState(0xb87a, 0xc77b, 0x80c0, 0x679d, 0xef3e, 0xe22a, 0x1, 0x1);
        gbc.writeMem(0xb87a, { 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc77b, gbc.sp());
        EXPECT(0xb87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb87a));
        // 5D 0189
        gbc.setState(0x3223, 0x6f67, 0xa8e0, 0x90e5, 0x67d3, 0x3fbb, 0x1, 0x1);
        gbc.writeMem(0x3223, { 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x3224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 018A
        gbc.setState(0x653c, 0x990a, 0xa270, 0x5456, 0x5534, 0x18a8, 0x0, 0x0);
        gbc.writeMem(0x653c, { 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0x653d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 018B
        gbc.setState(0xbd3a, 0xfa66, 0x7980, 0x6573, 0x2a2b, 0xc33d, 0x1, 0x1);
        gbc.writeMem(0xbd3a, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xbd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbd3a));
        // 5D 018C
        gbc.setState(0x128f, 0xaa56, 0x92e0, 0x53fb, 0x7be3, 0x5c61, 0x1, 0x0);
        gbc.writeMem(0x128f, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x1290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 018D
        gbc.setState(0x9a70, 0xf80c, 0x3990, 0x2984, 0xea2, 0x6844, 0x1, 0x1);
        gbc.writeMem(0x9a70, { 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf80c, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9a70));
        // 5D 018E
        gbc.setState(0x9101, 0xe464, 0x1150, 0xd536, 0x6180, 0xf1fa, 0x1, 0x1);
        gbc.writeMem(0x9101, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe464, gbc.sp());
        EXPECT(0x9102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9101));
        // 5D 018F
        gbc.setState(0x6fb5, 0x4713, 0x2890, 0xa4bf, 0x9376, 0x59de, 0x1, 0x0);
        gbc.writeMem(0x6fb5, { 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4713, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0190
        gbc.setState(0x2d20, 0xf1a, 0x51d0, 0xd44a, 0x9629, 0x6fcd, 0x0, 0x0);
        gbc.writeMem(0x2d20, { 0x5d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf1a, gbc.sp());
        EXPECT(0x2d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0191
        gbc.setState(0x36da, 0x130b, 0x5b0, 0xc77f, 0x1075, 0x4d37, 0x1, 0x1);
        gbc.writeMem(0x36da, { 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0x36db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0193
        gbc.setState(0x3aa1, 0x8025, 0x4a70, 0x78f3, 0xc4b5, 0x3de8, 0x1, 0x1);
        gbc.writeMem(0x3aa1, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8025, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0194
        gbc.setState(0xa836, 0x99ee, 0xf980, 0x55fa, 0xed20, 0xacb6, 0x0, 0x0);
        gbc.writeMem(0xa836, { 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x99ee, gbc.sp());
        EXPECT(0xa837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa836));
        // 5D 0195
        gbc.setState(0xe68, 0x8374, 0xcd20, 0xae91, 0xe24a, 0x77b1, 0x1, 0x1);
        gbc.writeMem(0xe68, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0xe69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0196
        gbc.setState(0x8f1, 0x7115, 0xa230, 0x2c0c, 0xbbfb, 0x1e65, 0x1, 0x0);
        gbc.writeMem(0x8f1, { 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7115, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0197
        gbc.setState(0x1d96, 0x3830, 0x2380, 0xed95, 0xc443, 0x314f, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3830, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0198
        gbc.setState(0xcf86, 0x1d7b, 0xaee0, 0xca11, 0x43d8, 0x6f52, 0x0, 0x1);
        gbc.writeMem(0xcf86, { 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcf86));
        // 5D 0199
        gbc.setState(0x8ccf, 0x3625, 0x5c0, 0xe0e7, 0xe62f, 0x7d75, 0x1, 0x0);
        gbc.writeMem(0x8ccf, { 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0x8cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8ccf));
        // 5D 019A
        gbc.setState(0x9414, 0x983c, 0xaff0, 0x124a, 0x36f3, 0x4f93, 0x1, 0x0);
        gbc.writeMem(0x9414, { 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x983c, gbc.sp());
        EXPECT(0x9415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9414));
        // 5D 019B
        gbc.setState(0x7b83, 0x40fe, 0x37f0, 0xee40, 0x4543, 0x9d2a, 0x1, 0x1);
        gbc.writeMem(0x7b83, { 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x40fe, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 019C
        gbc.setState(0x5088, 0x3a72, 0x2ca0, 0x4459, 0xdb91, 0x74d5, 0x1, 0x1);
        gbc.writeMem(0x5088, { 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3a72, gbc.sp());
        EXPECT(0x5089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 019D
        gbc.setState(0x6b7f, 0x118c, 0xaac0, 0x8ec, 0xf7ad, 0xd60b, 0x1, 0x0);
        gbc.writeMem(0x6b7f, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 019E
        gbc.setState(0xd863, 0xbb1e, 0x9f80, 0x38b5, 0x8045, 0x9920, 0x1, 0x0);
        gbc.writeMem(0xd863, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd863));
        // 5D 019F
        gbc.setState(0x592a, 0xaed5, 0x6700, 0xdf91, 0x8ecd, 0xa7ca, 0x0, 0x0);
        gbc.writeMem(0x592a, { 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaed5, gbc.sp());
        EXPECT(0x592b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01A0
        gbc.setState(0x908c, 0xdbf8, 0xa310, 0xfdec, 0x3bc9, 0x3962, 0x1, 0x1);
        gbc.writeMem(0x908c, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x908d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x908c));
        // 5D 01A1
        gbc.setState(0x2a2b, 0xb9c5, 0xf1a0, 0xd97c, 0x922e, 0xddf4, 0x1, 0x0);
        gbc.writeMem(0x2a2b, { 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x2a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01A2
        gbc.setState(0x32fd, 0xc1d1, 0x56f0, 0x3117, 0xf116, 0x2571, 0x1, 0x1);
        gbc.writeMem(0x32fd, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x32fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01A3
        gbc.setState(0x1524, 0x7a1, 0xa190, 0xb067, 0x52b5, 0x5f8e, 0x1, 0x0);
        gbc.writeMem(0x1524, { 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7a1, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01A4
        gbc.setState(0x2e90, 0x1c8d, 0xd4d0, 0x896a, 0x79e1, 0xf72d, 0x0, 0x1);
        gbc.writeMem(0x2e90, { 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01A5
        gbc.setState(0xcb63, 0x4070, 0xf4d0, 0x7a99, 0xfa94, 0xf353, 0x0, 0x0);
        gbc.writeMem(0xcb63, { 0x5d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4070, gbc.sp());
        EXPECT(0xcb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb63));
        // 5D 01A6
        gbc.setState(0x9b4b, 0x6f0b, 0x9940, 0xe8b2, 0x9cd9, 0x3193, 0x0, 0x1);
        gbc.writeMem(0x9b4b, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6f0b, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9b4b));
        // 5D 01A7
        gbc.setState(0xc663, 0x2cc9, 0x8f40, 0xf40e, 0x9883, 0x71a8, 0x1, 0x1);
        gbc.writeMem(0xc663, { 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2cc9, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc663));
        // 5D 01A8
        gbc.setState(0xa94f, 0xa15e, 0x1690, 0xa385, 0x7102, 0xa877, 0x0, 0x0);
        gbc.writeMem(0xa94f, { 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa15e, gbc.sp());
        EXPECT(0xa950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa94f));
        // 5D 01A9
        gbc.setState(0x54fb, 0x67b4, 0xdf40, 0x1615, 0x1b7c, 0x1ec3, 0x1, 0x0);
        gbc.writeMem(0x54fb, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x67b4, gbc.sp());
        EXPECT(0x54fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01AA
        gbc.setState(0x88fe, 0x377a, 0xb6d0, 0x1fda, 0xfd6e, 0xed7, 0x1, 0x1);
        gbc.writeMem(0x88fe, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x377a, gbc.sp());
        EXPECT(0x88ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x88fe));
        // 5D 01AB
        gbc.setState(0xb6eb, 0x9ede, 0x5c80, 0xabab, 0xd3e, 0x6403, 0x0, 0x1);
        gbc.writeMem(0xb6eb, { 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb6eb));
        // 5D 01AC
        gbc.setState(0x1aa5, 0xe6b, 0x1170, 0xb00e, 0xbebc, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0x1aa5, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe6b, gbc.sp());
        EXPECT(0x1aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01AD
        gbc.setState(0xd40, 0x4df1, 0xc690, 0xbd7d, 0x4ae2, 0xb557, 0x1, 0x0);
        gbc.writeMem(0xd40, { 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4df1, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01AE
        gbc.setState(0xe9e4, 0x874f, 0x83e0, 0xc34e, 0xb0cc, 0x84d7, 0x1, 0x1);
        gbc.writeMem(0xe9e4, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x874f, gbc.sp());
        EXPECT(0xe9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe9e4));
        // 5D 01AF
        gbc.setState(0x29b4, 0x7509, 0x8000, 0xacce, 0xbb17, 0x2e7d, 0x0, 0x0);
        gbc.writeMem(0x29b4, { 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0x29b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01B0
        gbc.setState(0x7089, 0x1c4c, 0x71d0, 0x75f9, 0xe8c6, 0xb856, 0x1, 0x0);
        gbc.writeMem(0x7089, { 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x708a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01B1
        gbc.setState(0xdb7c, 0x31f9, 0xfb70, 0x243c, 0x3ad, 0xd01b, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x31f9, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdb7c));
        // 5D 01B2
        gbc.setState(0x6fcb, 0x205c, 0x2dd0, 0x817d, 0xb293, 0x2fd4, 0x1, 0x0);
        gbc.writeMem(0x6fcb, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01B3
        gbc.setState(0xd07c, 0xfa7e, 0x3910, 0x2ba2, 0x720d, 0xb479, 0x1, 0x1);
        gbc.writeMem(0xd07c, { 0x5d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfa7e, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd07c));
        // 5D 01B4
        gbc.setState(0x1ca2, 0x305e, 0xea00, 0xbbce, 0xd99b, 0x434f, 0x1, 0x0);
        gbc.writeMem(0x1ca2, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x305e, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01B5
        gbc.setState(0x18bd, 0xe854, 0x8510, 0xad41, 0xecf0, 0xc3a3, 0x0, 0x1);
        gbc.writeMem(0x18bd, { 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe854, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01B6
        gbc.setState(0x9d6e, 0x6318, 0xac80, 0xf7e5, 0xe022, 0x829e, 0x0, 0x1);
        gbc.writeMem(0x9d6e, { 0x5d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6318, gbc.sp());
        EXPECT(0x9d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9d6e));
        // 5D 01B7
        gbc.setState(0x9ecc, 0xc88, 0x5290, 0xe65e, 0xdb64, 0x130c, 0x0, 0x0);
        gbc.writeMem(0x9ecc, { 0x5d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc88, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9ecc));
        // 5D 01B8
        gbc.setState(0x5120, 0x71a9, 0xbbf0, 0x107e, 0xb191, 0x88c1, 0x1, 0x0);
        gbc.writeMem(0x5120, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x71a9, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01B9
        gbc.setState(0x14ad, 0xcb8, 0xd900, 0x8ee8, 0x8900, 0xf226, 0x1, 0x0);
        gbc.writeMem(0x14ad, { 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0x14ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01BA
        gbc.setState(0x3d1c, 0x6f5b, 0xb600, 0xf1b8, 0x1bdb, 0x5105, 0x0, 0x0);
        gbc.writeMem(0x3d1c, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01BB
        gbc.setState(0x4421, 0xbf32, 0xb840, 0xeb71, 0x5d96, 0x2a54, 0x1, 0x1);
        gbc.writeMem(0x4421, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0x4422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01BC
        gbc.setState(0x4bcf, 0x71de, 0xa2d0, 0x545c, 0x9dd3, 0x695a, 0x0, 0x1);
        gbc.writeMem(0x4bcf, { 0x5d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x4bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01BD
        gbc.setState(0xcd95, 0x45c3, 0x2930, 0xca1f, 0x9829, 0x5773, 0x0, 0x1);
        gbc.writeMem(0xcd95, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcd95));
        // 5D 01BE
        gbc.setState(0x33f3, 0xd392, 0xb60, 0x4606, 0x397c, 0x7b09, 0x0, 0x1);
        gbc.writeMem(0x33f3, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd392, gbc.sp());
        EXPECT(0x33f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01BF
        gbc.setState(0x892e, 0x2b03, 0x9260, 0x9ecb, 0xd59e, 0xdcd1, 0x0, 0x1);
        gbc.writeMem(0x892e, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x892f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x892e));
        // 5D 01C0
        gbc.setState(0xb36b, 0x85a1, 0x2900, 0x6cef, 0xa6ce, 0x580, 0x1, 0x0);
        gbc.writeMem(0xb36b, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x85a1, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb36b));
        // 5D 01C1
        gbc.setState(0x4838, 0x637a, 0x3e40, 0xa9c8, 0xc00e, 0x6cbc, 0x1, 0x1);
        gbc.writeMem(0x4838, { 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x637a, gbc.sp());
        EXPECT(0x4839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01C2
        gbc.setState(0x9d70, 0x61e7, 0xf240, 0xf7a1, 0x8e14, 0xe869, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9d70));
        // 5D 01C3
        gbc.setState(0xcc3b, 0x4e7c, 0x2390, 0x77d4, 0xbd4b, 0xb3b9, 0x1, 0x1);
        gbc.writeMem(0xcc3b, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4e7c, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc3b));
        // 5D 01C4
        gbc.setState(0xa539, 0xcc2d, 0x6eb0, 0xef1f, 0x6a87, 0x2d7d, 0x0, 0x1);
        gbc.writeMem(0xa539, { 0x5d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcc2d, gbc.sp());
        EXPECT(0xa53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa539));
        // 5D 01C5
        gbc.setState(0xee3b, 0xe909, 0x7190, 0xc0af, 0xfffd, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0xee3b, { 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee3b));
        // 5D 01C6
        gbc.setState(0xcf5d, 0x5d8b, 0x8b0, 0xd691, 0x6c4a, 0x217d, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5d8b, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcf5d));
        // 5D 01C7
        gbc.setState(0x33a0, 0xd52, 0x6f0, 0xbd66, 0xeadf, 0xe38d, 0x1, 0x0);
        gbc.writeMem(0x33a0, { 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x33a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01C8
        gbc.setState(0xa601, 0xfb6e, 0x6c30, 0x9110, 0x736e, 0xb723, 0x1, 0x0);
        gbc.writeMem(0xa601, { 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa601));
        // 5D 01C9
        gbc.setState(0x6d71, 0x2b8e, 0xf000, 0xfef, 0x39c9, 0x61c7, 0x0, 0x0);
        gbc.writeMem(0x6d71, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2b8e, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01CA
        gbc.setState(0xb9b6, 0x5cbd, 0x7af0, 0x9447, 0xefc1, 0xf09c, 0x0, 0x1);
        gbc.writeMem(0xb9b6, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5cbd, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb9b6));
        // 5D 01CB
        gbc.setState(0xeefa, 0x654a, 0x14f0, 0x7d49, 0x5086, 0x7699, 0x0, 0x1);
        gbc.writeMem(0xeefa, { 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xeefa));
        // 5D 01CC
        gbc.setState(0x762a, 0x90e8, 0xffb0, 0x4246, 0x3e3, 0x28c0, 0x1, 0x1);
        gbc.writeMem(0x762a, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01CD
        gbc.setState(0x9dbf, 0x2d30, 0xa1a0, 0x15bd, 0x5302, 0x56, 0x0, 0x0);
        gbc.writeMem(0x9dbf, { 0x5d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2d30, gbc.sp());
        EXPECT(0x9dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9dbf));
        // 5D 01CE
        gbc.setState(0xd783, 0x468e, 0xea30, 0x76e4, 0x1065, 0x502, 0x0, 0x1);
        gbc.writeMem(0xd783, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd783));
        // 5D 01CF
        gbc.setState(0x9aeb, 0xaaae, 0xf080, 0xf14c, 0x86de, 0x5de0, 0x0, 0x0);
        gbc.writeMem(0x9aeb, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaaae, gbc.sp());
        EXPECT(0x9aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9aeb));
        // 5D 01D0
        gbc.setState(0x4758, 0x19ad, 0x2700, 0x6975, 0x1035, 0xf526, 0x0, 0x0);
        gbc.writeMem(0x4758, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x19ad, gbc.sp());
        EXPECT(0x4759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01D1
        gbc.setState(0xeb46, 0x9698, 0x6250, 0x5045, 0x954b, 0xe3ee, 0x1, 0x0);
        gbc.writeMem(0xeb46, { 0x5d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9698, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xeb46));
        // 5D 01D2
        gbc.setState(0x8889, 0x4b82, 0xd170, 0xfd6e, 0xab69, 0x3d67, 0x1, 0x0);
        gbc.writeMem(0x8889, { 0x5d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0x888a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8889));
        // 5D 01D3
        gbc.setState(0xbe05, 0x56, 0xa6a0, 0x51e8, 0x75e4, 0xcf99, 0x1, 0x1);
        gbc.writeMem(0xbe05, { 0x5d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x56, gbc.sp());
        EXPECT(0xbe06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbe05));
        // 5D 01D4
        gbc.setState(0x9cf3, 0xe68e, 0x4590, 0x3e9, 0x86c1, 0x58f3, 0x1, 0x0);
        gbc.writeMem(0x9cf3, { 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe68e, gbc.sp());
        EXPECT(0x9cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9cf3));
        // 5D 01D5
        gbc.setState(0x795f, 0xa0f9, 0xf220, 0x6cb9, 0x211, 0x92c3, 0x0, 0x1);
        gbc.writeMem(0x795f, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa0f9, gbc.sp());
        EXPECT(0x7960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01D6
        gbc.setState(0x8b26, 0xdb58, 0xe400, 0x40db, 0x9234, 0xaa8, 0x0, 0x1);
        gbc.writeMem(0x8b26, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdb58, gbc.sp());
        EXPECT(0x8b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8b26));
        // 5D 01D7
        gbc.setState(0x2a3c, 0x31ce, 0xb620, 0x6a00, 0x1d98, 0x187c, 0x0, 0x0);
        gbc.writeMem(0x2a3c, { 0x5d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x31ce, gbc.sp());
        EXPECT(0x2a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01D8
        gbc.setState(0xab34, 0x538e, 0x3060, 0xa17, 0x63b, 0x352, 0x0, 0x0);
        gbc.writeMem(0xab34, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x538e, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xab34));
        // 5D 01D9
        gbc.setState(0xc0be, 0xb0eb, 0xaf10, 0x57d6, 0xec47, 0x236f, 0x0, 0x0);
        gbc.writeMem(0xc0be, { 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb0eb, gbc.sp());
        EXPECT(0xc0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc0be));
        // 5D 01DA
        gbc.setState(0x530c, 0xc6af, 0x2360, 0x4f73, 0x5a42, 0xa237, 0x0, 0x1);
        gbc.writeMem(0x530c, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc6af, gbc.sp());
        EXPECT(0x530d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01DB
        gbc.setState(0x9546, 0x6818, 0xc820, 0xc415, 0x6148, 0xa861, 0x1, 0x1);
        gbc.writeMem(0x9546, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0x9547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9546));
        // 5D 01DC
        gbc.setState(0xc20f, 0x36c2, 0x2cc0, 0x856c, 0x49db, 0x74f2, 0x0, 0x1);
        gbc.writeMem(0xc20f, { 0x5d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x36c2, gbc.sp());
        EXPECT(0xc210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc20f));
        // 5D 01DD
        gbc.setState(0xc6ac, 0x8280, 0xb8c0, 0xaac7, 0x7334, 0x6b5c, 0x1, 0x0);
        gbc.writeMem(0xc6ac, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8280, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc6ac));
        // 5D 01DE
        gbc.setState(0xc4e2, 0x7f0d, 0x11d0, 0xd565, 0xb878, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0xc4e2, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc4e2));
        // 5D 01DF
        gbc.setState(0xa804, 0xe2f9, 0x2120, 0xed65, 0x9875, 0x8ca5, 0x0, 0x0);
        gbc.writeMem(0xa804, { 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe2f9, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa804));
        // 5D 01E0
        gbc.setState(0x5055, 0x692c, 0x4250, 0x3c0, 0x3e55, 0x4196, 0x1, 0x0);
        gbc.writeMem(0x5055, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x692c, gbc.sp());
        EXPECT(0x5056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01E1
        gbc.setState(0x5abe, 0xe0fd, 0x79d0, 0x2dee, 0x1a11, 0x6f15, 0x1, 0x1);
        gbc.writeMem(0x5abe, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe0fd, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01E2
        gbc.setState(0x9550, 0x590e, 0xe4e0, 0xe63e, 0x82b0, 0xcdd3, 0x1, 0x1);
        gbc.writeMem(0x9550, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0x9551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9550));
        // 5D 01E3
        gbc.setState(0x4c35, 0xf0c0, 0xb130, 0x8963, 0x64c6, 0xff5f, 0x1, 0x0);
        gbc.writeMem(0x4c35, { 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01E4
        gbc.setState(0x7a96, 0xe38b, 0xda60, 0xf6c0, 0xeeba, 0x10fd, 0x0, 0x0);
        gbc.writeMem(0x7a96, { 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe38b, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01E5
        gbc.setState(0x5168, 0x21a6, 0xf890, 0x34c, 0x50c9, 0x2bb2, 0x0, 0x0);
        gbc.writeMem(0x5168, { 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x21a6, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01E6
        gbc.setState(0xe679, 0xbeba, 0x77c0, 0x42ec, 0x5fbd, 0xc75e, 0x1, 0x0);
        gbc.writeMem(0xe679, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbeba, gbc.sp());
        EXPECT(0xe67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe679));
        // 5D 01E7
        gbc.setState(0x15c9, 0xafbe, 0xff30, 0x1d07, 0xbfd1, 0x6b2b, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xafbe, gbc.sp());
        EXPECT(0x15ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01E8
        gbc.setState(0x6e57, 0x59ac, 0x43a0, 0xc060, 0x6342, 0x4c8b, 0x0, 0x1);
        gbc.writeMem(0x6e57, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x6e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01E9
        gbc.setState(0x186b, 0xff94, 0x5170, 0x877a, 0x2430, 0x67f6, 0x1, 0x0);
        gbc.writeMem(0x186b, { 0x5d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01EA
        gbc.setState(0xb6c9, 0x76a1, 0x32a0, 0x8efd, 0xd87b, 0xdc80, 0x1, 0x1);
        gbc.writeMem(0xb6c9, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0xb6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb6c9));
        // 5D 01EB
        gbc.setState(0x8540, 0x8c84, 0x3e20, 0xb2a3, 0x979a, 0x964, 0x1, 0x0);
        gbc.writeMem(0x8540, { 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8c84, gbc.sp());
        EXPECT(0x8541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8540));
        // 5D 01EC
        gbc.setState(0x9bdb, 0xf7b6, 0xdc00, 0xd4e4, 0xa944, 0xd924, 0x0, 0x1);
        gbc.writeMem(0x9bdb, { 0x5d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9bdb));
        // 5D 01ED
        gbc.setState(0xcbe0, 0xc706, 0x8180, 0x3372, 0xa641, 0x4b8d, 0x1, 0x1);
        gbc.writeMem(0xcbe0, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcbe0));
        // 5D 01EE
        gbc.setState(0x4c54, 0x2390, 0x1820, 0xf042, 0xb3db, 0xdaa1, 0x0, 0x1);
        gbc.writeMem(0x4c54, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2390, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01EF
        gbc.setState(0x638d, 0x86b3, 0xc210, 0xc8f2, 0xd6d1, 0xbe19, 0x1, 0x0);
        gbc.writeMem(0x638d, { 0x5d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x86b3, gbc.sp());
        EXPECT(0x638e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01F0
        gbc.setState(0xb5a6, 0xbc88, 0x5830, 0xd4ad, 0x413f, 0x254c, 0x1, 0x0);
        gbc.writeMem(0xb5a6, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbc88, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb5a6));
        // 5D 01F1
        gbc.setState(0x65c1, 0x7175, 0x7340, 0x13ac, 0x3cca, 0x4018, 0x1, 0x0);
        gbc.writeMem(0x65c1, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7175, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01F2
        gbc.setState(0x1de4, 0xb0e9, 0x4580, 0x224b, 0x59b0, 0x82f, 0x1, 0x0);
        gbc.writeMem(0x1de4, { 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01F3
        gbc.setState(0x45ef, 0x74fa, 0x5310, 0x25b2, 0xa831, 0xc0b8, 0x1, 0x1);
        gbc.writeMem(0x45ef, { 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x74fa, gbc.sp());
        EXPECT(0x45f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 01F4
        gbc.setState(0x9e47, 0xb66, 0x6db0, 0x5676, 0xf383, 0x4a8c, 0x0, 0x1);
        gbc.writeMem(0x9e47, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9e47));
        // 5D 01F5
        gbc.setState(0x491f, 0x3e7a, 0x9680, 0x5cfa, 0x112f, 0x9d0c, 0x1, 0x0);
        gbc.writeMem(0x491f, { 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3e7a, gbc.sp());
        EXPECT(0x4920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01F9
        gbc.setState(0x3207, 0xaadb, 0x8fe0, 0x4252, 0x92b, 0x5856, 0x0, 0x1);
        gbc.writeMem(0x3207, { 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0x3208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01FA
        gbc.setState(0xacc5, 0x4d06, 0x5060, 0xd65, 0x3316, 0x6b8d, 0x1, 0x1);
        gbc.writeMem(0xacc5, { 0x5d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4d06, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xacc5));
        // 5D 01FB
        gbc.setState(0xe5a8, 0xb075, 0xc8c0, 0x1826, 0xeee2, 0x8bfb, 0x1, 0x0);
        gbc.writeMem(0xe5a8, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb075, gbc.sp());
        EXPECT(0xe5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe5a8));
        // 5D 01FC
        gbc.setState(0x67eb, 0x3612, 0xae0, 0xc37e, 0x9232, 0x718d, 0x0, 0x0);
        gbc.writeMem(0x67eb, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0x67ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01FD
        gbc.setState(0x2b7f, 0x6035, 0x75a0, 0xcf98, 0x9912, 0x6811, 0x1, 0x0);
        gbc.writeMem(0x2b7f, { 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6035, gbc.sp());
        EXPECT(0x2b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 01FE
        gbc.setState(0x95b4, 0xb08, 0xf280, 0xc39e, 0x8e6d, 0x2c9b, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0x5d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb08, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x95b4));
        // 5D 01FF
        gbc.setState(0x92e2, 0x2e3b, 0xdeb0, 0x5143, 0x23a1, 0xa3f2, 0x1, 0x0);
        gbc.writeMem(0x92e2, { 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2e3b, gbc.sp());
        EXPECT(0x92e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x92e2));
        // 5D 0200
        gbc.setState(0x8f38, 0x3753, 0x8620, 0xdda3, 0x4f61, 0xd05, 0x1, 0x1);
        gbc.writeMem(0x8f38, { 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3753, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8f38));
        // 5D 0201
        gbc.setState(0x194, 0xd3ce, 0x770, 0x7f5f, 0x6e9d, 0xd853, 0x0, 0x0);
        gbc.writeMem(0x194, { 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd3ce, gbc.sp());
        EXPECT(0x195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0202
        gbc.setState(0x95b7, 0xd13f, 0x4440, 0x2551, 0xfb1c, 0xdbd5, 0x0, 0x1);
        gbc.writeMem(0x95b7, { 0x5d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd13f, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x95b7));
        // 5D 0203
        gbc.setState(0x4540, 0xc7f4, 0x3750, 0x28d4, 0xf013, 0x96dd, 0x1, 0x0);
        gbc.writeMem(0x4540, { 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0204
        gbc.setState(0xd56c, 0xb7ab, 0x18c0, 0x6fe, 0x9ac3, 0xc27f, 0x0, 0x0);
        gbc.writeMem(0xd56c, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xd56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd56c));
        // 5D 0205
        gbc.setState(0x5f3, 0x5bd1, 0xb930, 0xd07d, 0xa638, 0x441f, 0x1, 0x0);
        gbc.writeMem(0x5f3, { 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5bd1, gbc.sp());
        EXPECT(0x5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0206
        gbc.setState(0xa06d, 0xeeaf, 0x2290, 0x2706, 0xefac, 0xe05d, 0x1, 0x1);
        gbc.writeMem(0xa06d, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeeaf, gbc.sp());
        EXPECT(0xa06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa06d));
        // 5D 0207
        gbc.setState(0x99ea, 0xd68d, 0x5410, 0xbf9f, 0xeac1, 0x8b0a, 0x0, 0x0);
        gbc.writeMem(0x99ea, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0x99eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x99ea));
        // 5D 0208
        gbc.setState(0xb8d1, 0xc33a, 0x13b0, 0xc16d, 0x75b5, 0x5d02, 0x0, 0x1);
        gbc.writeMem(0xb8d1, { 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0xb8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8d1));
        // 5D 0209
        gbc.setState(0x3c83, 0x10e2, 0x7b20, 0x5c42, 0xb4d0, 0xfa1c, 0x0, 0x1);
        gbc.writeMem(0x3c83, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x10e2, gbc.sp());
        EXPECT(0x3c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 020A
        gbc.setState(0xc7ea, 0x373d, 0x42d0, 0x5b5f, 0x7ff0, 0xa064, 0x1, 0x0);
        gbc.writeMem(0xc7ea, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x373d, gbc.sp());
        EXPECT(0xc7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc7ea));
        // 5D 020B
        gbc.setState(0x5d11, 0xdc42, 0x3090, 0x9ad8, 0x4b36, 0x4c4d, 0x1, 0x1);
        gbc.writeMem(0x5d11, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0x5d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 020C
        gbc.setState(0xcddb, 0xd256, 0xabd0, 0x5166, 0xcd6c, 0x5010, 0x0, 0x1);
        gbc.writeMem(0xcddb, { 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd256, gbc.sp());
        EXPECT(0xcddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcddb));
        // 5D 020F
        gbc.setState(0xad1e, 0xea5c, 0xe930, 0x5f40, 0x4678, 0xc95, 0x1, 0x0);
        gbc.writeMem(0xad1e, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xea5c, gbc.sp());
        EXPECT(0xad1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xad1e));
        // 5D 0210
        gbc.setState(0x4aa9, 0x87d1, 0x9240, 0xfab9, 0xe846, 0x6db6, 0x1, 0x0);
        gbc.writeMem(0x4aa9, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x87d1, gbc.sp());
        EXPECT(0x4aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0211
        gbc.setState(0x1d3e, 0x150d, 0xa720, 0xdab4, 0x2527, 0x341e, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x5d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x150d, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0212
        gbc.setState(0xa5c6, 0x855, 0xf5a0, 0x805, 0x29e1, 0xb880, 0x1, 0x0);
        gbc.writeMem(0xa5c6, { 0x5d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x855, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa5c6));
        // 5D 0213
        gbc.setState(0x9083, 0xd0a1, 0x66e0, 0xcd36, 0x6963, 0xf925, 0x0, 0x1);
        gbc.writeMem(0x9083, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd0a1, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9083));
        // 5D 0214
        gbc.setState(0x8d, 0x8ba, 0x1d50, 0xde3b, 0x5f89, 0xb2d5, 0x0, 0x1);
        gbc.writeMem(0x8d, { 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0215
        gbc.setState(0x7d73, 0x5711, 0xc0b0, 0x43e3, 0xa76f, 0x6597, 0x1, 0x0);
        gbc.writeMem(0x7d73, { 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0216
        gbc.setState(0x4782, 0x2c4c, 0x2250, 0xa807, 0xa7cc, 0x61e1, 0x0, 0x1);
        gbc.writeMem(0x4782, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2c4c, gbc.sp());
        EXPECT(0x4783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0217
        gbc.setState(0x4f11, 0xb0a3, 0x8530, 0xa692, 0xfbd2, 0xbca9, 0x0, 0x1);
        gbc.writeMem(0x4f11, { 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0218
        gbc.setState(0xa3ad, 0x23ce, 0x81a0, 0x1b98, 0x52a3, 0xb8f5, 0x1, 0x1);
        gbc.writeMem(0xa3ad, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x23ce, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa3ad));
        // 5D 0219
        gbc.setState(0x2d61, 0xb96f, 0x9560, 0xfdce, 0x10e7, 0x4b8, 0x1, 0x1);
        gbc.writeMem(0x2d61, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb96f, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 021A
        gbc.setState(0xba4a, 0xb3f8, 0x8dc0, 0xc46, 0x6a0d, 0x1a68, 0x0, 0x0);
        gbc.writeMem(0xba4a, { 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb3f8, gbc.sp());
        EXPECT(0xba4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xba4a));
        // 5D 021B
        gbc.setState(0xcc7f, 0x5a0b, 0x6750, 0xe022, 0x6f29, 0xde3b, 0x0, 0x1);
        gbc.writeMem(0xcc7f, { 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0xcc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc7f));
        // 5D 021D
        gbc.setState(0xf41, 0x1aeb, 0xc2d0, 0xf794, 0xd60, 0x8740, 0x1, 0x0);
        gbc.writeMem(0xf41, { 0x5d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1aeb, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 021E
        gbc.setState(0xd991, 0x248e, 0x9b70, 0xb83e, 0xd4db, 0x5469, 0x1, 0x0);
        gbc.writeMem(0xd991, { 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd991));
        // 5D 021F
        gbc.setState(0x66fd, 0xca30, 0x27c0, 0xddfb, 0x980a, 0x8e2e, 0x1, 0x0);
        gbc.writeMem(0x66fd, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca30, gbc.sp());
        EXPECT(0x66fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0220
        gbc.setState(0x3c4b, 0xc2e7, 0xe9e0, 0x9aa5, 0x1d89, 0xda00, 0x1, 0x0);
        gbc.writeMem(0x3c4b, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc2e7, gbc.sp());
        EXPECT(0x3c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0221
        gbc.setState(0x55ad, 0x5c06, 0x7510, 0x5af8, 0x4ef, 0x967e, 0x1, 0x0);
        gbc.writeMem(0x55ad, { 0x5d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5c06, gbc.sp());
        EXPECT(0x55ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0222
        gbc.setState(0xc6bc, 0x84c7, 0x3850, 0x8f1f, 0xab6d, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0xc6bc, { 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x84c7, gbc.sp());
        EXPECT(0xc6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc6bc));
        // 5D 0223
        gbc.setState(0x20f6, 0xb339, 0x67b0, 0x34bf, 0x525b, 0xfea9, 0x0, 0x1);
        gbc.writeMem(0x20f6, { 0x5d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x20f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0224
        gbc.setState(0x4752, 0x55f8, 0x36e0, 0x53cb, 0x2725, 0x8630, 0x0, 0x1);
        gbc.writeMem(0x4752, { 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x55f8, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0225
        gbc.setState(0x7881, 0xbb1c, 0x7bd0, 0x8e59, 0x4c62, 0x19e8, 0x0, 0x1);
        gbc.writeMem(0x7881, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0226
        gbc.setState(0x3a95, 0x40b, 0x4ac0, 0x2b5b, 0xb4aa, 0x491f, 0x0, 0x0);
        gbc.writeMem(0x3a95, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x40b, gbc.sp());
        EXPECT(0x3a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0227
        gbc.setState(0x728e, 0x909f, 0x8340, 0x57b2, 0xf1a3, 0x5da5, 0x0, 0x1);
        gbc.writeMem(0x728e, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0x728f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0228
        gbc.setState(0x8566, 0x935e, 0xd470, 0x88c6, 0x801c, 0x3781, 0x0, 0x1);
        gbc.writeMem(0x8566, { 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x935e, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8566));
        // 5D 0229
        gbc.setState(0x852e, 0x2311, 0x56f0, 0xc968, 0x873c, 0x966f, 0x1, 0x0);
        gbc.writeMem(0x852e, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2311, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x852e));
        // 5D 022A
        gbc.setState(0x1ad3, 0x96f0, 0xdff0, 0x2caa, 0x95e2, 0x3023, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 022B
        gbc.setState(0x1836, 0x3557, 0x7960, 0xf119, 0x27ee, 0x2f8d, 0x1, 0x1);
        gbc.writeMem(0x1836, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x1837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 022C
        gbc.setState(0xd4e4, 0x3fb7, 0x17c0, 0x3c5a, 0x4fcc, 0x90b7, 0x1, 0x0);
        gbc.writeMem(0xd4e4, { 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd4e4));
        // 5D 022D
        gbc.setState(0xbcb4, 0x19d1, 0x2d60, 0x523b, 0xae79, 0x5555, 0x0, 0x0);
        gbc.writeMem(0xbcb4, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x19d1, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbcb4));
        // 5D 022E
        gbc.setState(0x7512, 0x9f92, 0x56e0, 0x1378, 0xad6d, 0xfd1c, 0x1, 0x0);
        gbc.writeMem(0x7512, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9f92, gbc.sp());
        EXPECT(0x7513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 022F
        gbc.setState(0xea42, 0xa522, 0xea00, 0x4ac2, 0xe97f, 0xb295, 0x0, 0x1);
        gbc.writeMem(0xea42, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea42));
        // 5D 0230
        gbc.setState(0x6b07, 0xc4c4, 0x8450, 0x2e71, 0x27fe, 0x2f87, 0x1, 0x0);
        gbc.writeMem(0x6b07, { 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc4c4, gbc.sp());
        EXPECT(0x6b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0231
        gbc.setState(0x479, 0xc33, 0x4410, 0xbdaf, 0x793b, 0x6eb5, 0x0, 0x1);
        gbc.writeMem(0x479, { 0x5d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc33, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0232
        gbc.setState(0xc53a, 0xa9c, 0xcd70, 0xbb46, 0x854c, 0x677, 0x0, 0x0);
        gbc.writeMem(0xc53a, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc53a));
        // 5D 0233
        gbc.setState(0xbe3a, 0x64a0, 0x5f40, 0xe899, 0x4231, 0x23c6, 0x1, 0x0);
        gbc.writeMem(0xbe3a, { 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x64a0, gbc.sp());
        EXPECT(0xbe3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbe3a));
        // 5D 0234
        gbc.setState(0x22db, 0xd259, 0x10e0, 0xee74, 0x649a, 0x99e1, 0x1, 0x0);
        gbc.writeMem(0x22db, { 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0x22dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0235
        gbc.setState(0x5dfb, 0xc9fb, 0x4100, 0xe642, 0xe7f6, 0x15e, 0x0, 0x0);
        gbc.writeMem(0x5dfb, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0236
        gbc.setState(0x16b3, 0x90dc, 0xb50, 0x4200, 0x7f45, 0x1d1, 0x0, 0x1);
        gbc.writeMem(0x16b3, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x90dc, gbc.sp());
        EXPECT(0x16b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0237
        gbc.setState(0x4def, 0x9bf1, 0xb0e0, 0x8ae, 0xc559, 0xfe87, 0x0, 0x1);
        gbc.writeMem(0x4def, { 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0238
        gbc.setState(0xaef8, 0x2eeb, 0xab70, 0x26fc, 0xebbd, 0x8090, 0x1, 0x0);
        gbc.writeMem(0xaef8, { 0x5d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2eeb, gbc.sp());
        EXPECT(0xaef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaef8));
        // 5D 0239
        gbc.setState(0xd3dd, 0x6d31, 0xfee0, 0x4b62, 0xca79, 0xf1e6, 0x1, 0x0);
        gbc.writeMem(0xd3dd, { 0x5d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6d31, gbc.sp());
        EXPECT(0xd3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd3dd));
        // 5D 023A
        gbc.setState(0x934b, 0x9b43, 0xfad0, 0xf5e4, 0x1039, 0x6bdc, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9b43, gbc.sp());
        EXPECT(0x934c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x934b));
        // 5D 023B
        gbc.setState(0x987d, 0xb78f, 0x7750, 0xa8c0, 0x8a5d, 0x6839, 0x0, 0x1);
        gbc.writeMem(0x987d, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x987e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x987d));
        // 5D 023C
        gbc.setState(0x90c5, 0xa225, 0x7460, 0x8d95, 0x696d, 0x6f95, 0x0, 0x1);
        gbc.writeMem(0x90c5, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa225, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x90c5));
        // 5D 023D
        gbc.setState(0x3628, 0xe07f, 0xdfb0, 0x9793, 0xc11a, 0xcb12, 0x0, 0x1);
        gbc.writeMem(0x3628, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe07f, gbc.sp());
        EXPECT(0x3629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 023E
        gbc.setState(0x7ce2, 0x5194, 0x57f0, 0x4dc1, 0x1dfd, 0xd91, 0x0, 0x1);
        gbc.writeMem(0x7ce2, { 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5194, gbc.sp());
        EXPECT(0x7ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 023F
        gbc.setState(0xa9a0, 0x46ad, 0x3f40, 0xbd5b, 0x2fd8, 0x369b, 0x1, 0x1);
        gbc.writeMem(0xa9a0, { 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x46ad, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa9a0));
        // 5D 0240
        gbc.setState(0xac30, 0x721c, 0xa360, 0x16cf, 0xcee, 0x51ea, 0x0, 0x1);
        gbc.writeMem(0xac30, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x721c, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xac30));
        // 5D 0241
        gbc.setState(0xb410, 0xea26, 0xbbc0, 0xffed, 0xf9c9, 0x4e96, 0x0, 0x1);
        gbc.writeMem(0xb410, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xea26, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb410));
        // 5D 0242
        gbc.setState(0xe999, 0xd4ec, 0x9150, 0x285b, 0x5d9b, 0x99a2, 0x0, 0x1);
        gbc.writeMem(0xe999, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe999));
        // 5D 0243
        gbc.setState(0xa435, 0x9a0e, 0x8520, 0x20f8, 0xc3f7, 0xee39, 0x1, 0x0);
        gbc.writeMem(0xa435, { 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9a0e, gbc.sp());
        EXPECT(0xa436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa435));
        // 5D 0244
        gbc.setState(0xa091, 0xf22a, 0xcd60, 0x5f8d, 0x2c94, 0xd404, 0x1, 0x0);
        gbc.writeMem(0xa091, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0xa092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa091));
        // 5D 0245
        gbc.setState(0xa832, 0xfcea, 0x3100, 0xd10d, 0x3279, 0xfc74, 0x1, 0x0);
        gbc.writeMem(0xa832, { 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa832));
        // 5D 0246
        gbc.setState(0x8b25, 0x6858, 0x9a40, 0xb3e, 0xae52, 0xb4b9, 0x0, 0x0);
        gbc.writeMem(0x8b25, { 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6858, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8b25));
        // 5D 0247
        gbc.setState(0x61c7, 0x3315, 0x2a50, 0x8b1b, 0xf615, 0x33e5, 0x1, 0x1);
        gbc.writeMem(0x61c7, { 0x5d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3315, gbc.sp());
        EXPECT(0x61c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0248
        gbc.setState(0x4275, 0x2b7c, 0x7840, 0xdf40, 0xb448, 0x5bc, 0x0, 0x0);
        gbc.writeMem(0x4275, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0249
        gbc.setState(0x2cc8, 0xd79c, 0x2330, 0x647d, 0x3cd2, 0xde9b, 0x1, 0x1);
        gbc.writeMem(0x2cc8, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 024A
        gbc.setState(0x8599, 0x10f0, 0x7a70, 0x3084, 0x55a6, 0x3ff3, 0x1, 0x1);
        gbc.writeMem(0x8599, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8599));
        // 5D 024C
        gbc.setState(0x1263, 0x52f, 0xb310, 0xa0e1, 0x5b36, 0x3024, 0x0, 0x0);
        gbc.writeMem(0x1263, { 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x52f, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 024D
        gbc.setState(0x6ec0, 0xff33, 0xdde0, 0x5229, 0x8d3, 0x2ab1, 0x1, 0x1);
        gbc.writeMem(0x6ec0, { 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xff33, gbc.sp());
        EXPECT(0x6ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 024E
        gbc.setState(0x27f6, 0x2d0d, 0x7f0, 0xdaff, 0x4961, 0x61e5, 0x0, 0x0);
        gbc.writeMem(0x27f6, { 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2d0d, gbc.sp());
        EXPECT(0x27f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 024F
        gbc.setState(0x5451, 0xc69f, 0xbbd0, 0xafa4, 0x5b51, 0xb54f, 0x0, 0x0);
        gbc.writeMem(0x5451, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc69f, gbc.sp());
        EXPECT(0x5452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0250
        gbc.setState(0x8898, 0xb816, 0x5810, 0xda2a, 0x761f, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x8898, { 0x5d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb816, gbc.sp());
        EXPECT(0x8899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8898));
        // 5D 0251
        gbc.setState(0x4507, 0x67d1, 0xb5c0, 0xed2d, 0x142c, 0xa1b4, 0x0, 0x1);
        gbc.writeMem(0x4507, { 0x5d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x4508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0252
        gbc.setState(0xb34e, 0xaaab, 0x8370, 0xc936, 0xcab6, 0xd41a, 0x1, 0x0);
        gbc.writeMem(0xb34e, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0xb34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb34e));
        // 5D 0253
        gbc.setState(0xd7aa, 0xe9a0, 0x7a60, 0x183e, 0x7a1, 0x1a3f, 0x1, 0x0);
        gbc.writeMem(0xd7aa, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe9a0, gbc.sp());
        EXPECT(0xd7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd7aa));
        // 5D 0254
        gbc.setState(0xbb12, 0x1c99, 0x8bf0, 0x87fe, 0xe328, 0xfe62, 0x0, 0x1);
        gbc.writeMem(0xbb12, { 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1c99, gbc.sp());
        EXPECT(0xbb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbb12));
        // 5D 0255
        gbc.setState(0xc9bc, 0x8100, 0x7a30, 0x505b, 0x942d, 0x7618, 0x0, 0x1);
        gbc.writeMem(0xc9bc, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8100, gbc.sp());
        EXPECT(0xc9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc9bc));
        // 5D 0256
        gbc.setState(0x4d25, 0x68ac, 0x5d20, 0xda7, 0xb99, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0x4d25, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0x4d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0257
        gbc.setState(0x8a58, 0xc45, 0xd10, 0x2af, 0x4003, 0x796b, 0x1, 0x1);
        gbc.writeMem(0x8a58, { 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8a58));
        // 5D 0258
        gbc.setState(0x58a3, 0x513b, 0x9750, 0xe3cf, 0x3ce9, 0x64e0, 0x1, 0x0);
        gbc.writeMem(0x58a3, { 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x513b, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0259
        gbc.setState(0x9c87, 0x7d4a, 0xda90, 0x63ff, 0x2e19, 0x8e9, 0x0, 0x1);
        gbc.writeMem(0x9c87, { 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c87));
        // 5D 025A
        gbc.setState(0x11e5, 0x4a2f, 0x2790, 0xc2b6, 0x789d, 0x35ee, 0x1, 0x0);
        gbc.writeMem(0x11e5, { 0x5d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 025B
        gbc.setState(0xb493, 0x5add, 0x80, 0xe71f, 0x66fb, 0x8619, 0x1, 0x1);
        gbc.writeMem(0xb493, { 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5add, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb493));
        // 5D 025C
        gbc.setState(0x97a7, 0x483e, 0x41a0, 0xcc88, 0xdfde, 0xa02a, 0x1, 0x0);
        gbc.writeMem(0x97a7, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x483e, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x97a7));
        // 5D 025D
        gbc.setState(0x7aed, 0x2be, 0xc780, 0x65d0, 0xf6d, 0x6cb5, 0x0, 0x0);
        gbc.writeMem(0x7aed, { 0x5d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x7aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 025E
        gbc.setState(0xebf, 0xd9ed, 0x8930, 0x6bec, 0x5e70, 0x1a8f, 0x1, 0x0);
        gbc.writeMem(0xebf, { 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd9ed, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 025F
        gbc.setState(0x96f7, 0xd450, 0x630, 0x74fb, 0x17c9, 0x25ee, 0x1, 0x0);
        gbc.writeMem(0x96f7, { 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd450, gbc.sp());
        EXPECT(0x96f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x96f7));
        // 5D 0260
        gbc.setState(0x9970, 0x80dd, 0x45b0, 0xd33d, 0x1dd1, 0x78ad, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9970));
        // 5D 0261
        gbc.setState(0x54a2, 0x6a1f, 0xe4a0, 0x847e, 0x18ce, 0xa4a8, 0x1, 0x1);
        gbc.writeMem(0x54a2, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a1f, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0262
        gbc.setState(0x1f31, 0xedba, 0xe270, 0x3816, 0x7f0, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0x1f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0263
        gbc.setState(0x88b6, 0x573d, 0x8f90, 0x68bf, 0x8ce1, 0x161c, 0x0, 0x1);
        gbc.writeMem(0x88b6, { 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x573d, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x88b6));
        // 5D 0264
        gbc.setState(0xbfdb, 0x23a1, 0x3d80, 0x8d8a, 0x3e8e, 0xe65c, 0x1, 0x1);
        gbc.writeMem(0xbfdb, { 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23a1, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbfdb));
        // 5D 0265
        gbc.setState(0x5f9a, 0xeb38, 0x2080, 0xf1a7, 0xc5ac, 0xe056, 0x1, 0x0);
        gbc.writeMem(0x5f9a, { 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeb38, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0266
        gbc.setState(0x7d3c, 0xe52a, 0xd870, 0x1cf9, 0x72bc, 0xe5ff, 0x1, 0x0);
        gbc.writeMem(0x7d3c, { 0x5d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0x7d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0268
        gbc.setState(0x5f68, 0x1c6c, 0x8c40, 0xe6bd, 0xb612, 0x8945, 0x0, 0x1);
        gbc.writeMem(0x5f68, { 0x5d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0269
        gbc.setState(0xb328, 0xac1b, 0x60e0, 0x6e9, 0x6e0e, 0x6aa5, 0x1, 0x0);
        gbc.writeMem(0xb328, { 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac1b, gbc.sp());
        EXPECT(0xb329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb328));
        // 5D 026A
        gbc.setState(0xc2c1, 0x319b, 0x4b60, 0x6126, 0xe64c, 0x65cd, 0x0, 0x0);
        gbc.writeMem(0xc2c1, { 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc2c1));
        // 5D 026B
        gbc.setState(0x51c, 0xf2d3, 0x70e0, 0x4763, 0xd8ca, 0x2879, 0x1, 0x1);
        gbc.writeMem(0x51c, { 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf2d3, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 026C
        gbc.setState(0xe324, 0x3fc3, 0x95e0, 0xa49a, 0x7ea7, 0xf950, 0x1, 0x1);
        gbc.writeMem(0xe324, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe324));
        // 5D 026D
        gbc.setState(0x86e1, 0x39f6, 0xed80, 0xe009, 0xe412, 0xf900, 0x0, 0x0);
        gbc.writeMem(0x86e1, { 0x5d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39f6, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x86e1));
        // 5D 026E
        gbc.setState(0x57a9, 0xb3a0, 0xbc80, 0x2731, 0xf952, 0x9242, 0x0, 0x1);
        gbc.writeMem(0x57a9, { 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb3a0, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 026F
        gbc.setState(0x6411, 0x7255, 0x3760, 0x664e, 0x4a8, 0xbfd9, 0x0, 0x0);
        gbc.writeMem(0x6411, { 0x5d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7255, gbc.sp());
        EXPECT(0x6412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0270
        gbc.setState(0xd729, 0xdbc6, 0x9e70, 0x7c9f, 0xdfe5, 0xc16b, 0x1, 0x1);
        gbc.writeMem(0xd729, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0xd72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd729));
        // 5D 0271
        gbc.setState(0x7e99, 0xf49, 0x3d90, 0xe731, 0x44e5, 0xc64, 0x1, 0x1);
        gbc.writeMem(0x7e99, { 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf49, gbc.sp());
        EXPECT(0x7e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0272
        gbc.setState(0x65cd, 0xea72, 0xb900, 0x46bd, 0xde48, 0x345e, 0x0, 0x0);
        gbc.writeMem(0x65cd, { 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xea72, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0273
        gbc.setState(0x50e9, 0x6130, 0xea00, 0x44f2, 0xd859, 0xe140, 0x1, 0x1);
        gbc.writeMem(0x50e9, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6130, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0274
        gbc.setState(0x958d, 0xd2d8, 0x9ee0, 0x48a3, 0xb7b4, 0xa53, 0x1, 0x0);
        gbc.writeMem(0x958d, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd2d8, gbc.sp());
        EXPECT(0x958e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x958d));
        // 5D 0275
        gbc.setState(0xafdd, 0xcf3a, 0xa360, 0x2f51, 0x729b, 0x6bf5, 0x1, 0x1);
        gbc.writeMem(0xafdd, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf3a, gbc.sp());
        EXPECT(0xafde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xafdd));
        // 5D 0276
        gbc.setState(0xb73, 0x1ce3, 0x3410, 0xc3fc, 0x2a28, 0x8a2a, 0x1, 0x0);
        gbc.writeMem(0xb73, { 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1ce3, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0277
        gbc.setState(0xa10d, 0xc915, 0xcd20, 0xd537, 0xb1df, 0xe904, 0x0, 0x0);
        gbc.writeMem(0xa10d, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa10d));
        // 5D 0278
        gbc.setState(0x4ba4, 0xe1b9, 0x9730, 0x8277, 0x25a1, 0xf2e7, 0x0, 0x1);
        gbc.writeMem(0x4ba4, { 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0x4ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0279
        gbc.setState(0x519d, 0x7f52, 0xbac0, 0x6c83, 0x9c87, 0x71eb, 0x1, 0x0);
        gbc.writeMem(0x519d, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0x519e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 027A
        gbc.setState(0x3c8f, 0x9553, 0x28c0, 0x6659, 0x57cb, 0x80aa, 0x0, 0x0);
        gbc.writeMem(0x3c8f, { 0x5d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9553, gbc.sp());
        EXPECT(0x3c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 027B
        gbc.setState(0xc409, 0xf0f7, 0x54e0, 0x10e0, 0x4ffe, 0xccaf, 0x1, 0x0);
        gbc.writeMem(0xc409, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf0f7, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc409));
        // 5D 027C
        gbc.setState(0xb512, 0x7fed, 0x1780, 0x28ee, 0x2800, 0x3972, 0x0, 0x1);
        gbc.writeMem(0xb512, { 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0xb513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb512));
        // 5D 027D
        gbc.setState(0xdf66, 0x501c, 0x2130, 0xad9f, 0x5369, 0xab3c, 0x1, 0x1);
        gbc.writeMem(0xdf66, { 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x501c, gbc.sp());
        EXPECT(0xdf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdf66));
        // 5D 027E
        gbc.setState(0x759c, 0x1ab6, 0x1870, 0xf86a, 0x5654, 0x4df9, 0x0, 0x0);
        gbc.writeMem(0x759c, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 027F
        gbc.setState(0x6b44, 0x90a8, 0x5450, 0xe631, 0x3e84, 0xf85d, 0x1, 0x1);
        gbc.writeMem(0x6b44, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x90a8, gbc.sp());
        EXPECT(0x6b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0280
        gbc.setState(0x291d, 0x9b67, 0xc520, 0xd031, 0x663d, 0xb99, 0x1, 0x1);
        gbc.writeMem(0x291d, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9b67, gbc.sp());
        EXPECT(0x291e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0281
        gbc.setState(0xb5d7, 0xd9c8, 0x3cd0, 0x9a22, 0x95f2, 0x5014, 0x1, 0x0);
        gbc.writeMem(0xb5d7, { 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd9c8, gbc.sp());
        EXPECT(0xb5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb5d7));
        // 5D 0282
        gbc.setState(0x7f25, 0xa3dc, 0xda20, 0x4daa, 0x616b, 0xda16, 0x0, 0x1);
        gbc.writeMem(0x7f25, { 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0x7f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0284
        gbc.setState(0xcba, 0xa23e, 0x2630, 0xdbf8, 0xecb4, 0x9ea2, 0x0, 0x0);
        gbc.writeMem(0xcba, { 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa23e, gbc.sp());
        EXPECT(0xcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0286
        gbc.setState(0xc33, 0xb442, 0x99b0, 0x6f89, 0xf596, 0x9713, 0x1, 0x1);
        gbc.writeMem(0xc33, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0xc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0287
        gbc.setState(0x6a77, 0xef53, 0xe170, 0x3046, 0x467b, 0x95, 0x1, 0x0);
        gbc.writeMem(0x6a77, { 0x5d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xef53, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0288
        gbc.setState(0x5b07, 0x2899, 0x5c0, 0x541d, 0x2236, 0x5652, 0x0, 0x1);
        gbc.writeMem(0x5b07, { 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0x5b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0289
        gbc.setState(0x873e, 0x12b1, 0x2480, 0x81f2, 0xd961, 0x4134, 0x1, 0x1);
        gbc.writeMem(0x873e, { 0x5d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x12b1, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x873e));
        // 5D 028A
        gbc.setState(0x8cc3, 0x8d28, 0x77c0, 0x2af2, 0x77de, 0x5a88, 0x1, 0x0);
        gbc.writeMem(0x8cc3, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8d28, gbc.sp());
        EXPECT(0x8cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8cc3));
        // 5D 028B
        gbc.setState(0x136, 0x2167, 0xe600, 0xf463, 0x287, 0xd73b, 0x1, 0x0);
        gbc.writeMem(0x136, { 0x5d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2167, gbc.sp());
        EXPECT(0x137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 028C
        gbc.setState(0x22fb, 0x6ffe, 0xb870, 0xb33b, 0x92fb, 0xb812, 0x1, 0x1);
        gbc.writeMem(0x22fb, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6ffe, gbc.sp());
        EXPECT(0x22fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 028D
        gbc.setState(0xcd7b, 0x2ae3, 0x8380, 0xd137, 0x6e4, 0x8bbf, 0x0, 0x1);
        gbc.writeMem(0xcd7b, { 0x5d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0xcd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcd7b));
        // 5D 028E
        gbc.setState(0x7799, 0x23cc, 0xf920, 0x8b5b, 0x85, 0xa862, 0x0, 0x1);
        gbc.writeMem(0x7799, { 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x23cc, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 028F
        gbc.setState(0x76f2, 0xa666, 0x2d30, 0x4f1, 0xbeb, 0xd98d, 0x1, 0x0);
        gbc.writeMem(0x76f2, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa666, gbc.sp());
        EXPECT(0x76f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0290
        gbc.setState(0xb247, 0x51e2, 0x7390, 0x5014, 0x9f7e, 0x43a2, 0x0, 0x0);
        gbc.writeMem(0xb247, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb247));
        // 5D 0291
        gbc.setState(0x8e0d, 0x8fcf, 0x9560, 0x4f49, 0xaeb, 0xfe0b, 0x1, 0x1);
        gbc.writeMem(0x8e0d, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8fcf, gbc.sp());
        EXPECT(0x8e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8e0d));
        // 5D 0292
        gbc.setState(0xb4cd, 0x33d9, 0x94e0, 0x36e7, 0x1a1b, 0xb532, 0x1, 0x1);
        gbc.writeMem(0xb4cd, { 0x5d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x33d9, gbc.sp());
        EXPECT(0xb4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb4cd));
        // 5D 0293
        gbc.setState(0xed22, 0x2e4a, 0x330, 0x9a29, 0xfafb, 0x501c, 0x0, 0x0);
        gbc.writeMem(0xed22, { 0x5d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2e4a, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xed22));
        // 5D 0294
        gbc.setState(0x951, 0xc1ed, 0x7920, 0x70a5, 0x2beb, 0xa9e4, 0x1, 0x1);
        gbc.writeMem(0x951, { 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0x952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0295
        gbc.setState(0x7edc, 0xab07, 0x7720, 0x55ec, 0x8085, 0x8381, 0x1, 0x0);
        gbc.writeMem(0x7edc, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0296
        gbc.setState(0xc452, 0xdefc, 0xfe70, 0x1f9d, 0xb1f6, 0x1644, 0x1, 0x0);
        gbc.writeMem(0xc452, { 0x5d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdefc, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc452));
        // 5D 0297
        gbc.setState(0xd512, 0xa76d, 0xc810, 0x5963, 0x71d7, 0xf317, 0x0, 0x0);
        gbc.writeMem(0xd512, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa76d, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd512));
        // 5D 0298
        gbc.setState(0x9523, 0x3d71, 0xc170, 0x66bb, 0x6140, 0x2cf9, 0x1, 0x1);
        gbc.writeMem(0x9523, { 0x5d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3d71, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9523));
        // 5D 0299
        gbc.setState(0x471e, 0xeb71, 0x9370, 0x5eef, 0x8370, 0xd5b4, 0x1, 0x0);
        gbc.writeMem(0x471e, { 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 029A
        gbc.setState(0xa086, 0xf028, 0x8b0, 0x45c2, 0x782f, 0x49, 0x1, 0x0);
        gbc.writeMem(0xa086, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf028, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa086));
        // 5D 029B
        gbc.setState(0xd4ea, 0x2001, 0xa810, 0xafbe, 0x1ee5, 0x73d, 0x0, 0x1);
        gbc.writeMem(0xd4ea, { 0x5d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2001, gbc.sp());
        EXPECT(0xd4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd4ea));
        // 5D 029C
        gbc.setState(0x5a4, 0x5a43, 0x29d0, 0x1956, 0x84c6, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x5a4, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 029D
        gbc.setState(0xe589, 0x53b1, 0x81e0, 0xc3ac, 0xd36f, 0x2cbc, 0x0, 0x0);
        gbc.writeMem(0xe589, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x53b1, gbc.sp());
        EXPECT(0xe58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe589));
        // 5D 029E
        gbc.setState(0x4737, 0x9cef, 0x7450, 0x290f, 0x4a02, 0xa1d, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 029F
        gbc.setState(0x8a74, 0x7457, 0x23d0, 0x5225, 0x8b00, 0xa066, 0x1, 0x1);
        gbc.writeMem(0x8a74, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7457, gbc.sp());
        EXPECT(0x8a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8a74));
        // 5D 02A0
        gbc.setState(0x5876, 0x238b, 0x3280, 0xacef, 0x7b18, 0xa469, 0x0, 0x0);
        gbc.writeMem(0x5876, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x238b, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A1
        gbc.setState(0x256d, 0x85e0, 0x5600, 0x81b3, 0x5fac, 0x82e0, 0x1, 0x0);
        gbc.writeMem(0x256d, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85e0, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A2
        gbc.setState(0x22e7, 0xdae9, 0x8c60, 0x6fc3, 0x7efb, 0xb4f3, 0x0, 0x0);
        gbc.writeMem(0x22e7, { 0x5d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A3
        gbc.setState(0x3012, 0x7b2c, 0xf060, 0xd1d0, 0x581, 0x3cb2, 0x0, 0x0);
        gbc.writeMem(0x3012, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x3013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A4
        gbc.setState(0xec8a, 0x18f8, 0xcec0, 0xc921, 0x3b7, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0xec8a, { 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x18f8, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xec8a));
        // 5D 02A5
        gbc.setState(0x505f, 0x8f, 0x6c70, 0xca07, 0xc01b, 0x2484, 0x1, 0x1);
        gbc.writeMem(0x505f, { 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8f, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02A6
        gbc.setState(0x4764, 0x5601, 0x7c0, 0x9fea, 0x3ed6, 0x81cc, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5601, gbc.sp());
        EXPECT(0x4765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A7
        gbc.setState(0x57e2, 0xd3af, 0xd220, 0x1617, 0xf9e7, 0xd8a0, 0x0, 0x1);
        gbc.writeMem(0x57e2, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd3af, gbc.sp());
        EXPECT(0x57e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02A8
        gbc.setState(0x6bd6, 0x31ba, 0x9070, 0x1060, 0x270b, 0x5621, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0x5d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x31ba, gbc.sp());
        EXPECT(0x6bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02A9
        gbc.setState(0xa147, 0x7c2f, 0x1d30, 0x22ca, 0xb07e, 0xe6bb, 0x1, 0x0);
        gbc.writeMem(0xa147, { 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7c2f, gbc.sp());
        EXPECT(0xa148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa147));
        // 5D 02AA
        gbc.setState(0x4a00, 0x5e8e, 0x3490, 0xc3a6, 0x84, 0xcf27, 0x1, 0x0);
        gbc.writeMem(0x4a00, { 0x5d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5e8e, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02AB
        gbc.setState(0xbff3, 0xfc10, 0xdfd0, 0x2f13, 0x8934, 0xb8d2, 0x0, 0x1);
        gbc.writeMem(0xbff3, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc10, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbff3));
        // 5D 02AC
        gbc.setState(0x31f9, 0x88c8, 0x11b0, 0x37f6, 0xc170, 0x398, 0x1, 0x1);
        gbc.writeMem(0x31f9, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x88c8, gbc.sp());
        EXPECT(0x31fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02AD
        gbc.setState(0xd1c1, 0x7607, 0xea60, 0xd8b4, 0xa316, 0xb376, 0x1, 0x0);
        gbc.writeMem(0xd1c1, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7607, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd1c1));
        // 5D 02AE
        gbc.setState(0xc2da, 0x122d, 0xdb70, 0xf65d, 0xf8ba, 0xc09e, 0x0, 0x1);
        gbc.writeMem(0xc2da, { 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x122d, gbc.sp());
        EXPECT(0xc2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc2da));
        // 5D 02AF
        gbc.setState(0x4ef7, 0xc18d, 0xe90, 0xecae, 0x97ca, 0xe4b7, 0x0, 0x1);
        gbc.writeMem(0x4ef7, { 0x5d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc18d, gbc.sp());
        EXPECT(0x4ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02B0
        gbc.setState(0x61e5, 0x8151, 0x77a0, 0x112d, 0x7191, 0xfbbd, 0x0, 0x1);
        gbc.writeMem(0x61e5, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02B1
        gbc.setState(0x4da5, 0x82c4, 0x6d00, 0x8a6b, 0x1386, 0x75de, 0x0, 0x0);
        gbc.writeMem(0x4da5, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x4da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02B2
        gbc.setState(0xd05b, 0xf862, 0x93c0, 0xbef4, 0x4240, 0x1631, 0x0, 0x0);
        gbc.writeMem(0xd05b, { 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf862, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd05b));
        // 5D 02B3
        gbc.setState(0x3756, 0xb857, 0x5fa0, 0xba8f, 0xd11a, 0xd290, 0x1, 0x0);
        gbc.writeMem(0x3756, { 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb857, gbc.sp());
        EXPECT(0x3757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02B4
        gbc.setState(0x6531, 0x6c85, 0x3c80, 0x5456, 0xe35, 0xab24, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0x5d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6c85, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02B5
        gbc.setState(0x3731, 0x58dc, 0x89d0, 0xbbfd, 0x9a39, 0xa52f, 0x1, 0x0);
        gbc.writeMem(0x3731, { 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x58dc, gbc.sp());
        EXPECT(0x3732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02B6
        gbc.setState(0xb843, 0x623b, 0xd9f0, 0xd32b, 0xe2f5, 0x955d, 0x1, 0x1);
        gbc.writeMem(0xb843, { 0x5d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x623b, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb843));
        // 5D 02B7
        gbc.setState(0x21b3, 0x5a38, 0x9eb0, 0xceab, 0xa270, 0x8f92, 0x0, 0x1);
        gbc.writeMem(0x21b3, { 0x5d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5a38, gbc.sp());
        EXPECT(0x21b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02B8
        gbc.setState(0x86d4, 0x793f, 0x71f0, 0x7e3c, 0xa1e6, 0x9974, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0x5d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x793f, gbc.sp());
        EXPECT(0x86d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x86d4));
        // 5D 02B9
        gbc.setState(0x147a, 0xc17e, 0xbbb0, 0x31ec, 0x76c9, 0xe5b6, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0x5d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc17e, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02BA
        gbc.setState(0x4ecc, 0xa678, 0x6670, 0xd713, 0xa2ea, 0x3674, 0x1, 0x1);
        gbc.writeMem(0x4ecc, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa678, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02BB
        gbc.setState(0x6685, 0xc306, 0x8470, 0xca2b, 0x57df, 0x6867, 0x1, 0x0);
        gbc.writeMem(0x6685, { 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02BC
        gbc.setState(0x622f, 0x9846, 0xbd0, 0x3c05, 0x1734, 0xb657, 0x0, 0x0);
        gbc.writeMem(0x622f, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0x6230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02BD
        gbc.setState(0x3faf, 0x206d, 0x24a0, 0x8737, 0xd84e, 0xfac6, 0x0, 0x1);
        gbc.writeMem(0x3faf, { 0x5d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x3fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02BE
        gbc.setState(0xe2d9, 0x100b, 0xada0, 0x6360, 0x7b66, 0xcdd3, 0x1, 0x0);
        gbc.writeMem(0xe2d9, { 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0xe2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe2d9));
        // 5D 02BF
        gbc.setState(0xd930, 0xdae0, 0x1830, 0x6592, 0x85be, 0x70b4, 0x1, 0x1);
        gbc.writeMem(0xd930, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0xd931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd930));
        // 5D 02C0
        gbc.setState(0x9eaa, 0x5795, 0xae90, 0xfa6f, 0x5aef, 0x8c85, 0x0, 0x1);
        gbc.writeMem(0x9eaa, { 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5795, gbc.sp());
        EXPECT(0x9eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9eaa));
        // 5D 02C1
        gbc.setState(0xa57d, 0x731e, 0xdab0, 0xa31, 0xc168, 0xbf40, 0x0, 0x1);
        gbc.writeMem(0xa57d, { 0x5d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0xa57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa57d));
        // 5D 02C2
        gbc.setState(0x10d0, 0x8e50, 0x8d50, 0xf8d0, 0x7376, 0xb41c, 0x1, 0x1);
        gbc.writeMem(0x10d0, { 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8e50, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02C3
        gbc.setState(0xbbc6, 0xcd24, 0x8aa0, 0x65e3, 0xa19e, 0xf9d8, 0x1, 0x1);
        gbc.writeMem(0xbbc6, { 0x5d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0xbbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbbc6));
        // 5D 02C4
        gbc.setState(0x4cdd, 0x10ff, 0x4ac0, 0xdd7f, 0x7e35, 0xf0c1, 0x1, 0x1);
        gbc.writeMem(0x4cdd, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x10ff, gbc.sp());
        EXPECT(0x4cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02C5
        gbc.setState(0xb9cb, 0x3481, 0x1130, 0x62ae, 0xdc35, 0x790c, 0x1, 0x0);
        gbc.writeMem(0xb9cb, { 0x5d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3481, gbc.sp());
        EXPECT(0xb9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb9cb));
        // 5D 02C6
        gbc.setState(0x52c5, 0xebbc, 0x18e0, 0xf25b, 0x2930, 0xc60f, 0x0, 0x1);
        gbc.writeMem(0x52c5, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0x52c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02C8
        gbc.setState(0x4c66, 0x32e2, 0xc440, 0x469f, 0xd007, 0x3fe2, 0x1, 0x1);
        gbc.writeMem(0x4c66, { 0x5d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x32e2, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02C9
        gbc.setState(0x9d7d, 0x632b, 0x5c50, 0x8123, 0x827a, 0x9465, 0x0, 0x1);
        gbc.writeMem(0x9d7d, { 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x632b, gbc.sp());
        EXPECT(0x9d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9d7d));
        // 5D 02CA
        gbc.setState(0xb95f, 0xfb28, 0xb860, 0xe454, 0xa44, 0x1519, 0x1, 0x1);
        gbc.writeMem(0xb95f, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfb28, gbc.sp());
        EXPECT(0xb960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb95f));
        // 5D 02CB
        gbc.setState(0xb3f2, 0x7451, 0xf980, 0x328a, 0xb9b4, 0xccaf, 0x1, 0x1);
        gbc.writeMem(0xb3f2, { 0x5d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7451, gbc.sp());
        EXPECT(0xb3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb3f2));
        // 5D 02CC
        gbc.setState(0x5110, 0xc66, 0xf050, 0x639, 0x31ab, 0x770e, 0x0, 0x0);
        gbc.writeMem(0x5110, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02CD
        gbc.setState(0x118e, 0x76e, 0xcfc0, 0xd1e3, 0xee5b, 0xe1f5, 0x0, 0x0);
        gbc.writeMem(0x118e, { 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0x118f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02CE
        gbc.setState(0x3fcc, 0x6495, 0xa0, 0xef13, 0x8604, 0x1c94, 0x1, 0x0);
        gbc.writeMem(0x3fcc, { 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6495, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02CF
        gbc.setState(0x4082, 0x70c4, 0xbec0, 0xd5b0, 0x5302, 0xfffa, 0x0, 0x0);
        gbc.writeMem(0x4082, { 0x5d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x4083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02D0
        gbc.setState(0x8fdd, 0xe3ff, 0xd0, 0x47a0, 0xdb0f, 0x2ad2, 0x1, 0x1);
        gbc.writeMem(0x8fdd, { 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe3ff, gbc.sp());
        EXPECT(0x8fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8fdd));
        // 5D 02D1
        gbc.setState(0x214a, 0x9baf, 0x9d90, 0xa428, 0xd81e, 0x450b, 0x1, 0x1);
        gbc.writeMem(0x214a, { 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9baf, gbc.sp());
        EXPECT(0x214b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02D2
        gbc.setState(0x9aec, 0xb81f, 0x9710, 0xdaf9, 0x785d, 0xae80, 0x1, 0x0);
        gbc.writeMem(0x9aec, { 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb81f, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9aec));
        // 5D 02D3
        gbc.setState(0xc6a7, 0x5c80, 0x6d70, 0x8ba7, 0xcc7f, 0xe015, 0x0, 0x1);
        gbc.writeMem(0xc6a7, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc6a7));
        // 5D 02D4
        gbc.setState(0xbda1, 0x3b47, 0x1d80, 0x2513, 0xae71, 0xf888, 0x1, 0x1);
        gbc.writeMem(0xbda1, { 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3b47, gbc.sp());
        EXPECT(0xbda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbda1));
        // 5D 02D5
        gbc.setState(0x489b, 0xcef6, 0x48f0, 0x8230, 0x44f0, 0x208e, 0x0, 0x0);
        gbc.writeMem(0x489b, { 0x5d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02D6
        gbc.setState(0xec8f, 0x494c, 0x49e0, 0x13db, 0x6523, 0xabb2, 0x1, 0x0);
        gbc.writeMem(0xec8f, { 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x494c, gbc.sp());
        EXPECT(0xec90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xec8f));
        // 5D 02D7
        gbc.setState(0xef00, 0xb36c, 0x6a00, 0x3b6e, 0xf6d6, 0x7349, 0x1, 0x1);
        gbc.writeMem(0xef00, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xef00));
        // 5D 02D9
        gbc.setState(0x9603, 0xd11b, 0x9550, 0x5689, 0x8f29, 0x59cc, 0x0, 0x0);
        gbc.writeMem(0x9603, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd11b, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9603));
        // 5D 02DA
        gbc.setState(0x13c2, 0xdf88, 0x7070, 0x8684, 0x5f12, 0xac53, 0x1, 0x0);
        gbc.writeMem(0x13c2, { 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdf88, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02DB
        gbc.setState(0x2005, 0xca54, 0x5c50, 0x642f, 0x9277, 0x385b, 0x1, 0x0);
        gbc.writeMem(0x2005, { 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0x2006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02DC
        gbc.setState(0xda35, 0xc549, 0x9980, 0x36c6, 0xc878, 0xb92a, 0x0, 0x0);
        gbc.writeMem(0xda35, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc549, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xda35));
        // 5D 02DD
        gbc.setState(0x1baa, 0xd85b, 0x21a0, 0xad2b, 0x71cd, 0x8633, 0x1, 0x1);
        gbc.writeMem(0x1baa, { 0x5d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0x1bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02DE
        gbc.setState(0xed46, 0x7a70, 0x32c0, 0x2e49, 0xa987, 0xa9af, 0x1, 0x1);
        gbc.writeMem(0xed46, { 0x5d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xed46));
        // 5D 02E0
        gbc.setState(0x3a5e, 0xf2e5, 0x7ae0, 0xa3db, 0x575f, 0xfe85, 0x0, 0x0);
        gbc.writeMem(0x3a5e, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x3a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E1
        gbc.setState(0x3345, 0xd3ae, 0x9260, 0x5b9f, 0xefaf, 0x2146, 0x0, 0x1);
        gbc.writeMem(0x3345, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E2
        gbc.setState(0x31bd, 0xef89, 0x8150, 0xdeee, 0x8855, 0x5dc0, 0x1, 0x1);
        gbc.writeMem(0x31bd, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02E3
        gbc.setState(0xcdf, 0xd35a, 0xad60, 0xe5b2, 0x7478, 0x56d3, 0x0, 0x0);
        gbc.writeMem(0xcdf, { 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0xce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E4
        gbc.setState(0x3318, 0x90ff, 0xcd00, 0xfab8, 0x20d1, 0x9f0b, 0x1, 0x0);
        gbc.writeMem(0x3318, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x90ff, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E5
        gbc.setState(0x13bb, 0xea2, 0x20a0, 0x1354, 0x5842, 0x8313, 0x1, 0x0);
        gbc.writeMem(0x13bb, { 0x5d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xea2, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E6
        gbc.setState(0x708d, 0xfbe2, 0x9f80, 0xa9c4, 0xa0ab, 0xe84d, 0x1, 0x1);
        gbc.writeMem(0x708d, { 0x5d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0x708e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E7
        gbc.setState(0x3f41, 0x6439, 0x13b0, 0x2072, 0x96b7, 0x3858, 0x1, 0x1);
        gbc.writeMem(0x3f41, { 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6439, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02E8
        gbc.setState(0x69e, 0x1472, 0x43e0, 0x7ef2, 0xa00c, 0xd25c, 0x0, 0x1);
        gbc.writeMem(0x69e, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0x69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02E9
        gbc.setState(0x44c0, 0x312a, 0x1ae0, 0x9557, 0x35d6, 0x6b25, 0x0, 0x1);
        gbc.writeMem(0x44c0, { 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x312a, gbc.sp());
        EXPECT(0x44c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02EA
        gbc.setState(0x73bd, 0x1b, 0x36e0, 0x2b67, 0x7fc9, 0x9f47, 0x0, 0x1);
        gbc.writeMem(0x73bd, { 0x5d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0x73be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02EB
        gbc.setState(0x7ab4, 0x5fe8, 0x7360, 0xb0f7, 0x297a, 0x636b, 0x1, 0x0);
        gbc.writeMem(0x7ab4, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5fe8, gbc.sp());
        EXPECT(0x7ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02EC
        gbc.setState(0x565e, 0x1349, 0xff40, 0xcc7d, 0xb21, 0xf50a, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0x565f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02ED
        gbc.setState(0x7ef0, 0x84e4, 0xb880, 0x49ae, 0xd0e, 0x8fed, 0x1, 0x1);
        gbc.writeMem(0x7ef0, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x84e4, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02EE
        gbc.setState(0xcb4c, 0x2a00, 0x6580, 0xada7, 0xafbd, 0x6d50, 0x0, 0x0);
        gbc.writeMem(0xcb4c, { 0x5d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2a00, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb4c));
        // 5D 02EF
        gbc.setState(0x67d, 0x9854, 0xe080, 0x3873, 0x84f1, 0x7aa2, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0x5d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9854, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02F0
        gbc.setState(0xd59e, 0xcb84, 0x2460, 0x6dac, 0x77d5, 0x4447, 0x0, 0x1);
        gbc.writeMem(0xd59e, { 0x5d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcb84, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd59e));
        // 5D 02F1
        gbc.setState(0xa5ba, 0xc83a, 0x47f0, 0x1c9e, 0x7580, 0x9032, 0x1, 0x0);
        gbc.writeMem(0xa5ba, { 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc83a, gbc.sp());
        EXPECT(0xa5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa5ba));
        // 5D 02F2
        gbc.setState(0xd320, 0x81fb, 0x7a40, 0x3f03, 0x5dae, 0x8404, 0x0, 0x0);
        gbc.writeMem(0xd320, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x81fb, gbc.sp());
        EXPECT(0xd321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd320));
        // 5D 02F3
        gbc.setState(0x7176, 0x500b, 0x81c0, 0x82ab, 0x4c7a, 0x388, 0x0, 0x0);
        gbc.writeMem(0x7176, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x500b, gbc.sp());
        EXPECT(0x7177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02F4
        gbc.setState(0x6efc, 0xb62, 0x1c30, 0xa5cc, 0xe086, 0xe7b9, 0x1, 0x0);
        gbc.writeMem(0x6efc, { 0x5d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb62, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02F5
        gbc.setState(0x52d0, 0x85ee, 0x9a20, 0xf34a, 0xca5b, 0xfa53, 0x1, 0x1);
        gbc.writeMem(0x52d0, { 0x5d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x85ee, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02F6
        gbc.setState(0x38c0, 0x1f4e, 0x9d60, 0xbd83, 0x1a2d, 0x510a, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1f4e, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02F7
        gbc.setState(0x7187, 0xac0d, 0x9df0, 0x4ee2, 0x805e, 0xdf02, 0x0, 0x1);
        gbc.writeMem(0x7187, { 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac0d, gbc.sp());
        EXPECT(0x7188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02F8
        gbc.setState(0x5338, 0x3dc7, 0x45f0, 0xc07c, 0x9260, 0x429e, 0x0, 0x1);
        gbc.writeMem(0x5338, { 0x5d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3dc7, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02F9
        gbc.setState(0xb26c, 0xf319, 0x2f90, 0x114c, 0x1b73, 0xa51b, 0x0, 0x1);
        gbc.writeMem(0xb26c, { 0x5d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf319, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb26c));
        // 5D 02FA
        gbc.setState(0x5b3f, 0x12c4, 0xc0e0, 0xb96d, 0x379b, 0xb7ab, 0x0, 0x0);
        gbc.writeMem(0x5b3f, { 0x5d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x12c4, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02FB
        gbc.setState(0x5326, 0x1f87, 0x7890, 0x6cf3, 0xb890, 0x4e02, 0x1, 0x0);
        gbc.writeMem(0x5326, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0x5327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 02FC
        gbc.setState(0xea2b, 0x8eb2, 0xc20, 0x57b0, 0xd5d5, 0x90f7, 0x0, 0x0);
        gbc.writeMem(0xea2b, { 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea2b));
        // 5D 02FD
        gbc.setState(0xd152, 0xb44a, 0xc520, 0x8e49, 0xbe99, 0xe481, 0x1, 0x1);
        gbc.writeMem(0xd152, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xd153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd152));
        // 5D 02FE
        gbc.setState(0x142c, 0x5449, 0xae20, 0x3b90, 0x16c2, 0x444a, 0x0, 0x1);
        gbc.writeMem(0x142c, { 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5449, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 02FF
        gbc.setState(0xd0e, 0xe44f, 0x1ed0, 0x1d7b, 0x5247, 0xc379, 0x1, 0x1);
        gbc.writeMem(0xd0e, { 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe44f, gbc.sp());
        EXPECT(0xd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0300
        gbc.setState(0x310e, 0xbbaf, 0xc530, 0xf80d, 0xe171, 0x3c5b, 0x0, 0x0);
        gbc.writeMem(0x310e, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbbaf, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0301
        gbc.setState(0x5cee, 0xb458, 0x1980, 0x4865, 0xc27f, 0x8574, 0x0, 0x0);
        gbc.writeMem(0x5cee, { 0x5d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb458, gbc.sp());
        EXPECT(0x5cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0302
        gbc.setState(0xea42, 0x1804, 0x6a60, 0xd35f, 0x8ccf, 0x5001, 0x1, 0x1);
        gbc.writeMem(0xea42, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea42));
        // 5D 0303
        gbc.setState(0x1311, 0x9fae, 0x7740, 0x8635, 0x669d, 0xaaa9, 0x0, 0x1);
        gbc.writeMem(0x1311, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9fae, gbc.sp());
        EXPECT(0x1312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0304
        gbc.setState(0x608b, 0x1eb, 0x4b00, 0xb41a, 0x93c9, 0xcd47, 0x1, 0x0);
        gbc.writeMem(0x608b, { 0x5d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0x608c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0305
        gbc.setState(0x21b1, 0xce37, 0x2d40, 0x92, 0x921a, 0xdc4c, 0x1, 0x1);
        gbc.writeMem(0x21b1, { 0x5d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0x21b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0306
        gbc.setState(0x1fc2, 0xa894, 0xaa90, 0x232, 0xb18, 0x9d9b, 0x0, 0x0);
        gbc.writeMem(0x1fc2, { 0x5d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa894, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0307
        gbc.setState(0xabd2, 0x7e65, 0xd200, 0x126, 0x45e8, 0x12a4, 0x0, 0x1);
        gbc.writeMem(0xabd2, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0xabd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xabd2));
        // 5D 0308
        gbc.setState(0x8212, 0x1c1a, 0x1380, 0xe641, 0x8c6c, 0x4052, 0x1, 0x1);
        gbc.writeMem(0x8212, { 0x5d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0x8213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8212));
        // 5D 0309
        gbc.setState(0x3324, 0x1dc7, 0x42a0, 0xae98, 0xff6e, 0x5e1b, 0x0, 0x1);
        gbc.writeMem(0x3324, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 030A
        gbc.setState(0xc4fc, 0xa7ae, 0x940, 0x8e2c, 0xa217, 0x1422, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc4fc));
        // 5D 030B
        gbc.setState(0xee99, 0x1bda, 0x1e30, 0x6411, 0xba46, 0x822b, 0x1, 0x1);
        gbc.writeMem(0xee99, { 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1bda, gbc.sp());
        EXPECT(0xee9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee99));
        // 5D 030C
        gbc.setState(0x6f10, 0x5aa4, 0x3af0, 0x9616, 0x3f9c, 0x521a, 0x1, 0x1);
        gbc.writeMem(0x6f10, { 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 030D
        gbc.setState(0x3025, 0xee2f, 0xb9a0, 0x2bd7, 0x8e08, 0xad95, 0x1, 0x0);
        gbc.writeMem(0x3025, { 0x5d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0x3026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 030E
        gbc.setState(0x6279, 0x2e19, 0xffa0, 0x1aff, 0xce44, 0x2b28, 0x1, 0x0);
        gbc.writeMem(0x6279, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2e19, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 030F
        gbc.setState(0x3fe3, 0xd66c, 0x8e90, 0x270b, 0xf19b, 0x62d8, 0x1, 0x0);
        gbc.writeMem(0x3fe3, { 0x5d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd66c, gbc.sp());
        EXPECT(0x3fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0310
        gbc.setState(0x78b3, 0xad2c, 0xc810, 0x7b8b, 0x9978, 0xbcb1, 0x0, 0x1);
        gbc.writeMem(0x78b3, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0311
        gbc.setState(0xdc04, 0x9f49, 0xba00, 0x4a24, 0x803e, 0xdee2, 0x1, 0x0);
        gbc.writeMem(0xdc04, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9f49, gbc.sp());
        EXPECT(0xdc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdc04));
        // 5D 0312
        gbc.setState(0x2f75, 0xc8d4, 0x3a10, 0x4c1c, 0x4211, 0x7c8a, 0x1, 0x0);
        gbc.writeMem(0x2f75, { 0x5d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc8d4, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0313
        gbc.setState(0x5675, 0x4c2, 0xfa80, 0x51ba, 0x90e6, 0xd8, 0x1, 0x0);
        gbc.writeMem(0x5675, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4c2, gbc.sp());
        EXPECT(0x5676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0314
        gbc.setState(0xdb96, 0xb9a9, 0x5b50, 0x56c5, 0xad38, 0xff5b, 0x1, 0x0);
        gbc.writeMem(0xdb96, { 0x5d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb9a9, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdb96));
        // 5D 0315
        gbc.setState(0x50ea, 0x523e, 0x590, 0xd235, 0x56fb, 0x32ac, 0x1, 0x0);
        gbc.writeMem(0x50ea, { 0x5d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0316
        gbc.setState(0x56e6, 0xd947, 0xff40, 0x74f0, 0xcffe, 0x98cb, 0x1, 0x1);
        gbc.writeMem(0x56e6, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0317
        gbc.setState(0xd9a9, 0xa960, 0xee70, 0x546a, 0xf640, 0x332e, 0x0, 0x1);
        gbc.writeMem(0xd9a9, { 0x5d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd9a9));
        // 5D 0318
        gbc.setState(0x2dff, 0x6c5d, 0x4e10, 0x1b9e, 0x7ecb, 0x118, 0x0, 0x1);
        gbc.writeMem(0x2dff, { 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0319
        gbc.setState(0x21e, 0x8b8b, 0xe2e0, 0xe2fc, 0x3a83, 0xdaf, 0x0, 0x1);
        gbc.writeMem(0x21e, { 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8b8b, gbc.sp());
        EXPECT(0x21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 031A
        gbc.setState(0x5e93, 0x3c35, 0xd660, 0xb30, 0xca2e, 0x23d7, 0x1, 0x1);
        gbc.writeMem(0x5e93, { 0x5d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3c35, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 031B
        gbc.setState(0x49e8, 0x2a0f, 0xf720, 0xf06c, 0x1fa0, 0x79c9, 0x0, 0x0);
        gbc.writeMem(0x49e8, { 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a0f, gbc.sp());
        EXPECT(0x49e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 031C
        gbc.setState(0x78ba, 0x25f6, 0x3ec0, 0xa397, 0x8647, 0x8e37, 0x0, 0x1);
        gbc.writeMem(0x78ba, { 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x25f6, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 031D
        gbc.setState(0xe774, 0x4166, 0x7700, 0x742a, 0x81a4, 0x71d1, 0x0, 0x1);
        gbc.writeMem(0xe774, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4166, gbc.sp());
        EXPECT(0xe775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe774));
        // 5D 031E
        gbc.setState(0x3e3b, 0x18a9, 0x80a0, 0x9af1, 0xfa8b, 0xea10, 0x1, 0x1);
        gbc.writeMem(0x3e3b, { 0x5d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 031F
        gbc.setState(0x8bee, 0x7523, 0xe320, 0x7edd, 0xde76, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0x8bee, { 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8bee));
        // 5D 0320
        gbc.setState(0xabe5, 0x27c1, 0x9250, 0x6d66, 0xc7a1, 0x21b2, 0x1, 0x1);
        gbc.writeMem(0xabe5, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xabe5));
        // 5D 0321
        gbc.setState(0x566c, 0xbeb0, 0xd2b0, 0x865b, 0xe2a9, 0xc1fc, 0x0, 0x1);
        gbc.writeMem(0x566c, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0x566d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0322
        gbc.setState(0x4a7c, 0x9032, 0x8410, 0xd502, 0xb39d, 0xe72b, 0x0, 0x0);
        gbc.writeMem(0x4a7c, { 0x5d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0323
        gbc.setState(0x4eb, 0x251f, 0x6b60, 0xae57, 0x3215, 0x64e9, 0x1, 0x1);
        gbc.writeMem(0x4eb, { 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x251f, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0324
        gbc.setState(0x3f1b, 0xc493, 0xa000, 0x9a55, 0x132b, 0xb5cb, 0x0, 0x0);
        gbc.writeMem(0x3f1b, { 0x5d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x3f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0325
        gbc.setState(0x52bb, 0xa206, 0xc90, 0xb620, 0xb49, 0xa0ab, 0x0, 0x1);
        gbc.writeMem(0x52bb, { 0x5d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0326
        gbc.setState(0xbb90, 0x577c, 0xd230, 0x8ef9, 0x1857, 0xe467, 0x0, 0x1);
        gbc.writeMem(0xbb90, { 0x5d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0xbb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbb90));
        // 5D 0327
        gbc.setState(0xc636, 0x5716, 0x6d40, 0xfb2f, 0x35c8, 0xdf0d, 0x0, 0x1);
        gbc.writeMem(0xc636, { 0x5d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0xc637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc636));
        // 5D 0328
        gbc.setState(0x136, 0x9066, 0x41f0, 0xd2ca, 0x5b3, 0x557e, 0x0, 0x0);
        gbc.writeMem(0x136, { 0x5d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0329
        gbc.setState(0x1d49, 0xc2de, 0xbd10, 0xf9af, 0xc5c2, 0xf872, 0x1, 0x0);
        gbc.writeMem(0x1d49, { 0x5d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc2de, gbc.sp());
        EXPECT(0x1d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 032A
        gbc.setState(0xbc3c, 0x25de, 0xc550, 0x6360, 0x82b0, 0x9dfd, 0x0, 0x1);
        gbc.writeMem(0xbc3c, { 0x5d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x25de, gbc.sp());
        EXPECT(0xbc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbc3c));
        // 5D 032B
        gbc.setState(0x4679, 0xfc4, 0xd520, 0x3413, 0xd884, 0x200e, 0x0, 0x1);
        gbc.writeMem(0x4679, { 0x5d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 032C
        gbc.setState(0x2c9c, 0x5c4f, 0xe4b0, 0xe9f5, 0x9517, 0x1716, 0x1, 0x1);
        gbc.writeMem(0x2c9c, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x2c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 032D
        gbc.setState(0xbb3c, 0xba11, 0x54e0, 0x95fe, 0x49d4, 0xe3e, 0x1, 0x1);
        gbc.writeMem(0xbb3c, { 0x5d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba11, gbc.sp());
        EXPECT(0xbb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbb3c));
        // 5D 032E
        gbc.setState(0x7a78, 0xaa19, 0x9970, 0xa464, 0x4fd4, 0xff06, 0x0, 0x0);
        gbc.writeMem(0x7a78, { 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa19, gbc.sp());
        EXPECT(0x7a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 032F
        gbc.setState(0x87e4, 0xfc12, 0x780, 0x30a7, 0x3616, 0x441e, 0x0, 0x1);
        gbc.writeMem(0x87e4, { 0x5d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x87e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x87e4));
        // 5D 0330
        gbc.setState(0x5fde, 0xfe6e, 0x830, 0xd64c, 0x2af5, 0x4efc, 0x0, 0x1);
        gbc.writeMem(0x5fde, { 0x5d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0331
        gbc.setState(0xcc1c, 0xc792, 0xbc80, 0x302f, 0x229b, 0xe1ea, 0x0, 0x1);
        gbc.writeMem(0xcc1c, { 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc792, gbc.sp());
        EXPECT(0xcc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcc1c));
        // 5D 0332
        gbc.setState(0x3ea9, 0x9b33, 0xf120, 0xff22, 0x61a7, 0xb813, 0x1, 0x1);
        gbc.writeMem(0x3ea9, { 0x5d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9b33, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0333
        gbc.setState(0x3bd7, 0xee84, 0xe330, 0xc337, 0x6d01, 0x3337, 0x0, 0x1);
        gbc.writeMem(0x3bd7, { 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee84, gbc.sp());
        EXPECT(0x3bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0334
        gbc.setState(0x9af3, 0xa8a6, 0x9c60, 0x11f1, 0x8e35, 0x92a2, 0x1, 0x0);
        gbc.writeMem(0x9af3, { 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9af3));
        // 5D 0335
        gbc.setState(0x6321, 0x1f5d, 0x7850, 0xea60, 0xbcb7, 0xe425, 0x1, 0x0);
        gbc.writeMem(0x6321, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1f5d, gbc.sp());
        EXPECT(0x6322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0336
        gbc.setState(0xe0c4, 0x97e9, 0x3050, 0x833e, 0xfb17, 0xf1ca, 0x1, 0x0);
        gbc.writeMem(0xe0c4, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0xe0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe0c4));
        // 5D 0337
        gbc.setState(0xd425, 0x5709, 0x7330, 0x1e47, 0xed83, 0xbd9a, 0x0, 0x1);
        gbc.writeMem(0xd425, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5709, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd425));
        // 5D 0338
        gbc.setState(0x50dd, 0x86a6, 0xae90, 0xfd87, 0x6212, 0x1ed5, 0x0, 0x0);
        gbc.writeMem(0x50dd, { 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x50de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0339
        gbc.setState(0xd4c2, 0xe18, 0x8790, 0xeb7, 0xc3cb, 0x6587, 0x1, 0x0);
        gbc.writeMem(0xd4c2, { 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0xd4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd4c2));
        // 5D 033A
        gbc.setState(0x4a72, 0x1c5b, 0xcd40, 0xd15d, 0x7f26, 0x329d, 0x1, 0x0);
        gbc.writeMem(0x4a72, { 0x5d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0x4a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 033B
        gbc.setState(0x6471, 0x389d, 0xa360, 0xedd0, 0xc1e1, 0x1326, 0x1, 0x1);
        gbc.writeMem(0x6471, { 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x389d, gbc.sp());
        EXPECT(0x6472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 033C
        gbc.setState(0x3191, 0xc56e, 0x1570, 0xfeb9, 0x1f39, 0x860b, 0x0, 0x1);
        gbc.writeMem(0x3191, { 0x5d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc56e, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 033D
        gbc.setState(0x9ae2, 0x564f, 0x2eb0, 0x3512, 0xb82c, 0x53de, 0x1, 0x0);
        gbc.writeMem(0x9ae2, { 0x5d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x564f, gbc.sp());
        EXPECT(0x9ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9ae2));
        // 5D 033E
        gbc.setState(0x625, 0x3802, 0x6fb0, 0x40f1, 0x656d, 0x6b6d, 0x1, 0x0);
        gbc.writeMem(0x625, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0x626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 033F
        gbc.setState(0xbf62, 0x8e21, 0x7890, 0x11a2, 0xe19c, 0x9957, 0x0, 0x0);
        gbc.writeMem(0xbf62, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8e21, gbc.sp());
        EXPECT(0xbf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbf62));
        // 5D 0340
        gbc.setState(0x29ce, 0xd7b0, 0xf0a0, 0xa408, 0x62e9, 0xa168, 0x0, 0x1);
        gbc.writeMem(0x29ce, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd7b0, gbc.sp());
        EXPECT(0x29cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0341
        gbc.setState(0xef32, 0x480, 0xb070, 0x7f40, 0x10f, 0xb545, 0x1, 0x1);
        gbc.writeMem(0xef32, { 0x5d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xef32));
        // 5D 0342
        gbc.setState(0x666a, 0x7591, 0x1670, 0xbb69, 0x24c7, 0xe422, 0x0, 0x0);
        gbc.writeMem(0x666a, { 0x5d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0343
        gbc.setState(0x72df, 0xafdf, 0x6c00, 0x48a3, 0x9737, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x72df, { 0x5d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xafdf, gbc.sp());
        EXPECT(0x72e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0344
        gbc.setState(0x4038, 0x19f3, 0xf020, 0x4088, 0xbf41, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0x4038, { 0x5d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x19f3, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0345
        gbc.setState(0x75a5, 0xb638, 0x1a00, 0xa33e, 0xb3fa, 0x6618, 0x0, 0x0);
        gbc.writeMem(0x75a5, { 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x75a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0346
        gbc.setState(0x2e68, 0x9425, 0x3020, 0x4d75, 0x60df, 0x724b, 0x1, 0x1);
        gbc.writeMem(0x2e68, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0347
        gbc.setState(0xd307, 0xefcb, 0x1510, 0x10e4, 0x6611, 0x4d61, 0x1, 0x0);
        gbc.writeMem(0xd307, { 0x5d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xefcb, gbc.sp());
        EXPECT(0xd308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd307));
        // 5D 0348
        gbc.setState(0xd33e, 0x40c1, 0x10f0, 0x1185, 0x6fa1, 0x67d5, 0x1, 0x1);
        gbc.writeMem(0xd33e, { 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0xd33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd33e));
        // 5D 0349
        gbc.setState(0xc774, 0x9fe3, 0x1f90, 0xf37f, 0x1dd9, 0x5f95, 0x0, 0x1);
        gbc.writeMem(0xc774, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc774));
        // 5D 034A
        gbc.setState(0x31e7, 0x8ad9, 0xf890, 0x7725, 0x718e, 0xb384, 0x0, 0x0);
        gbc.writeMem(0x31e7, { 0x5d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0x31e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 034B
        gbc.setState(0x8e7d, 0x70b6, 0x6ac0, 0xfa99, 0x57e1, 0x505d, 0x1, 0x1);
        gbc.writeMem(0x8e7d, { 0x5d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x70b6, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8e7d));
        // 5D 034C
        gbc.setState(0xecd1, 0xe604, 0x7b80, 0x34a0, 0xecda, 0x1325, 0x0, 0x0);
        gbc.writeMem(0xecd1, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe604, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xecd1));
        // 5D 034E
        gbc.setState(0xb15, 0xfb70, 0xb50, 0xc56d, 0xf1ab, 0xa5fa, 0x1, 0x1);
        gbc.writeMem(0xb15, { 0x5d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfb70, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 034F
        gbc.setState(0x2baa, 0x8903, 0x69d0, 0xe9d5, 0x1cce, 0xf777, 0x1, 0x1);
        gbc.writeMem(0x2baa, { 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8903, gbc.sp());
        EXPECT(0x2bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0350
        gbc.setState(0xa483, 0xf0c2, 0x8990, 0x6a7c, 0xa1d6, 0xf967, 0x1, 0x0);
        gbc.writeMem(0xa483, { 0x5d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0xa484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa483));
        // 5D 0351
        gbc.setState(0x6ff8, 0xacbe, 0xdca0, 0x65a3, 0x60d7, 0xbd96, 0x0, 0x1);
        gbc.writeMem(0x6ff8, { 0x5d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x6ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0352
        gbc.setState(0xaf29, 0x55c7, 0x1000, 0x202, 0x2d06, 0xb18, 0x0, 0x0);
        gbc.writeMem(0xaf29, { 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x55c7, gbc.sp());
        EXPECT(0xaf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaf29));
        // 5D 0353
        gbc.setState(0xd229, 0x9bbf, 0x8150, 0xa869, 0xad91, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0x5d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9bbf, gbc.sp());
        EXPECT(0xd22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd229));
        // 5D 0354
        gbc.setState(0xc582, 0x6ff5, 0xe4e0, 0x647, 0xa65c, 0x1528, 0x1, 0x1);
        gbc.writeMem(0xc582, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6ff5, gbc.sp());
        EXPECT(0xc583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc582));
        // 5D 0355
        gbc.setState(0x9f7f, 0x4941, 0xc830, 0x740c, 0x43c5, 0xdc93, 0x1, 0x0);
        gbc.writeMem(0x9f7f, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0x9f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9f7f));
        // 5D 0356
        gbc.setState(0x6ff1, 0xa55e, 0x9e0, 0xb7be, 0xa3b, 0xe025, 0x1, 0x0);
        gbc.writeMem(0x6ff1, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa55e, gbc.sp());
        EXPECT(0x6ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0357
        gbc.setState(0xd0af, 0x7cde, 0x68c0, 0xbc5b, 0xcf2d, 0xf35d, 0x1, 0x0);
        gbc.writeMem(0xd0af, { 0x5d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7cde, gbc.sp());
        EXPECT(0xd0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd0af));
        // 5D 0358
        gbc.setState(0x5c83, 0x675a, 0x2280, 0xa771, 0xc52d, 0x7833, 0x1, 0x1);
        gbc.writeMem(0x5c83, { 0x5d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0x5c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0359
        gbc.setState(0x5885, 0xec9b, 0x6f70, 0xd8a0, 0x7300, 0x17be, 0x1, 0x1);
        gbc.writeMem(0x5885, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xec9b, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 035A
        gbc.setState(0x8777, 0xfb9b, 0x4300, 0xd535, 0x18d, 0x42e9, 0x0, 0x1);
        gbc.writeMem(0x8777, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfb9b, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8777));
        // 5D 035B
        gbc.setState(0x51cf, 0x555d, 0x5970, 0xf1c0, 0xfad2, 0x93a2, 0x1, 0x1);
        gbc.writeMem(0x51cf, { 0x5d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 035C
        gbc.setState(0x5a14, 0x6520, 0x2930, 0x5760, 0x126d, 0x8760, 0x0, 0x0);
        gbc.writeMem(0x5a14, { 0x5d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x5a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 035D
        gbc.setState(0x63f4, 0xcdbe, 0xf80, 0xf515, 0x9a33, 0x81ad, 0x1, 0x1);
        gbc.writeMem(0x63f4, { 0x5d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0x63f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 035E
        gbc.setState(0xb33c, 0x41e0, 0xbc60, 0x7f2a, 0x9907, 0xc9b1, 0x1, 0x1);
        gbc.writeMem(0xb33c, { 0x5d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x41e0, gbc.sp());
        EXPECT(0xb33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb33c));
        // 5D 035F
        gbc.setState(0x480a, 0x2b08, 0xeae0, 0x70ee, 0xdd76, 0x5a2c, 0x1, 0x1);
        gbc.writeMem(0x480a, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0360
        gbc.setState(0x9864, 0x53e9, 0xe910, 0xa95f, 0x7055, 0x2573, 0x1, 0x1);
        gbc.writeMem(0x9864, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0x9865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9864));
        // 5D 0361
        gbc.setState(0xa5d6, 0x2565, 0x4ac0, 0xd03e, 0x6d91, 0xd02c, 0x0, 0x0);
        gbc.writeMem(0xa5d6, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2565, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa5d6));
        // 5D 0362
        gbc.setState(0x6fec, 0x9659, 0x8840, 0xc26f, 0x3d6a, 0xc7ab, 0x1, 0x0);
        gbc.writeMem(0x6fec, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9659, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0363
        gbc.setState(0xae32, 0xb777, 0xbf10, 0x780a, 0x7f64, 0xfe33, 0x0, 0x1);
        gbc.writeMem(0xae32, { 0x5d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0xae33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xae32));
        // 5D 0364
        gbc.setState(0x4004, 0xcb50, 0xab0, 0x8495, 0xaa08, 0x54e9, 0x0, 0x1);
        gbc.writeMem(0x4004, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcb50, gbc.sp());
        EXPECT(0x4005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0365
        gbc.setState(0x17ce, 0xf079, 0x6650, 0x9886, 0xed47, 0xf99b, 0x0, 0x1);
        gbc.writeMem(0x17ce, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0x17cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0366
        gbc.setState(0x7b18, 0x4e6b, 0xdd60, 0x5a, 0x607f, 0x8d94, 0x0, 0x0);
        gbc.writeMem(0x7b18, { 0x5d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0x7b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0367
        gbc.setState(0x59e6, 0x75b9, 0x7cf0, 0x40f3, 0xabe4, 0x3cce, 0x1, 0x1);
        gbc.writeMem(0x59e6, { 0x5d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x75b9, gbc.sp());
        EXPECT(0x59e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0368
        gbc.setState(0xae61, 0xd9b3, 0xef50, 0x5dbe, 0xde97, 0x3a88, 0x1, 0x0);
        gbc.writeMem(0xae61, { 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd9b3, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xae61));
        // 5D 0369
        gbc.setState(0x7f9, 0xcc57, 0x1760, 0x36b6, 0xeabf, 0xde1a, 0x1, 0x0);
        gbc.writeMem(0x7f9, { 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc57, gbc.sp());
        EXPECT(0x7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 036A
        gbc.setState(0xc5ba, 0xd612, 0xce00, 0x22b0, 0xf99e, 0x8f6, 0x0, 0x0);
        gbc.writeMem(0xc5ba, { 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd612, gbc.sp());
        EXPECT(0xc5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc5ba));
        // 5D 036B
        gbc.setState(0x6c5e, 0x6773, 0x4360, 0x6ad1, 0x8964, 0x9a92, 0x1, 0x1);
        gbc.writeMem(0x6c5e, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6773, gbc.sp());
        EXPECT(0x6c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 036C
        gbc.setState(0x8d7d, 0xc5bc, 0x1ff0, 0x4473, 0xb1cb, 0xa130, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x5d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8d7d));
        // 5D 036D
        gbc.setState(0x99d7, 0xcf8d, 0xce90, 0x2c9a, 0xdcbd, 0xb566, 0x0, 0x1);
        gbc.writeMem(0x99d7, { 0x5d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf8d, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x99d7));
        // 5D 036E
        gbc.setState(0x108b, 0x81e3, 0x61f0, 0xc7fd, 0xe992, 0xa52d, 0x0, 0x1);
        gbc.writeMem(0x108b, { 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0x108c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 036F
        gbc.setState(0x713e, 0xb621, 0xdb70, 0xa669, 0xe103, 0xc26, 0x0, 0x0);
        gbc.writeMem(0x713e, { 0x5d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0370
        gbc.setState(0x5576, 0x16f2, 0x7eb0, 0xb4b1, 0xa14c, 0x4975, 0x1, 0x1);
        gbc.writeMem(0x5576, { 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x5577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0371
        gbc.setState(0x6a0b, 0x3282, 0xb2a0, 0xd14, 0xc617, 0x8955, 0x0, 0x1);
        gbc.writeMem(0x6a0b, { 0x5d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0372
        gbc.setState(0xae24, 0x4798, 0x63a0, 0x2f9e, 0x4c99, 0xca5b, 0x0, 0x1);
        gbc.writeMem(0xae24, { 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xae24));
        // 5D 0374
        gbc.setState(0x5723, 0xba2c, 0x3800, 0x47a4, 0xe4ce, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0x5723, { 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0375
        gbc.setState(0x39a1, 0xf94b, 0x85c0, 0x5e2c, 0x4ff7, 0x6f1d, 0x1, 0x1);
        gbc.writeMem(0x39a1, { 0x5d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0376
        gbc.setState(0xea31, 0x739a, 0xc8a0, 0xa048, 0x587f, 0xdd75, 0x0, 0x0);
        gbc.writeMem(0xea31, { 0x5d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x739a, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea31));
        // 5D 0377
        gbc.setState(0x6156, 0xe9a7, 0x4f20, 0x2038, 0xcbe4, 0xdcad, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0x5d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0378
        gbc.setState(0x9c06, 0x85f5, 0x8ca0, 0x9875, 0xfa1b, 0x3a34, 0x0, 0x0);
        gbc.writeMem(0x9c06, { 0x5d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x85f5, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c06));
        // 5D 0379
        gbc.setState(0x7f9, 0x7564, 0xb760, 0x6628, 0x8754, 0x6fea, 0x0, 0x1);
        gbc.writeMem(0x7f9, { 0x5d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7564, gbc.sp());
        EXPECT(0x7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 037A
        gbc.setState(0x6602, 0x7101, 0xf6f0, 0x3fda, 0xdf00, 0x202a, 0x1, 0x1);
        gbc.writeMem(0x6602, { 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7101, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 037B
        gbc.setState(0xd649, 0x44e8, 0xe920, 0xb4a6, 0xdada, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0xd649, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0xd64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd649));
        // 5D 037C
        gbc.setState(0xadb3, 0xa962, 0x8670, 0xe759, 0xfae8, 0xda09, 0x1, 0x0);
        gbc.writeMem(0xadb3, { 0x5d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa962, gbc.sp());
        EXPECT(0xadb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xadb3));
        // 5D 037D
        gbc.setState(0x7da3, 0x2732, 0x7850, 0x3d, 0x6d51, 0x50e6, 0x1, 0x1);
        gbc.writeMem(0x7da3, { 0x5d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2732, gbc.sp());
        EXPECT(0x7da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 037E
        gbc.setState(0x9f43, 0xb04a, 0xb8d0, 0x9fa3, 0xea26, 0xf0c, 0x0, 0x0);
        gbc.writeMem(0x9f43, { 0x5d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb04a, gbc.sp());
        EXPECT(0x9f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9f43));
        // 5D 037F
        gbc.setState(0x1bf2, 0x7679, 0x8b00, 0xd1f5, 0x88b1, 0xe2ba, 0x1, 0x1);
        gbc.writeMem(0x1bf2, { 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x1bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0380
        gbc.setState(0x4660, 0x8b59, 0x30c0, 0x8f37, 0xb183, 0xaca6, 0x1, 0x0);
        gbc.writeMem(0x4660, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0x4661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0381
        gbc.setState(0x7bb, 0x9de, 0xecd0, 0xde3d, 0x33ff, 0x8c17, 0x1, 0x0);
        gbc.writeMem(0x7bb, { 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0x7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0382
        gbc.setState(0xb967, 0xf14b, 0xd040, 0xd515, 0x53df, 0x7fc, 0x1, 0x1);
        gbc.writeMem(0xb967, { 0x5d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf14b, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb967));
        // 5D 0383
        gbc.setState(0xeefd, 0x4e6a, 0xfff0, 0x9aa2, 0xe621, 0xc62e, 0x1, 0x0);
        gbc.writeMem(0xeefd, { 0x5d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0xeefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xeefd));
        // 5D 0384
        gbc.setState(0xc0d6, 0xd68d, 0x2bc0, 0x2c48, 0x51e4, 0x8fa9, 0x0, 0x1);
        gbc.writeMem(0xc0d6, { 0x5d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc0d6));
        // 5D 0385
        gbc.setState(0x64f4, 0xd6b3, 0xc6f0, 0x2dd6, 0x39e5, 0xfe9f, 0x0, 0x1);
        gbc.writeMem(0x64f4, { 0x5d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd6b3, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0387
        gbc.setState(0xe4f4, 0x8938, 0x7610, 0xa104, 0x4db7, 0x319, 0x0, 0x0);
        gbc.writeMem(0xe4f4, { 0x5d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe4f4));
        // 5D 0388
        gbc.setState(0x1804, 0xeedd, 0xe3e0, 0x1b34, 0x5679, 0x7724, 0x0, 0x0);
        gbc.writeMem(0x1804, { 0x5d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0389
        gbc.setState(0xc86e, 0x561b, 0xadc0, 0x278f, 0xb68c, 0xa7d0, 0x1, 0x0);
        gbc.writeMem(0xc86e, { 0x5d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x561b, gbc.sp());
        EXPECT(0xc86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc86e));
        // 5D 038A
        gbc.setState(0xee81, 0x9327, 0x4e80, 0x6c41, 0xbec, 0x750b, 0x0, 0x1);
        gbc.writeMem(0xee81, { 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0xee82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xee81));
        // 5D 038B
        gbc.setState(0x29c, 0xcbb7, 0x5c40, 0x9e76, 0x5865, 0x7d31, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0x5d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcbb7, gbc.sp());
        EXPECT(0x29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 038C
        gbc.setState(0x60f0, 0x3d3b, 0x8db0, 0x2ab4, 0xbfec, 0xea, 0x1, 0x0);
        gbc.writeMem(0x60f0, { 0x5d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 038D
        gbc.setState(0x3849, 0xd525, 0x7430, 0xab12, 0x5b89, 0xe7c0, 0x1, 0x0);
        gbc.writeMem(0x3849, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x384a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 038E
        gbc.setState(0xbfd6, 0xcea8, 0x9720, 0x5506, 0x2d1f, 0xba6f, 0x1, 0x1);
        gbc.writeMem(0xbfd6, { 0x5d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcea8, gbc.sp());
        EXPECT(0xbfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbfd6));
        // 5D 038F
        gbc.setState(0x6a34, 0xdadf, 0xe270, 0x5926, 0x83e5, 0xc18b, 0x0, 0x0);
        gbc.writeMem(0x6a34, { 0x5d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdadf, gbc.sp());
        EXPECT(0x6a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0390
        gbc.setState(0x4c30, 0x7f9b, 0x8830, 0x88b, 0x2d08, 0xdb9d, 0x0, 0x1);
        gbc.writeMem(0x4c30, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7f9b, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 0391
        gbc.setState(0xc88, 0x2c50, 0x4e80, 0xf431, 0xa28c, 0xa797, 0x0, 0x1);
        gbc.writeMem(0xc88, { 0x5d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0xc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0392
        gbc.setState(0x4cf, 0x4f3, 0x2680, 0x9a4a, 0x46c5, 0xa436, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0x5d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4f3, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0393
        gbc.setState(0x1cfd, 0x674f, 0xe820, 0x963b, 0x2384, 0xd1c4, 0x0, 0x0);
        gbc.writeMem(0x1cfd, { 0x5d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x674f, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0394
        gbc.setState(0xe0ec, 0xf158, 0x9d0, 0x685a, 0xf491, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0xe0ec, { 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0xe0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe0ec));
        // 5D 0395
        gbc.setState(0x193c, 0xa8b, 0xb300, 0x934b, 0x68eb, 0xb4a7, 0x1, 0x1);
        gbc.writeMem(0x193c, { 0x5d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa8b, gbc.sp());
        EXPECT(0x193d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0396
        gbc.setState(0x80ef, 0xdd6c, 0x5f60, 0xa853, 0x636a, 0xde7, 0x0, 0x1);
        gbc.writeMem(0x80ef, { 0x5d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0x80f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x80ef));
        // 5D 0397
        gbc.setState(0x1597, 0xa4b7, 0x8760, 0x7597, 0x3986, 0x36f, 0x1, 0x0);
        gbc.writeMem(0x1597, { 0x5d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0x1598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 0398
        gbc.setState(0x9a2f, 0x42d5, 0x43d0, 0x6928, 0x2c9f, 0x5fd8, 0x0, 0x1);
        gbc.writeMem(0x9a2f, { 0x5d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x42d5, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9a2f));
        // 5D 0399
        gbc.setState(0x4164, 0x380, 0x9db0, 0x56bf, 0x192d, 0xbcc8, 0x1, 0x0);
        gbc.writeMem(0x4164, { 0x5d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 039A
        gbc.setState(0xcab, 0x9fbe, 0x70, 0x1ce6, 0xc974, 0xc862, 0x1, 0x1);
        gbc.writeMem(0xcab, { 0x5d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 039B
        gbc.setState(0xd5a8, 0x7be1, 0x8b60, 0xf575, 0x68e5, 0x7a86, 0x0, 0x0);
        gbc.writeMem(0xd5a8, { 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd5a8));
        // 5D 039C
        gbc.setState(0x77dc, 0x1676, 0xd10, 0x1f74, 0xdfec, 0x18b4, 0x1, 0x0);
        gbc.writeMem(0x77dc, { 0x5d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1676, gbc.sp());
        EXPECT(0x77dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 039D
        gbc.setState(0x717e, 0xfd4, 0x1000, 0x928f, 0x6165, 0x36c7, 0x1, 0x1);
        gbc.writeMem(0x717e, { 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0x717f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 039E
        gbc.setState(0x2e3e, 0xbce4, 0x7ec0, 0x414f, 0xe08, 0x1947, 0x0, 0x0);
        gbc.writeMem(0x2e3e, { 0x5d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbce4, gbc.sp());
        EXPECT(0x2e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 039F
        gbc.setState(0x7c78, 0xcb89, 0xb540, 0x1744, 0x212b, 0x8e21, 0x0, 0x0);
        gbc.writeMem(0x7c78, { 0x5d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0x7c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03A0
        gbc.setState(0xaaf6, 0xad1e, 0x7a10, 0xb548, 0xfbcd, 0xa5dd, 0x1, 0x1);
        gbc.writeMem(0xaaf6, { 0x5d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xad1e, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaaf6));
        // 5D 03A1
        gbc.setState(0x7046, 0xf0fc, 0x6340, 0x8f20, 0xd455, 0x2508, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0x5d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0x7047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03A2
        gbc.setState(0xaed0, 0x5949, 0x7200, 0x8921, 0x8e01, 0xae08, 0x0, 0x1);
        gbc.writeMem(0xaed0, { 0x5d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5949, gbc.sp());
        EXPECT(0xaed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xaed0));
        // 5D 03A3
        gbc.setState(0x76d9, 0xe3e4, 0xa30, 0x9234, 0xa7db, 0xb06c, 0x1, 0x1);
        gbc.writeMem(0x76d9, { 0x5d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe3e4, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03A4
        gbc.setState(0x921, 0x122e, 0xe4b0, 0x71d9, 0x74dd, 0xb625, 0x0, 0x1);
        gbc.writeMem(0x921, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x122e, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03A5
        gbc.setState(0x5bfd, 0x5155, 0xb1e0, 0x25fa, 0xb2ea, 0x84d, 0x0, 0x1);
        gbc.writeMem(0x5bfd, { 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03A6
        gbc.setState(0xc85a, 0xfbf7, 0xefc0, 0xa702, 0x115d, 0x50f2, 0x1, 0x1);
        gbc.writeMem(0xc85a, { 0x5d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc85a));
        // 5D 03A7
        gbc.setState(0x1570, 0x4ee9, 0x8f50, 0x23bb, 0xcc08, 0x192b, 0x1, 0x1);
        gbc.writeMem(0x1570, { 0x5d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4ee9, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03A8
        gbc.setState(0x3fd, 0x4869, 0x15e0, 0x6295, 0xec3, 0xd6ec, 0x0, 0x1);
        gbc.writeMem(0x3fd, { 0x5d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4869, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03A9
        gbc.setState(0x4566, 0x51f1, 0x12e0, 0x12f2, 0x58f7, 0xe601, 0x1, 0x0);
        gbc.writeMem(0x4566, { 0x5d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x51f1, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03AA
        gbc.setState(0xa2c0, 0x9317, 0xde90, 0x8c15, 0xe758, 0x67b3, 0x0, 0x1);
        gbc.writeMem(0xa2c0, { 0x5d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0xa2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa2c0));
        // 5D 03AB
        gbc.setState(0x3bce, 0x830e, 0xb100, 0x703e, 0x16ef, 0xcb10, 0x0, 0x0);
        gbc.writeMem(0x3bce, { 0x5d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x830e, gbc.sp());
        EXPECT(0x3bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03AD
        gbc.setState(0x78c, 0x1809, 0x9290, 0xc477, 0x70ed, 0xc1b6, 0x0, 0x1);
        gbc.writeMem(0x78c, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0x78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03AF
        gbc.setState(0x5ed1, 0xdf2b, 0x1a50, 0x87d2, 0x79d4, 0xbf0f, 0x0, 0x1);
        gbc.writeMem(0x5ed1, { 0x5d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdf2b, gbc.sp());
        EXPECT(0x5ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03B0
        gbc.setState(0xe0b7, 0xcffe, 0x1760, 0x17d1, 0xe434, 0xca51, 0x0, 0x1);
        gbc.writeMem(0xe0b7, { 0x5d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcffe, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe0b7));
        // 5D 03B1
        gbc.setState(0x640d, 0x744c, 0xae80, 0x3501, 0x903c, 0xbb8e, 0x0, 0x0);
        gbc.writeMem(0x640d, { 0x5d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x744c, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03B2
        gbc.setState(0x3e7f, 0x9e7b, 0xba50, 0x55e0, 0x7a2e, 0x13e1, 0x1, 0x1);
        gbc.writeMem(0x3e7f, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03B3
        gbc.setState(0xa5b, 0xb206, 0xfdc0, 0x2f99, 0x72ed, 0xd2ab, 0x1, 0x1);
        gbc.writeMem(0xa5b, { 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0xa5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03B4
        gbc.setState(0x2950, 0xa7e7, 0x1e20, 0x2e0, 0xabfd, 0x12dc, 0x1, 0x1);
        gbc.writeMem(0x2950, { 0x5d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa7e7, gbc.sp());
        EXPECT(0x2951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03B5
        gbc.setState(0xa0f0, 0xb068, 0xf3f0, 0xf9fb, 0x7b25, 0x1472, 0x0, 0x0);
        gbc.writeMem(0xa0f0, { 0x5d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb068, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa0f0));
        // 5D 03B6
        gbc.setState(0xc373, 0xe23a, 0x6600, 0x828, 0x6205, 0x5b61, 0x1, 0x1);
        gbc.writeMem(0xc373, { 0x5d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe23a, gbc.sp());
        EXPECT(0xc374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc373));
        // 5D 03B7
        gbc.setState(0xcb41, 0xe4ec, 0x4a80, 0x5416, 0x476e, 0x532d, 0x1, 0x1);
        gbc.writeMem(0xcb41, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0xcb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb41));
        // 5D 03B8
        gbc.setState(0x4532, 0x980c, 0xf7a0, 0x9ca8, 0xf449, 0xd137, 0x0, 0x1);
        gbc.writeMem(0x4532, { 0x5d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03B9
        gbc.setState(0x2220, 0xa5c8, 0x1810, 0xc0f, 0xc4d2, 0xa7b6, 0x0, 0x0);
        gbc.writeMem(0x2220, { 0x5d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa5c8, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03BA
        gbc.setState(0xb744, 0x8c23, 0xe470, 0x62cc, 0x4566, 0x6cd, 0x0, 0x0);
        gbc.writeMem(0xb744, { 0x5d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c23, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb744));
        // 5D 03BB
        gbc.setState(0xd92f, 0xc5ea, 0x5620, 0x1139, 0xc181, 0xb130, 0x0, 0x0);
        gbc.writeMem(0xd92f, { 0x5d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc5ea, gbc.sp());
        EXPECT(0xd930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xd92f));
        // 5D 03BC
        gbc.setState(0xb8e0, 0x178d, 0x55f0, 0xb89f, 0x3962, 0x1976, 0x1, 0x1);
        gbc.writeMem(0xb8e0, { 0x5d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x178d, gbc.sp());
        EXPECT(0xb8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8e0));
        // 5D 03BD
        gbc.setState(0x1bf4, 0x3af2, 0x73f0, 0x5814, 0xeea5, 0xc348, 0x1, 0x0);
        gbc.writeMem(0x1bf4, { 0x5d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03BE
        gbc.setState(0x10ad, 0xa6f9, 0x3f10, 0xf76a, 0x83a4, 0xcbd, 0x1, 0x1);
        gbc.writeMem(0x10ad, { 0x5d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03BF
        gbc.setState(0xe586, 0x579c, 0x4210, 0x27e5, 0xf101, 0xe405, 0x0, 0x0);
        gbc.writeMem(0xe586, { 0x5d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0xe587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe586));
        // 5D 03C1
        gbc.setState(0x4b78, 0xa4de, 0x9ca0, 0xe4da, 0xad11, 0x406f, 0x1, 0x0);
        gbc.writeMem(0x4b78, { 0x5d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4de, gbc.sp());
        EXPECT(0x4b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03C2
        gbc.setState(0x2356, 0xdb79, 0x95a0, 0x1e81, 0x1cae, 0x2a30, 0x0, 0x0);
        gbc.writeMem(0x2356, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb79, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03C3
        gbc.setState(0x5c40, 0xea2b, 0xecf0, 0xbb08, 0x70fe, 0xf597, 0x1, 0x1);
        gbc.writeMem(0x5c40, { 0x5d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea2b, gbc.sp());
        EXPECT(0x5c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03C4
        gbc.setState(0x7f11, 0x4c88, 0x280, 0x4d6f, 0xec22, 0xedd8, 0x1, 0x1);
        gbc.writeMem(0x7f11, { 0x5d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4c88, gbc.sp());
        EXPECT(0x7f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03C5
        gbc.setState(0xc382, 0x6dc0, 0xd4d0, 0xf63f, 0x2796, 0xe567, 0x1, 0x1);
        gbc.writeMem(0xc382, { 0x5d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6dc0, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc382));
        // 5D 03C6
        gbc.setState(0x692a, 0x2743, 0xb440, 0xa540, 0x939d, 0x2c9a, 0x0, 0x1);
        gbc.writeMem(0x692a, { 0x5d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0x692b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03C7
        gbc.setState(0xb1d0, 0xa32a, 0x9b10, 0x844d, 0xdb95, 0x5e97, 0x0, 0x0);
        gbc.writeMem(0xb1d0, { 0x5d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa32a, gbc.sp());
        EXPECT(0xb1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb1d0));
        // 5D 03C8
        gbc.setState(0xdd34, 0x8b8d, 0x6ff0, 0x9854, 0x9f08, 0x1264, 0x0, 0x1);
        gbc.writeMem(0xdd34, { 0x5d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8b8d, gbc.sp());
        EXPECT(0xdd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdd34));
        // 5D 03C9
        gbc.setState(0xb446, 0x677d, 0x77f0, 0x18ea, 0x18d8, 0xe772, 0x1, 0x0);
        gbc.writeMem(0xb446, { 0x5d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x677d, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb446));
        // 5D 03CA
        gbc.setState(0x1cb, 0x94d4, 0xa460, 0x3e4d, 0x2888, 0xb622, 0x0, 0x0);
        gbc.writeMem(0x1cb, { 0x5d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x94d4, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03CB
        gbc.setState(0x69e2, 0x5b49, 0x400, 0x8060, 0x8068, 0x3dfe, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0x5d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5b49, gbc.sp());
        EXPECT(0x69e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03CC
        gbc.setState(0xdf4c, 0x1fe5, 0x70a0, 0x1d22, 0x5919, 0xa5d9, 0x1, 0x0);
        gbc.writeMem(0xdf4c, { 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1fe5, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xdf4c));
        // 5D 03CD
        gbc.setState(0x65b1, 0x9b2c, 0x6b00, 0xa3b9, 0xae5a, 0xa7a2, 0x0, 0x1);
        gbc.writeMem(0x65b1, { 0x5d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9b2c, gbc.sp());
        EXPECT(0x65b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03CE
        gbc.setState(0x36c0, 0xb8ca, 0xcf20, 0xe303, 0xb732, 0xafba, 0x1, 0x1);
        gbc.writeMem(0x36c0, { 0x5d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb8ca, gbc.sp());
        EXPECT(0x36c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03CF
        gbc.setState(0xb4df, 0x4ac8, 0xb470, 0x68e0, 0x309e, 0x9ce5, 0x1, 0x1);
        gbc.writeMem(0xb4df, { 0x5d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4ac8, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb4df));
        // 5D 03D0
        gbc.setState(0xad83, 0x3fb1, 0xfac0, 0xaf9c, 0x943b, 0x31c7, 0x0, 0x1);
        gbc.writeMem(0xad83, { 0x5d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3fb1, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xad83));
        // 5D 03D1
        gbc.setState(0xc31e, 0x86bf, 0x4da0, 0xb4f0, 0x5bc6, 0xef4, 0x0, 0x0);
        gbc.writeMem(0xc31e, { 0x5d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc31e));
        // 5D 03D2
        gbc.setState(0x7282, 0xbe61, 0x92c0, 0x1215, 0x4b95, 0x2ba2, 0x1, 0x0);
        gbc.writeMem(0x7282, { 0x5d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0x7283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03D3
        gbc.setState(0x7f95, 0x6eb9, 0x1db0, 0xac61, 0x49f3, 0x34f0, 0x1, 0x1);
        gbc.writeMem(0x7f95, { 0x5d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0x7f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03D4
        gbc.setState(0xbbd3, 0x6e8d, 0x57d0, 0x8401, 0xfafd, 0x98e2, 0x0, 0x1);
        gbc.writeMem(0xbbd3, { 0x5d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6e8d, gbc.sp());
        EXPECT(0xbbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbbd3));
        // 5D 03D5
        gbc.setState(0xe1ed, 0x67e6, 0xd3b0, 0x1645, 0xbc47, 0xd35e, 0x1, 0x0);
        gbc.writeMem(0xe1ed, { 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x67e6, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe1ed));
        // 5D 03D6
        gbc.setState(0x1388, 0xd168, 0xfbb0, 0x200c, 0xa250, 0x5c7b, 0x0, 0x0);
        gbc.writeMem(0x1388, { 0x5d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd168, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03D7
        gbc.setState(0xc016, 0x5b4e, 0xd370, 0x4622, 0xc703, 0xf550, 0x1, 0x1);
        gbc.writeMem(0xc016, { 0x5d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5b4e, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc016));
        // 5D 03D8
        gbc.setState(0xb8ec, 0x85d2, 0xdf80, 0xc910, 0x15c4, 0x62d7, 0x1, 0x0);
        gbc.writeMem(0xb8ec, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x85d2, gbc.sp());
        EXPECT(0xb8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ec));
        // 5D 03D9
        gbc.setState(0xa7c0, 0x2b53, 0x7010, 0x1808, 0x8b84, 0xf7db, 0x1, 0x0);
        gbc.writeMem(0xa7c0, { 0x5d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2b53, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa7c0));
        // 5D 03DA
        gbc.setState(0xbf89, 0xabb0, 0x8800, 0x2ba, 0xc868, 0xd610, 0x1, 0x0);
        gbc.writeMem(0xbf89, { 0x5d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xabb0, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbf89));
        // 5D 03DB
        gbc.setState(0xcb7f, 0x355d, 0x4700, 0xe536, 0x9f4a, 0xccef, 0x0, 0x1);
        gbc.writeMem(0xcb7f, { 0x5d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x355d, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xcb7f));
        // 5D 03DC
        gbc.setState(0x6dd2, 0x609e, 0x4040, 0x2e4e, 0xc640, 0x72e4, 0x0, 0x0);
        gbc.writeMem(0x6dd2, { 0x5d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x609e, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03DD
        gbc.setState(0xb6c2, 0xcf8a, 0x4ae0, 0x4591, 0x1d81, 0x4f2f, 0x0, 0x0);
        gbc.writeMem(0xb6c2, { 0x5d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcf8a, gbc.sp());
        EXPECT(0xb6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb6c2));
        // 5D 03DE
        gbc.setState(0x3898, 0xeea0, 0xedd0, 0x687a, 0x6308, 0x9801, 0x1, 0x0);
        gbc.writeMem(0x3898, { 0x5d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x3899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03DF
        gbc.setState(0xc4e2, 0x9edb, 0x93b0, 0x6458, 0x3cfc, 0x332a, 0x1, 0x1);
        gbc.writeMem(0xc4e2, { 0x5d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9edb, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc4e2));
        // 5D 03E0
        gbc.setState(0x368, 0x8f72, 0x3d30, 0x1bcc, 0x7dfd, 0x5f7e, 0x0, 0x0);
        gbc.writeMem(0x368, { 0x5d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03E1
        gbc.setState(0xb082, 0x856e, 0xba60, 0xf899, 0x66ed, 0xefc7, 0x0, 0x1);
        gbc.writeMem(0xb082, { 0x5d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0xb083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb082));
        // 5D 03E2
        gbc.setState(0xe551, 0xebb7, 0x1290, 0x35db, 0xb637, 0x141f, 0x0, 0x1);
        gbc.writeMem(0xe551, { 0x5d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xebb7, gbc.sp());
        EXPECT(0xe552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe551));
        // 5D 03E3
        gbc.setState(0xab5a, 0x5b17, 0x8b00, 0x7296, 0xed19, 0xd10, 0x1, 0x0);
        gbc.writeMem(0xab5a, { 0x5d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0xab5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xab5a));
        // 5D 03E4
        gbc.setState(0x77b6, 0x9d39, 0xaf70, 0x9ebb, 0x2435, 0xd70b, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0x5d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9d39, gbc.sp());
        EXPECT(0x77b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03E5
        gbc.setState(0xa13, 0xe7d2, 0x4cd0, 0xe05c, 0xabe9, 0xc467, 0x0, 0x1);
        gbc.writeMem(0xa13, { 0x5d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0xa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5D 03E6
        gbc.setState(0x65a1, 0x1fba, 0x2380, 0xb7ed, 0x87e9, 0xbab3, 0x0, 0x0);
        gbc.writeMem(0x65a1, { 0x5d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1fba, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5D 03E7
        gbc.setState(0x62ac, 0xdc49, 0xdfe0, 0x77d1, 0x4e2b, 0x4c37, 0x0, 0x0);
        gbc.writeMem(0x62ac, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
