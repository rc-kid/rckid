    TEST(gbcemu, opcode_cb_c2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C2 0001
        gbc.setState(0x864f, 0x1877, 0xa310, 0x1093, 0x3cb4, 0xaeec, 0x1, 0x1);
        gbc.writeMem(0x864f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0x8651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864f));
        EXPECT(0xc2, gbc.readMem(0x8650));
        // CB C2 0002
        gbc.setState(0xadbf, 0xe748, 0x7970, 0x22eb, 0x4f04, 0xa252, 0x0, 0x1);
        gbc.writeMem(0xadbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbf));
        EXPECT(0xc2, gbc.readMem(0xadc0));
        // CB C2 0003
        gbc.setState(0x94e0, 0x61bc, 0x2ff0, 0xea84, 0x55b7, 0xe032, 0x1, 0x0);
        gbc.writeMem(0x94e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x94e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e0));
        EXPECT(0xc2, gbc.readMem(0x94e1));
        // CB C2 0004
        gbc.setState(0x222e, 0xb01b, 0x6b40, 0xe86e, 0x82bb, 0x6ac4, 0x0, 0x0);
        gbc.writeMem(0x222e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb01b, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0005
        gbc.setState(0x2c96, 0x836, 0x970, 0x21a3, 0xec95, 0xebad, 0x1, 0x1);
        gbc.writeMem(0x2c96, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x836, gbc.sp());
        EXPECT(0x2c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0007
        gbc.setState(0x467a, 0x9fa2, 0x47b0, 0x93ea, 0xfa59, 0x4007, 0x0, 0x1);
        gbc.writeMem(0x467a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9fa2, gbc.sp());
        EXPECT(0x467c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0008
        gbc.setState(0x6fee, 0xd5ce, 0x84b0, 0x7ff4, 0x90d4, 0x5e13, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd5ce, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 000A
        gbc.setState(0x8f1c, 0xc706, 0x7370, 0x57b2, 0xd552, 0x8b0e, 0x0, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0x8f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1c));
        EXPECT(0xc2, gbc.readMem(0x8f1d));
        // CB C2 000B
        gbc.setState(0x789b, 0x36f9, 0xc2f0, 0xa792, 0xe5b7, 0x7682, 0x1, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 000C
        gbc.setState(0xba77, 0x2cf7, 0xe620, 0xdde0, 0xc52d, 0x6e46, 0x1, 0x1);
        gbc.writeMem(0xba77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0xba79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba77));
        EXPECT(0xc2, gbc.readMem(0xba78));
        // CB C2 000D
        gbc.setState(0x75c4, 0x203f, 0x5300, 0x998f, 0x1572, 0x9a11, 0x0, 0x0);
        gbc.writeMem(0x75c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 000E
        gbc.setState(0xbf76, 0xcbf3, 0x6c0, 0xb588, 0x24af, 0x2e36, 0x0, 0x0);
        gbc.writeMem(0xbf76, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0xbf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf76));
        EXPECT(0xc2, gbc.readMem(0xbf77));
        // CB C2 000F
        gbc.setState(0xdea4, 0xe733, 0x8680, 0xebad, 0x13d8, 0x338d, 0x0, 0x0);
        gbc.writeMem(0xdea4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0xdea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea4));
        EXPECT(0xc2, gbc.readMem(0xdea5));
        // CB C2 0010
        gbc.setState(0xedb6, 0xf65c, 0xb070, 0x3126, 0x61c3, 0x602e, 0x1, 0x1);
        gbc.writeMem(0xedb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb6));
        EXPECT(0xc2, gbc.readMem(0xedb7));
        // CB C2 0011
        gbc.setState(0x94b, 0xccb5, 0x4f20, 0x7d48, 0x42dc, 0xad2e, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccb5, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0012
        gbc.setState(0x490f, 0xf726, 0x13b0, 0xe7e8, 0xcf07, 0xb6c4, 0x0, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0013
        gbc.setState(0x35ac, 0x67ad, 0xd4a0, 0x4660, 0x9daa, 0xe948, 0x1, 0x1);
        gbc.writeMem(0x35ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0x35ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0014
        gbc.setState(0x46b7, 0x8130, 0xb1b0, 0x54d5, 0xd54c, 0xc3e0, 0x0, 0x0);
        gbc.writeMem(0x46b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0x46b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0015
        gbc.setState(0x1f08, 0xbd5a, 0x110, 0x9ec5, 0xb18a, 0x6791, 0x1, 0x0);
        gbc.writeMem(0x1f08, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbd5a, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0016
        gbc.setState(0x7c58, 0x9a85, 0x6c90, 0x5d8a, 0x2140, 0x32af, 0x1, 0x0);
        gbc.writeMem(0x7c58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9a85, gbc.sp());
        EXPECT(0x7c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0017
        gbc.setState(0xb781, 0x6592, 0xbef0, 0x75bf, 0x1bfa, 0xb91b, 0x0, 0x1);
        gbc.writeMem(0xb781, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0xb783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb781));
        EXPECT(0xc2, gbc.readMem(0xb782));
        // CB C2 0018
        gbc.setState(0x7d9, 0xad14, 0x14e0, 0x8720, 0x2b8b, 0xc60d, 0x1, 0x0);
        gbc.writeMem(0x7d9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad14, gbc.sp());
        EXPECT(0x7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0019
        gbc.setState(0x9206, 0x7496, 0xc5b0, 0x904e, 0xa6f2, 0xc91, 0x1, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7496, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9206));
        EXPECT(0xc2, gbc.readMem(0x9207));
        // CB C2 001A
        gbc.setState(0x6161, 0x5f7b, 0xa10, 0x7e85, 0x6121, 0x7d43, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 001B
        gbc.setState(0x8ad1, 0x2c25, 0x4800, 0x7f28, 0xc8e5, 0x3da4, 0x0, 0x0);
        gbc.writeMem(0x8ad1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x8ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad1));
        EXPECT(0xc2, gbc.readMem(0x8ad2));
        // CB C2 001C
        gbc.setState(0xbabe, 0xc70e, 0x4930, 0xe89, 0xb65e, 0xd69b, 0x1, 0x1);
        gbc.writeMem(0xbabe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbabe));
        EXPECT(0xc2, gbc.readMem(0xbabf));
        // CB C2 001E
        gbc.setState(0x52d1, 0x2036, 0x3000, 0xc346, 0x60b7, 0x9c3b, 0x1, 0x1);
        gbc.writeMem(0x52d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0x52d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 001F
        gbc.setState(0x9074, 0x3e4a, 0xb1d0, 0x51e5, 0xfccb, 0xa95f, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3e4a, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9074));
        EXPECT(0xc2, gbc.readMem(0x9075));
        // CB C2 0020
        gbc.setState(0xecb2, 0xab71, 0xc490, 0x8201, 0xd0f5, 0xc240, 0x0, 0x1);
        gbc.writeMem(0xecb2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb2));
        EXPECT(0xc2, gbc.readMem(0xecb3));
        // CB C2 0021
        gbc.setState(0xc2b7, 0x5708, 0xd580, 0xb20e, 0x78f2, 0x4b5a, 0x1, 0x1);
        gbc.writeMem(0xc2b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5708, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b7));
        EXPECT(0xc2, gbc.readMem(0xc2b8));
        // CB C2 0022
        gbc.setState(0x36e0, 0x6d2d, 0x5520, 0xe08f, 0x4445, 0xaeaf, 0x0, 0x0);
        gbc.writeMem(0x36e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6d2d, gbc.sp());
        EXPECT(0x36e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0023
        gbc.setState(0x6dbf, 0x2276, 0xbc80, 0x16b3, 0xe061, 0xe4d5, 0x0, 0x0);
        gbc.writeMem(0x6dbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2276, gbc.sp());
        EXPECT(0x6dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0024
        gbc.setState(0xd753, 0xfa3a, 0xf260, 0xb971, 0xe3c2, 0xdd13, 0x0, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfa3a, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0xc2, gbc.readMem(0xd754));
        // CB C2 0025
        gbc.setState(0x3409, 0x821d, 0x3010, 0xbd02, 0x9214, 0x6958, 0x0, 0x1);
        gbc.writeMem(0x3409, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x821d, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0026
        gbc.setState(0x24b0, 0x24c9, 0xbe10, 0x6cac, 0xb970, 0x2868, 0x0, 0x1);
        gbc.writeMem(0x24b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x24c9, gbc.sp());
        EXPECT(0x24b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0027
        gbc.setState(0xb73a, 0x93b0, 0x5280, 0xdd57, 0xc004, 0xcf92, 0x0, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73a));
        EXPECT(0xc2, gbc.readMem(0xb73b));
        // CB C2 0029
        gbc.setState(0xcaae, 0x26ed, 0xc360, 0xffa8, 0xf860, 0x2047, 0x1, 0x0);
        gbc.writeMem(0xcaae, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0xcab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaae));
        EXPECT(0xc2, gbc.readMem(0xcaaf));
        // CB C2 002A
        gbc.setState(0xc0bb, 0x2b3b, 0x2520, 0xc4fc, 0xa5e0, 0x7bfb, 0x1, 0x0);
        gbc.writeMem(0xc0bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bb));
        EXPECT(0xc2, gbc.readMem(0xc0bc));
        // CB C2 002B
        gbc.setState(0x55c7, 0x2430, 0x8ff0, 0x8a2, 0x71de, 0x2024, 0x0, 0x0);
        gbc.writeMem(0x55c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 002C
        gbc.setState(0x5d41, 0xe341, 0xba0, 0x9a2d, 0xe8b0, 0xe8e7, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe341, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 002D
        gbc.setState(0xa973, 0xa5d8, 0x1c30, 0x119c, 0xe24e, 0xf01d, 0x0, 0x0);
        gbc.writeMem(0xa973, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5d8, gbc.sp());
        EXPECT(0xa975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa973));
        EXPECT(0xc2, gbc.readMem(0xa974));
        // CB C2 002E
        gbc.setState(0x733f, 0x4ee2, 0x7a50, 0xdf43, 0x6a5f, 0xd481, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4ee2, gbc.sp());
        EXPECT(0x7341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 002F
        gbc.setState(0xeb29, 0xb5a9, 0xbb90, 0x4eda, 0x350e, 0x1599, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb5a9, gbc.sp());
        EXPECT(0xeb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb29));
        EXPECT(0xc2, gbc.readMem(0xeb2a));
        // CB C2 0030
        gbc.setState(0xc549, 0xee2d, 0x1ce0, 0x2cd4, 0xd69, 0xee51, 0x1, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee2d, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc549));
        EXPECT(0xc2, gbc.readMem(0xc54a));
        // CB C2 0032
        gbc.setState(0xc631, 0x68fd, 0x84b0, 0xb9f2, 0x89cc, 0x41f7, 0x1, 0x0);
        gbc.writeMem(0xc631, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x68fd, gbc.sp());
        EXPECT(0xc633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc631));
        EXPECT(0xc2, gbc.readMem(0xc632));
        // CB C2 0033
        gbc.setState(0xedbf, 0x23ef, 0x61a0, 0x2a22, 0x9546, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0xedbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbf));
        EXPECT(0xc2, gbc.readMem(0xedc0));
        // CB C2 0034
        gbc.setState(0x3968, 0x218b, 0xbf50, 0x9070, 0x2db5, 0x7c8b, 0x1, 0x1);
        gbc.writeMem(0x3968, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0x396a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0035
        gbc.setState(0x38f8, 0xd6c0, 0x9b60, 0xa2fd, 0x65a3, 0xc75f, 0x0, 0x0);
        gbc.writeMem(0x38f8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0x38fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0036
        gbc.setState(0x43c1, 0x87b0, 0x88b0, 0xa694, 0x8834, 0x3a88, 0x1, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0037
        gbc.setState(0xc1cc, 0xa61b, 0x14c0, 0x1e8d, 0xad62, 0x5760, 0x1, 0x0);
        gbc.writeMem(0xc1cc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0xc1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cc));
        EXPECT(0xc2, gbc.readMem(0xc1cd));
        // CB C2 0038
        gbc.setState(0x4485, 0x65af, 0xc800, 0x99ac, 0xd16, 0xf5d9, 0x1, 0x0);
        gbc.writeMem(0x4485, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x65af, gbc.sp());
        EXPECT(0x4487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0039
        gbc.setState(0x826c, 0x7f72, 0xf620, 0xab98, 0x1a8e, 0x8b4e, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7f72, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826c));
        EXPECT(0xc2, gbc.readMem(0x826d));
        // CB C2 003A
        gbc.setState(0x7ad8, 0xeeb0, 0x5350, 0x9c3e, 0xebac, 0x22c6, 0x1, 0x1);
        gbc.writeMem(0x7ad8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xeeb0, gbc.sp());
        EXPECT(0x7ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 003B
        gbc.setState(0x2e5c, 0xb886, 0x7570, 0xf65f, 0xfd12, 0x57bf, 0x0, 0x1);
        gbc.writeMem(0x2e5c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb886, gbc.sp());
        EXPECT(0x2e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 003C
        gbc.setState(0xb79f, 0x3dc9, 0x6690, 0xcaf2, 0xf2cb, 0xfdef, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3dc9, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0xc2, gbc.readMem(0xb7a0));
        // CB C2 003D
        gbc.setState(0x6552, 0xd436, 0x8d70, 0xaa43, 0xc2aa, 0x480f, 0x0, 0x0);
        gbc.writeMem(0x6552, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd436, gbc.sp());
        EXPECT(0x6554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 003E
        gbc.setState(0xc49c, 0x35e7, 0x3120, 0x573, 0x5e44, 0x7900, 0x1, 0x0);
        gbc.writeMem(0xc49c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x35e7, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49c));
        EXPECT(0xc2, gbc.readMem(0xc49d));
        // CB C2 0040
        gbc.setState(0xb981, 0xae4f, 0x15c0, 0x8281, 0xe805, 0xd6a2, 0x1, 0x1);
        gbc.writeMem(0xb981, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0xb983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb981));
        EXPECT(0xc2, gbc.readMem(0xb982));
        // CB C2 0041
        gbc.setState(0xa221, 0xe275, 0xa9b0, 0xab4e, 0x338e, 0xb89c, 0x1, 0x0);
        gbc.writeMem(0xa221, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xa223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa221));
        EXPECT(0xc2, gbc.readMem(0xa222));
        // CB C2 0042
        gbc.setState(0x55e6, 0xc0aa, 0x5c90, 0x83c1, 0x7e0e, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x55e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x55e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0043
        gbc.setState(0xc31e, 0x98e2, 0x8890, 0x74a4, 0xef51, 0xdb65, 0x1, 0x0);
        gbc.writeMem(0xc31e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x98e2, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31e));
        EXPECT(0xc2, gbc.readMem(0xc31f));
        // CB C2 0044
        gbc.setState(0x93f5, 0xf648, 0x4d50, 0xff4b, 0x64bb, 0xf356, 0x1, 0x0);
        gbc.writeMem(0x93f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0x93f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f5));
        EXPECT(0xc2, gbc.readMem(0x93f6));
        // CB C2 0045
        gbc.setState(0x7a36, 0xbd49, 0x67c0, 0x8982, 0xfbc2, 0x2996, 0x1, 0x0);
        gbc.writeMem(0x7a36, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0x7a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0046
        gbc.setState(0xcc4f, 0x331c, 0x3240, 0x7cff, 0x7765, 0x873e, 0x0, 0x0);
        gbc.writeMem(0xcc4f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x331c, gbc.sp());
        EXPECT(0xcc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4f));
        EXPECT(0xc2, gbc.readMem(0xcc50));
        // CB C2 0047
        gbc.setState(0x36d0, 0xe6d9, 0x6fc0, 0xa6fc, 0x56a, 0x9f9b, 0x0, 0x0);
        gbc.writeMem(0x36d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe6d9, gbc.sp());
        EXPECT(0x36d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0048
        gbc.setState(0x908e, 0x5b16, 0xb750, 0x9209, 0x339b, 0x1275, 0x1, 0x1);
        gbc.writeMem(0x908e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908e));
        EXPECT(0xc2, gbc.readMem(0x908f));
        // CB C2 0049
        gbc.setState(0xff, 0xcb39, 0xde10, 0xbfa7, 0x6da9, 0xa47b, 0x0, 0x1);
        gbc.writeMem(0xff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0x101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 004A
        gbc.setState(0xd36d, 0x480c, 0xfad0, 0x89ea, 0x276d, 0xcf7c, 0x1, 0x0);
        gbc.writeMem(0xd36d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0xd36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36d));
        EXPECT(0xc2, gbc.readMem(0xd36e));
        // CB C2 004B
        gbc.setState(0xc0a7, 0xa3e9, 0x48b0, 0xc516, 0x43c8, 0xcce2, 0x1, 0x1);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa3e9, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a7));
        EXPECT(0xc2, gbc.readMem(0xc0a8));
        // CB C2 004C
        gbc.setState(0x67e5, 0xb330, 0xfe10, 0x35b8, 0xdb30, 0xac36, 0x1, 0x0);
        gbc.writeMem(0x67e5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 004D
        gbc.setState(0x955, 0xe5b, 0x2d80, 0x71b6, 0x8e99, 0x7741, 0x1, 0x0);
        gbc.writeMem(0x955, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0x957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 004E
        gbc.setState(0x6c3c, 0x4c73, 0xbe50, 0x5aed, 0xa9db, 0xd064, 0x1, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4c73, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 004F
        gbc.setState(0x6a3, 0x3a6, 0x420, 0x8646, 0x9b3, 0x90ad, 0x0, 0x1);
        gbc.writeMem(0x6a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3a6, gbc.sp());
        EXPECT(0x6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0050
        gbc.setState(0xd73b, 0x4b16, 0x44b0, 0x88fc, 0x9003, 0x6316, 0x0, 0x0);
        gbc.writeMem(0xd73b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4b16, gbc.sp());
        EXPECT(0xd73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73b));
        EXPECT(0xc2, gbc.readMem(0xd73c));
        // CB C2 0051
        gbc.setState(0x2392, 0xf679, 0xb510, 0xdaf, 0x16a3, 0x2f3a, 0x0, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf679, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0052
        gbc.setState(0xd803, 0x7c47, 0x66d0, 0x275a, 0x3658, 0x39d, 0x0, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7c47, gbc.sp());
        EXPECT(0xd805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd803));
        EXPECT(0xc2, gbc.readMem(0xd804));
        // CB C2 0053
        gbc.setState(0x4df3, 0x811a, 0xec30, 0x7ebe, 0x3bfa, 0x100c, 0x0, 0x0);
        gbc.writeMem(0x4df3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x811a, gbc.sp());
        EXPECT(0x4df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0054
        gbc.setState(0x1a37, 0xdeb, 0x33a0, 0x1d25, 0x169c, 0x6dc6, 0x1, 0x1);
        gbc.writeMem(0x1a37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdeb, gbc.sp());
        EXPECT(0x1a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0055
        gbc.setState(0xae09, 0xbd9e, 0x2480, 0xa744, 0x3142, 0x71d7, 0x0, 0x0);
        gbc.writeMem(0xae09, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0xae0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae09));
        EXPECT(0xc2, gbc.readMem(0xae0a));
        // CB C2 0056
        gbc.setState(0x1065, 0xfc0b, 0xa270, 0x52e7, 0x162e, 0x7910, 0x1, 0x0);
        gbc.writeMem(0x1065, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfc0b, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0057
        gbc.setState(0xdf9f, 0xf73e, 0x2200, 0x7cd, 0xa1c6, 0x5fbd, 0x0, 0x1);
        gbc.writeMem(0xdf9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0xdfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9f));
        EXPECT(0xc2, gbc.readMem(0xdfa0));
        // CB C2 0058
        gbc.setState(0x1de8, 0x44ba, 0x580, 0x9986, 0x2da8, 0x962b, 0x0, 0x1);
        gbc.writeMem(0x1de8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x44ba, gbc.sp());
        EXPECT(0x1dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0059
        gbc.setState(0x6072, 0x8453, 0xb920, 0xabf8, 0x47c0, 0x8288, 0x1, 0x1);
        gbc.writeMem(0x6072, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x6074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 005A
        gbc.setState(0xd45b, 0xde73, 0xcf50, 0x6904, 0xbd25, 0xff57, 0x1, 0x1);
        gbc.writeMem(0xd45b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0xd45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45b));
        EXPECT(0xc2, gbc.readMem(0xd45c));
        // CB C2 005B
        gbc.setState(0x3112, 0xb44, 0xbdb0, 0x40bb, 0xa6b7, 0xbe16, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb44, gbc.sp());
        EXPECT(0x3114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 005C
        gbc.setState(0x6236, 0x4feb, 0x7220, 0x61ac, 0x9b8a, 0x4382, 0x1, 0x1);
        gbc.writeMem(0x6236, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4feb, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 005D
        gbc.setState(0x5851, 0x512d, 0xdfe0, 0x564c, 0x69a4, 0xf7a2, 0x1, 0x1);
        gbc.writeMem(0x5851, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x512d, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 005E
        gbc.setState(0x30f, 0x2d13, 0xd9b0, 0xe61a, 0x623b, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0x30f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 005F
        gbc.setState(0x5416, 0xc498, 0x2b40, 0x8255, 0x3368, 0xc0b0, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc498, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0060
        gbc.setState(0x835a, 0x8bf0, 0x49a0, 0x343a, 0xa17e, 0x143b, 0x0, 0x1);
        gbc.writeMem(0x835a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0x835c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835a));
        EXPECT(0xc2, gbc.readMem(0x835b));
        // CB C2 0061
        gbc.setState(0xa5ee, 0xf32a, 0x5aa0, 0x549c, 0xdb0, 0xd870, 0x0, 0x1);
        gbc.writeMem(0xa5ee, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ee));
        EXPECT(0xc2, gbc.readMem(0xa5ef));
        // CB C2 0062
        gbc.setState(0x8109, 0x661d, 0x9c50, 0xaf16, 0xf7ec, 0xea2f, 0x0, 0x1);
        gbc.writeMem(0x8109, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x810b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8109));
        EXPECT(0xc2, gbc.readMem(0x810a));
        // CB C2 0063
        gbc.setState(0x6fc5, 0x32ce, 0x4930, 0x9b7c, 0xca90, 0xadb1, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0064
        gbc.setState(0x4fd, 0x3fbb, 0xaa20, 0xcfe1, 0x7b20, 0x7e66, 0x1, 0x0);
        gbc.writeMem(0x4fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0065
        gbc.setState(0xaed1, 0xae33, 0x5e60, 0x8301, 0x865c, 0x26f4, 0x1, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xae33, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed1));
        EXPECT(0xc2, gbc.readMem(0xaed2));
        // CB C2 0066
        gbc.setState(0xe708, 0xf915, 0x7850, 0xcd05, 0xa5a9, 0x44c1, 0x0, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0xc2, gbc.readMem(0xe709));
        // CB C2 0067
        gbc.setState(0x7d26, 0x3af3, 0x29c0, 0x6309, 0x713d, 0xede, 0x0, 0x1);
        gbc.writeMem(0x7d26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3af3, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0068
        gbc.setState(0xd197, 0x5971, 0x99c0, 0xb20a, 0x9565, 0x4034, 0x0, 0x0);
        gbc.writeMem(0xd197, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5971, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd197));
        EXPECT(0xc2, gbc.readMem(0xd198));
        // CB C2 0069
        gbc.setState(0x7626, 0xb4aa, 0xb340, 0x698, 0xea0, 0xe1d3, 0x1, 0x0);
        gbc.writeMem(0x7626, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb4aa, gbc.sp());
        EXPECT(0x7628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 006A
        gbc.setState(0x80af, 0x46bd, 0xe470, 0x9347, 0xcab8, 0x9616, 0x0, 0x1);
        gbc.writeMem(0x80af, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0x80b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80af));
        EXPECT(0xc2, gbc.readMem(0x80b0));
        // CB C2 006B
        gbc.setState(0xee9c, 0xda1c, 0x2300, 0x2f4d, 0xe58, 0x47f0, 0x0, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xda1c, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9c));
        EXPECT(0xc2, gbc.readMem(0xee9d));
        // CB C2 006C
        gbc.setState(0xd18f, 0x21fe, 0x35f0, 0xd2c3, 0xefeb, 0x205d, 0x1, 0x1);
        gbc.writeMem(0xd18f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x21fe, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18f));
        EXPECT(0xc2, gbc.readMem(0xd190));
        // CB C2 006D
        gbc.setState(0x8764, 0xd293, 0xca50, 0xd6c7, 0xdec6, 0xd991, 0x1, 0x1);
        gbc.writeMem(0x8764, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd293, gbc.sp());
        EXPECT(0x8766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8764));
        EXPECT(0xc2, gbc.readMem(0x8765));
        // CB C2 006E
        gbc.setState(0xefae, 0x9a45, 0x6df0, 0x524f, 0xca0a, 0x84fa, 0x1, 0x0);
        gbc.writeMem(0xefae, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9a45, gbc.sp());
        EXPECT(0xefb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefae));
        EXPECT(0xc2, gbc.readMem(0xefaf));
        // CB C2 0070
        gbc.setState(0x7149, 0xaba4, 0x6210, 0xc3ff, 0xc4ea, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0x7149, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x714b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0071
        gbc.setState(0xbe3e, 0xf599, 0x4f30, 0x9e42, 0xc652, 0x8914, 0x1, 0x1);
        gbc.writeMem(0xbe3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0xbe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3e));
        EXPECT(0xc2, gbc.readMem(0xbe3f));
        // CB C2 0072
        gbc.setState(0xe8a3, 0x549a, 0x4270, 0xcc84, 0x72dc, 0x7c47, 0x1, 0x0);
        gbc.writeMem(0xe8a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0xe8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a3));
        EXPECT(0xc2, gbc.readMem(0xe8a4));
        // CB C2 0074
        gbc.setState(0x491, 0xef89, 0x8f30, 0x9ce4, 0x3c0c, 0x5e61, 0x1, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0076
        gbc.setState(0x90d3, 0x5e3a, 0x3000, 0x9a16, 0x5101, 0x1bf7, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5e3a, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0xc2, gbc.readMem(0x90d4));
        // CB C2 0077
        gbc.setState(0x86dd, 0x90bd, 0xa6b0, 0xe65b, 0x1013, 0x27ff, 0x0, 0x0);
        gbc.writeMem(0x86dd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x90bd, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0xc2, gbc.readMem(0x86de));
        // CB C2 0078
        gbc.setState(0x81d6, 0xcfa6, 0x4460, 0xd14a, 0xa69, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0x81d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcfa6, gbc.sp());
        EXPECT(0x81d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d6));
        EXPECT(0xc2, gbc.readMem(0x81d7));
        // CB C2 0079
        gbc.setState(0x4bad, 0xf514, 0xa670, 0xb473, 0x4010, 0xcc1c, 0x1, 0x0);
        gbc.writeMem(0x4bad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 007A
        gbc.setState(0x9a89, 0xf54b, 0x6770, 0x9253, 0xfbc7, 0xd94d, 0x0, 0x0);
        gbc.writeMem(0x9a89, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf54b, gbc.sp());
        EXPECT(0x9a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a89));
        EXPECT(0xc2, gbc.readMem(0x9a8a));
        // CB C2 007B
        gbc.setState(0x6fe9, 0x81c9, 0xb360, 0x9c62, 0x6020, 0xcd68, 0x0, 0x1);
        gbc.writeMem(0x6fe9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x81c9, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 007C
        gbc.setState(0x2fa0, 0xb4f9, 0x600, 0x4dbb, 0xfbbe, 0x2892, 0x1, 0x0);
        gbc.writeMem(0x2fa0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb4f9, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 007D
        gbc.setState(0x7119, 0x73b2, 0x3650, 0x4a14, 0xf070, 0xd251, 0x1, 0x1);
        gbc.writeMem(0x7119, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0x711b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 007E
        gbc.setState(0x8ac8, 0xb9d7, 0xcc00, 0x902e, 0x73a3, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x8ac8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac8));
        EXPECT(0xc2, gbc.readMem(0x8ac9));
        // CB C2 007F
        gbc.setState(0xcf2d, 0xe853, 0x7830, 0xec22, 0xbe8a, 0x7597, 0x1, 0x0);
        gbc.writeMem(0xcf2d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2d));
        EXPECT(0xc2, gbc.readMem(0xcf2e));
        // CB C2 0080
        gbc.setState(0xaa46, 0x8e1a, 0x9bc0, 0x7bfd, 0x1a07, 0xe2a7, 0x0, 0x1);
        gbc.writeMem(0xaa46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0xaa48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa46));
        EXPECT(0xc2, gbc.readMem(0xaa47));
        // CB C2 0081
        gbc.setState(0xc145, 0x79bd, 0xe310, 0xf852, 0x604b, 0x498, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0xc2, gbc.readMem(0xc146));
        // CB C2 0082
        gbc.setState(0x2bb6, 0xcd06, 0x3790, 0x4c58, 0x26e6, 0x5765, 0x0, 0x0);
        gbc.writeMem(0x2bb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcd06, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0083
        gbc.setState(0x81c2, 0x435e, 0xed00, 0xdf56, 0xe958, 0xc914, 0x1, 0x1);
        gbc.writeMem(0x81c2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c2));
        EXPECT(0xc2, gbc.readMem(0x81c3));
        // CB C2 0084
        gbc.setState(0xec1e, 0x81e4, 0x3760, 0x8614, 0xf3dd, 0xfce6, 0x1, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x81e4, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1e));
        EXPECT(0xc2, gbc.readMem(0xec1f));
        // CB C2 0085
        gbc.setState(0x92bb, 0xcf77, 0xaf50, 0x2b79, 0xb782, 0x9a92, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf77, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0xc2, gbc.readMem(0x92bc));
        // CB C2 0086
        gbc.setState(0x2038, 0xd799, 0xdbb0, 0x4dd1, 0x2005, 0x807, 0x1, 0x0);
        gbc.writeMem(0x2038, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0x203a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0087
        gbc.setState(0x60cd, 0x5523, 0x8b40, 0xc60, 0x493e, 0x4038, 0x0, 0x1);
        gbc.writeMem(0x60cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0x60cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0088
        gbc.setState(0x3f57, 0x28a, 0x240, 0x8a79, 0x6bdb, 0x2d93, 0x1, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x28a, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0089
        gbc.setState(0x7825, 0x72cd, 0xd00, 0xeae0, 0xa0c9, 0x4a1, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 008A
        gbc.setState(0xb27d, 0x6602, 0x8440, 0xb476, 0x2de9, 0x782d, 0x0, 0x1);
        gbc.writeMem(0xb27d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0xb27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27d));
        EXPECT(0xc2, gbc.readMem(0xb27e));
        // CB C2 008B
        gbc.setState(0x60e, 0x631c, 0x4bd0, 0x898e, 0x1ca1, 0xea31, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x631c, gbc.sp());
        EXPECT(0x610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 008C
        gbc.setState(0x62c0, 0x91c5, 0xe5e0, 0xd09e, 0xec, 0x3d00, 0x0, 0x1);
        gbc.writeMem(0x62c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 008D
        gbc.setState(0xdcb5, 0xeb5f, 0xb050, 0x1e6b, 0xc184, 0x3ee6, 0x0, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb5));
        EXPECT(0xc2, gbc.readMem(0xdcb6));
        // CB C2 008E
        gbc.setState(0xdd8e, 0xa05f, 0x93a0, 0x655f, 0x8c52, 0x3a05, 0x1, 0x1);
        gbc.writeMem(0xdd8e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa05f, gbc.sp());
        EXPECT(0xdd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8e));
        EXPECT(0xc2, gbc.readMem(0xdd8f));
        // CB C2 008F
        gbc.setState(0x4041, 0xfab7, 0x9e80, 0x32b7, 0x8625, 0x50f9, 0x0, 0x0);
        gbc.writeMem(0x4041, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfab7, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0090
        gbc.setState(0xc584, 0xcc6e, 0xcd10, 0x21e5, 0x1e19, 0x18fa, 0x0, 0x0);
        gbc.writeMem(0xc584, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcc6e, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc584));
        EXPECT(0xc2, gbc.readMem(0xc585));
        // CB C2 0091
        gbc.setState(0x76de, 0xb6de, 0xb4f0, 0x9ef2, 0x7672, 0xb305, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0092
        gbc.setState(0xd2c9, 0x1134, 0xa760, 0xb3f2, 0xb625, 0x9b46, 0x1, 0x1);
        gbc.writeMem(0xd2c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1134, gbc.sp());
        EXPECT(0xd2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c9));
        EXPECT(0xc2, gbc.readMem(0xd2ca));
        // CB C2 0093
        gbc.setState(0x3cb1, 0xab37, 0x7e90, 0x66b8, 0x11a3, 0xce3e, 0x1, 0x0);
        gbc.writeMem(0x3cb1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0094
        gbc.setState(0x5a57, 0x3f2f, 0x73f0, 0x2729, 0x4f4f, 0x81eb, 0x1, 0x1);
        gbc.writeMem(0x5a57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0095
        gbc.setState(0xc4aa, 0x3348, 0xf490, 0xe4a3, 0xc182, 0x94a0, 0x1, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0xc2, gbc.readMem(0xc4ab));
        // CB C2 0096
        gbc.setState(0x45c2, 0x311a, 0x35a0, 0x9946, 0x595, 0x634d, 0x0, 0x1);
        gbc.writeMem(0x45c2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x311a, gbc.sp());
        EXPECT(0x45c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0097
        gbc.setState(0x95d5, 0x4d69, 0xfc50, 0x7d73, 0x7714, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x95d5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4d69, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0xc2, gbc.readMem(0x95d6));
        // CB C2 0098
        gbc.setState(0xaee5, 0xb571, 0xf290, 0x3a6f, 0x34b1, 0xd83a, 0x0, 0x1);
        gbc.writeMem(0xaee5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee5));
        EXPECT(0xc2, gbc.readMem(0xaee6));
        // CB C2 009A
        gbc.setState(0x43e5, 0x216, 0x990, 0x6f3b, 0x285c, 0x12d6, 0x0, 0x1);
        gbc.writeMem(0x43e5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0x43e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 009B
        gbc.setState(0x9ad8, 0xc2dc, 0xace0, 0x5e4e, 0xc921, 0x9128, 0x1, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad8));
        EXPECT(0xc2, gbc.readMem(0x9ad9));
        // CB C2 009C
        gbc.setState(0xcd85, 0xc9f4, 0xa660, 0xc155, 0xec20, 0xb2cc, 0x0, 0x1);
        gbc.writeMem(0xcd85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc9f4, gbc.sp());
        EXPECT(0xcd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd85));
        EXPECT(0xc2, gbc.readMem(0xcd86));
        // CB C2 009D
        gbc.setState(0x8c9a, 0x49ac, 0x5280, 0x9e2c, 0x56f4, 0xd13, 0x1, 0x0);
        gbc.writeMem(0x8c9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x49ac, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9a));
        EXPECT(0xc2, gbc.readMem(0x8c9b));
        // CB C2 009E
        gbc.setState(0xbd1b, 0xd8c, 0xbbf0, 0xcda6, 0xf4bd, 0x84e3, 0x0, 0x0);
        gbc.writeMem(0xbd1b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd8c, gbc.sp());
        EXPECT(0xbd1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1b));
        EXPECT(0xc2, gbc.readMem(0xbd1c));
        // CB C2 009F
        gbc.setState(0x2c18, 0x58a8, 0x5080, 0xc0a1, 0xdce, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x2c18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x58a8, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00A0
        gbc.setState(0x5e92, 0xca38, 0xe170, 0x51ec, 0xc1e8, 0x5a3f, 0x1, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00A1
        gbc.setState(0x8dbc, 0x219a, 0x34f0, 0x5b62, 0xae93, 0x9e0c, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x219a, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbc));
        EXPECT(0xc2, gbc.readMem(0x8dbd));
        // CB C2 00A2
        gbc.setState(0xc4ea, 0xa4b3, 0x6fb0, 0xbc79, 0x373c, 0x604d, 0x1, 0x0);
        gbc.writeMem(0xc4ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa4b3, gbc.sp());
        EXPECT(0xc4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ea));
        EXPECT(0xc2, gbc.readMem(0xc4eb));
        // CB C2 00A3
        gbc.setState(0x6e4, 0x7b91, 0xfb30, 0x5a09, 0xb873, 0xbd8e, 0x1, 0x0);
        gbc.writeMem(0x6e4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7b91, gbc.sp());
        EXPECT(0x6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00A4
        gbc.setState(0xaab1, 0xe18f, 0x5ae0, 0x891f, 0x6ef2, 0x2b24, 0x0, 0x1);
        gbc.writeMem(0xaab1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0xaab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab1));
        EXPECT(0xc2, gbc.readMem(0xaab2));
        // CB C2 00A5
        gbc.setState(0x6c40, 0xcfbd, 0x8f20, 0xdf41, 0xb2e7, 0x46e6, 0x0, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcfbd, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00A6
        gbc.setState(0xe7a0, 0x5ecd, 0x60c0, 0x339, 0xb838, 0x6a71, 0x0, 0x0);
        gbc.writeMem(0xe7a0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5ecd, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a0));
        EXPECT(0xc2, gbc.readMem(0xe7a1));
        // CB C2 00A7
        gbc.setState(0x732c, 0xffbe, 0xc5f0, 0x7fa0, 0x265a, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x732c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0x732e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00A8
        gbc.setState(0x1ec2, 0xd01e, 0xd3e0, 0xd6f2, 0xbd6a, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00A9
        gbc.setState(0xe7f7, 0xb06, 0x1110, 0x1958, 0xaf9e, 0x7d8a, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f7));
        EXPECT(0xc2, gbc.readMem(0xe7f8));
        // CB C2 00AA
        gbc.setState(0x5b53, 0xbce3, 0x810, 0x86af, 0x1af5, 0xf5fd, 0x0, 0x0);
        gbc.writeMem(0x5b53, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbce3, gbc.sp());
        EXPECT(0x5b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00AB
        gbc.setState(0x209b, 0x4158, 0xa420, 0xc08e, 0xa445, 0xfa95, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4158, gbc.sp());
        EXPECT(0x209d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00AC
        gbc.setState(0x407d, 0x959e, 0x2af0, 0x9245, 0x955d, 0xd4a0, 0x0, 0x1);
        gbc.writeMem(0x407d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x959e, gbc.sp());
        EXPECT(0x407f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00AD
        gbc.setState(0x515c, 0x74fd, 0xb260, 0x15b9, 0x330c, 0x69b6, 0x0, 0x0);
        gbc.writeMem(0x515c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x74fd, gbc.sp());
        EXPECT(0x515e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00AE
        gbc.setState(0xcf9d, 0x5713, 0x5b30, 0xa4f6, 0xf21, 0xfb3a, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5713, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9d));
        EXPECT(0xc2, gbc.readMem(0xcf9e));
        // CB C2 00AF
        gbc.setState(0x8b9c, 0x3b2f, 0xe550, 0x9153, 0xed91, 0xed05, 0x1, 0x0);
        gbc.writeMem(0x8b9c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3b2f, gbc.sp());
        EXPECT(0x8b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9c));
        EXPECT(0xc2, gbc.readMem(0x8b9d));
        // CB C2 00B0
        gbc.setState(0x9a9d, 0x1edb, 0x8f80, 0x6fed, 0xa20, 0x7378, 0x0, 0x1);
        gbc.writeMem(0x9a9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1edb, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9d));
        EXPECT(0xc2, gbc.readMem(0x9a9e));
        // CB C2 00B1
        gbc.setState(0x1afd, 0x7eb4, 0xbdf0, 0x1e3d, 0x5fda, 0xc992, 0x0, 0x0);
        gbc.writeMem(0x1afd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0x1aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00B2
        gbc.setState(0x8d86, 0xf828, 0x8920, 0xcf74, 0xda96, 0x6856, 0x1, 0x1);
        gbc.writeMem(0x8d86, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d86));
        EXPECT(0xc2, gbc.readMem(0x8d87));
        // CB C2 00B3
        gbc.setState(0xa356, 0x14fd, 0x4cc0, 0xb551, 0x2fd9, 0x256d, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x14fd, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa356));
        EXPECT(0xc2, gbc.readMem(0xa357));
        // CB C2 00B4
        gbc.setState(0x4e74, 0x29c8, 0x7740, 0x838e, 0x34e5, 0x3f45, 0x1, 0x0);
        gbc.writeMem(0x4e74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x29c8, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00B5
        gbc.setState(0x9b85, 0x3afc, 0xdaa0, 0x2e78, 0x993e, 0x8906, 0x0, 0x1);
        gbc.writeMem(0x9b85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3afc, gbc.sp());
        EXPECT(0x9b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b85));
        EXPECT(0xc2, gbc.readMem(0x9b86));
        // CB C2 00B7
        gbc.setState(0x25a3, 0xd496, 0x2b40, 0x828c, 0xc11b, 0x94e2, 0x1, 0x0);
        gbc.writeMem(0x25a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd496, gbc.sp());
        EXPECT(0x25a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00B8
        gbc.setState(0xea91, 0xae47, 0x18c0, 0xac6b, 0xaf51, 0x2c61, 0x0, 0x0);
        gbc.writeMem(0xea91, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0xea93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea91));
        EXPECT(0xc2, gbc.readMem(0xea92));
        // CB C2 00B9
        gbc.setState(0xc9e1, 0x9df5, 0x3fa0, 0x571c, 0x12ed, 0xd42c, 0x0, 0x1);
        gbc.writeMem(0xc9e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9df5, gbc.sp());
        EXPECT(0xc9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e1));
        EXPECT(0xc2, gbc.readMem(0xc9e2));
        // CB C2 00BA
        gbc.setState(0x667, 0x82d0, 0xa7c0, 0x8418, 0x4142, 0xe74f, 0x0, 0x1);
        gbc.writeMem(0x667, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x82d0, gbc.sp());
        EXPECT(0x669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00BB
        gbc.setState(0x93c6, 0x79cb, 0x3210, 0x465d, 0xff35, 0xddfb, 0x0, 0x0);
        gbc.writeMem(0x93c6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x79cb, gbc.sp());
        EXPECT(0x93c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c6));
        EXPECT(0xc2, gbc.readMem(0x93c7));
        // CB C2 00BC
        gbc.setState(0x3965, 0x383, 0x73f0, 0xd8e8, 0xffae, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x3965, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x383, gbc.sp());
        EXPECT(0x3967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00BD
        gbc.setState(0x5ab0, 0x5eaf, 0xa6f0, 0x523, 0xe61c, 0xacf7, 0x0, 0x1);
        gbc.writeMem(0x5ab0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00BE
        gbc.setState(0x5764, 0xc5cd, 0x69b0, 0x4c8d, 0xc1d2, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0x5764, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc5cd, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00BF
        gbc.setState(0x437, 0x76dd, 0xd890, 0x35fb, 0xa158, 0x3160, 0x0, 0x1);
        gbc.writeMem(0x437, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x76dd, gbc.sp());
        EXPECT(0x439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00C0
        gbc.setState(0x6070, 0x6301, 0xed20, 0xae19, 0x23d4, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6301, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00C1
        gbc.setState(0xe2e7, 0x5459, 0x68c0, 0x6b33, 0x7fcb, 0xbd37, 0x1, 0x0);
        gbc.writeMem(0xe2e7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0xe2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e7));
        EXPECT(0xc2, gbc.readMem(0xe2e8));
        // CB C2 00C2
        gbc.setState(0x99e6, 0x609, 0x8730, 0x575a, 0x2423, 0xda56, 0x0, 0x1);
        gbc.writeMem(0x99e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e6));
        EXPECT(0xc2, gbc.readMem(0x99e7));
        // CB C2 00C3
        gbc.setState(0x84c4, 0x8ab9, 0x2bf0, 0xb384, 0xd5a, 0x5d56, 0x1, 0x1);
        gbc.writeMem(0x84c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8ab9, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c4));
        EXPECT(0xc2, gbc.readMem(0x84c5));
        // CB C2 00C4
        gbc.setState(0x6849, 0xcd44, 0x6100, 0x3053, 0x8f00, 0x6590, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd44, gbc.sp());
        EXPECT(0x684b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00C5
        gbc.setState(0xc9a4, 0x1e98, 0x4fe0, 0x8a3b, 0x3b8b, 0x3a6f, 0x1, 0x0);
        gbc.writeMem(0xc9a4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a4));
        EXPECT(0xc2, gbc.readMem(0xc9a5));
        // CB C2 00C6
        gbc.setState(0xd798, 0x3595, 0x5730, 0xa903, 0x25ed, 0xb667, 0x0, 0x0);
        gbc.writeMem(0xd798, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3595, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd798));
        EXPECT(0xc2, gbc.readMem(0xd799));
        // CB C2 00C7
        gbc.setState(0xa8dc, 0x5e53, 0x6720, 0xeaa6, 0x2869, 0x4dff, 0x1, 0x1);
        gbc.writeMem(0xa8dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5e53, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dc));
        EXPECT(0xc2, gbc.readMem(0xa8dd));
        // CB C2 00C8
        gbc.setState(0xa86d, 0xe71e, 0xafd0, 0xb945, 0x1577, 0x2723, 0x0, 0x0);
        gbc.writeMem(0xa86d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe71e, gbc.sp());
        EXPECT(0xa86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86d));
        EXPECT(0xc2, gbc.readMem(0xa86e));
        // CB C2 00CA
        gbc.setState(0xd792, 0x2627, 0x4b60, 0xbad, 0xe6e, 0x4c9, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2627, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd792));
        EXPECT(0xc2, gbc.readMem(0xd793));
        // CB C2 00CB
        gbc.setState(0x3903, 0xd7f8, 0x66f0, 0xc79c, 0xf67f, 0x97a2, 0x0, 0x0);
        gbc.writeMem(0x3903, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd7f8, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00CC
        gbc.setState(0x1c37, 0x9b8d, 0x580, 0xef1c, 0x93b7, 0x9540, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9b8d, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00CD
        gbc.setState(0xe7a4, 0xecfe, 0xa4c0, 0x1382, 0x6d3c, 0x52a5, 0x1, 0x1);
        gbc.writeMem(0xe7a4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0xe7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a4));
        EXPECT(0xc2, gbc.readMem(0xe7a5));
        // CB C2 00CE
        gbc.setState(0x2ee9, 0xbee9, 0x5a10, 0xbc82, 0x80ea, 0x4f7f, 0x1, 0x1);
        gbc.writeMem(0x2ee9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00CF
        gbc.setState(0x6179, 0x7ca8, 0x38d0, 0x7704, 0x7f61, 0xb29b, 0x0, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00D0
        gbc.setState(0x15bf, 0x50f4, 0x8cd0, 0xe3e8, 0x495, 0xc34d, 0x0, 0x0);
        gbc.writeMem(0x15bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x50f4, gbc.sp());
        EXPECT(0x15c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00D1
        gbc.setState(0x7ca4, 0x6692, 0xd100, 0x2fb5, 0x4071, 0xdb3a, 0x0, 0x0);
        gbc.writeMem(0x7ca4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6692, gbc.sp());
        EXPECT(0x7ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00D2
        gbc.setState(0x7989, 0x4ea4, 0x55c0, 0xfc92, 0x6ee6, 0x241d, 0x1, 0x1);
        gbc.writeMem(0x7989, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0x798b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00D3
        gbc.setState(0x99be, 0x7f7d, 0x1a30, 0x4738, 0x6c43, 0x7762, 0x1, 0x0);
        gbc.writeMem(0x99be, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0xc2, gbc.readMem(0x99bf));
        // CB C2 00D4
        gbc.setState(0x246f, 0xb9b3, 0x3c0, 0x9e2, 0xa97a, 0xa6b6, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00D5
        gbc.setState(0x9ef8, 0xd256, 0x8700, 0x9e2d, 0x271d, 0x3872, 0x1, 0x0);
        gbc.writeMem(0x9ef8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd256, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef8));
        EXPECT(0xc2, gbc.readMem(0x9ef9));
        // CB C2 00D6
        gbc.setState(0x2db7, 0x106c, 0xd540, 0x98a, 0x3176, 0x1429, 0x1, 0x1);
        gbc.writeMem(0x2db7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x2db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00D8
        gbc.setState(0xe1b9, 0xbde9, 0x2000, 0x6b60, 0x8753, 0xf727, 0x0, 0x0);
        gbc.writeMem(0xe1b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0xe1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b9));
        EXPECT(0xc2, gbc.readMem(0xe1ba));
        // CB C2 00D9
        gbc.setState(0x9456, 0x20b2, 0x92a0, 0xb1e9, 0x4383, 0xd547, 0x1, 0x0);
        gbc.writeMem(0x9456, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x20b2, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9456));
        EXPECT(0xc2, gbc.readMem(0x9457));
        // CB C2 00DA
        gbc.setState(0xbff3, 0xdb72, 0x5890, 0xa376, 0xc9ee, 0x412, 0x0, 0x1);
        gbc.writeMem(0xbff3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdb72, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff3));
        EXPECT(0xc2, gbc.readMem(0xbff4));
        // CB C2 00DB
        gbc.setState(0x7137, 0x9ad3, 0x22a0, 0x3d57, 0xece3, 0x3cb7, 0x1, 0x1);
        gbc.writeMem(0x7137, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9ad3, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00DC
        gbc.setState(0x832a, 0xe91e, 0x8df0, 0xaa3, 0x21d6, 0xb06, 0x1, 0x1);
        gbc.writeMem(0x832a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832a));
        EXPECT(0xc2, gbc.readMem(0x832b));
        // CB C2 00DD
        gbc.setState(0x4746, 0xd312, 0x6130, 0x1e1f, 0x2a61, 0x420, 0x0, 0x1);
        gbc.writeMem(0x4746, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00DE
        gbc.setState(0x7793, 0x9f01, 0x6350, 0xae72, 0x6590, 0xbc9f, 0x0, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9f01, gbc.sp());
        EXPECT(0x7795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00DF
        gbc.setState(0x43ba, 0xf378, 0x8950, 0xde7e, 0x905e, 0xbfc0, 0x1, 0x0);
        gbc.writeMem(0x43ba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf378, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00E1
        gbc.setState(0xc935, 0x318b, 0x2810, 0x27ef, 0x9c79, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0xc935, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc935));
        EXPECT(0xc2, gbc.readMem(0xc936));
        // CB C2 00E2
        gbc.setState(0xa6b, 0xb1a8, 0x4f50, 0x143b, 0x625d, 0x4264, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb1a8, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00E3
        gbc.setState(0x5b80, 0x2dba, 0xd6c0, 0x3be9, 0xa0ba, 0xe830, 0x1, 0x1);
        gbc.writeMem(0x5b80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0x5b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00E4
        gbc.setState(0xa356, 0x592c, 0xd1c0, 0x21c9, 0x5da2, 0xb336, 0x0, 0x1);
        gbc.writeMem(0xa356, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa356));
        EXPECT(0xc2, gbc.readMem(0xa357));
        // CB C2 00E5
        gbc.setState(0x5801, 0xe8d8, 0xa0f0, 0x5539, 0xae6c, 0xf8ae, 0x0, 0x1);
        gbc.writeMem(0x5801, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe8d8, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00E6
        gbc.setState(0x3be2, 0xa707, 0xe2c0, 0x8fe, 0x7715, 0xe491, 0x1, 0x1);
        gbc.writeMem(0x3be2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0x3be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00E7
        gbc.setState(0x292c, 0x51da, 0xb560, 0x8f59, 0xf947, 0xfc34, 0x0, 0x0);
        gbc.writeMem(0x292c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x51da, gbc.sp());
        EXPECT(0x292e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00E8
        gbc.setState(0x9b74, 0xe307, 0x3c30, 0x8c51, 0x52dc, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe307, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b74));
        EXPECT(0xc2, gbc.readMem(0x9b75));
        // CB C2 00EA
        gbc.setState(0x1b6a, 0x2f20, 0x7c70, 0x16b6, 0xdf66, 0x6c36, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0x1b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00EB
        gbc.setState(0xb8fd, 0xacc4, 0x5fe0, 0x91e3, 0x46cd, 0xe5a9, 0x1, 0x1);
        gbc.writeMem(0xb8fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xacc4, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fd));
        EXPECT(0xc2, gbc.readMem(0xb8fe));
        // CB C2 00EC
        gbc.setState(0xc01, 0xdda5, 0x24c0, 0x33fe, 0x509d, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0xc01, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00ED
        gbc.setState(0xbea8, 0x3f42, 0xf040, 0x1004, 0xc2bb, 0x16f9, 0x1, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3f42, gbc.sp());
        EXPECT(0xbeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea8));
        EXPECT(0xc2, gbc.readMem(0xbea9));
        // CB C2 00EE
        gbc.setState(0xbd20, 0x108f, 0x6050, 0xeefb, 0xf796, 0x130a, 0x0, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd20));
        EXPECT(0xc2, gbc.readMem(0xbd21));
        // CB C2 00EF
        gbc.setState(0xb46b, 0x4047, 0xada0, 0x33e1, 0x4c09, 0x623d, 0x0, 0x1);
        gbc.writeMem(0xb46b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0xb46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46b));
        EXPECT(0xc2, gbc.readMem(0xb46c));
        // CB C2 00F0
        gbc.setState(0xb132, 0xb8bc, 0x15e0, 0x4a51, 0x29fa, 0xba38, 0x1, 0x0);
        gbc.writeMem(0xb132, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb8bc, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb132));
        EXPECT(0xc2, gbc.readMem(0xb133));
        // CB C2 00F1
        gbc.setState(0x2465, 0x9a4, 0xbb60, 0x7f4f, 0x414d, 0x28be, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9a4, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00F2
        gbc.setState(0xe649, 0x426d, 0x3b50, 0x9e7b, 0xb0ee, 0x6225, 0x0, 0x0);
        gbc.writeMem(0xe649, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x426d, gbc.sp());
        EXPECT(0xe64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe649));
        EXPECT(0xc2, gbc.readMem(0xe64a));
        // CB C2 00F3
        gbc.setState(0x2664, 0x5d0a, 0x9c0, 0x24f3, 0xea40, 0x1323, 0x0, 0x0);
        gbc.writeMem(0x2664, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0x2666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00F4
        gbc.setState(0xe4fe, 0x5935, 0xc850, 0x197a, 0x3a8e, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0xe4fe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fe));
        EXPECT(0xc2, gbc.readMem(0xe4ff));
        // CB C2 00F5
        gbc.setState(0x5ee7, 0xf299, 0x61f0, 0xc6ce, 0x8db2, 0xd3c5, 0x1, 0x0);
        gbc.writeMem(0x5ee7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf299, gbc.sp());
        EXPECT(0x5ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00F7
        gbc.setState(0xab70, 0x1aa5, 0x6320, 0x208, 0x2560, 0x945d, 0x0, 0x1);
        gbc.writeMem(0xab70, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1aa5, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab70));
        EXPECT(0xc2, gbc.readMem(0xab71));
        // CB C2 00F8
        gbc.setState(0xbecf, 0xf749, 0x39a0, 0x8fa7, 0x452d, 0x2511, 0x0, 0x1);
        gbc.writeMem(0xbecf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecf));
        EXPECT(0xc2, gbc.readMem(0xbed0));
        // CB C2 00F9
        gbc.setState(0xd51, 0x4d77, 0xb1b0, 0x6f8b, 0x8918, 0xcf88, 0x1, 0x1);
        gbc.writeMem(0xd51, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00FA
        gbc.setState(0x2f33, 0x1303, 0xb630, 0x6483, 0x7b8a, 0xf43f, 0x1, 0x0);
        gbc.writeMem(0x2f33, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x2f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00FB
        gbc.setState(0x5875, 0x3f6, 0x91b0, 0x5e72, 0x170c, 0x44ff, 0x1, 0x0);
        gbc.writeMem(0x5875, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3f6, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00FC
        gbc.setState(0x9916, 0xb576, 0xc490, 0x283b, 0xabf6, 0x559e, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb576, gbc.sp());
        EXPECT(0x9918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9916));
        EXPECT(0xc2, gbc.readMem(0x9917));
        // CB C2 00FD
        gbc.setState(0x6251, 0x8f90, 0x76d0, 0xeea1, 0xccd8, 0xfde4, 0x1, 0x0);
        gbc.writeMem(0x6251, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f90, gbc.sp());
        EXPECT(0x6253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 00FE
        gbc.setState(0x7b46, 0xbfb9, 0xd760, 0x7472, 0x12fb, 0x4f9a, 0x0, 0x1);
        gbc.writeMem(0x7b46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbfb9, gbc.sp());
        EXPECT(0x7b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 00FF
        gbc.setState(0xb18f, 0x6d7c, 0xf7a0, 0x75f4, 0xcf3c, 0xaf54, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18f));
        EXPECT(0xc2, gbc.readMem(0xb190));
        // CB C2 0100
        gbc.setState(0x99d0, 0x682e, 0x9e40, 0x734f, 0x22e4, 0x93b1, 0x1, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d0));
        EXPECT(0xc2, gbc.readMem(0x99d1));
        // CB C2 0101
        gbc.setState(0xb015, 0xe434, 0x3e90, 0x133f, 0xb60, 0x23f3, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0xb017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb015));
        EXPECT(0xc2, gbc.readMem(0xb016));
        // CB C2 0102
        gbc.setState(0x2734, 0x297b, 0x2010, 0x7375, 0xfb7c, 0xefb9, 0x1, 0x1);
        gbc.writeMem(0x2734, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0x2736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0103
        gbc.setState(0x998e, 0xa35e, 0xf2f0, 0x753a, 0x5313, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa35e, gbc.sp());
        EXPECT(0x9990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998e));
        EXPECT(0xc2, gbc.readMem(0x998f));
        // CB C2 0104
        gbc.setState(0x8b5c, 0x23c6, 0xedd0, 0x2f2a, 0xf35a, 0x3138, 0x0, 0x0);
        gbc.writeMem(0x8b5c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5c));
        EXPECT(0xc2, gbc.readMem(0x8b5d));
        // CB C2 0105
        gbc.setState(0x6fc6, 0xbb50, 0xcb70, 0xe59a, 0xe618, 0x3cdd, 0x0, 0x0);
        gbc.writeMem(0x6fc6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbb50, gbc.sp());
        EXPECT(0x6fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0106
        gbc.setState(0x7cb5, 0x3685, 0xeec0, 0x8e32, 0xf584, 0xa429, 0x1, 0x1);
        gbc.writeMem(0x7cb5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3685, gbc.sp());
        EXPECT(0x7cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0107
        gbc.setState(0xd973, 0x7580, 0xb150, 0x8a40, 0x57bb, 0x5927, 0x0, 0x1);
        gbc.writeMem(0xd973, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7580, gbc.sp());
        EXPECT(0xd975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd973));
        EXPECT(0xc2, gbc.readMem(0xd974));
        // CB C2 0108
        gbc.setState(0x9a67, 0x9645, 0xb650, 0xb4d0, 0x9eda, 0x33e3, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9645, gbc.sp());
        EXPECT(0x9a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a67));
        EXPECT(0xc2, gbc.readMem(0x9a68));
        // CB C2 0109
        gbc.setState(0x8cbc, 0x7e3e, 0x5900, 0xd4fb, 0x9c31, 0xada9, 0x1, 0x1);
        gbc.writeMem(0x8cbc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0x8cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbc));
        EXPECT(0xc2, gbc.readMem(0x8cbd));
        // CB C2 010A
        gbc.setState(0xb640, 0xeb51, 0x3020, 0x9f7c, 0x7573, 0x9d31, 0x1, 0x0);
        gbc.writeMem(0xb640, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeb51, gbc.sp());
        EXPECT(0xb642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb640));
        EXPECT(0xc2, gbc.readMem(0xb641));
        // CB C2 010C
        gbc.setState(0x65fb, 0xb145, 0x9600, 0x8596, 0x7054, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x65fb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 010D
        gbc.setState(0x6b73, 0x80a9, 0xb0a0, 0x7970, 0xd54b, 0xd75c, 0x0, 0x1);
        gbc.writeMem(0x6b73, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 010E
        gbc.setState(0x6f4d, 0x31ae, 0x91c0, 0xcbd3, 0x77e1, 0x4f31, 0x0, 0x0);
        gbc.writeMem(0x6f4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 010F
        gbc.setState(0x9cb, 0x3c39, 0x85c0, 0x20b4, 0xe341, 0x58da, 0x1, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3c39, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0110
        gbc.setState(0x3063, 0x1cd0, 0xf1b0, 0x5245, 0x92ec, 0x56c1, 0x0, 0x1);
        gbc.writeMem(0x3063, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1cd0, gbc.sp());
        EXPECT(0x3065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0111
        gbc.setState(0xe8cc, 0x6149, 0xf820, 0xc67c, 0x6b98, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0xe8cc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cc));
        EXPECT(0xc2, gbc.readMem(0xe8cd));
        // CB C2 0112
        gbc.setState(0x43bf, 0x6706, 0x8e50, 0x96d5, 0x3977, 0x365e, 0x1, 0x0);
        gbc.writeMem(0x43bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6706, gbc.sp());
        EXPECT(0x43c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0113
        gbc.setState(0x51cd, 0x277c, 0x3740, 0x9394, 0x2de2, 0x8ef7, 0x0, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x277c, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0114
        gbc.setState(0x79c9, 0xb3c8, 0xe290, 0x89c8, 0x15dc, 0xe2e6, 0x0, 0x1);
        gbc.writeMem(0x79c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0x79cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0115
        gbc.setState(0xc865, 0x8aff, 0x1c40, 0xe1a1, 0x4367, 0xb08a, 0x1, 0x1);
        gbc.writeMem(0xc865, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8aff, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc865));
        EXPECT(0xc2, gbc.readMem(0xc866));
        // CB C2 0116
        gbc.setState(0xe27f, 0x9215, 0xfa30, 0x5c94, 0x58eb, 0x9922, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9215, gbc.sp());
        EXPECT(0xe281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27f));
        EXPECT(0xc2, gbc.readMem(0xe280));
        // CB C2 0117
        gbc.setState(0x5209, 0x3642, 0xdd00, 0xb098, 0x8a80, 0x3927, 0x0, 0x0);
        gbc.writeMem(0x5209, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3642, gbc.sp());
        EXPECT(0x520b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0118
        gbc.setState(0x212c, 0xa888, 0x2260, 0x5a39, 0x38d7, 0xd27e, 0x0, 0x1);
        gbc.writeMem(0x212c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa888, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0119
        gbc.setState(0xa204, 0x1828, 0x8a20, 0x7cb8, 0x4f7c, 0x1915, 0x1, 0x1);
        gbc.writeMem(0xa204, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0xa206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa204));
        EXPECT(0xc2, gbc.readMem(0xa205));
        // CB C2 011A
        gbc.setState(0x7d8a, 0xc238, 0x3980, 0xad45, 0x91cf, 0xa13a, 0x0, 0x0);
        gbc.writeMem(0x7d8a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc238, gbc.sp());
        EXPECT(0x7d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 011B
        gbc.setState(0x1324, 0x8d6e, 0x8950, 0x3f2f, 0xc715, 0xb47d, 0x0, 0x1);
        gbc.writeMem(0x1324, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d6e, gbc.sp());
        EXPECT(0x1326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 011C
        gbc.setState(0xcc47, 0x182c, 0x1b80, 0x7e19, 0x2378, 0x6c0b, 0x1, 0x0);
        gbc.writeMem(0xcc47, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x182c, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc47));
        EXPECT(0xc2, gbc.readMem(0xcc48));
        // CB C2 011D
        gbc.setState(0xc0a8, 0xe202, 0x47a0, 0x8a9d, 0x927f, 0xbd6d, 0x1, 0x1);
        gbc.writeMem(0xc0a8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe202, gbc.sp());
        EXPECT(0xc0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a8));
        EXPECT(0xc2, gbc.readMem(0xc0a9));
        // CB C2 011E
        gbc.setState(0xa2c0, 0x6e57, 0xf180, 0xc41d, 0x895b, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0xa2c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e57, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c0));
        EXPECT(0xc2, gbc.readMem(0xa2c1));
        // CB C2 011F
        gbc.setState(0x9cbd, 0xa8f4, 0x3ba0, 0x181b, 0x7815, 0xf5a1, 0x1, 0x0);
        gbc.writeMem(0x9cbd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa8f4, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbd));
        EXPECT(0xc2, gbc.readMem(0x9cbe));
        // CB C2 0120
        gbc.setState(0x1316, 0x31cf, 0x5090, 0x52b4, 0x818a, 0x7625, 0x1, 0x1);
        gbc.writeMem(0x1316, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0121
        gbc.setState(0xe81e, 0xdb56, 0xea20, 0x1f90, 0xabbc, 0xc45, 0x0, 0x0);
        gbc.writeMem(0xe81e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0xe820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81e));
        EXPECT(0xc2, gbc.readMem(0xe81f));
        // CB C2 0122
        gbc.setState(0x2b7d, 0xeb7a, 0x49e0, 0x5e83, 0x7bfc, 0xc5db, 0x1, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xeb7a, gbc.sp());
        EXPECT(0x2b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0123
        gbc.setState(0x6872, 0xbe7b, 0xff00, 0x1742, 0xa24c, 0x2371, 0x1, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0124
        gbc.setState(0x31a1, 0xc0da, 0x4d30, 0x24b4, 0x8845, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x31a1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0x31a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0125
        gbc.setState(0x3f48, 0x5758, 0x5990, 0x6a8c, 0xfdeb, 0x8dab, 0x1, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0126
        gbc.setState(0xe5fe, 0xcd20, 0xdc40, 0xa575, 0x63dc, 0xd52b, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcd20, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0xc2, gbc.readMem(0xe5ff));
        // CB C2 0127
        gbc.setState(0x7add, 0xf24d, 0x8e70, 0xf2d9, 0xee59, 0x4f42, 0x0, 0x1);
        gbc.writeMem(0x7add, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf24d, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0128
        gbc.setState(0xef73, 0xd073, 0x86a0, 0xf507, 0x69f2, 0xe3fa, 0x1, 0x0);
        gbc.writeMem(0xef73, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd073, gbc.sp());
        EXPECT(0xef75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef73));
        EXPECT(0xc2, gbc.readMem(0xef74));
        // CB C2 0129
        gbc.setState(0x3c3e, 0xbbdd, 0xb490, 0xd308, 0xe5a6, 0x6ebb, 0x0, 0x1);
        gbc.writeMem(0x3c3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbbdd, gbc.sp());
        EXPECT(0x3c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 012A
        gbc.setState(0xae7, 0xec28, 0xdeb0, 0x595d, 0x2116, 0xfc28, 0x1, 0x0);
        gbc.writeMem(0xae7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0xae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 012B
        gbc.setState(0x511c, 0x5800, 0x1170, 0x8a7a, 0xcb53, 0xbba5, 0x0, 0x0);
        gbc.writeMem(0x511c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0x511e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 012C
        gbc.setState(0x994f, 0xb0a6, 0x4970, 0xd020, 0x2fda, 0x65bc, 0x0, 0x0);
        gbc.writeMem(0x994f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb0a6, gbc.sp());
        EXPECT(0x9951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994f));
        EXPECT(0xc2, gbc.readMem(0x9950));
        // CB C2 012D
        gbc.setState(0xeb08, 0xa34, 0xa2b0, 0x1dbe, 0xdacd, 0xcdd8, 0x1, 0x1);
        gbc.writeMem(0xeb08, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa34, gbc.sp());
        EXPECT(0xeb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb08));
        EXPECT(0xc2, gbc.readMem(0xeb09));
        // CB C2 012E
        gbc.setState(0xda98, 0x440f, 0x2eb0, 0x5260, 0xc752, 0xf1f1, 0x0, 0x0);
        gbc.writeMem(0xda98, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda98));
        EXPECT(0xc2, gbc.readMem(0xda99));
        // CB C2 012F
        gbc.setState(0x5ee0, 0xa111, 0x6000, 0x6ff4, 0x1d05, 0x2cb2, 0x1, 0x1);
        gbc.writeMem(0x5ee0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x5ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0130
        gbc.setState(0x9b7e, 0x7f3c, 0xd410, 0x67fa, 0x857c, 0xf54c, 0x0, 0x0);
        gbc.writeMem(0x9b7e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0x9b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7e));
        EXPECT(0xc2, gbc.readMem(0x9b7f));
        // CB C2 0131
        gbc.setState(0x4665, 0x4b98, 0x53b0, 0xe1f1, 0xd095, 0x6f2e, 0x1, 0x1);
        gbc.writeMem(0x4665, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4b98, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0132
        gbc.setState(0xab69, 0xb07, 0x9d20, 0xa8eb, 0xa42f, 0x3891, 0x0, 0x0);
        gbc.writeMem(0xab69, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb07, gbc.sp());
        EXPECT(0xab6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab69));
        EXPECT(0xc2, gbc.readMem(0xab6a));
        // CB C2 0133
        gbc.setState(0x2e47, 0x373f, 0xf650, 0x82c9, 0xfa93, 0xed0c, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x373f, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0134
        gbc.setState(0xaf36, 0x8e0d, 0xe170, 0x42dc, 0xafab, 0xea5c, 0x0, 0x1);
        gbc.writeMem(0xaf36, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8e0d, gbc.sp());
        EXPECT(0xaf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf36));
        EXPECT(0xc2, gbc.readMem(0xaf37));
        // CB C2 0135
        gbc.setState(0xdd8c, 0xd728, 0x4320, 0xc548, 0x16f5, 0x4b, 0x0, 0x1);
        gbc.writeMem(0xdd8c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd728, gbc.sp());
        EXPECT(0xdd8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8c));
        EXPECT(0xc2, gbc.readMem(0xdd8d));
        // CB C2 0136
        gbc.setState(0xc01d, 0xacdd, 0xca80, 0xdac5, 0x860c, 0x6f9c, 0x0, 0x0);
        gbc.writeMem(0xc01d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xacdd, gbc.sp());
        EXPECT(0xc01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01d));
        EXPECT(0xc2, gbc.readMem(0xc01e));
        // CB C2 0137
        gbc.setState(0x7457, 0x26c7, 0x8520, 0x158c, 0xd4c2, 0x530a, 0x0, 0x1);
        gbc.writeMem(0x7457, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x26c7, gbc.sp());
        EXPECT(0x7459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0138
        gbc.setState(0x1541, 0x8217, 0xbad0, 0xbf3e, 0x8ac7, 0x3cb3, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8217, gbc.sp());
        EXPECT(0x1543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0139
        gbc.setState(0x33ff, 0xb06d, 0x4370, 0x305f, 0x1328, 0x1d7a, 0x0, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb06d, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 013A
        gbc.setState(0x1826, 0xde47, 0x6890, 0xa139, 0x278c, 0xa47, 0x0, 0x0);
        gbc.writeMem(0x1826, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0x1828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 013B
        gbc.setState(0x33b6, 0xdaa1, 0x710, 0xbd45, 0x6421, 0x9268, 0x1, 0x0);
        gbc.writeMem(0x33b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdaa1, gbc.sp());
        EXPECT(0x33b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 013C
        gbc.setState(0x7758, 0x14e0, 0x8b50, 0x9ec8, 0x77b3, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0x7758, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x14e0, gbc.sp());
        EXPECT(0x775a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 013D
        gbc.setState(0x7d38, 0x30ab, 0x2a30, 0x171c, 0x9ef1, 0xe520, 0x0, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x30ab, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 013F
        gbc.setState(0x71bb, 0xa3d9, 0x9660, 0x2ec9, 0xd1b2, 0x69e7, 0x1, 0x1);
        gbc.writeMem(0x71bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa3d9, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0140
        gbc.setState(0xa295, 0xf64f, 0xf80, 0xff93, 0xcfb2, 0x42f0, 0x0, 0x0);
        gbc.writeMem(0xa295, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf64f, gbc.sp());
        EXPECT(0xa297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa295));
        EXPECT(0xc2, gbc.readMem(0xa296));
        // CB C2 0141
        gbc.setState(0xd29f, 0x7635, 0xffa0, 0xf25e, 0x17d2, 0xb288, 0x1, 0x1);
        gbc.writeMem(0xd29f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7635, gbc.sp());
        EXPECT(0xd2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29f));
        EXPECT(0xc2, gbc.readMem(0xd2a0));
        // CB C2 0142
        gbc.setState(0x3169, 0x6c5a, 0xb1d0, 0xf3fc, 0x1706, 0x30b0, 0x0, 0x0);
        gbc.writeMem(0x3169, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6c5a, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0143
        gbc.setState(0x324a, 0x5428, 0xc390, 0x17d6, 0x202a, 0x3ebf, 0x0, 0x1);
        gbc.writeMem(0x324a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5428, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0144
        gbc.setState(0xf9, 0xb09d, 0xd580, 0x41aa, 0x7f47, 0x3a3a, 0x0, 0x1);
        gbc.writeMem(0xf9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb09d, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0145
        gbc.setState(0xddb9, 0x435d, 0x4490, 0xf91, 0x20db, 0x5bd3, 0x1, 0x1);
        gbc.writeMem(0xddb9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x435d, gbc.sp());
        EXPECT(0xddbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb9));
        EXPECT(0xc2, gbc.readMem(0xddba));
        // CB C2 0146
        gbc.setState(0x5beb, 0xbb5, 0xb440, 0xd8a7, 0x8e21, 0x51e0, 0x1, 0x0);
        gbc.writeMem(0x5beb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbb5, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0147
        gbc.setState(0x33e6, 0x4885, 0x2e10, 0x13fe, 0xddc, 0xa93c, 0x1, 0x0);
        gbc.writeMem(0x33e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0148
        gbc.setState(0xb314, 0xc3d6, 0x1e30, 0x231f, 0xf0a6, 0x1bf, 0x0, 0x0);
        gbc.writeMem(0xb314, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc3d6, gbc.sp());
        EXPECT(0xb316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb314));
        EXPECT(0xc2, gbc.readMem(0xb315));
        // CB C2 0149
        gbc.setState(0x4cb7, 0x944b, 0xcb20, 0x595, 0x3bf1, 0xdc5d, 0x0, 0x0);
        gbc.writeMem(0x4cb7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0x4cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 014A
        gbc.setState(0x1174, 0xf4e1, 0x13e0, 0xccb4, 0xb41, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf4e1, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 014B
        gbc.setState(0xd48, 0xa5d5, 0xe260, 0x7247, 0x9853, 0xb675, 0x0, 0x1);
        gbc.writeMem(0xd48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa5d5, gbc.sp());
        EXPECT(0xd4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 014C
        gbc.setState(0x5d32, 0x1bb8, 0xff70, 0x62d4, 0x6a96, 0x2ac9, 0x0, 0x1);
        gbc.writeMem(0x5d32, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 014D
        gbc.setState(0x8685, 0x3027, 0xd380, 0x1813, 0x1e5, 0xda7a, 0x1, 0x1);
        gbc.writeMem(0x8685, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3027, gbc.sp());
        EXPECT(0x8687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8685));
        EXPECT(0xc2, gbc.readMem(0x8686));
        // CB C2 014E
        gbc.setState(0xe36d, 0xb1e0, 0xbed0, 0x929c, 0xcfa4, 0x92c2, 0x1, 0x1);
        gbc.writeMem(0xe36d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0xe36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36d));
        EXPECT(0xc2, gbc.readMem(0xe36e));
        // CB C2 014F
        gbc.setState(0xb0eb, 0x634f, 0xf820, 0x84b5, 0xafc1, 0xcf5f, 0x1, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x634f, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0eb));
        EXPECT(0xc2, gbc.readMem(0xb0ec));
        // CB C2 0150
        gbc.setState(0xc699, 0x2340, 0x5690, 0xbca6, 0x8bdd, 0x26ca, 0x0, 0x1);
        gbc.writeMem(0xc699, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc699));
        EXPECT(0xc2, gbc.readMem(0xc69a));
        // CB C2 0151
        gbc.setState(0x18cf, 0x28ff, 0x52a0, 0xe0ee, 0x2421, 0x2670, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0152
        gbc.setState(0x46e9, 0xb02d, 0x5120, 0xcb74, 0x8968, 0x2ab0, 0x1, 0x1);
        gbc.writeMem(0x46e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0153
        gbc.setState(0x7d8b, 0xa4e7, 0x2890, 0xa15f, 0x40fe, 0x1f80, 0x0, 0x1);
        gbc.writeMem(0x7d8b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa4e7, gbc.sp());
        EXPECT(0x7d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0154
        gbc.setState(0x91f4, 0x7b73, 0x9bf0, 0xd63d, 0xadb8, 0x8340, 0x0, 0x1);
        gbc.writeMem(0x91f4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7b73, gbc.sp());
        EXPECT(0x91f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f4));
        EXPECT(0xc2, gbc.readMem(0x91f5));
        // CB C2 0155
        gbc.setState(0x6856, 0x81a8, 0xfc90, 0xc7c5, 0x7dfc, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x6856, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0x6858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0156
        gbc.setState(0xb93c, 0xefa2, 0xc630, 0xef81, 0x2840, 0x4b48, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93c));
        EXPECT(0xc2, gbc.readMem(0xb93d));
        // CB C2 0157
        gbc.setState(0x1a48, 0xa792, 0xaa00, 0xca91, 0x94d1, 0xda64, 0x0, 0x1);
        gbc.writeMem(0x1a48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0158
        gbc.setState(0x9a85, 0xc12c, 0x5e0, 0x74b3, 0xfd4f, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0x9a85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a85));
        EXPECT(0xc2, gbc.readMem(0x9a86));
        // CB C2 0159
        gbc.setState(0xc620, 0xd4cb, 0x61d0, 0xeb5b, 0xd07b, 0x5153, 0x0, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd4cb, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc620));
        EXPECT(0xc2, gbc.readMem(0xc621));
        // CB C2 015A
        gbc.setState(0x6e45, 0xa9ae, 0x3be0, 0x8ab2, 0x96d0, 0xcb4a, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa9ae, gbc.sp());
        EXPECT(0x6e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 015B
        gbc.setState(0xec90, 0x4f95, 0xd000, 0x4d6e, 0xe8ad, 0x7089, 0x0, 0x1);
        gbc.writeMem(0xec90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4f95, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec90));
        EXPECT(0xc2, gbc.readMem(0xec91));
        // CB C2 015C
        gbc.setState(0x3c94, 0x8021, 0x8d50, 0xcf2e, 0x15d7, 0xd4ae, 0x0, 0x0);
        gbc.writeMem(0x3c94, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8021, gbc.sp());
        EXPECT(0x3c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 015E
        gbc.setState(0x6044, 0x69d7, 0x4370, 0x1bbe, 0xd9cf, 0x5df4, 0x1, 0x1);
        gbc.writeMem(0x6044, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x69d7, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 015F
        gbc.setState(0x19d4, 0xa6c4, 0xe150, 0xe40d, 0x8597, 0x4716, 0x1, 0x1);
        gbc.writeMem(0x19d4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa6c4, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0160
        gbc.setState(0x66f1, 0x25d2, 0x91c0, 0x2b3f, 0xcda1, 0x440b, 0x1, 0x1);
        gbc.writeMem(0x66f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0161
        gbc.setState(0x4501, 0x197d, 0xfd00, 0xa0a2, 0xde6f, 0x4335, 0x0, 0x0);
        gbc.writeMem(0x4501, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x197d, gbc.sp());
        EXPECT(0x4503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0162
        gbc.setState(0xa219, 0xe9c8, 0xa450, 0xd869, 0xe34b, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xa219, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe9c8, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa219));
        EXPECT(0xc2, gbc.readMem(0xa21a));
        // CB C2 0164
        gbc.setState(0x1ff5, 0x1eeb, 0x4720, 0xacd7, 0xa5b3, 0x85a8, 0x1, 0x0);
        gbc.writeMem(0x1ff5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1eeb, gbc.sp());
        EXPECT(0x1ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0165
        gbc.setState(0xac3d, 0x3f61, 0x32f0, 0x6a4f, 0x551, 0x5154, 0x1, 0x0);
        gbc.writeMem(0xac3d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3f61, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac3d));
        EXPECT(0xc2, gbc.readMem(0xac3e));
        // CB C2 0166
        gbc.setState(0xeca3, 0xd57d, 0xa540, 0xefaa, 0x74d8, 0xa988, 0x1, 0x0);
        gbc.writeMem(0xeca3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd57d, gbc.sp());
        EXPECT(0xeca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca3));
        EXPECT(0xc2, gbc.readMem(0xeca4));
        // CB C2 0167
        gbc.setState(0xd3ef, 0x8359, 0xec30, 0xdddb, 0x16b4, 0x1676, 0x0, 0x1);
        gbc.writeMem(0xd3ef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0xd3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ef));
        EXPECT(0xc2, gbc.readMem(0xd3f0));
        // CB C2 0168
        gbc.setState(0x6c1c, 0xaccf, 0x5e60, 0xb6b0, 0xe04d, 0xbddb, 0x1, 0x0);
        gbc.writeMem(0x6c1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaccf, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0169
        gbc.setState(0x5b62, 0xa515, 0xe8e0, 0xe751, 0xfd6d, 0xdaa9, 0x1, 0x1);
        gbc.writeMem(0x5b62, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa515, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 016A
        gbc.setState(0x48d5, 0x4b24, 0x66c0, 0xbf60, 0xc8cb, 0xaa05, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4b24, gbc.sp());
        EXPECT(0x48d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 016B
        gbc.setState(0xaef7, 0x82fc, 0xd950, 0xb2b0, 0x5970, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0xaef7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x82fc, gbc.sp());
        EXPECT(0xaef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef7));
        EXPECT(0xc2, gbc.readMem(0xaef8));
        // CB C2 016C
        gbc.setState(0x103d, 0x326f, 0xc870, 0x2ef, 0xd829, 0x5a53, 0x0, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x326f, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 016D
        gbc.setState(0xa3b1, 0x8245, 0xb690, 0x244a, 0x75ff, 0x8585, 0x0, 0x0);
        gbc.writeMem(0xa3b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b1));
        EXPECT(0xc2, gbc.readMem(0xa3b2));
        // CB C2 016E
        gbc.setState(0xc0b8, 0x694f, 0x6390, 0x1c03, 0xeaca, 0xeac8, 0x1, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b8));
        EXPECT(0xc2, gbc.readMem(0xc0b9));
        // CB C2 016F
        gbc.setState(0x1d17, 0x43f2, 0x8d00, 0xeb37, 0x3c79, 0x4735, 0x0, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x43f2, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0170
        gbc.setState(0xa067, 0xcae2, 0x3a30, 0x4001, 0x1827, 0xb68a, 0x0, 0x1);
        gbc.writeMem(0xa067, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0xa069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa067));
        EXPECT(0xc2, gbc.readMem(0xa068));
        // CB C2 0172
        gbc.setState(0x50f5, 0x3acf, 0x19a0, 0x94e2, 0xca8f, 0xbdf0, 0x0, 0x0);
        gbc.writeMem(0x50f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3acf, gbc.sp());
        EXPECT(0x50f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0173
        gbc.setState(0x5ceb, 0x4ba0, 0xcfa0, 0xc55c, 0x80f3, 0x707f, 0x1, 0x1);
        gbc.writeMem(0x5ceb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0x5ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0174
        gbc.setState(0x5f04, 0x40dd, 0xf400, 0x3ad3, 0xe5c9, 0x16d5, 0x0, 0x0);
        gbc.writeMem(0x5f04, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0x5f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0175
        gbc.setState(0xcdcb, 0x3728, 0x3020, 0x5a2e, 0x837d, 0x3371, 0x1, 0x0);
        gbc.writeMem(0xcdcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3728, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcb));
        EXPECT(0xc2, gbc.readMem(0xcdcc));
        // CB C2 0176
        gbc.setState(0xc1ac, 0xf6eb, 0x2f0, 0x1b4b, 0x395, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf6eb, gbc.sp());
        EXPECT(0xc1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ac));
        EXPECT(0xc2, gbc.readMem(0xc1ad));
        // CB C2 0178
        gbc.setState(0x4729, 0xd52d, 0xf280, 0xc50f, 0xae86, 0x2236, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd52d, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0179
        gbc.setState(0xe8b2, 0xd72b, 0x3140, 0xe641, 0xf954, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd72b, gbc.sp());
        EXPECT(0xe8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b2));
        EXPECT(0xc2, gbc.readMem(0xe8b3));
        // CB C2 017A
        gbc.setState(0xd7e2, 0x98f7, 0xd4a0, 0x4f6b, 0x66df, 0xe2df, 0x0, 0x1);
        gbc.writeMem(0xd7e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x98f7, gbc.sp());
        EXPECT(0xd7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e2));
        EXPECT(0xc2, gbc.readMem(0xd7e3));
        // CB C2 017B
        gbc.setState(0x1840, 0x961e, 0x7a0, 0xb503, 0xb239, 0x1d63, 0x1, 0x1);
        gbc.writeMem(0x1840, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x961e, gbc.sp());
        EXPECT(0x1842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 017C
        gbc.setState(0xad2e, 0x5822, 0x9890, 0xc03d, 0xab1e, 0xb5e4, 0x0, 0x0);
        gbc.writeMem(0xad2e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0xc2, gbc.readMem(0xad2f));
        // CB C2 017D
        gbc.setState(0xc8d6, 0xe46d, 0x7970, 0x84e8, 0xd2f6, 0xa68e, 0x0, 0x0);
        gbc.writeMem(0xc8d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe46d, gbc.sp());
        EXPECT(0xc8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d6));
        EXPECT(0xc2, gbc.readMem(0xc8d7));
        // CB C2 017E
        gbc.setState(0x39, 0xccfa, 0xc710, 0x2d48, 0xbb4f, 0x475e, 0x1, 0x0);
        gbc.writeMem(0x39, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xccfa, gbc.sp());
        EXPECT(0x3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 017F
        gbc.setState(0xbd2f, 0x6e36, 0x19f0, 0xbd1a, 0x4494, 0x141f, 0x0, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0xbd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2f));
        EXPECT(0xc2, gbc.readMem(0xbd30));
        // CB C2 0180
        gbc.setState(0xcd9d, 0xc07a, 0xa800, 0x742f, 0x2901, 0x475, 0x0, 0x0);
        gbc.writeMem(0xcd9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0xcd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9d));
        EXPECT(0xc2, gbc.readMem(0xcd9e));
        // CB C2 0181
        gbc.setState(0x806d, 0xe582, 0xea80, 0xf211, 0x2c82, 0x8071, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0xc2, gbc.readMem(0x806e));
        // CB C2 0182
        gbc.setState(0xe93d, 0xf0ed, 0x1610, 0x8a05, 0xbd5e, 0x577d, 0x0, 0x1);
        gbc.writeMem(0xe93d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf0ed, gbc.sp());
        EXPECT(0xe93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93d));
        EXPECT(0xc2, gbc.readMem(0xe93e));
        // CB C2 0183
        gbc.setState(0xb026, 0x2f45, 0xe900, 0xd3c2, 0x4557, 0xb996, 0x1, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0xb028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb026));
        EXPECT(0xc2, gbc.readMem(0xb027));
        // CB C2 0184
        gbc.setState(0x3f11, 0x6bff, 0x46a0, 0xd9ca, 0x8dcd, 0x2f76, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0185
        gbc.setState(0xbb77, 0xdd60, 0x76c0, 0x4302, 0x922, 0x8970, 0x0, 0x0);
        gbc.writeMem(0xbb77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdd60, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb77));
        EXPECT(0xc2, gbc.readMem(0xbb78));
        // CB C2 0186
        gbc.setState(0x7330, 0x501f, 0xe720, 0x13f6, 0x75db, 0x593, 0x0, 0x1);
        gbc.writeMem(0x7330, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x501f, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0187
        gbc.setState(0xa7bb, 0xa52d, 0x5af0, 0xa5ff, 0x23ad, 0xee28, 0x1, 0x1);
        gbc.writeMem(0xa7bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0xa7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bb));
        EXPECT(0xc2, gbc.readMem(0xa7bc));
        // CB C2 0188
        gbc.setState(0x304b, 0x4d73, 0x1c40, 0x4f45, 0x17c7, 0xddb0, 0x1, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0189
        gbc.setState(0x7f2b, 0x6f05, 0xacf0, 0xa90c, 0x1b80, 0xdc08, 0x1, 0x0);
        gbc.writeMem(0x7f2b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f05, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 018A
        gbc.setState(0xe1a7, 0xffdd, 0xda90, 0xa610, 0xa540, 0x325f, 0x0, 0x0);
        gbc.writeMem(0xe1a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0xe1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a7));
        EXPECT(0xc2, gbc.readMem(0xe1a8));
        // CB C2 018B
        gbc.setState(0x198d, 0x488a, 0x6390, 0x32d9, 0x88cd, 0x3c2a, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x488a, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 018C
        gbc.setState(0x922a, 0x6bc5, 0x82d0, 0x1246, 0x4bd7, 0x8db8, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6bc5, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922a));
        EXPECT(0xc2, gbc.readMem(0x922b));
        // CB C2 018D
        gbc.setState(0xe032, 0xb09f, 0xb760, 0xa402, 0x4785, 0x5c36, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe032));
        EXPECT(0xc2, gbc.readMem(0xe033));
        // CB C2 018E
        gbc.setState(0xa83f, 0x959c, 0x84f0, 0xfe21, 0x4a24, 0x28c2, 0x0, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x959c, gbc.sp());
        EXPECT(0xa841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83f));
        EXPECT(0xc2, gbc.readMem(0xa840));
        // CB C2 018F
        gbc.setState(0x8da6, 0x409a, 0x9090, 0x213d, 0x8231, 0x6db3, 0x1, 0x1);
        gbc.writeMem(0x8da6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x409a, gbc.sp());
        EXPECT(0x8da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da6));
        EXPECT(0xc2, gbc.readMem(0x8da7));
        // CB C2 0190
        gbc.setState(0x8b56, 0x560a, 0x8fb0, 0x702e, 0xc367, 0x1c49, 0x0, 0x1);
        gbc.writeMem(0x8b56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x560a, gbc.sp());
        EXPECT(0x8b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b56));
        EXPECT(0xc2, gbc.readMem(0x8b57));
        // CB C2 0191
        gbc.setState(0x4f92, 0xdd05, 0xfc40, 0xe179, 0xa75a, 0xaedb, 0x1, 0x1);
        gbc.writeMem(0x4f92, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdd05, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0192
        gbc.setState(0x72f1, 0x3346, 0xae10, 0x8953, 0x7c97, 0x375b, 0x0, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0x72f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0193
        gbc.setState(0xaa10, 0xf648, 0xf070, 0x82b1, 0x8c0c, 0x4ad7, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0xc2, gbc.readMem(0xaa11));
        // CB C2 0195
        gbc.setState(0x476c, 0xd32a, 0x54d0, 0x8665, 0x5d74, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd32a, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0196
        gbc.setState(0x984, 0x3192, 0xebf0, 0x8b8d, 0x7e22, 0x4713, 0x0, 0x0);
        gbc.writeMem(0x984, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3192, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0197
        gbc.setState(0x89b0, 0x931d, 0x5470, 0xaf81, 0x9987, 0xd5c7, 0x1, 0x1);
        gbc.writeMem(0x89b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x931d, gbc.sp());
        EXPECT(0x89b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b0));
        EXPECT(0xc2, gbc.readMem(0x89b1));
        // CB C2 0198
        gbc.setState(0x8557, 0xdcb9, 0x5dd0, 0x1c1d, 0x544b, 0x19c9, 0x1, 0x1);
        gbc.writeMem(0x8557, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0x8559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8557));
        EXPECT(0xc2, gbc.readMem(0x8558));
        // CB C2 0199
        gbc.setState(0xa379, 0x64d1, 0xb910, 0x6dd5, 0x593, 0x6633, 0x0, 0x0);
        gbc.writeMem(0xa379, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x64d1, gbc.sp());
        EXPECT(0xa37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa379));
        EXPECT(0xc2, gbc.readMem(0xa37a));
        // CB C2 019A
        gbc.setState(0xe14e, 0xee78, 0x1380, 0x607c, 0xeebb, 0x30d, 0x0, 0x1);
        gbc.writeMem(0xe14e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xee78, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14e));
        EXPECT(0xc2, gbc.readMem(0xe14f));
        // CB C2 019B
        gbc.setState(0x105a, 0x566a, 0xf7e0, 0xc1dc, 0xcb2e, 0x12be, 0x0, 0x0);
        gbc.writeMem(0x105a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x566a, gbc.sp());
        EXPECT(0x105c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 019C
        gbc.setState(0x1e86, 0x2749, 0x17b0, 0x9ff3, 0x7e56, 0x6290, 0x1, 0x0);
        gbc.writeMem(0x1e86, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2749, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 019D
        gbc.setState(0x3ea6, 0xc9c7, 0xfa10, 0x4670, 0x96db, 0x2b54, 0x1, 0x1);
        gbc.writeMem(0x3ea6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 019E
        gbc.setState(0x62db, 0x7e26, 0x3650, 0x4f0a, 0xe798, 0x40e3, 0x1, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 019F
        gbc.setState(0xe77f, 0xa6cb, 0x4570, 0x8f80, 0x441, 0xa749, 0x0, 0x0);
        gbc.writeMem(0xe77f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa6cb, gbc.sp());
        EXPECT(0xe781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77f));
        EXPECT(0xc2, gbc.readMem(0xe780));
        // CB C2 01A0
        gbc.setState(0x9fe9, 0xb38f, 0x5d60, 0x5543, 0xdab0, 0x76e5, 0x1, 0x0);
        gbc.writeMem(0x9fe9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb38f, gbc.sp());
        EXPECT(0x9feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe9));
        EXPECT(0xc2, gbc.readMem(0x9fea));
        // CB C2 01A1
        gbc.setState(0x329c, 0xdd9d, 0x9d60, 0x7974, 0xa5be, 0xd89c, 0x1, 0x1);
        gbc.writeMem(0x329c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdd9d, gbc.sp());
        EXPECT(0x329e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01A2
        gbc.setState(0x2234, 0x6b03, 0x9220, 0xdbc8, 0xa560, 0xbb3a, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01A3
        gbc.setState(0x344c, 0xf3ec, 0x1810, 0xa151, 0x5ab, 0x20ed, 0x1, 0x1);
        gbc.writeMem(0x344c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x344e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01A4
        gbc.setState(0x1930, 0x2d82, 0xe1f0, 0x8453, 0x59f1, 0xec33, 0x1, 0x0);
        gbc.writeMem(0x1930, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2d82, gbc.sp());
        EXPECT(0x1932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01A5
        gbc.setState(0xc21e, 0x9c4, 0x2990, 0x99b, 0x3be5, 0xcc5a, 0x1, 0x0);
        gbc.writeMem(0xc21e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0xc220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21e));
        EXPECT(0xc2, gbc.readMem(0xc21f));
        // CB C2 01A6
        gbc.setState(0x261c, 0x6698, 0x3e10, 0x6e97, 0x9cde, 0x59ae, 0x1, 0x0);
        gbc.writeMem(0x261c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6698, gbc.sp());
        EXPECT(0x261e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01A7
        gbc.setState(0xe71a, 0xdae8, 0x550, 0x8980, 0x723c, 0xb06e, 0x1, 0x1);
        gbc.writeMem(0xe71a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdae8, gbc.sp());
        EXPECT(0xe71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71a));
        EXPECT(0xc2, gbc.readMem(0xe71b));
        // CB C2 01A8
        gbc.setState(0xe111, 0x656a, 0x2280, 0x5593, 0xf2f6, 0xeeb8, 0x1, 0x1);
        gbc.writeMem(0xe111, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0xe113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe111));
        EXPECT(0xc2, gbc.readMem(0xe112));
        // CB C2 01A9
        gbc.setState(0xbe27, 0xf386, 0x7b10, 0x54ca, 0xa7b1, 0xe669, 0x0, 0x0);
        gbc.writeMem(0xbe27, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe27));
        EXPECT(0xc2, gbc.readMem(0xbe28));
        // CB C2 01AA
        gbc.setState(0x1fbd, 0x7a8f, 0x1130, 0x3766, 0x3672, 0x46f0, 0x1, 0x1);
        gbc.writeMem(0x1fbd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0x1fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01AB
        gbc.setState(0x46ba, 0x295c, 0xc210, 0xb848, 0x3b94, 0x512f, 0x1, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x295c, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01AE
        gbc.setState(0x51b9, 0xec1d, 0xd230, 0x9872, 0xc9f0, 0x255d, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xec1d, gbc.sp());
        EXPECT(0x51bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01B1
        gbc.setState(0x869b, 0xe114, 0x9510, 0xab0d, 0x6637, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x869b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0x869d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869b));
        EXPECT(0xc2, gbc.readMem(0x869c));
        // CB C2 01B2
        gbc.setState(0x7748, 0xbc68, 0xfa30, 0x3bfe, 0x895d, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x7748, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0x774a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01B3
        gbc.setState(0x75b1, 0x84a4, 0xe700, 0x8e48, 0xa507, 0x864a, 0x0, 0x1);
        gbc.writeMem(0x75b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x84a4, gbc.sp());
        EXPECT(0x75b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01B4
        gbc.setState(0x4e42, 0xaac5, 0x47e0, 0xa469, 0x5bc2, 0xbeb4, 0x0, 0x1);
        gbc.writeMem(0x4e42, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaac5, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01B5
        gbc.setState(0xe22e, 0xd779, 0xd450, 0x35a4, 0xc3e5, 0x779b, 0x1, 0x0);
        gbc.writeMem(0xe22e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0xe230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22e));
        EXPECT(0xc2, gbc.readMem(0xe22f));
        // CB C2 01B6
        gbc.setState(0x9ec2, 0x8b5d, 0x5ee0, 0xe975, 0x521b, 0x49e8, 0x1, 0x1);
        gbc.writeMem(0x9ec2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8b5d, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec2));
        EXPECT(0xc2, gbc.readMem(0x9ec3));
        // CB C2 01B7
        gbc.setState(0xbd24, 0xb439, 0xe110, 0x9563, 0xb108, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0xbd24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0xbd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd24));
        EXPECT(0xc2, gbc.readMem(0xbd25));
        // CB C2 01B8
        gbc.setState(0x6fd8, 0x2850, 0xa650, 0x63bf, 0x8175, 0x4bc2, 0x1, 0x0);
        gbc.writeMem(0x6fd8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01B9
        gbc.setState(0x804f, 0x4c5a, 0x4b30, 0xbf65, 0xd1f, 0x69ae, 0x0, 0x0);
        gbc.writeMem(0x804f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4c5a, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804f));
        EXPECT(0xc2, gbc.readMem(0x8050));
        // CB C2 01BA
        gbc.setState(0x14ed, 0xa27d, 0xd180, 0xe004, 0xd59b, 0x4928, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa27d, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01BB
        gbc.setState(0x76cd, 0x5aa6, 0xd5a0, 0x360, 0xc2d2, 0x1453, 0x0, 0x1);
        gbc.writeMem(0x76cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01BC
        gbc.setState(0x7a30, 0x1863, 0x85d0, 0xeb45, 0xb389, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x7a30, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1863, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01BD
        gbc.setState(0x52c9, 0xbe8, 0xe2b0, 0x5f88, 0xcccd, 0x752c, 0x0, 0x1);
        gbc.writeMem(0x52c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbe8, gbc.sp());
        EXPECT(0x52cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01BE
        gbc.setState(0x6348, 0x7893, 0xb420, 0x32f8, 0xbbe4, 0xf169, 0x0, 0x0);
        gbc.writeMem(0x6348, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7893, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01BF
        gbc.setState(0x7b65, 0x4e60, 0x14d0, 0xe038, 0xc482, 0xe22b, 0x1, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4e60, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01C0
        gbc.setState(0xd3a, 0xde8, 0x7520, 0x5861, 0xa00e, 0xb7cb, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xde8, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01C1
        gbc.setState(0x66d, 0xd404, 0xcee0, 0x6585, 0x62bd, 0x26f9, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0x66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01C2
        gbc.setState(0xf4d, 0x1806, 0xa0a0, 0xf935, 0x792f, 0x1041, 0x1, 0x0);
        gbc.writeMem(0xf4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1806, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01C3
        gbc.setState(0xb2f7, 0x2fcf, 0x2070, 0xead, 0xdc25, 0xb863, 0x1, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2fcf, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f7));
        EXPECT(0xc2, gbc.readMem(0xb2f8));
        // CB C2 01C4
        gbc.setState(0xd3ab, 0x5c9e, 0x7830, 0xd65d, 0xf69a, 0xb982, 0x0, 0x0);
        gbc.writeMem(0xd3ab, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5c9e, gbc.sp());
        EXPECT(0xd3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ab));
        EXPECT(0xc2, gbc.readMem(0xd3ac));
        // CB C2 01C5
        gbc.setState(0x3d0, 0x32cf, 0xf3c0, 0x2f21, 0x5da3, 0x6ad9, 0x0, 0x1);
        gbc.writeMem(0x3d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x32cf, gbc.sp());
        EXPECT(0x3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01C6
        gbc.setState(0x3274, 0xa296, 0xa9c0, 0xe606, 0xb6f5, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x3274, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa296, gbc.sp());
        EXPECT(0x3276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01C7
        gbc.setState(0xc4cb, 0x321d, 0xa750, 0x9e21, 0xe7ed, 0x1fb0, 0x1, 0x1);
        gbc.writeMem(0xc4cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x321d, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0xc2, gbc.readMem(0xc4cc));
        // CB C2 01C8
        gbc.setState(0x9820, 0xe10, 0x13d0, 0x73a0, 0x9eab, 0x2058, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe10, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9820));
        EXPECT(0xc2, gbc.readMem(0x9821));
        // CB C2 01C9
        gbc.setState(0xc9b7, 0x780a, 0xc1a0, 0x51f4, 0xb8b4, 0xa027, 0x0, 0x0);
        gbc.writeMem(0xc9b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x780a, gbc.sp());
        EXPECT(0xc9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b7));
        EXPECT(0xc2, gbc.readMem(0xc9b8));
        // CB C2 01CA
        gbc.setState(0x56de, 0x83d5, 0xac00, 0x1af9, 0xfbb6, 0x626c, 0x0, 0x0);
        gbc.writeMem(0x56de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x56e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01CB
        gbc.setState(0x635c, 0x32ad, 0xa1d0, 0x8241, 0x4b38, 0xa402, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0x635e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01CC
        gbc.setState(0x2bb8, 0xac91, 0xe950, 0xf713, 0x56e0, 0x6ebc, 0x1, 0x1);
        gbc.writeMem(0x2bb8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01CD
        gbc.setState(0x3f59, 0x9903, 0x3c00, 0x1a7a, 0x9298, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01CE
        gbc.setState(0xa3d1, 0x2484, 0xc8d0, 0x1f04, 0xe641, 0xd05d, 0x1, 0x1);
        gbc.writeMem(0xa3d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2484, gbc.sp());
        EXPECT(0xa3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d1));
        EXPECT(0xc2, gbc.readMem(0xa3d2));
        // CB C2 01CF
        gbc.setState(0x8173, 0x9e26, 0x2bf0, 0x12ed, 0x4643, 0x574b, 0x0, 0x0);
        gbc.writeMem(0x8173, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9e26, gbc.sp());
        EXPECT(0x8175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8173));
        EXPECT(0xc2, gbc.readMem(0x8174));
        // CB C2 01D0
        gbc.setState(0xbe4b, 0xa850, 0x7fc0, 0xff6, 0x12f6, 0xeea2, 0x0, 0x1);
        gbc.writeMem(0xbe4b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa850, gbc.sp());
        EXPECT(0xbe4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4b));
        EXPECT(0xc2, gbc.readMem(0xbe4c));
        // CB C2 01D1
        gbc.setState(0x9f40, 0x9936, 0xbdb0, 0xbe8d, 0xbb48, 0x59fc, 0x0, 0x1);
        gbc.writeMem(0x9f40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9936, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f40));
        EXPECT(0xc2, gbc.readMem(0x9f41));
        // CB C2 01D2
        gbc.setState(0x18d0, 0xa6ef, 0x2b50, 0xdbec, 0x7f43, 0x37cf, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01D3
        gbc.setState(0xd3c3, 0x4d75, 0x8e00, 0xa4ac, 0x3b19, 0x44dd, 0x0, 0x0);
        gbc.writeMem(0xd3c3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4d75, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0xc2, gbc.readMem(0xd3c4));
        // CB C2 01D4
        gbc.setState(0x5219, 0xf34c, 0x56d0, 0x7ec4, 0x5992, 0x3eb6, 0x1, 0x1);
        gbc.writeMem(0x5219, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x521b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01D6
        gbc.setState(0x8b88, 0x8c30, 0x73d0, 0x952c, 0x6a25, 0x4712, 0x0, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c30, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b88));
        EXPECT(0xc2, gbc.readMem(0x8b89));
        // CB C2 01D7
        gbc.setState(0xc90b, 0xa606, 0x8d50, 0x84f8, 0x458c, 0xaafd, 0x0, 0x1);
        gbc.writeMem(0xc90b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa606, gbc.sp());
        EXPECT(0xc90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90b));
        EXPECT(0xc2, gbc.readMem(0xc90c));
        // CB C2 01D8
        gbc.setState(0xaeca, 0x85f1, 0xd9e0, 0x9cb7, 0xa3e3, 0xcc35, 0x0, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x85f1, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeca));
        EXPECT(0xc2, gbc.readMem(0xaecb));
        // CB C2 01D9
        gbc.setState(0x7fb4, 0xc2e5, 0xe520, 0x82c0, 0x718b, 0x7490, 0x1, 0x0);
        gbc.writeMem(0x7fb4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc2e5, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01DA
        gbc.setState(0xb2ad, 0x6296, 0x6cb0, 0x4d04, 0x4d67, 0x49b2, 0x0, 0x0);
        gbc.writeMem(0xb2ad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6296, gbc.sp());
        EXPECT(0xb2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ad));
        EXPECT(0xc2, gbc.readMem(0xb2ae));
        // CB C2 01DB
        gbc.setState(0xbe8e, 0xfa93, 0xd0b0, 0x5499, 0x494, 0xe6d7, 0x0, 0x0);
        gbc.writeMem(0xbe8e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa93, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8e));
        EXPECT(0xc2, gbc.readMem(0xbe8f));
        // CB C2 01DC
        gbc.setState(0xa46c, 0xb3cd, 0x3530, 0x66c0, 0x16bf, 0xeff, 0x1, 0x0);
        gbc.writeMem(0xa46c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb3cd, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46c));
        EXPECT(0xc2, gbc.readMem(0xa46d));
        // CB C2 01DD
        gbc.setState(0xb91a, 0x4cb1, 0xd630, 0xe824, 0xd0f2, 0x2a77, 0x0, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4cb1, gbc.sp());
        EXPECT(0xb91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91a));
        EXPECT(0xc2, gbc.readMem(0xb91b));
        // CB C2 01DE
        gbc.setState(0x6d61, 0x456f, 0x50b0, 0x5c08, 0xa287, 0x3b1b, 0x0, 0x0);
        gbc.writeMem(0x6d61, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01DF
        gbc.setState(0x2b50, 0xc633, 0x2780, 0xc247, 0x5d3a, 0xad9, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc633, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01E0
        gbc.setState(0x469f, 0x8acd, 0x1b00, 0xab4e, 0xaf26, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0x469f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8acd, gbc.sp());
        EXPECT(0x46a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01E1
        gbc.setState(0x4df5, 0xfa35, 0xc040, 0xe3ca, 0x54da, 0x97c2, 0x0, 0x1);
        gbc.writeMem(0x4df5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfa35, gbc.sp());
        EXPECT(0x4df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01E2
        gbc.setState(0xb2b8, 0xc48f, 0x64c0, 0x3115, 0xa8a2, 0x6a94, 0x0, 0x0);
        gbc.writeMem(0xb2b8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc48f, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0xc2, gbc.readMem(0xb2b9));
        // CB C2 01E3
        gbc.setState(0xcc5f, 0x7b9, 0x9a40, 0xdd59, 0xe3, 0x2a47, 0x1, 0x0);
        gbc.writeMem(0xcc5f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7b9, gbc.sp());
        EXPECT(0xcc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5f));
        EXPECT(0xc2, gbc.readMem(0xcc60));
        // CB C2 01E4
        gbc.setState(0xbfc9, 0x2aa, 0x54f0, 0x7a08, 0xaeec, 0xe2ce, 0x1, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2aa, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0xc2, gbc.readMem(0xbfca));
        // CB C2 01E5
        gbc.setState(0xdf42, 0x1370, 0x44d0, 0x186e, 0x6ed8, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0xdf42, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1370, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf42));
        EXPECT(0xc2, gbc.readMem(0xdf43));
        // CB C2 01E6
        gbc.setState(0xd874, 0xcd05, 0xcf90, 0x65ee, 0xfd6b, 0xe1bb, 0x0, 0x1);
        gbc.writeMem(0xd874, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0xd876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd874));
        EXPECT(0xc2, gbc.readMem(0xd875));
        // CB C2 01E7
        gbc.setState(0x1b71, 0xcd4f, 0x17b0, 0x4e2b, 0x7aa, 0xbcea, 0x1, 0x1);
        gbc.writeMem(0x1b71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcd4f, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01E8
        gbc.setState(0xac90, 0x293a, 0xae90, 0xb12d, 0x9754, 0x8bce, 0x0, 0x0);
        gbc.writeMem(0xac90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x293a, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac90));
        EXPECT(0xc2, gbc.readMem(0xac91));
        // CB C2 01E9
        gbc.setState(0x6ad2, 0x30b8, 0x6fd0, 0x4df2, 0xf63f, 0x5944, 0x0, 0x0);
        gbc.writeMem(0x6ad2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x30b8, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01EA
        gbc.setState(0x33c7, 0x850f, 0xace0, 0x6e36, 0xd52e, 0x1a6d, 0x1, 0x0);
        gbc.writeMem(0x33c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0x33c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01EB
        gbc.setState(0x3f4a, 0x54fc, 0x1c0, 0x527a, 0xa012, 0x554a, 0x0, 0x1);
        gbc.writeMem(0x3f4a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x54fc, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01EC
        gbc.setState(0x20da, 0xddaf, 0x9240, 0x4630, 0x3dbf, 0x44af, 0x0, 0x1);
        gbc.writeMem(0x20da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xddaf, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01EF
        gbc.setState(0x6079, 0xc628, 0xd5b0, 0x8667, 0x57ea, 0x702, 0x0, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x607b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01F0
        gbc.setState(0xdb71, 0x2550, 0x79a0, 0xfb53, 0x1a9, 0xcb21, 0x1, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0xc2, gbc.readMem(0xdb72));
        // CB C2 01F1
        gbc.setState(0xa79c, 0x4eea, 0x1730, 0x8311, 0xf05b, 0xcadd, 0x1, 0x1);
        gbc.writeMem(0xa79c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79c));
        EXPECT(0xc2, gbc.readMem(0xa79d));
        // CB C2 01F2
        gbc.setState(0xada3, 0x5bc9, 0xe230, 0x5fd3, 0x552e, 0x55c4, 0x0, 0x0);
        gbc.writeMem(0xada3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0xada5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada3));
        EXPECT(0xc2, gbc.readMem(0xada4));
        // CB C2 01F3
        gbc.setState(0xad65, 0xa7aa, 0x68b0, 0x1992, 0xcc42, 0xd098, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa7aa, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad65));
        EXPECT(0xc2, gbc.readMem(0xad66));
        // CB C2 01F4
        gbc.setState(0x59eb, 0x9c09, 0xd10, 0xa06, 0x4dd3, 0xe065, 0x0, 0x1);
        gbc.writeMem(0x59eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c09, gbc.sp());
        EXPECT(0x59ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01F5
        gbc.setState(0x7bf, 0xfdc1, 0x4360, 0x1aec, 0x9f7b, 0x5584, 0x1, 0x0);
        gbc.writeMem(0x7bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01F6
        gbc.setState(0xbdcb, 0x1847, 0xfbb0, 0xc0c3, 0x9492, 0xa449, 0x1, 0x1);
        gbc.writeMem(0xbdcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcb));
        EXPECT(0xc2, gbc.readMem(0xbdcc));
        // CB C2 01F7
        gbc.setState(0x9626, 0xde4c, 0x250, 0xd636, 0xef5d, 0x9287, 0x0, 0x1);
        gbc.writeMem(0x9626, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9626));
        EXPECT(0xc2, gbc.readMem(0x9627));
        // CB C2 01F9
        gbc.setState(0xdffc, 0x1675, 0x9550, 0x7bd3, 0xfe71, 0x4e7a, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1675, gbc.sp());
        EXPECT(0xdffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdffc));
        EXPECT(0xc2, gbc.readMem(0xdffd));
        // CB C2 01FA
        gbc.setState(0x937, 0x71aa, 0x6880, 0x6524, 0x5dec, 0x717c, 0x1, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x71aa, gbc.sp());
        EXPECT(0x939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 01FB
        gbc.setState(0x673d, 0x8b2c, 0x4e10, 0xbd00, 0x84ae, 0x7772, 0x1, 0x1);
        gbc.writeMem(0x673d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8b2c, gbc.sp());
        EXPECT(0x673f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01FC
        gbc.setState(0xe2ac, 0xed1d, 0x2bf0, 0x636c, 0xa48f, 0x97f5, 0x1, 0x1);
        gbc.writeMem(0xe2ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ac));
        EXPECT(0xc2, gbc.readMem(0xe2ad));
        // CB C2 01FD
        gbc.setState(0x3c4, 0x962, 0x8cd0, 0xfc15, 0x3019, 0xa6bf, 0x0, 0x0);
        gbc.writeMem(0x3c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x962, gbc.sp());
        EXPECT(0x3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01FE
        gbc.setState(0x6395, 0xc624, 0xc70, 0xfb61, 0x16ae, 0xa487, 0x0, 0x1);
        gbc.writeMem(0x6395, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 01FF
        gbc.setState(0x6832, 0x7c8, 0xc50, 0x9a26, 0x6532, 0x1c18, 0x0, 0x1);
        gbc.writeMem(0x6832, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7c8, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0200
        gbc.setState(0x7dd2, 0x5190, 0xb690, 0x3e5a, 0x8a1a, 0x342a, 0x1, 0x1);
        gbc.writeMem(0x7dd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5190, gbc.sp());
        EXPECT(0x7dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0201
        gbc.setState(0xb087, 0xd368, 0x1450, 0xea31, 0xd0f5, 0x8628, 0x1, 0x1);
        gbc.writeMem(0xb087, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb087));
        EXPECT(0xc2, gbc.readMem(0xb088));
        // CB C2 0202
        gbc.setState(0xb2db, 0x9157, 0x4920, 0x9c57, 0x5fc7, 0xf4a6, 0x0, 0x0);
        gbc.writeMem(0xb2db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0xb2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2db));
        EXPECT(0xc2, gbc.readMem(0xb2dc));
        // CB C2 0203
        gbc.setState(0x6175, 0x921d, 0x9590, 0xe588, 0x5032, 0x95be, 0x0, 0x0);
        gbc.writeMem(0x6175, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x921d, gbc.sp());
        EXPECT(0x6177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0204
        gbc.setState(0xa3f2, 0xbece, 0x8810, 0x5a78, 0x3e93, 0x62a1, 0x0, 0x0);
        gbc.writeMem(0xa3f2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0xa3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f2));
        EXPECT(0xc2, gbc.readMem(0xa3f3));
        // CB C2 0205
        gbc.setState(0x8126, 0x8c07, 0x7970, 0x1bca, 0x314b, 0x6865, 0x0, 0x1);
        gbc.writeMem(0x8126, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x8128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8126));
        EXPECT(0xc2, gbc.readMem(0x8127));
        // CB C2 0206
        gbc.setState(0xacd, 0x4d31, 0xb40, 0x1460, 0xd7, 0xf255, 0x1, 0x0);
        gbc.writeMem(0xacd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4d31, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0207
        gbc.setState(0x136a, 0x5f17, 0x5310, 0x80d7, 0xbed1, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0x136a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5f17, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0208
        gbc.setState(0xaf7d, 0x35c, 0x1980, 0x871d, 0xb790, 0x4612, 0x1, 0x1);
        gbc.writeMem(0xaf7d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x35c, gbc.sp());
        EXPECT(0xaf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7d));
        EXPECT(0xc2, gbc.readMem(0xaf7e));
        // CB C2 0209
        gbc.setState(0xecbe, 0xcf55, 0x6640, 0xd0fc, 0x16e6, 0x6092, 0x1, 0x1);
        gbc.writeMem(0xecbe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0xecc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbe));
        EXPECT(0xc2, gbc.readMem(0xecbf));
        // CB C2 020A
        gbc.setState(0x52bc, 0x838, 0x4b80, 0xa935, 0x10bd, 0x8123, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x838, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 020B
        gbc.setState(0x353c, 0xe328, 0x45a0, 0x239, 0x49ef, 0x484d, 0x1, 0x0);
        gbc.writeMem(0x353c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe328, gbc.sp());
        EXPECT(0x353e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 020C
        gbc.setState(0x9a16, 0x7e00, 0x88a0, 0xd3db, 0x78b2, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0x9a16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7e00, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a16));
        EXPECT(0xc2, gbc.readMem(0x9a17));
        // CB C2 020D
        gbc.setState(0x6490, 0x50f7, 0xacc0, 0xb1d7, 0xe713, 0xd874, 0x0, 0x0);
        gbc.writeMem(0x6490, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x50f7, gbc.sp());
        EXPECT(0x6492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 020F
        gbc.setState(0x2061, 0xa737, 0xfed0, 0x5b67, 0x80cd, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x2061, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0x2063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0210
        gbc.setState(0x3237, 0xf623, 0x1f20, 0xb88, 0xa786, 0x6c41, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf623, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0211
        gbc.setState(0xdc51, 0xe2eb, 0xfe40, 0x72a8, 0xc3d6, 0x4ec8, 0x1, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc51));
        EXPECT(0xc2, gbc.readMem(0xdc52));
        // CB C2 0212
        gbc.setState(0xa89d, 0x87fd, 0xc1d0, 0xd7d0, 0x1bac, 0xe66c, 0x0, 0x0);
        gbc.writeMem(0xa89d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0xa89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89d));
        EXPECT(0xc2, gbc.readMem(0xa89e));
        // CB C2 0213
        gbc.setState(0x24a8, 0x1260, 0x3b00, 0x97fa, 0xed0c, 0x94a1, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0214
        gbc.setState(0xa450, 0x82d4, 0x5970, 0x9254, 0x118a, 0x6d50, 0x1, 0x1);
        gbc.writeMem(0xa450, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x82d4, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa450));
        EXPECT(0xc2, gbc.readMem(0xa451));
        // CB C2 0215
        gbc.setState(0x5893, 0xc8a, 0x8390, 0xdc43, 0xb432, 0x9a3f, 0x1, 0x0);
        gbc.writeMem(0x5893, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0216
        gbc.setState(0xef18, 0x3ac3, 0xb780, 0x6464, 0x80ef, 0xa4ad, 0x0, 0x0);
        gbc.writeMem(0xef18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3ac3, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef18));
        EXPECT(0xc2, gbc.readMem(0xef19));
        // CB C2 0217
        gbc.setState(0x792d, 0x42d6, 0x5600, 0x4b2c, 0xad3e, 0x6feb, 0x0, 0x1);
        gbc.writeMem(0x792d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x42d6, gbc.sp());
        EXPECT(0x792f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0218
        gbc.setState(0x972b, 0x8145, 0x9a0, 0x37d8, 0xff14, 0x6e15, 0x0, 0x0);
        gbc.writeMem(0x972b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8145, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972b));
        EXPECT(0xc2, gbc.readMem(0x972c));
        // CB C2 0219
        gbc.setState(0xd990, 0x921e, 0xa80, 0xdb0d, 0xec00, 0x6b30, 0x0, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0xd992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd990));
        EXPECT(0xc2, gbc.readMem(0xd991));
        // CB C2 021A
        gbc.setState(0xdc38, 0xdb47, 0xe7c0, 0xa01a, 0x2f30, 0xa24e, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc38));
        EXPECT(0xc2, gbc.readMem(0xdc39));
        // CB C2 021B
        gbc.setState(0xf6c, 0xbb02, 0x3b70, 0x8373, 0xec82, 0x3612, 0x0, 0x0);
        gbc.writeMem(0xf6c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 021C
        gbc.setState(0x8f89, 0x7422, 0x5850, 0xdcad, 0x8e14, 0x146f, 0x0, 0x0);
        gbc.writeMem(0x8f89, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x8f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f89));
        EXPECT(0xc2, gbc.readMem(0x8f8a));
        // CB C2 021D
        gbc.setState(0xbc18, 0x90eb, 0xaa50, 0x5484, 0xdbdf, 0xf300, 0x0, 0x0);
        gbc.writeMem(0xbc18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0xbc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc18));
        EXPECT(0xc2, gbc.readMem(0xbc19));
        // CB C2 021E
        gbc.setState(0x473c, 0x2b12, 0x6990, 0x3bcd, 0xfa07, 0x9b5, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2b12, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 021F
        gbc.setState(0x5b7, 0xdd5a, 0xabb0, 0x51a8, 0x5805, 0xebec, 0x1, 0x0);
        gbc.writeMem(0x5b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdd5a, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0220
        gbc.setState(0x985e, 0xc756, 0x30f0, 0x984, 0xace0, 0x8212, 0x1, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc756, gbc.sp());
        EXPECT(0x9860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985e));
        EXPECT(0xc2, gbc.readMem(0x985f));
        // CB C2 0221
        gbc.setState(0xb4ce, 0x337f, 0x3220, 0x44a8, 0x5fc5, 0x3ed3, 0x1, 0x0);
        gbc.writeMem(0xb4ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x337f, gbc.sp());
        EXPECT(0xb4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ce));
        EXPECT(0xc2, gbc.readMem(0xb4cf));
        // CB C2 0222
        gbc.setState(0x580f, 0xf4f0, 0x6e10, 0x9354, 0xf23c, 0x9422, 0x1, 0x1);
        gbc.writeMem(0x580f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0224
        gbc.setState(0xd503, 0xb0c6, 0x9060, 0x3ad4, 0xcf83, 0xb2cb, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb0c6, gbc.sp());
        EXPECT(0xd505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd503));
        EXPECT(0xc2, gbc.readMem(0xd504));
        // CB C2 0225
        gbc.setState(0x72ca, 0x2896, 0xe420, 0xc76c, 0x1f40, 0xc0cc, 0x0, 0x0);
        gbc.writeMem(0x72ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0x72cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0226
        gbc.setState(0xb595, 0x647, 0x4f00, 0xa31, 0x2d00, 0xb98e, 0x1, 0x1);
        gbc.writeMem(0xb595, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0xb597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb595));
        EXPECT(0xc2, gbc.readMem(0xb596));
        // CB C2 0227
        gbc.setState(0xab1c, 0x9af4, 0x7400, 0xac46, 0xc871, 0x447d, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1c));
        EXPECT(0xc2, gbc.readMem(0xab1d));
        // CB C2 0228
        gbc.setState(0x767b, 0x447c, 0x49f0, 0x5dfa, 0xffda, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0x767b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x447c, gbc.sp());
        EXPECT(0x767d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0229
        gbc.setState(0x4c12, 0xc37e, 0xda30, 0x617, 0x3ce0, 0x7822, 0x1, 0x0);
        gbc.writeMem(0x4c12, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0x4c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 022A
        gbc.setState(0xed0, 0xc02a, 0xa680, 0x2a9c, 0x7018, 0x5cbf, 0x1, 0x1);
        gbc.writeMem(0xed0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc02a, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 022B
        gbc.setState(0x82e0, 0x7ea9, 0x2e80, 0x9f4f, 0xfa3a, 0xc9c1, 0x0, 0x0);
        gbc.writeMem(0x82e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7ea9, gbc.sp());
        EXPECT(0x82e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e0));
        EXPECT(0xc2, gbc.readMem(0x82e1));
        // CB C2 022C
        gbc.setState(0x688f, 0xd59c, 0x3de0, 0x61ef, 0x5a89, 0xa791, 0x0, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 022D
        gbc.setState(0x702b, 0xaf22, 0x8170, 0x43b8, 0xb11, 0xa5b0, 0x1, 0x1);
        gbc.writeMem(0x702b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 022E
        gbc.setState(0x62b6, 0xe918, 0xc6e0, 0xe007, 0x8721, 0x1395, 0x1, 0x0);
        gbc.writeMem(0x62b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 022F
        gbc.setState(0xcb71, 0x864c, 0x8560, 0xb8ed, 0xd99, 0x3f5b, 0x0, 0x0);
        gbc.writeMem(0xcb71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x864c, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb71));
        EXPECT(0xc2, gbc.readMem(0xcb72));
        // CB C2 0230
        gbc.setState(0x5c1f, 0x2b1e, 0x5e70, 0x3cb6, 0xf7bb, 0x7fcd, 0x0, 0x1);
        gbc.writeMem(0x5c1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0x5c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0231
        gbc.setState(0x4eaa, 0xf355, 0x1b50, 0xc717, 0x3e94, 0x7cd, 0x1, 0x0);
        gbc.writeMem(0x4eaa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0232
        gbc.setState(0x8801, 0xbbb7, 0x8980, 0x9930, 0xedf7, 0xf520, 0x1, 0x0);
        gbc.writeMem(0x8801, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x8803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8801));
        EXPECT(0xc2, gbc.readMem(0x8802));
        // CB C2 0233
        gbc.setState(0x1de3, 0x7258, 0x4a20, 0xd8b8, 0xeeee, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0x1de3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7258, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0234
        gbc.setState(0x5762, 0xcc4d, 0xa920, 0x6e9b, 0xf29d, 0xb46, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0235
        gbc.setState(0xae33, 0x94e8, 0x8710, 0xd826, 0x9967, 0xc5e, 0x0, 0x0);
        gbc.writeMem(0xae33, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x94e8, gbc.sp());
        EXPECT(0xae35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae33));
        EXPECT(0xc2, gbc.readMem(0xae34));
        // CB C2 0236
        gbc.setState(0xd116, 0x3624, 0xaef0, 0x9b9e, 0x97eb, 0xed3c, 0x1, 0x1);
        gbc.writeMem(0xd116, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0xd118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd116));
        EXPECT(0xc2, gbc.readMem(0xd117));
        // CB C2 0237
        gbc.setState(0xaa39, 0xdcf1, 0x3780, 0xa3a1, 0x80f6, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0xaa39, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0xaa3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa39));
        EXPECT(0xc2, gbc.readMem(0xaa3a));
        // CB C2 0238
        gbc.setState(0xafde, 0x836b, 0x54c0, 0x59c, 0x1681, 0x7721, 0x0, 0x1);
        gbc.writeMem(0xafde, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x836b, gbc.sp());
        EXPECT(0xafe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafde));
        EXPECT(0xc2, gbc.readMem(0xafdf));
        // CB C2 0239
        gbc.setState(0x2f37, 0xf64e, 0xd2a0, 0x1f77, 0xec95, 0x4225, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0x2f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 023A
        gbc.setState(0x14b9, 0x481b, 0x6e0, 0xd033, 0xde2f, 0xe1bd, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x481b, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 023B
        gbc.setState(0x5118, 0x978, 0x2b30, 0xca03, 0xb501, 0xc6e8, 0x0, 0x1);
        gbc.writeMem(0x5118, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x978, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 023C
        gbc.setState(0xbd0, 0x453e, 0x89e0, 0xacbd, 0x1c8e, 0xa58, 0x1, 0x1);
        gbc.writeMem(0xbd0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x453e, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 023D
        gbc.setState(0x8424, 0x3c5c, 0x7940, 0x9db4, 0x8c74, 0x1d56, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8424));
        EXPECT(0xc2, gbc.readMem(0x8425));
        // CB C2 023E
        gbc.setState(0x1ea0, 0x782c, 0xd350, 0x63e9, 0x76b5, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0x1ea0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x782c, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 023F
        gbc.setState(0x43d8, 0x9cd7, 0xa420, 0x50ef, 0xf3ef, 0x5848, 0x0, 0x1);
        gbc.writeMem(0x43d8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0x43da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0240
        gbc.setState(0xee46, 0x8901, 0xe160, 0xe14f, 0x7d86, 0x25bd, 0x1, 0x1);
        gbc.writeMem(0xee46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0xee48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee46));
        EXPECT(0xc2, gbc.readMem(0xee47));
        // CB C2 0241
        gbc.setState(0x8556, 0x4a9a, 0xda60, 0xe94c, 0x2952, 0xc363, 0x1, 0x1);
        gbc.writeMem(0x8556, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4a9a, gbc.sp());
        EXPECT(0x8558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8556));
        EXPECT(0xc2, gbc.readMem(0x8557));
        // CB C2 0242
        gbc.setState(0x1a43, 0xd178, 0x5b50, 0x568a, 0xbb3b, 0x5074, 0x1, 0x1);
        gbc.writeMem(0x1a43, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0x1a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0243
        gbc.setState(0x8c07, 0x1128, 0x7a50, 0x7802, 0xf103, 0x6096, 0x1, 0x1);
        gbc.writeMem(0x8c07, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x8c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c07));
        EXPECT(0xc2, gbc.readMem(0x8c08));
        // CB C2 0244
        gbc.setState(0x7e80, 0x6fa9, 0x8b60, 0x1cbe, 0x4362, 0xb458, 0x1, 0x0);
        gbc.writeMem(0x7e80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6fa9, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0245
        gbc.setState(0x6493, 0x85f4, 0x32d0, 0x9f83, 0x965, 0xc5cf, 0x1, 0x0);
        gbc.writeMem(0x6493, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x85f4, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0246
        gbc.setState(0xace0, 0xe8e0, 0x6d10, 0x87ec, 0xd8b5, 0x4d9f, 0x1, 0x0);
        gbc.writeMem(0xace0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe8e0, gbc.sp());
        EXPECT(0xace2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace0));
        EXPECT(0xc2, gbc.readMem(0xace1));
        // CB C2 0247
        gbc.setState(0xd9cf, 0xcdba, 0x6220, 0x9a19, 0x7c33, 0x81e5, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cf));
        EXPECT(0xc2, gbc.readMem(0xd9d0));
        // CB C2 0248
        gbc.setState(0x42fc, 0x7035, 0x9450, 0x7218, 0x949e, 0x7cca, 0x1, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7035, gbc.sp());
        EXPECT(0x42fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0249
        gbc.setState(0x160d, 0x21c8, 0xcc40, 0x3bf, 0x9a94, 0xb981, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x160f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 024A
        gbc.setState(0x7e0, 0x2db6, 0x7100, 0x5309, 0xd664, 0xbafd, 0x0, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0x7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 024B
        gbc.setState(0x3906, 0xe920, 0x35f0, 0x4197, 0x9833, 0xebee, 0x0, 0x0);
        gbc.writeMem(0x3906, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0x3908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 024C
        gbc.setState(0x8b94, 0x79cf, 0x8790, 0x6c4, 0x36dc, 0xc855, 0x1, 0x0);
        gbc.writeMem(0x8b94, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b94));
        EXPECT(0xc2, gbc.readMem(0x8b95));
        // CB C2 024D
        gbc.setState(0x7151, 0x9835, 0xe550, 0x771b, 0x74c0, 0xdfad, 0x0, 0x0);
        gbc.writeMem(0x7151, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9835, gbc.sp());
        EXPECT(0x7153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 024E
        gbc.setState(0xb576, 0x4c7f, 0xcf10, 0xb286, 0x897c, 0x3836, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0xb578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb576));
        EXPECT(0xc2, gbc.readMem(0xb577));
        // CB C2 024F
        gbc.setState(0xe38d, 0x80b6, 0x1410, 0x782c, 0x8c4b, 0xd40, 0x0, 0x1);
        gbc.writeMem(0xe38d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0xe38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38d));
        EXPECT(0xc2, gbc.readMem(0xe38e));
        // CB C2 0250
        gbc.setState(0x1eb6, 0x1641, 0x9cb0, 0x5e5, 0xf13d, 0x5720, 0x0, 0x0);
        gbc.writeMem(0x1eb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x1eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0252
        gbc.setState(0xd1a5, 0x6ef0, 0x7400, 0x17d0, 0x5e8b, 0x4f08, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6ef0, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xc2, gbc.readMem(0xd1a6));
        // CB C2 0253
        gbc.setState(0xcb56, 0x7de1, 0x25d0, 0xbb03, 0x1d32, 0xab66, 0x0, 0x1);
        gbc.writeMem(0xcb56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7de1, gbc.sp());
        EXPECT(0xcb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb56));
        EXPECT(0xc2, gbc.readMem(0xcb57));
        // CB C2 0254
        gbc.setState(0x646c, 0xa25, 0x7090, 0x66d4, 0x2e9e, 0xe749, 0x0, 0x1);
        gbc.writeMem(0x646c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x646e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0256
        gbc.setState(0x3f, 0x3eda, 0x63a0, 0x3902, 0x2878, 0x36cf, 0x1, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3eda, gbc.sp());
        EXPECT(0x41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0257
        gbc.setState(0xa473, 0xaaa5, 0x2a80, 0xfdbe, 0x9a15, 0x408f, 0x0, 0x1);
        gbc.writeMem(0xa473, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa473));
        EXPECT(0xc2, gbc.readMem(0xa474));
        // CB C2 0258
        gbc.setState(0x5ca4, 0x2982, 0x5620, 0xfece, 0xf5e6, 0xc77b, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2982, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0259
        gbc.setState(0x3d40, 0xd214, 0x76b0, 0x1059, 0x2931, 0xa5fa, 0x1, 0x0);
        gbc.writeMem(0x3d40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd214, gbc.sp());
        EXPECT(0x3d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 025A
        gbc.setState(0x95e3, 0xa8f3, 0x4830, 0x94d, 0xc453, 0x745f, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8f3, gbc.sp());
        EXPECT(0x95e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e3));
        EXPECT(0xc2, gbc.readMem(0x95e4));
        // CB C2 025B
        gbc.setState(0x9cd2, 0xfe3f, 0xa500, 0x1887, 0x85b1, 0x7d77, 0x1, 0x1);
        gbc.writeMem(0x9cd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfe3f, gbc.sp());
        EXPECT(0x9cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd2));
        EXPECT(0xc2, gbc.readMem(0x9cd3));
        // CB C2 025C
        gbc.setState(0x2db, 0xe954, 0x3520, 0xfbdc, 0xcf7f, 0xc5d2, 0x1, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 025D
        gbc.setState(0x2e8, 0x5a86, 0xd430, 0x8f65, 0x9688, 0x715c, 0x1, 0x0);
        gbc.writeMem(0x2e8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5a86, gbc.sp());
        EXPECT(0x2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 025E
        gbc.setState(0x8a1f, 0x670d, 0x8c80, 0x6529, 0xebd3, 0xdbfb, 0x1, 0x0);
        gbc.writeMem(0x8a1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1f));
        EXPECT(0xc2, gbc.readMem(0x8a20));
        // CB C2 025F
        gbc.setState(0xb645, 0xadc0, 0xf1f0, 0x8425, 0x29b0, 0x5cc8, 0x0, 0x1);
        gbc.writeMem(0xb645, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xadc0, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb645));
        EXPECT(0xc2, gbc.readMem(0xb646));
        // CB C2 0260
        gbc.setState(0x49da, 0xac09, 0x9230, 0x227c, 0x1060, 0xa748, 0x0, 0x0);
        gbc.writeMem(0x49da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xac09, gbc.sp());
        EXPECT(0x49dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0261
        gbc.setState(0x10a5, 0x85fc, 0xf640, 0xa519, 0x99dd, 0x8154, 0x0, 0x0);
        gbc.writeMem(0x10a5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0x10a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0262
        gbc.setState(0xead7, 0x745, 0x74d0, 0x23e0, 0x4443, 0x3aaa, 0x1, 0x0);
        gbc.writeMem(0xead7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x745, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead7));
        EXPECT(0xc2, gbc.readMem(0xead8));
        // CB C2 0263
        gbc.setState(0x60e, 0x4949, 0x76b0, 0x2832, 0x71a1, 0x4182, 0x1, 0x0);
        gbc.writeMem(0x60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4949, gbc.sp());
        EXPECT(0x610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0264
        gbc.setState(0x5b75, 0x9086, 0x5560, 0xc22e, 0xc06b, 0xe2d9, 0x0, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9086, gbc.sp());
        EXPECT(0x5b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0265
        gbc.setState(0x8435, 0x17ed, 0xd070, 0x5c16, 0x8316, 0xca35, 0x1, 0x0);
        gbc.writeMem(0x8435, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x17ed, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8435));
        EXPECT(0xc2, gbc.readMem(0x8436));
        // CB C2 0266
        gbc.setState(0x417e, 0xf3eb, 0xd6b0, 0x4a88, 0xec9c, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x417e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3eb, gbc.sp());
        EXPECT(0x4180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0267
        gbc.setState(0x3da6, 0x96f6, 0x6230, 0x4c19, 0x7b8c, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x96f6, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0268
        gbc.setState(0x380d, 0xe837, 0x2f40, 0x1d6a, 0xac28, 0x269d, 0x1, 0x1);
        gbc.writeMem(0x380d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe837, gbc.sp());
        EXPECT(0x380f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0269
        gbc.setState(0x763d, 0xcb6a, 0x5930, 0x6fac, 0x518f, 0x5e39, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x763f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 026A
        gbc.setState(0xb474, 0x8866, 0xa000, 0xe576, 0x3e, 0x7bc4, 0x0, 0x1);
        gbc.writeMem(0xb474, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0xb476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb474));
        EXPECT(0xc2, gbc.readMem(0xb475));
        // CB C2 026B
        gbc.setState(0x8ef2, 0xb2d1, 0x1c90, 0x2ebf, 0xb6e0, 0x223c, 0x0, 0x1);
        gbc.writeMem(0x8ef2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef2));
        EXPECT(0xc2, gbc.readMem(0x8ef3));
        // CB C2 026C
        gbc.setState(0x7b3, 0xe7cd, 0x700, 0xdd77, 0x3cfd, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x7b3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 026D
        gbc.setState(0x21e9, 0xc784, 0x600, 0xcb5c, 0xcfe6, 0x8743, 0x1, 0x1);
        gbc.writeMem(0x21e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc784, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 026E
        gbc.setState(0xd017, 0xf87c, 0x4c00, 0x303b, 0x10cc, 0x3127, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf87c, gbc.sp());
        EXPECT(0xd019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd017));
        EXPECT(0xc2, gbc.readMem(0xd018));
        // CB C2 026F
        gbc.setState(0xb5ff, 0x8763, 0x1530, 0x7309, 0x69d0, 0xea4f, 0x0, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0xc2, gbc.readMem(0xb600));
        // CB C2 0270
        gbc.setState(0x7cef, 0x2d06, 0x1920, 0x646b, 0x30ee, 0xb1dd, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d06, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0271
        gbc.setState(0x73d1, 0xbdbc, 0x5fc0, 0x7444, 0x789a, 0x3084, 0x1, 0x1);
        gbc.writeMem(0x73d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0273
        gbc.setState(0xbf6d, 0x3d0, 0x510, 0xc461, 0x73df, 0xd49e, 0x1, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6d));
        EXPECT(0xc2, gbc.readMem(0xbf6e));
        // CB C2 0274
        gbc.setState(0xbecd, 0xe1bd, 0xe600, 0x169e, 0xd9d5, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0xbecd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0xbecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecd));
        EXPECT(0xc2, gbc.readMem(0xbece));
        // CB C2 0275
        gbc.setState(0x288c, 0xf05e, 0x8910, 0x1554, 0xd121, 0xb186, 0x0, 0x0);
        gbc.writeMem(0x288c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf05e, gbc.sp());
        EXPECT(0x288e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0276
        gbc.setState(0x83fa, 0x9a16, 0x57c0, 0x9148, 0xa64c, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x83fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0xc2, gbc.readMem(0x83fb));
        // CB C2 0277
        gbc.setState(0x2ac8, 0x1305, 0xc5b0, 0xf561, 0x5aa7, 0x7c29, 0x1, 0x0);
        gbc.writeMem(0x2ac8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1305, gbc.sp());
        EXPECT(0x2aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0278
        gbc.setState(0x266c, 0xfcf3, 0x30a0, 0xd3e, 0x3982, 0x291a, 0x0, 0x0);
        gbc.writeMem(0x266c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0279
        gbc.setState(0x2202, 0x86b1, 0xfcc0, 0xcf28, 0x2dd1, 0xaecb, 0x1, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 027A
        gbc.setState(0x32a0, 0xbea4, 0x2030, 0x5cad, 0x8c51, 0x2698, 0x1, 0x1);
        gbc.writeMem(0x32a0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbea4, gbc.sp());
        EXPECT(0x32a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 027B
        gbc.setState(0x1ff1, 0xe52, 0x5070, 0x4353, 0xccfd, 0x5bd7, 0x1, 0x0);
        gbc.writeMem(0x1ff1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe52, gbc.sp());
        EXPECT(0x1ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 027C
        gbc.setState(0x4c26, 0x7527, 0xcf90, 0x18ba, 0xa3cd, 0x5f1f, 0x1, 0x0);
        gbc.writeMem(0x4c26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7527, gbc.sp());
        EXPECT(0x4c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 027E
        gbc.setState(0x8103, 0xe5f7, 0xbc70, 0xf2e3, 0xcf5f, 0x27ed, 0x1, 0x0);
        gbc.writeMem(0x8103, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x8105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8103));
        EXPECT(0xc2, gbc.readMem(0x8104));
        // CB C2 027F
        gbc.setState(0xbdb4, 0x6bdf, 0x8ad0, 0xc3bd, 0xb2a0, 0xed20, 0x0, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6bdf, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0xc2, gbc.readMem(0xbdb5));
        // CB C2 0280
        gbc.setState(0xc8e3, 0x9373, 0xa5f0, 0x9180, 0x3f00, 0xb18e, 0x0, 0x0);
        gbc.writeMem(0xc8e3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9373, gbc.sp());
        EXPECT(0xc8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e3));
        EXPECT(0xc2, gbc.readMem(0xc8e4));
        // CB C2 0281
        gbc.setState(0x9ead, 0xff4d, 0xa3a0, 0xc0ea, 0xc818, 0x3fb6, 0x0, 0x0);
        gbc.writeMem(0x9ead, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xff4d, gbc.sp());
        EXPECT(0x9eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ead));
        EXPECT(0xc2, gbc.readMem(0x9eae));
        // CB C2 0282
        gbc.setState(0x7bc6, 0x14ae, 0xa290, 0xf6c9, 0x628, 0x3851, 0x1, 0x0);
        gbc.writeMem(0x7bc6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0283
        gbc.setState(0xef25, 0x57b5, 0x27d0, 0x8e5e, 0x8bca, 0x8933, 0x0, 0x1);
        gbc.writeMem(0xef25, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef25));
        EXPECT(0xc2, gbc.readMem(0xef26));
        // CB C2 0284
        gbc.setState(0xd6a9, 0x3101, 0xdf20, 0x9cc7, 0x5675, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0xd6a9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3101, gbc.sp());
        EXPECT(0xd6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a9));
        EXPECT(0xc2, gbc.readMem(0xd6aa));
        // CB C2 0285
        gbc.setState(0xe599, 0xee64, 0xece0, 0x6d87, 0xadeb, 0x561e, 0x0, 0x0);
        gbc.writeMem(0xe599, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0xe59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe599));
        EXPECT(0xc2, gbc.readMem(0xe59a));
        // CB C2 0286
        gbc.setState(0x2f1f, 0x6386, 0x1880, 0x6faf, 0xf4e7, 0xbd29, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6386, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0287
        gbc.setState(0xef0d, 0xf5d, 0x21a0, 0xc311, 0x992b, 0xf00d, 0x1, 0x0);
        gbc.writeMem(0xef0d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0xef0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0d));
        EXPECT(0xc2, gbc.readMem(0xef0e));
        // CB C2 0288
        gbc.setState(0x98f9, 0x720c, 0xd320, 0x6143, 0xe044, 0x5702, 0x0, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x720c, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f9));
        EXPECT(0xc2, gbc.readMem(0x98fa));
        // CB C2 0289
        gbc.setState(0x2980, 0x1210, 0xba30, 0x4f59, 0x8082, 0xef8a, 0x1, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1210, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 028B
        gbc.setState(0x25df, 0x40a9, 0xe1f0, 0x884, 0x4d7b, 0x28f, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x40a9, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 028C
        gbc.setState(0x500d, 0xf82e, 0xb260, 0xcb52, 0x53d6, 0x42d9, 0x0, 0x1);
        gbc.writeMem(0x500d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf82e, gbc.sp());
        EXPECT(0x500f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 028D
        gbc.setState(0xe947, 0xde9e, 0xad60, 0x632d, 0x8ada, 0x8fee, 0x1, 0x1);
        gbc.writeMem(0xe947, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xde9e, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe947));
        EXPECT(0xc2, gbc.readMem(0xe948));
        // CB C2 028E
        gbc.setState(0x258, 0x93db, 0xf6d0, 0x8b8a, 0x40a, 0x6d63, 0x1, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 028F
        gbc.setState(0xccad, 0x2d54, 0x50a0, 0xbcc0, 0xfa0, 0x3159, 0x1, 0x1);
        gbc.writeMem(0xccad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2d54, gbc.sp());
        EXPECT(0xccaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccad));
        EXPECT(0xc2, gbc.readMem(0xccae));
        // CB C2 0290
        gbc.setState(0xdd56, 0x34b5, 0x9af0, 0xa8d5, 0x3bd1, 0x5e26, 0x0, 0x1);
        gbc.writeMem(0xdd56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x34b5, gbc.sp());
        EXPECT(0xdd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd56));
        EXPECT(0xc2, gbc.readMem(0xdd57));
        // CB C2 0291
        gbc.setState(0x297f, 0x6f50, 0x61f0, 0x3308, 0xe043, 0xf5b3, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x2981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0292
        gbc.setState(0x5c43, 0x7924, 0xa3e0, 0x4717, 0x24b5, 0xcfed, 0x0, 0x0);
        gbc.writeMem(0x5c43, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7924, gbc.sp());
        EXPECT(0x5c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0293
        gbc.setState(0xa21, 0x78ea, 0xac60, 0x293c, 0xe200, 0xddb4, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x78ea, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0294
        gbc.setState(0x4e80, 0x60fe, 0x99a0, 0xedef, 0x4373, 0x4ce8, 0x0, 0x0);
        gbc.writeMem(0x4e80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x60fe, gbc.sp());
        EXPECT(0x4e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0295
        gbc.setState(0x4205, 0x20d7, 0x3570, 0xe2b8, 0xf300, 0x1ff8, 0x0, 0x1);
        gbc.writeMem(0x4205, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0296
        gbc.setState(0xd21e, 0xd781, 0x90b0, 0x662d, 0xd379, 0x19b, 0x1, 0x0);
        gbc.writeMem(0xd21e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0xd220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21e));
        EXPECT(0xc2, gbc.readMem(0xd21f));
        // CB C2 0297
        gbc.setState(0x1393, 0x819e, 0x510, 0x746e, 0x2ac2, 0x8d1d, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x819e, gbc.sp());
        EXPECT(0x1395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0298
        gbc.setState(0xc0ea, 0x3302, 0xc830, 0x4895, 0xbe5f, 0x702, 0x0, 0x1);
        gbc.writeMem(0xc0ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3302, gbc.sp());
        EXPECT(0xc0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ea));
        EXPECT(0xc2, gbc.readMem(0xc0eb));
        // CB C2 0299
        gbc.setState(0xcc0c, 0x27a3, 0xc760, 0x4c09, 0xda31, 0xa1ad, 0x1, 0x1);
        gbc.writeMem(0xcc0c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x27a3, gbc.sp());
        EXPECT(0xcc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0c));
        EXPECT(0xc2, gbc.readMem(0xcc0d));
        // CB C2 029A
        gbc.setState(0xa51e, 0xe6e0, 0xa850, 0x533d, 0x8fe2, 0x5449, 0x1, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe6e0, gbc.sp());
        EXPECT(0xa520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51e));
        EXPECT(0xc2, gbc.readMem(0xa51f));
        // CB C2 029C
        gbc.setState(0x72fd, 0xee, 0xd710, 0xc11f, 0x47c8, 0xe5d4, 0x0, 0x1);
        gbc.writeMem(0x72fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x72ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 029D
        gbc.setState(0x52ff, 0x430a, 0x4170, 0x8450, 0xd339, 0x4551, 0x0, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x430a, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 029F
        gbc.setState(0x9ad5, 0x7821, 0x1e30, 0x9b71, 0xeab5, 0x1467, 0x1, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad5));
        EXPECT(0xc2, gbc.readMem(0x9ad6));
        // CB C2 02A0
        gbc.setState(0x52b4, 0x4286, 0xeb20, 0xc537, 0x6eac, 0x7dba, 0x0, 0x0);
        gbc.writeMem(0x52b4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4286, gbc.sp());
        EXPECT(0x52b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02A1
        gbc.setState(0x9155, 0x55ba, 0xa050, 0x409e, 0x1678, 0x3ef5, 0x0, 0x0);
        gbc.writeMem(0x9155, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x55ba, gbc.sp());
        EXPECT(0x9157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9155));
        EXPECT(0xc2, gbc.readMem(0x9156));
        // CB C2 02A2
        gbc.setState(0x631d, 0x1b31, 0xafb0, 0xdc80, 0x3c60, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0x631d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1b31, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02A3
        gbc.setState(0x7793, 0xb2eb, 0x36f0, 0x32be, 0x279c, 0xc6ce, 0x0, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb2eb, gbc.sp());
        EXPECT(0x7795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02A4
        gbc.setState(0xce16, 0x2321, 0x5bc0, 0x5be4, 0x779b, 0xbfec, 0x0, 0x1);
        gbc.writeMem(0xce16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0xce18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce16));
        EXPECT(0xc2, gbc.readMem(0xce17));
        // CB C2 02A6
        gbc.setState(0xdbbb, 0x959f, 0x3670, 0x5434, 0x3214, 0xc463, 0x1, 0x1);
        gbc.writeMem(0xdbbb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x959f, gbc.sp());
        EXPECT(0xdbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbb));
        EXPECT(0xc2, gbc.readMem(0xdbbc));
        // CB C2 02A7
        gbc.setState(0xa668, 0xf6d9, 0xff00, 0xbe5c, 0x3e87, 0x918c, 0x0, 0x1);
        gbc.writeMem(0xa668, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0xa66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa668));
        EXPECT(0xc2, gbc.readMem(0xa669));
        // CB C2 02A9
        gbc.setState(0xcd83, 0x4dd8, 0xdd10, 0xe3c1, 0x4020, 0xf230, 0x0, 0x1);
        gbc.writeMem(0xcd83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4dd8, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd83));
        EXPECT(0xc2, gbc.readMem(0xcd84));
        // CB C2 02AA
        gbc.setState(0xdc65, 0x1639, 0xb090, 0x3baf, 0xa620, 0xf5ed, 0x0, 0x1);
        gbc.writeMem(0xdc65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1639, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0xc2, gbc.readMem(0xdc66));
        // CB C2 02AB
        gbc.setState(0x2f72, 0x25e9, 0xcc0, 0x77f, 0xa984, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x2f72, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x2f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02AC
        gbc.setState(0x57bb, 0x3514, 0x1d40, 0x58cf, 0x97e7, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0x57bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0x57bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02AE
        gbc.setState(0x741c, 0x5ba, 0xa910, 0x2c4e, 0x5a8a, 0x53cd, 0x0, 0x0);
        gbc.writeMem(0x741c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5ba, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02AF
        gbc.setState(0x4147, 0xb770, 0x1040, 0x51d6, 0x7ead, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0x4147, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb770, gbc.sp());
        EXPECT(0x4149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02B0
        gbc.setState(0xd954, 0x96eb, 0xfd70, 0x5da0, 0x1326, 0x235d, 0x1, 0x0);
        gbc.writeMem(0xd954, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x96eb, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0xc2, gbc.readMem(0xd955));
        // CB C2 02B1
        gbc.setState(0xc9fa, 0xf95, 0xde70, 0x44bb, 0x48ac, 0x1139, 0x0, 0x0);
        gbc.writeMem(0xc9fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf95, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fa));
        EXPECT(0xc2, gbc.readMem(0xc9fb));
        // CB C2 02B2
        gbc.setState(0xb98b, 0x5937, 0x1660, 0xa324, 0x96ae, 0xc337, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5937, gbc.sp());
        EXPECT(0xb98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98b));
        EXPECT(0xc2, gbc.readMem(0xb98c));
        // CB C2 02B3
        gbc.setState(0x7fe3, 0xaf57, 0xe4e0, 0x17a9, 0x5784, 0x3929, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaf57, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02B4
        gbc.setState(0x884c, 0xedaa, 0xb260, 0x8e9b, 0x3598, 0x1b1, 0x0, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x884e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884c));
        EXPECT(0xc2, gbc.readMem(0x884d));
        // CB C2 02B5
        gbc.setState(0xc294, 0x31a9, 0xe670, 0xcce5, 0x96cf, 0x166f, 0x0, 0x0);
        gbc.writeMem(0xc294, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x31a9, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc294));
        EXPECT(0xc2, gbc.readMem(0xc295));
        // CB C2 02B6
        gbc.setState(0x4f38, 0xabb, 0x3f30, 0xcb2f, 0xdc12, 0x65ff, 0x0, 0x0);
        gbc.writeMem(0x4f38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xabb, gbc.sp());
        EXPECT(0x4f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02B7
        gbc.setState(0xd20c, 0x5ce1, 0x6090, 0x5ba3, 0xe377, 0x383e, 0x0, 0x0);
        gbc.writeMem(0xd20c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0xd20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20c));
        EXPECT(0xc2, gbc.readMem(0xd20d));
        // CB C2 02B8
        gbc.setState(0x7f16, 0xa4e4, 0x4f70, 0xdc2a, 0xd242, 0xfaaf, 0x0, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa4e4, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02B9
        gbc.setState(0xafd6, 0x684e, 0x9ed0, 0x1899, 0x796c, 0xa6da, 0x0, 0x0);
        gbc.writeMem(0xafd6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x684e, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd6));
        EXPECT(0xc2, gbc.readMem(0xafd7));
        // CB C2 02BA
        gbc.setState(0x8647, 0xf5a3, 0x1b40, 0xa08b, 0x2b04, 0x1757, 0x0, 0x0);
        gbc.writeMem(0x8647, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x8649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8647));
        EXPECT(0xc2, gbc.readMem(0x8648));
        // CB C2 02BB
        gbc.setState(0x4316, 0x87e, 0xafb0, 0xc75c, 0xaa5f, 0x8e2b, 0x0, 0x1);
        gbc.writeMem(0x4316, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x4318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02BC
        gbc.setState(0x202c, 0xee54, 0xfdc0, 0x2da6, 0x5d07, 0xe386, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xee54, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02BD
        gbc.setState(0x1520, 0xd1e5, 0x7170, 0x570f, 0xe166, 0x719a, 0x0, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0x1522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02BE
        gbc.setState(0xe078, 0xe421, 0x43c0, 0x82b7, 0x2e1a, 0xdd89, 0x1, 0x1);
        gbc.writeMem(0xe078, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe421, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe078));
        EXPECT(0xc2, gbc.readMem(0xe079));
        // CB C2 02BF
        gbc.setState(0xd41f, 0x2e0a, 0x5fd0, 0x7d8f, 0x6fc1, 0x2d46, 0x0, 0x0);
        gbc.writeMem(0xd41f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41f));
        EXPECT(0xc2, gbc.readMem(0xd420));
        // CB C2 02C0
        gbc.setState(0x7313, 0xe6c9, 0x7240, 0xb23a, 0x963f, 0x3a4c, 0x1, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02C1
        gbc.setState(0xe9f, 0x2d3f, 0xd8c0, 0xc235, 0x470d, 0xedc1, 0x0, 0x1);
        gbc.writeMem(0xe9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2d3f, gbc.sp());
        EXPECT(0xea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02C3
        gbc.setState(0x4bde, 0x505c, 0x70d0, 0xe189, 0x7305, 0xaec6, 0x0, 0x1);
        gbc.writeMem(0x4bde, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x4be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02C4
        gbc.setState(0x5f79, 0x516e, 0x7650, 0xcfe3, 0xdd6e, 0x2f4d, 0x0, 0x1);
        gbc.writeMem(0x5f79, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x516e, gbc.sp());
        EXPECT(0x5f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02C5
        gbc.setState(0x7cf4, 0xdbb7, 0x3e30, 0xb9fd, 0xe8a1, 0xe0fa, 0x0, 0x0);
        gbc.writeMem(0x7cf4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02C6
        gbc.setState(0xd5cf, 0x4f1a, 0x1e40, 0x6d5d, 0x799, 0x6759, 0x0, 0x1);
        gbc.writeMem(0xd5cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f1a, gbc.sp());
        EXPECT(0xd5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cf));
        EXPECT(0xc2, gbc.readMem(0xd5d0));
        // CB C2 02C8
        gbc.setState(0x473b, 0x2e76, 0xe470, 0x6de, 0x7ed8, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0x473b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e76, gbc.sp());
        EXPECT(0x473d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02C9
        gbc.setState(0xc5c4, 0x8e1e, 0x7ad0, 0x3c3a, 0xb35, 0x4191, 0x1, 0x1);
        gbc.writeMem(0xc5c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8e1e, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c4));
        EXPECT(0xc2, gbc.readMem(0xc5c5));
        // CB C2 02CA
        gbc.setState(0x7aa0, 0xafaa, 0xa640, 0xe32d, 0x748c, 0x4ca0, 0x1, 0x0);
        gbc.writeMem(0x7aa0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02CB
        gbc.setState(0x39a7, 0xaa1c, 0xc7f0, 0x1d52, 0x691d, 0x8206, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02CC
        gbc.setState(0xd30c, 0x34a5, 0x69c0, 0xf1d3, 0x34ed, 0x949d, 0x0, 0x1);
        gbc.writeMem(0xd30c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30c));
        EXPECT(0xc2, gbc.readMem(0xd30d));
        // CB C2 02CD
        gbc.setState(0x53cd, 0x4511, 0x7790, 0xafad, 0x6b26, 0xab06, 0x0, 0x0);
        gbc.writeMem(0x53cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4511, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02CE
        gbc.setState(0xc97, 0xd6e, 0x9370, 0x194e, 0x2f2c, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0xc97, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02CF
        gbc.setState(0xc22f, 0xe444, 0xe540, 0x1b0a, 0x9e46, 0x488, 0x1, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe444, gbc.sp());
        EXPECT(0xc231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22f));
        EXPECT(0xc2, gbc.readMem(0xc230));
        // CB C2 02D0
        gbc.setState(0x27b0, 0x937, 0xc2c0, 0x2196, 0xedc, 0x3188, 0x1, 0x1);
        gbc.writeMem(0x27b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x937, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02D1
        gbc.setState(0x3e77, 0xbe69, 0x55a0, 0xf3f8, 0xf3a, 0x235f, 0x0, 0x0);
        gbc.writeMem(0x3e77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbe69, gbc.sp());
        EXPECT(0x3e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02D2
        gbc.setState(0x56e9, 0x49e6, 0x6e20, 0xd2f2, 0xdadd, 0x6307, 0x1, 0x1);
        gbc.writeMem(0x56e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x49e6, gbc.sp());
        EXPECT(0x56eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02D3
        gbc.setState(0x9b3b, 0x161d, 0x7200, 0x882b, 0x6d5a, 0x5506, 0x0, 0x1);
        gbc.writeMem(0x9b3b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x161d, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3b));
        EXPECT(0xc2, gbc.readMem(0x9b3c));
        // CB C2 02D4
        gbc.setState(0x8903, 0x3e67, 0x4010, 0x4a3b, 0x1323, 0x59ce, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3e67, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8903));
        EXPECT(0xc2, gbc.readMem(0x8904));
        // CB C2 02D5
        gbc.setState(0xa48f, 0xca83, 0x1970, 0x25a2, 0x5844, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xa48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0xa491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48f));
        EXPECT(0xc2, gbc.readMem(0xa490));
        // CB C2 02D6
        gbc.setState(0xde83, 0x1439, 0xd810, 0x1147, 0x8e1e, 0x1df4, 0x0, 0x1);
        gbc.writeMem(0xde83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1439, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde83));
        EXPECT(0xc2, gbc.readMem(0xde84));
        // CB C2 02D7
        gbc.setState(0x3dc, 0xd259, 0x910, 0x6e20, 0x5fd4, 0xe385, 0x1, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0x3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02D8
        gbc.setState(0x947f, 0x7fd0, 0x99c0, 0x1fa6, 0xe6c0, 0xb57c, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7fd0, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947f));
        EXPECT(0xc2, gbc.readMem(0x9480));
        // CB C2 02D9
        gbc.setState(0x9746, 0x8d86, 0x71f0, 0x7d8c, 0xa14, 0x3fa2, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8d86, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9746));
        EXPECT(0xc2, gbc.readMem(0x9747));
        // CB C2 02DA
        gbc.setState(0xcc38, 0x5141, 0x16b0, 0x5a4, 0xa7b8, 0xd850, 0x0, 0x0);
        gbc.writeMem(0xcc38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5141, gbc.sp());
        EXPECT(0xcc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc38));
        EXPECT(0xc2, gbc.readMem(0xcc39));
        // CB C2 02DC
        gbc.setState(0x81e2, 0xa9a5, 0x5400, 0x3a9b, 0xf54e, 0x276f, 0x1, 0x1);
        gbc.writeMem(0x81e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa9a5, gbc.sp());
        EXPECT(0x81e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e2));
        EXPECT(0xc2, gbc.readMem(0x81e3));
        // CB C2 02DD
        gbc.setState(0x4d0f, 0x919e, 0xe760, 0x62e, 0x183e, 0xcf2f, 0x1, 0x0);
        gbc.writeMem(0x4d0f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x4d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02DE
        gbc.setState(0x2a5f, 0xe9d6, 0x6950, 0x82dc, 0x8ce2, 0x7370, 0x0, 0x1);
        gbc.writeMem(0x2a5f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02DF
        gbc.setState(0x7e98, 0xe81a, 0x2fd0, 0x42a2, 0x693d, 0x54f0, 0x1, 0x0);
        gbc.writeMem(0x7e98, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0x7e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02E0
        gbc.setState(0x5e, 0x66bd, 0x3ad0, 0x5122, 0xd63c, 0xc5f, 0x1, 0x1);
        gbc.writeMem(0x5e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x66bd, gbc.sp());
        EXPECT(0x60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02E1
        gbc.setState(0x2fe7, 0x2360, 0x3990, 0x8f58, 0xcd63, 0x1123, 0x0, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x2fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02E2
        gbc.setState(0xd57e, 0x6400, 0x5ee0, 0x89b, 0x6e9c, 0x493e, 0x1, 0x1);
        gbc.writeMem(0xd57e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6400, gbc.sp());
        EXPECT(0xd580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57e));
        EXPECT(0xc2, gbc.readMem(0xd57f));
        // CB C2 02E3
        gbc.setState(0xef3b, 0xf072, 0x4490, 0xd674, 0x99d7, 0xaf30, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf072, gbc.sp());
        EXPECT(0xef3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3b));
        EXPECT(0xc2, gbc.readMem(0xef3c));
        // CB C2 02E4
        gbc.setState(0x9f9b, 0xbed4, 0x9650, 0xa0eb, 0xa973, 0x57be, 0x0, 0x1);
        gbc.writeMem(0x9f9b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbed4, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0xc2, gbc.readMem(0x9f9c));
        // CB C2 02E5
        gbc.setState(0x89b6, 0xe1d4, 0x44c0, 0x1318, 0x46c2, 0x42c0, 0x0, 0x0);
        gbc.writeMem(0x89b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0x89b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b6));
        EXPECT(0xc2, gbc.readMem(0x89b7));
        // CB C2 02E6
        gbc.setState(0x4a30, 0x9735, 0x8150, 0xe263, 0x884c, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x4a30, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9735, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02E8
        gbc.setState(0x19c7, 0x4bff, 0x5590, 0x9805, 0x4bca, 0x1052, 0x1, 0x0);
        gbc.writeMem(0x19c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4bff, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02E9
        gbc.setState(0x28ea, 0xeb3e, 0x86f0, 0x8c21, 0x26b0, 0x37de, 0x1, 0x0);
        gbc.writeMem(0x28ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0x28ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02EA
        gbc.setState(0xdbb2, 0x2b35, 0xf280, 0xd1d6, 0xdf16, 0xb46, 0x1, 0x1);
        gbc.writeMem(0xdbb2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0xdbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb2));
        EXPECT(0xc2, gbc.readMem(0xdbb3));
        // CB C2 02EB
        gbc.setState(0xea3a, 0xa59c, 0x3840, 0x969e, 0x59c2, 0x238f, 0x0, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0xc2, gbc.readMem(0xea3b));
        // CB C2 02EC
        gbc.setState(0x6883, 0x269e, 0xdaf0, 0xe264, 0x65c3, 0xc564, 0x0, 0x1);
        gbc.writeMem(0x6883, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02ED
        gbc.setState(0x1b56, 0xfdf6, 0x8ff0, 0xeac8, 0x36bd, 0x7dc5, 0x1, 0x0);
        gbc.writeMem(0x1b56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x1b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02EE
        gbc.setState(0x4210, 0xa793, 0xedf0, 0x1e0b, 0x629f, 0x5df1, 0x1, 0x0);
        gbc.writeMem(0x4210, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa793, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02EF
        gbc.setState(0x58b1, 0x773, 0xc720, 0x2387, 0xe585, 0xf9e3, 0x0, 0x0);
        gbc.writeMem(0x58b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0x58b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02F0
        gbc.setState(0x6a9a, 0xa528, 0xee0, 0x8e77, 0x9a8b, 0x83c3, 0x0, 0x0);
        gbc.writeMem(0x6a9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa528, gbc.sp());
        EXPECT(0x6a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02F1
        gbc.setState(0xed74, 0x68fd, 0x1d00, 0xed3f, 0xc169, 0x947a, 0x1, 0x1);
        gbc.writeMem(0xed74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x68fd, gbc.sp());
        EXPECT(0xed76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed74));
        EXPECT(0xc2, gbc.readMem(0xed75));
        // CB C2 02F5
        gbc.setState(0x337f, 0x7fa3, 0x4810, 0xbff8, 0x1b2f, 0xbc, 0x1, 0x0);
        gbc.writeMem(0x337f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7fa3, gbc.sp());
        EXPECT(0x3381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02F6
        gbc.setState(0x8ea2, 0x692, 0x2390, 0xecd4, 0x6d77, 0x2f6c, 0x0, 0x1);
        gbc.writeMem(0x8ea2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea2));
        EXPECT(0xc2, gbc.readMem(0x8ea3));
        // CB C2 02F7
        gbc.setState(0x1c9b, 0x1644, 0x5bc0, 0x806b, 0x3284, 0xebed, 0x1, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1644, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 02F8
        gbc.setState(0x4a38, 0xd2ef, 0x89d0, 0xbddc, 0x896d, 0x2f36, 0x0, 0x1);
        gbc.writeMem(0x4a38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd2ef, gbc.sp());
        EXPECT(0x4a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02F9
        gbc.setState(0x3566, 0x3d6a, 0xe150, 0x254, 0x2c07, 0x610a, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3d6a, gbc.sp());
        EXPECT(0x3568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 02FD
        gbc.setState(0xbe29, 0x4171, 0x4490, 0xd2a0, 0x73e, 0xb50f, 0x1, 0x1);
        gbc.writeMem(0xbe29, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0xbe2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe29));
        EXPECT(0xc2, gbc.readMem(0xbe2a));
        // CB C2 02FE
        gbc.setState(0xa7cd, 0xfe5b, 0x4900, 0xbad0, 0x4ed5, 0xf87f, 0x1, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cd));
        EXPECT(0xc2, gbc.readMem(0xa7ce));
        // CB C2 02FF
        gbc.setState(0x3c6b, 0xc313, 0xe7f0, 0x2e8f, 0x8bfb, 0xb345, 0x0, 0x1);
        gbc.writeMem(0x3c6b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc313, gbc.sp());
        EXPECT(0x3c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0300
        gbc.setState(0x59bb, 0x307a, 0x6320, 0x2a31, 0xfe3e, 0xd3e1, 0x0, 0x0);
        gbc.writeMem(0x59bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0x59bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0301
        gbc.setState(0xa559, 0x418, 0x5960, 0xfb31, 0x7e36, 0x77d3, 0x1, 0x1);
        gbc.writeMem(0xa559, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0xc2, gbc.readMem(0xa55a));
        // CB C2 0302
        gbc.setState(0x7e23, 0xd17e, 0x6c90, 0xb698, 0xdaa, 0xe7a4, 0x0, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0303
        gbc.setState(0xa2d6, 0x875a, 0xe550, 0x649e, 0x2ef6, 0xb4c0, 0x0, 0x1);
        gbc.writeMem(0xa2d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0xa2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d6));
        EXPECT(0xc2, gbc.readMem(0xa2d7));
        // CB C2 0304
        gbc.setState(0x5f65, 0xaa60, 0xbcc0, 0x31cc, 0xe62e, 0x16d1, 0x1, 0x0);
        gbc.writeMem(0x5f65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0305
        gbc.setState(0x6357, 0x1e68, 0x58a0, 0x8432, 0x853e, 0x103, 0x1, 0x1);
        gbc.writeMem(0x6357, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0306
        gbc.setState(0xb53b, 0x8f4, 0xbfa0, 0x932e, 0x72cf, 0x1608, 0x1, 0x0);
        gbc.writeMem(0xb53b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8f4, gbc.sp());
        EXPECT(0xb53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53b));
        EXPECT(0xc2, gbc.readMem(0xb53c));
        // CB C2 0307
        gbc.setState(0xde6f, 0xddcb, 0xf3b0, 0xfb4e, 0xd08, 0x1395, 0x0, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xddcb, gbc.sp());
        EXPECT(0xde71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6f));
        EXPECT(0xc2, gbc.readMem(0xde70));
        // CB C2 0308
        gbc.setState(0x324, 0xa50, 0x36e0, 0xc126, 0xa6f6, 0x61d4, 0x0, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa50, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0309
        gbc.setState(0x4a50, 0x4c2c, 0x5330, 0xe75d, 0xc939, 0x17bd, 0x1, 0x1);
        gbc.writeMem(0x4a50, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4c2c, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 030A
        gbc.setState(0x7c99, 0xb707, 0x7760, 0xfe48, 0x947e, 0x2098, 0x0, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb707, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 030B
        gbc.setState(0x4bce, 0x291b, 0x72b0, 0xd29d, 0xb286, 0x2336, 0x1, 0x1);
        gbc.writeMem(0x4bce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0x4bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 030C
        gbc.setState(0x4ccf, 0x8a7c, 0xaa20, 0x1183, 0x5a61, 0xc431, 0x0, 0x0);
        gbc.writeMem(0x4ccf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0x4cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 030D
        gbc.setState(0x50c9, 0xd617, 0xcc20, 0x2f5a, 0x2b8, 0xa103, 0x1, 0x1);
        gbc.writeMem(0x50c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0x50cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 030E
        gbc.setState(0xa30c, 0xfc33, 0x1af0, 0x1f12, 0xf276, 0xcd0d, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfc33, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30c));
        EXPECT(0xc2, gbc.readMem(0xa30d));
        // CB C2 030F
        gbc.setState(0x6417, 0x6b19, 0x81a0, 0x45e2, 0xb53a, 0x5832, 0x1, 0x1);
        gbc.writeMem(0x6417, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0310
        gbc.setState(0xc4d4, 0x7842, 0xc0f0, 0x275d, 0xca7, 0xe731, 0x0, 0x1);
        gbc.writeMem(0xc4d4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0xc4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d4));
        EXPECT(0xc2, gbc.readMem(0xc4d5));
        // CB C2 0311
        gbc.setState(0xa44e, 0xf9d9, 0x930, 0x32e5, 0xf77a, 0x7a7c, 0x1, 0x0);
        gbc.writeMem(0xa44e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44e));
        EXPECT(0xc2, gbc.readMem(0xa44f));
        // CB C2 0312
        gbc.setState(0x66ad, 0x6375, 0xa350, 0xe6bc, 0x531e, 0x31af, 0x1, 0x1);
        gbc.writeMem(0x66ad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6375, gbc.sp());
        EXPECT(0x66af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0313
        gbc.setState(0xcc70, 0xa70a, 0x2080, 0x8447, 0x9c3f, 0x2cbc, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa70a, gbc.sp());
        EXPECT(0xcc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc70));
        EXPECT(0xc2, gbc.readMem(0xcc71));
        // CB C2 0314
        gbc.setState(0x5e61, 0xc42a, 0xcf0, 0xcee6, 0xda8, 0xf53b, 0x1, 0x0);
        gbc.writeMem(0x5e61, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0315
        gbc.setState(0x5576, 0x2397, 0x5570, 0x3489, 0xecb5, 0xd444, 0x1, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0316
        gbc.setState(0x66d2, 0x7a60, 0x7490, 0x5ed8, 0xb707, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x66d2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a60, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0318
        gbc.setState(0x3117, 0xd2f6, 0xe350, 0x7b71, 0x882, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x3117, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0319
        gbc.setState(0xd3fb, 0x4a3b, 0xd440, 0xdb42, 0xbd6d, 0xe244, 0x1, 0x1);
        gbc.writeMem(0xd3fb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4a3b, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fb));
        EXPECT(0xc2, gbc.readMem(0xd3fc));
        // CB C2 031A
        gbc.setState(0x96ed, 0x6909, 0xd9b0, 0xa5ac, 0x8dc4, 0x5c44, 0x0, 0x0);
        gbc.writeMem(0x96ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6909, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ed));
        EXPECT(0xc2, gbc.readMem(0x96ee));
        // CB C2 031B
        gbc.setState(0x34e, 0xeb3c, 0x9440, 0xe5ff, 0x72e3, 0x350a, 0x1, 0x1);
        gbc.writeMem(0x34e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 031C
        gbc.setState(0xa13b, 0xc6b1, 0x1290, 0x53ff, 0x7a1a, 0xf9, 0x0, 0x0);
        gbc.writeMem(0xa13b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13b));
        EXPECT(0xc2, gbc.readMem(0xa13c));
        // CB C2 031D
        gbc.setState(0x143, 0x1cf9, 0x9aa0, 0x7848, 0x8e86, 0x4f69, 0x1, 0x0);
        gbc.writeMem(0x143, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1cf9, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0320
        gbc.setState(0xe504, 0x5c60, 0x1590, 0xf48e, 0xdbf7, 0x8db4, 0x0, 0x1);
        gbc.writeMem(0xe504, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5c60, gbc.sp());
        EXPECT(0xe506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe504));
        EXPECT(0xc2, gbc.readMem(0xe505));
        // CB C2 0321
        gbc.setState(0xc348, 0x51aa, 0x7600, 0x7a95, 0x12ed, 0x3048, 0x1, 0x1);
        gbc.writeMem(0xc348, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x51aa, gbc.sp());
        EXPECT(0xc34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc348));
        EXPECT(0xc2, gbc.readMem(0xc349));
        // CB C2 0322
        gbc.setState(0x35b2, 0xde5, 0x6630, 0x176a, 0x317c, 0x8656, 0x1, 0x1);
        gbc.writeMem(0x35b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde5, gbc.sp());
        EXPECT(0x35b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0323
        gbc.setState(0x8432, 0x2aa6, 0x7fa0, 0xbe49, 0xe382, 0xdce1, 0x0, 0x1);
        gbc.writeMem(0x8432, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8432));
        EXPECT(0xc2, gbc.readMem(0x8433));
        // CB C2 0324
        gbc.setState(0xbd57, 0xcd70, 0x6a20, 0xd042, 0x1a45, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0xbd57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcd70, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0xc2, gbc.readMem(0xbd58));
        // CB C2 0325
        gbc.setState(0xc194, 0x2301, 0x52b0, 0x5798, 0x4470, 0xd729, 0x0, 0x0);
        gbc.writeMem(0xc194, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2301, gbc.sp());
        EXPECT(0xc196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc194));
        EXPECT(0xc2, gbc.readMem(0xc195));
        // CB C2 0326
        gbc.setState(0x2bcb, 0x2abe, 0xc480, 0x636f, 0xe93b, 0xefb5, 0x1, 0x1);
        gbc.writeMem(0x2bcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2abe, gbc.sp());
        EXPECT(0x2bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0327
        gbc.setState(0xed58, 0x96bf, 0x6d0, 0x83ce, 0x2d3a, 0x7ec3, 0x1, 0x1);
        gbc.writeMem(0xed58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0xed5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed58));
        EXPECT(0xc2, gbc.readMem(0xed59));
        // CB C2 0328
        gbc.setState(0x475f, 0x108a, 0x2ab0, 0x2ba6, 0xe49b, 0x1b93, 0x1, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x108a, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0329
        gbc.setState(0xc24, 0x7e59, 0x5620, 0xc8e0, 0xd23, 0x3e9b, 0x1, 0x0);
        gbc.writeMem(0xc24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7e59, gbc.sp());
        EXPECT(0xc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 032A
        gbc.setState(0x3e95, 0xfa07, 0x6840, 0x5cf4, 0xe6a5, 0x4ec7, 0x0, 0x0);
        gbc.writeMem(0x3e95, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfa07, gbc.sp());
        EXPECT(0x3e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 032B
        gbc.setState(0x7824, 0x8ac8, 0x5a40, 0x46b3, 0xc978, 0x6c27, 0x1, 0x0);
        gbc.writeMem(0x7824, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x7826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 032C
        gbc.setState(0x26e1, 0x4964, 0x3a70, 0xafe7, 0x65e0, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4964, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 032D
        gbc.setState(0x19c, 0xfc0d, 0x65d0, 0x548d, 0x32b3, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x19c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 032E
        gbc.setState(0x46b6, 0x8e6e, 0x6880, 0x70c1, 0xf844, 0x649c, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8e6e, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 032F
        gbc.setState(0x5a1d, 0xb82f, 0x6620, 0x6d28, 0x15e0, 0x596c, 0x1, 0x1);
        gbc.writeMem(0x5a1d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0330
        gbc.setState(0x92f5, 0x6c4b, 0x6af0, 0xa2b8, 0x8215, 0x37b7, 0x0, 0x1);
        gbc.writeMem(0x92f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6c4b, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f5));
        EXPECT(0xc2, gbc.readMem(0x92f6));
        // CB C2 0331
        gbc.setState(0x9166, 0x2ce9, 0x6aa0, 0x2886, 0xc9f0, 0xa9e8, 0x1, 0x1);
        gbc.writeMem(0x9166, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2ce9, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9166));
        EXPECT(0xc2, gbc.readMem(0x9167));
        // CB C2 0332
        gbc.setState(0x1edd, 0xf74, 0xc7f0, 0x9919, 0x84, 0x993d, 0x1, 0x0);
        gbc.writeMem(0x1edd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf74, gbc.sp());
        EXPECT(0x1edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0334
        gbc.setState(0xd48f, 0x1bc8, 0xdce0, 0x2231, 0x83bc, 0x44a0, 0x0, 0x0);
        gbc.writeMem(0xd48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1bc8, gbc.sp());
        EXPECT(0xd491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48f));
        EXPECT(0xc2, gbc.readMem(0xd490));
        // CB C2 0335
        gbc.setState(0x581e, 0x387f, 0xc4c0, 0x497b, 0x5dbb, 0x18f7, 0x0, 0x0);
        gbc.writeMem(0x581e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x387f, gbc.sp());
        EXPECT(0x5820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0336
        gbc.setState(0xd2, 0x57a0, 0xfed0, 0xcf3c, 0x4595, 0xb949, 0x1, 0x1);
        gbc.writeMem(0xd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x57a0, gbc.sp());
        EXPECT(0xd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0337
        gbc.setState(0x77ef, 0xaaff, 0x8f60, 0x5f65, 0x394f, 0x1477, 0x1, 0x0);
        gbc.writeMem(0x77ef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaaff, gbc.sp());
        EXPECT(0x77f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0338
        gbc.setState(0x84ea, 0xc26d, 0x7d0, 0x8caf, 0x2ba2, 0xd938, 0x0, 0x0);
        gbc.writeMem(0x84ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ea));
        EXPECT(0xc2, gbc.readMem(0x84eb));
        // CB C2 0339
        gbc.setState(0x2d9d, 0xf6ab, 0xc4c0, 0x4f82, 0xd851, 0xafca, 0x1, 0x0);
        gbc.writeMem(0x2d9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf6ab, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 033A
        gbc.setState(0xdf63, 0xf635, 0x10d0, 0x7b92, 0x9c6a, 0xbfee, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf635, gbc.sp());
        EXPECT(0xdf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf63));
        EXPECT(0xc2, gbc.readMem(0xdf64));
        // CB C2 033B
        gbc.setState(0x1b83, 0x4a57, 0x40e0, 0x8477, 0xe74, 0x6a6f, 0x1, 0x0);
        gbc.writeMem(0x1b83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0x1b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 033C
        gbc.setState(0x62e1, 0x9bc9, 0x2210, 0x447f, 0xc2ca, 0x314f, 0x0, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9bc9, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 033D
        gbc.setState(0x9213, 0xc404, 0x99a0, 0xa083, 0x1431, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc404, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0xc2, gbc.readMem(0x9214));
        // CB C2 033E
        gbc.setState(0x4203, 0x1cdf, 0x72b0, 0x8256, 0x3d2b, 0x12dd, 0x0, 0x0);
        gbc.writeMem(0x4203, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1cdf, gbc.sp());
        EXPECT(0x4205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 033F
        gbc.setState(0xa821, 0x3cf0, 0xe880, 0x5faa, 0xd8f, 0xc8f8, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3cf0, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa821));
        EXPECT(0xc2, gbc.readMem(0xa822));
        // CB C2 0340
        gbc.setState(0x883b, 0x73de, 0xd6c0, 0x1ded, 0x67d2, 0x2c34, 0x1, 0x0);
        gbc.writeMem(0x883b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x73de, gbc.sp());
        EXPECT(0x883d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883b));
        EXPECT(0xc2, gbc.readMem(0x883c));
        // CB C2 0341
        gbc.setState(0x41fa, 0x3191, 0x17c0, 0x8a68, 0xfeef, 0x710f, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3191, gbc.sp());
        EXPECT(0x41fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0342
        gbc.setState(0xc2f9, 0x623e, 0x8660, 0x3573, 0x76cc, 0xf988, 0x1, 0x0);
        gbc.writeMem(0xc2f9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x623e, gbc.sp());
        EXPECT(0xc2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f9));
        EXPECT(0xc2, gbc.readMem(0xc2fa));
        // CB C2 0343
        gbc.setState(0xce22, 0x6a12, 0x9100, 0x7911, 0x2040, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0xce22, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0xce24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce22));
        EXPECT(0xc2, gbc.readMem(0xce23));
        // CB C2 0344
        gbc.setState(0x57eb, 0xf9f6, 0x6a40, 0x75bb, 0x496f, 0xb625, 0x0, 0x1);
        gbc.writeMem(0x57eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf9f6, gbc.sp());
        EXPECT(0x57ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0345
        gbc.setState(0x34ab, 0x11e5, 0xfba0, 0x18df, 0x6c12, 0xd078, 0x1, 0x0);
        gbc.writeMem(0x34ab, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x11e5, gbc.sp());
        EXPECT(0x34ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0346
        gbc.setState(0x2d7c, 0x5c7c, 0x1b50, 0x4483, 0x47fb, 0xcf04, 0x1, 0x0);
        gbc.writeMem(0x2d7c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x2d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0347
        gbc.setState(0x4fc1, 0x8f19, 0x1c90, 0x96fb, 0x5e7d, 0x8134, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0x4fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0348
        gbc.setState(0xafad, 0x62aa, 0xb420, 0xb640, 0x55a6, 0x6c69, 0x1, 0x1);
        gbc.writeMem(0xafad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x62aa, gbc.sp());
        EXPECT(0xafaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafad));
        EXPECT(0xc2, gbc.readMem(0xafae));
        // CB C2 0349
        gbc.setState(0x8eba, 0x4d81, 0x5510, 0xc242, 0xe93, 0x5249, 0x1, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4d81, gbc.sp());
        EXPECT(0x8ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eba));
        EXPECT(0xc2, gbc.readMem(0x8ebb));
        // CB C2 034A
        gbc.setState(0x2233, 0x4bea, 0x4bf0, 0x1c2f, 0x5aee, 0xb488, 0x0, 0x1);
        gbc.writeMem(0x2233, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x2235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 034B
        gbc.setState(0xc8f1, 0xf400, 0xb560, 0x659a, 0xd322, 0x4fd1, 0x1, 0x0);
        gbc.writeMem(0xc8f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f1));
        EXPECT(0xc2, gbc.readMem(0xc8f2));
        // CB C2 034C
        gbc.setState(0x6932, 0x4d03, 0x85b0, 0x8e42, 0x90be, 0x375a, 0x1, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 034D
        gbc.setState(0x98c1, 0x3736, 0x4180, 0x574a, 0x22af, 0x3667, 0x1, 0x1);
        gbc.writeMem(0x98c1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3736, gbc.sp());
        EXPECT(0x98c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c1));
        EXPECT(0xc2, gbc.readMem(0x98c2));
        // CB C2 034E
        gbc.setState(0xc1f4, 0xe2ee, 0x43c0, 0x8b14, 0x1831, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0xc1f4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe2ee, gbc.sp());
        EXPECT(0xc1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f4));
        EXPECT(0xc2, gbc.readMem(0xc1f5));
        // CB C2 034F
        gbc.setState(0x7a72, 0xe7ff, 0xab90, 0xe838, 0x791e, 0xa44d, 0x0, 0x1);
        gbc.writeMem(0x7a72, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0x7a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0350
        gbc.setState(0xe59c, 0xbae, 0xe0a0, 0xa60a, 0x4fa, 0x8bf4, 0x1, 0x0);
        gbc.writeMem(0xe59c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbae, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59c));
        EXPECT(0xc2, gbc.readMem(0xe59d));
        // CB C2 0351
        gbc.setState(0x47bb, 0xfc36, 0xe150, 0xb675, 0xc80b, 0x7bf9, 0x0, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfc36, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0352
        gbc.setState(0xd534, 0x298, 0xe630, 0xe8ac, 0xf38f, 0xa729, 0x0, 0x1);
        gbc.writeMem(0xd534, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x298, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd534));
        EXPECT(0xc2, gbc.readMem(0xd535));
        // CB C2 0353
        gbc.setState(0x27c4, 0xfc8a, 0x10, 0xbd85, 0x18, 0x411d, 0x1, 0x0);
        gbc.writeMem(0x27c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfc8a, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0354
        gbc.setState(0x951c, 0x2990, 0xe50, 0xdd59, 0xd57a, 0x422f, 0x0, 0x1);
        gbc.writeMem(0x951c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2990, gbc.sp());
        EXPECT(0x951e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951c));
        EXPECT(0xc2, gbc.readMem(0x951d));
        // CB C2 0355
        gbc.setState(0x63cb, 0xd8d1, 0x3b30, 0x9da0, 0x5b38, 0xaff0, 0x1, 0x0);
        gbc.writeMem(0x63cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd8d1, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0357
        gbc.setState(0xcc48, 0x1c4a, 0xd920, 0x57da, 0xfb4c, 0x951d, 0x1, 0x1);
        gbc.writeMem(0xcc48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0xcc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc48));
        EXPECT(0xc2, gbc.readMem(0xcc49));
        // CB C2 0358
        gbc.setState(0x4a7, 0x89fa, 0x35c0, 0x9fcc, 0xdbfb, 0x8aab, 0x0, 0x1);
        gbc.writeMem(0x4a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0x4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0359
        gbc.setState(0x1a26, 0x17c0, 0x4a0, 0xfd72, 0x1da7, 0x2c6e, 0x1, 0x1);
        gbc.writeMem(0x1a26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x17c0, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 035A
        gbc.setState(0x3a83, 0x5ffd, 0x5ca0, 0x6a6c, 0xffc7, 0xa654, 0x1, 0x0);
        gbc.writeMem(0x3a83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 035B
        gbc.setState(0x664e, 0x6b9a, 0x3030, 0xebad, 0xe87f, 0x20c9, 0x1, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b9a, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 035C
        gbc.setState(0x1d55, 0x5155, 0x7070, 0x222e, 0x7b9e, 0xfdc1, 0x0, 0x0);
        gbc.writeMem(0x1d55, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x1d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 035D
        gbc.setState(0x49f1, 0x8332, 0xd4a0, 0xb3e0, 0xd97a, 0xcce0, 0x1, 0x0);
        gbc.writeMem(0x49f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8332, gbc.sp());
        EXPECT(0x49f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 035F
        gbc.setState(0xeda, 0xacab, 0xe30, 0xcc13, 0x218f, 0x7d16, 0x0, 0x0);
        gbc.writeMem(0xeda, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0xedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0360
        gbc.setState(0xcc3e, 0xdc87, 0x6dd0, 0xaf91, 0x7895, 0xc801, 0x1, 0x1);
        gbc.writeMem(0xcc3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdc87, gbc.sp());
        EXPECT(0xcc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3e));
        EXPECT(0xc2, gbc.readMem(0xcc3f));
        // CB C2 0361
        gbc.setState(0xda5a, 0x9af5, 0x8100, 0xba58, 0xe8a8, 0x1c24, 0x1, 0x1);
        gbc.writeMem(0xda5a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9af5, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5a));
        EXPECT(0xc2, gbc.readMem(0xda5b));
        // CB C2 0362
        gbc.setState(0x7a32, 0x4601, 0x2ae0, 0x77f8, 0x4f86, 0x5a77, 0x1, 0x1);
        gbc.writeMem(0x7a32, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0363
        gbc.setState(0x617c, 0x40b7, 0x770, 0x2c6c, 0x365, 0x8680, 0x0, 0x1);
        gbc.writeMem(0x617c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x40b7, gbc.sp());
        EXPECT(0x617e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0364
        gbc.setState(0xea10, 0x18cc, 0xe320, 0x8c45, 0x8f98, 0xf040, 0x1, 0x0);
        gbc.writeMem(0xea10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0xea12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea10));
        EXPECT(0xc2, gbc.readMem(0xea11));
        // CB C2 0365
        gbc.setState(0x7c40, 0x5598, 0xa700, 0xf623, 0x253f, 0xdd7, 0x1, 0x0);
        gbc.writeMem(0x7c40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0366
        gbc.setState(0x3c84, 0x18fc, 0x6250, 0x5441, 0x7bc, 0x76a2, 0x1, 0x1);
        gbc.writeMem(0x3c84, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x18fc, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0367
        gbc.setState(0xcf6e, 0xb750, 0x4130, 0x2bb, 0xb664, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0xcf6e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb750, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6e));
        EXPECT(0xc2, gbc.readMem(0xcf6f));
        // CB C2 0369
        gbc.setState(0xa319, 0x94c0, 0x98f0, 0x45bb, 0xa443, 0x6fd5, 0x1, 0x1);
        gbc.writeMem(0xa319, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x94c0, gbc.sp());
        EXPECT(0xa31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa319));
        EXPECT(0xc2, gbc.readMem(0xa31a));
        // CB C2 036A
        gbc.setState(0xcd23, 0x43be, 0xbb10, 0x1df3, 0xb747, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0xcd23, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x43be, gbc.sp());
        EXPECT(0xcd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd23));
        EXPECT(0xc2, gbc.readMem(0xcd24));
        // CB C2 036B
        gbc.setState(0xba18, 0xbe6, 0x760, 0x94b0, 0xf8a9, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xba18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe6, gbc.sp());
        EXPECT(0xba1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba18));
        EXPECT(0xc2, gbc.readMem(0xba19));
        // CB C2 036C
        gbc.setState(0x15d2, 0x625c, 0xce60, 0xbbf6, 0x4d01, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0x15d2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x625c, gbc.sp());
        EXPECT(0x15d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 036D
        gbc.setState(0xc263, 0x7b63, 0x8fb0, 0x129e, 0xfe5e, 0x2306, 0x1, 0x1);
        gbc.writeMem(0xc263, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0xc265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc263));
        EXPECT(0xc2, gbc.readMem(0xc264));
        // CB C2 036E
        gbc.setState(0xdbe, 0xb230, 0xab20, 0x37e6, 0xff77, 0xb0bd, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 036F
        gbc.setState(0x6cd8, 0x40e6, 0x76b0, 0x4c07, 0x25dc, 0x9eac, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x40e6, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0370
        gbc.setState(0xb6dc, 0x778e, 0x81d0, 0xe30e, 0x4dad, 0x8872, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x778e, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0xc2, gbc.readMem(0xb6dd));
        // CB C2 0371
        gbc.setState(0xac01, 0xd704, 0xd480, 0x827f, 0x883b, 0xfa03, 0x1, 0x1);
        gbc.writeMem(0xac01, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0xac03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac01));
        EXPECT(0xc2, gbc.readMem(0xac02));
        // CB C2 0372
        gbc.setState(0x272a, 0x31ce, 0xd070, 0xdde2, 0x2ef4, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x272a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x31ce, gbc.sp());
        EXPECT(0x272c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0373
        gbc.setState(0x1ed5, 0xff12, 0xc620, 0x188e, 0xb527, 0xb539, 0x1, 0x0);
        gbc.writeMem(0x1ed5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0374
        gbc.setState(0x255c, 0x2062, 0xe510, 0xa3c8, 0x93cc, 0xd48, 0x0, 0x0);
        gbc.writeMem(0x255c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2062, gbc.sp());
        EXPECT(0x255e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0375
        gbc.setState(0xe6d3, 0x7039, 0x8cc0, 0x70f4, 0xe2cc, 0x91b6, 0x0, 0x0);
        gbc.writeMem(0xe6d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7039, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d3));
        EXPECT(0xc2, gbc.readMem(0xe6d4));
        // CB C2 0376
        gbc.setState(0x4038, 0x4a9e, 0x8fb0, 0xa63c, 0x879d, 0x8df7, 0x1, 0x1);
        gbc.writeMem(0x4038, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4a9e, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0377
        gbc.setState(0xe9ca, 0x2d57, 0xcb80, 0x24c, 0x1af8, 0x9136, 0x0, 0x0);
        gbc.writeMem(0xe9ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0xe9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ca));
        EXPECT(0xc2, gbc.readMem(0xe9cb));
        // CB C2 0378
        gbc.setState(0xa14c, 0xfa4a, 0xa2b0, 0xc455, 0xcc53, 0x51ae, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfa4a, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14c));
        EXPECT(0xc2, gbc.readMem(0xa14d));
        // CB C2 0379
        gbc.setState(0xe2a1, 0x6197, 0x51b0, 0x5b0, 0x284f, 0x3a04, 0x0, 0x0);
        gbc.writeMem(0xe2a1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6197, gbc.sp());
        EXPECT(0xe2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a1));
        EXPECT(0xc2, gbc.readMem(0xe2a2));
        // CB C2 037A
        gbc.setState(0xeb90, 0x2598, 0x3ab0, 0x1ed, 0x9743, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0xeb90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb90));
        EXPECT(0xc2, gbc.readMem(0xeb91));
        // CB C2 037B
        gbc.setState(0x607e, 0x464e, 0x7da0, 0x8157, 0xa9e0, 0xfd9b, 0x1, 0x0);
        gbc.writeMem(0x607e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x464e, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 037C
        gbc.setState(0x2482, 0x4bda, 0x3f10, 0x4738, 0x8174, 0x45e8, 0x1, 0x0);
        gbc.writeMem(0x2482, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0x2484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 037D
        gbc.setState(0x1791, 0xcbf4, 0x49c0, 0x7e2, 0xd479, 0x87b6, 0x0, 0x0);
        gbc.writeMem(0x1791, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcbf4, gbc.sp());
        EXPECT(0x1793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 037E
        gbc.setState(0x4e9a, 0xe8f7, 0x4400, 0x7484, 0x3131, 0x89e1, 0x1, 0x0);
        gbc.writeMem(0x4e9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe8f7, gbc.sp());
        EXPECT(0x4e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 037F
        gbc.setState(0x95b6, 0xa1ee, 0x1e90, 0x5467, 0x9488, 0x58e7, 0x1, 0x1);
        gbc.writeMem(0x95b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b6));
        EXPECT(0xc2, gbc.readMem(0x95b7));
        // CB C2 0380
        gbc.setState(0xc620, 0xaac3, 0xcc20, 0x82a5, 0xf3de, 0xfc99, 0x1, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc620));
        EXPECT(0xc2, gbc.readMem(0xc621));
        // CB C2 0381
        gbc.setState(0x74ed, 0xc470, 0x15d0, 0x199f, 0x7ea0, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0x74ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc470, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 0382
        gbc.setState(0xe5c0, 0x3ac, 0xa0a0, 0xf444, 0xaf3c, 0x965c, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3ac, gbc.sp());
        EXPECT(0xe5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c0));
        EXPECT(0xc2, gbc.readMem(0xe5c1));
        // CB C2 0383
        gbc.setState(0x54de, 0xed6c, 0xe960, 0xe0c, 0xb0ac, 0x61b6, 0x0, 0x1);
        gbc.writeMem(0x54de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xed6c, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0384
        gbc.setState(0x8b16, 0xd6f1, 0x2b00, 0xb4ee, 0xc4c3, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x8b16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x8b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b16));
        EXPECT(0xc2, gbc.readMem(0x8b17));
        // CB C2 0385
        gbc.setState(0xe13a, 0x1bb8, 0xb5b0, 0xadf7, 0x3e3, 0xec2c, 0x0, 0x1);
        gbc.writeMem(0xe13a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0xe13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13a));
        EXPECT(0xc2, gbc.readMem(0xe13b));
        // CB C2 0386
        gbc.setState(0x64c, 0x5f9, 0xa340, 0xc443, 0x7f07, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0x64c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0x64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0387
        gbc.setState(0x78d1, 0x2786, 0xc5e0, 0x47a8, 0x4b4c, 0xb2bc, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2786, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0388
        gbc.setState(0xb60e, 0x895a, 0x6d70, 0x3598, 0xecac, 0xb35a, 0x0, 0x1);
        gbc.writeMem(0xb60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x895a, gbc.sp());
        EXPECT(0xb610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60e));
        EXPECT(0xc2, gbc.readMem(0xb60f));
        // CB C2 0389
        gbc.setState(0xe3bc, 0x8fa3, 0x2d10, 0x5473, 0x5a7, 0x4397, 0x0, 0x1);
        gbc.writeMem(0xe3bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8fa3, gbc.sp());
        EXPECT(0xe3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3bc));
        EXPECT(0xc2, gbc.readMem(0xe3bd));
        // CB C2 038A
        gbc.setState(0xd60f, 0x48fa, 0xdd90, 0xd8b7, 0x5576, 0xe847, 0x1, 0x0);
        gbc.writeMem(0xd60f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0xd611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60f));
        EXPECT(0xc2, gbc.readMem(0xd610));
        // CB C2 038B
        gbc.setState(0x13ce, 0x5175, 0xb290, 0x2c43, 0xe19a, 0x3e3e, 0x0, 0x0);
        gbc.writeMem(0x13ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5175, gbc.sp());
        EXPECT(0x13d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 038C
        gbc.setState(0xce14, 0x195f, 0xb9f0, 0x42c9, 0xd4ac, 0x46f0, 0x1, 0x0);
        gbc.writeMem(0xce14, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x195f, gbc.sp());
        EXPECT(0xce16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce14));
        EXPECT(0xc2, gbc.readMem(0xce15));
        // CB C2 038D
        gbc.setState(0x3c4d, 0xe54, 0xa0a0, 0x27a3, 0x5a37, 0x3d34, 0x0, 0x0);
        gbc.writeMem(0x3c4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x3c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 038E
        gbc.setState(0xce0e, 0x134, 0x7c80, 0x6a4, 0x5392, 0xcbe6, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x134, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0e));
        EXPECT(0xc2, gbc.readMem(0xce0f));
        // CB C2 038F
        gbc.setState(0xa485, 0xb129, 0xc020, 0x3c2f, 0xbb20, 0xb7a6, 0x0, 0x1);
        gbc.writeMem(0xa485, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb129, gbc.sp());
        EXPECT(0xa487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa485));
        EXPECT(0xc2, gbc.readMem(0xa486));
        // CB C2 0390
        gbc.setState(0x5a3f, 0xb9bf, 0xe4e0, 0x4283, 0xd925, 0x10f1, 0x0, 0x1);
        gbc.writeMem(0x5a3f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 0391
        gbc.setState(0xada5, 0x7cd7, 0x7920, 0x196c, 0x6184, 0xcf0, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7cd7, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada5));
        EXPECT(0xc2, gbc.readMem(0xada6));
        // CB C2 0392
        gbc.setState(0xcae8, 0x65cb, 0x36f0, 0x72e6, 0x8f4c, 0xa144, 0x0, 0x1);
        gbc.writeMem(0xcae8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x65cb, gbc.sp());
        EXPECT(0xcaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae8));
        EXPECT(0xc2, gbc.readMem(0xcae9));
        // CB C2 0393
        gbc.setState(0xbaa7, 0x8efe, 0x66d0, 0xcf49, 0xcba3, 0x4137, 0x0, 0x1);
        gbc.writeMem(0xbaa7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0xbaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa7));
        EXPECT(0xc2, gbc.readMem(0xbaa8));
        // CB C2 0394
        gbc.setState(0x8a56, 0x53c8, 0x3b90, 0x3273, 0x445b, 0xf8eb, 0x0, 0x1);
        gbc.writeMem(0x8a56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x53c8, gbc.sp());
        EXPECT(0x8a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a56));
        EXPECT(0xc2, gbc.readMem(0x8a57));
        // CB C2 0395
        gbc.setState(0xa5f2, 0xa8a7, 0x3850, 0x21b1, 0x703e, 0xcf7c, 0x0, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0xc2, gbc.readMem(0xa5f3));
        // CB C2 0396
        gbc.setState(0x99da, 0x400b, 0xeb20, 0xe91d, 0xd80d, 0xdd28, 0x1, 0x0);
        gbc.writeMem(0x99da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x400b, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99da));
        EXPECT(0xc2, gbc.readMem(0x99db));
        // CB C2 0397
        gbc.setState(0xedd7, 0xec52, 0x9830, 0x12fb, 0x42af, 0x4a4a, 0x0, 0x1);
        gbc.writeMem(0xedd7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xec52, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd7));
        EXPECT(0xc2, gbc.readMem(0xedd8));
        // CB C2 0398
        gbc.setState(0x9137, 0x98c5, 0xddd0, 0xe751, 0x977, 0xbd81, 0x1, 0x0);
        gbc.writeMem(0x9137, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x98c5, gbc.sp());
        EXPECT(0x9139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9137));
        EXPECT(0xc2, gbc.readMem(0x9138));
        // CB C2 0399
        gbc.setState(0x1e5d, 0xd2a1, 0x18b0, 0xae92, 0x67b1, 0xe45a, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd2a1, gbc.sp());
        EXPECT(0x1e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 039A
        gbc.setState(0xa087, 0x5d95, 0x1af0, 0x9193, 0x437f, 0xf1e5, 0x0, 0x0);
        gbc.writeMem(0xa087, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xa089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa087));
        EXPECT(0xc2, gbc.readMem(0xa088));
        // CB C2 039B
        gbc.setState(0x289f, 0x8f40, 0xf770, 0x403b, 0x162a, 0xca3f, 0x1, 0x0);
        gbc.writeMem(0x289f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 039C
        gbc.setState(0x2dc4, 0x64da, 0xe8b0, 0x4ea4, 0x5135, 0x39da, 0x1, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x64da, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 039D
        gbc.setState(0x2407, 0x59bf, 0xc90, 0x7a5d, 0xaa5b, 0xbd5a, 0x0, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 039E
        gbc.setState(0xd542, 0x87cd, 0xa0e0, 0x90ee, 0x6af2, 0x1c42, 0x0, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd542));
        EXPECT(0xc2, gbc.readMem(0xd543));
        // CB C2 039F
        gbc.setState(0xbb8d, 0xb168, 0x4bb0, 0x543b, 0x66a6, 0xfcd6, 0x1, 0x0);
        gbc.writeMem(0xbb8d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb168, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8d));
        EXPECT(0xc2, gbc.readMem(0xbb8e));
        // CB C2 03A0
        gbc.setState(0x1925, 0x78d, 0x7430, 0xf65e, 0x51d0, 0x87ec, 0x0, 0x1);
        gbc.writeMem(0x1925, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x78d, gbc.sp());
        EXPECT(0x1927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03A1
        gbc.setState(0x506, 0x583e, 0x30a0, 0xaad0, 0x4d3b, 0x6394, 0x0, 0x1);
        gbc.writeMem(0x506, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x583e, gbc.sp());
        EXPECT(0x508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03A2
        gbc.setState(0x502b, 0xc019, 0x5c90, 0x504b, 0xfd2a, 0xe5b2, 0x0, 0x0);
        gbc.writeMem(0x502b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0x502d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03A3
        gbc.setState(0x48f, 0x28d6, 0x35b0, 0xc5c5, 0x889d, 0xb05a, 0x0, 0x0);
        gbc.writeMem(0x48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03A5
        gbc.setState(0x4b9f, 0x6c24, 0x6370, 0x82d, 0xaa50, 0x619d, 0x0, 0x1);
        gbc.writeMem(0x4b9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03A6
        gbc.setState(0x9303, 0xc70b, 0xc9e0, 0x953d, 0xd484, 0x395b, 0x0, 0x0);
        gbc.writeMem(0x9303, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc70b, gbc.sp());
        EXPECT(0x9305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9303));
        EXPECT(0xc2, gbc.readMem(0x9304));
        // CB C2 03A7
        gbc.setState(0xf5e, 0xe3de, 0x9ef0, 0x3fcb, 0xa71b, 0x3156, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe3de, gbc.sp());
        EXPECT(0xf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03A8
        gbc.setState(0x85ce, 0x9b0, 0xda0, 0x284d, 0x975a, 0x24f3, 0x0, 0x1);
        gbc.writeMem(0x85ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9b0, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ce));
        EXPECT(0xc2, gbc.readMem(0x85cf));
        // CB C2 03A9
        gbc.setState(0x1918, 0x7132, 0x2c40, 0xf2be, 0xae06, 0xf335, 0x0, 0x1);
        gbc.writeMem(0x1918, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7132, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03AA
        gbc.setState(0xa4b6, 0x3821, 0x0, 0xd2e1, 0x416b, 0x1aef, 0x0, 0x0);
        gbc.writeMem(0xa4b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3821, gbc.sp());
        EXPECT(0xa4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b6));
        EXPECT(0xc2, gbc.readMem(0xa4b7));
        // CB C2 03AB
        gbc.setState(0x9dc4, 0xe366, 0x4250, 0x48fb, 0x9a0e, 0x1830, 0x0, 0x0);
        gbc.writeMem(0x9dc4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe366, gbc.sp());
        EXPECT(0x9dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc4));
        EXPECT(0xc2, gbc.readMem(0x9dc5));
        // CB C2 03AC
        gbc.setState(0x2cb6, 0xdf16, 0x69a0, 0x7a0d, 0x7e0, 0x5ed1, 0x1, 0x1);
        gbc.writeMem(0x2cb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdf16, gbc.sp());
        EXPECT(0x2cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03AD
        gbc.setState(0xd421, 0x41d8, 0x14c0, 0xa937, 0x145, 0x57ac, 0x1, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0xd423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd421));
        EXPECT(0xc2, gbc.readMem(0xd422));
        // CB C2 03AE
        gbc.setState(0xd498, 0x152b, 0xf50, 0xff67, 0xbbe1, 0x36b9, 0x0, 0x0);
        gbc.writeMem(0xd498, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd498));
        EXPECT(0xc2, gbc.readMem(0xd499));
        // CB C2 03AF
        gbc.setState(0x5e7a, 0x24ad, 0xc1b0, 0x9dd0, 0xd1a8, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03B0
        gbc.setState(0xb823, 0x9a58, 0x9980, 0x586c, 0xfc0b, 0x1937, 0x1, 0x1);
        gbc.writeMem(0xb823, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9a58, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb823));
        EXPECT(0xc2, gbc.readMem(0xb824));
        // CB C2 03B1
        gbc.setState(0x4f10, 0xbee, 0x6050, 0x4e63, 0xfdb4, 0x8ce0, 0x0, 0x1);
        gbc.writeMem(0x4f10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbee, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03B2
        gbc.setState(0xc482, 0x62a4, 0x5b30, 0xd618, 0x1ff9, 0x2558, 0x1, 0x0);
        gbc.writeMem(0xc482, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0xc2, gbc.readMem(0xc483));
        // CB C2 03B3
        gbc.setState(0xd05c, 0x917f, 0xcf50, 0x3654, 0xd28e, 0xb1d6, 0x0, 0x1);
        gbc.writeMem(0xd05c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x917f, gbc.sp());
        EXPECT(0xd05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05c));
        EXPECT(0xc2, gbc.readMem(0xd05d));
        // CB C2 03B4
        gbc.setState(0xa738, 0x6fe5, 0xe860, 0x52f2, 0x5d29, 0xcb22, 0x0, 0x0);
        gbc.writeMem(0xa738, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6fe5, gbc.sp());
        EXPECT(0xa73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa738));
        EXPECT(0xc2, gbc.readMem(0xa739));
        // CB C2 03B5
        gbc.setState(0x421e, 0x1817, 0xcd0, 0xf734, 0xae0d, 0x7ee8, 0x1, 0x1);
        gbc.writeMem(0x421e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1817, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03B6
        gbc.setState(0xe1a, 0xdbd5, 0xf0a0, 0x89ef, 0x4729, 0xba0b, 0x1, 0x0);
        gbc.writeMem(0xe1a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdbd5, gbc.sp());
        EXPECT(0xe1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03B7
        gbc.setState(0x937, 0xa30a, 0xec50, 0x164d, 0xd789, 0x8577, 0x1, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0x939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03B8
        gbc.setState(0x51f7, 0x8690, 0x74d0, 0x4d3c, 0xb45a, 0x5030, 0x1, 0x0);
        gbc.writeMem(0x51f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8690, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03B9
        gbc.setState(0x96ca, 0x3801, 0x43d0, 0x35d7, 0xf659, 0x908b, 0x1, 0x1);
        gbc.writeMem(0x96ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3801, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ca));
        EXPECT(0xc2, gbc.readMem(0x96cb));
        // CB C2 03BA
        gbc.setState(0x7798, 0x7294, 0x7e10, 0xdc6a, 0x3b3c, 0x71ea, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7294, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03BB
        gbc.setState(0xa883, 0xdaa8, 0x4270, 0x442d, 0xb7a1, 0xb1e2, 0x0, 0x0);
        gbc.writeMem(0xa883, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdaa8, gbc.sp());
        EXPECT(0xa885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa883));
        EXPECT(0xc2, gbc.readMem(0xa884));
        // CB C2 03BC
        gbc.setState(0x8fad, 0xe61, 0xdf80, 0x85ea, 0x65eb, 0x6f7f, 0x0, 0x1);
        gbc.writeMem(0x8fad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fad));
        EXPECT(0xc2, gbc.readMem(0x8fae));
        // CB C2 03BD
        gbc.setState(0x4f0e, 0xedba, 0xe8b0, 0x9d0e, 0x88df, 0x28c9, 0x0, 0x0);
        gbc.writeMem(0x4f0e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03BE
        gbc.setState(0xbc8a, 0xc6be, 0x9770, 0x1224, 0x30a3, 0xae38, 0x1, 0x1);
        gbc.writeMem(0xbc8a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8a));
        EXPECT(0xc2, gbc.readMem(0xbc8b));
        // CB C2 03BF
        gbc.setState(0xad28, 0xc3bf, 0x4050, 0x4fdf, 0x11c1, 0x9ffe, 0x1, 0x0);
        gbc.writeMem(0xad28, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0xad2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad28));
        EXPECT(0xc2, gbc.readMem(0xad29));
        // CB C2 03C0
        gbc.setState(0x1a91, 0xbfe7, 0x950, 0x574a, 0x78c, 0xbcab, 0x0, 0x0);
        gbc.writeMem(0x1a91, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0x1a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03C1
        gbc.setState(0x97b1, 0x984a, 0x4a20, 0x3d39, 0x72ce, 0xf1c0, 0x1, 0x1);
        gbc.writeMem(0x97b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x984a, gbc.sp());
        EXPECT(0x97b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b1));
        EXPECT(0xc2, gbc.readMem(0x97b2));
        // CB C2 03C3
        gbc.setState(0x5d68, 0x2fa9, 0x6f80, 0x81d8, 0x6dbb, 0x1b9a, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03C4
        gbc.setState(0x3638, 0x9450, 0x68a0, 0x45af, 0xd46f, 0xb199, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9450, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03C6
        gbc.setState(0xcfb6, 0x8816, 0x5fc0, 0x36f8, 0x107a, 0xe61, 0x1, 0x1);
        gbc.writeMem(0xcfb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0xcfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb6));
        EXPECT(0xc2, gbc.readMem(0xcfb7));
        // CB C2 03C7
        gbc.setState(0x7cd1, 0x1619, 0xdc90, 0x2e6f, 0x615b, 0x72bd, 0x1, 0x0);
        gbc.writeMem(0x7cd1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1619, gbc.sp());
        EXPECT(0x7cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03C8
        gbc.setState(0x6726, 0xbf3f, 0x67a0, 0x63fd, 0x5e2e, 0x657f, 0x0, 0x1);
        gbc.writeMem(0x6726, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbf3f, gbc.sp());
        EXPECT(0x6728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03C9
        gbc.setState(0xbf3c, 0x9eea, 0x5f60, 0xc877, 0xe8d0, 0x9b7b, 0x1, 0x1);
        gbc.writeMem(0xbf3c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0xbf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3c));
        EXPECT(0xc2, gbc.readMem(0xbf3d));
        // CB C2 03CA
        gbc.setState(0x9d58, 0x7917, 0xec20, 0xa8e6, 0x3cdb, 0x51ad, 0x1, 0x1);
        gbc.writeMem(0x9d58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7917, gbc.sp());
        EXPECT(0x9d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d58));
        EXPECT(0xc2, gbc.readMem(0x9d59));
        // CB C2 03CB
        gbc.setState(0x1749, 0x7891, 0x7060, 0xae31, 0x63eb, 0x7ba0, 0x1, 0x1);
        gbc.writeMem(0x1749, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7891, gbc.sp());
        EXPECT(0x174b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03CC
        gbc.setState(0x3c90, 0xe37f, 0x8b20, 0x3320, 0x266b, 0x33d3, 0x1, 0x0);
        gbc.writeMem(0x3c90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x3c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03CD
        gbc.setState(0x2cff, 0xeb19, 0x8440, 0x4632, 0x9ca, 0x598, 0x0, 0x0);
        gbc.writeMem(0x2cff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xeb19, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03CE
        gbc.setState(0x3e62, 0x8fca, 0x6c10, 0xa59a, 0xa838, 0x5792, 0x0, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8fca, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03CF
        gbc.setState(0xa607, 0x78ff, 0x3c30, 0xa10b, 0x800f, 0x854c, 0x0, 0x0);
        gbc.writeMem(0xa607, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x78ff, gbc.sp());
        EXPECT(0xa609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa607));
        EXPECT(0xc2, gbc.readMem(0xa608));
        // CB C2 03D0
        gbc.setState(0xd1d3, 0xfef0, 0x1200, 0xe78c, 0x2842, 0x315c, 0x1, 0x0);
        gbc.writeMem(0xd1d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0xd1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d3));
        EXPECT(0xc2, gbc.readMem(0xd1d4));
        // CB C2 03D1
        gbc.setState(0xeab3, 0xb124, 0x3f0, 0x9c35, 0x319f, 0x4239, 0x0, 0x1);
        gbc.writeMem(0xeab3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb124, gbc.sp());
        EXPECT(0xeab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab3));
        EXPECT(0xc2, gbc.readMem(0xeab4));
        // CB C2 03D2
        gbc.setState(0x1d44, 0x42f4, 0xf340, 0x423, 0xd897, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0x1d44, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x42f4, gbc.sp());
        EXPECT(0x1d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03D3
        gbc.setState(0x38b2, 0x30a4, 0xde70, 0xd6f1, 0xbbdd, 0xe691, 0x1, 0x1);
        gbc.writeMem(0x38b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x30a4, gbc.sp());
        EXPECT(0x38b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03D4
        gbc.setState(0xa303, 0x9b70, 0x9790, 0x82ba, 0xd085, 0x2d24, 0x1, 0x1);
        gbc.writeMem(0xa303, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0xa305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa303));
        EXPECT(0xc2, gbc.readMem(0xa304));
        // CB C2 03D5
        gbc.setState(0x2b24, 0xc653, 0xc450, 0x6da9, 0xa776, 0x9812, 0x1, 0x0);
        gbc.writeMem(0x2b24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc653, gbc.sp());
        EXPECT(0x2b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03D6
        gbc.setState(0x812f, 0x3490, 0xad80, 0x94e6, 0x69f5, 0xa69, 0x0, 0x1);
        gbc.writeMem(0x812f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3490, gbc.sp());
        EXPECT(0x8131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812f));
        EXPECT(0xc2, gbc.readMem(0x8130));
        // CB C2 03D7
        gbc.setState(0x7026, 0xaa24, 0x6ba0, 0x93c, 0x8bf8, 0x1685, 0x1, 0x1);
        gbc.writeMem(0x7026, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0x7028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03D8
        gbc.setState(0x5862, 0xa613, 0xdef0, 0xf9a5, 0x4710, 0x6fe1, 0x1, 0x0);
        gbc.writeMem(0x5862, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa613, gbc.sp());
        EXPECT(0x5864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03D9
        gbc.setState(0x60d6, 0x3037, 0x9f00, 0xd292, 0x3095, 0x3df1, 0x0, 0x1);
        gbc.writeMem(0x60d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3037, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03DB
        gbc.setState(0x1908, 0x3e12, 0x8ac0, 0xd381, 0xc88a, 0xa0d7, 0x1, 0x1);
        gbc.writeMem(0x1908, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3e12, gbc.sp());
        EXPECT(0x190a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03DC
        gbc.setState(0xb662, 0xcbb2, 0x3800, 0x1396, 0x656a, 0x1b14, 0x0, 0x0);
        gbc.writeMem(0xb662, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcbb2, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb662));
        EXPECT(0xc2, gbc.readMem(0xb663));
        // CB C2 03DD
        gbc.setState(0x9119, 0xae63, 0x1c0, 0x62cf, 0xfaba, 0xe475, 0x1, 0x0);
        gbc.writeMem(0x9119, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xae63, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9119));
        EXPECT(0xc2, gbc.readMem(0x911a));
        // CB C2 03DE
        gbc.setState(0x9f96, 0x2e3b, 0xc280, 0xf1cf, 0xfab0, 0x74e9, 0x0, 0x1);
        gbc.writeMem(0x9f96, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2e3b, gbc.sp());
        EXPECT(0x9f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f96));
        EXPECT(0xc2, gbc.readMem(0x9f97));
        // CB C2 03DF
        gbc.setState(0x75e7, 0x99fd, 0xe290, 0x5a43, 0xec56, 0x37f3, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03E0
        gbc.setState(0x8322, 0x1ded, 0x6840, 0x4d39, 0x89a3, 0x58fc, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0x8324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8322));
        EXPECT(0xc2, gbc.readMem(0x8323));
        // CB C2 03E1
        gbc.setState(0xdb3, 0x96dc, 0x5070, 0xb51f, 0xbc6, 0xfb52, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03E2
        gbc.setState(0x7dd7, 0x5e79, 0xaea0, 0x8ede, 0xa334, 0x1c11, 0x1, 0x1);
        gbc.writeMem(0x7dd7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e79, gbc.sp());
        EXPECT(0x7dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03E3
        gbc.setState(0x57e2, 0xd236, 0xb800, 0x6ca8, 0x54d6, 0xbf7d, 0x1, 0x0);
        gbc.writeMem(0x57e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x57e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03E4
        gbc.setState(0x12b1, 0xff90, 0x3570, 0x8f1f, 0x6e55, 0x1296, 0x0, 0x0);
        gbc.writeMem(0x12b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0x12b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C2 03E5
        gbc.setState(0x1924, 0x18a7, 0xd420, 0x556f, 0xedb8, 0x8c64, 0x0, 0x0);
        gbc.writeMem(0x1924, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x1926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C2 03E6
        gbc.setState(0x884a, 0x5257, 0x60b0, 0xdffa, 0x7fa5, 0x7cc6, 0x0, 0x1);
        gbc.writeMem(0x884a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5257, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884a));
        EXPECT(0xc2, gbc.readMem(0x884b));
        // CB C2 03E7
        gbc.setState(0x40bc, 0x475, 0xfb60, 0xf091, 0xfd10, 0x30f5, 0x0, 0x0);
        gbc.writeMem(0x40bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0x40be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
