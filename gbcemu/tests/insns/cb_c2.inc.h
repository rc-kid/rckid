    TEST(gbcemu, opcode_cb_c2) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C2 0001
        gbc.setState(0x864f, 0x1877, 0xa310, 0x1093, 0x3cb4, 0xaeec, 0x1, 0x1);
        gbc.writeMem(0x864f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1877);
        EXPECT(gbc.pc(), 0x8651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864f), 0xcb);
        EXPECT(gbc.readMem(0x8650), 0xc2);
        // CB C2 0002
        gbc.setState(0xadbf, 0xe748, 0x7970, 0x22eb, 0x4f04, 0xa252, 0x0, 0x1);
        gbc.writeMem(0xadbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe748);
        EXPECT(gbc.pc(), 0xadc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbf), 0xcb);
        EXPECT(gbc.readMem(0xadc0), 0xc2);
        // CB C2 0003
        gbc.setState(0x94e0, 0x61bc, 0x2ff0, 0xea84, 0x55b7, 0xe032, 0x1, 0x0);
        gbc.writeMem(0x94e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0x94e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e0), 0xcb);
        EXPECT(gbc.readMem(0x94e1), 0xc2);
        // CB C2 0004
        gbc.setState(0x222e, 0xb01b, 0x6b40, 0xe86e, 0x82bb, 0x6ac4, 0x0, 0x0);
        gbc.writeMem(0x222e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb01b);
        EXPECT(gbc.pc(), 0x2230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0005
        gbc.setState(0x2c96, 0x836, 0x970, 0x21a3, 0xec95, 0xebad, 0x1, 0x1);
        gbc.writeMem(0x2c96, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x836);
        EXPECT(gbc.pc(), 0x2c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0007
        gbc.setState(0x467a, 0x9fa2, 0x47b0, 0x93ea, 0xfa59, 0x4007, 0x0, 0x1);
        gbc.writeMem(0x467a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9fa2);
        EXPECT(gbc.pc(), 0x467c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0008
        gbc.setState(0x6fee, 0xd5ce, 0x84b0, 0x7ff4, 0x90d4, 0x5e13, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd5ce);
        EXPECT(gbc.pc(), 0x6ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 000A
        gbc.setState(0x8f1c, 0xc706, 0x7370, 0x57b2, 0xd552, 0x8b0e, 0x0, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc706);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0xc2);
        // CB C2 000B
        gbc.setState(0x789b, 0x36f9, 0xc2f0, 0xa792, 0xe5b7, 0x7682, 0x1, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x36f9);
        EXPECT(gbc.pc(), 0x789d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 000C
        gbc.setState(0xba77, 0x2cf7, 0xe620, 0xdde0, 0xc52d, 0x6e46, 0x1, 0x1);
        gbc.writeMem(0xba77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2cf7);
        EXPECT(gbc.pc(), 0xba79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba77), 0xcb);
        EXPECT(gbc.readMem(0xba78), 0xc2);
        // CB C2 000D
        gbc.setState(0x75c4, 0x203f, 0x5300, 0x998f, 0x1572, 0x9a11, 0x0, 0x0);
        gbc.writeMem(0x75c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x203f);
        EXPECT(gbc.pc(), 0x75c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 000E
        gbc.setState(0xbf76, 0xcbf3, 0x6c0, 0xb588, 0x24af, 0x2e36, 0x0, 0x0);
        gbc.writeMem(0xbf76, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcbf3);
        EXPECT(gbc.pc(), 0xbf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf76), 0xcb);
        EXPECT(gbc.readMem(0xbf77), 0xc2);
        // CB C2 000F
        gbc.setState(0xdea4, 0xe733, 0x8680, 0xebad, 0x13d8, 0x338d, 0x0, 0x0);
        gbc.writeMem(0xdea4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe733);
        EXPECT(gbc.pc(), 0xdea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea4), 0xcb);
        EXPECT(gbc.readMem(0xdea5), 0xc2);
        // CB C2 0010
        gbc.setState(0xedb6, 0xf65c, 0xb070, 0x3126, 0x61c3, 0x602e, 0x1, 0x1);
        gbc.writeMem(0xedb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf65c);
        EXPECT(gbc.pc(), 0xedb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb6), 0xcb);
        EXPECT(gbc.readMem(0xedb7), 0xc2);
        // CB C2 0011
        gbc.setState(0x94b, 0xccb5, 0x4f20, 0x7d48, 0x42dc, 0xad2e, 0x0, 0x1);
        gbc.writeMem(0x94b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xccb5);
        EXPECT(gbc.pc(), 0x94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0012
        gbc.setState(0x490f, 0xf726, 0x13b0, 0xe7e8, 0xcf07, 0xb6c4, 0x0, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf726);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0013
        gbc.setState(0x35ac, 0x67ad, 0xd4a0, 0x4660, 0x9daa, 0xe948, 0x1, 0x1);
        gbc.writeMem(0x35ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x67ad);
        EXPECT(gbc.pc(), 0x35ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0014
        gbc.setState(0x46b7, 0x8130, 0xb1b0, 0x54d5, 0xd54c, 0xc3e0, 0x0, 0x0);
        gbc.writeMem(0x46b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0x46b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0015
        gbc.setState(0x1f08, 0xbd5a, 0x110, 0x9ec5, 0xb18a, 0x6791, 0x1, 0x0);
        gbc.writeMem(0x1f08, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0x1f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0016
        gbc.setState(0x7c58, 0x9a85, 0x6c90, 0x5d8a, 0x2140, 0x32af, 0x1, 0x0);
        gbc.writeMem(0x7c58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9a85);
        EXPECT(gbc.pc(), 0x7c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0017
        gbc.setState(0xb781, 0x6592, 0xbef0, 0x75bf, 0x1bfa, 0xb91b, 0x0, 0x1);
        gbc.writeMem(0xb781, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6592);
        EXPECT(gbc.pc(), 0xb783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb781), 0xcb);
        EXPECT(gbc.readMem(0xb782), 0xc2);
        // CB C2 0018
        gbc.setState(0x7d9, 0xad14, 0x14e0, 0x8720, 0x2b8b, 0xc60d, 0x1, 0x0);
        gbc.writeMem(0x7d9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xad14);
        EXPECT(gbc.pc(), 0x7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0019
        gbc.setState(0x9206, 0x7496, 0xc5b0, 0x904e, 0xa6f2, 0xc91, 0x1, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7496);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9206), 0xcb);
        EXPECT(gbc.readMem(0x9207), 0xc2);
        // CB C2 001A
        gbc.setState(0x6161, 0x5f7b, 0xa10, 0x7e85, 0x6121, 0x7d43, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5f7b);
        EXPECT(gbc.pc(), 0x6163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 001B
        gbc.setState(0x8ad1, 0x2c25, 0x4800, 0x7f28, 0xc8e5, 0x3da4, 0x0, 0x0);
        gbc.writeMem(0x8ad1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2c25);
        EXPECT(gbc.pc(), 0x8ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad1), 0xcb);
        EXPECT(gbc.readMem(0x8ad2), 0xc2);
        // CB C2 001C
        gbc.setState(0xbabe, 0xc70e, 0x4930, 0xe89, 0xb65e, 0xd69b, 0x1, 0x1);
        gbc.writeMem(0xbabe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc70e);
        EXPECT(gbc.pc(), 0xbac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbabe), 0xcb);
        EXPECT(gbc.readMem(0xbabf), 0xc2);
        // CB C2 001E
        gbc.setState(0x52d1, 0x2036, 0x3000, 0xc346, 0x60b7, 0x9c3b, 0x1, 0x1);
        gbc.writeMem(0x52d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2036);
        EXPECT(gbc.pc(), 0x52d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 001F
        gbc.setState(0x9074, 0x3e4a, 0xb1d0, 0x51e5, 0xfccb, 0xa95f, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e4a);
        EXPECT(gbc.pc(), 0x9076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9074), 0xcb);
        EXPECT(gbc.readMem(0x9075), 0xc2);
        // CB C2 0020
        gbc.setState(0xecb2, 0xab71, 0xc490, 0x8201, 0xd0f5, 0xc240, 0x0, 0x1);
        gbc.writeMem(0xecb2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xab71);
        EXPECT(gbc.pc(), 0xecb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb2), 0xcb);
        EXPECT(gbc.readMem(0xecb3), 0xc2);
        // CB C2 0021
        gbc.setState(0xc2b7, 0x5708, 0xd580, 0xb20e, 0x78f2, 0x4b5a, 0x1, 0x1);
        gbc.writeMem(0xc2b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5708);
        EXPECT(gbc.pc(), 0xc2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b7), 0xcb);
        EXPECT(gbc.readMem(0xc2b8), 0xc2);
        // CB C2 0022
        gbc.setState(0x36e0, 0x6d2d, 0x5520, 0xe08f, 0x4445, 0xaeaf, 0x0, 0x0);
        gbc.writeMem(0x36e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6d2d);
        EXPECT(gbc.pc(), 0x36e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0023
        gbc.setState(0x6dbf, 0x2276, 0xbc80, 0x16b3, 0xe061, 0xe4d5, 0x0, 0x0);
        gbc.writeMem(0x6dbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2276);
        EXPECT(gbc.pc(), 0x6dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0024
        gbc.setState(0xd753, 0xfa3a, 0xf260, 0xb971, 0xe3c2, 0xdd13, 0x0, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfa3a);
        EXPECT(gbc.pc(), 0xd755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd753), 0xcb);
        EXPECT(gbc.readMem(0xd754), 0xc2);
        // CB C2 0025
        gbc.setState(0x3409, 0x821d, 0x3010, 0xbd02, 0x9214, 0x6958, 0x0, 0x1);
        gbc.writeMem(0x3409, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x821d);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0026
        gbc.setState(0x24b0, 0x24c9, 0xbe10, 0x6cac, 0xb970, 0x2868, 0x0, 0x1);
        gbc.writeMem(0x24b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x24c9);
        EXPECT(gbc.pc(), 0x24b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0027
        gbc.setState(0xb73a, 0x93b0, 0x5280, 0xdd57, 0xc004, 0xcf92, 0x0, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73a), 0xcb);
        EXPECT(gbc.readMem(0xb73b), 0xc2);
        // CB C2 0029
        gbc.setState(0xcaae, 0x26ed, 0xc360, 0xffa8, 0xf860, 0x2047, 0x1, 0x0);
        gbc.writeMem(0xcaae, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0xcab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaae), 0xcb);
        EXPECT(gbc.readMem(0xcaaf), 0xc2);
        // CB C2 002A
        gbc.setState(0xc0bb, 0x2b3b, 0x2520, 0xc4fc, 0xa5e0, 0x7bfb, 0x1, 0x0);
        gbc.writeMem(0xc0bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2b3b);
        EXPECT(gbc.pc(), 0xc0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0bb), 0xcb);
        EXPECT(gbc.readMem(0xc0bc), 0xc2);
        // CB C2 002B
        gbc.setState(0x55c7, 0x2430, 0x8ff0, 0x8a2, 0x71de, 0x2024, 0x0, 0x0);
        gbc.writeMem(0x55c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 002C
        gbc.setState(0x5d41, 0xe341, 0xba0, 0x9a2d, 0xe8b0, 0xe8e7, 0x0, 0x1);
        gbc.writeMem(0x5d41, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe341);
        EXPECT(gbc.pc(), 0x5d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 002D
        gbc.setState(0xa973, 0xa5d8, 0x1c30, 0x119c, 0xe24e, 0xf01d, 0x0, 0x0);
        gbc.writeMem(0xa973, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0xa975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa973), 0xcb);
        EXPECT(gbc.readMem(0xa974), 0xc2);
        // CB C2 002E
        gbc.setState(0x733f, 0x4ee2, 0x7a50, 0xdf43, 0x6a5f, 0xd481, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4ee2);
        EXPECT(gbc.pc(), 0x7341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 002F
        gbc.setState(0xeb29, 0xb5a9, 0xbb90, 0x4eda, 0x350e, 0x1599, 0x0, 0x1);
        gbc.writeMem(0xeb29, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb5a9);
        EXPECT(gbc.pc(), 0xeb2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb29), 0xcb);
        EXPECT(gbc.readMem(0xeb2a), 0xc2);
        // CB C2 0030
        gbc.setState(0xc549, 0xee2d, 0x1ce0, 0x2cd4, 0xd69, 0xee51, 0x1, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xee2d);
        EXPECT(gbc.pc(), 0xc54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc549), 0xcb);
        EXPECT(gbc.readMem(0xc54a), 0xc2);
        // CB C2 0032
        gbc.setState(0xc631, 0x68fd, 0x84b0, 0xb9f2, 0x89cc, 0x41f7, 0x1, 0x0);
        gbc.writeMem(0xc631, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x68fd);
        EXPECT(gbc.pc(), 0xc633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc631), 0xcb);
        EXPECT(gbc.readMem(0xc632), 0xc2);
        // CB C2 0033
        gbc.setState(0xedbf, 0x23ef, 0x61a0, 0x2a22, 0x9546, 0xcfe7, 0x0, 0x1);
        gbc.writeMem(0xedbf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x23ef);
        EXPECT(gbc.pc(), 0xedc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedbf), 0xcb);
        EXPECT(gbc.readMem(0xedc0), 0xc2);
        // CB C2 0034
        gbc.setState(0x3968, 0x218b, 0xbf50, 0x9070, 0x2db5, 0x7c8b, 0x1, 0x1);
        gbc.writeMem(0x3968, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x218b);
        EXPECT(gbc.pc(), 0x396a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0035
        gbc.setState(0x38f8, 0xd6c0, 0x9b60, 0xa2fd, 0x65a3, 0xc75f, 0x0, 0x0);
        gbc.writeMem(0x38f8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd6c0);
        EXPECT(gbc.pc(), 0x38fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0036
        gbc.setState(0x43c1, 0x87b0, 0x88b0, 0xa694, 0x8834, 0x3a88, 0x1, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x87b0);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0037
        gbc.setState(0xc1cc, 0xa61b, 0x14c0, 0x1e8d, 0xad62, 0x5760, 0x1, 0x0);
        gbc.writeMem(0xc1cc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa61b);
        EXPECT(gbc.pc(), 0xc1ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1cc), 0xcb);
        EXPECT(gbc.readMem(0xc1cd), 0xc2);
        // CB C2 0038
        gbc.setState(0x4485, 0x65af, 0xc800, 0x99ac, 0xd16, 0xf5d9, 0x1, 0x0);
        gbc.writeMem(0x4485, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x65af);
        EXPECT(gbc.pc(), 0x4487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0039
        gbc.setState(0x826c, 0x7f72, 0xf620, 0xab98, 0x1a8e, 0x8b4e, 0x0, 0x1);
        gbc.writeMem(0x826c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7f72);
        EXPECT(gbc.pc(), 0x826e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826c), 0xcb);
        EXPECT(gbc.readMem(0x826d), 0xc2);
        // CB C2 003A
        gbc.setState(0x7ad8, 0xeeb0, 0x5350, 0x9c3e, 0xebac, 0x22c6, 0x1, 0x1);
        gbc.writeMem(0x7ad8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xeeb0);
        EXPECT(gbc.pc(), 0x7ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 003B
        gbc.setState(0x2e5c, 0xb886, 0x7570, 0xf65f, 0xfd12, 0x57bf, 0x0, 0x1);
        gbc.writeMem(0x2e5c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb886);
        EXPECT(gbc.pc(), 0x2e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 003C
        gbc.setState(0xb79f, 0x3dc9, 0x6690, 0xcaf2, 0xf2cb, 0xfdef, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3dc9);
        EXPECT(gbc.pc(), 0xb7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79f), 0xcb);
        EXPECT(gbc.readMem(0xb7a0), 0xc2);
        // CB C2 003D
        gbc.setState(0x6552, 0xd436, 0x8d70, 0xaa43, 0xc2aa, 0x480f, 0x0, 0x0);
        gbc.writeMem(0x6552, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd436);
        EXPECT(gbc.pc(), 0x6554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 003E
        gbc.setState(0xc49c, 0x35e7, 0x3120, 0x573, 0x5e44, 0x7900, 0x1, 0x0);
        gbc.writeMem(0xc49c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0xc49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc49c), 0xcb);
        EXPECT(gbc.readMem(0xc49d), 0xc2);
        // CB C2 0040
        gbc.setState(0xb981, 0xae4f, 0x15c0, 0x8281, 0xe805, 0xd6a2, 0x1, 0x1);
        gbc.writeMem(0xb981, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xae4f);
        EXPECT(gbc.pc(), 0xb983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb981), 0xcb);
        EXPECT(gbc.readMem(0xb982), 0xc2);
        // CB C2 0041
        gbc.setState(0xa221, 0xe275, 0xa9b0, 0xab4e, 0x338e, 0xb89c, 0x1, 0x0);
        gbc.writeMem(0xa221, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe275);
        EXPECT(gbc.pc(), 0xa223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa221), 0xcb);
        EXPECT(gbc.readMem(0xa222), 0xc2);
        // CB C2 0042
        gbc.setState(0x55e6, 0xc0aa, 0x5c90, 0x83c1, 0x7e0e, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x55e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc0aa);
        EXPECT(gbc.pc(), 0x55e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0043
        gbc.setState(0xc31e, 0x98e2, 0x8890, 0x74a4, 0xef51, 0xdb65, 0x1, 0x0);
        gbc.writeMem(0xc31e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x98e2);
        EXPECT(gbc.pc(), 0xc320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc31e), 0xcb);
        EXPECT(gbc.readMem(0xc31f), 0xc2);
        // CB C2 0044
        gbc.setState(0x93f5, 0xf648, 0x4d50, 0xff4b, 0x64bb, 0xf356, 0x1, 0x0);
        gbc.writeMem(0x93f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf648);
        EXPECT(gbc.pc(), 0x93f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f5), 0xcb);
        EXPECT(gbc.readMem(0x93f6), 0xc2);
        // CB C2 0045
        gbc.setState(0x7a36, 0xbd49, 0x67c0, 0x8982, 0xfbc2, 0x2996, 0x1, 0x0);
        gbc.writeMem(0x7a36, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbd49);
        EXPECT(gbc.pc(), 0x7a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0046
        gbc.setState(0xcc4f, 0x331c, 0x3240, 0x7cff, 0x7765, 0x873e, 0x0, 0x0);
        gbc.writeMem(0xcc4f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x331c);
        EXPECT(gbc.pc(), 0xcc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4f), 0xcb);
        EXPECT(gbc.readMem(0xcc50), 0xc2);
        // CB C2 0047
        gbc.setState(0x36d0, 0xe6d9, 0x6fc0, 0xa6fc, 0x56a, 0x9f9b, 0x0, 0x0);
        gbc.writeMem(0x36d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe6d9);
        EXPECT(gbc.pc(), 0x36d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0048
        gbc.setState(0x908e, 0x5b16, 0xb750, 0x9209, 0x339b, 0x1275, 0x1, 0x1);
        gbc.writeMem(0x908e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5b16);
        EXPECT(gbc.pc(), 0x9090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908e), 0xcb);
        EXPECT(gbc.readMem(0x908f), 0xc2);
        // CB C2 0049
        gbc.setState(0xff, 0xcb39, 0xde10, 0xbfa7, 0x6da9, 0xa47b, 0x0, 0x1);
        gbc.writeMem(0xff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcb39);
        EXPECT(gbc.pc(), 0x101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 004A
        gbc.setState(0xd36d, 0x480c, 0xfad0, 0x89ea, 0x276d, 0xcf7c, 0x1, 0x0);
        gbc.writeMem(0xd36d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x480c);
        EXPECT(gbc.pc(), 0xd36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36d), 0xcb);
        EXPECT(gbc.readMem(0xd36e), 0xc2);
        // CB C2 004B
        gbc.setState(0xc0a7, 0xa3e9, 0x48b0, 0xc516, 0x43c8, 0xcce2, 0x1, 0x1);
        gbc.writeMem(0xc0a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa3e9);
        EXPECT(gbc.pc(), 0xc0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a7), 0xcb);
        EXPECT(gbc.readMem(0xc0a8), 0xc2);
        // CB C2 004C
        gbc.setState(0x67e5, 0xb330, 0xfe10, 0x35b8, 0xdb30, 0xac36, 0x1, 0x0);
        gbc.writeMem(0x67e5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb330);
        EXPECT(gbc.pc(), 0x67e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 004D
        gbc.setState(0x955, 0xe5b, 0x2d80, 0x71b6, 0x8e99, 0x7741, 0x1, 0x0);
        gbc.writeMem(0x955, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe5b);
        EXPECT(gbc.pc(), 0x957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 004E
        gbc.setState(0x6c3c, 0x4c73, 0xbe50, 0x5aed, 0xa9db, 0xd064, 0x1, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4c73);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 004F
        gbc.setState(0x6a3, 0x3a6, 0x420, 0x8646, 0x9b3, 0x90ad, 0x0, 0x1);
        gbc.writeMem(0x6a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3a6);
        EXPECT(gbc.pc(), 0x6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0050
        gbc.setState(0xd73b, 0x4b16, 0x44b0, 0x88fc, 0x9003, 0x6316, 0x0, 0x0);
        gbc.writeMem(0xd73b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4b16);
        EXPECT(gbc.pc(), 0xd73d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73b), 0xcb);
        EXPECT(gbc.readMem(0xd73c), 0xc2);
        // CB C2 0051
        gbc.setState(0x2392, 0xf679, 0xb510, 0xdaf, 0x16a3, 0x2f3a, 0x0, 0x1);
        gbc.writeMem(0x2392, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf679);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0052
        gbc.setState(0xd803, 0x7c47, 0x66d0, 0x275a, 0x3658, 0x39d, 0x0, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7c47);
        EXPECT(gbc.pc(), 0xd805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd803), 0xcb);
        EXPECT(gbc.readMem(0xd804), 0xc2);
        // CB C2 0053
        gbc.setState(0x4df3, 0x811a, 0xec30, 0x7ebe, 0x3bfa, 0x100c, 0x0, 0x0);
        gbc.writeMem(0x4df3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x811a);
        EXPECT(gbc.pc(), 0x4df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0054
        gbc.setState(0x1a37, 0xdeb, 0x33a0, 0x1d25, 0x169c, 0x6dc6, 0x1, 0x1);
        gbc.writeMem(0x1a37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdeb);
        EXPECT(gbc.pc(), 0x1a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0055
        gbc.setState(0xae09, 0xbd9e, 0x2480, 0xa744, 0x3142, 0x71d7, 0x0, 0x0);
        gbc.writeMem(0xae09, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbd9e);
        EXPECT(gbc.pc(), 0xae0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae09), 0xcb);
        EXPECT(gbc.readMem(0xae0a), 0xc2);
        // CB C2 0056
        gbc.setState(0x1065, 0xfc0b, 0xa270, 0x52e7, 0x162e, 0x7910, 0x1, 0x0);
        gbc.writeMem(0x1065, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfc0b);
        EXPECT(gbc.pc(), 0x1067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0057
        gbc.setState(0xdf9f, 0xf73e, 0x2200, 0x7cd, 0xa1c6, 0x5fbd, 0x0, 0x1);
        gbc.writeMem(0xdf9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf73e);
        EXPECT(gbc.pc(), 0xdfa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9f), 0xcb);
        EXPECT(gbc.readMem(0xdfa0), 0xc2);
        // CB C2 0058
        gbc.setState(0x1de8, 0x44ba, 0x580, 0x9986, 0x2da8, 0x962b, 0x0, 0x1);
        gbc.writeMem(0x1de8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x44ba);
        EXPECT(gbc.pc(), 0x1dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0059
        gbc.setState(0x6072, 0x8453, 0xb920, 0xabf8, 0x47c0, 0x8288, 0x1, 0x1);
        gbc.writeMem(0x6072, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0x6074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 005A
        gbc.setState(0xd45b, 0xde73, 0xcf50, 0x6904, 0xbd25, 0xff57, 0x1, 0x1);
        gbc.writeMem(0xd45b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xde73);
        EXPECT(gbc.pc(), 0xd45d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45b), 0xcb);
        EXPECT(gbc.readMem(0xd45c), 0xc2);
        // CB C2 005B
        gbc.setState(0x3112, 0xb44, 0xbdb0, 0x40bb, 0xa6b7, 0xbe16, 0x0, 0x0);
        gbc.writeMem(0x3112, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb44);
        EXPECT(gbc.pc(), 0x3114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 005C
        gbc.setState(0x6236, 0x4feb, 0x7220, 0x61ac, 0x9b8a, 0x4382, 0x1, 0x1);
        gbc.writeMem(0x6236, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4feb);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 005D
        gbc.setState(0x5851, 0x512d, 0xdfe0, 0x564c, 0x69a4, 0xf7a2, 0x1, 0x1);
        gbc.writeMem(0x5851, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x512d);
        EXPECT(gbc.pc(), 0x5853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 005E
        gbc.setState(0x30f, 0x2d13, 0xd9b0, 0xe61a, 0x623b, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0x30f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2d13);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 005F
        gbc.setState(0x5416, 0xc498, 0x2b40, 0x8255, 0x3368, 0xc0b0, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc498);
        EXPECT(gbc.pc(), 0x5418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0060
        gbc.setState(0x835a, 0x8bf0, 0x49a0, 0x343a, 0xa17e, 0x143b, 0x0, 0x1);
        gbc.writeMem(0x835a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8bf0);
        EXPECT(gbc.pc(), 0x835c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835a), 0xcb);
        EXPECT(gbc.readMem(0x835b), 0xc2);
        // CB C2 0061
        gbc.setState(0xa5ee, 0xf32a, 0x5aa0, 0x549c, 0xdb0, 0xd870, 0x0, 0x1);
        gbc.writeMem(0xa5ee, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf32a);
        EXPECT(gbc.pc(), 0xa5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ee), 0xcb);
        EXPECT(gbc.readMem(0xa5ef), 0xc2);
        // CB C2 0062
        gbc.setState(0x8109, 0x661d, 0x9c50, 0xaf16, 0xf7ec, 0xea2f, 0x0, 0x1);
        gbc.writeMem(0x8109, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x661d);
        EXPECT(gbc.pc(), 0x810b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8109), 0xcb);
        EXPECT(gbc.readMem(0x810a), 0xc2);
        // CB C2 0063
        gbc.setState(0x6fc5, 0x32ce, 0x4930, 0x9b7c, 0xca90, 0xadb1, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x32ce);
        EXPECT(gbc.pc(), 0x6fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0064
        gbc.setState(0x4fd, 0x3fbb, 0xaa20, 0xcfe1, 0x7b20, 0x7e66, 0x1, 0x0);
        gbc.writeMem(0x4fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3fbb);
        EXPECT(gbc.pc(), 0x4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0065
        gbc.setState(0xaed1, 0xae33, 0x5e60, 0x8301, 0x865c, 0x26f4, 0x1, 0x1);
        gbc.writeMem(0xaed1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xae33);
        EXPECT(gbc.pc(), 0xaed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed1), 0xcb);
        EXPECT(gbc.readMem(0xaed2), 0xc2);
        // CB C2 0066
        gbc.setState(0xe708, 0xf915, 0x7850, 0xcd05, 0xa5a9, 0x44c1, 0x0, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf915);
        EXPECT(gbc.pc(), 0xe70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe708), 0xcb);
        EXPECT(gbc.readMem(0xe709), 0xc2);
        // CB C2 0067
        gbc.setState(0x7d26, 0x3af3, 0x29c0, 0x6309, 0x713d, 0xede, 0x0, 0x1);
        gbc.writeMem(0x7d26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3af3);
        EXPECT(gbc.pc(), 0x7d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0068
        gbc.setState(0xd197, 0x5971, 0x99c0, 0xb20a, 0x9565, 0x4034, 0x0, 0x0);
        gbc.writeMem(0xd197, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5971);
        EXPECT(gbc.pc(), 0xd199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd197), 0xcb);
        EXPECT(gbc.readMem(0xd198), 0xc2);
        // CB C2 0069
        gbc.setState(0x7626, 0xb4aa, 0xb340, 0x698, 0xea0, 0xe1d3, 0x1, 0x0);
        gbc.writeMem(0x7626, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb4aa);
        EXPECT(gbc.pc(), 0x7628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 006A
        gbc.setState(0x80af, 0x46bd, 0xe470, 0x9347, 0xcab8, 0x9616, 0x0, 0x1);
        gbc.writeMem(0x80af, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x46bd);
        EXPECT(gbc.pc(), 0x80b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80af), 0xcb);
        EXPECT(gbc.readMem(0x80b0), 0xc2);
        // CB C2 006B
        gbc.setState(0xee9c, 0xda1c, 0x2300, 0x2f4d, 0xe58, 0x47f0, 0x0, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xda1c);
        EXPECT(gbc.pc(), 0xee9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9c), 0xcb);
        EXPECT(gbc.readMem(0xee9d), 0xc2);
        // CB C2 006C
        gbc.setState(0xd18f, 0x21fe, 0x35f0, 0xd2c3, 0xefeb, 0x205d, 0x1, 0x1);
        gbc.writeMem(0xd18f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x21fe);
        EXPECT(gbc.pc(), 0xd191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd18f), 0xcb);
        EXPECT(gbc.readMem(0xd190), 0xc2);
        // CB C2 006D
        gbc.setState(0x8764, 0xd293, 0xca50, 0xd6c7, 0xdec6, 0xd991, 0x1, 0x1);
        gbc.writeMem(0x8764, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd293);
        EXPECT(gbc.pc(), 0x8766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8764), 0xcb);
        EXPECT(gbc.readMem(0x8765), 0xc2);
        // CB C2 006E
        gbc.setState(0xefae, 0x9a45, 0x6df0, 0x524f, 0xca0a, 0x84fa, 0x1, 0x0);
        gbc.writeMem(0xefae, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9a45);
        EXPECT(gbc.pc(), 0xefb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefae), 0xcb);
        EXPECT(gbc.readMem(0xefaf), 0xc2);
        // CB C2 0070
        gbc.setState(0x7149, 0xaba4, 0x6210, 0xc3ff, 0xc4ea, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0x7149, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaba4);
        EXPECT(gbc.pc(), 0x714b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0071
        gbc.setState(0xbe3e, 0xf599, 0x4f30, 0x9e42, 0xc652, 0x8914, 0x1, 0x1);
        gbc.writeMem(0xbe3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf599);
        EXPECT(gbc.pc(), 0xbe40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe3e), 0xcb);
        EXPECT(gbc.readMem(0xbe3f), 0xc2);
        // CB C2 0072
        gbc.setState(0xe8a3, 0x549a, 0x4270, 0xcc84, 0x72dc, 0x7c47, 0x1, 0x0);
        gbc.writeMem(0xe8a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x549a);
        EXPECT(gbc.pc(), 0xe8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a3), 0xcb);
        EXPECT(gbc.readMem(0xe8a4), 0xc2);
        // CB C2 0074
        gbc.setState(0x491, 0xef89, 0x8f30, 0x9ce4, 0x3c0c, 0x5e61, 0x1, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xef89);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0076
        gbc.setState(0x90d3, 0x5e3a, 0x3000, 0x9a16, 0x5101, 0x1bf7, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5e3a);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90d3), 0xcb);
        EXPECT(gbc.readMem(0x90d4), 0xc2);
        // CB C2 0077
        gbc.setState(0x86dd, 0x90bd, 0xa6b0, 0xe65b, 0x1013, 0x27ff, 0x0, 0x0);
        gbc.writeMem(0x86dd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x90bd);
        EXPECT(gbc.pc(), 0x86df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86dd), 0xcb);
        EXPECT(gbc.readMem(0x86de), 0xc2);
        // CB C2 0078
        gbc.setState(0x81d6, 0xcfa6, 0x4460, 0xd14a, 0xa69, 0xcff3, 0x0, 0x1);
        gbc.writeMem(0x81d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcfa6);
        EXPECT(gbc.pc(), 0x81d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d6), 0xcb);
        EXPECT(gbc.readMem(0x81d7), 0xc2);
        // CB C2 0079
        gbc.setState(0x4bad, 0xf514, 0xa670, 0xb473, 0x4010, 0xcc1c, 0x1, 0x0);
        gbc.writeMem(0x4bad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf514);
        EXPECT(gbc.pc(), 0x4baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 007A
        gbc.setState(0x9a89, 0xf54b, 0x6770, 0x9253, 0xfbc7, 0xd94d, 0x0, 0x0);
        gbc.writeMem(0x9a89, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf54b);
        EXPECT(gbc.pc(), 0x9a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a89), 0xcb);
        EXPECT(gbc.readMem(0x9a8a), 0xc2);
        // CB C2 007B
        gbc.setState(0x6fe9, 0x81c9, 0xb360, 0x9c62, 0x6020, 0xcd68, 0x0, 0x1);
        gbc.writeMem(0x6fe9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x81c9);
        EXPECT(gbc.pc(), 0x6feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 007C
        gbc.setState(0x2fa0, 0xb4f9, 0x600, 0x4dbb, 0xfbbe, 0x2892, 0x1, 0x0);
        gbc.writeMem(0x2fa0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb4f9);
        EXPECT(gbc.pc(), 0x2fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 007D
        gbc.setState(0x7119, 0x73b2, 0x3650, 0x4a14, 0xf070, 0xd251, 0x1, 0x1);
        gbc.writeMem(0x7119, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x73b2);
        EXPECT(gbc.pc(), 0x711b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 007E
        gbc.setState(0x8ac8, 0xb9d7, 0xcc00, 0x902e, 0x73a3, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0x8ac8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb9d7);
        EXPECT(gbc.pc(), 0x8aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac8), 0xcb);
        EXPECT(gbc.readMem(0x8ac9), 0xc2);
        // CB C2 007F
        gbc.setState(0xcf2d, 0xe853, 0x7830, 0xec22, 0xbe8a, 0x7597, 0x1, 0x0);
        gbc.writeMem(0xcf2d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe853);
        EXPECT(gbc.pc(), 0xcf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2d), 0xcb);
        EXPECT(gbc.readMem(0xcf2e), 0xc2);
        // CB C2 0080
        gbc.setState(0xaa46, 0x8e1a, 0x9bc0, 0x7bfd, 0x1a07, 0xe2a7, 0x0, 0x1);
        gbc.writeMem(0xaa46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8e1a);
        EXPECT(gbc.pc(), 0xaa48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa46), 0xcb);
        EXPECT(gbc.readMem(0xaa47), 0xc2);
        // CB C2 0081
        gbc.setState(0xc145, 0x79bd, 0xe310, 0xf852, 0x604b, 0x498, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x79bd);
        EXPECT(gbc.pc(), 0xc147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc145), 0xcb);
        EXPECT(gbc.readMem(0xc146), 0xc2);
        // CB C2 0082
        gbc.setState(0x2bb6, 0xcd06, 0x3790, 0x4c58, 0x26e6, 0x5765, 0x0, 0x0);
        gbc.writeMem(0x2bb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0x2bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0083
        gbc.setState(0x81c2, 0x435e, 0xed00, 0xdf56, 0xe958, 0xc914, 0x1, 0x1);
        gbc.writeMem(0x81c2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x435e);
        EXPECT(gbc.pc(), 0x81c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c2), 0xcb);
        EXPECT(gbc.readMem(0x81c3), 0xc2);
        // CB C2 0084
        gbc.setState(0xec1e, 0x81e4, 0x3760, 0x8614, 0xf3dd, 0xfce6, 0x1, 0x0);
        gbc.writeMem(0xec1e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x81e4);
        EXPECT(gbc.pc(), 0xec20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec1e), 0xcb);
        EXPECT(gbc.readMem(0xec1f), 0xc2);
        // CB C2 0085
        gbc.setState(0x92bb, 0xcf77, 0xaf50, 0x2b79, 0xb782, 0x9a92, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcf77);
        EXPECT(gbc.pc(), 0x92bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bb), 0xcb);
        EXPECT(gbc.readMem(0x92bc), 0xc2);
        // CB C2 0086
        gbc.setState(0x2038, 0xd799, 0xdbb0, 0x4dd1, 0x2005, 0x807, 0x1, 0x0);
        gbc.writeMem(0x2038, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd799);
        EXPECT(gbc.pc(), 0x203a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0087
        gbc.setState(0x60cd, 0x5523, 0x8b40, 0xc60, 0x493e, 0x4038, 0x0, 0x1);
        gbc.writeMem(0x60cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5523);
        EXPECT(gbc.pc(), 0x60cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0088
        gbc.setState(0x3f57, 0x28a, 0x240, 0x8a79, 0x6bdb, 0x2d93, 0x1, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x28a);
        EXPECT(gbc.pc(), 0x3f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0089
        gbc.setState(0x7825, 0x72cd, 0xd00, 0xeae0, 0xa0c9, 0x4a1, 0x1, 0x0);
        gbc.writeMem(0x7825, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x72cd);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 008A
        gbc.setState(0xb27d, 0x6602, 0x8440, 0xb476, 0x2de9, 0x782d, 0x0, 0x1);
        gbc.writeMem(0xb27d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6602);
        EXPECT(gbc.pc(), 0xb27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27d), 0xcb);
        EXPECT(gbc.readMem(0xb27e), 0xc2);
        // CB C2 008B
        gbc.setState(0x60e, 0x631c, 0x4bd0, 0x898e, 0x1ca1, 0xea31, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x631c);
        EXPECT(gbc.pc(), 0x610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 008C
        gbc.setState(0x62c0, 0x91c5, 0xe5e0, 0xd09e, 0xec, 0x3d00, 0x0, 0x1);
        gbc.writeMem(0x62c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x91c5);
        EXPECT(gbc.pc(), 0x62c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 008D
        gbc.setState(0xdcb5, 0xeb5f, 0xb050, 0x1e6b, 0xc184, 0x3ee6, 0x0, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeb5f);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0xc2);
        // CB C2 008E
        gbc.setState(0xdd8e, 0xa05f, 0x93a0, 0x655f, 0x8c52, 0x3a05, 0x1, 0x1);
        gbc.writeMem(0xdd8e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0xdd90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8e), 0xcb);
        EXPECT(gbc.readMem(0xdd8f), 0xc2);
        // CB C2 008F
        gbc.setState(0x4041, 0xfab7, 0x9e80, 0x32b7, 0x8625, 0x50f9, 0x0, 0x0);
        gbc.writeMem(0x4041, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfab7);
        EXPECT(gbc.pc(), 0x4043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0090
        gbc.setState(0xc584, 0xcc6e, 0xcd10, 0x21e5, 0x1e19, 0x18fa, 0x0, 0x0);
        gbc.writeMem(0xc584, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcc6e);
        EXPECT(gbc.pc(), 0xc586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc584), 0xcb);
        EXPECT(gbc.readMem(0xc585), 0xc2);
        // CB C2 0091
        gbc.setState(0x76de, 0xb6de, 0xb4f0, 0x9ef2, 0x7672, 0xb305, 0x0, 0x1);
        gbc.writeMem(0x76de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb6de);
        EXPECT(gbc.pc(), 0x76e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0092
        gbc.setState(0xd2c9, 0x1134, 0xa760, 0xb3f2, 0xb625, 0x9b46, 0x1, 0x1);
        gbc.writeMem(0xd2c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1134);
        EXPECT(gbc.pc(), 0xd2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c9), 0xcb);
        EXPECT(gbc.readMem(0xd2ca), 0xc2);
        // CB C2 0093
        gbc.setState(0x3cb1, 0xab37, 0x7e90, 0x66b8, 0x11a3, 0xce3e, 0x1, 0x0);
        gbc.writeMem(0x3cb1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xab37);
        EXPECT(gbc.pc(), 0x3cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0094
        gbc.setState(0x5a57, 0x3f2f, 0x73f0, 0x2729, 0x4f4f, 0x81eb, 0x1, 0x1);
        gbc.writeMem(0x5a57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3f2f);
        EXPECT(gbc.pc(), 0x5a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0095
        gbc.setState(0xc4aa, 0x3348, 0xf490, 0xe4a3, 0xc182, 0x94a0, 0x1, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3348);
        EXPECT(gbc.pc(), 0xc4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4aa), 0xcb);
        EXPECT(gbc.readMem(0xc4ab), 0xc2);
        // CB C2 0096
        gbc.setState(0x45c2, 0x311a, 0x35a0, 0x9946, 0x595, 0x634d, 0x0, 0x1);
        gbc.writeMem(0x45c2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x311a);
        EXPECT(gbc.pc(), 0x45c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0097
        gbc.setState(0x95d5, 0x4d69, 0xfc50, 0x7d73, 0x7714, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x95d5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4d69);
        EXPECT(gbc.pc(), 0x95d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d5), 0xcb);
        EXPECT(gbc.readMem(0x95d6), 0xc2);
        // CB C2 0098
        gbc.setState(0xaee5, 0xb571, 0xf290, 0x3a6f, 0x34b1, 0xd83a, 0x0, 0x1);
        gbc.writeMem(0xaee5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb571);
        EXPECT(gbc.pc(), 0xaee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee5), 0xcb);
        EXPECT(gbc.readMem(0xaee6), 0xc2);
        // CB C2 009A
        gbc.setState(0x43e5, 0x216, 0x990, 0x6f3b, 0x285c, 0x12d6, 0x0, 0x1);
        gbc.writeMem(0x43e5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x216);
        EXPECT(gbc.pc(), 0x43e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 009B
        gbc.setState(0x9ad8, 0xc2dc, 0xace0, 0x5e4e, 0xc921, 0x9128, 0x1, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc2dc);
        EXPECT(gbc.pc(), 0x9ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad8), 0xcb);
        EXPECT(gbc.readMem(0x9ad9), 0xc2);
        // CB C2 009C
        gbc.setState(0xcd85, 0xc9f4, 0xa660, 0xc155, 0xec20, 0xb2cc, 0x0, 0x1);
        gbc.writeMem(0xcd85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc9f4);
        EXPECT(gbc.pc(), 0xcd87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd85), 0xcb);
        EXPECT(gbc.readMem(0xcd86), 0xc2);
        // CB C2 009D
        gbc.setState(0x8c9a, 0x49ac, 0x5280, 0x9e2c, 0x56f4, 0xd13, 0x1, 0x0);
        gbc.writeMem(0x8c9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x49ac);
        EXPECT(gbc.pc(), 0x8c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0xcb);
        EXPECT(gbc.readMem(0x8c9b), 0xc2);
        // CB C2 009E
        gbc.setState(0xbd1b, 0xd8c, 0xbbf0, 0xcda6, 0xf4bd, 0x84e3, 0x0, 0x0);
        gbc.writeMem(0xbd1b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd8c);
        EXPECT(gbc.pc(), 0xbd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1b), 0xcb);
        EXPECT(gbc.readMem(0xbd1c), 0xc2);
        // CB C2 009F
        gbc.setState(0x2c18, 0x58a8, 0x5080, 0xc0a1, 0xdce, 0x4b61, 0x0, 0x1);
        gbc.writeMem(0x2c18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x58a8);
        EXPECT(gbc.pc(), 0x2c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00A0
        gbc.setState(0x5e92, 0xca38, 0xe170, 0x51ec, 0xc1e8, 0x5a3f, 0x1, 0x1);
        gbc.writeMem(0x5e92, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xca38);
        EXPECT(gbc.pc(), 0x5e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00A1
        gbc.setState(0x8dbc, 0x219a, 0x34f0, 0x5b62, 0xae93, 0x9e0c, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x219a);
        EXPECT(gbc.pc(), 0x8dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbc), 0xcb);
        EXPECT(gbc.readMem(0x8dbd), 0xc2);
        // CB C2 00A2
        gbc.setState(0xc4ea, 0xa4b3, 0x6fb0, 0xbc79, 0x373c, 0x604d, 0x1, 0x0);
        gbc.writeMem(0xc4ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0xc4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ea), 0xcb);
        EXPECT(gbc.readMem(0xc4eb), 0xc2);
        // CB C2 00A3
        gbc.setState(0x6e4, 0x7b91, 0xfb30, 0x5a09, 0xb873, 0xbd8e, 0x1, 0x0);
        gbc.writeMem(0x6e4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7b91);
        EXPECT(gbc.pc(), 0x6e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00A4
        gbc.setState(0xaab1, 0xe18f, 0x5ae0, 0x891f, 0x6ef2, 0x2b24, 0x0, 0x1);
        gbc.writeMem(0xaab1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe18f);
        EXPECT(gbc.pc(), 0xaab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab1), 0xcb);
        EXPECT(gbc.readMem(0xaab2), 0xc2);
        // CB C2 00A5
        gbc.setState(0x6c40, 0xcfbd, 0x8f20, 0xdf41, 0xb2e7, 0x46e6, 0x0, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcfbd);
        EXPECT(gbc.pc(), 0x6c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00A6
        gbc.setState(0xe7a0, 0x5ecd, 0x60c0, 0x339, 0xb838, 0x6a71, 0x0, 0x0);
        gbc.writeMem(0xe7a0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5ecd);
        EXPECT(gbc.pc(), 0xe7a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a0), 0xcb);
        EXPECT(gbc.readMem(0xe7a1), 0xc2);
        // CB C2 00A7
        gbc.setState(0x732c, 0xffbe, 0xc5f0, 0x7fa0, 0x265a, 0xfa6f, 0x0, 0x1);
        gbc.writeMem(0x732c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xffbe);
        EXPECT(gbc.pc(), 0x732e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00A8
        gbc.setState(0x1ec2, 0xd01e, 0xd3e0, 0xd6f2, 0xbd6a, 0x4f25, 0x1, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd01e);
        EXPECT(gbc.pc(), 0x1ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00A9
        gbc.setState(0xe7f7, 0xb06, 0x1110, 0x1958, 0xaf9e, 0x7d8a, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb06);
        EXPECT(gbc.pc(), 0xe7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f7), 0xcb);
        EXPECT(gbc.readMem(0xe7f8), 0xc2);
        // CB C2 00AA
        gbc.setState(0x5b53, 0xbce3, 0x810, 0x86af, 0x1af5, 0xf5fd, 0x0, 0x0);
        gbc.writeMem(0x5b53, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbce3);
        EXPECT(gbc.pc(), 0x5b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00AB
        gbc.setState(0x209b, 0x4158, 0xa420, 0xc08e, 0xa445, 0xfa95, 0x1, 0x0);
        gbc.writeMem(0x209b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4158);
        EXPECT(gbc.pc(), 0x209d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00AC
        gbc.setState(0x407d, 0x959e, 0x2af0, 0x9245, 0x955d, 0xd4a0, 0x0, 0x1);
        gbc.writeMem(0x407d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x959e);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00AD
        gbc.setState(0x515c, 0x74fd, 0xb260, 0x15b9, 0x330c, 0x69b6, 0x0, 0x0);
        gbc.writeMem(0x515c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x74fd);
        EXPECT(gbc.pc(), 0x515e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00AE
        gbc.setState(0xcf9d, 0x5713, 0x5b30, 0xa4f6, 0xf21, 0xfb3a, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5713);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0xc2);
        // CB C2 00AF
        gbc.setState(0x8b9c, 0x3b2f, 0xe550, 0x9153, 0xed91, 0xed05, 0x1, 0x0);
        gbc.writeMem(0x8b9c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b2f);
        EXPECT(gbc.pc(), 0x8b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9c), 0xcb);
        EXPECT(gbc.readMem(0x8b9d), 0xc2);
        // CB C2 00B0
        gbc.setState(0x9a9d, 0x1edb, 0x8f80, 0x6fed, 0xa20, 0x7378, 0x0, 0x1);
        gbc.writeMem(0x9a9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1edb);
        EXPECT(gbc.pc(), 0x9a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9d), 0xcb);
        EXPECT(gbc.readMem(0x9a9e), 0xc2);
        // CB C2 00B1
        gbc.setState(0x1afd, 0x7eb4, 0xbdf0, 0x1e3d, 0x5fda, 0xc992, 0x0, 0x0);
        gbc.writeMem(0x1afd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7eb4);
        EXPECT(gbc.pc(), 0x1aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00B2
        gbc.setState(0x8d86, 0xf828, 0x8920, 0xcf74, 0xda96, 0x6856, 0x1, 0x1);
        gbc.writeMem(0x8d86, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf828);
        EXPECT(gbc.pc(), 0x8d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d86), 0xcb);
        EXPECT(gbc.readMem(0x8d87), 0xc2);
        // CB C2 00B3
        gbc.setState(0xa356, 0x14fd, 0x4cc0, 0xb551, 0x2fd9, 0x256d, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x14fd);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0xc2);
        // CB C2 00B4
        gbc.setState(0x4e74, 0x29c8, 0x7740, 0x838e, 0x34e5, 0x3f45, 0x1, 0x0);
        gbc.writeMem(0x4e74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x29c8);
        EXPECT(gbc.pc(), 0x4e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00B5
        gbc.setState(0x9b85, 0x3afc, 0xdaa0, 0x2e78, 0x993e, 0x8906, 0x0, 0x1);
        gbc.writeMem(0x9b85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3afc);
        EXPECT(gbc.pc(), 0x9b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b85), 0xcb);
        EXPECT(gbc.readMem(0x9b86), 0xc2);
        // CB C2 00B7
        gbc.setState(0x25a3, 0xd496, 0x2b40, 0x828c, 0xc11b, 0x94e2, 0x1, 0x0);
        gbc.writeMem(0x25a3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd496);
        EXPECT(gbc.pc(), 0x25a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00B8
        gbc.setState(0xea91, 0xae47, 0x18c0, 0xac6b, 0xaf51, 0x2c61, 0x0, 0x0);
        gbc.writeMem(0xea91, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0xea93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea91), 0xcb);
        EXPECT(gbc.readMem(0xea92), 0xc2);
        // CB C2 00B9
        gbc.setState(0xc9e1, 0x9df5, 0x3fa0, 0x571c, 0x12ed, 0xd42c, 0x0, 0x1);
        gbc.writeMem(0xc9e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9df5);
        EXPECT(gbc.pc(), 0xc9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e1), 0xcb);
        EXPECT(gbc.readMem(0xc9e2), 0xc2);
        // CB C2 00BA
        gbc.setState(0x667, 0x82d0, 0xa7c0, 0x8418, 0x4142, 0xe74f, 0x0, 0x1);
        gbc.writeMem(0x667, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x82d0);
        EXPECT(gbc.pc(), 0x669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00BB
        gbc.setState(0x93c6, 0x79cb, 0x3210, 0x465d, 0xff35, 0xddfb, 0x0, 0x0);
        gbc.writeMem(0x93c6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x79cb);
        EXPECT(gbc.pc(), 0x93c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c6), 0xcb);
        EXPECT(gbc.readMem(0x93c7), 0xc2);
        // CB C2 00BC
        gbc.setState(0x3965, 0x383, 0x73f0, 0xd8e8, 0xffae, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x3965, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x383);
        EXPECT(gbc.pc(), 0x3967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00BD
        gbc.setState(0x5ab0, 0x5eaf, 0xa6f0, 0x523, 0xe61c, 0xacf7, 0x0, 0x1);
        gbc.writeMem(0x5ab0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5eaf);
        EXPECT(gbc.pc(), 0x5ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00BE
        gbc.setState(0x5764, 0xc5cd, 0x69b0, 0x4c8d, 0xc1d2, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0x5764, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc5cd);
        EXPECT(gbc.pc(), 0x5766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00BF
        gbc.setState(0x437, 0x76dd, 0xd890, 0x35fb, 0xa158, 0x3160, 0x0, 0x1);
        gbc.writeMem(0x437, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0x439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00C0
        gbc.setState(0x6070, 0x6301, 0xed20, 0xae19, 0x23d4, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6301);
        EXPECT(gbc.pc(), 0x6072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00C1
        gbc.setState(0xe2e7, 0x5459, 0x68c0, 0x6b33, 0x7fcb, 0xbd37, 0x1, 0x0);
        gbc.writeMem(0xe2e7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5459);
        EXPECT(gbc.pc(), 0xe2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e7), 0xcb);
        EXPECT(gbc.readMem(0xe2e8), 0xc2);
        // CB C2 00C2
        gbc.setState(0x99e6, 0x609, 0x8730, 0x575a, 0x2423, 0xda56, 0x0, 0x1);
        gbc.writeMem(0x99e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x609);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e6), 0xcb);
        EXPECT(gbc.readMem(0x99e7), 0xc2);
        // CB C2 00C3
        gbc.setState(0x84c4, 0x8ab9, 0x2bf0, 0xb384, 0xd5a, 0x5d56, 0x1, 0x1);
        gbc.writeMem(0x84c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8ab9);
        EXPECT(gbc.pc(), 0x84c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c4), 0xcb);
        EXPECT(gbc.readMem(0x84c5), 0xc2);
        // CB C2 00C4
        gbc.setState(0x6849, 0xcd44, 0x6100, 0x3053, 0x8f00, 0x6590, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcd44);
        EXPECT(gbc.pc(), 0x684b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00C5
        gbc.setState(0xc9a4, 0x1e98, 0x4fe0, 0x8a3b, 0x3b8b, 0x3a6f, 0x1, 0x0);
        gbc.writeMem(0xc9a4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1e98);
        EXPECT(gbc.pc(), 0xc9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a4), 0xcb);
        EXPECT(gbc.readMem(0xc9a5), 0xc2);
        // CB C2 00C6
        gbc.setState(0xd798, 0x3595, 0x5730, 0xa903, 0x25ed, 0xb667, 0x0, 0x0);
        gbc.writeMem(0xd798, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3595);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd798), 0xcb);
        EXPECT(gbc.readMem(0xd799), 0xc2);
        // CB C2 00C7
        gbc.setState(0xa8dc, 0x5e53, 0x6720, 0xeaa6, 0x2869, 0x4dff, 0x1, 0x1);
        gbc.writeMem(0xa8dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5e53);
        EXPECT(gbc.pc(), 0xa8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8dc), 0xcb);
        EXPECT(gbc.readMem(0xa8dd), 0xc2);
        // CB C2 00C8
        gbc.setState(0xa86d, 0xe71e, 0xafd0, 0xb945, 0x1577, 0x2723, 0x0, 0x0);
        gbc.writeMem(0xa86d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe71e);
        EXPECT(gbc.pc(), 0xa86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86d), 0xcb);
        EXPECT(gbc.readMem(0xa86e), 0xc2);
        // CB C2 00CA
        gbc.setState(0xd792, 0x2627, 0x4b60, 0xbad, 0xe6e, 0x4c9, 0x0, 0x1);
        gbc.writeMem(0xd792, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2627);
        EXPECT(gbc.pc(), 0xd794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd792), 0xcb);
        EXPECT(gbc.readMem(0xd793), 0xc2);
        // CB C2 00CB
        gbc.setState(0x3903, 0xd7f8, 0x66f0, 0xc79c, 0xf67f, 0x97a2, 0x0, 0x0);
        gbc.writeMem(0x3903, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd7f8);
        EXPECT(gbc.pc(), 0x3905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00CC
        gbc.setState(0x1c37, 0x9b8d, 0x580, 0xef1c, 0x93b7, 0x9540, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9b8d);
        EXPECT(gbc.pc(), 0x1c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00CD
        gbc.setState(0xe7a4, 0xecfe, 0xa4c0, 0x1382, 0x6d3c, 0x52a5, 0x1, 0x1);
        gbc.writeMem(0xe7a4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xecfe);
        EXPECT(gbc.pc(), 0xe7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a4), 0xcb);
        EXPECT(gbc.readMem(0xe7a5), 0xc2);
        // CB C2 00CE
        gbc.setState(0x2ee9, 0xbee9, 0x5a10, 0xbc82, 0x80ea, 0x4f7f, 0x1, 0x1);
        gbc.writeMem(0x2ee9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0x2eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00CF
        gbc.setState(0x6179, 0x7ca8, 0x38d0, 0x7704, 0x7f61, 0xb29b, 0x0, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7ca8);
        EXPECT(gbc.pc(), 0x617b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00D0
        gbc.setState(0x15bf, 0x50f4, 0x8cd0, 0xe3e8, 0x495, 0xc34d, 0x0, 0x0);
        gbc.writeMem(0x15bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x50f4);
        EXPECT(gbc.pc(), 0x15c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00D1
        gbc.setState(0x7ca4, 0x6692, 0xd100, 0x2fb5, 0x4071, 0xdb3a, 0x0, 0x0);
        gbc.writeMem(0x7ca4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6692);
        EXPECT(gbc.pc(), 0x7ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00D2
        gbc.setState(0x7989, 0x4ea4, 0x55c0, 0xfc92, 0x6ee6, 0x241d, 0x1, 0x1);
        gbc.writeMem(0x7989, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4ea4);
        EXPECT(gbc.pc(), 0x798b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00D3
        gbc.setState(0x99be, 0x7f7d, 0x1a30, 0x4738, 0x6c43, 0x7762, 0x1, 0x0);
        gbc.writeMem(0x99be, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7f7d);
        EXPECT(gbc.pc(), 0x99c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99be), 0xcb);
        EXPECT(gbc.readMem(0x99bf), 0xc2);
        // CB C2 00D4
        gbc.setState(0x246f, 0xb9b3, 0x3c0, 0x9e2, 0xa97a, 0xa6b6, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb9b3);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00D5
        gbc.setState(0x9ef8, 0xd256, 0x8700, 0x9e2d, 0x271d, 0x3872, 0x1, 0x0);
        gbc.writeMem(0x9ef8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd256);
        EXPECT(gbc.pc(), 0x9efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef8), 0xcb);
        EXPECT(gbc.readMem(0x9ef9), 0xc2);
        // CB C2 00D6
        gbc.setState(0x2db7, 0x106c, 0xd540, 0x98a, 0x3176, 0x1429, 0x1, 0x1);
        gbc.writeMem(0x2db7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x106c);
        EXPECT(gbc.pc(), 0x2db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00D8
        gbc.setState(0xe1b9, 0xbde9, 0x2000, 0x6b60, 0x8753, 0xf727, 0x0, 0x0);
        gbc.writeMem(0xe1b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbde9);
        EXPECT(gbc.pc(), 0xe1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b9), 0xcb);
        EXPECT(gbc.readMem(0xe1ba), 0xc2);
        // CB C2 00D9
        gbc.setState(0x9456, 0x20b2, 0x92a0, 0xb1e9, 0x4383, 0xd547, 0x1, 0x0);
        gbc.writeMem(0x9456, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x20b2);
        EXPECT(gbc.pc(), 0x9458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9456), 0xcb);
        EXPECT(gbc.readMem(0x9457), 0xc2);
        // CB C2 00DA
        gbc.setState(0xbff3, 0xdb72, 0x5890, 0xa376, 0xc9ee, 0x412, 0x0, 0x1);
        gbc.writeMem(0xbff3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdb72);
        EXPECT(gbc.pc(), 0xbff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff3), 0xcb);
        EXPECT(gbc.readMem(0xbff4), 0xc2);
        // CB C2 00DB
        gbc.setState(0x7137, 0x9ad3, 0x22a0, 0x3d57, 0xece3, 0x3cb7, 0x1, 0x1);
        gbc.writeMem(0x7137, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9ad3);
        EXPECT(gbc.pc(), 0x7139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00DC
        gbc.setState(0x832a, 0xe91e, 0x8df0, 0xaa3, 0x21d6, 0xb06, 0x1, 0x1);
        gbc.writeMem(0x832a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe91e);
        EXPECT(gbc.pc(), 0x832c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832a), 0xcb);
        EXPECT(gbc.readMem(0x832b), 0xc2);
        // CB C2 00DD
        gbc.setState(0x4746, 0xd312, 0x6130, 0x1e1f, 0x2a61, 0x420, 0x0, 0x1);
        gbc.writeMem(0x4746, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0x4748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00DE
        gbc.setState(0x7793, 0x9f01, 0x6350, 0xae72, 0x6590, 0xbc9f, 0x0, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0x7795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00DF
        gbc.setState(0x43ba, 0xf378, 0x8950, 0xde7e, 0x905e, 0xbfc0, 0x1, 0x0);
        gbc.writeMem(0x43ba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf378);
        EXPECT(gbc.pc(), 0x43bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00E1
        gbc.setState(0xc935, 0x318b, 0x2810, 0x27ef, 0x9c79, 0x61f8, 0x1, 0x1);
        gbc.writeMem(0xc935, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x318b);
        EXPECT(gbc.pc(), 0xc937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc935), 0xcb);
        EXPECT(gbc.readMem(0xc936), 0xc2);
        // CB C2 00E2
        gbc.setState(0xa6b, 0xb1a8, 0x4f50, 0x143b, 0x625d, 0x4264, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb1a8);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00E3
        gbc.setState(0x5b80, 0x2dba, 0xd6c0, 0x3be9, 0xa0ba, 0xe830, 0x1, 0x1);
        gbc.writeMem(0x5b80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2dba);
        EXPECT(gbc.pc(), 0x5b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00E4
        gbc.setState(0xa356, 0x592c, 0xd1c0, 0x21c9, 0x5da2, 0xb336, 0x0, 0x1);
        gbc.writeMem(0xa356, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x592c);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0xc2);
        // CB C2 00E5
        gbc.setState(0x5801, 0xe8d8, 0xa0f0, 0x5539, 0xae6c, 0xf8ae, 0x0, 0x1);
        gbc.writeMem(0x5801, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe8d8);
        EXPECT(gbc.pc(), 0x5803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00E6
        gbc.setState(0x3be2, 0xa707, 0xe2c0, 0x8fe, 0x7715, 0xe491, 0x1, 0x1);
        gbc.writeMem(0x3be2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa707);
        EXPECT(gbc.pc(), 0x3be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00E7
        gbc.setState(0x292c, 0x51da, 0xb560, 0x8f59, 0xf947, 0xfc34, 0x0, 0x0);
        gbc.writeMem(0x292c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x51da);
        EXPECT(gbc.pc(), 0x292e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00E8
        gbc.setState(0x9b74, 0xe307, 0x3c30, 0x8c51, 0x52dc, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe307);
        EXPECT(gbc.pc(), 0x9b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b74), 0xcb);
        EXPECT(gbc.readMem(0x9b75), 0xc2);
        // CB C2 00EA
        gbc.setState(0x1b6a, 0x2f20, 0x7c70, 0x16b6, 0xdf66, 0x6c36, 0x0, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2f20);
        EXPECT(gbc.pc(), 0x1b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00EB
        gbc.setState(0xb8fd, 0xacc4, 0x5fe0, 0x91e3, 0x46cd, 0xe5a9, 0x1, 0x1);
        gbc.writeMem(0xb8fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0xb8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fd), 0xcb);
        EXPECT(gbc.readMem(0xb8fe), 0xc2);
        // CB C2 00EC
        gbc.setState(0xc01, 0xdda5, 0x24c0, 0x33fe, 0x509d, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0xc01, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdda5);
        EXPECT(gbc.pc(), 0xc03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00ED
        gbc.setState(0xbea8, 0x3f42, 0xf040, 0x1004, 0xc2bb, 0x16f9, 0x1, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3f42);
        EXPECT(gbc.pc(), 0xbeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea8), 0xcb);
        EXPECT(gbc.readMem(0xbea9), 0xc2);
        // CB C2 00EE
        gbc.setState(0xbd20, 0x108f, 0x6050, 0xeefb, 0xf796, 0x130a, 0x0, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x108f);
        EXPECT(gbc.pc(), 0xbd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd20), 0xcb);
        EXPECT(gbc.readMem(0xbd21), 0xc2);
        // CB C2 00EF
        gbc.setState(0xb46b, 0x4047, 0xada0, 0x33e1, 0x4c09, 0x623d, 0x0, 0x1);
        gbc.writeMem(0xb46b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0xb46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46b), 0xcb);
        EXPECT(gbc.readMem(0xb46c), 0xc2);
        // CB C2 00F0
        gbc.setState(0xb132, 0xb8bc, 0x15e0, 0x4a51, 0x29fa, 0xba38, 0x1, 0x0);
        gbc.writeMem(0xb132, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb8bc);
        EXPECT(gbc.pc(), 0xb134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb132), 0xcb);
        EXPECT(gbc.readMem(0xb133), 0xc2);
        // CB C2 00F1
        gbc.setState(0x2465, 0x9a4, 0xbb60, 0x7f4f, 0x414d, 0x28be, 0x1, 0x0);
        gbc.writeMem(0x2465, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9a4);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00F2
        gbc.setState(0xe649, 0x426d, 0x3b50, 0x9e7b, 0xb0ee, 0x6225, 0x0, 0x0);
        gbc.writeMem(0xe649, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x426d);
        EXPECT(gbc.pc(), 0xe64b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe649), 0xcb);
        EXPECT(gbc.readMem(0xe64a), 0xc2);
        // CB C2 00F3
        gbc.setState(0x2664, 0x5d0a, 0x9c0, 0x24f3, 0xea40, 0x1323, 0x0, 0x0);
        gbc.writeMem(0x2664, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0x2666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00F4
        gbc.setState(0xe4fe, 0x5935, 0xc850, 0x197a, 0x3a8e, 0xe3d1, 0x1, 0x0);
        gbc.writeMem(0xe4fe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5935);
        EXPECT(gbc.pc(), 0xe500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4fe), 0xcb);
        EXPECT(gbc.readMem(0xe4ff), 0xc2);
        // CB C2 00F5
        gbc.setState(0x5ee7, 0xf299, 0x61f0, 0xc6ce, 0x8db2, 0xd3c5, 0x1, 0x0);
        gbc.writeMem(0x5ee7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf299);
        EXPECT(gbc.pc(), 0x5ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00F7
        gbc.setState(0xab70, 0x1aa5, 0x6320, 0x208, 0x2560, 0x945d, 0x0, 0x1);
        gbc.writeMem(0xab70, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1aa5);
        EXPECT(gbc.pc(), 0xab72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab70), 0xcb);
        EXPECT(gbc.readMem(0xab71), 0xc2);
        // CB C2 00F8
        gbc.setState(0xbecf, 0xf749, 0x39a0, 0x8fa7, 0x452d, 0x2511, 0x0, 0x1);
        gbc.writeMem(0xbecf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0xbed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbecf), 0xcb);
        EXPECT(gbc.readMem(0xbed0), 0xc2);
        // CB C2 00F9
        gbc.setState(0xd51, 0x4d77, 0xb1b0, 0x6f8b, 0x8918, 0xcf88, 0x1, 0x1);
        gbc.writeMem(0xd51, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4d77);
        EXPECT(gbc.pc(), 0xd53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00FA
        gbc.setState(0x2f33, 0x1303, 0xb630, 0x6483, 0x7b8a, 0xf43f, 0x1, 0x0);
        gbc.writeMem(0x2f33, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1303);
        EXPECT(gbc.pc(), 0x2f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00FB
        gbc.setState(0x5875, 0x3f6, 0x91b0, 0x5e72, 0x170c, 0x44ff, 0x1, 0x0);
        gbc.writeMem(0x5875, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3f6);
        EXPECT(gbc.pc(), 0x5877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00FC
        gbc.setState(0x9916, 0xb576, 0xc490, 0x283b, 0xabf6, 0x559e, 0x1, 0x1);
        gbc.writeMem(0x9916, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb576);
        EXPECT(gbc.pc(), 0x9918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9916), 0xcb);
        EXPECT(gbc.readMem(0x9917), 0xc2);
        // CB C2 00FD
        gbc.setState(0x6251, 0x8f90, 0x76d0, 0xeea1, 0xccd8, 0xfde4, 0x1, 0x0);
        gbc.writeMem(0x6251, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f90);
        EXPECT(gbc.pc(), 0x6253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 00FE
        gbc.setState(0x7b46, 0xbfb9, 0xd760, 0x7472, 0x12fb, 0x4f9a, 0x0, 0x1);
        gbc.writeMem(0x7b46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x7b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 00FF
        gbc.setState(0xb18f, 0x6d7c, 0xf7a0, 0x75f4, 0xcf3c, 0xaf54, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6d7c);
        EXPECT(gbc.pc(), 0xb191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18f), 0xcb);
        EXPECT(gbc.readMem(0xb190), 0xc2);
        // CB C2 0100
        gbc.setState(0x99d0, 0x682e, 0x9e40, 0x734f, 0x22e4, 0x93b1, 0x1, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x682e);
        EXPECT(gbc.pc(), 0x99d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d0), 0xcb);
        EXPECT(gbc.readMem(0x99d1), 0xc2);
        // CB C2 0101
        gbc.setState(0xb015, 0xe434, 0x3e90, 0x133f, 0xb60, 0x23f3, 0x1, 0x1);
        gbc.writeMem(0xb015, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe434);
        EXPECT(gbc.pc(), 0xb017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb015), 0xcb);
        EXPECT(gbc.readMem(0xb016), 0xc2);
        // CB C2 0102
        gbc.setState(0x2734, 0x297b, 0x2010, 0x7375, 0xfb7c, 0xefb9, 0x1, 0x1);
        gbc.writeMem(0x2734, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x297b);
        EXPECT(gbc.pc(), 0x2736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0103
        gbc.setState(0x998e, 0xa35e, 0xf2f0, 0x753a, 0x5313, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa35e);
        EXPECT(gbc.pc(), 0x9990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998e), 0xcb);
        EXPECT(gbc.readMem(0x998f), 0xc2);
        // CB C2 0104
        gbc.setState(0x8b5c, 0x23c6, 0xedd0, 0x2f2a, 0xf35a, 0x3138, 0x0, 0x0);
        gbc.writeMem(0x8b5c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x23c6);
        EXPECT(gbc.pc(), 0x8b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5c), 0xcb);
        EXPECT(gbc.readMem(0x8b5d), 0xc2);
        // CB C2 0105
        gbc.setState(0x6fc6, 0xbb50, 0xcb70, 0xe59a, 0xe618, 0x3cdd, 0x0, 0x0);
        gbc.writeMem(0x6fc6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbb50);
        EXPECT(gbc.pc(), 0x6fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0106
        gbc.setState(0x7cb5, 0x3685, 0xeec0, 0x8e32, 0xf584, 0xa429, 0x1, 0x1);
        gbc.writeMem(0x7cb5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3685);
        EXPECT(gbc.pc(), 0x7cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0107
        gbc.setState(0xd973, 0x7580, 0xb150, 0x8a40, 0x57bb, 0x5927, 0x0, 0x1);
        gbc.writeMem(0xd973, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7580);
        EXPECT(gbc.pc(), 0xd975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd973), 0xcb);
        EXPECT(gbc.readMem(0xd974), 0xc2);
        // CB C2 0108
        gbc.setState(0x9a67, 0x9645, 0xb650, 0xb4d0, 0x9eda, 0x33e3, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9645);
        EXPECT(gbc.pc(), 0x9a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a67), 0xcb);
        EXPECT(gbc.readMem(0x9a68), 0xc2);
        // CB C2 0109
        gbc.setState(0x8cbc, 0x7e3e, 0x5900, 0xd4fb, 0x9c31, 0xada9, 0x1, 0x1);
        gbc.writeMem(0x8cbc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7e3e);
        EXPECT(gbc.pc(), 0x8cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cbc), 0xcb);
        EXPECT(gbc.readMem(0x8cbd), 0xc2);
        // CB C2 010A
        gbc.setState(0xb640, 0xeb51, 0x3020, 0x9f7c, 0x7573, 0x9d31, 0x1, 0x0);
        gbc.writeMem(0xb640, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xeb51);
        EXPECT(gbc.pc(), 0xb642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb640), 0xcb);
        EXPECT(gbc.readMem(0xb641), 0xc2);
        // CB C2 010C
        gbc.setState(0x65fb, 0xb145, 0x9600, 0x8596, 0x7054, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x65fb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb145);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 010D
        gbc.setState(0x6b73, 0x80a9, 0xb0a0, 0x7970, 0xd54b, 0xd75c, 0x0, 0x1);
        gbc.writeMem(0x6b73, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x80a9);
        EXPECT(gbc.pc(), 0x6b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 010E
        gbc.setState(0x6f4d, 0x31ae, 0x91c0, 0xcbd3, 0x77e1, 0x4f31, 0x0, 0x0);
        gbc.writeMem(0x6f4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x6f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 010F
        gbc.setState(0x9cb, 0x3c39, 0x85c0, 0x20b4, 0xe341, 0x58da, 0x1, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3c39);
        EXPECT(gbc.pc(), 0x9cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0110
        gbc.setState(0x3063, 0x1cd0, 0xf1b0, 0x5245, 0x92ec, 0x56c1, 0x0, 0x1);
        gbc.writeMem(0x3063, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1cd0);
        EXPECT(gbc.pc(), 0x3065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0111
        gbc.setState(0xe8cc, 0x6149, 0xf820, 0xc67c, 0x6b98, 0xa5ec, 0x0, 0x1);
        gbc.writeMem(0xe8cc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6149);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cc), 0xcb);
        EXPECT(gbc.readMem(0xe8cd), 0xc2);
        // CB C2 0112
        gbc.setState(0x43bf, 0x6706, 0x8e50, 0x96d5, 0x3977, 0x365e, 0x1, 0x0);
        gbc.writeMem(0x43bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6706);
        EXPECT(gbc.pc(), 0x43c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0113
        gbc.setState(0x51cd, 0x277c, 0x3740, 0x9394, 0x2de2, 0x8ef7, 0x0, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x277c);
        EXPECT(gbc.pc(), 0x51cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0114
        gbc.setState(0x79c9, 0xb3c8, 0xe290, 0x89c8, 0x15dc, 0xe2e6, 0x0, 0x1);
        gbc.writeMem(0x79c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb3c8);
        EXPECT(gbc.pc(), 0x79cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0115
        gbc.setState(0xc865, 0x8aff, 0x1c40, 0xe1a1, 0x4367, 0xb08a, 0x1, 0x1);
        gbc.writeMem(0xc865, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8aff);
        EXPECT(gbc.pc(), 0xc867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc865), 0xcb);
        EXPECT(gbc.readMem(0xc866), 0xc2);
        // CB C2 0116
        gbc.setState(0xe27f, 0x9215, 0xfa30, 0x5c94, 0x58eb, 0x9922, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9215);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe27f), 0xcb);
        EXPECT(gbc.readMem(0xe280), 0xc2);
        // CB C2 0117
        gbc.setState(0x5209, 0x3642, 0xdd00, 0xb098, 0x8a80, 0x3927, 0x0, 0x0);
        gbc.writeMem(0x5209, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3642);
        EXPECT(gbc.pc(), 0x520b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0118
        gbc.setState(0x212c, 0xa888, 0x2260, 0x5a39, 0x38d7, 0xd27e, 0x0, 0x1);
        gbc.writeMem(0x212c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa888);
        EXPECT(gbc.pc(), 0x212e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0119
        gbc.setState(0xa204, 0x1828, 0x8a20, 0x7cb8, 0x4f7c, 0x1915, 0x1, 0x1);
        gbc.writeMem(0xa204, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0xa206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa204), 0xcb);
        EXPECT(gbc.readMem(0xa205), 0xc2);
        // CB C2 011A
        gbc.setState(0x7d8a, 0xc238, 0x3980, 0xad45, 0x91cf, 0xa13a, 0x0, 0x0);
        gbc.writeMem(0x7d8a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc238);
        EXPECT(gbc.pc(), 0x7d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 011B
        gbc.setState(0x1324, 0x8d6e, 0x8950, 0x3f2f, 0xc715, 0xb47d, 0x0, 0x1);
        gbc.writeMem(0x1324, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d6e);
        EXPECT(gbc.pc(), 0x1326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 011C
        gbc.setState(0xcc47, 0x182c, 0x1b80, 0x7e19, 0x2378, 0x6c0b, 0x1, 0x0);
        gbc.writeMem(0xcc47, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x182c);
        EXPECT(gbc.pc(), 0xcc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc47), 0xcb);
        EXPECT(gbc.readMem(0xcc48), 0xc2);
        // CB C2 011D
        gbc.setState(0xc0a8, 0xe202, 0x47a0, 0x8a9d, 0x927f, 0xbd6d, 0x1, 0x1);
        gbc.writeMem(0xc0a8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe202);
        EXPECT(gbc.pc(), 0xc0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a8), 0xcb);
        EXPECT(gbc.readMem(0xc0a9), 0xc2);
        // CB C2 011E
        gbc.setState(0xa2c0, 0x6e57, 0xf180, 0xc41d, 0x895b, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0xa2c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6e57);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c0), 0xcb);
        EXPECT(gbc.readMem(0xa2c1), 0xc2);
        // CB C2 011F
        gbc.setState(0x9cbd, 0xa8f4, 0x3ba0, 0x181b, 0x7815, 0xf5a1, 0x1, 0x0);
        gbc.writeMem(0x9cbd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa8f4);
        EXPECT(gbc.pc(), 0x9cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbd), 0xcb);
        EXPECT(gbc.readMem(0x9cbe), 0xc2);
        // CB C2 0120
        gbc.setState(0x1316, 0x31cf, 0x5090, 0x52b4, 0x818a, 0x7625, 0x1, 0x1);
        gbc.writeMem(0x1316, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x31cf);
        EXPECT(gbc.pc(), 0x1318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0121
        gbc.setState(0xe81e, 0xdb56, 0xea20, 0x1f90, 0xabbc, 0xc45, 0x0, 0x0);
        gbc.writeMem(0xe81e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0xe820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81e), 0xcb);
        EXPECT(gbc.readMem(0xe81f), 0xc2);
        // CB C2 0122
        gbc.setState(0x2b7d, 0xeb7a, 0x49e0, 0x5e83, 0x7bfc, 0xc5db, 0x1, 0x1);
        gbc.writeMem(0x2b7d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xeb7a);
        EXPECT(gbc.pc(), 0x2b7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0123
        gbc.setState(0x6872, 0xbe7b, 0xff00, 0x1742, 0xa24c, 0x2371, 0x1, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbe7b);
        EXPECT(gbc.pc(), 0x6874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0124
        gbc.setState(0x31a1, 0xc0da, 0x4d30, 0x24b4, 0x8845, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x31a1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc0da);
        EXPECT(gbc.pc(), 0x31a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0125
        gbc.setState(0x3f48, 0x5758, 0x5990, 0x6a8c, 0xfdeb, 0x8dab, 0x1, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5758);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0126
        gbc.setState(0xe5fe, 0xcd20, 0xdc40, 0xa575, 0x63dc, 0xd52b, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcd20);
        EXPECT(gbc.pc(), 0xe600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fe), 0xcb);
        EXPECT(gbc.readMem(0xe5ff), 0xc2);
        // CB C2 0127
        gbc.setState(0x7add, 0xf24d, 0x8e70, 0xf2d9, 0xee59, 0x4f42, 0x0, 0x1);
        gbc.writeMem(0x7add, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf24d);
        EXPECT(gbc.pc(), 0x7adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0128
        gbc.setState(0xef73, 0xd073, 0x86a0, 0xf507, 0x69f2, 0xe3fa, 0x1, 0x0);
        gbc.writeMem(0xef73, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd073);
        EXPECT(gbc.pc(), 0xef75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef73), 0xcb);
        EXPECT(gbc.readMem(0xef74), 0xc2);
        // CB C2 0129
        gbc.setState(0x3c3e, 0xbbdd, 0xb490, 0xd308, 0xe5a6, 0x6ebb, 0x0, 0x1);
        gbc.writeMem(0x3c3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbbdd);
        EXPECT(gbc.pc(), 0x3c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 012A
        gbc.setState(0xae7, 0xec28, 0xdeb0, 0x595d, 0x2116, 0xfc28, 0x1, 0x0);
        gbc.writeMem(0xae7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xec28);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 012B
        gbc.setState(0x511c, 0x5800, 0x1170, 0x8a7a, 0xcb53, 0xbba5, 0x0, 0x0);
        gbc.writeMem(0x511c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0x511e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 012C
        gbc.setState(0x994f, 0xb0a6, 0x4970, 0xd020, 0x2fda, 0x65bc, 0x0, 0x0);
        gbc.writeMem(0x994f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0a6);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994f), 0xcb);
        EXPECT(gbc.readMem(0x9950), 0xc2);
        // CB C2 012D
        gbc.setState(0xeb08, 0xa34, 0xa2b0, 0x1dbe, 0xdacd, 0xcdd8, 0x1, 0x1);
        gbc.writeMem(0xeb08, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa34);
        EXPECT(gbc.pc(), 0xeb0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb08), 0xcb);
        EXPECT(gbc.readMem(0xeb09), 0xc2);
        // CB C2 012E
        gbc.setState(0xda98, 0x440f, 0x2eb0, 0x5260, 0xc752, 0xf1f1, 0x0, 0x0);
        gbc.writeMem(0xda98, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0xda9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda98), 0xcb);
        EXPECT(gbc.readMem(0xda99), 0xc2);
        // CB C2 012F
        gbc.setState(0x5ee0, 0xa111, 0x6000, 0x6ff4, 0x1d05, 0x2cb2, 0x1, 0x1);
        gbc.writeMem(0x5ee0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa111);
        EXPECT(gbc.pc(), 0x5ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0130
        gbc.setState(0x9b7e, 0x7f3c, 0xd410, 0x67fa, 0x857c, 0xf54c, 0x0, 0x0);
        gbc.writeMem(0x9b7e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7f3c);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0xc2);
        // CB C2 0131
        gbc.setState(0x4665, 0x4b98, 0x53b0, 0xe1f1, 0xd095, 0x6f2e, 0x1, 0x1);
        gbc.writeMem(0x4665, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4b98);
        EXPECT(gbc.pc(), 0x4667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0132
        gbc.setState(0xab69, 0xb07, 0x9d20, 0xa8eb, 0xa42f, 0x3891, 0x0, 0x0);
        gbc.writeMem(0xab69, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb07);
        EXPECT(gbc.pc(), 0xab6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab69), 0xcb);
        EXPECT(gbc.readMem(0xab6a), 0xc2);
        // CB C2 0133
        gbc.setState(0x2e47, 0x373f, 0xf650, 0x82c9, 0xfa93, 0xed0c, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x373f);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0134
        gbc.setState(0xaf36, 0x8e0d, 0xe170, 0x42dc, 0xafab, 0xea5c, 0x0, 0x1);
        gbc.writeMem(0xaf36, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8e0d);
        EXPECT(gbc.pc(), 0xaf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf36), 0xcb);
        EXPECT(gbc.readMem(0xaf37), 0xc2);
        // CB C2 0135
        gbc.setState(0xdd8c, 0xd728, 0x4320, 0xc548, 0x16f5, 0x4b, 0x0, 0x1);
        gbc.writeMem(0xdd8c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd728);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8c), 0xcb);
        EXPECT(gbc.readMem(0xdd8d), 0xc2);
        // CB C2 0136
        gbc.setState(0xc01d, 0xacdd, 0xca80, 0xdac5, 0x860c, 0x6f9c, 0x0, 0x0);
        gbc.writeMem(0xc01d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xacdd);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01d), 0xcb);
        EXPECT(gbc.readMem(0xc01e), 0xc2);
        // CB C2 0137
        gbc.setState(0x7457, 0x26c7, 0x8520, 0x158c, 0xd4c2, 0x530a, 0x0, 0x1);
        gbc.writeMem(0x7457, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x26c7);
        EXPECT(gbc.pc(), 0x7459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0138
        gbc.setState(0x1541, 0x8217, 0xbad0, 0xbf3e, 0x8ac7, 0x3cb3, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8217);
        EXPECT(gbc.pc(), 0x1543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0139
        gbc.setState(0x33ff, 0xb06d, 0x4370, 0x305f, 0x1328, 0x1d7a, 0x0, 0x1);
        gbc.writeMem(0x33ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb06d);
        EXPECT(gbc.pc(), 0x3401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 013A
        gbc.setState(0x1826, 0xde47, 0x6890, 0xa139, 0x278c, 0xa47, 0x0, 0x0);
        gbc.writeMem(0x1826, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xde47);
        EXPECT(gbc.pc(), 0x1828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 013B
        gbc.setState(0x33b6, 0xdaa1, 0x710, 0xbd45, 0x6421, 0x9268, 0x1, 0x0);
        gbc.writeMem(0x33b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdaa1);
        EXPECT(gbc.pc(), 0x33b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 013C
        gbc.setState(0x7758, 0x14e0, 0x8b50, 0x9ec8, 0x77b3, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0x7758, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x14e0);
        EXPECT(gbc.pc(), 0x775a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 013D
        gbc.setState(0x7d38, 0x30ab, 0x2a30, 0x171c, 0x9ef1, 0xe520, 0x0, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x30ab);
        EXPECT(gbc.pc(), 0x7d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 013F
        gbc.setState(0x71bb, 0xa3d9, 0x9660, 0x2ec9, 0xd1b2, 0x69e7, 0x1, 0x1);
        gbc.writeMem(0x71bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa3d9);
        EXPECT(gbc.pc(), 0x71bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0140
        gbc.setState(0xa295, 0xf64f, 0xf80, 0xff93, 0xcfb2, 0x42f0, 0x0, 0x0);
        gbc.writeMem(0xa295, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf64f);
        EXPECT(gbc.pc(), 0xa297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa295), 0xcb);
        EXPECT(gbc.readMem(0xa296), 0xc2);
        // CB C2 0141
        gbc.setState(0xd29f, 0x7635, 0xffa0, 0xf25e, 0x17d2, 0xb288, 0x1, 0x1);
        gbc.writeMem(0xd29f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7635);
        EXPECT(gbc.pc(), 0xd2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29f), 0xcb);
        EXPECT(gbc.readMem(0xd2a0), 0xc2);
        // CB C2 0142
        gbc.setState(0x3169, 0x6c5a, 0xb1d0, 0xf3fc, 0x1706, 0x30b0, 0x0, 0x0);
        gbc.writeMem(0x3169, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6c5a);
        EXPECT(gbc.pc(), 0x316b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0143
        gbc.setState(0x324a, 0x5428, 0xc390, 0x17d6, 0x202a, 0x3ebf, 0x0, 0x1);
        gbc.writeMem(0x324a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5428);
        EXPECT(gbc.pc(), 0x324c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0144
        gbc.setState(0xf9, 0xb09d, 0xd580, 0x41aa, 0x7f47, 0x3a3a, 0x0, 0x1);
        gbc.writeMem(0xf9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb09d);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0145
        gbc.setState(0xddb9, 0x435d, 0x4490, 0xf91, 0x20db, 0x5bd3, 0x1, 0x1);
        gbc.writeMem(0xddb9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x435d);
        EXPECT(gbc.pc(), 0xddbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb9), 0xcb);
        EXPECT(gbc.readMem(0xddba), 0xc2);
        // CB C2 0146
        gbc.setState(0x5beb, 0xbb5, 0xb440, 0xd8a7, 0x8e21, 0x51e0, 0x1, 0x0);
        gbc.writeMem(0x5beb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbb5);
        EXPECT(gbc.pc(), 0x5bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0147
        gbc.setState(0x33e6, 0x4885, 0x2e10, 0x13fe, 0xddc, 0xa93c, 0x1, 0x0);
        gbc.writeMem(0x33e6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4885);
        EXPECT(gbc.pc(), 0x33e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0148
        gbc.setState(0xb314, 0xc3d6, 0x1e30, 0x231f, 0xf0a6, 0x1bf, 0x0, 0x0);
        gbc.writeMem(0xb314, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc3d6);
        EXPECT(gbc.pc(), 0xb316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb314), 0xcb);
        EXPECT(gbc.readMem(0xb315), 0xc2);
        // CB C2 0149
        gbc.setState(0x4cb7, 0x944b, 0xcb20, 0x595, 0x3bf1, 0xdc5d, 0x0, 0x0);
        gbc.writeMem(0x4cb7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x944b);
        EXPECT(gbc.pc(), 0x4cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 014A
        gbc.setState(0x1174, 0xf4e1, 0x13e0, 0xccb4, 0xb41, 0xfc8e, 0x1, 0x1);
        gbc.writeMem(0x1174, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0x1176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 014B
        gbc.setState(0xd48, 0xa5d5, 0xe260, 0x7247, 0x9853, 0xb675, 0x0, 0x1);
        gbc.writeMem(0xd48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa5d5);
        EXPECT(gbc.pc(), 0xd4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 014C
        gbc.setState(0x5d32, 0x1bb8, 0xff70, 0x62d4, 0x6a96, 0x2ac9, 0x0, 0x1);
        gbc.writeMem(0x5d32, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1bb8);
        EXPECT(gbc.pc(), 0x5d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 014D
        gbc.setState(0x8685, 0x3027, 0xd380, 0x1813, 0x1e5, 0xda7a, 0x1, 0x1);
        gbc.writeMem(0x8685, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3027);
        EXPECT(gbc.pc(), 0x8687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8685), 0xcb);
        EXPECT(gbc.readMem(0x8686), 0xc2);
        // CB C2 014E
        gbc.setState(0xe36d, 0xb1e0, 0xbed0, 0x929c, 0xcfa4, 0x92c2, 0x1, 0x1);
        gbc.writeMem(0xe36d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb1e0);
        EXPECT(gbc.pc(), 0xe36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36d), 0xcb);
        EXPECT(gbc.readMem(0xe36e), 0xc2);
        // CB C2 014F
        gbc.setState(0xb0eb, 0x634f, 0xf820, 0x84b5, 0xafc1, 0xcf5f, 0x1, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x634f);
        EXPECT(gbc.pc(), 0xb0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0eb), 0xcb);
        EXPECT(gbc.readMem(0xb0ec), 0xc2);
        // CB C2 0150
        gbc.setState(0xc699, 0x2340, 0x5690, 0xbca6, 0x8bdd, 0x26ca, 0x0, 0x1);
        gbc.writeMem(0xc699, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0xc69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc699), 0xcb);
        EXPECT(gbc.readMem(0xc69a), 0xc2);
        // CB C2 0151
        gbc.setState(0x18cf, 0x28ff, 0x52a0, 0xe0ee, 0x2421, 0x2670, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x28ff);
        EXPECT(gbc.pc(), 0x18d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0152
        gbc.setState(0x46e9, 0xb02d, 0x5120, 0xcb74, 0x8968, 0x2ab0, 0x1, 0x1);
        gbc.writeMem(0x46e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb02d);
        EXPECT(gbc.pc(), 0x46eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0153
        gbc.setState(0x7d8b, 0xa4e7, 0x2890, 0xa15f, 0x40fe, 0x1f80, 0x0, 0x1);
        gbc.writeMem(0x7d8b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa4e7);
        EXPECT(gbc.pc(), 0x7d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0154
        gbc.setState(0x91f4, 0x7b73, 0x9bf0, 0xd63d, 0xadb8, 0x8340, 0x0, 0x1);
        gbc.writeMem(0x91f4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7b73);
        EXPECT(gbc.pc(), 0x91f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f4), 0xcb);
        EXPECT(gbc.readMem(0x91f5), 0xc2);
        // CB C2 0155
        gbc.setState(0x6856, 0x81a8, 0xfc90, 0xc7c5, 0x7dfc, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x6856, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x81a8);
        EXPECT(gbc.pc(), 0x6858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0156
        gbc.setState(0xb93c, 0xefa2, 0xc630, 0xef81, 0x2840, 0x4b48, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xefa2);
        EXPECT(gbc.pc(), 0xb93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93c), 0xcb);
        EXPECT(gbc.readMem(0xb93d), 0xc2);
        // CB C2 0157
        gbc.setState(0x1a48, 0xa792, 0xaa00, 0xca91, 0x94d1, 0xda64, 0x0, 0x1);
        gbc.writeMem(0x1a48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa792);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0158
        gbc.setState(0x9a85, 0xc12c, 0x5e0, 0x74b3, 0xfd4f, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0x9a85, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc12c);
        EXPECT(gbc.pc(), 0x9a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a85), 0xcb);
        EXPECT(gbc.readMem(0x9a86), 0xc2);
        // CB C2 0159
        gbc.setState(0xc620, 0xd4cb, 0x61d0, 0xeb5b, 0xd07b, 0x5153, 0x0, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc620), 0xcb);
        EXPECT(gbc.readMem(0xc621), 0xc2);
        // CB C2 015A
        gbc.setState(0x6e45, 0xa9ae, 0x3be0, 0x8ab2, 0x96d0, 0xcb4a, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa9ae);
        EXPECT(gbc.pc(), 0x6e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 015B
        gbc.setState(0xec90, 0x4f95, 0xd000, 0x4d6e, 0xe8ad, 0x7089, 0x0, 0x1);
        gbc.writeMem(0xec90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4f95);
        EXPECT(gbc.pc(), 0xec92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec90), 0xcb);
        EXPECT(gbc.readMem(0xec91), 0xc2);
        // CB C2 015C
        gbc.setState(0x3c94, 0x8021, 0x8d50, 0xcf2e, 0x15d7, 0xd4ae, 0x0, 0x0);
        gbc.writeMem(0x3c94, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8021);
        EXPECT(gbc.pc(), 0x3c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 015E
        gbc.setState(0x6044, 0x69d7, 0x4370, 0x1bbe, 0xd9cf, 0x5df4, 0x1, 0x1);
        gbc.writeMem(0x6044, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x69d7);
        EXPECT(gbc.pc(), 0x6046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 015F
        gbc.setState(0x19d4, 0xa6c4, 0xe150, 0xe40d, 0x8597, 0x4716, 0x1, 0x1);
        gbc.writeMem(0x19d4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa6c4);
        EXPECT(gbc.pc(), 0x19d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0160
        gbc.setState(0x66f1, 0x25d2, 0x91c0, 0x2b3f, 0xcda1, 0x440b, 0x1, 0x1);
        gbc.writeMem(0x66f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x25d2);
        EXPECT(gbc.pc(), 0x66f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0161
        gbc.setState(0x4501, 0x197d, 0xfd00, 0xa0a2, 0xde6f, 0x4335, 0x0, 0x0);
        gbc.writeMem(0x4501, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x197d);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0162
        gbc.setState(0xa219, 0xe9c8, 0xa450, 0xd869, 0xe34b, 0x4f81, 0x1, 0x0);
        gbc.writeMem(0xa219, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe9c8);
        EXPECT(gbc.pc(), 0xa21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa219), 0xcb);
        EXPECT(gbc.readMem(0xa21a), 0xc2);
        // CB C2 0164
        gbc.setState(0x1ff5, 0x1eeb, 0x4720, 0xacd7, 0xa5b3, 0x85a8, 0x1, 0x0);
        gbc.writeMem(0x1ff5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1eeb);
        EXPECT(gbc.pc(), 0x1ff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0165
        gbc.setState(0xac3d, 0x3f61, 0x32f0, 0x6a4f, 0x551, 0x5154, 0x1, 0x0);
        gbc.writeMem(0xac3d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3f61);
        EXPECT(gbc.pc(), 0xac3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3d), 0xcb);
        EXPECT(gbc.readMem(0xac3e), 0xc2);
        // CB C2 0166
        gbc.setState(0xeca3, 0xd57d, 0xa540, 0xefaa, 0x74d8, 0xa988, 0x1, 0x0);
        gbc.writeMem(0xeca3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd57d);
        EXPECT(gbc.pc(), 0xeca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca3), 0xcb);
        EXPECT(gbc.readMem(0xeca4), 0xc2);
        // CB C2 0167
        gbc.setState(0xd3ef, 0x8359, 0xec30, 0xdddb, 0x16b4, 0x1676, 0x0, 0x1);
        gbc.writeMem(0xd3ef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8359);
        EXPECT(gbc.pc(), 0xd3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ef), 0xcb);
        EXPECT(gbc.readMem(0xd3f0), 0xc2);
        // CB C2 0168
        gbc.setState(0x6c1c, 0xaccf, 0x5e60, 0xb6b0, 0xe04d, 0xbddb, 0x1, 0x0);
        gbc.writeMem(0x6c1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaccf);
        EXPECT(gbc.pc(), 0x6c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0169
        gbc.setState(0x5b62, 0xa515, 0xe8e0, 0xe751, 0xfd6d, 0xdaa9, 0x1, 0x1);
        gbc.writeMem(0x5b62, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa515);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 016A
        gbc.setState(0x48d5, 0x4b24, 0x66c0, 0xbf60, 0xc8cb, 0xaa05, 0x0, 0x1);
        gbc.writeMem(0x48d5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4b24);
        EXPECT(gbc.pc(), 0x48d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 016B
        gbc.setState(0xaef7, 0x82fc, 0xd950, 0xb2b0, 0x5970, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0xaef7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x82fc);
        EXPECT(gbc.pc(), 0xaef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef7), 0xcb);
        EXPECT(gbc.readMem(0xaef8), 0xc2);
        // CB C2 016C
        gbc.setState(0x103d, 0x326f, 0xc870, 0x2ef, 0xd829, 0x5a53, 0x0, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x326f);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 016D
        gbc.setState(0xa3b1, 0x8245, 0xb690, 0x244a, 0x75ff, 0x8585, 0x0, 0x0);
        gbc.writeMem(0xa3b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8245);
        EXPECT(gbc.pc(), 0xa3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b1), 0xcb);
        EXPECT(gbc.readMem(0xa3b2), 0xc2);
        // CB C2 016E
        gbc.setState(0xc0b8, 0x694f, 0x6390, 0x1c03, 0xeaca, 0xeac8, 0x1, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x694f);
        EXPECT(gbc.pc(), 0xc0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b8), 0xcb);
        EXPECT(gbc.readMem(0xc0b9), 0xc2);
        // CB C2 016F
        gbc.setState(0x1d17, 0x43f2, 0x8d00, 0xeb37, 0x3c79, 0x4735, 0x0, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x43f2);
        EXPECT(gbc.pc(), 0x1d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0170
        gbc.setState(0xa067, 0xcae2, 0x3a30, 0x4001, 0x1827, 0xb68a, 0x0, 0x1);
        gbc.writeMem(0xa067, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcae2);
        EXPECT(gbc.pc(), 0xa069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa067), 0xcb);
        EXPECT(gbc.readMem(0xa068), 0xc2);
        // CB C2 0172
        gbc.setState(0x50f5, 0x3acf, 0x19a0, 0x94e2, 0xca8f, 0xbdf0, 0x0, 0x0);
        gbc.writeMem(0x50f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3acf);
        EXPECT(gbc.pc(), 0x50f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0173
        gbc.setState(0x5ceb, 0x4ba0, 0xcfa0, 0xc55c, 0x80f3, 0x707f, 0x1, 0x1);
        gbc.writeMem(0x5ceb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4ba0);
        EXPECT(gbc.pc(), 0x5ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0174
        gbc.setState(0x5f04, 0x40dd, 0xf400, 0x3ad3, 0xe5c9, 0x16d5, 0x0, 0x0);
        gbc.writeMem(0x5f04, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x40dd);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0175
        gbc.setState(0xcdcb, 0x3728, 0x3020, 0x5a2e, 0x837d, 0x3371, 0x1, 0x0);
        gbc.writeMem(0xcdcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3728);
        EXPECT(gbc.pc(), 0xcdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcb), 0xcb);
        EXPECT(gbc.readMem(0xcdcc), 0xc2);
        // CB C2 0176
        gbc.setState(0xc1ac, 0xf6eb, 0x2f0, 0x1b4b, 0x395, 0x7cc, 0x1, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf6eb);
        EXPECT(gbc.pc(), 0xc1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ac), 0xcb);
        EXPECT(gbc.readMem(0xc1ad), 0xc2);
        // CB C2 0178
        gbc.setState(0x4729, 0xd52d, 0xf280, 0xc50f, 0xae86, 0x2236, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd52d);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0179
        gbc.setState(0xe8b2, 0xd72b, 0x3140, 0xe641, 0xf954, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0xe8b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd72b);
        EXPECT(gbc.pc(), 0xe8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b2), 0xcb);
        EXPECT(gbc.readMem(0xe8b3), 0xc2);
        // CB C2 017A
        gbc.setState(0xd7e2, 0x98f7, 0xd4a0, 0x4f6b, 0x66df, 0xe2df, 0x0, 0x1);
        gbc.writeMem(0xd7e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x98f7);
        EXPECT(gbc.pc(), 0xd7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        EXPECT(gbc.readMem(0xd7e3), 0xc2);
        // CB C2 017B
        gbc.setState(0x1840, 0x961e, 0x7a0, 0xb503, 0xb239, 0x1d63, 0x1, 0x1);
        gbc.writeMem(0x1840, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x961e);
        EXPECT(gbc.pc(), 0x1842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 017C
        gbc.setState(0xad2e, 0x5822, 0x9890, 0xc03d, 0xab1e, 0xb5e4, 0x0, 0x0);
        gbc.writeMem(0xad2e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5822);
        EXPECT(gbc.pc(), 0xad30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad2e), 0xcb);
        EXPECT(gbc.readMem(0xad2f), 0xc2);
        // CB C2 017D
        gbc.setState(0xc8d6, 0xe46d, 0x7970, 0x84e8, 0xd2f6, 0xa68e, 0x0, 0x0);
        gbc.writeMem(0xc8d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe46d);
        EXPECT(gbc.pc(), 0xc8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d6), 0xcb);
        EXPECT(gbc.readMem(0xc8d7), 0xc2);
        // CB C2 017E
        gbc.setState(0x39, 0xccfa, 0xc710, 0x2d48, 0xbb4f, 0x475e, 0x1, 0x0);
        gbc.writeMem(0x39, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xccfa);
        EXPECT(gbc.pc(), 0x3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 017F
        gbc.setState(0xbd2f, 0x6e36, 0x19f0, 0xbd1a, 0x4494, 0x141f, 0x0, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6e36);
        EXPECT(gbc.pc(), 0xbd31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2f), 0xcb);
        EXPECT(gbc.readMem(0xbd30), 0xc2);
        // CB C2 0180
        gbc.setState(0xcd9d, 0xc07a, 0xa800, 0x742f, 0x2901, 0x475, 0x0, 0x0);
        gbc.writeMem(0xcd9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc07a);
        EXPECT(gbc.pc(), 0xcd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9d), 0xcb);
        EXPECT(gbc.readMem(0xcd9e), 0xc2);
        // CB C2 0181
        gbc.setState(0x806d, 0xe582, 0xea80, 0xf211, 0x2c82, 0x8071, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe582);
        EXPECT(gbc.pc(), 0x806f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0xcb);
        EXPECT(gbc.readMem(0x806e), 0xc2);
        // CB C2 0182
        gbc.setState(0xe93d, 0xf0ed, 0x1610, 0x8a05, 0xbd5e, 0x577d, 0x0, 0x1);
        gbc.writeMem(0xe93d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf0ed);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe93d), 0xcb);
        EXPECT(gbc.readMem(0xe93e), 0xc2);
        // CB C2 0183
        gbc.setState(0xb026, 0x2f45, 0xe900, 0xd3c2, 0x4557, 0xb996, 0x1, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2f45);
        EXPECT(gbc.pc(), 0xb028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb026), 0xcb);
        EXPECT(gbc.readMem(0xb027), 0xc2);
        // CB C2 0184
        gbc.setState(0x3f11, 0x6bff, 0x46a0, 0xd9ca, 0x8dcd, 0x2f76, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6bff);
        EXPECT(gbc.pc(), 0x3f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0185
        gbc.setState(0xbb77, 0xdd60, 0x76c0, 0x4302, 0x922, 0x8970, 0x0, 0x0);
        gbc.writeMem(0xbb77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdd60);
        EXPECT(gbc.pc(), 0xbb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb77), 0xcb);
        EXPECT(gbc.readMem(0xbb78), 0xc2);
        // CB C2 0186
        gbc.setState(0x7330, 0x501f, 0xe720, 0x13f6, 0x75db, 0x593, 0x0, 0x1);
        gbc.writeMem(0x7330, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x501f);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0187
        gbc.setState(0xa7bb, 0xa52d, 0x5af0, 0xa5ff, 0x23ad, 0xee28, 0x1, 0x1);
        gbc.writeMem(0xa7bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa52d);
        EXPECT(gbc.pc(), 0xa7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7bb), 0xcb);
        EXPECT(gbc.readMem(0xa7bc), 0xc2);
        // CB C2 0188
        gbc.setState(0x304b, 0x4d73, 0x1c40, 0x4f45, 0x17c7, 0xddb0, 0x1, 0x0);
        gbc.writeMem(0x304b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4d73);
        EXPECT(gbc.pc(), 0x304d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0189
        gbc.setState(0x7f2b, 0x6f05, 0xacf0, 0xa90c, 0x1b80, 0xdc08, 0x1, 0x0);
        gbc.writeMem(0x7f2b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6f05);
        EXPECT(gbc.pc(), 0x7f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 018A
        gbc.setState(0xe1a7, 0xffdd, 0xda90, 0xa610, 0xa540, 0x325f, 0x0, 0x0);
        gbc.writeMem(0xe1a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xffdd);
        EXPECT(gbc.pc(), 0xe1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a7), 0xcb);
        EXPECT(gbc.readMem(0xe1a8), 0xc2);
        // CB C2 018B
        gbc.setState(0x198d, 0x488a, 0x6390, 0x32d9, 0x88cd, 0x3c2a, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x488a);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 018C
        gbc.setState(0x922a, 0x6bc5, 0x82d0, 0x1246, 0x4bd7, 0x8db8, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6bc5);
        EXPECT(gbc.pc(), 0x922c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0xcb);
        EXPECT(gbc.readMem(0x922b), 0xc2);
        // CB C2 018D
        gbc.setState(0xe032, 0xb09f, 0xb760, 0xa402, 0x4785, 0x5c36, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb09f);
        EXPECT(gbc.pc(), 0xe034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe032), 0xcb);
        EXPECT(gbc.readMem(0xe033), 0xc2);
        // CB C2 018E
        gbc.setState(0xa83f, 0x959c, 0x84f0, 0xfe21, 0x4a24, 0x28c2, 0x0, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x959c);
        EXPECT(gbc.pc(), 0xa841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83f), 0xcb);
        EXPECT(gbc.readMem(0xa840), 0xc2);
        // CB C2 018F
        gbc.setState(0x8da6, 0x409a, 0x9090, 0x213d, 0x8231, 0x6db3, 0x1, 0x1);
        gbc.writeMem(0x8da6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x409a);
        EXPECT(gbc.pc(), 0x8da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da6), 0xcb);
        EXPECT(gbc.readMem(0x8da7), 0xc2);
        // CB C2 0190
        gbc.setState(0x8b56, 0x560a, 0x8fb0, 0x702e, 0xc367, 0x1c49, 0x0, 0x1);
        gbc.writeMem(0x8b56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x560a);
        EXPECT(gbc.pc(), 0x8b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b56), 0xcb);
        EXPECT(gbc.readMem(0x8b57), 0xc2);
        // CB C2 0191
        gbc.setState(0x4f92, 0xdd05, 0xfc40, 0xe179, 0xa75a, 0xaedb, 0x1, 0x1);
        gbc.writeMem(0x4f92, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdd05);
        EXPECT(gbc.pc(), 0x4f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0192
        gbc.setState(0x72f1, 0x3346, 0xae10, 0x8953, 0x7c97, 0x375b, 0x0, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3346);
        EXPECT(gbc.pc(), 0x72f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0193
        gbc.setState(0xaa10, 0xf648, 0xf070, 0x82b1, 0x8c0c, 0x4ad7, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf648);
        EXPECT(gbc.pc(), 0xaa12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa10), 0xcb);
        EXPECT(gbc.readMem(0xaa11), 0xc2);
        // CB C2 0195
        gbc.setState(0x476c, 0xd32a, 0x54d0, 0x8665, 0x5d74, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd32a);
        EXPECT(gbc.pc(), 0x476e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0196
        gbc.setState(0x984, 0x3192, 0xebf0, 0x8b8d, 0x7e22, 0x4713, 0x0, 0x0);
        gbc.writeMem(0x984, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3192);
        EXPECT(gbc.pc(), 0x986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0197
        gbc.setState(0x89b0, 0x931d, 0x5470, 0xaf81, 0x9987, 0xd5c7, 0x1, 0x1);
        gbc.writeMem(0x89b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x931d);
        EXPECT(gbc.pc(), 0x89b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b0), 0xcb);
        EXPECT(gbc.readMem(0x89b1), 0xc2);
        // CB C2 0198
        gbc.setState(0x8557, 0xdcb9, 0x5dd0, 0x1c1d, 0x544b, 0x19c9, 0x1, 0x1);
        gbc.writeMem(0x8557, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdcb9);
        EXPECT(gbc.pc(), 0x8559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8557), 0xcb);
        EXPECT(gbc.readMem(0x8558), 0xc2);
        // CB C2 0199
        gbc.setState(0xa379, 0x64d1, 0xb910, 0x6dd5, 0x593, 0x6633, 0x0, 0x0);
        gbc.writeMem(0xa379, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0xa37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa379), 0xcb);
        EXPECT(gbc.readMem(0xa37a), 0xc2);
        // CB C2 019A
        gbc.setState(0xe14e, 0xee78, 0x1380, 0x607c, 0xeebb, 0x30d, 0x0, 0x1);
        gbc.writeMem(0xe14e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee78);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14e), 0xcb);
        EXPECT(gbc.readMem(0xe14f), 0xc2);
        // CB C2 019B
        gbc.setState(0x105a, 0x566a, 0xf7e0, 0xc1dc, 0xcb2e, 0x12be, 0x0, 0x0);
        gbc.writeMem(0x105a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x566a);
        EXPECT(gbc.pc(), 0x105c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 019C
        gbc.setState(0x1e86, 0x2749, 0x17b0, 0x9ff3, 0x7e56, 0x6290, 0x1, 0x0);
        gbc.writeMem(0x1e86, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2749);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 019D
        gbc.setState(0x3ea6, 0xc9c7, 0xfa10, 0x4670, 0x96db, 0x2b54, 0x1, 0x1);
        gbc.writeMem(0x3ea6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc9c7);
        EXPECT(gbc.pc(), 0x3ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 019E
        gbc.setState(0x62db, 0x7e26, 0x3650, 0x4f0a, 0xe798, 0x40e3, 0x1, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7e26);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 019F
        gbc.setState(0xe77f, 0xa6cb, 0x4570, 0x8f80, 0x441, 0xa749, 0x0, 0x0);
        gbc.writeMem(0xe77f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa6cb);
        EXPECT(gbc.pc(), 0xe781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77f), 0xcb);
        EXPECT(gbc.readMem(0xe780), 0xc2);
        // CB C2 01A0
        gbc.setState(0x9fe9, 0xb38f, 0x5d60, 0x5543, 0xdab0, 0x76e5, 0x1, 0x0);
        gbc.writeMem(0x9fe9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb38f);
        EXPECT(gbc.pc(), 0x9feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe9), 0xcb);
        EXPECT(gbc.readMem(0x9fea), 0xc2);
        // CB C2 01A1
        gbc.setState(0x329c, 0xdd9d, 0x9d60, 0x7974, 0xa5be, 0xd89c, 0x1, 0x1);
        gbc.writeMem(0x329c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdd9d);
        EXPECT(gbc.pc(), 0x329e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01A2
        gbc.setState(0x2234, 0x6b03, 0x9220, 0xdbc8, 0xa560, 0xbb3a, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6b03);
        EXPECT(gbc.pc(), 0x2236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01A3
        gbc.setState(0x344c, 0xf3ec, 0x1810, 0xa151, 0x5ab, 0x20ed, 0x1, 0x1);
        gbc.writeMem(0x344c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0x344e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01A4
        gbc.setState(0x1930, 0x2d82, 0xe1f0, 0x8453, 0x59f1, 0xec33, 0x1, 0x0);
        gbc.writeMem(0x1930, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2d82);
        EXPECT(gbc.pc(), 0x1932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01A5
        gbc.setState(0xc21e, 0x9c4, 0x2990, 0x99b, 0x3be5, 0xcc5a, 0x1, 0x0);
        gbc.writeMem(0xc21e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9c4);
        EXPECT(gbc.pc(), 0xc220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21e), 0xcb);
        EXPECT(gbc.readMem(0xc21f), 0xc2);
        // CB C2 01A6
        gbc.setState(0x261c, 0x6698, 0x3e10, 0x6e97, 0x9cde, 0x59ae, 0x1, 0x0);
        gbc.writeMem(0x261c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6698);
        EXPECT(gbc.pc(), 0x261e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01A7
        gbc.setState(0xe71a, 0xdae8, 0x550, 0x8980, 0x723c, 0xb06e, 0x1, 0x1);
        gbc.writeMem(0xe71a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdae8);
        EXPECT(gbc.pc(), 0xe71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71a), 0xcb);
        EXPECT(gbc.readMem(0xe71b), 0xc2);
        // CB C2 01A8
        gbc.setState(0xe111, 0x656a, 0x2280, 0x5593, 0xf2f6, 0xeeb8, 0x1, 0x1);
        gbc.writeMem(0xe111, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x656a);
        EXPECT(gbc.pc(), 0xe113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe111), 0xcb);
        EXPECT(gbc.readMem(0xe112), 0xc2);
        // CB C2 01A9
        gbc.setState(0xbe27, 0xf386, 0x7b10, 0x54ca, 0xa7b1, 0xe669, 0x0, 0x0);
        gbc.writeMem(0xbe27, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf386);
        EXPECT(gbc.pc(), 0xbe29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe27), 0xcb);
        EXPECT(gbc.readMem(0xbe28), 0xc2);
        // CB C2 01AA
        gbc.setState(0x1fbd, 0x7a8f, 0x1130, 0x3766, 0x3672, 0x46f0, 0x1, 0x1);
        gbc.writeMem(0x1fbd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7a8f);
        EXPECT(gbc.pc(), 0x1fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01AB
        gbc.setState(0x46ba, 0x295c, 0xc210, 0xb848, 0x3b94, 0x512f, 0x1, 0x1);
        gbc.writeMem(0x46ba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x295c);
        EXPECT(gbc.pc(), 0x46bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01AE
        gbc.setState(0x51b9, 0xec1d, 0xd230, 0x9872, 0xc9f0, 0x255d, 0x0, 0x1);
        gbc.writeMem(0x51b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xec1d);
        EXPECT(gbc.pc(), 0x51bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01B1
        gbc.setState(0x869b, 0xe114, 0x9510, 0xab0d, 0x6637, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x869b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe114);
        EXPECT(gbc.pc(), 0x869d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869b), 0xcb);
        EXPECT(gbc.readMem(0x869c), 0xc2);
        // CB C2 01B2
        gbc.setState(0x7748, 0xbc68, 0xfa30, 0x3bfe, 0x895d, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x7748, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbc68);
        EXPECT(gbc.pc(), 0x774a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01B3
        gbc.setState(0x75b1, 0x84a4, 0xe700, 0x8e48, 0xa507, 0x864a, 0x0, 0x1);
        gbc.writeMem(0x75b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x84a4);
        EXPECT(gbc.pc(), 0x75b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01B4
        gbc.setState(0x4e42, 0xaac5, 0x47e0, 0xa469, 0x5bc2, 0xbeb4, 0x0, 0x1);
        gbc.writeMem(0x4e42, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0x4e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01B5
        gbc.setState(0xe22e, 0xd779, 0xd450, 0x35a4, 0xc3e5, 0x779b, 0x1, 0x0);
        gbc.writeMem(0xe22e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0xe230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22e), 0xcb);
        EXPECT(gbc.readMem(0xe22f), 0xc2);
        // CB C2 01B6
        gbc.setState(0x9ec2, 0x8b5d, 0x5ee0, 0xe975, 0x521b, 0x49e8, 0x1, 0x1);
        gbc.writeMem(0x9ec2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8b5d);
        EXPECT(gbc.pc(), 0x9ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec2), 0xcb);
        EXPECT(gbc.readMem(0x9ec3), 0xc2);
        // CB C2 01B7
        gbc.setState(0xbd24, 0xb439, 0xe110, 0x9563, 0xb108, 0xb6f9, 0x0, 0x1);
        gbc.writeMem(0xbd24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb439);
        EXPECT(gbc.pc(), 0xbd26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd24), 0xcb);
        EXPECT(gbc.readMem(0xbd25), 0xc2);
        // CB C2 01B8
        gbc.setState(0x6fd8, 0x2850, 0xa650, 0x63bf, 0x8175, 0x4bc2, 0x1, 0x0);
        gbc.writeMem(0x6fd8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x6fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01B9
        gbc.setState(0x804f, 0x4c5a, 0x4b30, 0xbf65, 0xd1f, 0x69ae, 0x0, 0x0);
        gbc.writeMem(0x804f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4c5a);
        EXPECT(gbc.pc(), 0x8051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804f), 0xcb);
        EXPECT(gbc.readMem(0x8050), 0xc2);
        // CB C2 01BA
        gbc.setState(0x14ed, 0xa27d, 0xd180, 0xe004, 0xd59b, 0x4928, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa27d);
        EXPECT(gbc.pc(), 0x14ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01BB
        gbc.setState(0x76cd, 0x5aa6, 0xd5a0, 0x360, 0xc2d2, 0x1453, 0x0, 0x1);
        gbc.writeMem(0x76cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5aa6);
        EXPECT(gbc.pc(), 0x76cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01BC
        gbc.setState(0x7a30, 0x1863, 0x85d0, 0xeb45, 0xb389, 0x1962, 0x1, 0x1);
        gbc.writeMem(0x7a30, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1863);
        EXPECT(gbc.pc(), 0x7a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01BD
        gbc.setState(0x52c9, 0xbe8, 0xe2b0, 0x5f88, 0xcccd, 0x752c, 0x0, 0x1);
        gbc.writeMem(0x52c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe8);
        EXPECT(gbc.pc(), 0x52cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01BE
        gbc.setState(0x6348, 0x7893, 0xb420, 0x32f8, 0xbbe4, 0xf169, 0x0, 0x0);
        gbc.writeMem(0x6348, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7893);
        EXPECT(gbc.pc(), 0x634a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01BF
        gbc.setState(0x7b65, 0x4e60, 0x14d0, 0xe038, 0xc482, 0xe22b, 0x1, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4e60);
        EXPECT(gbc.pc(), 0x7b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01C0
        gbc.setState(0xd3a, 0xde8, 0x7520, 0x5861, 0xa00e, 0xb7cb, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xde8);
        EXPECT(gbc.pc(), 0xd3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01C1
        gbc.setState(0x66d, 0xd404, 0xcee0, 0x6585, 0x62bd, 0x26f9, 0x0, 0x0);
        gbc.writeMem(0x66d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd404);
        EXPECT(gbc.pc(), 0x66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01C2
        gbc.setState(0xf4d, 0x1806, 0xa0a0, 0xf935, 0x792f, 0x1041, 0x1, 0x0);
        gbc.writeMem(0xf4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1806);
        EXPECT(gbc.pc(), 0xf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01C3
        gbc.setState(0xb2f7, 0x2fcf, 0x2070, 0xead, 0xdc25, 0xb863, 0x1, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2fcf);
        EXPECT(gbc.pc(), 0xb2f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f7), 0xcb);
        EXPECT(gbc.readMem(0xb2f8), 0xc2);
        // CB C2 01C4
        gbc.setState(0xd3ab, 0x5c9e, 0x7830, 0xd65d, 0xf69a, 0xb982, 0x0, 0x0);
        gbc.writeMem(0xd3ab, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5c9e);
        EXPECT(gbc.pc(), 0xd3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ab), 0xcb);
        EXPECT(gbc.readMem(0xd3ac), 0xc2);
        // CB C2 01C5
        gbc.setState(0x3d0, 0x32cf, 0xf3c0, 0x2f21, 0x5da3, 0x6ad9, 0x0, 0x1);
        gbc.writeMem(0x3d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x32cf);
        EXPECT(gbc.pc(), 0x3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01C6
        gbc.setState(0x3274, 0xa296, 0xa9c0, 0xe606, 0xb6f5, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x3274, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0x3276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01C7
        gbc.setState(0xc4cb, 0x321d, 0xa750, 0x9e21, 0xe7ed, 0x1fb0, 0x1, 0x1);
        gbc.writeMem(0xc4cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x321d);
        EXPECT(gbc.pc(), 0xc4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4cb), 0xcb);
        EXPECT(gbc.readMem(0xc4cc), 0xc2);
        // CB C2 01C8
        gbc.setState(0x9820, 0xe10, 0x13d0, 0x73a0, 0x9eab, 0x2058, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe10);
        EXPECT(gbc.pc(), 0x9822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9820), 0xcb);
        EXPECT(gbc.readMem(0x9821), 0xc2);
        // CB C2 01C9
        gbc.setState(0xc9b7, 0x780a, 0xc1a0, 0x51f4, 0xb8b4, 0xa027, 0x0, 0x0);
        gbc.writeMem(0xc9b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x780a);
        EXPECT(gbc.pc(), 0xc9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b7), 0xcb);
        EXPECT(gbc.readMem(0xc9b8), 0xc2);
        // CB C2 01CA
        gbc.setState(0x56de, 0x83d5, 0xac00, 0x1af9, 0xfbb6, 0x626c, 0x0, 0x0);
        gbc.writeMem(0x56de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0x56e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01CB
        gbc.setState(0x635c, 0x32ad, 0xa1d0, 0x8241, 0x4b38, 0xa402, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x32ad);
        EXPECT(gbc.pc(), 0x635e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01CC
        gbc.setState(0x2bb8, 0xac91, 0xe950, 0xf713, 0x56e0, 0x6ebc, 0x1, 0x1);
        gbc.writeMem(0x2bb8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xac91);
        EXPECT(gbc.pc(), 0x2bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01CD
        gbc.setState(0x3f59, 0x9903, 0x3c00, 0x1a7a, 0x9298, 0xe6da, 0x0, 0x0);
        gbc.writeMem(0x3f59, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0x3f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01CE
        gbc.setState(0xa3d1, 0x2484, 0xc8d0, 0x1f04, 0xe641, 0xd05d, 0x1, 0x1);
        gbc.writeMem(0xa3d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2484);
        EXPECT(gbc.pc(), 0xa3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d1), 0xcb);
        EXPECT(gbc.readMem(0xa3d2), 0xc2);
        // CB C2 01CF
        gbc.setState(0x8173, 0x9e26, 0x2bf0, 0x12ed, 0x4643, 0x574b, 0x0, 0x0);
        gbc.writeMem(0x8173, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0x8175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8173), 0xcb);
        EXPECT(gbc.readMem(0x8174), 0xc2);
        // CB C2 01D0
        gbc.setState(0xbe4b, 0xa850, 0x7fc0, 0xff6, 0x12f6, 0xeea2, 0x0, 0x1);
        gbc.writeMem(0xbe4b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa850);
        EXPECT(gbc.pc(), 0xbe4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4b), 0xcb);
        EXPECT(gbc.readMem(0xbe4c), 0xc2);
        // CB C2 01D1
        gbc.setState(0x9f40, 0x9936, 0xbdb0, 0xbe8d, 0xbb48, 0x59fc, 0x0, 0x1);
        gbc.writeMem(0x9f40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9936);
        EXPECT(gbc.pc(), 0x9f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f40), 0xcb);
        EXPECT(gbc.readMem(0x9f41), 0xc2);
        // CB C2 01D2
        gbc.setState(0x18d0, 0xa6ef, 0x2b50, 0xdbec, 0x7f43, 0x37cf, 0x1, 0x1);
        gbc.writeMem(0x18d0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa6ef);
        EXPECT(gbc.pc(), 0x18d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01D3
        gbc.setState(0xd3c3, 0x4d75, 0x8e00, 0xa4ac, 0x3b19, 0x44dd, 0x0, 0x0);
        gbc.writeMem(0xd3c3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4d75);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0xc2);
        // CB C2 01D4
        gbc.setState(0x5219, 0xf34c, 0x56d0, 0x7ec4, 0x5992, 0x3eb6, 0x1, 0x1);
        gbc.writeMem(0x5219, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf34c);
        EXPECT(gbc.pc(), 0x521b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01D6
        gbc.setState(0x8b88, 0x8c30, 0x73d0, 0x952c, 0x6a25, 0x4712, 0x0, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8c30);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0xc2);
        // CB C2 01D7
        gbc.setState(0xc90b, 0xa606, 0x8d50, 0x84f8, 0x458c, 0xaafd, 0x0, 0x1);
        gbc.writeMem(0xc90b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa606);
        EXPECT(gbc.pc(), 0xc90d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90b), 0xcb);
        EXPECT(gbc.readMem(0xc90c), 0xc2);
        // CB C2 01D8
        gbc.setState(0xaeca, 0x85f1, 0xd9e0, 0x9cb7, 0xa3e3, 0xcc35, 0x0, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x85f1);
        EXPECT(gbc.pc(), 0xaecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeca), 0xcb);
        EXPECT(gbc.readMem(0xaecb), 0xc2);
        // CB C2 01D9
        gbc.setState(0x7fb4, 0xc2e5, 0xe520, 0x82c0, 0x718b, 0x7490, 0x1, 0x0);
        gbc.writeMem(0x7fb4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc2e5);
        EXPECT(gbc.pc(), 0x7fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01DA
        gbc.setState(0xb2ad, 0x6296, 0x6cb0, 0x4d04, 0x4d67, 0x49b2, 0x0, 0x0);
        gbc.writeMem(0xb2ad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6296);
        EXPECT(gbc.pc(), 0xb2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ad), 0xcb);
        EXPECT(gbc.readMem(0xb2ae), 0xc2);
        // CB C2 01DB
        gbc.setState(0xbe8e, 0xfa93, 0xd0b0, 0x5499, 0x494, 0xe6d7, 0x0, 0x0);
        gbc.writeMem(0xbe8e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0xbe90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe8e), 0xcb);
        EXPECT(gbc.readMem(0xbe8f), 0xc2);
        // CB C2 01DC
        gbc.setState(0xa46c, 0xb3cd, 0x3530, 0x66c0, 0x16bf, 0xeff, 0x1, 0x0);
        gbc.writeMem(0xa46c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb3cd);
        EXPECT(gbc.pc(), 0xa46e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46c), 0xcb);
        EXPECT(gbc.readMem(0xa46d), 0xc2);
        // CB C2 01DD
        gbc.setState(0xb91a, 0x4cb1, 0xd630, 0xe824, 0xd0f2, 0x2a77, 0x0, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4cb1);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91a), 0xcb);
        EXPECT(gbc.readMem(0xb91b), 0xc2);
        // CB C2 01DE
        gbc.setState(0x6d61, 0x456f, 0x50b0, 0x5c08, 0xa287, 0x3b1b, 0x0, 0x0);
        gbc.writeMem(0x6d61, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x456f);
        EXPECT(gbc.pc(), 0x6d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01DF
        gbc.setState(0x2b50, 0xc633, 0x2780, 0xc247, 0x5d3a, 0xad9, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc633);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01E0
        gbc.setState(0x469f, 0x8acd, 0x1b00, 0xab4e, 0xaf26, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0x469f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8acd);
        EXPECT(gbc.pc(), 0x46a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01E1
        gbc.setState(0x4df5, 0xfa35, 0xc040, 0xe3ca, 0x54da, 0x97c2, 0x0, 0x1);
        gbc.writeMem(0x4df5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfa35);
        EXPECT(gbc.pc(), 0x4df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01E2
        gbc.setState(0xb2b8, 0xc48f, 0x64c0, 0x3115, 0xa8a2, 0x6a94, 0x0, 0x0);
        gbc.writeMem(0xb2b8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc48f);
        EXPECT(gbc.pc(), 0xb2ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b8), 0xcb);
        EXPECT(gbc.readMem(0xb2b9), 0xc2);
        // CB C2 01E3
        gbc.setState(0xcc5f, 0x7b9, 0x9a40, 0xdd59, 0xe3, 0x2a47, 0x1, 0x0);
        gbc.writeMem(0xcc5f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7b9);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5f), 0xcb);
        EXPECT(gbc.readMem(0xcc60), 0xc2);
        // CB C2 01E4
        gbc.setState(0xbfc9, 0x2aa, 0x54f0, 0x7a08, 0xaeec, 0xe2ce, 0x1, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2aa);
        EXPECT(gbc.pc(), 0xbfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc9), 0xcb);
        EXPECT(gbc.readMem(0xbfca), 0xc2);
        // CB C2 01E5
        gbc.setState(0xdf42, 0x1370, 0x44d0, 0x186e, 0x6ed8, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0xdf42, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1370);
        EXPECT(gbc.pc(), 0xdf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf42), 0xcb);
        EXPECT(gbc.readMem(0xdf43), 0xc2);
        // CB C2 01E6
        gbc.setState(0xd874, 0xcd05, 0xcf90, 0x65ee, 0xfd6b, 0xe1bb, 0x0, 0x1);
        gbc.writeMem(0xd874, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcd05);
        EXPECT(gbc.pc(), 0xd876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd874), 0xcb);
        EXPECT(gbc.readMem(0xd875), 0xc2);
        // CB C2 01E7
        gbc.setState(0x1b71, 0xcd4f, 0x17b0, 0x4e2b, 0x7aa, 0xbcea, 0x1, 0x1);
        gbc.writeMem(0x1b71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcd4f);
        EXPECT(gbc.pc(), 0x1b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01E8
        gbc.setState(0xac90, 0x293a, 0xae90, 0xb12d, 0x9754, 0x8bce, 0x0, 0x0);
        gbc.writeMem(0xac90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x293a);
        EXPECT(gbc.pc(), 0xac92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac90), 0xcb);
        EXPECT(gbc.readMem(0xac91), 0xc2);
        // CB C2 01E9
        gbc.setState(0x6ad2, 0x30b8, 0x6fd0, 0x4df2, 0xf63f, 0x5944, 0x0, 0x0);
        gbc.writeMem(0x6ad2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x30b8);
        EXPECT(gbc.pc(), 0x6ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01EA
        gbc.setState(0x33c7, 0x850f, 0xace0, 0x6e36, 0xd52e, 0x1a6d, 0x1, 0x0);
        gbc.writeMem(0x33c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x850f);
        EXPECT(gbc.pc(), 0x33c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01EB
        gbc.setState(0x3f4a, 0x54fc, 0x1c0, 0x527a, 0xa012, 0x554a, 0x0, 0x1);
        gbc.writeMem(0x3f4a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x54fc);
        EXPECT(gbc.pc(), 0x3f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01EC
        gbc.setState(0x20da, 0xddaf, 0x9240, 0x4630, 0x3dbf, 0x44af, 0x0, 0x1);
        gbc.writeMem(0x20da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xddaf);
        EXPECT(gbc.pc(), 0x20dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01EF
        gbc.setState(0x6079, 0xc628, 0xd5b0, 0x8667, 0x57ea, 0x702, 0x0, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc628);
        EXPECT(gbc.pc(), 0x607b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01F0
        gbc.setState(0xdb71, 0x2550, 0x79a0, 0xfb53, 0x1a9, 0xcb21, 0x1, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2550);
        EXPECT(gbc.pc(), 0xdb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb71), 0xcb);
        EXPECT(gbc.readMem(0xdb72), 0xc2);
        // CB C2 01F1
        gbc.setState(0xa79c, 0x4eea, 0x1730, 0x8311, 0xf05b, 0xcadd, 0x1, 0x1);
        gbc.writeMem(0xa79c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0xa79e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa79c), 0xcb);
        EXPECT(gbc.readMem(0xa79d), 0xc2);
        // CB C2 01F2
        gbc.setState(0xada3, 0x5bc9, 0xe230, 0x5fd3, 0x552e, 0x55c4, 0x0, 0x0);
        gbc.writeMem(0xada3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5bc9);
        EXPECT(gbc.pc(), 0xada5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada3), 0xcb);
        EXPECT(gbc.readMem(0xada4), 0xc2);
        // CB C2 01F3
        gbc.setState(0xad65, 0xa7aa, 0x68b0, 0x1992, 0xcc42, 0xd098, 0x1, 0x1);
        gbc.writeMem(0xad65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa7aa);
        EXPECT(gbc.pc(), 0xad67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad65), 0xcb);
        EXPECT(gbc.readMem(0xad66), 0xc2);
        // CB C2 01F4
        gbc.setState(0x59eb, 0x9c09, 0xd10, 0xa06, 0x4dd3, 0xe065, 0x0, 0x1);
        gbc.writeMem(0x59eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9c09);
        EXPECT(gbc.pc(), 0x59ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01F5
        gbc.setState(0x7bf, 0xfdc1, 0x4360, 0x1aec, 0x9f7b, 0x5584, 0x1, 0x0);
        gbc.writeMem(0x7bf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfdc1);
        EXPECT(gbc.pc(), 0x7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01F6
        gbc.setState(0xbdcb, 0x1847, 0xfbb0, 0xc0c3, 0x9492, 0xa449, 0x1, 0x1);
        gbc.writeMem(0xbdcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1847);
        EXPECT(gbc.pc(), 0xbdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdcb), 0xcb);
        EXPECT(gbc.readMem(0xbdcc), 0xc2);
        // CB C2 01F7
        gbc.setState(0x9626, 0xde4c, 0x250, 0xd636, 0xef5d, 0x9287, 0x0, 0x1);
        gbc.writeMem(0x9626, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0x9628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9626), 0xcb);
        EXPECT(gbc.readMem(0x9627), 0xc2);
        // CB C2 01F9
        gbc.setState(0xdffc, 0x1675, 0x9550, 0x7bd3, 0xfe71, 0x4e7a, 0x0, 0x1);
        gbc.writeMem(0xdffc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1675);
        EXPECT(gbc.pc(), 0xdffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdffc), 0xcb);
        EXPECT(gbc.readMem(0xdffd), 0xc2);
        // CB C2 01FA
        gbc.setState(0x937, 0x71aa, 0x6880, 0x6524, 0x5dec, 0x717c, 0x1, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x71aa);
        EXPECT(gbc.pc(), 0x939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 01FB
        gbc.setState(0x673d, 0x8b2c, 0x4e10, 0xbd00, 0x84ae, 0x7772, 0x1, 0x1);
        gbc.writeMem(0x673d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8b2c);
        EXPECT(gbc.pc(), 0x673f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01FC
        gbc.setState(0xe2ac, 0xed1d, 0x2bf0, 0x636c, 0xa48f, 0x97f5, 0x1, 0x1);
        gbc.writeMem(0xe2ac, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xed1d);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ac), 0xcb);
        EXPECT(gbc.readMem(0xe2ad), 0xc2);
        // CB C2 01FD
        gbc.setState(0x3c4, 0x962, 0x8cd0, 0xfc15, 0x3019, 0xa6bf, 0x0, 0x0);
        gbc.writeMem(0x3c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x962);
        EXPECT(gbc.pc(), 0x3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01FE
        gbc.setState(0x6395, 0xc624, 0xc70, 0xfb61, 0x16ae, 0xa487, 0x0, 0x1);
        gbc.writeMem(0x6395, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc624);
        EXPECT(gbc.pc(), 0x6397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 01FF
        gbc.setState(0x6832, 0x7c8, 0xc50, 0x9a26, 0x6532, 0x1c18, 0x0, 0x1);
        gbc.writeMem(0x6832, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7c8);
        EXPECT(gbc.pc(), 0x6834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0200
        gbc.setState(0x7dd2, 0x5190, 0xb690, 0x3e5a, 0x8a1a, 0x342a, 0x1, 0x1);
        gbc.writeMem(0x7dd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5190);
        EXPECT(gbc.pc(), 0x7dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0201
        gbc.setState(0xb087, 0xd368, 0x1450, 0xea31, 0xd0f5, 0x8628, 0x1, 0x1);
        gbc.writeMem(0xb087, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd368);
        EXPECT(gbc.pc(), 0xb089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb087), 0xcb);
        EXPECT(gbc.readMem(0xb088), 0xc2);
        // CB C2 0202
        gbc.setState(0xb2db, 0x9157, 0x4920, 0x9c57, 0x5fc7, 0xf4a6, 0x0, 0x0);
        gbc.writeMem(0xb2db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9157);
        EXPECT(gbc.pc(), 0xb2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2db), 0xcb);
        EXPECT(gbc.readMem(0xb2dc), 0xc2);
        // CB C2 0203
        gbc.setState(0x6175, 0x921d, 0x9590, 0xe588, 0x5032, 0x95be, 0x0, 0x0);
        gbc.writeMem(0x6175, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0x6177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0204
        gbc.setState(0xa3f2, 0xbece, 0x8810, 0x5a78, 0x3e93, 0x62a1, 0x0, 0x0);
        gbc.writeMem(0xa3f2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbece);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0xc2);
        // CB C2 0205
        gbc.setState(0x8126, 0x8c07, 0x7970, 0x1bca, 0x314b, 0x6865, 0x0, 0x1);
        gbc.writeMem(0x8126, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8c07);
        EXPECT(gbc.pc(), 0x8128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8126), 0xcb);
        EXPECT(gbc.readMem(0x8127), 0xc2);
        // CB C2 0206
        gbc.setState(0xacd, 0x4d31, 0xb40, 0x1460, 0xd7, 0xf255, 0x1, 0x0);
        gbc.writeMem(0xacd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4d31);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0207
        gbc.setState(0x136a, 0x5f17, 0x5310, 0x80d7, 0xbed1, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0x136a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5f17);
        EXPECT(gbc.pc(), 0x136c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0208
        gbc.setState(0xaf7d, 0x35c, 0x1980, 0x871d, 0xb790, 0x4612, 0x1, 0x1);
        gbc.writeMem(0xaf7d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x35c);
        EXPECT(gbc.pc(), 0xaf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7d), 0xcb);
        EXPECT(gbc.readMem(0xaf7e), 0xc2);
        // CB C2 0209
        gbc.setState(0xecbe, 0xcf55, 0x6640, 0xd0fc, 0x16e6, 0x6092, 0x1, 0x1);
        gbc.writeMem(0xecbe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcf55);
        EXPECT(gbc.pc(), 0xecc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbe), 0xcb);
        EXPECT(gbc.readMem(0xecbf), 0xc2);
        // CB C2 020A
        gbc.setState(0x52bc, 0x838, 0x4b80, 0xa935, 0x10bd, 0x8123, 0x1, 0x1);
        gbc.writeMem(0x52bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x838);
        EXPECT(gbc.pc(), 0x52be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 020B
        gbc.setState(0x353c, 0xe328, 0x45a0, 0x239, 0x49ef, 0x484d, 0x1, 0x0);
        gbc.writeMem(0x353c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe328);
        EXPECT(gbc.pc(), 0x353e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 020C
        gbc.setState(0x9a16, 0x7e00, 0x88a0, 0xd3db, 0x78b2, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0x9a16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7e00);
        EXPECT(gbc.pc(), 0x9a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a16), 0xcb);
        EXPECT(gbc.readMem(0x9a17), 0xc2);
        // CB C2 020D
        gbc.setState(0x6490, 0x50f7, 0xacc0, 0xb1d7, 0xe713, 0xd874, 0x0, 0x0);
        gbc.writeMem(0x6490, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x50f7);
        EXPECT(gbc.pc(), 0x6492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 020F
        gbc.setState(0x2061, 0xa737, 0xfed0, 0x5b67, 0x80cd, 0x5240, 0x1, 0x1);
        gbc.writeMem(0x2061, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa737);
        EXPECT(gbc.pc(), 0x2063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0210
        gbc.setState(0x3237, 0xf623, 0x1f20, 0xb88, 0xa786, 0x6c41, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf623);
        EXPECT(gbc.pc(), 0x3239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0211
        gbc.setState(0xdc51, 0xe2eb, 0xfe40, 0x72a8, 0xc3d6, 0x4ec8, 0x1, 0x1);
        gbc.writeMem(0xdc51, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe2eb);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc51), 0xcb);
        EXPECT(gbc.readMem(0xdc52), 0xc2);
        // CB C2 0212
        gbc.setState(0xa89d, 0x87fd, 0xc1d0, 0xd7d0, 0x1bac, 0xe66c, 0x0, 0x0);
        gbc.writeMem(0xa89d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x87fd);
        EXPECT(gbc.pc(), 0xa89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa89d), 0xcb);
        EXPECT(gbc.readMem(0xa89e), 0xc2);
        // CB C2 0213
        gbc.setState(0x24a8, 0x1260, 0x3b00, 0x97fa, 0xed0c, 0x94a1, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0214
        gbc.setState(0xa450, 0x82d4, 0x5970, 0x9254, 0x118a, 0x6d50, 0x1, 0x1);
        gbc.writeMem(0xa450, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x82d4);
        EXPECT(gbc.pc(), 0xa452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa450), 0xcb);
        EXPECT(gbc.readMem(0xa451), 0xc2);
        // CB C2 0215
        gbc.setState(0x5893, 0xc8a, 0x8390, 0xdc43, 0xb432, 0x9a3f, 0x1, 0x0);
        gbc.writeMem(0x5893, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc8a);
        EXPECT(gbc.pc(), 0x5895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0216
        gbc.setState(0xef18, 0x3ac3, 0xb780, 0x6464, 0x80ef, 0xa4ad, 0x0, 0x0);
        gbc.writeMem(0xef18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3ac3);
        EXPECT(gbc.pc(), 0xef1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef18), 0xcb);
        EXPECT(gbc.readMem(0xef19), 0xc2);
        // CB C2 0217
        gbc.setState(0x792d, 0x42d6, 0x5600, 0x4b2c, 0xad3e, 0x6feb, 0x0, 0x1);
        gbc.writeMem(0x792d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x42d6);
        EXPECT(gbc.pc(), 0x792f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0218
        gbc.setState(0x972b, 0x8145, 0x9a0, 0x37d8, 0xff14, 0x6e15, 0x0, 0x0);
        gbc.writeMem(0x972b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8145);
        EXPECT(gbc.pc(), 0x972d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972b), 0xcb);
        EXPECT(gbc.readMem(0x972c), 0xc2);
        // CB C2 0219
        gbc.setState(0xd990, 0x921e, 0xa80, 0xdb0d, 0xec00, 0x6b30, 0x0, 0x0);
        gbc.writeMem(0xd990, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x921e);
        EXPECT(gbc.pc(), 0xd992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd990), 0xcb);
        EXPECT(gbc.readMem(0xd991), 0xc2);
        // CB C2 021A
        gbc.setState(0xdc38, 0xdb47, 0xe7c0, 0xa01a, 0x2f30, 0xa24e, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0xdc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc38), 0xcb);
        EXPECT(gbc.readMem(0xdc39), 0xc2);
        // CB C2 021B
        gbc.setState(0xf6c, 0xbb02, 0x3b70, 0x8373, 0xec82, 0x3612, 0x0, 0x0);
        gbc.writeMem(0xf6c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbb02);
        EXPECT(gbc.pc(), 0xf6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 021C
        gbc.setState(0x8f89, 0x7422, 0x5850, 0xdcad, 0x8e14, 0x146f, 0x0, 0x0);
        gbc.writeMem(0x8f89, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7422);
        EXPECT(gbc.pc(), 0x8f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f89), 0xcb);
        EXPECT(gbc.readMem(0x8f8a), 0xc2);
        // CB C2 021D
        gbc.setState(0xbc18, 0x90eb, 0xaa50, 0x5484, 0xdbdf, 0xf300, 0x0, 0x0);
        gbc.writeMem(0xbc18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0xbc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc18), 0xcb);
        EXPECT(gbc.readMem(0xbc19), 0xc2);
        // CB C2 021E
        gbc.setState(0x473c, 0x2b12, 0x6990, 0x3bcd, 0xfa07, 0x9b5, 0x1, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b12);
        EXPECT(gbc.pc(), 0x473e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 021F
        gbc.setState(0x5b7, 0xdd5a, 0xabb0, 0x51a8, 0x5805, 0xebec, 0x1, 0x0);
        gbc.writeMem(0x5b7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdd5a);
        EXPECT(gbc.pc(), 0x5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0220
        gbc.setState(0x985e, 0xc756, 0x30f0, 0x984, 0xace0, 0x8212, 0x1, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc756);
        EXPECT(gbc.pc(), 0x9860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985e), 0xcb);
        EXPECT(gbc.readMem(0x985f), 0xc2);
        // CB C2 0221
        gbc.setState(0xb4ce, 0x337f, 0x3220, 0x44a8, 0x5fc5, 0x3ed3, 0x1, 0x0);
        gbc.writeMem(0xb4ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x337f);
        EXPECT(gbc.pc(), 0xb4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ce), 0xcb);
        EXPECT(gbc.readMem(0xb4cf), 0xc2);
        // CB C2 0222
        gbc.setState(0x580f, 0xf4f0, 0x6e10, 0x9354, 0xf23c, 0x9422, 0x1, 0x1);
        gbc.writeMem(0x580f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf4f0);
        EXPECT(gbc.pc(), 0x5811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0224
        gbc.setState(0xd503, 0xb0c6, 0x9060, 0x3ad4, 0xcf83, 0xb2cb, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb0c6);
        EXPECT(gbc.pc(), 0xd505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd503), 0xcb);
        EXPECT(gbc.readMem(0xd504), 0xc2);
        // CB C2 0225
        gbc.setState(0x72ca, 0x2896, 0xe420, 0xc76c, 0x1f40, 0xc0cc, 0x0, 0x0);
        gbc.writeMem(0x72ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2896);
        EXPECT(gbc.pc(), 0x72cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0226
        gbc.setState(0xb595, 0x647, 0x4f00, 0xa31, 0x2d00, 0xb98e, 0x1, 0x1);
        gbc.writeMem(0xb595, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0xb597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb595), 0xcb);
        EXPECT(gbc.readMem(0xb596), 0xc2);
        // CB C2 0227
        gbc.setState(0xab1c, 0x9af4, 0x7400, 0xac46, 0xc871, 0x447d, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9af4);
        EXPECT(gbc.pc(), 0xab1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1c), 0xcb);
        EXPECT(gbc.readMem(0xab1d), 0xc2);
        // CB C2 0228
        gbc.setState(0x767b, 0x447c, 0x49f0, 0x5dfa, 0xffda, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0x767b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x447c);
        EXPECT(gbc.pc(), 0x767d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0229
        gbc.setState(0x4c12, 0xc37e, 0xda30, 0x617, 0x3ce0, 0x7822, 0x1, 0x0);
        gbc.writeMem(0x4c12, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc37e);
        EXPECT(gbc.pc(), 0x4c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 022A
        gbc.setState(0xed0, 0xc02a, 0xa680, 0x2a9c, 0x7018, 0x5cbf, 0x1, 0x1);
        gbc.writeMem(0xed0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc02a);
        EXPECT(gbc.pc(), 0xed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 022B
        gbc.setState(0x82e0, 0x7ea9, 0x2e80, 0x9f4f, 0xfa3a, 0xc9c1, 0x0, 0x0);
        gbc.writeMem(0x82e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7ea9);
        EXPECT(gbc.pc(), 0x82e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e0), 0xcb);
        EXPECT(gbc.readMem(0x82e1), 0xc2);
        // CB C2 022C
        gbc.setState(0x688f, 0xd59c, 0x3de0, 0x61ef, 0x5a89, 0xa791, 0x0, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd59c);
        EXPECT(gbc.pc(), 0x6891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 022D
        gbc.setState(0x702b, 0xaf22, 0x8170, 0x43b8, 0xb11, 0xa5b0, 0x1, 0x1);
        gbc.writeMem(0x702b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xaf22);
        EXPECT(gbc.pc(), 0x702d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 022E
        gbc.setState(0x62b6, 0xe918, 0xc6e0, 0xe007, 0x8721, 0x1395, 0x1, 0x0);
        gbc.writeMem(0x62b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 022F
        gbc.setState(0xcb71, 0x864c, 0x8560, 0xb8ed, 0xd99, 0x3f5b, 0x0, 0x0);
        gbc.writeMem(0xcb71, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x864c);
        EXPECT(gbc.pc(), 0xcb73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb71), 0xcb);
        EXPECT(gbc.readMem(0xcb72), 0xc2);
        // CB C2 0230
        gbc.setState(0x5c1f, 0x2b1e, 0x5e70, 0x3cb6, 0xf7bb, 0x7fcd, 0x0, 0x1);
        gbc.writeMem(0x5c1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2b1e);
        EXPECT(gbc.pc(), 0x5c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0231
        gbc.setState(0x4eaa, 0xf355, 0x1b50, 0xc717, 0x3e94, 0x7cd, 0x1, 0x0);
        gbc.writeMem(0x4eaa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf355);
        EXPECT(gbc.pc(), 0x4eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0232
        gbc.setState(0x8801, 0xbbb7, 0x8980, 0x9930, 0xedf7, 0xf520, 0x1, 0x0);
        gbc.writeMem(0x8801, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbbb7);
        EXPECT(gbc.pc(), 0x8803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8801), 0xcb);
        EXPECT(gbc.readMem(0x8802), 0xc2);
        // CB C2 0233
        gbc.setState(0x1de3, 0x7258, 0x4a20, 0xd8b8, 0xeeee, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0x1de3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7258);
        EXPECT(gbc.pc(), 0x1de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0234
        gbc.setState(0x5762, 0xcc4d, 0xa920, 0x6e9b, 0xf29d, 0xb46, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcc4d);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0235
        gbc.setState(0xae33, 0x94e8, 0x8710, 0xd826, 0x9967, 0xc5e, 0x0, 0x0);
        gbc.writeMem(0xae33, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x94e8);
        EXPECT(gbc.pc(), 0xae35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae33), 0xcb);
        EXPECT(gbc.readMem(0xae34), 0xc2);
        // CB C2 0236
        gbc.setState(0xd116, 0x3624, 0xaef0, 0x9b9e, 0x97eb, 0xed3c, 0x1, 0x1);
        gbc.writeMem(0xd116, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3624);
        EXPECT(gbc.pc(), 0xd118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd116), 0xcb);
        EXPECT(gbc.readMem(0xd117), 0xc2);
        // CB C2 0237
        gbc.setState(0xaa39, 0xdcf1, 0x3780, 0xa3a1, 0x80f6, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0xaa39, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0xaa3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa39), 0xcb);
        EXPECT(gbc.readMem(0xaa3a), 0xc2);
        // CB C2 0238
        gbc.setState(0xafde, 0x836b, 0x54c0, 0x59c, 0x1681, 0x7721, 0x0, 0x1);
        gbc.writeMem(0xafde, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0xafe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafde), 0xcb);
        EXPECT(gbc.readMem(0xafdf), 0xc2);
        // CB C2 0239
        gbc.setState(0x2f37, 0xf64e, 0xd2a0, 0x1f77, 0xec95, 0x4225, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf64e);
        EXPECT(gbc.pc(), 0x2f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 023A
        gbc.setState(0x14b9, 0x481b, 0x6e0, 0xd033, 0xde2f, 0xe1bd, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x481b);
        EXPECT(gbc.pc(), 0x14bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 023B
        gbc.setState(0x5118, 0x978, 0x2b30, 0xca03, 0xb501, 0xc6e8, 0x0, 0x1);
        gbc.writeMem(0x5118, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x978);
        EXPECT(gbc.pc(), 0x511a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 023C
        gbc.setState(0xbd0, 0x453e, 0x89e0, 0xacbd, 0x1c8e, 0xa58, 0x1, 0x1);
        gbc.writeMem(0xbd0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0xbd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 023D
        gbc.setState(0x8424, 0x3c5c, 0x7940, 0x9db4, 0x8c74, 0x1d56, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3c5c);
        EXPECT(gbc.pc(), 0x8426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8424), 0xcb);
        EXPECT(gbc.readMem(0x8425), 0xc2);
        // CB C2 023E
        gbc.setState(0x1ea0, 0x782c, 0xd350, 0x63e9, 0x76b5, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0x1ea0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x782c);
        EXPECT(gbc.pc(), 0x1ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 023F
        gbc.setState(0x43d8, 0x9cd7, 0xa420, 0x50ef, 0xf3ef, 0x5848, 0x0, 0x1);
        gbc.writeMem(0x43d8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9cd7);
        EXPECT(gbc.pc(), 0x43da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0240
        gbc.setState(0xee46, 0x8901, 0xe160, 0xe14f, 0x7d86, 0x25bd, 0x1, 0x1);
        gbc.writeMem(0xee46, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8901);
        EXPECT(gbc.pc(), 0xee48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee46), 0xcb);
        EXPECT(gbc.readMem(0xee47), 0xc2);
        // CB C2 0241
        gbc.setState(0x8556, 0x4a9a, 0xda60, 0xe94c, 0x2952, 0xc363, 0x1, 0x1);
        gbc.writeMem(0x8556, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4a9a);
        EXPECT(gbc.pc(), 0x8558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8556), 0xcb);
        EXPECT(gbc.readMem(0x8557), 0xc2);
        // CB C2 0242
        gbc.setState(0x1a43, 0xd178, 0x5b50, 0x568a, 0xbb3b, 0x5074, 0x1, 0x1);
        gbc.writeMem(0x1a43, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd178);
        EXPECT(gbc.pc(), 0x1a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0243
        gbc.setState(0x8c07, 0x1128, 0x7a50, 0x7802, 0xf103, 0x6096, 0x1, 0x1);
        gbc.writeMem(0x8c07, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1128);
        EXPECT(gbc.pc(), 0x8c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c07), 0xcb);
        EXPECT(gbc.readMem(0x8c08), 0xc2);
        // CB C2 0244
        gbc.setState(0x7e80, 0x6fa9, 0x8b60, 0x1cbe, 0x4362, 0xb458, 0x1, 0x0);
        gbc.writeMem(0x7e80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6fa9);
        EXPECT(gbc.pc(), 0x7e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0245
        gbc.setState(0x6493, 0x85f4, 0x32d0, 0x9f83, 0x965, 0xc5cf, 0x1, 0x0);
        gbc.writeMem(0x6493, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x85f4);
        EXPECT(gbc.pc(), 0x6495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0246
        gbc.setState(0xace0, 0xe8e0, 0x6d10, 0x87ec, 0xd8b5, 0x4d9f, 0x1, 0x0);
        gbc.writeMem(0xace0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe8e0);
        EXPECT(gbc.pc(), 0xace2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace0), 0xcb);
        EXPECT(gbc.readMem(0xace1), 0xc2);
        // CB C2 0247
        gbc.setState(0xd9cf, 0xcdba, 0x6220, 0x9a19, 0x7c33, 0x81e5, 0x1, 0x1);
        gbc.writeMem(0xd9cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcdba);
        EXPECT(gbc.pc(), 0xd9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cf), 0xcb);
        EXPECT(gbc.readMem(0xd9d0), 0xc2);
        // CB C2 0248
        gbc.setState(0x42fc, 0x7035, 0x9450, 0x7218, 0x949e, 0x7cca, 0x1, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7035);
        EXPECT(gbc.pc(), 0x42fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0249
        gbc.setState(0x160d, 0x21c8, 0xcc40, 0x3bf, 0x9a94, 0xb981, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x21c8);
        EXPECT(gbc.pc(), 0x160f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 024A
        gbc.setState(0x7e0, 0x2db6, 0x7100, 0x5309, 0xd664, 0xbafd, 0x0, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2db6);
        EXPECT(gbc.pc(), 0x7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 024B
        gbc.setState(0x3906, 0xe920, 0x35f0, 0x4197, 0x9833, 0xebee, 0x0, 0x0);
        gbc.writeMem(0x3906, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe920);
        EXPECT(gbc.pc(), 0x3908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 024C
        gbc.setState(0x8b94, 0x79cf, 0x8790, 0x6c4, 0x36dc, 0xc855, 0x1, 0x0);
        gbc.writeMem(0x8b94, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x79cf);
        EXPECT(gbc.pc(), 0x8b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b94), 0xcb);
        EXPECT(gbc.readMem(0x8b95), 0xc2);
        // CB C2 024D
        gbc.setState(0x7151, 0x9835, 0xe550, 0x771b, 0x74c0, 0xdfad, 0x0, 0x0);
        gbc.writeMem(0x7151, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9835);
        EXPECT(gbc.pc(), 0x7153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 024E
        gbc.setState(0xb576, 0x4c7f, 0xcf10, 0xb286, 0x897c, 0x3836, 0x1, 0x0);
        gbc.writeMem(0xb576, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4c7f);
        EXPECT(gbc.pc(), 0xb578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb576), 0xcb);
        EXPECT(gbc.readMem(0xb577), 0xc2);
        // CB C2 024F
        gbc.setState(0xe38d, 0x80b6, 0x1410, 0x782c, 0x8c4b, 0xd40, 0x0, 0x1);
        gbc.writeMem(0xe38d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x80b6);
        EXPECT(gbc.pc(), 0xe38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38d), 0xcb);
        EXPECT(gbc.readMem(0xe38e), 0xc2);
        // CB C2 0250
        gbc.setState(0x1eb6, 0x1641, 0x9cb0, 0x5e5, 0xf13d, 0x5720, 0x0, 0x0);
        gbc.writeMem(0x1eb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1641);
        EXPECT(gbc.pc(), 0x1eb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0252
        gbc.setState(0xd1a5, 0x6ef0, 0x7400, 0x17d0, 0x5e8b, 0x4f08, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0xd1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a5), 0xcb);
        EXPECT(gbc.readMem(0xd1a6), 0xc2);
        // CB C2 0253
        gbc.setState(0xcb56, 0x7de1, 0x25d0, 0xbb03, 0x1d32, 0xab66, 0x0, 0x1);
        gbc.writeMem(0xcb56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7de1);
        EXPECT(gbc.pc(), 0xcb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb56), 0xcb);
        EXPECT(gbc.readMem(0xcb57), 0xc2);
        // CB C2 0254
        gbc.setState(0x646c, 0xa25, 0x7090, 0x66d4, 0x2e9e, 0xe749, 0x0, 0x1);
        gbc.writeMem(0x646c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0x646e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0256
        gbc.setState(0x3f, 0x3eda, 0x63a0, 0x3902, 0x2878, 0x36cf, 0x1, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3eda);
        EXPECT(gbc.pc(), 0x41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0257
        gbc.setState(0xa473, 0xaaa5, 0x2a80, 0xfdbe, 0x9a15, 0x408f, 0x0, 0x1);
        gbc.writeMem(0xa473, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xaaa5);
        EXPECT(gbc.pc(), 0xa475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa473), 0xcb);
        EXPECT(gbc.readMem(0xa474), 0xc2);
        // CB C2 0258
        gbc.setState(0x5ca4, 0x2982, 0x5620, 0xfece, 0xf5e6, 0xc77b, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2982);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0259
        gbc.setState(0x3d40, 0xd214, 0x76b0, 0x1059, 0x2931, 0xa5fa, 0x1, 0x0);
        gbc.writeMem(0x3d40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd214);
        EXPECT(gbc.pc(), 0x3d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 025A
        gbc.setState(0x95e3, 0xa8f3, 0x4830, 0x94d, 0xc453, 0x745f, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa8f3);
        EXPECT(gbc.pc(), 0x95e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e3), 0xcb);
        EXPECT(gbc.readMem(0x95e4), 0xc2);
        // CB C2 025B
        gbc.setState(0x9cd2, 0xfe3f, 0xa500, 0x1887, 0x85b1, 0x7d77, 0x1, 0x1);
        gbc.writeMem(0x9cd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0x9cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd2), 0xcb);
        EXPECT(gbc.readMem(0x9cd3), 0xc2);
        // CB C2 025C
        gbc.setState(0x2db, 0xe954, 0x3520, 0xfbdc, 0xcf7f, 0xc5d2, 0x1, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe954);
        EXPECT(gbc.pc(), 0x2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 025D
        gbc.setState(0x2e8, 0x5a86, 0xd430, 0x8f65, 0x9688, 0x715c, 0x1, 0x0);
        gbc.writeMem(0x2e8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5a86);
        EXPECT(gbc.pc(), 0x2ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 025E
        gbc.setState(0x8a1f, 0x670d, 0x8c80, 0x6529, 0xebd3, 0xdbfb, 0x1, 0x0);
        gbc.writeMem(0x8a1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x670d);
        EXPECT(gbc.pc(), 0x8a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1f), 0xcb);
        EXPECT(gbc.readMem(0x8a20), 0xc2);
        // CB C2 025F
        gbc.setState(0xb645, 0xadc0, 0xf1f0, 0x8425, 0x29b0, 0x5cc8, 0x0, 0x1);
        gbc.writeMem(0xb645, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xadc0);
        EXPECT(gbc.pc(), 0xb647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb645), 0xcb);
        EXPECT(gbc.readMem(0xb646), 0xc2);
        // CB C2 0260
        gbc.setState(0x49da, 0xac09, 0x9230, 0x227c, 0x1060, 0xa748, 0x0, 0x0);
        gbc.writeMem(0x49da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xac09);
        EXPECT(gbc.pc(), 0x49dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0261
        gbc.setState(0x10a5, 0x85fc, 0xf640, 0xa519, 0x99dd, 0x8154, 0x0, 0x0);
        gbc.writeMem(0x10a5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x85fc);
        EXPECT(gbc.pc(), 0x10a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0262
        gbc.setState(0xead7, 0x745, 0x74d0, 0x23e0, 0x4443, 0x3aaa, 0x1, 0x0);
        gbc.writeMem(0xead7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x745);
        EXPECT(gbc.pc(), 0xead9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead7), 0xcb);
        EXPECT(gbc.readMem(0xead8), 0xc2);
        // CB C2 0263
        gbc.setState(0x60e, 0x4949, 0x76b0, 0x2832, 0x71a1, 0x4182, 0x1, 0x0);
        gbc.writeMem(0x60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0264
        gbc.setState(0x5b75, 0x9086, 0x5560, 0xc22e, 0xc06b, 0xe2d9, 0x0, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9086);
        EXPECT(gbc.pc(), 0x5b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0265
        gbc.setState(0x8435, 0x17ed, 0xd070, 0x5c16, 0x8316, 0xca35, 0x1, 0x0);
        gbc.writeMem(0x8435, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x17ed);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8435), 0xcb);
        EXPECT(gbc.readMem(0x8436), 0xc2);
        // CB C2 0266
        gbc.setState(0x417e, 0xf3eb, 0xd6b0, 0x4a88, 0xec9c, 0xf67, 0x1, 0x0);
        gbc.writeMem(0x417e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf3eb);
        EXPECT(gbc.pc(), 0x4180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0267
        gbc.setState(0x3da6, 0x96f6, 0x6230, 0x4c19, 0x7b8c, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x96f6);
        EXPECT(gbc.pc(), 0x3da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0268
        gbc.setState(0x380d, 0xe837, 0x2f40, 0x1d6a, 0xac28, 0x269d, 0x1, 0x1);
        gbc.writeMem(0x380d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe837);
        EXPECT(gbc.pc(), 0x380f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0269
        gbc.setState(0x763d, 0xcb6a, 0x5930, 0x6fac, 0x518f, 0x5e39, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcb6a);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 026A
        gbc.setState(0xb474, 0x8866, 0xa000, 0xe576, 0x3e, 0x7bc4, 0x0, 0x1);
        gbc.writeMem(0xb474, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8866);
        EXPECT(gbc.pc(), 0xb476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb474), 0xcb);
        EXPECT(gbc.readMem(0xb475), 0xc2);
        // CB C2 026B
        gbc.setState(0x8ef2, 0xb2d1, 0x1c90, 0x2ebf, 0xb6e0, 0x223c, 0x0, 0x1);
        gbc.writeMem(0x8ef2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb2d1);
        EXPECT(gbc.pc(), 0x8ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef2), 0xcb);
        EXPECT(gbc.readMem(0x8ef3), 0xc2);
        // CB C2 026C
        gbc.setState(0x7b3, 0xe7cd, 0x700, 0xdd77, 0x3cfd, 0x4d33, 0x0, 0x0);
        gbc.writeMem(0x7b3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0x7b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 026D
        gbc.setState(0x21e9, 0xc784, 0x600, 0xcb5c, 0xcfe6, 0x8743, 0x1, 0x1);
        gbc.writeMem(0x21e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc784);
        EXPECT(gbc.pc(), 0x21eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 026E
        gbc.setState(0xd017, 0xf87c, 0x4c00, 0x303b, 0x10cc, 0x3127, 0x0, 0x0);
        gbc.writeMem(0xd017, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf87c);
        EXPECT(gbc.pc(), 0xd019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd017), 0xcb);
        EXPECT(gbc.readMem(0xd018), 0xc2);
        // CB C2 026F
        gbc.setState(0xb5ff, 0x8763, 0x1530, 0x7309, 0x69d0, 0xea4f, 0x0, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8763);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ff), 0xcb);
        EXPECT(gbc.readMem(0xb600), 0xc2);
        // CB C2 0270
        gbc.setState(0x7cef, 0x2d06, 0x1920, 0x646b, 0x30ee, 0xb1dd, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2d06);
        EXPECT(gbc.pc(), 0x7cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0271
        gbc.setState(0x73d1, 0xbdbc, 0x5fc0, 0x7444, 0x789a, 0x3084, 0x1, 0x1);
        gbc.writeMem(0x73d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0x73d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0273
        gbc.setState(0xbf6d, 0x3d0, 0x510, 0xc461, 0x73df, 0xd49e, 0x1, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3d0);
        EXPECT(gbc.pc(), 0xbf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf6d), 0xcb);
        EXPECT(gbc.readMem(0xbf6e), 0xc2);
        // CB C2 0274
        gbc.setState(0xbecd, 0xe1bd, 0xe600, 0x169e, 0xd9d5, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0xbecd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe1bd);
        EXPECT(gbc.pc(), 0xbecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbecd), 0xcb);
        EXPECT(gbc.readMem(0xbece), 0xc2);
        // CB C2 0275
        gbc.setState(0x288c, 0xf05e, 0x8910, 0x1554, 0xd121, 0xb186, 0x0, 0x0);
        gbc.writeMem(0x288c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf05e);
        EXPECT(gbc.pc(), 0x288e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0276
        gbc.setState(0x83fa, 0x9a16, 0x57c0, 0x9148, 0xa64c, 0x6bab, 0x1, 0x0);
        gbc.writeMem(0x83fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9a16);
        EXPECT(gbc.pc(), 0x83fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fa), 0xcb);
        EXPECT(gbc.readMem(0x83fb), 0xc2);
        // CB C2 0277
        gbc.setState(0x2ac8, 0x1305, 0xc5b0, 0xf561, 0x5aa7, 0x7c29, 0x1, 0x0);
        gbc.writeMem(0x2ac8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1305);
        EXPECT(gbc.pc(), 0x2aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0278
        gbc.setState(0x266c, 0xfcf3, 0x30a0, 0xd3e, 0x3982, 0x291a, 0x0, 0x0);
        gbc.writeMem(0x266c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfcf3);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0279
        gbc.setState(0x2202, 0x86b1, 0xfcc0, 0xcf28, 0x2dd1, 0xaecb, 0x1, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x86b1);
        EXPECT(gbc.pc(), 0x2204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 027A
        gbc.setState(0x32a0, 0xbea4, 0x2030, 0x5cad, 0x8c51, 0x2698, 0x1, 0x1);
        gbc.writeMem(0x32a0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbea4);
        EXPECT(gbc.pc(), 0x32a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 027B
        gbc.setState(0x1ff1, 0xe52, 0x5070, 0x4353, 0xccfd, 0x5bd7, 0x1, 0x0);
        gbc.writeMem(0x1ff1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe52);
        EXPECT(gbc.pc(), 0x1ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 027C
        gbc.setState(0x4c26, 0x7527, 0xcf90, 0x18ba, 0xa3cd, 0x5f1f, 0x1, 0x0);
        gbc.writeMem(0x4c26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7527);
        EXPECT(gbc.pc(), 0x4c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 027E
        gbc.setState(0x8103, 0xe5f7, 0xbc70, 0xf2e3, 0xcf5f, 0x27ed, 0x1, 0x0);
        gbc.writeMem(0x8103, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe5f7);
        EXPECT(gbc.pc(), 0x8105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8103), 0xcb);
        EXPECT(gbc.readMem(0x8104), 0xc2);
        // CB C2 027F
        gbc.setState(0xbdb4, 0x6bdf, 0x8ad0, 0xc3bd, 0xb2a0, 0xed20, 0x0, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6bdf);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0xc2);
        // CB C2 0280
        gbc.setState(0xc8e3, 0x9373, 0xa5f0, 0x9180, 0x3f00, 0xb18e, 0x0, 0x0);
        gbc.writeMem(0xc8e3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0xc8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e3), 0xcb);
        EXPECT(gbc.readMem(0xc8e4), 0xc2);
        // CB C2 0281
        gbc.setState(0x9ead, 0xff4d, 0xa3a0, 0xc0ea, 0xc818, 0x3fb6, 0x0, 0x0);
        gbc.writeMem(0x9ead, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xff4d);
        EXPECT(gbc.pc(), 0x9eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ead), 0xcb);
        EXPECT(gbc.readMem(0x9eae), 0xc2);
        // CB C2 0282
        gbc.setState(0x7bc6, 0x14ae, 0xa290, 0xf6c9, 0x628, 0x3851, 0x1, 0x0);
        gbc.writeMem(0x7bc6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x14ae);
        EXPECT(gbc.pc(), 0x7bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0283
        gbc.setState(0xef25, 0x57b5, 0x27d0, 0x8e5e, 0x8bca, 0x8933, 0x0, 0x1);
        gbc.writeMem(0xef25, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x57b5);
        EXPECT(gbc.pc(), 0xef27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef25), 0xcb);
        EXPECT(gbc.readMem(0xef26), 0xc2);
        // CB C2 0284
        gbc.setState(0xd6a9, 0x3101, 0xdf20, 0x9cc7, 0x5675, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0xd6a9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3101);
        EXPECT(gbc.pc(), 0xd6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a9), 0xcb);
        EXPECT(gbc.readMem(0xd6aa), 0xc2);
        // CB C2 0285
        gbc.setState(0xe599, 0xee64, 0xece0, 0x6d87, 0xadeb, 0x561e, 0x0, 0x0);
        gbc.writeMem(0xe599, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xee64);
        EXPECT(gbc.pc(), 0xe59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe599), 0xcb);
        EXPECT(gbc.readMem(0xe59a), 0xc2);
        // CB C2 0286
        gbc.setState(0x2f1f, 0x6386, 0x1880, 0x6faf, 0xf4e7, 0xbd29, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6386);
        EXPECT(gbc.pc(), 0x2f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0287
        gbc.setState(0xef0d, 0xf5d, 0x21a0, 0xc311, 0x992b, 0xf00d, 0x1, 0x0);
        gbc.writeMem(0xef0d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf5d);
        EXPECT(gbc.pc(), 0xef0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0d), 0xcb);
        EXPECT(gbc.readMem(0xef0e), 0xc2);
        // CB C2 0288
        gbc.setState(0x98f9, 0x720c, 0xd320, 0x6143, 0xe044, 0x5702, 0x0, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x720c);
        EXPECT(gbc.pc(), 0x98fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f9), 0xcb);
        EXPECT(gbc.readMem(0x98fa), 0xc2);
        // CB C2 0289
        gbc.setState(0x2980, 0x1210, 0xba30, 0x4f59, 0x8082, 0xef8a, 0x1, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1210);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 028B
        gbc.setState(0x25df, 0x40a9, 0xe1f0, 0x884, 0x4d7b, 0x28f, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x40a9);
        EXPECT(gbc.pc(), 0x25e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 028C
        gbc.setState(0x500d, 0xf82e, 0xb260, 0xcb52, 0x53d6, 0x42d9, 0x0, 0x1);
        gbc.writeMem(0x500d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf82e);
        EXPECT(gbc.pc(), 0x500f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 028D
        gbc.setState(0xe947, 0xde9e, 0xad60, 0x632d, 0x8ada, 0x8fee, 0x1, 0x1);
        gbc.writeMem(0xe947, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0xe949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe947), 0xcb);
        EXPECT(gbc.readMem(0xe948), 0xc2);
        // CB C2 028E
        gbc.setState(0x258, 0x93db, 0xf6d0, 0x8b8a, 0x40a, 0x6d63, 0x1, 0x0);
        gbc.writeMem(0x258, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x93db);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 028F
        gbc.setState(0xccad, 0x2d54, 0x50a0, 0xbcc0, 0xfa0, 0x3159, 0x1, 0x1);
        gbc.writeMem(0xccad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2d54);
        EXPECT(gbc.pc(), 0xccaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccad), 0xcb);
        EXPECT(gbc.readMem(0xccae), 0xc2);
        // CB C2 0290
        gbc.setState(0xdd56, 0x34b5, 0x9af0, 0xa8d5, 0x3bd1, 0x5e26, 0x0, 0x1);
        gbc.writeMem(0xdd56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x34b5);
        EXPECT(gbc.pc(), 0xdd58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd56), 0xcb);
        EXPECT(gbc.readMem(0xdd57), 0xc2);
        // CB C2 0291
        gbc.setState(0x297f, 0x6f50, 0x61f0, 0x3308, 0xe043, 0xf5b3, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6f50);
        EXPECT(gbc.pc(), 0x2981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0292
        gbc.setState(0x5c43, 0x7924, 0xa3e0, 0x4717, 0x24b5, 0xcfed, 0x0, 0x0);
        gbc.writeMem(0x5c43, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7924);
        EXPECT(gbc.pc(), 0x5c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0293
        gbc.setState(0xa21, 0x78ea, 0xac60, 0x293c, 0xe200, 0xddb4, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x78ea);
        EXPECT(gbc.pc(), 0xa23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0294
        gbc.setState(0x4e80, 0x60fe, 0x99a0, 0xedef, 0x4373, 0x4ce8, 0x0, 0x0);
        gbc.writeMem(0x4e80, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x60fe);
        EXPECT(gbc.pc(), 0x4e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0295
        gbc.setState(0x4205, 0x20d7, 0x3570, 0xe2b8, 0xf300, 0x1ff8, 0x0, 0x1);
        gbc.writeMem(0x4205, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x20d7);
        EXPECT(gbc.pc(), 0x4207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0296
        gbc.setState(0xd21e, 0xd781, 0x90b0, 0x662d, 0xd379, 0x19b, 0x1, 0x0);
        gbc.writeMem(0xd21e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0xd220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21e), 0xcb);
        EXPECT(gbc.readMem(0xd21f), 0xc2);
        // CB C2 0297
        gbc.setState(0x1393, 0x819e, 0x510, 0x746e, 0x2ac2, 0x8d1d, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x819e);
        EXPECT(gbc.pc(), 0x1395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0298
        gbc.setState(0xc0ea, 0x3302, 0xc830, 0x4895, 0xbe5f, 0x702, 0x0, 0x1);
        gbc.writeMem(0xc0ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3302);
        EXPECT(gbc.pc(), 0xc0ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ea), 0xcb);
        EXPECT(gbc.readMem(0xc0eb), 0xc2);
        // CB C2 0299
        gbc.setState(0xcc0c, 0x27a3, 0xc760, 0x4c09, 0xda31, 0xa1ad, 0x1, 0x1);
        gbc.writeMem(0xcc0c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x27a3);
        EXPECT(gbc.pc(), 0xcc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0c), 0xcb);
        EXPECT(gbc.readMem(0xcc0d), 0xc2);
        // CB C2 029A
        gbc.setState(0xa51e, 0xe6e0, 0xa850, 0x533d, 0x8fe2, 0x5449, 0x1, 0x0);
        gbc.writeMem(0xa51e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe6e0);
        EXPECT(gbc.pc(), 0xa520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51e), 0xcb);
        EXPECT(gbc.readMem(0xa51f), 0xc2);
        // CB C2 029C
        gbc.setState(0x72fd, 0xee, 0xd710, 0xc11f, 0x47c8, 0xe5d4, 0x0, 0x1);
        gbc.writeMem(0x72fd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xee);
        EXPECT(gbc.pc(), 0x72ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 029D
        gbc.setState(0x52ff, 0x430a, 0x4170, 0x8450, 0xd339, 0x4551, 0x0, 0x0);
        gbc.writeMem(0x52ff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x430a);
        EXPECT(gbc.pc(), 0x5301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 029F
        gbc.setState(0x9ad5, 0x7821, 0x1e30, 0x9b71, 0xeab5, 0x1467, 0x1, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7821);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad5), 0xcb);
        EXPECT(gbc.readMem(0x9ad6), 0xc2);
        // CB C2 02A0
        gbc.setState(0x52b4, 0x4286, 0xeb20, 0xc537, 0x6eac, 0x7dba, 0x0, 0x0);
        gbc.writeMem(0x52b4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4286);
        EXPECT(gbc.pc(), 0x52b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02A1
        gbc.setState(0x9155, 0x55ba, 0xa050, 0x409e, 0x1678, 0x3ef5, 0x0, 0x0);
        gbc.writeMem(0x9155, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x55ba);
        EXPECT(gbc.pc(), 0x9157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9155), 0xcb);
        EXPECT(gbc.readMem(0x9156), 0xc2);
        // CB C2 02A2
        gbc.setState(0x631d, 0x1b31, 0xafb0, 0xdc80, 0x3c60, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0x631d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1b31);
        EXPECT(gbc.pc(), 0x631f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02A3
        gbc.setState(0x7793, 0xb2eb, 0x36f0, 0x32be, 0x279c, 0xc6ce, 0x0, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb2eb);
        EXPECT(gbc.pc(), 0x7795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02A4
        gbc.setState(0xce16, 0x2321, 0x5bc0, 0x5be4, 0x779b, 0xbfec, 0x0, 0x1);
        gbc.writeMem(0xce16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2321);
        EXPECT(gbc.pc(), 0xce18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce16), 0xcb);
        EXPECT(gbc.readMem(0xce17), 0xc2);
        // CB C2 02A6
        gbc.setState(0xdbbb, 0x959f, 0x3670, 0x5434, 0x3214, 0xc463, 0x1, 0x1);
        gbc.writeMem(0xdbbb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x959f);
        EXPECT(gbc.pc(), 0xdbbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbb), 0xcb);
        EXPECT(gbc.readMem(0xdbbc), 0xc2);
        // CB C2 02A7
        gbc.setState(0xa668, 0xf6d9, 0xff00, 0xbe5c, 0x3e87, 0x918c, 0x0, 0x1);
        gbc.writeMem(0xa668, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0xa66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa668), 0xcb);
        EXPECT(gbc.readMem(0xa669), 0xc2);
        // CB C2 02A9
        gbc.setState(0xcd83, 0x4dd8, 0xdd10, 0xe3c1, 0x4020, 0xf230, 0x0, 0x1);
        gbc.writeMem(0xcd83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4dd8);
        EXPECT(gbc.pc(), 0xcd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd83), 0xcb);
        EXPECT(gbc.readMem(0xcd84), 0xc2);
        // CB C2 02AA
        gbc.setState(0xdc65, 0x1639, 0xb090, 0x3baf, 0xa620, 0xf5ed, 0x0, 0x1);
        gbc.writeMem(0xdc65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1639);
        EXPECT(gbc.pc(), 0xdc67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc65), 0xcb);
        EXPECT(gbc.readMem(0xdc66), 0xc2);
        // CB C2 02AB
        gbc.setState(0x2f72, 0x25e9, 0xcc0, 0x77f, 0xa984, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x2f72, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0x2f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02AC
        gbc.setState(0x57bb, 0x3514, 0x1d40, 0x58cf, 0x97e7, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0x57bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3514);
        EXPECT(gbc.pc(), 0x57bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02AE
        gbc.setState(0x741c, 0x5ba, 0xa910, 0x2c4e, 0x5a8a, 0x53cd, 0x0, 0x0);
        gbc.writeMem(0x741c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5ba);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02AF
        gbc.setState(0x4147, 0xb770, 0x1040, 0x51d6, 0x7ead, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0x4147, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb770);
        EXPECT(gbc.pc(), 0x4149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02B0
        gbc.setState(0xd954, 0x96eb, 0xfd70, 0x5da0, 0x1326, 0x235d, 0x1, 0x0);
        gbc.writeMem(0xd954, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd954), 0xcb);
        EXPECT(gbc.readMem(0xd955), 0xc2);
        // CB C2 02B1
        gbc.setState(0xc9fa, 0xf95, 0xde70, 0x44bb, 0x48ac, 0x1139, 0x0, 0x0);
        gbc.writeMem(0xc9fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf95);
        EXPECT(gbc.pc(), 0xc9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9fa), 0xcb);
        EXPECT(gbc.readMem(0xc9fb), 0xc2);
        // CB C2 02B2
        gbc.setState(0xb98b, 0x5937, 0x1660, 0xa324, 0x96ae, 0xc337, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5937);
        EXPECT(gbc.pc(), 0xb98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98b), 0xcb);
        EXPECT(gbc.readMem(0xb98c), 0xc2);
        // CB C2 02B3
        gbc.setState(0x7fe3, 0xaf57, 0xe4e0, 0x17a9, 0x5784, 0x3929, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xaf57);
        EXPECT(gbc.pc(), 0x7fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02B4
        gbc.setState(0x884c, 0xedaa, 0xb260, 0x8e9b, 0x3598, 0x1b1, 0x0, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xedaa);
        EXPECT(gbc.pc(), 0x884e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884c), 0xcb);
        EXPECT(gbc.readMem(0x884d), 0xc2);
        // CB C2 02B5
        gbc.setState(0xc294, 0x31a9, 0xe670, 0xcce5, 0x96cf, 0x166f, 0x0, 0x0);
        gbc.writeMem(0xc294, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x31a9);
        EXPECT(gbc.pc(), 0xc296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc294), 0xcb);
        EXPECT(gbc.readMem(0xc295), 0xc2);
        // CB C2 02B6
        gbc.setState(0x4f38, 0xabb, 0x3f30, 0xcb2f, 0xdc12, 0x65ff, 0x0, 0x0);
        gbc.writeMem(0x4f38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xabb);
        EXPECT(gbc.pc(), 0x4f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02B7
        gbc.setState(0xd20c, 0x5ce1, 0x6090, 0x5ba3, 0xe377, 0x383e, 0x0, 0x0);
        gbc.writeMem(0xd20c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0xd20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20c), 0xcb);
        EXPECT(gbc.readMem(0xd20d), 0xc2);
        // CB C2 02B8
        gbc.setState(0x7f16, 0xa4e4, 0x4f70, 0xdc2a, 0xd242, 0xfaaf, 0x0, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa4e4);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02B9
        gbc.setState(0xafd6, 0x684e, 0x9ed0, 0x1899, 0x796c, 0xa6da, 0x0, 0x0);
        gbc.writeMem(0xafd6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x684e);
        EXPECT(gbc.pc(), 0xafd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd6), 0xcb);
        EXPECT(gbc.readMem(0xafd7), 0xc2);
        // CB C2 02BA
        gbc.setState(0x8647, 0xf5a3, 0x1b40, 0xa08b, 0x2b04, 0x1757, 0x0, 0x0);
        gbc.writeMem(0x8647, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf5a3);
        EXPECT(gbc.pc(), 0x8649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8647), 0xcb);
        EXPECT(gbc.readMem(0x8648), 0xc2);
        // CB C2 02BB
        gbc.setState(0x4316, 0x87e, 0xafb0, 0xc75c, 0xaa5f, 0x8e2b, 0x0, 0x1);
        gbc.writeMem(0x4316, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x87e);
        EXPECT(gbc.pc(), 0x4318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02BC
        gbc.setState(0x202c, 0xee54, 0xfdc0, 0x2da6, 0x5d07, 0xe386, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xee54);
        EXPECT(gbc.pc(), 0x202e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02BD
        gbc.setState(0x1520, 0xd1e5, 0x7170, 0x570f, 0xe166, 0x719a, 0x0, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd1e5);
        EXPECT(gbc.pc(), 0x1522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02BE
        gbc.setState(0xe078, 0xe421, 0x43c0, 0x82b7, 0x2e1a, 0xdd89, 0x1, 0x1);
        gbc.writeMem(0xe078, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe421);
        EXPECT(gbc.pc(), 0xe07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe078), 0xcb);
        EXPECT(gbc.readMem(0xe079), 0xc2);
        // CB C2 02BF
        gbc.setState(0xd41f, 0x2e0a, 0x5fd0, 0x7d8f, 0x6fc1, 0x2d46, 0x0, 0x0);
        gbc.writeMem(0xd41f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2e0a);
        EXPECT(gbc.pc(), 0xd421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41f), 0xcb);
        EXPECT(gbc.readMem(0xd420), 0xc2);
        // CB C2 02C0
        gbc.setState(0x7313, 0xe6c9, 0x7240, 0xb23a, 0x963f, 0x3a4c, 0x1, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe6c9);
        EXPECT(gbc.pc(), 0x7315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02C1
        gbc.setState(0xe9f, 0x2d3f, 0xd8c0, 0xc235, 0x470d, 0xedc1, 0x0, 0x1);
        gbc.writeMem(0xe9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2d3f);
        EXPECT(gbc.pc(), 0xea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02C3
        gbc.setState(0x4bde, 0x505c, 0x70d0, 0xe189, 0x7305, 0xaec6, 0x0, 0x1);
        gbc.writeMem(0x4bde, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x505c);
        EXPECT(gbc.pc(), 0x4be0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02C4
        gbc.setState(0x5f79, 0x516e, 0x7650, 0xcfe3, 0xdd6e, 0x2f4d, 0x0, 0x1);
        gbc.writeMem(0x5f79, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x516e);
        EXPECT(gbc.pc(), 0x5f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02C5
        gbc.setState(0x7cf4, 0xdbb7, 0x3e30, 0xb9fd, 0xe8a1, 0xe0fa, 0x0, 0x0);
        gbc.writeMem(0x7cf4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdbb7);
        EXPECT(gbc.pc(), 0x7cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02C6
        gbc.setState(0xd5cf, 0x4f1a, 0x1e40, 0x6d5d, 0x799, 0x6759, 0x0, 0x1);
        gbc.writeMem(0xd5cf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4f1a);
        EXPECT(gbc.pc(), 0xd5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5cf), 0xcb);
        EXPECT(gbc.readMem(0xd5d0), 0xc2);
        // CB C2 02C8
        gbc.setState(0x473b, 0x2e76, 0xe470, 0x6de, 0x7ed8, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0x473b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2e76);
        EXPECT(gbc.pc(), 0x473d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02C9
        gbc.setState(0xc5c4, 0x8e1e, 0x7ad0, 0x3c3a, 0xb35, 0x4191, 0x1, 0x1);
        gbc.writeMem(0xc5c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8e1e);
        EXPECT(gbc.pc(), 0xc5c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c4), 0xcb);
        EXPECT(gbc.readMem(0xc5c5), 0xc2);
        // CB C2 02CA
        gbc.setState(0x7aa0, 0xafaa, 0xa640, 0xe32d, 0x748c, 0x4ca0, 0x1, 0x0);
        gbc.writeMem(0x7aa0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xafaa);
        EXPECT(gbc.pc(), 0x7aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02CB
        gbc.setState(0x39a7, 0xaa1c, 0xc7f0, 0x1d52, 0x691d, 0x8206, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02CC
        gbc.setState(0xd30c, 0x34a5, 0x69c0, 0xf1d3, 0x34ed, 0x949d, 0x0, 0x1);
        gbc.writeMem(0xd30c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x34a5);
        EXPECT(gbc.pc(), 0xd30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30c), 0xcb);
        EXPECT(gbc.readMem(0xd30d), 0xc2);
        // CB C2 02CD
        gbc.setState(0x53cd, 0x4511, 0x7790, 0xafad, 0x6b26, 0xab06, 0x0, 0x0);
        gbc.writeMem(0x53cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4511);
        EXPECT(gbc.pc(), 0x53cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02CE
        gbc.setState(0xc97, 0xd6e, 0x9370, 0x194e, 0x2f2c, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0xc97, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0xc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02CF
        gbc.setState(0xc22f, 0xe444, 0xe540, 0x1b0a, 0x9e46, 0x488, 0x1, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe444);
        EXPECT(gbc.pc(), 0xc231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22f), 0xcb);
        EXPECT(gbc.readMem(0xc230), 0xc2);
        // CB C2 02D0
        gbc.setState(0x27b0, 0x937, 0xc2c0, 0x2196, 0xedc, 0x3188, 0x1, 0x1);
        gbc.writeMem(0x27b0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x937);
        EXPECT(gbc.pc(), 0x27b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02D1
        gbc.setState(0x3e77, 0xbe69, 0x55a0, 0xf3f8, 0xf3a, 0x235f, 0x0, 0x0);
        gbc.writeMem(0x3e77, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbe69);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02D2
        gbc.setState(0x56e9, 0x49e6, 0x6e20, 0xd2f2, 0xdadd, 0x6307, 0x1, 0x1);
        gbc.writeMem(0x56e9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x49e6);
        EXPECT(gbc.pc(), 0x56eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02D3
        gbc.setState(0x9b3b, 0x161d, 0x7200, 0x882b, 0x6d5a, 0x5506, 0x0, 0x1);
        gbc.writeMem(0x9b3b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x161d);
        EXPECT(gbc.pc(), 0x9b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3b), 0xcb);
        EXPECT(gbc.readMem(0x9b3c), 0xc2);
        // CB C2 02D4
        gbc.setState(0x8903, 0x3e67, 0x4010, 0x4a3b, 0x1323, 0x59ce, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3e67);
        EXPECT(gbc.pc(), 0x8905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8903), 0xcb);
        EXPECT(gbc.readMem(0x8904), 0xc2);
        // CB C2 02D5
        gbc.setState(0xa48f, 0xca83, 0x1970, 0x25a2, 0x5844, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xa48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0xa491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48f), 0xcb);
        EXPECT(gbc.readMem(0xa490), 0xc2);
        // CB C2 02D6
        gbc.setState(0xde83, 0x1439, 0xd810, 0x1147, 0x8e1e, 0x1df4, 0x0, 0x1);
        gbc.writeMem(0xde83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1439);
        EXPECT(gbc.pc(), 0xde85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde83), 0xcb);
        EXPECT(gbc.readMem(0xde84), 0xc2);
        // CB C2 02D7
        gbc.setState(0x3dc, 0xd259, 0x910, 0x6e20, 0x5fd4, 0xe385, 0x1, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd259);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02D8
        gbc.setState(0x947f, 0x7fd0, 0x99c0, 0x1fa6, 0xe6c0, 0xb57c, 0x0, 0x1);
        gbc.writeMem(0x947f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7fd0);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947f), 0xcb);
        EXPECT(gbc.readMem(0x9480), 0xc2);
        // CB C2 02D9
        gbc.setState(0x9746, 0x8d86, 0x71f0, 0x7d8c, 0xa14, 0x3fa2, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8d86);
        EXPECT(gbc.pc(), 0x9748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9746), 0xcb);
        EXPECT(gbc.readMem(0x9747), 0xc2);
        // CB C2 02DA
        gbc.setState(0xcc38, 0x5141, 0x16b0, 0x5a4, 0xa7b8, 0xd850, 0x0, 0x0);
        gbc.writeMem(0xcc38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5141);
        EXPECT(gbc.pc(), 0xcc3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc38), 0xcb);
        EXPECT(gbc.readMem(0xcc39), 0xc2);
        // CB C2 02DC
        gbc.setState(0x81e2, 0xa9a5, 0x5400, 0x3a9b, 0xf54e, 0x276f, 0x1, 0x1);
        gbc.writeMem(0x81e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa9a5);
        EXPECT(gbc.pc(), 0x81e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e2), 0xcb);
        EXPECT(gbc.readMem(0x81e3), 0xc2);
        // CB C2 02DD
        gbc.setState(0x4d0f, 0x919e, 0xe760, 0x62e, 0x183e, 0xcf2f, 0x1, 0x0);
        gbc.writeMem(0x4d0f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x919e);
        EXPECT(gbc.pc(), 0x4d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02DE
        gbc.setState(0x2a5f, 0xe9d6, 0x6950, 0x82dc, 0x8ce2, 0x7370, 0x0, 0x1);
        gbc.writeMem(0x2a5f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe9d6);
        EXPECT(gbc.pc(), 0x2a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02DF
        gbc.setState(0x7e98, 0xe81a, 0x2fd0, 0x42a2, 0x693d, 0x54f0, 0x1, 0x0);
        gbc.writeMem(0x7e98, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe81a);
        EXPECT(gbc.pc(), 0x7e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02E0
        gbc.setState(0x5e, 0x66bd, 0x3ad0, 0x5122, 0xd63c, 0xc5f, 0x1, 0x1);
        gbc.writeMem(0x5e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x66bd);
        EXPECT(gbc.pc(), 0x60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02E1
        gbc.setState(0x2fe7, 0x2360, 0x3990, 0x8f58, 0xcd63, 0x1123, 0x0, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2360);
        EXPECT(gbc.pc(), 0x2fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02E2
        gbc.setState(0xd57e, 0x6400, 0x5ee0, 0x89b, 0x6e9c, 0x493e, 0x1, 0x1);
        gbc.writeMem(0xd57e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6400);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0xc2);
        // CB C2 02E3
        gbc.setState(0xef3b, 0xf072, 0x4490, 0xd674, 0x99d7, 0xaf30, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf072);
        EXPECT(gbc.pc(), 0xef3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3b), 0xcb);
        EXPECT(gbc.readMem(0xef3c), 0xc2);
        // CB C2 02E4
        gbc.setState(0x9f9b, 0xbed4, 0x9650, 0xa0eb, 0xa973, 0x57be, 0x0, 0x1);
        gbc.writeMem(0x9f9b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbed4);
        EXPECT(gbc.pc(), 0x9f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9b), 0xcb);
        EXPECT(gbc.readMem(0x9f9c), 0xc2);
        // CB C2 02E5
        gbc.setState(0x89b6, 0xe1d4, 0x44c0, 0x1318, 0x46c2, 0x42c0, 0x0, 0x0);
        gbc.writeMem(0x89b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe1d4);
        EXPECT(gbc.pc(), 0x89b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b6), 0xcb);
        EXPECT(gbc.readMem(0x89b7), 0xc2);
        // CB C2 02E6
        gbc.setState(0x4a30, 0x9735, 0x8150, 0xe263, 0x884c, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x4a30, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9735);
        EXPECT(gbc.pc(), 0x4a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02E8
        gbc.setState(0x19c7, 0x4bff, 0x5590, 0x9805, 0x4bca, 0x1052, 0x1, 0x0);
        gbc.writeMem(0x19c7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4bff);
        EXPECT(gbc.pc(), 0x19c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02E9
        gbc.setState(0x28ea, 0xeb3e, 0x86f0, 0x8c21, 0x26b0, 0x37de, 0x1, 0x0);
        gbc.writeMem(0x28ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeb3e);
        EXPECT(gbc.pc(), 0x28ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02EA
        gbc.setState(0xdbb2, 0x2b35, 0xf280, 0xd1d6, 0xdf16, 0xb46, 0x1, 0x1);
        gbc.writeMem(0xdbb2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2b35);
        EXPECT(gbc.pc(), 0xdbb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb2), 0xcb);
        EXPECT(gbc.readMem(0xdbb3), 0xc2);
        // CB C2 02EB
        gbc.setState(0xea3a, 0xa59c, 0x3840, 0x969e, 0x59c2, 0x238f, 0x0, 0x0);
        gbc.writeMem(0xea3a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa59c);
        EXPECT(gbc.pc(), 0xea3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3a), 0xcb);
        EXPECT(gbc.readMem(0xea3b), 0xc2);
        // CB C2 02EC
        gbc.setState(0x6883, 0x269e, 0xdaf0, 0xe264, 0x65c3, 0xc564, 0x0, 0x1);
        gbc.writeMem(0x6883, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x269e);
        EXPECT(gbc.pc(), 0x6885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02ED
        gbc.setState(0x1b56, 0xfdf6, 0x8ff0, 0xeac8, 0x36bd, 0x7dc5, 0x1, 0x0);
        gbc.writeMem(0x1b56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfdf6);
        EXPECT(gbc.pc(), 0x1b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02EE
        gbc.setState(0x4210, 0xa793, 0xedf0, 0x1e0b, 0x629f, 0x5df1, 0x1, 0x0);
        gbc.writeMem(0x4210, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa793);
        EXPECT(gbc.pc(), 0x4212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02EF
        gbc.setState(0x58b1, 0x773, 0xc720, 0x2387, 0xe585, 0xf9e3, 0x0, 0x0);
        gbc.writeMem(0x58b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x773);
        EXPECT(gbc.pc(), 0x58b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02F0
        gbc.setState(0x6a9a, 0xa528, 0xee0, 0x8e77, 0x9a8b, 0x83c3, 0x0, 0x0);
        gbc.writeMem(0x6a9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa528);
        EXPECT(gbc.pc(), 0x6a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02F1
        gbc.setState(0xed74, 0x68fd, 0x1d00, 0xed3f, 0xc169, 0x947a, 0x1, 0x1);
        gbc.writeMem(0xed74, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x68fd);
        EXPECT(gbc.pc(), 0xed76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed74), 0xcb);
        EXPECT(gbc.readMem(0xed75), 0xc2);
        // CB C2 02F5
        gbc.setState(0x337f, 0x7fa3, 0x4810, 0xbff8, 0x1b2f, 0xbc, 0x1, 0x0);
        gbc.writeMem(0x337f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7fa3);
        EXPECT(gbc.pc(), 0x3381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02F6
        gbc.setState(0x8ea2, 0x692, 0x2390, 0xecd4, 0x6d77, 0x2f6c, 0x0, 0x1);
        gbc.writeMem(0x8ea2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x692);
        EXPECT(gbc.pc(), 0x8ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea2), 0xcb);
        EXPECT(gbc.readMem(0x8ea3), 0xc2);
        // CB C2 02F7
        gbc.setState(0x1c9b, 0x1644, 0x5bc0, 0x806b, 0x3284, 0xebed, 0x1, 0x1);
        gbc.writeMem(0x1c9b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x1c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 02F8
        gbc.setState(0x4a38, 0xd2ef, 0x89d0, 0xbddc, 0x896d, 0x2f36, 0x0, 0x1);
        gbc.writeMem(0x4a38, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd2ef);
        EXPECT(gbc.pc(), 0x4a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02F9
        gbc.setState(0x3566, 0x3d6a, 0xe150, 0x254, 0x2c07, 0x610a, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3d6a);
        EXPECT(gbc.pc(), 0x3568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 02FD
        gbc.setState(0xbe29, 0x4171, 0x4490, 0xd2a0, 0x73e, 0xb50f, 0x1, 0x1);
        gbc.writeMem(0xbe29, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4171);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe29), 0xcb);
        EXPECT(gbc.readMem(0xbe2a), 0xc2);
        // CB C2 02FE
        gbc.setState(0xa7cd, 0xfe5b, 0x4900, 0xbad0, 0x4ed5, 0xf87f, 0x1, 0x0);
        gbc.writeMem(0xa7cd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfe5b);
        EXPECT(gbc.pc(), 0xa7cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cd), 0xcb);
        EXPECT(gbc.readMem(0xa7ce), 0xc2);
        // CB C2 02FF
        gbc.setState(0x3c6b, 0xc313, 0xe7f0, 0x2e8f, 0x8bfb, 0xb345, 0x0, 0x1);
        gbc.writeMem(0x3c6b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc313);
        EXPECT(gbc.pc(), 0x3c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0300
        gbc.setState(0x59bb, 0x307a, 0x6320, 0x2a31, 0xfe3e, 0xd3e1, 0x0, 0x0);
        gbc.writeMem(0x59bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x307a);
        EXPECT(gbc.pc(), 0x59bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0301
        gbc.setState(0xa559, 0x418, 0x5960, 0xfb31, 0x7e36, 0x77d3, 0x1, 0x1);
        gbc.writeMem(0xa559, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x418);
        EXPECT(gbc.pc(), 0xa55b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa559), 0xcb);
        EXPECT(gbc.readMem(0xa55a), 0xc2);
        // CB C2 0302
        gbc.setState(0x7e23, 0xd17e, 0x6c90, 0xb698, 0xdaa, 0xe7a4, 0x0, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd17e);
        EXPECT(gbc.pc(), 0x7e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0303
        gbc.setState(0xa2d6, 0x875a, 0xe550, 0x649e, 0x2ef6, 0xb4c0, 0x0, 0x1);
        gbc.writeMem(0xa2d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x875a);
        EXPECT(gbc.pc(), 0xa2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d6), 0xcb);
        EXPECT(gbc.readMem(0xa2d7), 0xc2);
        // CB C2 0304
        gbc.setState(0x5f65, 0xaa60, 0xbcc0, 0x31cc, 0xe62e, 0x16d1, 0x1, 0x0);
        gbc.writeMem(0x5f65, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0x5f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0305
        gbc.setState(0x6357, 0x1e68, 0x58a0, 0x8432, 0x853e, 0x103, 0x1, 0x1);
        gbc.writeMem(0x6357, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1e68);
        EXPECT(gbc.pc(), 0x6359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0306
        gbc.setState(0xb53b, 0x8f4, 0xbfa0, 0x932e, 0x72cf, 0x1608, 0x1, 0x0);
        gbc.writeMem(0xb53b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8f4);
        EXPECT(gbc.pc(), 0xb53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53b), 0xcb);
        EXPECT(gbc.readMem(0xb53c), 0xc2);
        // CB C2 0307
        gbc.setState(0xde6f, 0xddcb, 0xf3b0, 0xfb4e, 0xd08, 0x1395, 0x0, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xddcb);
        EXPECT(gbc.pc(), 0xde71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6f), 0xcb);
        EXPECT(gbc.readMem(0xde70), 0xc2);
        // CB C2 0308
        gbc.setState(0x324, 0xa50, 0x36e0, 0xc126, 0xa6f6, 0x61d4, 0x0, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa50);
        EXPECT(gbc.pc(), 0x326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0309
        gbc.setState(0x4a50, 0x4c2c, 0x5330, 0xe75d, 0xc939, 0x17bd, 0x1, 0x1);
        gbc.writeMem(0x4a50, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4c2c);
        EXPECT(gbc.pc(), 0x4a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 030A
        gbc.setState(0x7c99, 0xb707, 0x7760, 0xfe48, 0x947e, 0x2098, 0x0, 0x1);
        gbc.writeMem(0x7c99, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb707);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 030B
        gbc.setState(0x4bce, 0x291b, 0x72b0, 0xd29d, 0xb286, 0x2336, 0x1, 0x1);
        gbc.writeMem(0x4bce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0x4bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 030C
        gbc.setState(0x4ccf, 0x8a7c, 0xaa20, 0x1183, 0x5a61, 0xc431, 0x0, 0x0);
        gbc.writeMem(0x4ccf, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8a7c);
        EXPECT(gbc.pc(), 0x4cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 030D
        gbc.setState(0x50c9, 0xd617, 0xcc20, 0x2f5a, 0x2b8, 0xa103, 0x1, 0x1);
        gbc.writeMem(0x50c9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd617);
        EXPECT(gbc.pc(), 0x50cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 030E
        gbc.setState(0xa30c, 0xfc33, 0x1af0, 0x1f12, 0xf276, 0xcd0d, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfc33);
        EXPECT(gbc.pc(), 0xa30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa30c), 0xcb);
        EXPECT(gbc.readMem(0xa30d), 0xc2);
        // CB C2 030F
        gbc.setState(0x6417, 0x6b19, 0x81a0, 0x45e2, 0xb53a, 0x5832, 0x1, 0x1);
        gbc.writeMem(0x6417, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6b19);
        EXPECT(gbc.pc(), 0x6419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0310
        gbc.setState(0xc4d4, 0x7842, 0xc0f0, 0x275d, 0xca7, 0xe731, 0x0, 0x1);
        gbc.writeMem(0xc4d4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7842);
        EXPECT(gbc.pc(), 0xc4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d4), 0xcb);
        EXPECT(gbc.readMem(0xc4d5), 0xc2);
        // CB C2 0311
        gbc.setState(0xa44e, 0xf9d9, 0x930, 0x32e5, 0xf77a, 0x7a7c, 0x1, 0x0);
        gbc.writeMem(0xa44e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf9d9);
        EXPECT(gbc.pc(), 0xa450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44e), 0xcb);
        EXPECT(gbc.readMem(0xa44f), 0xc2);
        // CB C2 0312
        gbc.setState(0x66ad, 0x6375, 0xa350, 0xe6bc, 0x531e, 0x31af, 0x1, 0x1);
        gbc.writeMem(0x66ad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6375);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0313
        gbc.setState(0xcc70, 0xa70a, 0x2080, 0x8447, 0x9c3f, 0x2cbc, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa70a);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc70), 0xcb);
        EXPECT(gbc.readMem(0xcc71), 0xc2);
        // CB C2 0314
        gbc.setState(0x5e61, 0xc42a, 0xcf0, 0xcee6, 0xda8, 0xf53b, 0x1, 0x0);
        gbc.writeMem(0x5e61, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc42a);
        EXPECT(gbc.pc(), 0x5e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0315
        gbc.setState(0x5576, 0x2397, 0x5570, 0x3489, 0xecb5, 0xd444, 0x1, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2397);
        EXPECT(gbc.pc(), 0x5578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0316
        gbc.setState(0x66d2, 0x7a60, 0x7490, 0x5ed8, 0xb707, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0x66d2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7a60);
        EXPECT(gbc.pc(), 0x66d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0318
        gbc.setState(0x3117, 0xd2f6, 0xe350, 0x7b71, 0x882, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x3117, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd2f6);
        EXPECT(gbc.pc(), 0x3119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0319
        gbc.setState(0xd3fb, 0x4a3b, 0xd440, 0xdb42, 0xbd6d, 0xe244, 0x1, 0x1);
        gbc.writeMem(0xd3fb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4a3b);
        EXPECT(gbc.pc(), 0xd3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fb), 0xcb);
        EXPECT(gbc.readMem(0xd3fc), 0xc2);
        // CB C2 031A
        gbc.setState(0x96ed, 0x6909, 0xd9b0, 0xa5ac, 0x8dc4, 0x5c44, 0x0, 0x0);
        gbc.writeMem(0x96ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6909);
        EXPECT(gbc.pc(), 0x96ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ed), 0xcb);
        EXPECT(gbc.readMem(0x96ee), 0xc2);
        // CB C2 031B
        gbc.setState(0x34e, 0xeb3c, 0x9440, 0xe5ff, 0x72e3, 0x350a, 0x1, 0x1);
        gbc.writeMem(0x34e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeb3c);
        EXPECT(gbc.pc(), 0x350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 031C
        gbc.setState(0xa13b, 0xc6b1, 0x1290, 0x53ff, 0x7a1a, 0xf9, 0x0, 0x0);
        gbc.writeMem(0xa13b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc6b1);
        EXPECT(gbc.pc(), 0xa13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13b), 0xcb);
        EXPECT(gbc.readMem(0xa13c), 0xc2);
        // CB C2 031D
        gbc.setState(0x143, 0x1cf9, 0x9aa0, 0x7848, 0x8e86, 0x4f69, 0x1, 0x0);
        gbc.writeMem(0x143, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1cf9);
        EXPECT(gbc.pc(), 0x145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0320
        gbc.setState(0xe504, 0x5c60, 0x1590, 0xf48e, 0xdbf7, 0x8db4, 0x0, 0x1);
        gbc.writeMem(0xe504, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0xc2);
        // CB C2 0321
        gbc.setState(0xc348, 0x51aa, 0x7600, 0x7a95, 0x12ed, 0x3048, 0x1, 0x1);
        gbc.writeMem(0xc348, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x51aa);
        EXPECT(gbc.pc(), 0xc34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc348), 0xcb);
        EXPECT(gbc.readMem(0xc349), 0xc2);
        // CB C2 0322
        gbc.setState(0x35b2, 0xde5, 0x6630, 0x176a, 0x317c, 0x8656, 0x1, 0x1);
        gbc.writeMem(0x35b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xde5);
        EXPECT(gbc.pc(), 0x35b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0323
        gbc.setState(0x8432, 0x2aa6, 0x7fa0, 0xbe49, 0xe382, 0xdce1, 0x0, 0x1);
        gbc.writeMem(0x8432, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2aa6);
        EXPECT(gbc.pc(), 0x8434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8432), 0xcb);
        EXPECT(gbc.readMem(0x8433), 0xc2);
        // CB C2 0324
        gbc.setState(0xbd57, 0xcd70, 0x6a20, 0xd042, 0x1a45, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0xbd57, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcd70);
        EXPECT(gbc.pc(), 0xbd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd57), 0xcb);
        EXPECT(gbc.readMem(0xbd58), 0xc2);
        // CB C2 0325
        gbc.setState(0xc194, 0x2301, 0x52b0, 0x5798, 0x4470, 0xd729, 0x0, 0x0);
        gbc.writeMem(0xc194, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2301);
        EXPECT(gbc.pc(), 0xc196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc194), 0xcb);
        EXPECT(gbc.readMem(0xc195), 0xc2);
        // CB C2 0326
        gbc.setState(0x2bcb, 0x2abe, 0xc480, 0x636f, 0xe93b, 0xefb5, 0x1, 0x1);
        gbc.writeMem(0x2bcb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2abe);
        EXPECT(gbc.pc(), 0x2bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0327
        gbc.setState(0xed58, 0x96bf, 0x6d0, 0x83ce, 0x2d3a, 0x7ec3, 0x1, 0x1);
        gbc.writeMem(0xed58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x96bf);
        EXPECT(gbc.pc(), 0xed5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed58), 0xcb);
        EXPECT(gbc.readMem(0xed59), 0xc2);
        // CB C2 0328
        gbc.setState(0x475f, 0x108a, 0x2ab0, 0x2ba6, 0xe49b, 0x1b93, 0x1, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x108a);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0329
        gbc.setState(0xc24, 0x7e59, 0x5620, 0xc8e0, 0xd23, 0x3e9b, 0x1, 0x0);
        gbc.writeMem(0xc24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7e59);
        EXPECT(gbc.pc(), 0xc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 032A
        gbc.setState(0x3e95, 0xfa07, 0x6840, 0x5cf4, 0xe6a5, 0x4ec7, 0x0, 0x0);
        gbc.writeMem(0x3e95, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfa07);
        EXPECT(gbc.pc(), 0x3e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 032B
        gbc.setState(0x7824, 0x8ac8, 0x5a40, 0x46b3, 0xc978, 0x6c27, 0x1, 0x0);
        gbc.writeMem(0x7824, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8ac8);
        EXPECT(gbc.pc(), 0x7826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 032C
        gbc.setState(0x26e1, 0x4964, 0x3a70, 0xafe7, 0x65e0, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4964);
        EXPECT(gbc.pc(), 0x26e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 032D
        gbc.setState(0x19c, 0xfc0d, 0x65d0, 0x548d, 0x32b3, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x19c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfc0d);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 032E
        gbc.setState(0x46b6, 0x8e6e, 0x6880, 0x70c1, 0xf844, 0x649c, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8e6e);
        EXPECT(gbc.pc(), 0x46b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 032F
        gbc.setState(0x5a1d, 0xb82f, 0x6620, 0x6d28, 0x15e0, 0x596c, 0x1, 0x1);
        gbc.writeMem(0x5a1d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb82f);
        EXPECT(gbc.pc(), 0x5a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0330
        gbc.setState(0x92f5, 0x6c4b, 0x6af0, 0xa2b8, 0x8215, 0x37b7, 0x0, 0x1);
        gbc.writeMem(0x92f5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6c4b);
        EXPECT(gbc.pc(), 0x92f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f5), 0xcb);
        EXPECT(gbc.readMem(0x92f6), 0xc2);
        // CB C2 0331
        gbc.setState(0x9166, 0x2ce9, 0x6aa0, 0x2886, 0xc9f0, 0xa9e8, 0x1, 0x1);
        gbc.writeMem(0x9166, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2ce9);
        EXPECT(gbc.pc(), 0x9168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9166), 0xcb);
        EXPECT(gbc.readMem(0x9167), 0xc2);
        // CB C2 0332
        gbc.setState(0x1edd, 0xf74, 0xc7f0, 0x9919, 0x84, 0x993d, 0x1, 0x0);
        gbc.writeMem(0x1edd, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf74);
        EXPECT(gbc.pc(), 0x1edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0334
        gbc.setState(0xd48f, 0x1bc8, 0xdce0, 0x2231, 0x83bc, 0x44a0, 0x0, 0x0);
        gbc.writeMem(0xd48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1bc8);
        EXPECT(gbc.pc(), 0xd491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48f), 0xcb);
        EXPECT(gbc.readMem(0xd490), 0xc2);
        // CB C2 0335
        gbc.setState(0x581e, 0x387f, 0xc4c0, 0x497b, 0x5dbb, 0x18f7, 0x0, 0x0);
        gbc.writeMem(0x581e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x387f);
        EXPECT(gbc.pc(), 0x5820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0336
        gbc.setState(0xd2, 0x57a0, 0xfed0, 0xcf3c, 0x4595, 0xb949, 0x1, 0x1);
        gbc.writeMem(0xd2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x57a0);
        EXPECT(gbc.pc(), 0xd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0337
        gbc.setState(0x77ef, 0xaaff, 0x8f60, 0x5f65, 0x394f, 0x1477, 0x1, 0x0);
        gbc.writeMem(0x77ef, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaaff);
        EXPECT(gbc.pc(), 0x77f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0338
        gbc.setState(0x84ea, 0xc26d, 0x7d0, 0x8caf, 0x2ba2, 0xd938, 0x0, 0x0);
        gbc.writeMem(0x84ea, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0x84ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ea), 0xcb);
        EXPECT(gbc.readMem(0x84eb), 0xc2);
        // CB C2 0339
        gbc.setState(0x2d9d, 0xf6ab, 0xc4c0, 0x4f82, 0xd851, 0xafca, 0x1, 0x0);
        gbc.writeMem(0x2d9d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf6ab);
        EXPECT(gbc.pc(), 0x2d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 033A
        gbc.setState(0xdf63, 0xf635, 0x10d0, 0x7b92, 0x9c6a, 0xbfee, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf635);
        EXPECT(gbc.pc(), 0xdf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf63), 0xcb);
        EXPECT(gbc.readMem(0xdf64), 0xc2);
        // CB C2 033B
        gbc.setState(0x1b83, 0x4a57, 0x40e0, 0x8477, 0xe74, 0x6a6f, 0x1, 0x0);
        gbc.writeMem(0x1b83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0x1b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 033C
        gbc.setState(0x62e1, 0x9bc9, 0x2210, 0x447f, 0xc2ca, 0x314f, 0x0, 0x0);
        gbc.writeMem(0x62e1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9bc9);
        EXPECT(gbc.pc(), 0x62e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 033D
        gbc.setState(0x9213, 0xc404, 0x99a0, 0xa083, 0x1431, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc404);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9213), 0xcb);
        EXPECT(gbc.readMem(0x9214), 0xc2);
        // CB C2 033E
        gbc.setState(0x4203, 0x1cdf, 0x72b0, 0x8256, 0x3d2b, 0x12dd, 0x0, 0x0);
        gbc.writeMem(0x4203, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1cdf);
        EXPECT(gbc.pc(), 0x4205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 033F
        gbc.setState(0xa821, 0x3cf0, 0xe880, 0x5faa, 0xd8f, 0xc8f8, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3cf0);
        EXPECT(gbc.pc(), 0xa823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa821), 0xcb);
        EXPECT(gbc.readMem(0xa822), 0xc2);
        // CB C2 0340
        gbc.setState(0x883b, 0x73de, 0xd6c0, 0x1ded, 0x67d2, 0x2c34, 0x1, 0x0);
        gbc.writeMem(0x883b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x73de);
        EXPECT(gbc.pc(), 0x883d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883b), 0xcb);
        EXPECT(gbc.readMem(0x883c), 0xc2);
        // CB C2 0341
        gbc.setState(0x41fa, 0x3191, 0x17c0, 0x8a68, 0xfeef, 0x710f, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3191);
        EXPECT(gbc.pc(), 0x41fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0342
        gbc.setState(0xc2f9, 0x623e, 0x8660, 0x3573, 0x76cc, 0xf988, 0x1, 0x0);
        gbc.writeMem(0xc2f9, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0xc2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f9), 0xcb);
        EXPECT(gbc.readMem(0xc2fa), 0xc2);
        // CB C2 0343
        gbc.setState(0xce22, 0x6a12, 0x9100, 0x7911, 0x2040, 0x85ac, 0x1, 0x1);
        gbc.writeMem(0xce22, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6a12);
        EXPECT(gbc.pc(), 0xce24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce22), 0xcb);
        EXPECT(gbc.readMem(0xce23), 0xc2);
        // CB C2 0344
        gbc.setState(0x57eb, 0xf9f6, 0x6a40, 0x75bb, 0x496f, 0xb625, 0x0, 0x1);
        gbc.writeMem(0x57eb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf9f6);
        EXPECT(gbc.pc(), 0x57ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0345
        gbc.setState(0x34ab, 0x11e5, 0xfba0, 0x18df, 0x6c12, 0xd078, 0x1, 0x0);
        gbc.writeMem(0x34ab, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x11e5);
        EXPECT(gbc.pc(), 0x34ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0346
        gbc.setState(0x2d7c, 0x5c7c, 0x1b50, 0x4483, 0x47fb, 0xcf04, 0x1, 0x0);
        gbc.writeMem(0x2d7c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0x2d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0347
        gbc.setState(0x4fc1, 0x8f19, 0x1c90, 0x96fb, 0x5e7d, 0x8134, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f19);
        EXPECT(gbc.pc(), 0x4fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0348
        gbc.setState(0xafad, 0x62aa, 0xb420, 0xb640, 0x55a6, 0x6c69, 0x1, 0x1);
        gbc.writeMem(0xafad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x62aa);
        EXPECT(gbc.pc(), 0xafaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafad), 0xcb);
        EXPECT(gbc.readMem(0xafae), 0xc2);
        // CB C2 0349
        gbc.setState(0x8eba, 0x4d81, 0x5510, 0xc242, 0xe93, 0x5249, 0x1, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4d81);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0xc2);
        // CB C2 034A
        gbc.setState(0x2233, 0x4bea, 0x4bf0, 0x1c2f, 0x5aee, 0xb488, 0x0, 0x1);
        gbc.writeMem(0x2233, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x2235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 034B
        gbc.setState(0xc8f1, 0xf400, 0xb560, 0x659a, 0xd322, 0x4fd1, 0x1, 0x0);
        gbc.writeMem(0xc8f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0xc8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f1), 0xcb);
        EXPECT(gbc.readMem(0xc8f2), 0xc2);
        // CB C2 034C
        gbc.setState(0x6932, 0x4d03, 0x85b0, 0x8e42, 0x90be, 0x375a, 0x1, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x6934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 034D
        gbc.setState(0x98c1, 0x3736, 0x4180, 0x574a, 0x22af, 0x3667, 0x1, 0x1);
        gbc.writeMem(0x98c1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3736);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0xc2);
        // CB C2 034E
        gbc.setState(0xc1f4, 0xe2ee, 0x43c0, 0x8b14, 0x1831, 0xcb1c, 0x1, 0x0);
        gbc.writeMem(0xc1f4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe2ee);
        EXPECT(gbc.pc(), 0xc1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f4), 0xcb);
        EXPECT(gbc.readMem(0xc1f5), 0xc2);
        // CB C2 034F
        gbc.setState(0x7a72, 0xe7ff, 0xab90, 0xe838, 0x791e, 0xa44d, 0x0, 0x1);
        gbc.writeMem(0x7a72, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0350
        gbc.setState(0xe59c, 0xbae, 0xe0a0, 0xa60a, 0x4fa, 0x8bf4, 0x1, 0x0);
        gbc.writeMem(0xe59c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbae);
        EXPECT(gbc.pc(), 0xe59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59c), 0xcb);
        EXPECT(gbc.readMem(0xe59d), 0xc2);
        // CB C2 0351
        gbc.setState(0x47bb, 0xfc36, 0xe150, 0xb675, 0xc80b, 0x7bf9, 0x0, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfc36);
        EXPECT(gbc.pc(), 0x47bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0352
        gbc.setState(0xd534, 0x298, 0xe630, 0xe8ac, 0xf38f, 0xa729, 0x0, 0x1);
        gbc.writeMem(0xd534, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x298);
        EXPECT(gbc.pc(), 0xd536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd534), 0xcb);
        EXPECT(gbc.readMem(0xd535), 0xc2);
        // CB C2 0353
        gbc.setState(0x27c4, 0xfc8a, 0x10, 0xbd85, 0x18, 0x411d, 0x1, 0x0);
        gbc.writeMem(0x27c4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfc8a);
        EXPECT(gbc.pc(), 0x27c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0354
        gbc.setState(0x951c, 0x2990, 0xe50, 0xdd59, 0xd57a, 0x422f, 0x0, 0x1);
        gbc.writeMem(0x951c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2990);
        EXPECT(gbc.pc(), 0x951e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951c), 0xcb);
        EXPECT(gbc.readMem(0x951d), 0xc2);
        // CB C2 0355
        gbc.setState(0x63cb, 0xd8d1, 0x3b30, 0x9da0, 0x5b38, 0xaff0, 0x1, 0x0);
        gbc.writeMem(0x63cb, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd8d1);
        EXPECT(gbc.pc(), 0x63cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0357
        gbc.setState(0xcc48, 0x1c4a, 0xd920, 0x57da, 0xfb4c, 0x951d, 0x1, 0x1);
        gbc.writeMem(0xcc48, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1c4a);
        EXPECT(gbc.pc(), 0xcc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc48), 0xcb);
        EXPECT(gbc.readMem(0xcc49), 0xc2);
        // CB C2 0358
        gbc.setState(0x4a7, 0x89fa, 0x35c0, 0x9fcc, 0xdbfb, 0x8aab, 0x0, 0x1);
        gbc.writeMem(0x4a7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x89fa);
        EXPECT(gbc.pc(), 0x4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0359
        gbc.setState(0x1a26, 0x17c0, 0x4a0, 0xfd72, 0x1da7, 0x2c6e, 0x1, 0x1);
        gbc.writeMem(0x1a26, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x17c0);
        EXPECT(gbc.pc(), 0x1a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 035A
        gbc.setState(0x3a83, 0x5ffd, 0x5ca0, 0x6a6c, 0xffc7, 0xa654, 0x1, 0x0);
        gbc.writeMem(0x3a83, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5ffd);
        EXPECT(gbc.pc(), 0x3a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 035B
        gbc.setState(0x664e, 0x6b9a, 0x3030, 0xebad, 0xe87f, 0x20c9, 0x1, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6b9a);
        EXPECT(gbc.pc(), 0x6650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 035C
        gbc.setState(0x1d55, 0x5155, 0x7070, 0x222e, 0x7b9e, 0xfdc1, 0x0, 0x0);
        gbc.writeMem(0x1d55, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5155);
        EXPECT(gbc.pc(), 0x1d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 035D
        gbc.setState(0x49f1, 0x8332, 0xd4a0, 0xb3e0, 0xd97a, 0xcce0, 0x1, 0x0);
        gbc.writeMem(0x49f1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8332);
        EXPECT(gbc.pc(), 0x49f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 035F
        gbc.setState(0xeda, 0xacab, 0xe30, 0xcc13, 0x218f, 0x7d16, 0x0, 0x0);
        gbc.writeMem(0xeda, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xacab);
        EXPECT(gbc.pc(), 0xedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0360
        gbc.setState(0xcc3e, 0xdc87, 0x6dd0, 0xaf91, 0x7895, 0xc801, 0x1, 0x1);
        gbc.writeMem(0xcc3e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdc87);
        EXPECT(gbc.pc(), 0xcc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc3e), 0xcb);
        EXPECT(gbc.readMem(0xcc3f), 0xc2);
        // CB C2 0361
        gbc.setState(0xda5a, 0x9af5, 0x8100, 0xba58, 0xe8a8, 0x1c24, 0x1, 0x1);
        gbc.writeMem(0xda5a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9af5);
        EXPECT(gbc.pc(), 0xda5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5a), 0xcb);
        EXPECT(gbc.readMem(0xda5b), 0xc2);
        // CB C2 0362
        gbc.setState(0x7a32, 0x4601, 0x2ae0, 0x77f8, 0x4f86, 0x5a77, 0x1, 0x1);
        gbc.writeMem(0x7a32, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4601);
        EXPECT(gbc.pc(), 0x7a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0363
        gbc.setState(0x617c, 0x40b7, 0x770, 0x2c6c, 0x365, 0x8680, 0x0, 0x1);
        gbc.writeMem(0x617c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x40b7);
        EXPECT(gbc.pc(), 0x617e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0364
        gbc.setState(0xea10, 0x18cc, 0xe320, 0x8c45, 0x8f98, 0xf040, 0x1, 0x0);
        gbc.writeMem(0xea10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x18cc);
        EXPECT(gbc.pc(), 0xea12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea10), 0xcb);
        EXPECT(gbc.readMem(0xea11), 0xc2);
        // CB C2 0365
        gbc.setState(0x7c40, 0x5598, 0xa700, 0xf623, 0x253f, 0xdd7, 0x1, 0x0);
        gbc.writeMem(0x7c40, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5598);
        EXPECT(gbc.pc(), 0x7c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0366
        gbc.setState(0x3c84, 0x18fc, 0x6250, 0x5441, 0x7bc, 0x76a2, 0x1, 0x1);
        gbc.writeMem(0x3c84, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x18fc);
        EXPECT(gbc.pc(), 0x3c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0367
        gbc.setState(0xcf6e, 0xb750, 0x4130, 0x2bb, 0xb664, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0xcf6e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb750);
        EXPECT(gbc.pc(), 0xcf70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6e), 0xcb);
        EXPECT(gbc.readMem(0xcf6f), 0xc2);
        // CB C2 0369
        gbc.setState(0xa319, 0x94c0, 0x98f0, 0x45bb, 0xa443, 0x6fd5, 0x1, 0x1);
        gbc.writeMem(0xa319, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x94c0);
        EXPECT(gbc.pc(), 0xa31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa319), 0xcb);
        EXPECT(gbc.readMem(0xa31a), 0xc2);
        // CB C2 036A
        gbc.setState(0xcd23, 0x43be, 0xbb10, 0x1df3, 0xb747, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0xcd23, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x43be);
        EXPECT(gbc.pc(), 0xcd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd23), 0xcb);
        EXPECT(gbc.readMem(0xcd24), 0xc2);
        // CB C2 036B
        gbc.setState(0xba18, 0xbe6, 0x760, 0x94b0, 0xf8a9, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xba18, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbe6);
        EXPECT(gbc.pc(), 0xba1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba18), 0xcb);
        EXPECT(gbc.readMem(0xba19), 0xc2);
        // CB C2 036C
        gbc.setState(0x15d2, 0x625c, 0xce60, 0xbbf6, 0x4d01, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0x15d2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x625c);
        EXPECT(gbc.pc(), 0x15d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 036D
        gbc.setState(0xc263, 0x7b63, 0x8fb0, 0x129e, 0xfe5e, 0x2306, 0x1, 0x1);
        gbc.writeMem(0xc263, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7b63);
        EXPECT(gbc.pc(), 0xc265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc263), 0xcb);
        EXPECT(gbc.readMem(0xc264), 0xc2);
        // CB C2 036E
        gbc.setState(0xdbe, 0xb230, 0xab20, 0x37e6, 0xff77, 0xb0bd, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb230);
        EXPECT(gbc.pc(), 0xdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 036F
        gbc.setState(0x6cd8, 0x40e6, 0x76b0, 0x4c07, 0x25dc, 0x9eac, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x40e6);
        EXPECT(gbc.pc(), 0x6cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0370
        gbc.setState(0xb6dc, 0x778e, 0x81d0, 0xe30e, 0x4dad, 0x8872, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x778e);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0xc2);
        // CB C2 0371
        gbc.setState(0xac01, 0xd704, 0xd480, 0x827f, 0x883b, 0xfa03, 0x1, 0x1);
        gbc.writeMem(0xac01, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd704);
        EXPECT(gbc.pc(), 0xac03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac01), 0xcb);
        EXPECT(gbc.readMem(0xac02), 0xc2);
        // CB C2 0372
        gbc.setState(0x272a, 0x31ce, 0xd070, 0xdde2, 0x2ef4, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x272a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x31ce);
        EXPECT(gbc.pc(), 0x272c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0373
        gbc.setState(0x1ed5, 0xff12, 0xc620, 0x188e, 0xb527, 0xb539, 0x1, 0x0);
        gbc.writeMem(0x1ed5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0374
        gbc.setState(0x255c, 0x2062, 0xe510, 0xa3c8, 0x93cc, 0xd48, 0x0, 0x0);
        gbc.writeMem(0x255c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2062);
        EXPECT(gbc.pc(), 0x255e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0375
        gbc.setState(0xe6d3, 0x7039, 0x8cc0, 0x70f4, 0xe2cc, 0x91b6, 0x0, 0x0);
        gbc.writeMem(0xe6d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7039);
        EXPECT(gbc.pc(), 0xe6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d3), 0xcb);
        EXPECT(gbc.readMem(0xe6d4), 0xc2);
        // CB C2 0376
        gbc.setState(0x4038, 0x4a9e, 0x8fb0, 0xa63c, 0x879d, 0x8df7, 0x1, 0x1);
        gbc.writeMem(0x4038, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4a9e);
        EXPECT(gbc.pc(), 0x403a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0377
        gbc.setState(0xe9ca, 0x2d57, 0xcb80, 0x24c, 0x1af8, 0x9136, 0x0, 0x0);
        gbc.writeMem(0xe9ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2d57);
        EXPECT(gbc.pc(), 0xe9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ca), 0xcb);
        EXPECT(gbc.readMem(0xe9cb), 0xc2);
        // CB C2 0378
        gbc.setState(0xa14c, 0xfa4a, 0xa2b0, 0xc455, 0xcc53, 0x51ae, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfa4a);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0xc2);
        // CB C2 0379
        gbc.setState(0xe2a1, 0x6197, 0x51b0, 0x5b0, 0x284f, 0x3a04, 0x0, 0x0);
        gbc.writeMem(0xe2a1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6197);
        EXPECT(gbc.pc(), 0xe2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a1), 0xcb);
        EXPECT(gbc.readMem(0xe2a2), 0xc2);
        // CB C2 037A
        gbc.setState(0xeb90, 0x2598, 0x3ab0, 0x1ed, 0x9743, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0xeb90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2598);
        EXPECT(gbc.pc(), 0xeb92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb90), 0xcb);
        EXPECT(gbc.readMem(0xeb91), 0xc2);
        // CB C2 037B
        gbc.setState(0x607e, 0x464e, 0x7da0, 0x8157, 0xa9e0, 0xfd9b, 0x1, 0x0);
        gbc.writeMem(0x607e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x464e);
        EXPECT(gbc.pc(), 0x6080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 037C
        gbc.setState(0x2482, 0x4bda, 0x3f10, 0x4738, 0x8174, 0x45e8, 0x1, 0x0);
        gbc.writeMem(0x2482, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4bda);
        EXPECT(gbc.pc(), 0x2484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 037D
        gbc.setState(0x1791, 0xcbf4, 0x49c0, 0x7e2, 0xd479, 0x87b6, 0x0, 0x0);
        gbc.writeMem(0x1791, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcbf4);
        EXPECT(gbc.pc(), 0x1793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 037E
        gbc.setState(0x4e9a, 0xe8f7, 0x4400, 0x7484, 0x3131, 0x89e1, 0x1, 0x0);
        gbc.writeMem(0x4e9a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe8f7);
        EXPECT(gbc.pc(), 0x4e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 037F
        gbc.setState(0x95b6, 0xa1ee, 0x1e90, 0x5467, 0x9488, 0x58e7, 0x1, 0x1);
        gbc.writeMem(0x95b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa1ee);
        EXPECT(gbc.pc(), 0x95b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b6), 0xcb);
        EXPECT(gbc.readMem(0x95b7), 0xc2);
        // CB C2 0380
        gbc.setState(0xc620, 0xaac3, 0xcc20, 0x82a5, 0xf3de, 0xfc99, 0x1, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xaac3);
        EXPECT(gbc.pc(), 0xc622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc620), 0xcb);
        EXPECT(gbc.readMem(0xc621), 0xc2);
        // CB C2 0381
        gbc.setState(0x74ed, 0xc470, 0x15d0, 0x199f, 0x7ea0, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0x74ed, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc470);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 0382
        gbc.setState(0xe5c0, 0x3ac, 0xa0a0, 0xf444, 0xaf3c, 0x965c, 0x0, 0x0);
        gbc.writeMem(0xe5c0, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3ac);
        EXPECT(gbc.pc(), 0xe5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c0), 0xcb);
        EXPECT(gbc.readMem(0xe5c1), 0xc2);
        // CB C2 0383
        gbc.setState(0x54de, 0xed6c, 0xe960, 0xe0c, 0xb0ac, 0x61b6, 0x0, 0x1);
        gbc.writeMem(0x54de, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xed6c);
        EXPECT(gbc.pc(), 0x54e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0384
        gbc.setState(0x8b16, 0xd6f1, 0x2b00, 0xb4ee, 0xc4c3, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x8b16, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd6f1);
        EXPECT(gbc.pc(), 0x8b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b16), 0xcb);
        EXPECT(gbc.readMem(0x8b17), 0xc2);
        // CB C2 0385
        gbc.setState(0xe13a, 0x1bb8, 0xb5b0, 0xadf7, 0x3e3, 0xec2c, 0x0, 0x1);
        gbc.writeMem(0xe13a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1bb8);
        EXPECT(gbc.pc(), 0xe13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13a), 0xcb);
        EXPECT(gbc.readMem(0xe13b), 0xc2);
        // CB C2 0386
        gbc.setState(0x64c, 0x5f9, 0xa340, 0xc443, 0x7f07, 0xd2eb, 0x1, 0x0);
        gbc.writeMem(0x64c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5f9);
        EXPECT(gbc.pc(), 0x64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0387
        gbc.setState(0x78d1, 0x2786, 0xc5e0, 0x47a8, 0x4b4c, 0xb2bc, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2786);
        EXPECT(gbc.pc(), 0x78d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0388
        gbc.setState(0xb60e, 0x895a, 0x6d70, 0x3598, 0xecac, 0xb35a, 0x0, 0x1);
        gbc.writeMem(0xb60e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x895a);
        EXPECT(gbc.pc(), 0xb610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60e), 0xcb);
        EXPECT(gbc.readMem(0xb60f), 0xc2);
        // CB C2 0389
        gbc.setState(0xe3bc, 0x8fa3, 0x2d10, 0x5473, 0x5a7, 0x4397, 0x0, 0x1);
        gbc.writeMem(0xe3bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8fa3);
        EXPECT(gbc.pc(), 0xe3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bc), 0xcb);
        EXPECT(gbc.readMem(0xe3bd), 0xc2);
        // CB C2 038A
        gbc.setState(0xd60f, 0x48fa, 0xdd90, 0xd8b7, 0x5576, 0xe847, 0x1, 0x0);
        gbc.writeMem(0xd60f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x48fa);
        EXPECT(gbc.pc(), 0xd611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60f), 0xcb);
        EXPECT(gbc.readMem(0xd610), 0xc2);
        // CB C2 038B
        gbc.setState(0x13ce, 0x5175, 0xb290, 0x2c43, 0xe19a, 0x3e3e, 0x0, 0x0);
        gbc.writeMem(0x13ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5175);
        EXPECT(gbc.pc(), 0x13d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 038C
        gbc.setState(0xce14, 0x195f, 0xb9f0, 0x42c9, 0xd4ac, 0x46f0, 0x1, 0x0);
        gbc.writeMem(0xce14, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x195f);
        EXPECT(gbc.pc(), 0xce16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce14), 0xcb);
        EXPECT(gbc.readMem(0xce15), 0xc2);
        // CB C2 038D
        gbc.setState(0x3c4d, 0xe54, 0xa0a0, 0x27a3, 0x5a37, 0x3d34, 0x0, 0x0);
        gbc.writeMem(0x3c4d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0x3c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 038E
        gbc.setState(0xce0e, 0x134, 0x7c80, 0x6a4, 0x5392, 0xcbe6, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x134);
        EXPECT(gbc.pc(), 0xce10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0e), 0xcb);
        EXPECT(gbc.readMem(0xce0f), 0xc2);
        // CB C2 038F
        gbc.setState(0xa485, 0xb129, 0xc020, 0x3c2f, 0xbb20, 0xb7a6, 0x0, 0x1);
        gbc.writeMem(0xa485, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0xa487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa485), 0xcb);
        EXPECT(gbc.readMem(0xa486), 0xc2);
        // CB C2 0390
        gbc.setState(0x5a3f, 0xb9bf, 0xe4e0, 0x4283, 0xd925, 0x10f1, 0x0, 0x1);
        gbc.writeMem(0x5a3f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb9bf);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 0391
        gbc.setState(0xada5, 0x7cd7, 0x7920, 0x196c, 0x6184, 0xcf0, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7cd7);
        EXPECT(gbc.pc(), 0xada7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada5), 0xcb);
        EXPECT(gbc.readMem(0xada6), 0xc2);
        // CB C2 0392
        gbc.setState(0xcae8, 0x65cb, 0x36f0, 0x72e6, 0x8f4c, 0xa144, 0x0, 0x1);
        gbc.writeMem(0xcae8, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x65cb);
        EXPECT(gbc.pc(), 0xcaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae8), 0xcb);
        EXPECT(gbc.readMem(0xcae9), 0xc2);
        // CB C2 0393
        gbc.setState(0xbaa7, 0x8efe, 0x66d0, 0xcf49, 0xcba3, 0x4137, 0x0, 0x1);
        gbc.writeMem(0xbaa7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0xbaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa7), 0xcb);
        EXPECT(gbc.readMem(0xbaa8), 0xc2);
        // CB C2 0394
        gbc.setState(0x8a56, 0x53c8, 0x3b90, 0x3273, 0x445b, 0xf8eb, 0x0, 0x1);
        gbc.writeMem(0x8a56, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x53c8);
        EXPECT(gbc.pc(), 0x8a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a56), 0xcb);
        EXPECT(gbc.readMem(0x8a57), 0xc2);
        // CB C2 0395
        gbc.setState(0xa5f2, 0xa8a7, 0x3850, 0x21b1, 0x703e, 0xcf7c, 0x0, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa8a7);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f2), 0xcb);
        EXPECT(gbc.readMem(0xa5f3), 0xc2);
        // CB C2 0396
        gbc.setState(0x99da, 0x400b, 0xeb20, 0xe91d, 0xd80d, 0xdd28, 0x1, 0x0);
        gbc.writeMem(0x99da, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x400b);
        EXPECT(gbc.pc(), 0x99dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99da), 0xcb);
        EXPECT(gbc.readMem(0x99db), 0xc2);
        // CB C2 0397
        gbc.setState(0xedd7, 0xec52, 0x9830, 0x12fb, 0x42af, 0x4a4a, 0x0, 0x1);
        gbc.writeMem(0xedd7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xec52);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd7), 0xcb);
        EXPECT(gbc.readMem(0xedd8), 0xc2);
        // CB C2 0398
        gbc.setState(0x9137, 0x98c5, 0xddd0, 0xe751, 0x977, 0xbd81, 0x1, 0x0);
        gbc.writeMem(0x9137, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x98c5);
        EXPECT(gbc.pc(), 0x9139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9137), 0xcb);
        EXPECT(gbc.readMem(0x9138), 0xc2);
        // CB C2 0399
        gbc.setState(0x1e5d, 0xd2a1, 0x18b0, 0xae92, 0x67b1, 0xe45a, 0x0, 0x0);
        gbc.writeMem(0x1e5d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd2a1);
        EXPECT(gbc.pc(), 0x1e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 039A
        gbc.setState(0xa087, 0x5d95, 0x1af0, 0x9193, 0x437f, 0xf1e5, 0x0, 0x0);
        gbc.writeMem(0xa087, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0xa089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa087), 0xcb);
        EXPECT(gbc.readMem(0xa088), 0xc2);
        // CB C2 039B
        gbc.setState(0x289f, 0x8f40, 0xf770, 0x403b, 0x162a, 0xca3f, 0x1, 0x0);
        gbc.writeMem(0x289f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8f40);
        EXPECT(gbc.pc(), 0x28a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 039C
        gbc.setState(0x2dc4, 0x64da, 0xe8b0, 0x4ea4, 0x5135, 0x39da, 0x1, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x64da);
        EXPECT(gbc.pc(), 0x2dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 039D
        gbc.setState(0x2407, 0x59bf, 0xc90, 0x7a5d, 0xaa5b, 0xbd5a, 0x0, 0x1);
        gbc.writeMem(0x2407, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x59bf);
        EXPECT(gbc.pc(), 0x2409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 039E
        gbc.setState(0xd542, 0x87cd, 0xa0e0, 0x90ee, 0x6af2, 0x1c42, 0x0, 0x0);
        gbc.writeMem(0xd542, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0xd544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd542), 0xcb);
        EXPECT(gbc.readMem(0xd543), 0xc2);
        // CB C2 039F
        gbc.setState(0xbb8d, 0xb168, 0x4bb0, 0x543b, 0x66a6, 0xfcd6, 0x1, 0x0);
        gbc.writeMem(0xbb8d, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb168);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8d), 0xcb);
        EXPECT(gbc.readMem(0xbb8e), 0xc2);
        // CB C2 03A0
        gbc.setState(0x1925, 0x78d, 0x7430, 0xf65e, 0x51d0, 0x87ec, 0x0, 0x1);
        gbc.writeMem(0x1925, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x78d);
        EXPECT(gbc.pc(), 0x1927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03A1
        gbc.setState(0x506, 0x583e, 0x30a0, 0xaad0, 0x4d3b, 0x6394, 0x0, 0x1);
        gbc.writeMem(0x506, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x583e);
        EXPECT(gbc.pc(), 0x508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03A2
        gbc.setState(0x502b, 0xc019, 0x5c90, 0x504b, 0xfd2a, 0xe5b2, 0x0, 0x0);
        gbc.writeMem(0x502b, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc019);
        EXPECT(gbc.pc(), 0x502d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03A3
        gbc.setState(0x48f, 0x28d6, 0x35b0, 0xc5c5, 0x889d, 0xb05a, 0x0, 0x0);
        gbc.writeMem(0x48f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x28d6);
        EXPECT(gbc.pc(), 0x491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03A5
        gbc.setState(0x4b9f, 0x6c24, 0x6370, 0x82d, 0xaa50, 0x619d, 0x0, 0x1);
        gbc.writeMem(0x4b9f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6c24);
        EXPECT(gbc.pc(), 0x4ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03A6
        gbc.setState(0x9303, 0xc70b, 0xc9e0, 0x953d, 0xd484, 0x395b, 0x0, 0x0);
        gbc.writeMem(0x9303, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc70b);
        EXPECT(gbc.pc(), 0x9305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9303), 0xcb);
        EXPECT(gbc.readMem(0x9304), 0xc2);
        // CB C2 03A7
        gbc.setState(0xf5e, 0xe3de, 0x9ef0, 0x3fcb, 0xa71b, 0x3156, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe3de);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03A8
        gbc.setState(0x85ce, 0x9b0, 0xda0, 0x284d, 0x975a, 0x24f3, 0x0, 0x1);
        gbc.writeMem(0x85ce, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9b0);
        EXPECT(gbc.pc(), 0x85d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ce), 0xcb);
        EXPECT(gbc.readMem(0x85cf), 0xc2);
        // CB C2 03A9
        gbc.setState(0x1918, 0x7132, 0x2c40, 0xf2be, 0xae06, 0xf335, 0x0, 0x1);
        gbc.writeMem(0x1918, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7132);
        EXPECT(gbc.pc(), 0x191a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03AA
        gbc.setState(0xa4b6, 0x3821, 0x0, 0xd2e1, 0x416b, 0x1aef, 0x0, 0x0);
        gbc.writeMem(0xa4b6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3821);
        EXPECT(gbc.pc(), 0xa4b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b6), 0xcb);
        EXPECT(gbc.readMem(0xa4b7), 0xc2);
        // CB C2 03AB
        gbc.setState(0x9dc4, 0xe366, 0x4250, 0x48fb, 0x9a0e, 0x1830, 0x0, 0x0);
        gbc.writeMem(0x9dc4, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe366);
        EXPECT(gbc.pc(), 0x9dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc4), 0xcb);
        EXPECT(gbc.readMem(0x9dc5), 0xc2);
        // CB C2 03AC
        gbc.setState(0x2cb6, 0xdf16, 0x69a0, 0x7a0d, 0x7e0, 0x5ed1, 0x1, 0x1);
        gbc.writeMem(0x2cb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdf16);
        EXPECT(gbc.pc(), 0x2cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03AD
        gbc.setState(0xd421, 0x41d8, 0x14c0, 0xa937, 0x145, 0x57ac, 0x1, 0x1);
        gbc.writeMem(0xd421, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x41d8);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd421), 0xcb);
        EXPECT(gbc.readMem(0xd422), 0xc2);
        // CB C2 03AE
        gbc.setState(0xd498, 0x152b, 0xf50, 0xff67, 0xbbe1, 0x36b9, 0x0, 0x0);
        gbc.writeMem(0xd498, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x152b);
        EXPECT(gbc.pc(), 0xd49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd498), 0xcb);
        EXPECT(gbc.readMem(0xd499), 0xc2);
        // CB C2 03AF
        gbc.setState(0x5e7a, 0x24ad, 0xc1b0, 0x9dd0, 0xd1a8, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x5e7a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x24ad);
        EXPECT(gbc.pc(), 0x5e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03B0
        gbc.setState(0xb823, 0x9a58, 0x9980, 0x586c, 0xfc0b, 0x1937, 0x1, 0x1);
        gbc.writeMem(0xb823, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9a58);
        EXPECT(gbc.pc(), 0xb825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0xcb);
        EXPECT(gbc.readMem(0xb824), 0xc2);
        // CB C2 03B1
        gbc.setState(0x4f10, 0xbee, 0x6050, 0x4e63, 0xfdb4, 0x8ce0, 0x0, 0x1);
        gbc.writeMem(0x4f10, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbee);
        EXPECT(gbc.pc(), 0x4f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03B2
        gbc.setState(0xc482, 0x62a4, 0x5b30, 0xd618, 0x1ff9, 0x2558, 0x1, 0x0);
        gbc.writeMem(0xc482, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x62a4);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0xc2);
        // CB C2 03B3
        gbc.setState(0xd05c, 0x917f, 0xcf50, 0x3654, 0xd28e, 0xb1d6, 0x0, 0x1);
        gbc.writeMem(0xd05c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x917f);
        EXPECT(gbc.pc(), 0xd05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05c), 0xcb);
        EXPECT(gbc.readMem(0xd05d), 0xc2);
        // CB C2 03B4
        gbc.setState(0xa738, 0x6fe5, 0xe860, 0x52f2, 0x5d29, 0xcb22, 0x0, 0x0);
        gbc.writeMem(0xa738, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6fe5);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa738), 0xcb);
        EXPECT(gbc.readMem(0xa739), 0xc2);
        // CB C2 03B5
        gbc.setState(0x421e, 0x1817, 0xcd0, 0xf734, 0xae0d, 0x7ee8, 0x1, 0x1);
        gbc.writeMem(0x421e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1817);
        EXPECT(gbc.pc(), 0x4220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03B6
        gbc.setState(0xe1a, 0xdbd5, 0xf0a0, 0x89ef, 0x4729, 0xba0b, 0x1, 0x0);
        gbc.writeMem(0xe1a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdbd5);
        EXPECT(gbc.pc(), 0xe1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03B7
        gbc.setState(0x937, 0xa30a, 0xec50, 0x164d, 0xd789, 0x8577, 0x1, 0x0);
        gbc.writeMem(0x937, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa30a);
        EXPECT(gbc.pc(), 0x939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03B8
        gbc.setState(0x51f7, 0x8690, 0x74d0, 0x4d3c, 0xb45a, 0x5030, 0x1, 0x0);
        gbc.writeMem(0x51f7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8690);
        EXPECT(gbc.pc(), 0x51f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03B9
        gbc.setState(0x96ca, 0x3801, 0x43d0, 0x35d7, 0xf659, 0x908b, 0x1, 0x1);
        gbc.writeMem(0x96ca, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3801);
        EXPECT(gbc.pc(), 0x96cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ca), 0xcb);
        EXPECT(gbc.readMem(0x96cb), 0xc2);
        // CB C2 03BA
        gbc.setState(0x7798, 0x7294, 0x7e10, 0xdc6a, 0x3b3c, 0x71ea, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7294);
        EXPECT(gbc.pc(), 0x779a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03BB
        gbc.setState(0xa883, 0xdaa8, 0x4270, 0x442d, 0xb7a1, 0xb1e2, 0x0, 0x0);
        gbc.writeMem(0xa883, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdaa8);
        EXPECT(gbc.pc(), 0xa885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa883), 0xcb);
        EXPECT(gbc.readMem(0xa884), 0xc2);
        // CB C2 03BC
        gbc.setState(0x8fad, 0xe61, 0xdf80, 0x85ea, 0x65eb, 0x6f7f, 0x0, 0x1);
        gbc.writeMem(0x8fad, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe61);
        EXPECT(gbc.pc(), 0x8faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fad), 0xcb);
        EXPECT(gbc.readMem(0x8fae), 0xc2);
        // CB C2 03BD
        gbc.setState(0x4f0e, 0xedba, 0xe8b0, 0x9d0e, 0x88df, 0x28c9, 0x0, 0x0);
        gbc.writeMem(0x4f0e, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0x4f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03BE
        gbc.setState(0xbc8a, 0xc6be, 0x9770, 0x1224, 0x30a3, 0xae38, 0x1, 0x1);
        gbc.writeMem(0xbc8a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc6be);
        EXPECT(gbc.pc(), 0xbc8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8a), 0xcb);
        EXPECT(gbc.readMem(0xbc8b), 0xc2);
        // CB C2 03BF
        gbc.setState(0xad28, 0xc3bf, 0x4050, 0x4fdf, 0x11c1, 0x9ffe, 0x1, 0x0);
        gbc.writeMem(0xad28, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc3bf);
        EXPECT(gbc.pc(), 0xad2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad28), 0xcb);
        EXPECT(gbc.readMem(0xad29), 0xc2);
        // CB C2 03C0
        gbc.setState(0x1a91, 0xbfe7, 0x950, 0x574a, 0x78c, 0xbcab, 0x0, 0x0);
        gbc.writeMem(0x1a91, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbfe7);
        EXPECT(gbc.pc(), 0x1a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03C1
        gbc.setState(0x97b1, 0x984a, 0x4a20, 0x3d39, 0x72ce, 0xf1c0, 0x1, 0x1);
        gbc.writeMem(0x97b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x984a);
        EXPECT(gbc.pc(), 0x97b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b1), 0xcb);
        EXPECT(gbc.readMem(0x97b2), 0xc2);
        // CB C2 03C3
        gbc.setState(0x5d68, 0x2fa9, 0x6f80, 0x81d8, 0x6dbb, 0x1b9a, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2fa9);
        EXPECT(gbc.pc(), 0x5d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03C4
        gbc.setState(0x3638, 0x9450, 0x68a0, 0x45af, 0xd46f, 0xb199, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9450);
        EXPECT(gbc.pc(), 0x363a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03C6
        gbc.setState(0xcfb6, 0x8816, 0x5fc0, 0x36f8, 0x107a, 0xe61, 0x1, 0x1);
        gbc.writeMem(0xcfb6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0xcfb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb6), 0xcb);
        EXPECT(gbc.readMem(0xcfb7), 0xc2);
        // CB C2 03C7
        gbc.setState(0x7cd1, 0x1619, 0xdc90, 0x2e6f, 0x615b, 0x72bd, 0x1, 0x0);
        gbc.writeMem(0x7cd1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1619);
        EXPECT(gbc.pc(), 0x7cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03C8
        gbc.setState(0x6726, 0xbf3f, 0x67a0, 0x63fd, 0x5e2e, 0x657f, 0x0, 0x1);
        gbc.writeMem(0x6726, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbf3f);
        EXPECT(gbc.pc(), 0x6728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03C9
        gbc.setState(0xbf3c, 0x9eea, 0x5f60, 0xc877, 0xe8d0, 0x9b7b, 0x1, 0x1);
        gbc.writeMem(0xbf3c, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9eea);
        EXPECT(gbc.pc(), 0xbf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3c), 0xcb);
        EXPECT(gbc.readMem(0xbf3d), 0xc2);
        // CB C2 03CA
        gbc.setState(0x9d58, 0x7917, 0xec20, 0xa8e6, 0x3cdb, 0x51ad, 0x1, 0x1);
        gbc.writeMem(0x9d58, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7917);
        EXPECT(gbc.pc(), 0x9d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d58), 0xcb);
        EXPECT(gbc.readMem(0x9d59), 0xc2);
        // CB C2 03CB
        gbc.setState(0x1749, 0x7891, 0x7060, 0xae31, 0x63eb, 0x7ba0, 0x1, 0x1);
        gbc.writeMem(0x1749, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03CC
        gbc.setState(0x3c90, 0xe37f, 0x8b20, 0x3320, 0x266b, 0x33d3, 0x1, 0x0);
        gbc.writeMem(0x3c90, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe37f);
        EXPECT(gbc.pc(), 0x3c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03CD
        gbc.setState(0x2cff, 0xeb19, 0x8440, 0x4632, 0x9ca, 0x598, 0x0, 0x0);
        gbc.writeMem(0x2cff, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xeb19);
        EXPECT(gbc.pc(), 0x2d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03CE
        gbc.setState(0x3e62, 0x8fca, 0x6c10, 0xa59a, 0xa838, 0x5792, 0x0, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8fca);
        EXPECT(gbc.pc(), 0x3e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03CF
        gbc.setState(0xa607, 0x78ff, 0x3c30, 0xa10b, 0x800f, 0x854c, 0x0, 0x0);
        gbc.writeMem(0xa607, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x78ff);
        EXPECT(gbc.pc(), 0xa609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa607), 0xcb);
        EXPECT(gbc.readMem(0xa608), 0xc2);
        // CB C2 03D0
        gbc.setState(0xd1d3, 0xfef0, 0x1200, 0xe78c, 0x2842, 0x315c, 0x1, 0x0);
        gbc.writeMem(0xd1d3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfef0);
        EXPECT(gbc.pc(), 0xd1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d3), 0xcb);
        EXPECT(gbc.readMem(0xd1d4), 0xc2);
        // CB C2 03D1
        gbc.setState(0xeab3, 0xb124, 0x3f0, 0x9c35, 0x319f, 0x4239, 0x0, 0x1);
        gbc.writeMem(0xeab3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb124);
        EXPECT(gbc.pc(), 0xeab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab3), 0xcb);
        EXPECT(gbc.readMem(0xeab4), 0xc2);
        // CB C2 03D2
        gbc.setState(0x1d44, 0x42f4, 0xf340, 0x423, 0xd897, 0xcffd, 0x0, 0x0);
        gbc.writeMem(0x1d44, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x42f4);
        EXPECT(gbc.pc(), 0x1d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03D3
        gbc.setState(0x38b2, 0x30a4, 0xde70, 0xd6f1, 0xbbdd, 0xe691, 0x1, 0x1);
        gbc.writeMem(0x38b2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x30a4);
        EXPECT(gbc.pc(), 0x38b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03D4
        gbc.setState(0xa303, 0x9b70, 0x9790, 0x82ba, 0xd085, 0x2d24, 0x1, 0x1);
        gbc.writeMem(0xa303, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0xa305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa303), 0xcb);
        EXPECT(gbc.readMem(0xa304), 0xc2);
        // CB C2 03D5
        gbc.setState(0x2b24, 0xc653, 0xc450, 0x6da9, 0xa776, 0x9812, 0x1, 0x0);
        gbc.writeMem(0x2b24, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc653);
        EXPECT(gbc.pc(), 0x2b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03D6
        gbc.setState(0x812f, 0x3490, 0xad80, 0x94e6, 0x69f5, 0xa69, 0x0, 0x1);
        gbc.writeMem(0x812f, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3490);
        EXPECT(gbc.pc(), 0x8131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812f), 0xcb);
        EXPECT(gbc.readMem(0x8130), 0xc2);
        // CB C2 03D7
        gbc.setState(0x7026, 0xaa24, 0x6ba0, 0x93c, 0x8bf8, 0x1685, 0x1, 0x1);
        gbc.writeMem(0x7026, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xaa24);
        EXPECT(gbc.pc(), 0x7028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03D8
        gbc.setState(0x5862, 0xa613, 0xdef0, 0xf9a5, 0x4710, 0x6fe1, 0x1, 0x0);
        gbc.writeMem(0x5862, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa613);
        EXPECT(gbc.pc(), 0x5864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03D9
        gbc.setState(0x60d6, 0x3037, 0x9f00, 0xd292, 0x3095, 0x3df1, 0x0, 0x1);
        gbc.writeMem(0x60d6, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3037);
        EXPECT(gbc.pc(), 0x60d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03DB
        gbc.setState(0x1908, 0x3e12, 0x8ac0, 0xd381, 0xc88a, 0xa0d7, 0x1, 0x1);
        gbc.writeMem(0x1908, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3e12);
        EXPECT(gbc.pc(), 0x190a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03DC
        gbc.setState(0xb662, 0xcbb2, 0x3800, 0x1396, 0x656a, 0x1b14, 0x0, 0x0);
        gbc.writeMem(0xb662, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcbb2);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb662), 0xcb);
        EXPECT(gbc.readMem(0xb663), 0xc2);
        // CB C2 03DD
        gbc.setState(0x9119, 0xae63, 0x1c0, 0x62cf, 0xfaba, 0xe475, 0x1, 0x0);
        gbc.writeMem(0x9119, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xae63);
        EXPECT(gbc.pc(), 0x911b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9119), 0xcb);
        EXPECT(gbc.readMem(0x911a), 0xc2);
        // CB C2 03DE
        gbc.setState(0x9f96, 0x2e3b, 0xc280, 0xf1cf, 0xfab0, 0x74e9, 0x0, 0x1);
        gbc.writeMem(0x9f96, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2e3b);
        EXPECT(gbc.pc(), 0x9f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f96), 0xcb);
        EXPECT(gbc.readMem(0x9f97), 0xc2);
        // CB C2 03DF
        gbc.setState(0x75e7, 0x99fd, 0xe290, 0x5a43, 0xec56, 0x37f3, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x99fd);
        EXPECT(gbc.pc(), 0x75e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03E0
        gbc.setState(0x8322, 0x1ded, 0x6840, 0x4d39, 0x89a3, 0x58fc, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0x8324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8322), 0xcb);
        EXPECT(gbc.readMem(0x8323), 0xc2);
        // CB C2 03E1
        gbc.setState(0xdb3, 0x96dc, 0x5070, 0xb51f, 0xbc6, 0xfb52, 0x1, 0x1);
        gbc.writeMem(0xdb3, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x96dc);
        EXPECT(gbc.pc(), 0xdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03E2
        gbc.setState(0x7dd7, 0x5e79, 0xaea0, 0x8ede, 0xa334, 0x1c11, 0x1, 0x1);
        gbc.writeMem(0x7dd7, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5e79);
        EXPECT(gbc.pc(), 0x7dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03E3
        gbc.setState(0x57e2, 0xd236, 0xb800, 0x6ca8, 0x54d6, 0xbf7d, 0x1, 0x0);
        gbc.writeMem(0x57e2, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd236);
        EXPECT(gbc.pc(), 0x57e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03E4
        gbc.setState(0x12b1, 0xff90, 0x3570, 0x8f1f, 0x6e55, 0x1296, 0x0, 0x0);
        gbc.writeMem(0x12b1, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xff90);
        EXPECT(gbc.pc(), 0x12b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C2 03E5
        gbc.setState(0x1924, 0x18a7, 0xd420, 0x556f, 0xedb8, 0x8c64, 0x0, 0x0);
        gbc.writeMem(0x1924, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x18a7);
        EXPECT(gbc.pc(), 0x1926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C2 03E6
        gbc.setState(0x884a, 0x5257, 0x60b0, 0xdffa, 0x7fa5, 0x7cc6, 0x0, 0x1);
        gbc.writeMem(0x884a, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5257);
        EXPECT(gbc.pc(), 0x884c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884a), 0xcb);
        EXPECT(gbc.readMem(0x884b), 0xc2);
        // CB C2 03E7
        gbc.setState(0x40bc, 0x475, 0xfb60, 0xf091, 0xfd10, 0x30f5, 0x0, 0x0);
        gbc.writeMem(0x40bc, { 0xcb, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x475);
        EXPECT(gbc.pc(), 0x40be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
