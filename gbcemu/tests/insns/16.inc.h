    TEST(gbcemu, opcode_16) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 16 0000
        gbc.setState(0x8a6c, 0xe7ce, 0x9250, 0xe318, 0x5e3e, 0xf636, 0x1, 0x0);
        gbc.writeMem(0x8a6c, { 0x16, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe7ce);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6c), 0x16);
        EXPECT(gbc.readMem(0x8a6d), 0x7a);
        // 16 0001
        gbc.setState(0x990, 0x6989, 0x6c20, 0x7dba, 0x1072, 0xf7e3, 0x0, 0x1);
        gbc.writeMem(0x990, { 0x16, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6989);
        EXPECT(gbc.pc(), 0x992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0002
        gbc.setState(0x3d44, 0x271e, 0x2ff0, 0x33f7, 0x314c, 0x635e, 0x0, 0x1);
        gbc.writeMem(0x3d44, { 0x16, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x271e);
        EXPECT(gbc.pc(), 0x3d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0003
        gbc.setState(0x8f98, 0x52fc, 0x8090, 0x8eb8, 0x133f, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0x8f98, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x52fc);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f98), 0x16);
        EXPECT(gbc.readMem(0x8f99), 0x38);
        // 16 0004
        gbc.setState(0x3268, 0x9753, 0x9150, 0x2cf6, 0x6eab, 0x84b9, 0x0, 0x1);
        gbc.writeMem(0x3268, { 0x16, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9753);
        EXPECT(gbc.pc(), 0x326a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0005
        gbc.setState(0x9ae0, 0x9fb4, 0xecf0, 0xa807, 0xedb5, 0xa1bb, 0x0, 0x0);
        gbc.writeMem(0x9ae0, { 0x16, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9fb4);
        EXPECT(gbc.pc(), 0x9ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae0), 0x16);
        EXPECT(gbc.readMem(0x9ae1), 0x64);
        // 16 0006
        gbc.setState(0xa93a, 0xb483, 0xe610, 0x7536, 0x4e9a, 0x85cd, 0x0, 0x1);
        gbc.writeMem(0xa93a, { 0x16, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb483);
        EXPECT(gbc.pc(), 0xa93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93a), 0x16);
        EXPECT(gbc.readMem(0xa93b), 0x18);
        // 16 0007
        gbc.setState(0x211c, 0xb864, 0xb250, 0x78c1, 0xa7c4, 0x42ae, 0x1, 0x1);
        gbc.writeMem(0x211c, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb864);
        EXPECT(gbc.pc(), 0x211e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0008
        gbc.setState(0x2e54, 0xd295, 0xdce0, 0x27a8, 0x61fd, 0xbb0f, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd295);
        EXPECT(gbc.pc(), 0x2e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0009
        gbc.setState(0xe600, 0xe695, 0x5940, 0x707e, 0x9dc4, 0xe63b, 0x1, 0x0);
        gbc.writeMem(0xe600, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe695);
        EXPECT(gbc.pc(), 0xe602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe600), 0x16);
        EXPECT(gbc.readMem(0xe601), 0xd5);
        // 16 000A
        gbc.setState(0xedf4, 0x63fc, 0xdd00, 0xd4ba, 0x2a82, 0x39bc, 0x0, 0x0);
        gbc.writeMem(0xedf4, { 0x16, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x63fc);
        EXPECT(gbc.pc(), 0xedf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf4), 0x16);
        EXPECT(gbc.readMem(0xedf5), 0x11);
        // 16 000B
        gbc.setState(0xe00d, 0x1db2, 0x97f0, 0x2b4c, 0xf685, 0x6c97, 0x0, 0x0);
        gbc.writeMem(0xe00d, { 0x16, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1db2);
        EXPECT(gbc.pc(), 0xe00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe00d), 0x16);
        EXPECT(gbc.readMem(0xe00e), 0x4c);
        // 16 000C
        gbc.setState(0x1b6f, 0xdde3, 0x3f90, 0x2258, 0xc8cb, 0xb13e, 0x1, 0x0);
        gbc.writeMem(0x1b6f, { 0x16, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdde3);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 000D
        gbc.setState(0xc532, 0xcc0f, 0x1e60, 0x31e6, 0x8778, 0x875, 0x1, 0x1);
        gbc.writeMem(0xc532, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcc0f);
        EXPECT(gbc.pc(), 0xc534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc532), 0x16);
        EXPECT(gbc.readMem(0xc533), 0xf5);
        // 16 000E
        gbc.setState(0x7225, 0xa9ae, 0xced0, 0xbb0b, 0xf8c3, 0xc807, 0x1, 0x1);
        gbc.writeMem(0x7225, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa9ae);
        EXPECT(gbc.pc(), 0x7227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 000F
        gbc.setState(0xaf8, 0xac9f, 0x7280, 0x1b8e, 0xbca9, 0x732d, 0x1, 0x1);
        gbc.writeMem(0xaf8, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xac9f);
        EXPECT(gbc.pc(), 0xafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0010
        gbc.setState(0xd00e, 0xbf43, 0x3fd0, 0xbec, 0x2a3a, 0xf182, 0x1, 0x1);
        gbc.writeMem(0xd00e, { 0x16, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbf43);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00e), 0x16);
        EXPECT(gbc.readMem(0xd00f), 0xf3);
        // 16 0011
        gbc.setState(0x9cf6, 0x52bb, 0x99f0, 0x1b28, 0xdaff, 0xc1b3, 0x0, 0x0);
        gbc.writeMem(0x9cf6, { 0x16, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x52bb);
        EXPECT(gbc.pc(), 0x9cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf6), 0x16);
        EXPECT(gbc.readMem(0x9cf7), 0x3f);
        // 16 0012
        gbc.setState(0xbdf5, 0x214, 0xd0d0, 0xbc2c, 0xc284, 0x9062, 0x1, 0x0);
        gbc.writeMem(0xbdf5, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x214);
        EXPECT(gbc.pc(), 0xbdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf5), 0x16);
        EXPECT(gbc.readMem(0xbdf6), 0xb9);
        // 16 0014
        gbc.setState(0x437f, 0x4373, 0x1210, 0x2b1e, 0x6ee9, 0x429b, 0x0, 0x1);
        gbc.writeMem(0x437f, { 0x16, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4373);
        EXPECT(gbc.pc(), 0x4381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0015
        gbc.setState(0x534f, 0x614b, 0xffb0, 0x8b12, 0x608d, 0x572c, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x614b);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0016
        gbc.setState(0xbfb8, 0xc131, 0xacb0, 0x638b, 0x18f7, 0x2e94, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0x16, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc131);
        EXPECT(gbc.pc(), 0xbfba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb8), 0x16);
        EXPECT(gbc.readMem(0xbfb9), 0xf2);
        // 16 0017
        gbc.setState(0xa72a, 0x3bf4, 0x8210, 0x9210, 0xa27a, 0x1995, 0x1, 0x1);
        gbc.writeMem(0xa72a, { 0x16, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3bf4);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72a), 0x16);
        EXPECT(gbc.readMem(0xa72b), 0x70);
        // 16 0018
        gbc.setState(0x11b9, 0x9ffb, 0xb390, 0x377c, 0x48cf, 0x52ae, 0x1, 0x1);
        gbc.writeMem(0x11b9, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9ffb);
        EXPECT(gbc.pc(), 0x11bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0019
        gbc.setState(0x4ed4, 0xd4de, 0xc560, 0x59d4, 0x480c, 0x6294, 0x0, 0x0);
        gbc.writeMem(0x4ed4, { 0x16, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd4de);
        EXPECT(gbc.pc(), 0x4ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 001A
        gbc.setState(0xc043, 0xcb8d, 0xcba0, 0x1e20, 0x60ce, 0x8818, 0x0, 0x0);
        gbc.writeMem(0xc043, { 0x16, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcb8d);
        EXPECT(gbc.pc(), 0xc045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc043), 0x16);
        EXPECT(gbc.readMem(0xc044), 0x1c);
        // 16 001B
        gbc.setState(0xeae3, 0xe3d1, 0xd130, 0x5108, 0x4884, 0x3c7d, 0x0, 0x0);
        gbc.writeMem(0xeae3, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe3d1);
        EXPECT(gbc.pc(), 0xeae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae3), 0x16);
        EXPECT(gbc.readMem(0xeae4), 0xda);
        // 16 001C
        gbc.setState(0xdcfc, 0xd94f, 0x1e70, 0x6458, 0xb892, 0x574, 0x1, 0x1);
        gbc.writeMem(0xdcfc, { 0x16, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd94f);
        EXPECT(gbc.pc(), 0xdcfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcfc), 0x16);
        EXPECT(gbc.readMem(0xdcfd), 0x66);
        // 16 001D
        gbc.setState(0x108f, 0x4d87, 0xb350, 0x6102, 0xd443, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x108f, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4d87);
        EXPECT(gbc.pc(), 0x1091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 001E
        gbc.setState(0x2ca2, 0xabee, 0xa120, 0xe291, 0x8f4c, 0xdb43, 0x1, 0x0);
        gbc.writeMem(0x2ca2, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xabee);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 001F
        gbc.setState(0xcfe7, 0x53f0, 0xcf00, 0x922a, 0xb954, 0xb93b, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0x16, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x53f0);
        EXPECT(gbc.pc(), 0xcfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe7), 0x16);
        EXPECT(gbc.readMem(0xcfe8), 0xee);
        // 16 0020
        gbc.setState(0xef0e, 0x9f2c, 0xcc80, 0x682b, 0xf644, 0x58fa, 0x0, 0x1);
        gbc.writeMem(0xef0e, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0xef10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0e), 0x16);
        EXPECT(gbc.readMem(0xef0f), 0xd1);
        // 16 0021
        gbc.setState(0xa828, 0xf117, 0xe870, 0x889e, 0x55c1, 0x1018, 0x1, 0x0);
        gbc.writeMem(0xa828, { 0x16, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf117);
        EXPECT(gbc.pc(), 0xa82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa828), 0x16);
        EXPECT(gbc.readMem(0xa829), 0x64);
        // 16 0023
        gbc.setState(0xe252, 0xc3d7, 0xfdb0, 0x62ce, 0xe610, 0x2278, 0x0, 0x1);
        gbc.writeMem(0xe252, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc3d7);
        EXPECT(gbc.pc(), 0xe254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe252), 0x16);
        EXPECT(gbc.readMem(0xe253), 0xe9);
        // 16 0024
        gbc.setState(0xc773, 0xd399, 0x4f70, 0xe468, 0x847, 0x9aa4, 0x0, 0x1);
        gbc.writeMem(0xc773, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd399);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc773), 0x16);
        EXPECT(gbc.readMem(0xc774), 0xf5);
        // 16 0026
        gbc.setState(0xb391, 0x5c2f, 0xaaa0, 0xa730, 0x24f9, 0xf026, 0x1, 0x0);
        gbc.writeMem(0xb391, { 0x16, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5c2f);
        EXPECT(gbc.pc(), 0xb393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb391), 0x16);
        EXPECT(gbc.readMem(0xb392), 0x27);
        // 16 0027
        gbc.setState(0x4cd4, 0x7ea7, 0x9940, 0x29d9, 0xfe8e, 0x2c8b, 0x0, 0x0);
        gbc.writeMem(0x4cd4, { 0x16, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7ea7);
        EXPECT(gbc.pc(), 0x4cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0028
        gbc.setState(0x61a2, 0x8387, 0x5cb0, 0xcde5, 0x489f, 0x54b8, 0x1, 0x0);
        gbc.writeMem(0x61a2, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8387);
        EXPECT(gbc.pc(), 0x61a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0029
        gbc.setState(0x4067, 0x82c8, 0xe0d0, 0x2b7e, 0xe34a, 0xf0f5, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x82c8);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 002B
        gbc.setState(0x1755, 0x773a, 0x42c0, 0xbcd9, 0x9c02, 0x646f, 0x1, 0x1);
        gbc.writeMem(0x1755, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x773a);
        EXPECT(gbc.pc(), 0x1757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 002C
        gbc.setState(0x3f8b, 0x9aba, 0x2590, 0xd73a, 0x4b34, 0xe434, 0x1, 0x0);
        gbc.writeMem(0x3f8b, { 0x16, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9aba);
        EXPECT(gbc.pc(), 0x3f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 002D
        gbc.setState(0xae82, 0xce2c, 0xcb90, 0xfb70, 0x3749, 0x30da, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0x16, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xce2c);
        EXPECT(gbc.pc(), 0xae84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae82), 0x16);
        EXPECT(gbc.readMem(0xae83), 0x35);
        // 16 002E
        gbc.setState(0xed34, 0xa648, 0x1050, 0x8a7c, 0x32f9, 0xb9e5, 0x1, 0x0);
        gbc.writeMem(0xed34, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa648);
        EXPECT(gbc.pc(), 0xed36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed34), 0x16);
        EXPECT(gbc.readMem(0xed35), 0xc4);
        // 16 002F
        gbc.setState(0x66a9, 0x3aef, 0xf660, 0x77c3, 0x8bf1, 0x9e8e, 0x0, 0x0);
        gbc.writeMem(0x66a9, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3aef);
        EXPECT(gbc.pc(), 0x66ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0030
        gbc.setState(0x75c, 0xfd73, 0x2860, 0x5307, 0xef0c, 0x6599, 0x0, 0x1);
        gbc.writeMem(0x75c, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfd73);
        EXPECT(gbc.pc(), 0x75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0031
        gbc.setState(0x777c, 0x8d6a, 0x2f10, 0x4aa7, 0xec90, 0x7e52, 0x1, 0x1);
        gbc.writeMem(0x777c, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8d6a);
        EXPECT(gbc.pc(), 0x777e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0032
        gbc.setState(0x1847, 0xb07c, 0x1930, 0x79e5, 0x68e6, 0xd8db, 0x0, 0x1);
        gbc.writeMem(0x1847, { 0x16, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb07c);
        EXPECT(gbc.pc(), 0x1849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0033
        gbc.setState(0x463b, 0x6e97, 0xab10, 0xef7a, 0xcb36, 0x5cbc, 0x0, 0x1);
        gbc.writeMem(0x463b, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6e97);
        EXPECT(gbc.pc(), 0x463d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0034
        gbc.setState(0x3ebb, 0x8586, 0x45b0, 0x5d28, 0x7a88, 0x1ca7, 0x0, 0x1);
        gbc.writeMem(0x3ebb, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8586);
        EXPECT(gbc.pc(), 0x3ebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0035
        gbc.setState(0x206b, 0xcf6e, 0xf6e0, 0xe338, 0x4753, 0xf477, 0x0, 0x1);
        gbc.writeMem(0x206b, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcf6e);
        EXPECT(gbc.pc(), 0x206d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0036
        gbc.setState(0x8a67, 0xc656, 0x3ec0, 0xb7c9, 0x97de, 0x5871, 0x0, 0x0);
        gbc.writeMem(0x8a67, { 0x16, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc656);
        EXPECT(gbc.pc(), 0x8a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a67), 0x16);
        EXPECT(gbc.readMem(0x8a68), 0xf2);
        // 16 0037
        gbc.setState(0x52d2, 0x9a70, 0x6610, 0xb160, 0xebb, 0xbf4e, 0x0, 0x0);
        gbc.writeMem(0x52d2, { 0x16, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9a70);
        EXPECT(gbc.pc(), 0x52d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0039
        gbc.setState(0xe0ee, 0xd19c, 0xbad0, 0x60cd, 0x494, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0xe0ee, { 0x16, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd19c);
        EXPECT(gbc.pc(), 0xe0f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ee), 0x16);
        EXPECT(gbc.readMem(0xe0ef), 0xab);
        // 16 003A
        gbc.setState(0x67d, 0xdc00, 0xccb0, 0x1697, 0x6563, 0x6fff, 0x0, 0x1);
        gbc.writeMem(0x67d, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdc00);
        EXPECT(gbc.pc(), 0x67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 003B
        gbc.setState(0xb70e, 0x4e8f, 0x2060, 0xf872, 0x89fc, 0xa71a, 0x0, 0x0);
        gbc.writeMem(0xb70e, { 0x16, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0xb710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70e), 0x16);
        EXPECT(gbc.readMem(0xb70f), 0x8);
        // 16 003C
        gbc.setState(0x3ce6, 0x6d8, 0x5430, 0xe45f, 0xa1ad, 0x92ea, 0x0, 0x0);
        gbc.writeMem(0x3ce6, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0x3ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 003D
        gbc.setState(0x5eb9, 0xa873, 0x4c20, 0xc13e, 0xcf2d, 0xe342, 0x0, 0x1);
        gbc.writeMem(0x5eb9, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa873);
        EXPECT(gbc.pc(), 0x5ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 003E
        gbc.setState(0xdd4e, 0xfe95, 0x3370, 0x93e9, 0xd7dc, 0xc15b, 0x0, 0x1);
        gbc.writeMem(0xdd4e, { 0x16, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfe95);
        EXPECT(gbc.pc(), 0xdd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4e), 0x16);
        EXPECT(gbc.readMem(0xdd4f), 0x6a);
        // 16 003F
        gbc.setState(0xb010, 0xc954, 0x38e0, 0x263a, 0x5ef6, 0xbebc, 0x1, 0x1);
        gbc.writeMem(0xb010, { 0x16, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc954);
        EXPECT(gbc.pc(), 0xb012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb010), 0x16);
        EXPECT(gbc.readMem(0xb011), 0x31);
        // 16 0040
        gbc.setState(0xddd, 0x2a18, 0x9220, 0xd3fc, 0xf9cd, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0x16, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2a18);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0041
        gbc.setState(0x753a, 0x9331, 0x7f10, 0x5b6c, 0xeb75, 0x4249, 0x1, 0x0);
        gbc.writeMem(0x753a, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9331);
        EXPECT(gbc.pc(), 0x753c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0042
        gbc.setState(0xb1a7, 0x4195, 0x6aa0, 0xc12a, 0x2984, 0x6b59, 0x1, 0x0);
        gbc.writeMem(0xb1a7, { 0x16, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4195);
        EXPECT(gbc.pc(), 0xb1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a7), 0x16);
        EXPECT(gbc.readMem(0xb1a8), 0x6);
        // 16 0043
        gbc.setState(0x4ec2, 0x8c09, 0x5d90, 0x3433, 0xb9f4, 0xa728, 0x1, 0x0);
        gbc.writeMem(0x4ec2, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8c09);
        EXPECT(gbc.pc(), 0x4ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0044
        gbc.setState(0x881d, 0xe1f6, 0xf0b0, 0x64ac, 0xf7de, 0x8c79, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0x16, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe1f6);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881d), 0x16);
        EXPECT(gbc.readMem(0x881e), 0x54);
        // 16 0045
        gbc.setState(0xec97, 0x813f, 0x7060, 0x9abe, 0x48f1, 0xdedf, 0x1, 0x0);
        gbc.writeMem(0xec97, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x813f);
        EXPECT(gbc.pc(), 0xec99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec97), 0x16);
        EXPECT(gbc.readMem(0xec98), 0xa8);
        // 16 0046
        gbc.setState(0x8973, 0x4995, 0x8830, 0xf127, 0xa68d, 0xe36d, 0x1, 0x0);
        gbc.writeMem(0x8973, { 0x16, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0x8975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8973), 0x16);
        EXPECT(gbc.readMem(0x8974), 0x9);
        // 16 0047
        gbc.setState(0xa737, 0xafc5, 0x4da0, 0x3625, 0x164c, 0x8556, 0x1, 0x1);
        gbc.writeMem(0xa737, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xafc5);
        EXPECT(gbc.pc(), 0xa739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa737), 0x16);
        EXPECT(gbc.readMem(0xa738), 0x72);
        // 16 0049
        gbc.setState(0x7a01, 0x15c3, 0xfb80, 0x85b8, 0xaf7f, 0x62b1, 0x1, 0x1);
        gbc.writeMem(0x7a01, { 0x16, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x15c3);
        EXPECT(gbc.pc(), 0x7a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 004A
        gbc.setState(0xa227, 0x9553, 0x67e0, 0x1db1, 0x2593, 0xeeb5, 0x0, 0x1);
        gbc.writeMem(0xa227, { 0x16, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9553);
        EXPECT(gbc.pc(), 0xa229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa227), 0x16);
        EXPECT(gbc.readMem(0xa228), 0x4e);
        // 16 004B
        gbc.setState(0xb0a7, 0x364f, 0x8ee0, 0x6d4, 0x1cc2, 0xeba9, 0x1, 0x1);
        gbc.writeMem(0xb0a7, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x364f);
        EXPECT(gbc.pc(), 0xb0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a7), 0x16);
        EXPECT(gbc.readMem(0xb0a8), 0xd5);
        // 16 004C
        gbc.setState(0x8108, 0xd574, 0x71f0, 0x223e, 0x431c, 0xdec2, 0x1, 0x1);
        gbc.writeMem(0x8108, { 0x16, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0x810a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8108), 0x16);
        EXPECT(gbc.readMem(0x8109), 0xae);
        // 16 004D
        gbc.setState(0x78aa, 0x584c, 0x9710, 0x5ff, 0x4ea1, 0xfa6a, 0x0, 0x0);
        gbc.writeMem(0x78aa, { 0x16, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x584c);
        EXPECT(gbc.pc(), 0x78ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 004E
        gbc.setState(0xca8e, 0xba, 0xd190, 0x57eb, 0xc65f, 0xf433, 0x0, 0x1);
        gbc.writeMem(0xca8e, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xba);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8e), 0x16);
        EXPECT(gbc.readMem(0xca8f), 0x85);
        // 16 004F
        gbc.setState(0x18e4, 0x83d3, 0xc0c0, 0xe179, 0x2cf1, 0x7369, 0x0, 0x1);
        gbc.writeMem(0x18e4, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x83d3);
        EXPECT(gbc.pc(), 0x18e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0050
        gbc.setState(0x169f, 0x5951, 0xcda0, 0x40be, 0xec16, 0x361b, 0x0, 0x0);
        gbc.writeMem(0x169f, { 0x16, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5951);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0051
        gbc.setState(0xce38, 0x533c, 0xc0c0, 0x4957, 0x5e6b, 0x2f19, 0x0, 0x1);
        gbc.writeMem(0xce38, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x533c);
        EXPECT(gbc.pc(), 0xce3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce38), 0x16);
        EXPECT(gbc.readMem(0xce39), 0x4f);
        // 16 0052
        gbc.setState(0x6b1f, 0xd6af, 0x3530, 0x2708, 0x6c2f, 0x8744, 0x0, 0x0);
        gbc.writeMem(0x6b1f, { 0x16, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd6af);
        EXPECT(gbc.pc(), 0x6b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0053
        gbc.setState(0xd0e7, 0xed4e, 0xa030, 0x788, 0xc038, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0xd0e7, { 0x16, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xed4e);
        EXPECT(gbc.pc(), 0xd0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e7), 0x16);
        EXPECT(gbc.readMem(0xd0e8), 0xec);
        // 16 0054
        gbc.setState(0x2148, 0x3d14, 0x5100, 0xcb3b, 0xa300, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0x2148, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3d14);
        EXPECT(gbc.pc(), 0x214a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0055
        gbc.setState(0x957a, 0xa045, 0x7610, 0x9f28, 0xb5fe, 0xdb6e, 0x0, 0x1);
        gbc.writeMem(0x957a, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0x957c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957a), 0x16);
        EXPECT(gbc.readMem(0x957b), 0xd2);
        // 16 0056
        gbc.setState(0x8b5a, 0x91c5, 0x3650, 0x3980, 0xa961, 0x121b, 0x1, 0x1);
        gbc.writeMem(0x8b5a, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x91c5);
        EXPECT(gbc.pc(), 0x8b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5a), 0x16);
        EXPECT(gbc.readMem(0x8b5b), 0xd);
        // 16 0057
        gbc.setState(0x5fef, 0x4309, 0x2780, 0xe464, 0xdcb3, 0x6b5e, 0x1, 0x1);
        gbc.writeMem(0x5fef, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4309);
        EXPECT(gbc.pc(), 0x5ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0058
        gbc.setState(0xe058, 0xf67d, 0x1c80, 0x25e1, 0x4fb8, 0x7798, 0x1, 0x1);
        gbc.writeMem(0xe058, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf67d);
        EXPECT(gbc.pc(), 0xe05a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe058), 0x16);
        EXPECT(gbc.readMem(0xe059), 0xe3);
        // 16 0059
        gbc.setState(0x9861, 0xad15, 0xcc70, 0xdd3a, 0x919e, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x9861, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad15);
        EXPECT(gbc.pc(), 0x9863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9861), 0x16);
        EXPECT(gbc.readMem(0x9862), 0xd);
        // 16 005A
        gbc.setState(0x4a2e, 0x8ab8, 0x3160, 0xf31a, 0x83f2, 0x497e, 0x0, 0x0);
        gbc.writeMem(0x4a2e, { 0x16, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8ab8);
        EXPECT(gbc.pc(), 0x4a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 005B
        gbc.setState(0x115a, 0x694, 0x9510, 0x4fa7, 0x233a, 0x7153, 0x1, 0x0);
        gbc.writeMem(0x115a, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0x115c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 005C
        gbc.setState(0x38b, 0x2fe0, 0x9bf0, 0x50f2, 0x5fa3, 0x4a40, 0x0, 0x0);
        gbc.writeMem(0x38b, { 0x16, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2fe0);
        EXPECT(gbc.pc(), 0x38d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 005D
        gbc.setState(0x5923, 0x12fb, 0x91d0, 0x84ad, 0x2de3, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0x16, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x12fb);
        EXPECT(gbc.pc(), 0x5925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 005E
        gbc.setState(0xc73d, 0x14c3, 0x2750, 0x2978, 0x9f58, 0x1bfd, 0x1, 0x0);
        gbc.writeMem(0xc73d, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x14c3);
        EXPECT(gbc.pc(), 0xc73f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73d), 0x16);
        EXPECT(gbc.readMem(0xc73e), 0xf0);
        // 16 005F
        gbc.setState(0x7549, 0xedd4, 0x78d0, 0x1565, 0xce34, 0x2007, 0x0, 0x1);
        gbc.writeMem(0x7549, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xedd4);
        EXPECT(gbc.pc(), 0x754b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0060
        gbc.setState(0xd11e, 0x3bce, 0x2950, 0xed09, 0x942e, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xd11e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3bce);
        EXPECT(gbc.pc(), 0xd120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11e), 0x16);
        EXPECT(gbc.readMem(0xd11f), 0x91);
        // 16 0061
        gbc.setState(0x4bc6, 0xc4cc, 0x7210, 0xb78c, 0x10b2, 0x9ad1, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc4cc);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0062
        gbc.setState(0xc117, 0x89bf, 0xa270, 0x8e4d, 0x77ab, 0x61f2, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0x16, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x89bf);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc117), 0x16);
        EXPECT(gbc.readMem(0xc118), 0xbd);
        // 16 0063
        gbc.setState(0xb3e7, 0x3071, 0x8160, 0x41f4, 0x35e2, 0xd019, 0x0, 0x0);
        gbc.writeMem(0xb3e7, { 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3071);
        EXPECT(gbc.pc(), 0xb3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e7), 0x16);
        EXPECT(gbc.readMem(0xb3e8), 0x17);
        // 16 0064
        gbc.setState(0x196e, 0x9f83, 0x9d60, 0x7dec, 0xa3b6, 0x9959, 0x0, 0x0);
        gbc.writeMem(0x196e, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9f83);
        EXPECT(gbc.pc(), 0x1970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0065
        gbc.setState(0x350c, 0xf4b, 0x3ef0, 0x8736, 0x74d5, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf4b);
        EXPECT(gbc.pc(), 0x350e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0066
        gbc.setState(0x720b, 0x13c0, 0xf100, 0xe028, 0x268a, 0xafef, 0x0, 0x0);
        gbc.writeMem(0x720b, { 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x13c0);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0067
        gbc.setState(0x8844, 0x37ff, 0x7280, 0x264c, 0xbec, 0x1589, 0x1, 0x0);
        gbc.writeMem(0x8844, { 0x16, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x37ff);
        EXPECT(gbc.pc(), 0x8846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8844), 0x16);
        EXPECT(gbc.readMem(0x8845), 0x10);
        // 16 0068
        gbc.setState(0xbcff, 0x2e50, 0xd980, 0x8912, 0xa329, 0xccff, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0x16, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2e50);
        EXPECT(gbc.pc(), 0xbd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcff), 0x16);
        EXPECT(gbc.readMem(0xbd00), 0x99);
        // 16 0069
        gbc.setState(0x52cc, 0xb0af, 0xf1e0, 0x1ca8, 0x197b, 0xe6e2, 0x1, 0x0);
        gbc.writeMem(0x52cc, { 0x16, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb0af);
        EXPECT(gbc.pc(), 0x52ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 006A
        gbc.setState(0xdbc2, 0x67c8, 0x1350, 0x6500, 0x20f5, 0x58f8, 0x0, 0x0);
        gbc.writeMem(0xdbc2, { 0x16, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0xdbc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc2), 0x16);
        EXPECT(gbc.readMem(0xdbc3), 0xfd);
        // 16 006B
        gbc.setState(0x263b, 0xcf3b, 0x3890, 0x103f, 0x8e7b, 0x5646, 0x1, 0x1);
        gbc.writeMem(0x263b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xcf3b);
        EXPECT(gbc.pc(), 0x263d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 006D
        gbc.setState(0xd0c7, 0xe9b8, 0xa140, 0x96c3, 0x4485, 0x7bc, 0x1, 0x0);
        gbc.writeMem(0xd0c7, { 0x16, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe9b8);
        EXPECT(gbc.pc(), 0xd0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c7), 0x16);
        EXPECT(gbc.readMem(0xd0c8), 0xfa);
        // 16 006E
        gbc.setState(0x1e6e, 0x1cd8, 0x1fe0, 0x31ce, 0x839b, 0x2a5b, 0x1, 0x0);
        gbc.writeMem(0x1e6e, { 0x16, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x1e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 006F
        gbc.setState(0xe218, 0x3205, 0xfbf0, 0xc3e, 0xfdfa, 0x7a36, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0x16, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3205);
        EXPECT(gbc.pc(), 0xe21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe218), 0x16);
        EXPECT(gbc.readMem(0xe219), 0x3f);
        // 16 0070
        gbc.setState(0x2458, 0x1e0c, 0x680, 0x36fa, 0xc1c3, 0xb71, 0x1, 0x1);
        gbc.writeMem(0x2458, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0x245a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0071
        gbc.setState(0x755, 0x5688, 0x1530, 0x46ce, 0xae23, 0xc86c, 0x1, 0x0);
        gbc.writeMem(0x755, { 0x16, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5688);
        EXPECT(gbc.pc(), 0x757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0072
        gbc.setState(0x852d, 0x9c7a, 0x46f0, 0x9e7b, 0x2f5f, 0xa887, 0x1, 0x0);
        gbc.writeMem(0x852d, { 0x16, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x852f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x852d), 0x16);
        EXPECT(gbc.readMem(0x852e), 0x84);
        // 16 0073
        gbc.setState(0x2388, 0x902d, 0x13b0, 0xcd8d, 0x235d, 0x8d1d, 0x1, 0x0);
        gbc.writeMem(0x2388, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x902d);
        EXPECT(gbc.pc(), 0x238a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0074
        gbc.setState(0x2d4b, 0xa39e, 0x3f0, 0x3cee, 0xf5, 0x675b, 0x0, 0x0);
        gbc.writeMem(0x2d4b, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa39e);
        EXPECT(gbc.pc(), 0x2d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0075
        gbc.setState(0x9240, 0xb7fb, 0x4550, 0xbe7a, 0x3b4, 0x8b43, 0x0, 0x0);
        gbc.writeMem(0x9240, { 0x16, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb7fb);
        EXPECT(gbc.pc(), 0x9242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9240), 0x16);
        EXPECT(gbc.readMem(0x9241), 0x6b);
        // 16 0076
        gbc.setState(0x1da, 0x60, 0xa330, 0x40ea, 0x6121, 0xaf1c, 0x1, 0x0);
        gbc.writeMem(0x1da, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x60);
        EXPECT(gbc.pc(), 0x1dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0077
        gbc.setState(0xe152, 0x222, 0x2890, 0x230, 0xe8b8, 0xb4e, 0x1, 0x0);
        gbc.writeMem(0xe152, { 0x16, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x222);
        EXPECT(gbc.pc(), 0xe154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe152), 0x16);
        EXPECT(gbc.readMem(0xe153), 0x4b);
        // 16 0078
        gbc.setState(0x84fa, 0x2392, 0x3470, 0x46a8, 0x5f46, 0xa162, 0x0, 0x0);
        gbc.writeMem(0x84fa, { 0x16, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0x84fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fa), 0x16);
        EXPECT(gbc.readMem(0x84fb), 0x69);
        // 16 0079
        gbc.setState(0x7f61, 0xa612, 0x65f0, 0x28db, 0xe349, 0xf2a7, 0x0, 0x1);
        gbc.writeMem(0x7f61, { 0x16, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa612);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 007A
        gbc.setState(0xd078, 0xe676, 0xa7b0, 0xd5e, 0xf239, 0x6ac9, 0x1, 0x0);
        gbc.writeMem(0xd078, { 0x16, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe676);
        EXPECT(gbc.pc(), 0xd07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd078), 0x16);
        EXPECT(gbc.readMem(0xd079), 0x3b);
        // 16 007B
        gbc.setState(0x772c, 0x85bc, 0x4940, 0x4f13, 0x2ffb, 0x75ae, 0x0, 0x0);
        gbc.writeMem(0x772c, { 0x16, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x85bc);
        EXPECT(gbc.pc(), 0x772e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 007C
        gbc.setState(0x36c7, 0xa7b7, 0xb2f0, 0x838, 0x5664, 0xb0d8, 0x1, 0x1);
        gbc.writeMem(0x36c7, { 0x16, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa7b7);
        EXPECT(gbc.pc(), 0x36c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 007D
        gbc.setState(0x3ac7, 0xa0ca, 0x6dd0, 0x9686, 0x3667, 0x1afe, 0x0, 0x1);
        gbc.writeMem(0x3ac7, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa0ca);
        EXPECT(gbc.pc(), 0x3ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 007E
        gbc.setState(0xe105, 0xdeea, 0x5ba0, 0xe7a3, 0x1c76, 0x29de, 0x1, 0x0);
        gbc.writeMem(0xe105, { 0x16, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdeea);
        EXPECT(gbc.pc(), 0xe107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe105), 0x16);
        EXPECT(gbc.readMem(0xe106), 0x2c);
        // 16 0080
        gbc.setState(0x3f1f, 0x9201, 0x9ab0, 0xd381, 0x9b96, 0x35ee, 0x0, 0x1);
        gbc.writeMem(0x3f1f, { 0x16, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9201);
        EXPECT(gbc.pc(), 0x3f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0081
        gbc.setState(0xc3f4, 0xe456, 0xa160, 0x65d4, 0x31ca, 0x589, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe456);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f4), 0x16);
        EXPECT(gbc.readMem(0xc3f5), 0xd1);
        // 16 0082
        gbc.setState(0x7a6e, 0xa508, 0x26a0, 0xff2e, 0xabe2, 0x7bbf, 0x1, 0x0);
        gbc.writeMem(0x7a6e, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa508);
        EXPECT(gbc.pc(), 0x7a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0083
        gbc.setState(0x901d, 0xcd16, 0xb0c0, 0xcf50, 0x32ba, 0xcd87, 0x0, 0x1);
        gbc.writeMem(0x901d, { 0x16, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcd16);
        EXPECT(gbc.pc(), 0x901f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x901d), 0x16);
        EXPECT(gbc.readMem(0x901e), 0x14);
        // 16 0084
        gbc.setState(0x53a8, 0x85a2, 0x6500, 0xec8b, 0xc1cf, 0xa945, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0x16, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x85a2);
        EXPECT(gbc.pc(), 0x53aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0085
        gbc.setState(0x1ffd, 0x5170, 0xb610, 0xc600, 0x1658, 0x1f8e, 0x0, 0x0);
        gbc.writeMem(0x1ffd, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0086
        gbc.setState(0x87a1, 0x8a11, 0x1d10, 0x3538, 0x5a0a, 0xf98a, 0x0, 0x1);
        gbc.writeMem(0x87a1, { 0x16, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8a11);
        EXPECT(gbc.pc(), 0x87a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a1), 0x16);
        EXPECT(gbc.readMem(0x87a2), 0x63);
        // 16 0087
        gbc.setState(0x7256, 0x9506, 0x8250, 0x2098, 0x77bb, 0x52d3, 0x1, 0x0);
        gbc.writeMem(0x7256, { 0x16, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9506);
        EXPECT(gbc.pc(), 0x7258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0088
        gbc.setState(0x9e8f, 0xf92, 0x40e0, 0x3ca6, 0x8987, 0x148a, 0x0, 0x1);
        gbc.writeMem(0x9e8f, { 0x16, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf92);
        EXPECT(gbc.pc(), 0x9e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8f), 0x16);
        EXPECT(gbc.readMem(0x9e90), 0x56);
        // 16 0089
        gbc.setState(0x9493, 0xfff, 0x2330, 0xbd10, 0xdb28, 0x843d, 0x1, 0x1);
        gbc.writeMem(0x9493, { 0x16, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfff);
        EXPECT(gbc.pc(), 0x9495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9493), 0x16);
        EXPECT(gbc.readMem(0x9494), 0x86);
        // 16 008A
        gbc.setState(0x32a6, 0x3075, 0xdf80, 0xa59a, 0xa8da, 0xcd3c, 0x0, 0x1);
        gbc.writeMem(0x32a6, { 0x16, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3075);
        EXPECT(gbc.pc(), 0x32a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 008B
        gbc.setState(0x3a34, 0xb06b, 0x3d10, 0x5d8c, 0xb561, 0x4aa1, 0x1, 0x0);
        gbc.writeMem(0x3a34, { 0x16, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb06b);
        EXPECT(gbc.pc(), 0x3a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 008C
        gbc.setState(0x244c, 0x3f4a, 0x3a0, 0x7ccc, 0xbade, 0xd478, 0x0, 0x1);
        gbc.writeMem(0x244c, { 0x16, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3f4a);
        EXPECT(gbc.pc(), 0x244e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 008D
        gbc.setState(0x2c65, 0xa27f, 0xf530, 0xdf73, 0x79bb, 0x7a36, 0x0, 0x0);
        gbc.writeMem(0x2c65, { 0x16, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa27f);
        EXPECT(gbc.pc(), 0x2c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 008E
        gbc.setState(0x214a, 0x7ed2, 0x17e0, 0xca40, 0xbe85, 0xf83, 0x0, 0x0);
        gbc.writeMem(0x214a, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7ed2);
        EXPECT(gbc.pc(), 0x214c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 008F
        gbc.setState(0x3bbd, 0xe8b, 0x8560, 0xe8af, 0x1cb8, 0x626d, 0x0, 0x0);
        gbc.writeMem(0x3bbd, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe8b);
        EXPECT(gbc.pc(), 0x3bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0090
        gbc.setState(0xc174, 0x439, 0x3e30, 0xedbf, 0x1ca7, 0x2ad, 0x1, 0x0);
        gbc.writeMem(0xc174, { 0x16, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x439);
        EXPECT(gbc.pc(), 0xc176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc174), 0x16);
        EXPECT(gbc.readMem(0xc175), 0x2e);
        // 16 0091
        gbc.setState(0xca19, 0x49f5, 0x7cf0, 0x8a1e, 0x9de6, 0x8aae, 0x1, 0x1);
        gbc.writeMem(0xca19, { 0x16, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x49f5);
        EXPECT(gbc.pc(), 0xca1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca19), 0x16);
        EXPECT(gbc.readMem(0xca1a), 0x97);
        // 16 0092
        gbc.setState(0x79e2, 0xf4f5, 0x8b00, 0x82e3, 0x2c49, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0x79e2, { 0x16, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf4f5);
        EXPECT(gbc.pc(), 0x79e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0093
        gbc.setState(0x1022, 0xfc54, 0x1c60, 0xb475, 0xf344, 0x662f, 0x1, 0x0);
        gbc.writeMem(0x1022, { 0x16, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0x1024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0094
        gbc.setState(0x2b50, 0x10f0, 0xa5c0, 0x8008, 0x8d2f, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x2b50, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0095
        gbc.setState(0x71b0, 0xa622, 0xaa60, 0xfdd1, 0x2651, 0xbd6a, 0x0, 0x1);
        gbc.writeMem(0x71b0, { 0x16, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa622);
        EXPECT(gbc.pc(), 0x71b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0096
        gbc.setState(0x74ef, 0xf88b, 0xd30, 0x278b, 0xb3d8, 0x5edd, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0x74f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0097
        gbc.setState(0x5818, 0xda0b, 0x2c90, 0x986, 0x93b2, 0x818c, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xda0b);
        EXPECT(gbc.pc(), 0x581a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0098
        gbc.setState(0x9f5b, 0x1f0d, 0x5dd0, 0x805a, 0xbece, 0x2cfb, 0x0, 0x1);
        gbc.writeMem(0x9f5b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1f0d);
        EXPECT(gbc.pc(), 0x9f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5b), 0x16);
        EXPECT(gbc.readMem(0x9f5c), 0xf6);
        // 16 0099
        gbc.setState(0xb6b3, 0xaaa4, 0xc7b0, 0x30d1, 0xab5, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0xb6b3, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaaa4);
        EXPECT(gbc.pc(), 0xb6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b3), 0x16);
        EXPECT(gbc.readMem(0xb6b4), 0x15);
        // 16 009A
        gbc.setState(0x8812, 0x1db9, 0xdb30, 0x7090, 0xef41, 0x8404, 0x1, 0x0);
        gbc.writeMem(0x8812, { 0x16, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1db9);
        EXPECT(gbc.pc(), 0x8814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8812), 0x16);
        EXPECT(gbc.readMem(0x8813), 0x36);
        // 16 009B
        gbc.setState(0x81b5, 0x928c, 0x1ef0, 0x6c83, 0x49e, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x81b5, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x928c);
        EXPECT(gbc.pc(), 0x81b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b5), 0x16);
        EXPECT(gbc.readMem(0x81b6), 0x15);
        // 16 009C
        gbc.setState(0xe0b8, 0x3e0d, 0x69a0, 0x4fd2, 0x2114, 0xa600, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0x16, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3e0d);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b8), 0x16);
        EXPECT(gbc.readMem(0xe0b9), 0xed);
        // 16 009D
        gbc.setState(0xa0e9, 0xc8a0, 0x9c40, 0x1465, 0x8ae3, 0x20ea, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0x16, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc8a0);
        EXPECT(gbc.pc(), 0xa0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e9), 0x16);
        EXPECT(gbc.readMem(0xa0ea), 0x24);
        // 16 009E
        gbc.setState(0x3d0c, 0x1470, 0xf910, 0xb7cc, 0x6260, 0xf1d6, 0x1, 0x0);
        gbc.writeMem(0x3d0c, { 0x16, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1470);
        EXPECT(gbc.pc(), 0x3d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 009F
        gbc.setState(0x2619, 0xa55a, 0xe3e0, 0xc5a3, 0x2f34, 0x118b, 0x0, 0x1);
        gbc.writeMem(0x2619, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa55a);
        EXPECT(gbc.pc(), 0x261b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00A0
        gbc.setState(0x1361, 0xc12c, 0xf860, 0x2078, 0x1bb4, 0x4d64, 0x1, 0x0);
        gbc.writeMem(0x1361, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc12c);
        EXPECT(gbc.pc(), 0x1363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00A1
        gbc.setState(0x4487, 0x55d1, 0xed80, 0xedc8, 0x5d3, 0x1f59, 0x1, 0x0);
        gbc.writeMem(0x4487, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x55d1);
        EXPECT(gbc.pc(), 0x4489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00A2
        gbc.setState(0x704, 0x9ff3, 0xe4a0, 0xe8f2, 0x7576, 0x64bf, 0x1, 0x0);
        gbc.writeMem(0x704, { 0x16, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9ff3);
        EXPECT(gbc.pc(), 0x706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00A3
        gbc.setState(0x3215, 0xe144, 0xc260, 0xc4, 0xb555, 0xd733, 0x0, 0x1);
        gbc.writeMem(0x3215, { 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe144);
        EXPECT(gbc.pc(), 0x3217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00A4
        gbc.setState(0xbdab, 0xa687, 0x2e40, 0x1fb, 0x5006, 0x8181, 0x0, 0x1);
        gbc.writeMem(0xbdab, { 0x16, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa687);
        EXPECT(gbc.pc(), 0xbdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdab), 0x16);
        EXPECT(gbc.readMem(0xbdac), 0x70);
        // 16 00A5
        gbc.setState(0x505a, 0x23ab, 0xdbf0, 0x2777, 0xba21, 0xf546, 0x1, 0x1);
        gbc.writeMem(0x505a, { 0x16, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x23ab);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00A6
        gbc.setState(0xc6eb, 0x8231, 0x8a80, 0xdf33, 0x8d28, 0x81b5, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x16, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8231);
        EXPECT(gbc.pc(), 0xc6ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6eb), 0x16);
        EXPECT(gbc.readMem(0xc6ec), 0x69);
        // 16 00A7
        gbc.setState(0x464a, 0xa940, 0x9810, 0xa09b, 0xcbfa, 0x6638, 0x1, 0x1);
        gbc.writeMem(0x464a, { 0x16, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa940);
        EXPECT(gbc.pc(), 0x464c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00A8
        gbc.setState(0x3c36, 0xba98, 0x8410, 0xaa07, 0x5a0c, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0x3c36, { 0x16, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xba98);
        EXPECT(gbc.pc(), 0x3c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00A9
        gbc.setState(0x2ab9, 0xc8bc, 0x8f70, 0x74fb, 0x9724, 0xca0c, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0x16, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0x2abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00AA
        gbc.setState(0xb83e, 0x5136, 0x830, 0x3a8c, 0x8753, 0x4210, 0x1, 0x1);
        gbc.writeMem(0xb83e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5136);
        EXPECT(gbc.pc(), 0xb840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83e), 0x16);
        EXPECT(gbc.readMem(0xb83f), 0x91);
        // 16 00AB
        gbc.setState(0x37a, 0x8ef2, 0xb020, 0x4367, 0xccc, 0x31ba, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8ef2);
        EXPECT(gbc.pc(), 0x37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00AC
        gbc.setState(0xde2b, 0x1e7, 0x46a0, 0x19d7, 0x674d, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1e7);
        EXPECT(gbc.pc(), 0xde2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2b), 0x16);
        EXPECT(gbc.readMem(0xde2c), 0xc5);
        // 16 00AD
        gbc.setState(0xa111, 0x7be6, 0xde80, 0x7e13, 0x3ee5, 0xf40, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7be6);
        EXPECT(gbc.pc(), 0xa113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa111), 0x16);
        EXPECT(gbc.readMem(0xa112), 0x17);
        // 16 00AE
        gbc.setState(0x8fe9, 0x8df5, 0x3940, 0xe7ab, 0x7b60, 0xcbda, 0x1, 0x0);
        gbc.writeMem(0x8fe9, { 0x16, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8df5);
        EXPECT(gbc.pc(), 0x8feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe9), 0x16);
        EXPECT(gbc.readMem(0x8fea), 0xcf);
        // 16 00AF
        gbc.setState(0x4b92, 0x2841, 0x20, 0xc38e, 0x183b, 0xd7d0, 0x1, 0x1);
        gbc.writeMem(0x4b92, { 0x16, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2841);
        EXPECT(gbc.pc(), 0x4b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00B0
        gbc.setState(0x57d1, 0xd2d1, 0x3a40, 0x9426, 0x90c0, 0x5dcd, 0x0, 0x0);
        gbc.writeMem(0x57d1, { 0x16, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd2d1);
        EXPECT(gbc.pc(), 0x57d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00B1
        gbc.setState(0xd733, 0xbb25, 0xc660, 0x1fe4, 0x9925, 0xedbb, 0x1, 0x1);
        gbc.writeMem(0xd733, { 0x16, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbb25);
        EXPECT(gbc.pc(), 0xd735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd733), 0x16);
        EXPECT(gbc.readMem(0xd734), 0x3a);
        // 16 00B2
        gbc.setState(0xd268, 0x9929, 0xf380, 0x6f11, 0xc7cb, 0x6454, 0x1, 0x0);
        gbc.writeMem(0xd268, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9929);
        EXPECT(gbc.pc(), 0xd26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd268), 0x16);
        EXPECT(gbc.readMem(0xd269), 0xe0);
        // 16 00B3
        gbc.setState(0xd278, 0x8fc5, 0xe3b0, 0x81f4, 0x34a6, 0xf61d, 0x0, 0x1);
        gbc.writeMem(0xd278, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8fc5);
        EXPECT(gbc.pc(), 0xd27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd278), 0x16);
        EXPECT(gbc.readMem(0xd279), 0x9b);
        // 16 00B4
        gbc.setState(0x3a5a, 0x4834, 0x5da0, 0x89e7, 0x63c5, 0xd735, 0x1, 0x1);
        gbc.writeMem(0x3a5a, { 0x16, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4834);
        EXPECT(gbc.pc(), 0x3a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00B5
        gbc.setState(0x41f3, 0xca21, 0xf6a0, 0x2185, 0xef1, 0xc2f4, 0x1, 0x0);
        gbc.writeMem(0x41f3, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xca21);
        EXPECT(gbc.pc(), 0x41f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00B6
        gbc.setState(0xa4c, 0xb58, 0x7980, 0xbbc7, 0x6d2e, 0x2465, 0x1, 0x1);
        gbc.writeMem(0xa4c, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0xa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00B7
        gbc.setState(0xd2d, 0x9b0e, 0x61b0, 0x744, 0xfd04, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0xd2d, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9b0e);
        EXPECT(gbc.pc(), 0xd2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00B8
        gbc.setState(0x723e, 0x46a0, 0x8430, 0x3397, 0xd01d, 0x272d, 0x1, 0x0);
        gbc.writeMem(0x723e, { 0x16, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x46a0);
        EXPECT(gbc.pc(), 0x7240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00B9
        gbc.setState(0x790, 0x6161, 0x1700, 0x3b27, 0xccdc, 0x139c, 0x0, 0x0);
        gbc.writeMem(0x790, { 0x16, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6161);
        EXPECT(gbc.pc(), 0x792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00BA
        gbc.setState(0xd177, 0xc793, 0x8230, 0x4409, 0x98f5, 0x3f06, 0x1, 0x0);
        gbc.writeMem(0xd177, { 0x16, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc793);
        EXPECT(gbc.pc(), 0xd179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd177), 0x16);
        EXPECT(gbc.readMem(0xd178), 0x55);
        // 16 00BB
        gbc.setState(0x2b4a, 0x68d0, 0x3020, 0x7d7d, 0x9fd6, 0xd21a, 0x0, 0x0);
        gbc.writeMem(0x2b4a, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x68d0);
        EXPECT(gbc.pc(), 0x2b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00BC
        gbc.setState(0xee66, 0x3af2, 0x3ac0, 0xb1e9, 0xe188, 0xb5f5, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0x16, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3af2);
        EXPECT(gbc.pc(), 0xee68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee66), 0x16);
        EXPECT(gbc.readMem(0xee67), 0xfd);
        // 16 00BE
        gbc.setState(0xef49, 0xde3e, 0x8e80, 0x2fa1, 0x7b0c, 0x5c8d, 0x0, 0x0);
        gbc.writeMem(0xef49, { 0x16, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xde3e);
        EXPECT(gbc.pc(), 0xef4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef49), 0x16);
        EXPECT(gbc.readMem(0xef4a), 0x5f);
        // 16 00BF
        gbc.setState(0x5061, 0x7ef1, 0xca30, 0xf08, 0x605a, 0x2ccc, 0x1, 0x0);
        gbc.writeMem(0x5061, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7ef1);
        EXPECT(gbc.pc(), 0x5063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00C1
        gbc.setState(0x94e4, 0x1942, 0xe460, 0xf461, 0x758d, 0x1f96, 0x0, 0x0);
        gbc.writeMem(0x94e4, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1942);
        EXPECT(gbc.pc(), 0x94e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e4), 0x16);
        EXPECT(gbc.readMem(0x94e5), 0xa6);
        // 16 00C2
        gbc.setState(0x5b4b, 0x7cfb, 0x2ce0, 0xccea, 0x7de2, 0x7336, 0x0, 0x1);
        gbc.writeMem(0x5b4b, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7cfb);
        EXPECT(gbc.pc(), 0x5b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00C3
        gbc.setState(0xbff8, 0x478c, 0x9b90, 0x4a3a, 0xa2b1, 0x2a54, 0x1, 0x0);
        gbc.writeMem(0xbff8, { 0x16, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0xbffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff8), 0x16);
        EXPECT(gbc.readMem(0xbff9), 0xef);
        // 16 00C4
        gbc.setState(0x4fd3, 0x40f4, 0x2c70, 0x317b, 0x17c2, 0xff0c, 0x0, 0x0);
        gbc.writeMem(0x4fd3, { 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x40f4);
        EXPECT(gbc.pc(), 0x4fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00C5
        gbc.setState(0xc780, 0x7d7c, 0x4550, 0xa530, 0x36f0, 0xf204, 0x1, 0x0);
        gbc.writeMem(0xc780, { 0x16, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7d7c);
        EXPECT(gbc.pc(), 0xc782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc780), 0x16);
        EXPECT(gbc.readMem(0xc781), 0x26);
        // 16 00C6
        gbc.setState(0x1c8e, 0xaf15, 0xc010, 0x1997, 0x37a0, 0xbf76, 0x1, 0x0);
        gbc.writeMem(0x1c8e, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xaf15);
        EXPECT(gbc.pc(), 0x1c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00C7
        gbc.setState(0x4847, 0x2392, 0xdf80, 0x7ca5, 0xbcd0, 0x88e6, 0x0, 0x1);
        gbc.writeMem(0x4847, { 0x16, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0x4849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00C8
        gbc.setState(0x85bd, 0x76d5, 0xb6b0, 0xaf33, 0x831e, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0x16, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x76d5);
        EXPECT(gbc.pc(), 0x85bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85bd), 0x16);
        EXPECT(gbc.readMem(0x85be), 0x24);
        // 16 00C9
        gbc.setState(0xdd39, 0x2b6f, 0x8480, 0x5b77, 0x51e2, 0xba44, 0x1, 0x1);
        gbc.writeMem(0xdd39, { 0x16, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2b6f);
        EXPECT(gbc.pc(), 0xdd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd39), 0x16);
        EXPECT(gbc.readMem(0xdd3a), 0x56);
        // 16 00CA
        gbc.setState(0xdac2, 0xfde0, 0x4e10, 0x5d12, 0x60ce, 0xc199, 0x0, 0x1);
        gbc.writeMem(0xdac2, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfde0);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac2), 0x16);
        EXPECT(gbc.readMem(0xdac3), 0x60);
        // 16 00CB
        gbc.setState(0xd30b, 0x7ffe, 0x3c70, 0x59c8, 0xf92d, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0xd30b, { 0x16, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7ffe);
        EXPECT(gbc.pc(), 0xd30d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30b), 0x16);
        EXPECT(gbc.readMem(0xd30c), 0x14);
        // 16 00CC
        gbc.setState(0x3dbf, 0x3add, 0x5f0, 0xf0d9, 0x7633, 0x2f56, 0x1, 0x1);
        gbc.writeMem(0x3dbf, { 0x16, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x3add);
        EXPECT(gbc.pc(), 0x3dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00CD
        gbc.setState(0x42e7, 0x55a8, 0x89d0, 0x6f50, 0x7c0, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0x42e7, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x55a8);
        EXPECT(gbc.pc(), 0x42e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00CE
        gbc.setState(0x734a, 0x16ce, 0x1b90, 0xa94a, 0xec5f, 0x7069, 0x1, 0x1);
        gbc.writeMem(0x734a, { 0x16, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x16ce);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00CF
        gbc.setState(0x2f4, 0x9c58, 0x4550, 0xeb6d, 0x81ec, 0x4296, 0x0, 0x0);
        gbc.writeMem(0x2f4, { 0x16, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9c58);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00D0
        gbc.setState(0xeeb9, 0xec5b, 0x3520, 0x3082, 0x7b2a, 0x8ab0, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xec5b);
        EXPECT(gbc.pc(), 0xeebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb9), 0x16);
        EXPECT(gbc.readMem(0xeeba), 0xc4);
        // 16 00D1
        gbc.setState(0x8e99, 0xd869, 0xb190, 0x6b2b, 0x9aed, 0xbdf8, 0x0, 0x1);
        gbc.writeMem(0x8e99, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0x8e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e99), 0x16);
        EXPECT(gbc.readMem(0x8e9a), 0xf9);
        // 16 00D2
        gbc.setState(0x6159, 0x1817, 0xc2c0, 0xcc35, 0xefda, 0x4950, 0x1, 0x1);
        gbc.writeMem(0x6159, { 0x16, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1817);
        EXPECT(gbc.pc(), 0x615b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00D3
        gbc.setState(0xc8e8, 0x994c, 0x4190, 0x340b, 0x63c4, 0xdbc9, 0x0, 0x1);
        gbc.writeMem(0xc8e8, { 0x16, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x994c);
        EXPECT(gbc.pc(), 0xc8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e8), 0x16);
        EXPECT(gbc.readMem(0xc8e9), 0xec);
        // 16 00D4
        gbc.setState(0x47eb, 0x9d11, 0x49e0, 0x25ce, 0x21cd, 0xb9fe, 0x0, 0x1);
        gbc.writeMem(0x47eb, { 0x16, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9d11);
        EXPECT(gbc.pc(), 0x47ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00D5
        gbc.setState(0x9550, 0x47fd, 0x23d0, 0x7d1e, 0x30c3, 0x59be, 0x0, 0x1);
        gbc.writeMem(0x9550, { 0x16, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x47fd);
        EXPECT(gbc.pc(), 0x9552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9550), 0x16);
        EXPECT(gbc.readMem(0x9551), 0xde);
        // 16 00D6
        gbc.setState(0xbd9a, 0xf578, 0xc520, 0xc80f, 0x8422, 0xa58c, 0x1, 0x0);
        gbc.writeMem(0xbd9a, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf578);
        EXPECT(gbc.pc(), 0xbd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9a), 0x16);
        EXPECT(gbc.readMem(0xbd9b), 0xa5);
        // 16 00D7
        gbc.setState(0x1531, 0x5eda, 0x2d00, 0xb876, 0x206b, 0x44e9, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0x16, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5eda);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00D8
        gbc.setState(0x5f7c, 0x996f, 0x9560, 0xd054, 0x4c44, 0x6de1, 0x1, 0x0);
        gbc.writeMem(0x5f7c, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x996f);
        EXPECT(gbc.pc(), 0x5f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00D9
        gbc.setState(0x9d70, 0xaaf7, 0x3580, 0xc404, 0x43e1, 0xeb04, 0x0, 0x0);
        gbc.writeMem(0x9d70, { 0x16, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xaaf7);
        EXPECT(gbc.pc(), 0x9d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d70), 0x16);
        EXPECT(gbc.readMem(0x9d71), 0x3c);
        // 16 00DA
        gbc.setState(0x1804, 0x590, 0xe1d0, 0x3098, 0x93da, 0xf18f, 0x1, 0x0);
        gbc.writeMem(0x1804, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x590);
        EXPECT(gbc.pc(), 0x1806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00DB
        gbc.setState(0x80e0, 0x5702, 0xb210, 0xb1b2, 0x9d8, 0xbec5, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0x16, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5702);
        EXPECT(gbc.pc(), 0x80e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e0), 0x16);
        EXPECT(gbc.readMem(0x80e1), 0x30);
        // 16 00DC
        gbc.setState(0x9579, 0x290d, 0x7460, 0x890a, 0x6028, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0x9579, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x290d);
        EXPECT(gbc.pc(), 0x957b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9579), 0x16);
        EXPECT(gbc.readMem(0x957a), 0xd);
        // 16 00DD
        gbc.setState(0xebfe, 0x387c, 0xe630, 0xf0aa, 0x892a, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0xebfe, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x387c);
        EXPECT(gbc.pc(), 0xec00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfe), 0x16);
        EXPECT(gbc.readMem(0xebff), 0x6e);
        // 16 00DE
        gbc.setState(0x930b, 0x23a7, 0xc4e0, 0x9a4f, 0x3411, 0xd6da, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x23a7);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930b), 0x16);
        EXPECT(gbc.readMem(0x930c), 0xb0);
        // 16 00DF
        gbc.setState(0x666f, 0x2685, 0x3f70, 0xc282, 0xb586, 0x539f, 0x1, 0x1);
        gbc.writeMem(0x666f, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2685);
        EXPECT(gbc.pc(), 0x6671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00E0
        gbc.setState(0xe307, 0x83ee, 0x4590, 0x5ac3, 0x6e82, 0x8827, 0x0, 0x1);
        gbc.writeMem(0xe307, { 0x16, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x83ee);
        EXPECT(gbc.pc(), 0xe309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe307), 0x16);
        EXPECT(gbc.readMem(0xe308), 0x8c);
        // 16 00E1
        gbc.setState(0xdcc0, 0x6f6a, 0x8c60, 0x8b73, 0xf76e, 0xee7d, 0x1, 0x1);
        gbc.writeMem(0xdcc0, { 0x16, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6f6a);
        EXPECT(gbc.pc(), 0xdcc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc0), 0x16);
        EXPECT(gbc.readMem(0xdcc1), 0x18);
        // 16 00E2
        gbc.setState(0xc6a, 0x3079, 0xb290, 0x6036, 0xdf44, 0x4bae, 0x0, 0x0);
        gbc.writeMem(0xc6a, { 0x16, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0xc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00E3
        gbc.setState(0x34df, 0x836a, 0x2ca0, 0xe8b1, 0x86a2, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x34df, { 0x16, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x836a);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00E4
        gbc.setState(0x72b7, 0x5182, 0xd9b0, 0xbd5d, 0x5bc5, 0xd073, 0x0, 0x1);
        gbc.writeMem(0x72b7, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5182);
        EXPECT(gbc.pc(), 0x72b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00E7
        gbc.setState(0xd36f, 0x7979, 0x380, 0x2028, 0xd2b4, 0xea55, 0x0, 0x0);
        gbc.writeMem(0xd36f, { 0x16, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7979);
        EXPECT(gbc.pc(), 0xd371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36f), 0x16);
        EXPECT(gbc.readMem(0xd370), 0x55);
        // 16 00E9
        gbc.setState(0x433b, 0xdde1, 0xe800, 0x2876, 0xd572, 0x26a9, 0x0, 0x1);
        gbc.writeMem(0x433b, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdde1);
        EXPECT(gbc.pc(), 0x433d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00EA
        gbc.setState(0xc533, 0x6fa8, 0xddb0, 0xb1a4, 0xf6e3, 0x836b, 0x0, 0x0);
        gbc.writeMem(0xc533, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6fa8);
        EXPECT(gbc.pc(), 0xc535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc533), 0x16);
        EXPECT(gbc.readMem(0xc534), 0xc8);
        // 16 00EB
        gbc.setState(0xaed9, 0xd98e, 0xf20, 0x771, 0x1e59, 0xf4b6, 0x1, 0x0);
        gbc.writeMem(0xaed9, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd98e);
        EXPECT(gbc.pc(), 0xaedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed9), 0x16);
        EXPECT(gbc.readMem(0xaeda), 0xa4);
        // 16 00EC
        gbc.setState(0xd5dd, 0xad4c, 0xf8d0, 0x21fc, 0x13c1, 0xead2, 0x0, 0x0);
        gbc.writeMem(0xd5dd, { 0x16, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xad4c);
        EXPECT(gbc.pc(), 0xd5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5dd), 0x16);
        EXPECT(gbc.readMem(0xd5de), 0xde);
        // 16 00ED
        gbc.setState(0x853b, 0x72c3, 0x2560, 0x2d89, 0xacef, 0xeee3, 0x1, 0x1);
        gbc.writeMem(0x853b, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x72c3);
        EXPECT(gbc.pc(), 0x853d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853b), 0x16);
        EXPECT(gbc.readMem(0x853c), 0x1d);
        // 16 00EE
        gbc.setState(0x4f54, 0x8958, 0x1330, 0x7c61, 0x1f2, 0x692f, 0x0, 0x0);
        gbc.writeMem(0x4f54, { 0x16, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8958);
        EXPECT(gbc.pc(), 0x4f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00EF
        gbc.setState(0x7a17, 0xc9e4, 0x500, 0xf44c, 0xf31d, 0xdf4e, 0x1, 0x0);
        gbc.writeMem(0x7a17, { 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc9e4);
        EXPECT(gbc.pc(), 0x7a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00F0
        gbc.setState(0x8bcf, 0x1915, 0x1fc0, 0xc226, 0xe2a8, 0x4cd2, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1915);
        EXPECT(gbc.pc(), 0x8bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bcf), 0x16);
        EXPECT(gbc.readMem(0x8bd0), 0xf9);
        // 16 00F1
        gbc.setState(0x49c6, 0x8fe5, 0x9b00, 0x93f6, 0x5d85, 0xe5c, 0x0, 0x1);
        gbc.writeMem(0x49c6, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8fe5);
        EXPECT(gbc.pc(), 0x49c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00F2
        gbc.setState(0x16c6, 0x5920, 0x3cc0, 0x42c7, 0xe814, 0xd83f, 0x0, 0x0);
        gbc.writeMem(0x16c6, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5920);
        EXPECT(gbc.pc(), 0x16c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00F3
        gbc.setState(0xb567, 0xc7ad, 0x9280, 0x5a3e, 0x7593, 0xeca9, 0x1, 0x1);
        gbc.writeMem(0xb567, { 0x16, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc7ad);
        EXPECT(gbc.pc(), 0xb569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb567), 0x16);
        EXPECT(gbc.readMem(0xb568), 0xfc);
        // 16 00F4
        gbc.setState(0xbe3, 0x95aa, 0x8f80, 0xc05a, 0x470a, 0x7145, 0x0, 0x1);
        gbc.writeMem(0xbe3, { 0x16, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x95aa);
        EXPECT(gbc.pc(), 0xbe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00F5
        gbc.setState(0x53d0, 0xafd3, 0xe7b0, 0x4d9f, 0xd2cd, 0xd8d5, 0x1, 0x0);
        gbc.writeMem(0x53d0, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xafd3);
        EXPECT(gbc.pc(), 0x53d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 00F6
        gbc.setState(0x15b9, 0x665a, 0xb550, 0x2372, 0xc5ff, 0x95cc, 0x0, 0x0);
        gbc.writeMem(0x15b9, { 0x16, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x665a);
        EXPECT(gbc.pc(), 0x15bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00F8
        gbc.setState(0x87e3, 0xb4, 0x9940, 0x6a67, 0x4803, 0x9530, 0x1, 0x0);
        gbc.writeMem(0x87e3, { 0x16, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb4);
        EXPECT(gbc.pc(), 0x87e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e3), 0x16);
        EXPECT(gbc.readMem(0x87e4), 0x6f);
        // 16 00F9
        gbc.setState(0x55bd, 0xaed7, 0xf4c0, 0xdcb3, 0xeab6, 0xa31f, 0x1, 0x1);
        gbc.writeMem(0x55bd, { 0x16, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xaed7);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 00FA
        gbc.setState(0xcc04, 0xe153, 0xfe20, 0xbf9e, 0xae0b, 0x32cc, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0x16, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe153);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc04), 0x16);
        EXPECT(gbc.readMem(0xcc05), 0x62);
        // 16 00FB
        gbc.setState(0xdee2, 0x3876, 0x4080, 0xb027, 0xae26, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0xdee2, { 0x16, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3876);
        EXPECT(gbc.pc(), 0xdee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee2), 0x16);
        EXPECT(gbc.readMem(0xdee3), 0x98);
        // 16 00FC
        gbc.setState(0xd2b6, 0xef62, 0xba40, 0xa5b5, 0xcfca, 0x817d, 0x1, 0x1);
        gbc.writeMem(0xd2b6, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xef62);
        EXPECT(gbc.pc(), 0xd2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b6), 0x16);
        EXPECT(gbc.readMem(0xd2b7), 0x60);
        // 16 00FD
        gbc.setState(0xfd0, 0xeb7d, 0xfe10, 0xb49a, 0xfe75, 0x4b79, 0x1, 0x0);
        gbc.writeMem(0xfd0, { 0x16, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xeb7d);
        EXPECT(gbc.pc(), 0xfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 00FE
        gbc.setState(0x7cd4, 0xd234, 0xcf20, 0x845e, 0x9b29, 0x6876, 0x1, 0x0);
        gbc.writeMem(0x7cd4, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd234);
        EXPECT(gbc.pc(), 0x7cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 00FF
        gbc.setState(0x75c1, 0xde57, 0xab20, 0xb514, 0x7c54, 0x9e7f, 0x1, 0x0);
        gbc.writeMem(0x75c1, { 0x16, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xde57);
        EXPECT(gbc.pc(), 0x75c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0100
        gbc.setState(0x986d, 0x4ec4, 0xee30, 0x4444, 0xbfde, 0xf8b5, 0x1, 0x0);
        gbc.writeMem(0x986d, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4ec4);
        EXPECT(gbc.pc(), 0x986f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986d), 0x16);
        EXPECT(gbc.readMem(0x986e), 0xb7);
        // 16 0101
        gbc.setState(0xab19, 0xe087, 0x9410, 0xdb9b, 0x6203, 0x6ae6, 0x0, 0x0);
        gbc.writeMem(0xab19, { 0x16, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe087);
        EXPECT(gbc.pc(), 0xab1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab19), 0x16);
        EXPECT(gbc.readMem(0xab1a), 0x68);
        // 16 0102
        gbc.setState(0x4a14, 0x1ff2, 0x4460, 0xcbe, 0xa3ca, 0x324, 0x1, 0x0);
        gbc.writeMem(0x4a14, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1ff2);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0103
        gbc.setState(0x185c, 0x519e, 0x65a0, 0xc274, 0x8462, 0xb8ba, 0x1, 0x1);
        gbc.writeMem(0x185c, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x519e);
        EXPECT(gbc.pc(), 0x185e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0104
        gbc.setState(0xca6, 0xd43e, 0xf8c0, 0x7743, 0x19f2, 0x4273, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0x16, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0xca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0105
        gbc.setState(0xa5f9, 0x59fa, 0x18e0, 0x4b0f, 0x3c93, 0x5923, 0x0, 0x0);
        gbc.writeMem(0xa5f9, { 0x16, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x59fa);
        EXPECT(gbc.pc(), 0xa5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f9), 0x16);
        EXPECT(gbc.readMem(0xa5fa), 0xba);
        // 16 0106
        gbc.setState(0xb259, 0x6b32, 0x5320, 0xe708, 0x4d0, 0x2240, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6b32);
        EXPECT(gbc.pc(), 0xb25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb259), 0x16);
        EXPECT(gbc.readMem(0xb25a), 0xda);
        // 16 0107
        gbc.setState(0xd26c, 0x7657, 0x5cd0, 0x6b8f, 0x9123, 0x31cc, 0x1, 0x1);
        gbc.writeMem(0xd26c, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7657);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26c), 0x16);
        EXPECT(gbc.readMem(0xd26d), 0xe7);
        // 16 0108
        gbc.setState(0xe9f7, 0x5910, 0x990, 0x9834, 0xbe5d, 0xda8a, 0x1, 0x0);
        gbc.writeMem(0xe9f7, { 0x16, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5910);
        EXPECT(gbc.pc(), 0xe9f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f7), 0x16);
        EXPECT(gbc.readMem(0xe9f8), 0x56);
        // 16 0109
        gbc.setState(0x53be, 0x3d97, 0xbee0, 0xd01e, 0x2f64, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3d97);
        EXPECT(gbc.pc(), 0x53c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 010A
        gbc.setState(0x3f7e, 0xf227, 0x9b60, 0xa482, 0xc359, 0x33f9, 0x0, 0x1);
        gbc.writeMem(0x3f7e, { 0x16, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf227);
        EXPECT(gbc.pc(), 0x3f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 010B
        gbc.setState(0xa259, 0x2476, 0xff50, 0x3493, 0x682f, 0xf4, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0x16, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2476);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0x16);
        EXPECT(gbc.readMem(0xa25a), 0x40);
        // 16 010C
        gbc.setState(0xc12, 0x3e90, 0x4de0, 0x2827, 0x169, 0xea7, 0x0, 0x1);
        gbc.writeMem(0xc12, { 0x16, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3e90);
        EXPECT(gbc.pc(), 0xc14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 010D
        gbc.setState(0x26e7, 0x5576, 0xbc70, 0xde78, 0x9df4, 0x47, 0x0, 0x1);
        gbc.writeMem(0x26e7, { 0x16, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5576);
        EXPECT(gbc.pc(), 0x26e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 010E
        gbc.setState(0x8f77, 0xc3bb, 0xb220, 0xaf00, 0x79a8, 0x98fd, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0x16, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f77), 0x16);
        EXPECT(gbc.readMem(0x8f78), 0x13);
        // 16 010F
        gbc.setState(0xcab0, 0xed92, 0x3d10, 0x40b2, 0x713a, 0xba00, 0x0, 0x0);
        gbc.writeMem(0xcab0, { 0x16, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xed92);
        EXPECT(gbc.pc(), 0xcab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab0), 0x16);
        EXPECT(gbc.readMem(0xcab1), 0x8f);
        // 16 0110
        gbc.setState(0xb8d9, 0x9991, 0x6490, 0x40df, 0x2199, 0xd5d6, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9991);
        EXPECT(gbc.pc(), 0xb8db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d9), 0x16);
        EXPECT(gbc.readMem(0xb8da), 0xb9);
        // 16 0111
        gbc.setState(0x335d, 0x8289, 0x90b0, 0x1fae, 0xac47, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0x335d, { 0x16, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8289);
        EXPECT(gbc.pc(), 0x335f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0112
        gbc.setState(0x3236, 0x6f07, 0x6340, 0xfc08, 0xc5b8, 0x757, 0x0, 0x1);
        gbc.writeMem(0x3236, { 0x16, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6f07);
        EXPECT(gbc.pc(), 0x3238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0114
        gbc.setState(0x7f9f, 0x801e, 0x780, 0x4eb6, 0xe03d, 0x1ead, 0x0, 0x0);
        gbc.writeMem(0x7f9f, { 0x16, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x801e);
        EXPECT(gbc.pc(), 0x7fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0115
        gbc.setState(0x932b, 0xdedc, 0x1710, 0x1126, 0xaed5, 0x833e, 0x1, 0x1);
        gbc.writeMem(0x932b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdedc);
        EXPECT(gbc.pc(), 0x932d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932b), 0x16);
        EXPECT(gbc.readMem(0x932c), 0xf6);
        // 16 0118
        gbc.setState(0xa0fb, 0xbd1d, 0x6290, 0xb034, 0xf6f3, 0x21c7, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0x16, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbd1d);
        EXPECT(gbc.pc(), 0xa0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0fb), 0x16);
        EXPECT(gbc.readMem(0xa0fc), 0x45);
        // 16 0119
        gbc.setState(0x6a9d, 0xfd6, 0xcd60, 0xb21e, 0xd8c, 0x7e54, 0x0, 0x1);
        gbc.writeMem(0x6a9d, { 0x16, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfd6);
        EXPECT(gbc.pc(), 0x6a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 011A
        gbc.setState(0x1bb6, 0xf64f, 0x8270, 0x4fae, 0x2554, 0x2db, 0x1, 0x1);
        gbc.writeMem(0x1bb6, { 0x16, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf64f);
        EXPECT(gbc.pc(), 0x1bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 011B
        gbc.setState(0x48ce, 0x5cb8, 0xc290, 0xc6d, 0x8950, 0xaead, 0x1, 0x0);
        gbc.writeMem(0x48ce, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5cb8);
        EXPECT(gbc.pc(), 0x48d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 011C
        gbc.setState(0x151f, 0xd7d1, 0xd4a0, 0x9370, 0xe460, 0x852, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0x16, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd7d1);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 011D
        gbc.setState(0xcdc9, 0xa1c7, 0x85c0, 0x9997, 0xa622, 0x1cb, 0x1, 0x0);
        gbc.writeMem(0xcdc9, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa1c7);
        EXPECT(gbc.pc(), 0xcdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc9), 0x16);
        EXPECT(gbc.readMem(0xcdca), 0x9b);
        // 16 011E
        gbc.setState(0x8ea6, 0x9b43, 0xd950, 0x9615, 0x8244, 0xbf5, 0x0, 0x1);
        gbc.writeMem(0x8ea6, { 0x16, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9b43);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea6), 0x16);
        EXPECT(gbc.readMem(0x8ea7), 0xfb);
        // 16 011F
        gbc.setState(0x7d90, 0x3bed, 0xc130, 0xa98f, 0xcc39, 0x5ac1, 0x0, 0x1);
        gbc.writeMem(0x7d90, { 0x16, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3bed);
        EXPECT(gbc.pc(), 0x7d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0120
        gbc.setState(0xd787, 0xba5, 0x4d80, 0x8799, 0xf2ac, 0xc9c1, 0x1, 0x0);
        gbc.writeMem(0xd787, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xba5);
        EXPECT(gbc.pc(), 0xd789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd787), 0x16);
        EXPECT(gbc.readMem(0xd788), 0x5b);
        // 16 0121
        gbc.setState(0x6462, 0xd94f, 0x7990, 0xc15e, 0x3c88, 0x78b6, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd94f);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0122
        gbc.setState(0x6742, 0xa56f, 0x9550, 0xeae, 0xd9e8, 0xc0e6, 0x0, 0x1);
        gbc.writeMem(0x6742, { 0x16, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa56f);
        EXPECT(gbc.pc(), 0x6744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0123
        gbc.setState(0xa5f, 0x9394, 0x16e0, 0xafeb, 0x6fc3, 0x200c, 0x0, 0x1);
        gbc.writeMem(0xa5f, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9394);
        EXPECT(gbc.pc(), 0xa61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0124
        gbc.setState(0x3d7e, 0xa542, 0xbf90, 0x9af5, 0xbb0f, 0x965, 0x0, 0x0);
        gbc.writeMem(0x3d7e, { 0x16, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa542);
        EXPECT(gbc.pc(), 0x3d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0125
        gbc.setState(0x6d15, 0x6dad, 0x2cc0, 0xcc51, 0xc7fd, 0xbef, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0x16, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6dad);
        EXPECT(gbc.pc(), 0x6d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0126
        gbc.setState(0xbaea, 0x44b1, 0xa660, 0xf768, 0x6ab8, 0x2bc2, 0x0, 0x1);
        gbc.writeMem(0xbaea, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x44b1);
        EXPECT(gbc.pc(), 0xbaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaea), 0x16);
        EXPECT(gbc.readMem(0xbaeb), 0xf7);
        // 16 0129
        gbc.setState(0xcd50, 0x2d74, 0x9f20, 0xfaa3, 0x894a, 0x7bbf, 0x1, 0x1);
        gbc.writeMem(0xcd50, { 0x16, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2d74);
        EXPECT(gbc.pc(), 0xcd52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd50), 0x16);
        EXPECT(gbc.readMem(0xcd51), 0xf);
        // 16 012A
        gbc.setState(0xc93e, 0xe32, 0xc0a0, 0x1de6, 0x1bf9, 0x543d, 0x0, 0x1);
        gbc.writeMem(0xc93e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe32);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93e), 0x16);
        EXPECT(gbc.readMem(0xc93f), 0x91);
        // 16 012B
        gbc.setState(0x7305, 0x3c90, 0xacd0, 0x6159, 0xf9df, 0xb43e, 0x1, 0x1);
        gbc.writeMem(0x7305, { 0x16, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3c90);
        EXPECT(gbc.pc(), 0x7307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 012C
        gbc.setState(0xb028, 0x28e2, 0xd80, 0xc3f6, 0x78b4, 0xdd46, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0x16, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0xb02a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb028), 0x16);
        EXPECT(gbc.readMem(0xb029), 0x73);
        // 16 012D
        gbc.setState(0x34f2, 0x3842, 0xdc40, 0x4cca, 0xf62b, 0x6376, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3842);
        EXPECT(gbc.pc(), 0x34f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 012E
        gbc.setState(0x459b, 0xc444, 0xd910, 0x8b2d, 0x25d1, 0x24c7, 0x0, 0x0);
        gbc.writeMem(0x459b, { 0x16, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 012F
        gbc.setState(0x8a8a, 0xa58, 0xd070, 0xd1e0, 0xefe8, 0x5096, 0x0, 0x0);
        gbc.writeMem(0x8a8a, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa58);
        EXPECT(gbc.pc(), 0x8a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8a), 0x16);
        EXPECT(gbc.readMem(0x8a8b), 0x1e);
        // 16 0130
        gbc.setState(0x36f3, 0x696, 0x9fa0, 0x8040, 0xd505, 0x4694, 0x1, 0x0);
        gbc.writeMem(0x36f3, { 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x696);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0132
        gbc.setState(0x4e77, 0x2228, 0x3c20, 0x74be, 0x230f, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x4e77, { 0x16, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2228);
        EXPECT(gbc.pc(), 0x4e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0133
        gbc.setState(0xbaa5, 0x3442, 0x7f80, 0x81ef, 0xd1b1, 0x5873, 0x1, 0x1);
        gbc.writeMem(0xbaa5, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3442);
        EXPECT(gbc.pc(), 0xbaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa5), 0x16);
        EXPECT(gbc.readMem(0xbaa6), 0xb6);
        // 16 0135
        gbc.setState(0x496d, 0x8095, 0x6300, 0xa8e1, 0x44ae, 0xb4aa, 0x1, 0x1);
        gbc.writeMem(0x496d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8095);
        EXPECT(gbc.pc(), 0x496f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0136
        gbc.setState(0x10d7, 0xc16, 0x5570, 0x5f82, 0xf90f, 0x10d4, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0x16, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc16);
        EXPECT(gbc.pc(), 0x10d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0138
        gbc.setState(0xc973, 0x3534, 0xc30, 0x9729, 0xbd64, 0x2228, 0x1, 0x0);
        gbc.writeMem(0xc973, { 0x16, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3534);
        EXPECT(gbc.pc(), 0xc975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc973), 0x16);
        EXPECT(gbc.readMem(0xc974), 0xee);
        // 16 0139
        gbc.setState(0xbaa1, 0x2b68, 0xd100, 0x635b, 0xa5a8, 0xbdd1, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0x16, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2b68);
        EXPECT(gbc.pc(), 0xbaa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa1), 0x16);
        EXPECT(gbc.readMem(0xbaa2), 0x43);
        // 16 013A
        gbc.setState(0x8a82, 0x4565, 0xdcf0, 0x37b2, 0x2190, 0xf506, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x16, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4565);
        EXPECT(gbc.pc(), 0x8a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a82), 0x16);
        EXPECT(gbc.readMem(0x8a83), 0x61);
        // 16 013B
        gbc.setState(0xb9b5, 0xf4d1, 0x30c0, 0x7ec2, 0xe5b4, 0x152d, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0x16, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x16);
        EXPECT(gbc.readMem(0xb9b6), 0x62);
        // 16 013C
        gbc.setState(0x3e10, 0x8e9c, 0xcd10, 0x3bb3, 0x1040, 0x71e2, 0x0, 0x0);
        gbc.writeMem(0x3e10, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8e9c);
        EXPECT(gbc.pc(), 0x3e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 013D
        gbc.setState(0x697, 0x981b, 0xedc0, 0x7330, 0x9699, 0x8993, 0x0, 0x1);
        gbc.writeMem(0x697, { 0x16, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x981b);
        EXPECT(gbc.pc(), 0x699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 013E
        gbc.setState(0x44b2, 0x14fc, 0x3410, 0xf9a6, 0xf175, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x44b2, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x14fc);
        EXPECT(gbc.pc(), 0x44b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 013F
        gbc.setState(0x1b51, 0x96bd, 0xfff0, 0x65dd, 0x1274, 0x8e56, 0x1, 0x0);
        gbc.writeMem(0x1b51, { 0x16, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x96bd);
        EXPECT(gbc.pc(), 0x1b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0140
        gbc.setState(0x6080, 0xe827, 0x3a90, 0x24ac, 0x2405, 0x212e, 0x0, 0x0);
        gbc.writeMem(0x6080, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe827);
        EXPECT(gbc.pc(), 0x6082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0141
        gbc.setState(0x49bc, 0xb034, 0xab80, 0xb881, 0x49bb, 0x3ee2, 0x0, 0x1);
        gbc.writeMem(0x49bc, { 0x16, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb034);
        EXPECT(gbc.pc(), 0x49be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0142
        gbc.setState(0x7967, 0x4f0f, 0xd450, 0x723, 0xc66, 0xa468, 0x0, 0x1);
        gbc.writeMem(0x7967, { 0x16, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4f0f);
        EXPECT(gbc.pc(), 0x7969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0143
        gbc.setState(0xe379, 0x1178, 0xb160, 0x771e, 0xb165, 0xcb26, 0x0, 0x1);
        gbc.writeMem(0xe379, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1178);
        EXPECT(gbc.pc(), 0xe37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe379), 0x16);
        EXPECT(gbc.readMem(0xe37a), 0xcb);
        // 16 0144
        gbc.setState(0x925b, 0x3740, 0x830, 0xbe6c, 0xdaf4, 0x7637, 0x0, 0x1);
        gbc.writeMem(0x925b, { 0x16, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0x925d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925b), 0x16);
        EXPECT(gbc.readMem(0x925c), 0x0);
        // 16 0145
        gbc.setState(0xb08c, 0x8f4, 0x5010, 0x1591, 0x8300, 0xacdc, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0x16, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8f4);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08c), 0x16);
        EXPECT(gbc.readMem(0xb08d), 0xab);
        // 16 0146
        gbc.setState(0x2982, 0x319e, 0x6880, 0x1f4a, 0x8250, 0x837d, 0x0, 0x1);
        gbc.writeMem(0x2982, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x319e);
        EXPECT(gbc.pc(), 0x2984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0147
        gbc.setState(0x74ea, 0xfba0, 0x120, 0xf283, 0xd4c0, 0xb8e2, 0x1, 0x1);
        gbc.writeMem(0x74ea, { 0x16, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfba0);
        EXPECT(gbc.pc(), 0x74ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0148
        gbc.setState(0x7d19, 0x8147, 0x8130, 0xecaf, 0xfd86, 0x4931, 0x1, 0x0);
        gbc.writeMem(0x7d19, { 0x16, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8147);
        EXPECT(gbc.pc(), 0x7d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0149
        gbc.setState(0x252e, 0xab61, 0x8d20, 0x4512, 0x98be, 0x79f5, 0x1, 0x1);
        gbc.writeMem(0x252e, { 0x16, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0x2530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 014A
        gbc.setState(0x65d6, 0x4bea, 0x8a90, 0x2ad6, 0xc0e0, 0x9444, 0x1, 0x1);
        gbc.writeMem(0x65d6, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x65d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 014B
        gbc.setState(0x6fb9, 0x2d03, 0x4700, 0x7968, 0x8757, 0xa356, 0x0, 0x0);
        gbc.writeMem(0x6fb9, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2d03);
        EXPECT(gbc.pc(), 0x6fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 014C
        gbc.setState(0xd992, 0xdae1, 0x8660, 0xdc0e, 0xc145, 0x50b2, 0x0, 0x0);
        gbc.writeMem(0xd992, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdae1);
        EXPECT(gbc.pc(), 0xd994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd992), 0x16);
        EXPECT(gbc.readMem(0xd993), 0xf9);
        // 16 014D
        gbc.setState(0xd876, 0x3879, 0xd1c0, 0xd3a5, 0x1525, 0x9509, 0x1, 0x1);
        gbc.writeMem(0xd876, { 0x16, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3879);
        EXPECT(gbc.pc(), 0xd878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd876), 0x16);
        EXPECT(gbc.readMem(0xd877), 0xf8);
        // 16 014F
        gbc.setState(0xab1b, 0x82da, 0x7590, 0xa1a8, 0xe3e, 0x4245, 0x0, 0x1);
        gbc.writeMem(0xab1b, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0xab1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1b), 0x16);
        EXPECT(gbc.readMem(0xab1c), 0xd0);
        // 16 0150
        gbc.setState(0x81f, 0x5580, 0x6c00, 0x3219, 0xa41f, 0x23d8, 0x0, 0x1);
        gbc.writeMem(0x81f, { 0x16, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5580);
        EXPECT(gbc.pc(), 0x821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0151
        gbc.setState(0xa2af, 0xe3e8, 0x82d0, 0x9274, 0xdda7, 0x872b, 0x1, 0x0);
        gbc.writeMem(0xa2af, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe3e8);
        EXPECT(gbc.pc(), 0xa2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2af), 0x16);
        EXPECT(gbc.readMem(0xa2b0), 0xb1);
        // 16 0152
        gbc.setState(0xe5f3, 0x5a74, 0xe3f0, 0xfb86, 0xe004, 0x1582, 0x0, 0x0);
        gbc.writeMem(0xe5f3, { 0x16, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5a74);
        EXPECT(gbc.pc(), 0xe5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f3), 0x16);
        EXPECT(gbc.readMem(0xe5f4), 0x70);
        // 16 0153
        gbc.setState(0xbe55, 0x8d13, 0xcd10, 0xfdb7, 0x53b1, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0xbe55, { 0x16, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8d13);
        EXPECT(gbc.pc(), 0xbe57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe55), 0x16);
        EXPECT(gbc.readMem(0xbe56), 0x71);
        // 16 0154
        gbc.setState(0x7e8a, 0x3772, 0xe170, 0x32ed, 0xee7, 0xe2e9, 0x0, 0x1);
        gbc.writeMem(0x7e8a, { 0x16, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3772);
        EXPECT(gbc.pc(), 0x7e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0155
        gbc.setState(0x8b64, 0x80c8, 0x53b0, 0x4779, 0x2b38, 0xa1d, 0x0, 0x1);
        gbc.writeMem(0x8b64, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x80c8);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b64), 0x16);
        EXPECT(gbc.readMem(0x8b65), 0xd4);
        // 16 0156
        gbc.setState(0x8011, 0x2281, 0x8c0, 0xe7ca, 0x279e, 0x7ea3, 0x1, 0x1);
        gbc.writeMem(0x8011, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2281);
        EXPECT(gbc.pc(), 0x8013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8011), 0x16);
        EXPECT(gbc.readMem(0x8012), 0x38);
        // 16 0157
        gbc.setState(0x2e84, 0x4015, 0xaf80, 0x4488, 0x7e04, 0x962, 0x1, 0x1);
        gbc.writeMem(0x2e84, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4015);
        EXPECT(gbc.pc(), 0x2e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0158
        gbc.setState(0x53b5, 0x1634, 0x5250, 0xbb4b, 0x4619, 0x4cf6, 0x0, 0x1);
        gbc.writeMem(0x53b5, { 0x16, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1634);
        EXPECT(gbc.pc(), 0x53b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0159
        gbc.setState(0xaa66, 0xd7f8, 0x5b50, 0xc7c2, 0xcd1d, 0x982f, 0x0, 0x0);
        gbc.writeMem(0xaa66, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd7f8);
        EXPECT(gbc.pc(), 0xaa68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa66), 0x16);
        EXPECT(gbc.readMem(0xaa67), 0xa8);
        // 16 015A
        gbc.setState(0xe98f, 0xacf9, 0x2390, 0x1296, 0x4e23, 0x8aab, 0x1, 0x0);
        gbc.writeMem(0xe98f, { 0x16, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xacf9);
        EXPECT(gbc.pc(), 0xe991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98f), 0x16);
        EXPECT(gbc.readMem(0xe990), 0xdc);
        // 16 015B
        gbc.setState(0x7be0, 0xdb03, 0xcb30, 0x3049, 0x5d3f, 0x353a, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0x16, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdb03);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 015C
        gbc.setState(0xb1e2, 0x5493, 0x9070, 0xb314, 0x148a, 0xb7c8, 0x0, 0x1);
        gbc.writeMem(0xb1e2, { 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5493);
        EXPECT(gbc.pc(), 0xb1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e2), 0x16);
        EXPECT(gbc.readMem(0xb1e3), 0x8b);
        // 16 015D
        gbc.setState(0x1623, 0x4034, 0x28a0, 0xcd3e, 0x2456, 0x40cf, 0x1, 0x1);
        gbc.writeMem(0x1623, { 0x16, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4034);
        EXPECT(gbc.pc(), 0x1625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 015E
        gbc.setState(0x17c1, 0x56b5, 0x9ff0, 0xb5ae, 0xb06d, 0xf3c8, 0x0, 0x1);
        gbc.writeMem(0x17c1, { 0x16, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x56b5);
        EXPECT(gbc.pc(), 0x17c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 015F
        gbc.setState(0x92d7, 0x18ac, 0x2f90, 0x2408, 0x3c96, 0x6b62, 0x0, 0x1);
        gbc.writeMem(0x92d7, { 0x16, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x18ac);
        EXPECT(gbc.pc(), 0x92d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d7), 0x16);
        EXPECT(gbc.readMem(0x92d8), 0x4e);
        // 16 0160
        gbc.setState(0xcc0c, 0x6120, 0x6350, 0x5be2, 0x4759, 0x13c, 0x1, 0x0);
        gbc.writeMem(0xcc0c, { 0x16, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0xcc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0c), 0x16);
        EXPECT(gbc.readMem(0xcc0d), 0x29);
        // 16 0161
        gbc.setState(0xab8c, 0x54ec, 0x9e50, 0x624, 0x5673, 0x519b, 0x0, 0x0);
        gbc.writeMem(0xab8c, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x54ec);
        EXPECT(gbc.pc(), 0xab8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab8c), 0x16);
        EXPECT(gbc.readMem(0xab8d), 0xe9);
        // 16 0162
        gbc.setState(0xe5ee, 0x2db3, 0x330, 0x359e, 0xada2, 0x5ffd, 0x0, 0x1);
        gbc.writeMem(0xe5ee, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2db3);
        EXPECT(gbc.pc(), 0xe5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ee), 0x16);
        EXPECT(gbc.readMem(0xe5ef), 0xdb);
        // 16 0163
        gbc.setState(0x5689, 0x31fd, 0xf6a0, 0xbcb3, 0x5d53, 0xfdea, 0x0, 0x1);
        gbc.writeMem(0x5689, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x31fd);
        EXPECT(gbc.pc(), 0x568b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0165
        gbc.setState(0xe128, 0x2711, 0x9710, 0x5741, 0x90c5, 0x1d15, 0x0, 0x1);
        gbc.writeMem(0xe128, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2711);
        EXPECT(gbc.pc(), 0xe12a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe128), 0x16);
        EXPECT(gbc.readMem(0xe129), 0x5e);
        // 16 0167
        gbc.setState(0xbfa1, 0x8f4f, 0x6230, 0xbd9f, 0x69aa, 0x60e3, 0x1, 0x0);
        gbc.writeMem(0xbfa1, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8f4f);
        EXPECT(gbc.pc(), 0xbfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa1), 0x16);
        EXPECT(gbc.readMem(0xbfa2), 0xd2);
        // 16 0169
        gbc.setState(0x2b9d, 0x83f5, 0xdab0, 0x58ef, 0xc94f, 0xcea5, 0x1, 0x1);
        gbc.writeMem(0x2b9d, { 0x16, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x83f5);
        EXPECT(gbc.pc(), 0x2b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 016A
        gbc.setState(0xbc56, 0x743a, 0x55a0, 0x286c, 0x8843, 0x783f, 0x0, 0x0);
        gbc.writeMem(0xbc56, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x743a);
        EXPECT(gbc.pc(), 0xbc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc56), 0x16);
        EXPECT(gbc.readMem(0xbc57), 0x1e);
        // 16 016B
        gbc.setState(0x8a75, 0x74b9, 0x2410, 0x2ef4, 0x1311, 0xb131, 0x1, 0x0);
        gbc.writeMem(0x8a75, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x74b9);
        EXPECT(gbc.pc(), 0x8a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a75), 0x16);
        EXPECT(gbc.readMem(0x8a76), 0xc2);
        // 16 016C
        gbc.setState(0xe08a, 0xcf97, 0x79a0, 0x3f39, 0x9a85, 0xbc70, 0x0, 0x1);
        gbc.writeMem(0xe08a, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcf97);
        EXPECT(gbc.pc(), 0xe08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08a), 0x16);
        EXPECT(gbc.readMem(0xe08b), 0xd6);
        // 16 016D
        gbc.setState(0x6fcf, 0x89a8, 0xbd90, 0xb641, 0xd436, 0x737d, 0x0, 0x1);
        gbc.writeMem(0x6fcf, { 0x16, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x89a8);
        EXPECT(gbc.pc(), 0x6fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 016E
        gbc.setState(0x87f4, 0xa808, 0xe000, 0xc554, 0x35b6, 0x53d2, 0x0, 0x1);
        gbc.writeMem(0x87f4, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa808);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f4), 0x16);
        EXPECT(gbc.readMem(0x87f5), 0x38);
        // 16 016F
        gbc.setState(0x1226, 0x828a, 0x1210, 0x38a9, 0x437d, 0x3112, 0x0, 0x1);
        gbc.writeMem(0x1226, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0x1228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0170
        gbc.setState(0xd6f5, 0x8746, 0x2d80, 0x886c, 0xb618, 0x3964, 0x0, 0x1);
        gbc.writeMem(0xd6f5, { 0x16, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8746);
        EXPECT(gbc.pc(), 0xd6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f5), 0x16);
        EXPECT(gbc.readMem(0xd6f6), 0xeb);
        // 16 0171
        gbc.setState(0xc2f, 0xcd89, 0xa3d0, 0x6da, 0x9b36, 0x8af0, 0x1, 0x1);
        gbc.writeMem(0xc2f, { 0x16, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcd89);
        EXPECT(gbc.pc(), 0xc31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0172
        gbc.setState(0xc44a, 0x442f, 0x4f90, 0xd87a, 0x5699, 0xa2ab, 0x0, 0x1);
        gbc.writeMem(0xc44a, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x442f);
        EXPECT(gbc.pc(), 0xc44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44a), 0x16);
        EXPECT(gbc.readMem(0xc44b), 0x4f);
        // 16 0173
        gbc.setState(0x53fd, 0xd46c, 0x8df0, 0x8d31, 0x5fc5, 0xe97f, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd46c);
        EXPECT(gbc.pc(), 0x53ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0174
        gbc.setState(0x8ef0, 0xf8af, 0x91d0, 0x7535, 0xd05d, 0xdddc, 0x0, 0x1);
        gbc.writeMem(0x8ef0, { 0x16, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf8af);
        EXPECT(gbc.pc(), 0x8ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef0), 0x16);
        EXPECT(gbc.readMem(0x8ef1), 0x2c);
        // 16 0175
        gbc.setState(0xe2d1, 0x8c86, 0x81b0, 0x9362, 0x72f1, 0x973b, 0x1, 0x0);
        gbc.writeMem(0xe2d1, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8c86);
        EXPECT(gbc.pc(), 0xe2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d1), 0x16);
        EXPECT(gbc.readMem(0xe2d2), 0xb4);
        // 16 0177
        gbc.setState(0xeabe, 0xe751, 0x8b0, 0x24e8, 0x2901, 0xa6da, 0x1, 0x0);
        gbc.writeMem(0xeabe, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe751);
        EXPECT(gbc.pc(), 0xeac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabe), 0x16);
        EXPECT(gbc.readMem(0xeabf), 0x5e);
        // 16 0178
        gbc.setState(0xab89, 0xd4b0, 0x34f0, 0x880f, 0x728e, 0x1dc3, 0x0, 0x0);
        gbc.writeMem(0xab89, { 0x16, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd4b0);
        EXPECT(gbc.pc(), 0xab8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab89), 0x16);
        EXPECT(gbc.readMem(0xab8a), 0xcf);
        // 16 0179
        gbc.setState(0x448d, 0xeada, 0xaf70, 0x67de, 0x87b5, 0x2a01, 0x0, 0x0);
        gbc.writeMem(0x448d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xeada);
        EXPECT(gbc.pc(), 0x448f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 017A
        gbc.setState(0x269b, 0x4e26, 0x5510, 0xa565, 0x128e, 0xae78, 0x1, 0x0);
        gbc.writeMem(0x269b, { 0x16, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4e26);
        EXPECT(gbc.pc(), 0x269d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 017B
        gbc.setState(0xd23e, 0x16d, 0x71e0, 0x2b6f, 0x9bca, 0xce9, 0x0, 0x1);
        gbc.writeMem(0xd23e, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x16d);
        EXPECT(gbc.pc(), 0xd240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23e), 0x16);
        EXPECT(gbc.readMem(0xd23f), 0xe9);
        // 16 017C
        gbc.setState(0x547f, 0xb58, 0x1870, 0xa190, 0x6102, 0x7a2a, 0x1, 0x0);
        gbc.writeMem(0x547f, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0x5481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 017D
        gbc.setState(0x4109, 0x613e, 0x760, 0xc0c8, 0x7ce7, 0x8a4e, 0x1, 0x0);
        gbc.writeMem(0x4109, { 0x16, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0x410b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0180
        gbc.setState(0xe658, 0x4673, 0xd690, 0xf7d6, 0xe913, 0x9623, 0x1, 0x1);
        gbc.writeMem(0xe658, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0xe65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe658), 0x16);
        EXPECT(gbc.readMem(0xe659), 0xda);
        // 16 0181
        gbc.setState(0x6730, 0xfb40, 0x3410, 0xf363, 0x5d7c, 0x6946, 0x0, 0x0);
        gbc.writeMem(0x6730, { 0x16, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfb40);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0182
        gbc.setState(0xc0a, 0x81d0, 0x8300, 0x4165, 0x4c98, 0x78f6, 0x1, 0x0);
        gbc.writeMem(0xc0a, { 0x16, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x81d0);
        EXPECT(gbc.pc(), 0xc0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0183
        gbc.setState(0xe25f, 0x17b2, 0xaf10, 0x5b88, 0x3baf, 0x8c59, 0x1, 0x1);
        gbc.writeMem(0xe25f, { 0x16, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x17b2);
        EXPECT(gbc.pc(), 0xe261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25f), 0x16);
        EXPECT(gbc.readMem(0xe260), 0x2d);
        // 16 0184
        gbc.setState(0xd82b, 0x45be, 0xcb0, 0x8f10, 0x7acf, 0xc5c3, 0x1, 0x0);
        gbc.writeMem(0xd82b, { 0x16, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x45be);
        EXPECT(gbc.pc(), 0xd82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82b), 0x16);
        EXPECT(gbc.readMem(0xd82c), 0x13);
        // 16 0185
        gbc.setState(0x7dcb, 0xbdb4, 0x3310, 0x310d, 0x513f, 0x1083, 0x1, 0x0);
        gbc.writeMem(0x7dcb, { 0x16, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbdb4);
        EXPECT(gbc.pc(), 0x7dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0186
        gbc.setState(0x9026, 0x1f23, 0x2c20, 0xe895, 0x7415, 0xa591, 0x1, 0x0);
        gbc.writeMem(0x9026, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1f23);
        EXPECT(gbc.pc(), 0x9028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9026), 0x16);
        EXPECT(gbc.readMem(0x9027), 0xb6);
        // 16 0187
        gbc.setState(0xbdf6, 0xcec9, 0xe720, 0xea03, 0x6df4, 0x2bcb, 0x1, 0x1);
        gbc.writeMem(0xbdf6, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcec9);
        EXPECT(gbc.pc(), 0xbdf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf6), 0x16);
        EXPECT(gbc.readMem(0xbdf7), 0xc8);
        // 16 0188
        gbc.setState(0xff2, 0x418f, 0x60a0, 0x84bd, 0xafce, 0x3dbc, 0x1, 0x0);
        gbc.writeMem(0xff2, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x418f);
        EXPECT(gbc.pc(), 0xff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0189
        gbc.setState(0x6d92, 0x5761, 0x34c0, 0x1de9, 0x3325, 0x294b, 0x0, 0x1);
        gbc.writeMem(0x6d92, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5761);
        EXPECT(gbc.pc(), 0x6d94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 018A
        gbc.setState(0x625a, 0xfa57, 0xa2b0, 0xe4a8, 0x329f, 0xea0, 0x1, 0x0);
        gbc.writeMem(0x625a, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfa57);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 018B
        gbc.setState(0x9bb9, 0x455a, 0x44b0, 0x5c9c, 0x7f45, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x455a);
        EXPECT(gbc.pc(), 0x9bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb9), 0x16);
        EXPECT(gbc.readMem(0x9bba), 0xc9);
        // 16 018C
        gbc.setState(0xac2e, 0xe34, 0x8370, 0x410f, 0xf5b1, 0x7db4, 0x0, 0x0);
        gbc.writeMem(0xac2e, { 0x16, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe34);
        EXPECT(gbc.pc(), 0xac30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2e), 0x16);
        EXPECT(gbc.readMem(0xac2f), 0xbc);
        // 16 018D
        gbc.setState(0xda3b, 0x1033, 0xe800, 0x3bca, 0xeb86, 0xc473, 0x0, 0x1);
        gbc.writeMem(0xda3b, { 0x16, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1033);
        EXPECT(gbc.pc(), 0xda3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3b), 0x16);
        EXPECT(gbc.readMem(0xda3c), 0x45);
        // 16 018E
        gbc.setState(0xa738, 0x58d4, 0x3a00, 0x8289, 0x34fb, 0x2edd, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x58d4);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa738), 0x16);
        EXPECT(gbc.readMem(0xa739), 0xd1);
        // 16 018F
        gbc.setState(0xfd8, 0x7b3, 0x1760, 0x3880, 0x2be, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7b3);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0190
        gbc.setState(0x9fd7, 0xc6a2, 0xbc80, 0xf798, 0xab5f, 0x2131, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc6a2);
        EXPECT(gbc.pc(), 0x9fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd7), 0x16);
        EXPECT(gbc.readMem(0x9fd8), 0xb1);
        // 16 0191
        gbc.setState(0x257a, 0x527b, 0xba40, 0xcbfa, 0x9f23, 0x5d80, 0x1, 0x0);
        gbc.writeMem(0x257a, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x527b);
        EXPECT(gbc.pc(), 0x257c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0192
        gbc.setState(0x9b79, 0x58f8, 0x4e40, 0x8d5a, 0x58be, 0xfb5f, 0x0, 0x1);
        gbc.writeMem(0x9b79, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x58f8);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b79), 0x16);
        EXPECT(gbc.readMem(0x9b7a), 0xa0);
        // 16 0193
        gbc.setState(0x19b7, 0x5a1b, 0x2360, 0x860f, 0x82ac, 0xe804, 0x1, 0x1);
        gbc.writeMem(0x19b7, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0194
        gbc.setState(0x9fd5, 0xbc4, 0xf810, 0x82cc, 0x4059, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x9fd5, { 0x16, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbc4);
        EXPECT(gbc.pc(), 0x9fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd5), 0x16);
        EXPECT(gbc.readMem(0x9fd6), 0x59);
        // 16 0195
        gbc.setState(0xb76d, 0x42e7, 0x6980, 0x50c4, 0x3714, 0xaf8b, 0x1, 0x0);
        gbc.writeMem(0xb76d, { 0x16, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x42e7);
        EXPECT(gbc.pc(), 0xb76f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76d), 0x16);
        EXPECT(gbc.readMem(0xb76e), 0xfa);
        // 16 0196
        gbc.setState(0x5fc, 0x7785, 0x9150, 0xfa11, 0x8422, 0x8603, 0x0, 0x0);
        gbc.writeMem(0x5fc, { 0x16, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7785);
        EXPECT(gbc.pc(), 0x5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0197
        gbc.setState(0x3c84, 0xe0f, 0x48f0, 0xf71b, 0x29e2, 0xa554, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0x16, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe0f);
        EXPECT(gbc.pc(), 0x3c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0198
        gbc.setState(0xb157, 0x4927, 0x1570, 0xf74a, 0xe3e0, 0x9410, 0x1, 0x0);
        gbc.writeMem(0xb157, { 0x16, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4927);
        EXPECT(gbc.pc(), 0xb159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb157), 0x16);
        EXPECT(gbc.readMem(0xb158), 0x3a);
        // 16 0199
        gbc.setState(0x193b, 0x8428, 0x1780, 0x4914, 0xd5a1, 0xfbcb, 0x0, 0x0);
        gbc.writeMem(0x193b, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8428);
        EXPECT(gbc.pc(), 0x193d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 019A
        gbc.setState(0x3265, 0xae1a, 0x5410, 0x6ae7, 0x4914, 0xc002, 0x1, 0x0);
        gbc.writeMem(0x3265, { 0x16, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0x3267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 019B
        gbc.setState(0xf40, 0x9c95, 0xa360, 0x793a, 0x5dbf, 0xcc32, 0x0, 0x1);
        gbc.writeMem(0xf40, { 0x16, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9c95);
        EXPECT(gbc.pc(), 0xf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 019C
        gbc.setState(0xaa3d, 0x94ce, 0x3590, 0xb481, 0xed70, 0xb5d9, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x94ce);
        EXPECT(gbc.pc(), 0xaa3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3d), 0x16);
        EXPECT(gbc.readMem(0xaa3e), 0x9f);
        // 16 019D
        gbc.setState(0x1b5d, 0x6a3c, 0xae30, 0x362, 0x83ca, 0x8234, 0x0, 0x1);
        gbc.writeMem(0x1b5d, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6a3c);
        EXPECT(gbc.pc(), 0x1b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 019E
        gbc.setState(0x76c9, 0x2d78, 0x9450, 0xf841, 0xfa25, 0x7816, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0x16, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0x76cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 019F
        gbc.setState(0xc960, 0xda49, 0xfef0, 0x8b53, 0x79ba, 0xa5fd, 0x0, 0x0);
        gbc.writeMem(0xc960, { 0x16, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xda49);
        EXPECT(gbc.pc(), 0xc962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc960), 0x16);
        EXPECT(gbc.readMem(0xc961), 0x52);
        // 16 01A0
        gbc.setState(0x5bda, 0xe1fc, 0xbc50, 0x3d9d, 0x3d08, 0xb7f6, 0x0, 0x0);
        gbc.writeMem(0x5bda, { 0x16, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe1fc);
        EXPECT(gbc.pc(), 0x5bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01A1
        gbc.setState(0x53f9, 0x3cee, 0xa90, 0x8665, 0xa451, 0x6c55, 0x0, 0x0);
        gbc.writeMem(0x53f9, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3cee);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01A2
        gbc.setState(0x5095, 0xe62e, 0xac80, 0x2d55, 0x60f2, 0x60b, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x16, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe62e);
        EXPECT(gbc.pc(), 0x5097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01A4
        gbc.setState(0xc51d, 0x8ee3, 0x61d0, 0x3a8a, 0x4368, 0xcaf7, 0x1, 0x0);
        gbc.writeMem(0xc51d, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8ee3);
        EXPECT(gbc.pc(), 0xc51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc51d), 0x16);
        EXPECT(gbc.readMem(0xc51e), 0xd2);
        // 16 01A5
        gbc.setState(0xcb0e, 0xf3e1, 0xfbf0, 0x6d90, 0xecee, 0x6faf, 0x1, 0x0);
        gbc.writeMem(0xcb0e, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf3e1);
        EXPECT(gbc.pc(), 0xcb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0e), 0x16);
        EXPECT(gbc.readMem(0xcb0f), 0xd);
        // 16 01A6
        gbc.setState(0xa6b4, 0x690c, 0x8030, 0x6a57, 0x5f89, 0x5228, 0x0, 0x0);
        gbc.writeMem(0xa6b4, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x690c);
        EXPECT(gbc.pc(), 0xa6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b4), 0x16);
        EXPECT(gbc.readMem(0xa6b5), 0xb7);
        // 16 01A7
        gbc.setState(0x6a3c, 0xc8a4, 0x3d50, 0xec50, 0xc163, 0xd52e, 0x1, 0x1);
        gbc.writeMem(0x6a3c, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc8a4);
        EXPECT(gbc.pc(), 0x6a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01A8
        gbc.setState(0xa250, 0x4fa2, 0x6fd0, 0xfaff, 0xbd59, 0xc538, 0x1, 0x1);
        gbc.writeMem(0xa250, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4fa2);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa250), 0x16);
        EXPECT(gbc.readMem(0xa251), 0xf7);
        // 16 01A9
        gbc.setState(0xe78, 0xb1f7, 0x7b10, 0xf481, 0x9d8, 0xd312, 0x0, 0x1);
        gbc.writeMem(0xe78, { 0x16, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb1f7);
        EXPECT(gbc.pc(), 0xe7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01AA
        gbc.setState(0xa7f5, 0x8ff1, 0x42f0, 0x2dca, 0x3486, 0x83bf, 0x1, 0x0);
        gbc.writeMem(0xa7f5, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8ff1);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f5), 0x16);
        EXPECT(gbc.readMem(0xa7f6), 0xa0);
        // 16 01AB
        gbc.setState(0xdacd, 0x91ac, 0x3160, 0xec7a, 0xeede, 0x58b, 0x1, 0x0);
        gbc.writeMem(0xdacd, { 0x16, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x91ac);
        EXPECT(gbc.pc(), 0xdacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacd), 0x16);
        EXPECT(gbc.readMem(0xdace), 0xca);
        // 16 01AC
        gbc.setState(0x28c2, 0xeaa4, 0x6a10, 0x12e9, 0x8789, 0x1316, 0x1, 0x1);
        gbc.writeMem(0x28c2, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeaa4);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01AD
        gbc.setState(0x9601, 0x15ee, 0x9660, 0x63d6, 0x3217, 0x95d4, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0x16, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x15ee);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9601), 0x16);
        EXPECT(gbc.readMem(0x9602), 0x8a);
        // 16 01AE
        gbc.setState(0x49cd, 0x74db, 0x7c90, 0x7032, 0xc043, 0xe48a, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0x16, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x74db);
        EXPECT(gbc.pc(), 0x49cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01AF
        gbc.setState(0x765a, 0xac70, 0x63d0, 0x1b8d, 0x3ade, 0x17b3, 0x1, 0x1);
        gbc.writeMem(0x765a, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xac70);
        EXPECT(gbc.pc(), 0x765c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01B0
        gbc.setState(0x17a9, 0xbcc5, 0xa950, 0xa583, 0xcff5, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x17a9, { 0x16, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xbcc5);
        EXPECT(gbc.pc(), 0x17ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01B1
        gbc.setState(0xcc08, 0x5021, 0xa060, 0xde93, 0x196b, 0xecbe, 0x1, 0x0);
        gbc.writeMem(0xcc08, { 0x16, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5021);
        EXPECT(gbc.pc(), 0xcc0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc08), 0x16);
        EXPECT(gbc.readMem(0xcc09), 0x1);
        // 16 01B2
        gbc.setState(0x2dbe, 0x67d2, 0xe280, 0xdb2d, 0x9eb5, 0x305e, 0x0, 0x0);
        gbc.writeMem(0x2dbe, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x67d2);
        EXPECT(gbc.pc(), 0x2dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01B3
        gbc.setState(0xb92d, 0xb90b, 0x7830, 0x78c4, 0x147f, 0x893d, 0x0, 0x0);
        gbc.writeMem(0xb92d, { 0x16, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb90b);
        EXPECT(gbc.pc(), 0xb92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92d), 0x16);
        EXPECT(gbc.readMem(0xb92e), 0xa3);
        // 16 01B4
        gbc.setState(0x4e3e, 0xf855, 0x7c00, 0x1f88, 0x9b2a, 0x6f66, 0x1, 0x1);
        gbc.writeMem(0x4e3e, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf855);
        EXPECT(gbc.pc(), 0x4e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01B5
        gbc.setState(0x5f7, 0xc47c, 0xff20, 0xabcc, 0xb99, 0x73e8, 0x0, 0x1);
        gbc.writeMem(0x5f7, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc47c);
        EXPECT(gbc.pc(), 0x5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01B6
        gbc.setState(0x7732, 0x806, 0x20d0, 0xb1e9, 0x8f9a, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x7732, { 0x16, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0x7734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01B7
        gbc.setState(0xd5f, 0xdf40, 0xde90, 0xe9be, 0x40c2, 0x1565, 0x0, 0x0);
        gbc.writeMem(0xd5f, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdf40);
        EXPECT(gbc.pc(), 0xd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01B8
        gbc.setState(0xda39, 0x9ee1, 0x7270, 0xf95d, 0x6dfb, 0xfe9f, 0x0, 0x0);
        gbc.writeMem(0xda39, { 0x16, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0xda3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda39), 0x16);
        EXPECT(gbc.readMem(0xda3a), 0x68);
        // 16 01B9
        gbc.setState(0x50aa, 0x7a17, 0xba90, 0xcc03, 0x542f, 0x8a0d, 0x1, 0x0);
        gbc.writeMem(0x50aa, { 0x16, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7a17);
        EXPECT(gbc.pc(), 0x50ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01BA
        gbc.setState(0x5215, 0x5dba, 0x8930, 0xe588, 0xe7e3, 0xa076, 0x0, 0x0);
        gbc.writeMem(0x5215, { 0x16, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01BB
        gbc.setState(0x5969, 0xc0e2, 0x3ab0, 0x65db, 0xc279, 0xf966, 0x1, 0x0);
        gbc.writeMem(0x5969, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc0e2);
        EXPECT(gbc.pc(), 0x596b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01BC
        gbc.setState(0x9686, 0xcdcc, 0x6670, 0x5f46, 0xe692, 0x4aee, 0x1, 0x0);
        gbc.writeMem(0x9686, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcdcc);
        EXPECT(gbc.pc(), 0x9688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9686), 0x16);
        EXPECT(gbc.readMem(0x9687), 0xf7);
        // 16 01BD
        gbc.setState(0x4a0c, 0xedbf, 0xe4c0, 0xdd72, 0x3bd4, 0xb322, 0x0, 0x0);
        gbc.writeMem(0x4a0c, { 0x16, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xedbf);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01BE
        gbc.setState(0x7ea9, 0x5893, 0x95e0, 0xca08, 0x2090, 0xc4a0, 0x0, 0x1);
        gbc.writeMem(0x7ea9, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5893);
        EXPECT(gbc.pc(), 0x7eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01BF
        gbc.setState(0xaf7e, 0x8bf, 0x8d90, 0xb7f4, 0xe888, 0x426d, 0x0, 0x1);
        gbc.writeMem(0xaf7e, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8bf);
        EXPECT(gbc.pc(), 0xaf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7e), 0x16);
        EXPECT(gbc.readMem(0xaf7f), 0xf1);
        // 16 01C0
        gbc.setState(0xec78, 0xa2f0, 0x63f0, 0xf0fb, 0xd90e, 0x3d59, 0x0, 0x1);
        gbc.writeMem(0xec78, { 0x16, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa2f0);
        EXPECT(gbc.pc(), 0xec7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec78), 0x16);
        EXPECT(gbc.readMem(0xec79), 0x62);
        // 16 01C1
        gbc.setState(0x921, 0xf550, 0x8ac0, 0x8412, 0x4033, 0x484, 0x0, 0x0);
        gbc.writeMem(0x921, { 0x16, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf550);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01C2
        gbc.setState(0x79b9, 0x394b, 0xde50, 0xba2, 0xdd22, 0xc6c0, 0x0, 0x0);
        gbc.writeMem(0x79b9, { 0x16, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x394b);
        EXPECT(gbc.pc(), 0x79bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01C3
        gbc.setState(0x77df, 0x6ee8, 0x9910, 0x843a, 0xbd9e, 0xffbd, 0x0, 0x1);
        gbc.writeMem(0x77df, { 0x16, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6ee8);
        EXPECT(gbc.pc(), 0x77e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01C4
        gbc.setState(0xec9e, 0x1102, 0xdf60, 0xd8fe, 0x5854, 0x5f6a, 0x1, 0x0);
        gbc.writeMem(0xec9e, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1102);
        EXPECT(gbc.pc(), 0xeca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9e), 0x16);
        EXPECT(gbc.readMem(0xec9f), 0xa4);
        // 16 01C5
        gbc.setState(0x8534, 0x9562, 0xe710, 0x80ad, 0xdad1, 0x21b5, 0x1, 0x1);
        gbc.writeMem(0x8534, { 0x16, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9562);
        EXPECT(gbc.pc(), 0x8536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8534), 0x16);
        EXPECT(gbc.readMem(0x8535), 0x47);
        // 16 01C6
        gbc.setState(0xca17, 0x53d2, 0x7c00, 0xcfc, 0x1fde, 0x85d, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x53d2);
        EXPECT(gbc.pc(), 0xca19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca17), 0x16);
        EXPECT(gbc.readMem(0xca18), 0xc0);
        // 16 01C7
        gbc.setState(0xa48e, 0xf27b, 0x3430, 0x4e79, 0x78c8, 0xc7e9, 0x1, 0x1);
        gbc.writeMem(0xa48e, { 0x16, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf27b);
        EXPECT(gbc.pc(), 0xa490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48e), 0x16);
        EXPECT(gbc.readMem(0xa48f), 0x12);
        // 16 01C8
        gbc.setState(0x7e77, 0x2ccf, 0xa0f0, 0x722b, 0x5ee8, 0x79d3, 0x0, 0x0);
        gbc.writeMem(0x7e77, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2ccf);
        EXPECT(gbc.pc(), 0x7e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01C9
        gbc.setState(0xc7b, 0x2442, 0x7c50, 0x55da, 0xa2a1, 0x967f, 0x0, 0x1);
        gbc.writeMem(0xc7b, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2442);
        EXPECT(gbc.pc(), 0xc7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01CA
        gbc.setState(0x1b4f, 0x6366, 0xde90, 0x3253, 0x12c0, 0x3779, 0x0, 0x0);
        gbc.writeMem(0x1b4f, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6366);
        EXPECT(gbc.pc(), 0x1b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01CB
        gbc.setState(0xc366, 0x1929, 0x68e0, 0x35ca, 0x878c, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0xc366, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1929);
        EXPECT(gbc.pc(), 0xc368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc366), 0x16);
        EXPECT(gbc.readMem(0xc367), 0x85);
        // 16 01CD
        gbc.setState(0xd896, 0xf389, 0x5a20, 0xd113, 0xc82e, 0xca44, 0x1, 0x0);
        gbc.writeMem(0xd896, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf389);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd896), 0x16);
        EXPECT(gbc.readMem(0xd897), 0x9b);
        // 16 01CE
        gbc.setState(0x3714, 0x2cd3, 0xc0a0, 0x3f64, 0xb7, 0xbaa7, 0x1, 0x1);
        gbc.writeMem(0x3714, { 0x16, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2cd3);
        EXPECT(gbc.pc(), 0x3716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01CF
        gbc.setState(0xda15, 0x7e13, 0xe600, 0x28e1, 0x262d, 0xe363, 0x1, 0x0);
        gbc.writeMem(0xda15, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7e13);
        EXPECT(gbc.pc(), 0xda17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda15), 0x16);
        EXPECT(gbc.readMem(0xda16), 0x4a);
        // 16 01D0
        gbc.setState(0x2d49, 0x7bf, 0x4a20, 0x8ec2, 0xfd96, 0xeec6, 0x1, 0x1);
        gbc.writeMem(0x2d49, { 0x16, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7bf);
        EXPECT(gbc.pc(), 0x2d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01D1
        gbc.setState(0xb170, 0x877a, 0x8210, 0xc238, 0x66fc, 0x7ce7, 0x1, 0x1);
        gbc.writeMem(0xb170, { 0x16, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x877a);
        EXPECT(gbc.pc(), 0xb172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb170), 0x16);
        EXPECT(gbc.readMem(0xb171), 0x5f);
        // 16 01D2
        gbc.setState(0x2774, 0x6d77, 0x4c40, 0x90a3, 0x1c81, 0x95af, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0x16, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6d77);
        EXPECT(gbc.pc(), 0x2776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01D3
        gbc.setState(0x6b73, 0xc535, 0x66e0, 0x1d17, 0x6c3d, 0x5225, 0x1, 0x0);
        gbc.writeMem(0x6b73, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc535);
        EXPECT(gbc.pc(), 0x6b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01D4
        gbc.setState(0x209e, 0xb0fe, 0x3090, 0x8261, 0x226d, 0xe9b8, 0x1, 0x1);
        gbc.writeMem(0x209e, { 0x16, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb0fe);
        EXPECT(gbc.pc(), 0x20a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01D6
        gbc.setState(0x4125, 0xbd75, 0x8b00, 0x3d, 0xba5d, 0x966c, 0x1, 0x1);
        gbc.writeMem(0x4125, { 0x16, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbd75);
        EXPECT(gbc.pc(), 0x4127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01D7
        gbc.setState(0xc895, 0xb317, 0xa960, 0x2d76, 0x69c9, 0xcedd, 0x0, 0x1);
        gbc.writeMem(0xc895, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb317);
        EXPECT(gbc.pc(), 0xc897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc895), 0x16);
        EXPECT(gbc.readMem(0xc896), 0x4f);
        // 16 01D8
        gbc.setState(0x1529, 0xc2f6, 0x5140, 0xb47c, 0x25ac, 0x7e26, 0x0, 0x1);
        gbc.writeMem(0x1529, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc2f6);
        EXPECT(gbc.pc(), 0x152b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01D9
        gbc.setState(0x76a0, 0xfc6b, 0x3880, 0xa167, 0x8258, 0xd959, 0x0, 0x1);
        gbc.writeMem(0x76a0, { 0x16, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0x76a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01DB
        gbc.setState(0x144f, 0xfae0, 0xa0e0, 0x4afc, 0x49aa, 0x93d5, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfae0);
        EXPECT(gbc.pc(), 0x1451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01DC
        gbc.setState(0xe6d3, 0x45c3, 0xe450, 0x4f34, 0x5be2, 0x5e05, 0x0, 0x0);
        gbc.writeMem(0xe6d3, { 0x16, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x45c3);
        EXPECT(gbc.pc(), 0xe6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d3), 0x16);
        EXPECT(gbc.readMem(0xe6d4), 0xdc);
        // 16 01DD
        gbc.setState(0xed0, 0x80f7, 0x35d0, 0xc79, 0x50a5, 0xdaee, 0x1, 0x0);
        gbc.writeMem(0xed0, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x80f7);
        EXPECT(gbc.pc(), 0xed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01DE
        gbc.setState(0x6abc, 0xd16e, 0xaf30, 0xab73, 0x3e0c, 0x1e69, 0x0, 0x1);
        gbc.writeMem(0x6abc, { 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd16e);
        EXPECT(gbc.pc(), 0x6abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01DF
        gbc.setState(0xee26, 0xeb4e, 0xd680, 0xa6db, 0xfe0e, 0x7628, 0x0, 0x0);
        gbc.writeMem(0xee26, { 0x16, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xeb4e);
        EXPECT(gbc.pc(), 0xee28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee26), 0x16);
        EXPECT(gbc.readMem(0xee27), 0x6);
        // 16 01E0
        gbc.setState(0x1aa5, 0xdca1, 0x740, 0xe25, 0xc9ff, 0x6961, 0x1, 0x0);
        gbc.writeMem(0x1aa5, { 0x16, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdca1);
        EXPECT(gbc.pc(), 0x1aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01E1
        gbc.setState(0x3007, 0x2793, 0x7df0, 0x6572, 0xf5f1, 0x14a1, 0x0, 0x0);
        gbc.writeMem(0x3007, { 0x16, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2793);
        EXPECT(gbc.pc(), 0x3009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01E2
        gbc.setState(0x27cf, 0xefa4, 0x4720, 0x1ba8, 0xbd22, 0xf31d, 0x0, 0x1);
        gbc.writeMem(0x27cf, { 0x16, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xefa4);
        EXPECT(gbc.pc(), 0x27d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01E3
        gbc.setState(0xb02e, 0x9166, 0x6fa0, 0xba70, 0x883f, 0xb9e5, 0x0, 0x1);
        gbc.writeMem(0xb02e, { 0x16, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9166);
        EXPECT(gbc.pc(), 0xb030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb02e), 0x16);
        EXPECT(gbc.readMem(0xb02f), 0x66);
        // 16 01E4
        gbc.setState(0xa3bc, 0xa29e, 0x6d50, 0x5ff0, 0x8dbd, 0x9d90, 0x0, 0x0);
        gbc.writeMem(0xa3bc, { 0x16, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa29e);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bc), 0x16);
        EXPECT(gbc.readMem(0xa3bd), 0xbc);
        // 16 01E6
        gbc.setState(0x11b9, 0x6fa8, 0x3330, 0x1d39, 0x3c5e, 0xeb01, 0x1, 0x0);
        gbc.writeMem(0x11b9, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6fa8);
        EXPECT(gbc.pc(), 0x11bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01E7
        gbc.setState(0xde81, 0x469b, 0x5510, 0x7f02, 0xa9d3, 0x8786, 0x0, 0x1);
        gbc.writeMem(0xde81, { 0x16, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x469b);
        EXPECT(gbc.pc(), 0xde83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde81), 0x16);
        EXPECT(gbc.readMem(0xde82), 0x3b);
        // 16 01E8
        gbc.setState(0x9625, 0x30c0, 0x8330, 0xd65c, 0xfff2, 0x647f, 0x1, 0x1);
        gbc.writeMem(0x9625, { 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x30c0);
        EXPECT(gbc.pc(), 0x9627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9625), 0x16);
        EXPECT(gbc.readMem(0x9626), 0x6d);
        // 16 01E9
        gbc.setState(0x73ef, 0x4295, 0xabb0, 0xfc6, 0xbf26, 0x8014, 0x1, 0x1);
        gbc.writeMem(0x73ef, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4295);
        EXPECT(gbc.pc(), 0x73f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01EA
        gbc.setState(0x47ed, 0x3feb, 0x4cf0, 0x944f, 0x2614, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0x47ed, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3feb);
        EXPECT(gbc.pc(), 0x47ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01EB
        gbc.setState(0xad06, 0xfeea, 0xfda0, 0xddfa, 0x4e8b, 0x9117, 0x0, 0x0);
        gbc.writeMem(0xad06, { 0x16, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0xad08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad06), 0x16);
        EXPECT(gbc.readMem(0xad07), 0x31);
        // 16 01EC
        gbc.setState(0x85c8, 0x874b, 0x2b70, 0xdc1f, 0xf2af, 0xe3c1, 0x1, 0x1);
        gbc.writeMem(0x85c8, { 0x16, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x874b);
        EXPECT(gbc.pc(), 0x85ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c8), 0x16);
        EXPECT(gbc.readMem(0x85c9), 0x57);
        // 16 01ED
        gbc.setState(0x1c18, 0x7859, 0x2d30, 0xd8e7, 0x7bf, 0x8591, 0x0, 0x1);
        gbc.writeMem(0x1c18, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7859);
        EXPECT(gbc.pc(), 0x1c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01EE
        gbc.setState(0x5956, 0x12f8, 0xe810, 0x83f7, 0x50b0, 0xbe37, 0x0, 0x0);
        gbc.writeMem(0x5956, { 0x16, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x12f8);
        EXPECT(gbc.pc(), 0x5958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01EF
        gbc.setState(0x363a, 0x47b, 0x6930, 0x8ee3, 0x6fd3, 0x350a, 0x1, 0x0);
        gbc.writeMem(0x363a, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x47b);
        EXPECT(gbc.pc(), 0x363c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01F0
        gbc.setState(0x6fc2, 0xcfb6, 0xe260, 0xaa5a, 0x5fa6, 0x636c, 0x1, 0x0);
        gbc.writeMem(0x6fc2, { 0x16, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcfb6);
        EXPECT(gbc.pc(), 0x6fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 01F1
        gbc.setState(0x97a, 0x5c50, 0x7350, 0xd5ef, 0x430e, 0xcecd, 0x0, 0x1);
        gbc.writeMem(0x97a, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5c50);
        EXPECT(gbc.pc(), 0x97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01F2
        gbc.setState(0xdabf, 0x124d, 0xb7e0, 0xf708, 0x2d90, 0x1a0b, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0x16, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x124d);
        EXPECT(gbc.pc(), 0xdac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabf), 0x16);
        EXPECT(gbc.readMem(0xdac0), 0x2c);
        // 16 01F3
        gbc.setState(0x8695, 0x71c3, 0xce50, 0xdf64, 0xeb64, 0x5f9f, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0x16, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x71c3);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8695), 0x16);
        EXPECT(gbc.readMem(0x8696), 0x5f);
        // 16 01F4
        gbc.setState(0x7297, 0xf4f3, 0xdeb0, 0x98b7, 0xf986, 0xc1bc, 0x1, 0x0);
        gbc.writeMem(0x7297, { 0x16, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf4f3);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01F5
        gbc.setState(0x54fb, 0x5d0d, 0x2450, 0xe87a, 0xe816, 0x16bb, 0x0, 0x1);
        gbc.writeMem(0x54fb, { 0x16, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5d0d);
        EXPECT(gbc.pc(), 0x54fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01F6
        gbc.setState(0xd1e7, 0xb61b, 0x54b0, 0x8c15, 0x5f96, 0xafac, 0x0, 0x1);
        gbc.writeMem(0xd1e7, { 0x16, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb61b);
        EXPECT(gbc.pc(), 0xd1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e7), 0x16);
        EXPECT(gbc.readMem(0xd1e8), 0x77);
        // 16 01F7
        gbc.setState(0x7c1f, 0x74ae, 0x3180, 0xa1fb, 0xe917, 0x7a2f, 0x1, 0x1);
        gbc.writeMem(0x7c1f, { 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x74ae);
        EXPECT(gbc.pc(), 0x7c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01F8
        gbc.setState(0x4310, 0xc035, 0x6930, 0x3d57, 0x63f0, 0x6951, 0x1, 0x1);
        gbc.writeMem(0x4310, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc035);
        EXPECT(gbc.pc(), 0x4312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01F9
        gbc.setState(0x6804, 0xe534, 0x1470, 0xa2d8, 0xe108, 0x4492, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0x16, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0x6806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 01FA
        gbc.setState(0x3635, 0xbd34, 0x27c0, 0xdd5d, 0xb389, 0x4da5, 0x1, 0x1);
        gbc.writeMem(0x3635, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbd34);
        EXPECT(gbc.pc(), 0x3637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 01FB
        gbc.setState(0x5f35, 0x6073, 0xbe50, 0xc6e2, 0xa23f, 0x3714, 0x0, 0x0);
        gbc.writeMem(0x5f35, { 0x16, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0x5f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01FC
        gbc.setState(0xe920, 0xdbdc, 0x8ab0, 0xdd6b, 0x688f, 0xc2a3, 0x1, 0x0);
        gbc.writeMem(0xe920, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdbdc);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe920), 0x16);
        EXPECT(gbc.readMem(0xe921), 0x4a);
        // 16 01FD
        gbc.setState(0x7fb4, 0xf466, 0x50d0, 0xcd9f, 0xea92, 0xd987, 0x1, 0x1);
        gbc.writeMem(0x7fb4, { 0x16, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf466);
        EXPECT(gbc.pc(), 0x7fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 01FE
        gbc.setState(0x9520, 0x64a2, 0x4d40, 0x950d, 0x877f, 0xa488, 0x0, 0x1);
        gbc.writeMem(0x9520, { 0x16, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x64a2);
        EXPECT(gbc.pc(), 0x9522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9520), 0x16);
        EXPECT(gbc.readMem(0x9521), 0xef);
        // 16 01FF
        gbc.setState(0xac19, 0x6ae5, 0x6f30, 0x424d, 0xf972, 0x806c, 0x0, 0x1);
        gbc.writeMem(0xac19, { 0x16, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6ae5);
        EXPECT(gbc.pc(), 0xac1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac19), 0x16);
        EXPECT(gbc.readMem(0xac1a), 0x1c);
        // 16 0200
        gbc.setState(0x9a1b, 0xa182, 0x9980, 0x43ab, 0xab06, 0x8c0, 0x0, 0x0);
        gbc.writeMem(0x9a1b, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1b), 0x16);
        EXPECT(gbc.readMem(0x9a1c), 0xe3);
        // 16 0202
        gbc.setState(0xa6c2, 0xfbbd, 0xd420, 0x1820, 0x34ce, 0x1254, 0x1, 0x1);
        gbc.writeMem(0xa6c2, { 0x16, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfbbd);
        EXPECT(gbc.pc(), 0xa6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c2), 0x16);
        EXPECT(gbc.readMem(0xa6c3), 0xa3);
        // 16 0203
        gbc.setState(0x9db8, 0x94ce, 0x4c20, 0xb925, 0x9bc1, 0x4f0a, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x94ce);
        EXPECT(gbc.pc(), 0x9dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db8), 0x16);
        EXPECT(gbc.readMem(0x9db9), 0xa1);
        // 16 0204
        gbc.setState(0x946f, 0x94b0, 0x4c80, 0xd6f8, 0x48de, 0x9394, 0x0, 0x1);
        gbc.writeMem(0x946f, { 0x16, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x9471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946f), 0x16);
        EXPECT(gbc.readMem(0x9470), 0x9b);
        // 16 0205
        gbc.setState(0xb861, 0xb745, 0x43c0, 0x35b8, 0xc86e, 0x9f2a, 0x1, 0x1);
        gbc.writeMem(0xb861, { 0x16, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb745);
        EXPECT(gbc.pc(), 0xb863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb861), 0x16);
        EXPECT(gbc.readMem(0xb862), 0xc);
        // 16 0206
        gbc.setState(0x9665, 0x3fc8, 0xf170, 0xb2a7, 0x6e2, 0x7698, 0x0, 0x0);
        gbc.writeMem(0x9665, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3fc8);
        EXPECT(gbc.pc(), 0x9667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9665), 0x16);
        EXPECT(gbc.readMem(0x9666), 0x5b);
        // 16 0208
        gbc.setState(0x267f, 0xf252, 0xd050, 0x4910, 0xe7cc, 0xed28, 0x0, 0x0);
        gbc.writeMem(0x267f, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf252);
        EXPECT(gbc.pc(), 0x2681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0209
        gbc.setState(0xbfd0, 0xd31d, 0x2dd0, 0x22f2, 0xc076, 0x1b92, 0x1, 0x1);
        gbc.writeMem(0xbfd0, { 0x16, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd31d);
        EXPECT(gbc.pc(), 0xbfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd0), 0x16);
        EXPECT(gbc.readMem(0xbfd1), 0xdc);
        // 16 020A
        gbc.setState(0xb178, 0xfaf0, 0x6a10, 0xdb17, 0xafcc, 0x7666, 0x0, 0x1);
        gbc.writeMem(0xb178, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0xb17a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb178), 0x16);
        EXPECT(gbc.readMem(0xb179), 0xd5);
        // 16 020B
        gbc.setState(0x65be, 0x8a1f, 0x75a0, 0x12e8, 0x71c, 0xcc24, 0x0, 0x1);
        gbc.writeMem(0x65be, { 0x16, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8a1f);
        EXPECT(gbc.pc(), 0x65c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 020C
        gbc.setState(0xddfb, 0x4628, 0xe730, 0xb8f5, 0x83c8, 0x385d, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0x16, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4628);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0x16);
        EXPECT(gbc.readMem(0xddfc), 0xcd);
        // 16 020D
        gbc.setState(0x76e5, 0xb19, 0xff20, 0xd571, 0xb422, 0xa5f1, 0x0, 0x1);
        gbc.writeMem(0x76e5, { 0x16, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb19);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 020E
        gbc.setState(0x846d, 0xf6d3, 0xfe40, 0xf4fd, 0x9f02, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0x846d, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf6d3);
        EXPECT(gbc.pc(), 0x846f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846d), 0x16);
        EXPECT(gbc.readMem(0x846e), 0xe1);
        // 16 020F
        gbc.setState(0x47d2, 0xa3ab, 0x2a80, 0xa41a, 0x36e8, 0x6cd9, 0x0, 0x0);
        gbc.writeMem(0x47d2, { 0x16, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa3ab);
        EXPECT(gbc.pc(), 0x47d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0210
        gbc.setState(0x7524, 0xf7b2, 0xa6d0, 0x4bba, 0x3631, 0xacce, 0x0, 0x1);
        gbc.writeMem(0x7524, { 0x16, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf7b2);
        EXPECT(gbc.pc(), 0x7526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0211
        gbc.setState(0x3815, 0x4b4b, 0x9140, 0x4a1a, 0xfa49, 0x148e, 0x0, 0x0);
        gbc.writeMem(0x3815, { 0x16, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4b4b);
        EXPECT(gbc.pc(), 0x3817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0212
        gbc.setState(0xd47c, 0xfdf9, 0x3470, 0x5dee, 0x7b09, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0xd47c, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfdf9);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47c), 0x16);
        EXPECT(gbc.readMem(0xd47d), 0xe0);
        // 16 0213
        gbc.setState(0xb010, 0xd0f3, 0x1ae0, 0xa16a, 0xcc04, 0xc1e9, 0x0, 0x0);
        gbc.writeMem(0xb010, { 0x16, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd0f3);
        EXPECT(gbc.pc(), 0xb012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb010), 0x16);
        EXPECT(gbc.readMem(0xb011), 0x31);
        // 16 0214
        gbc.setState(0x3e7f, 0x5e87, 0x2b80, 0xcdc8, 0x8840, 0xa916, 0x1, 0x0);
        gbc.writeMem(0x3e7f, { 0x16, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5e87);
        EXPECT(gbc.pc(), 0x3e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0215
        gbc.setState(0xa6f7, 0x2c3, 0xaa80, 0xcb54, 0x8be7, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0xa6f7, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2c3);
        EXPECT(gbc.pc(), 0xa6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f7), 0x16);
        EXPECT(gbc.readMem(0xa6f8), 0x9f);
        // 16 0216
        gbc.setState(0xed7a, 0x57bf, 0xbdf0, 0x9424, 0xbe90, 0x2a6, 0x0, 0x0);
        gbc.writeMem(0xed7a, { 0x16, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x57bf);
        EXPECT(gbc.pc(), 0xed7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7a), 0x16);
        EXPECT(gbc.readMem(0xed7b), 0x6a);
        // 16 0217
        gbc.setState(0x5f9f, 0x5267, 0xebf0, 0xc37a, 0x8a1e, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0x16, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5267);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0218
        gbc.setState(0xc5b5, 0x6cb3, 0x6320, 0xa446, 0x11d2, 0xad0d, 0x0, 0x0);
        gbc.writeMem(0xc5b5, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6cb3);
        EXPECT(gbc.pc(), 0xc5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b5), 0x16);
        EXPECT(gbc.readMem(0xc5b6), 0xc9);
        // 16 0219
        gbc.setState(0x4823, 0x225d, 0x3a0, 0x1ea2, 0x606, 0x9243, 0x0, 0x0);
        gbc.writeMem(0x4823, { 0x16, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x225d);
        EXPECT(gbc.pc(), 0x4825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 021A
        gbc.setState(0x6b64, 0x823c, 0xaa10, 0x2ae2, 0x13fb, 0x3741, 0x1, 0x1);
        gbc.writeMem(0x6b64, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x823c);
        EXPECT(gbc.pc(), 0x6b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 021B
        gbc.setState(0x6217, 0x587e, 0xeff0, 0x9f3a, 0xf50, 0x8985, 0x0, 0x1);
        gbc.writeMem(0x6217, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x587e);
        EXPECT(gbc.pc(), 0x6219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 021C
        gbc.setState(0x94e, 0xcbec, 0xb90, 0xfa0b, 0xab4, 0xe227, 0x0, 0x0);
        gbc.writeMem(0x94e, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcbec);
        EXPECT(gbc.pc(), 0x950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 021D
        gbc.setState(0x9788, 0xa8fc, 0xc4b0, 0x1ac4, 0x74d1, 0x15a0, 0x1, 0x1);
        gbc.writeMem(0x9788, { 0x16, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa8fc);
        EXPECT(gbc.pc(), 0x978a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9788), 0x16);
        EXPECT(gbc.readMem(0x9789), 0x8e);
        // 16 021E
        gbc.setState(0x396, 0x180f, 0xd30, 0xb1b, 0x63ba, 0x1568, 0x0, 0x0);
        gbc.writeMem(0x396, { 0x16, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x180f);
        EXPECT(gbc.pc(), 0x398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 021F
        gbc.setState(0x2ebf, 0xa12e, 0x8880, 0xe789, 0xc988, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0x2ebf, { 0x16, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa12e);
        EXPECT(gbc.pc(), 0x2ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0220
        gbc.setState(0xb358, 0xdfa, 0x9de0, 0x48a4, 0x2b03, 0x8dc3, 0x0, 0x0);
        gbc.writeMem(0xb358, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdfa);
        EXPECT(gbc.pc(), 0xb35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb358), 0x16);
        EXPECT(gbc.readMem(0xb359), 0x6e);
        // 16 0221
        gbc.setState(0xee41, 0xea74, 0x2530, 0x79e, 0xcd49, 0xa740, 0x0, 0x0);
        gbc.writeMem(0xee41, { 0x16, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xea74);
        EXPECT(gbc.pc(), 0xee43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee41), 0x16);
        EXPECT(gbc.readMem(0xee42), 0x7c);
        // 16 0222
        gbc.setState(0x1eb1, 0x2054, 0xadb0, 0xae3, 0x4dd4, 0x8aa4, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2054);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0223
        gbc.setState(0x722e, 0x3bb2, 0x5b30, 0x8ce8, 0xcb44, 0x33a9, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3bb2);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0224
        gbc.setState(0x624a, 0x2656, 0xc6a0, 0xe36e, 0x9ad6, 0x6e6d, 0x1, 0x1);
        gbc.writeMem(0x624a, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2656);
        EXPECT(gbc.pc(), 0x624c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0225
        gbc.setState(0xb15f, 0x3d88, 0x86d0, 0xfffb, 0xda8c, 0xdb05, 0x0, 0x0);
        gbc.writeMem(0xb15f, { 0x16, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3d88);
        EXPECT(gbc.pc(), 0xb161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15f), 0x16);
        EXPECT(gbc.readMem(0xb160), 0xb5);
        // 16 0226
        gbc.setState(0x547f, 0x41cf, 0xc220, 0x7f6f, 0xc3fc, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0x547f, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x41cf);
        EXPECT(gbc.pc(), 0x5481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0227
        gbc.setState(0x438f, 0x575c, 0x7a40, 0x7953, 0x372c, 0x8030, 0x0, 0x0);
        gbc.writeMem(0x438f, { 0x16, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x575c);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0228
        gbc.setState(0xa875, 0xe788, 0x7d20, 0x6c7e, 0xc6f2, 0xc699, 0x1, 0x1);
        gbc.writeMem(0xa875, { 0x16, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe788);
        EXPECT(gbc.pc(), 0xa877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa875), 0x16);
        EXPECT(gbc.readMem(0xa876), 0x7d);
        // 16 0229
        gbc.setState(0x5dee, 0x78ca, 0x8eb0, 0xaa03, 0x63cc, 0xf41c, 0x0, 0x1);
        gbc.writeMem(0x5dee, { 0x16, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x78ca);
        EXPECT(gbc.pc(), 0x5df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 022A
        gbc.setState(0x23ea, 0x2d1e, 0xe250, 0xb835, 0xfaf4, 0x103c, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0x16, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2d1e);
        EXPECT(gbc.pc(), 0x23ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 022B
        gbc.setState(0x2e9f, 0xc5be, 0xc040, 0xb121, 0xbc8e, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0x2e9f, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc5be);
        EXPECT(gbc.pc(), 0x2ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 022C
        gbc.setState(0x2a56, 0xcac0, 0x55f0, 0x6020, 0x4690, 0xe270, 0x0, 0x1);
        gbc.writeMem(0x2a56, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcac0);
        EXPECT(gbc.pc(), 0x2a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 022D
        gbc.setState(0xc36, 0x1f99, 0xd430, 0xdf10, 0x7bb9, 0x7852, 0x0, 0x0);
        gbc.writeMem(0xc36, { 0x16, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1f99);
        EXPECT(gbc.pc(), 0xc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 022E
        gbc.setState(0x101c, 0xc2ab, 0x9f80, 0xbc8c, 0x7491, 0x8e4e, 0x0, 0x1);
        gbc.writeMem(0x101c, { 0x16, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc2ab);
        EXPECT(gbc.pc(), 0x101e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 022F
        gbc.setState(0x95b8, 0xafa8, 0x4840, 0xce6e, 0x56d4, 0xd2f9, 0x0, 0x1);
        gbc.writeMem(0x95b8, { 0x16, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xafa8);
        EXPECT(gbc.pc(), 0x95ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b8), 0x16);
        EXPECT(gbc.readMem(0x95b9), 0x14);
        // 16 0230
        gbc.setState(0xe33a, 0xca12, 0x7300, 0x6d5c, 0x80aa, 0xf0d7, 0x1, 0x0);
        gbc.writeMem(0xe33a, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xca12);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33a), 0x16);
        EXPECT(gbc.readMem(0xe33b), 0xe1);
        // 16 0231
        gbc.setState(0xef2e, 0x37c5, 0xf9f0, 0x700e, 0xcadf, 0xc3f5, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0x16, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x37c5);
        EXPECT(gbc.pc(), 0xef30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2e), 0x16);
        EXPECT(gbc.readMem(0xef2f), 0x81);
        // 16 0232
        gbc.setState(0x1d4e, 0x258d, 0xa4d0, 0xf88a, 0x5593, 0xba0e, 0x0, 0x1);
        gbc.writeMem(0x1d4e, { 0x16, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x258d);
        EXPECT(gbc.pc(), 0x1d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0233
        gbc.setState(0x393e, 0x922e, 0x3b90, 0xefe2, 0x5726, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x16, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x922e);
        EXPECT(gbc.pc(), 0x3940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0234
        gbc.setState(0xa933, 0x8f2f, 0xa4c0, 0x7371, 0x255d, 0x4dfc, 0x0, 0x1);
        gbc.writeMem(0xa933, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8f2f);
        EXPECT(gbc.pc(), 0xa935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa933), 0x16);
        EXPECT(gbc.readMem(0xa934), 0xb1);
        // 16 0235
        gbc.setState(0x2853, 0xcb9f, 0x8a80, 0x8057, 0xa55c, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0x2853, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcb9f);
        EXPECT(gbc.pc(), 0x2855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0236
        gbc.setState(0x56a1, 0xf7a4, 0xd0a0, 0xaf19, 0x3c4f, 0x2fbc, 0x0, 0x0);
        gbc.writeMem(0x56a1, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf7a4);
        EXPECT(gbc.pc(), 0x56a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0237
        gbc.setState(0xb1b3, 0xf2bb, 0x25a0, 0xd56a, 0xf8ba, 0x734a, 0x0, 0x0);
        gbc.writeMem(0xb1b3, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf2bb);
        EXPECT(gbc.pc(), 0xb1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b3), 0x16);
        EXPECT(gbc.readMem(0xb1b4), 0xd2);
        // 16 0238
        gbc.setState(0x8c81, 0xdd4c, 0xdd90, 0x7288, 0x2fd, 0x446b, 0x0, 0x1);
        gbc.writeMem(0x8c81, { 0x16, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0x8c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c81), 0x16);
        EXPECT(gbc.readMem(0x8c82), 0x8e);
        // 16 0239
        gbc.setState(0xa28e, 0x45ae, 0xb3d0, 0x73de, 0x8882, 0x846b, 0x0, 0x0);
        gbc.writeMem(0xa28e, { 0x16, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x45ae);
        EXPECT(gbc.pc(), 0xa290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28e), 0x16);
        EXPECT(gbc.readMem(0xa28f), 0x8d);
        // 16 023A
        gbc.setState(0x814e, 0xa9c4, 0xeb00, 0xb58e, 0xaad3, 0x443, 0x1, 0x1);
        gbc.writeMem(0x814e, { 0x16, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa9c4);
        EXPECT(gbc.pc(), 0x8150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814e), 0x16);
        EXPECT(gbc.readMem(0x814f), 0x5e);
        // 16 023C
        gbc.setState(0x5553, 0x47e2, 0x6060, 0x31a8, 0x48d1, 0xb31a, 0x1, 0x1);
        gbc.writeMem(0x5553, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x47e2);
        EXPECT(gbc.pc(), 0x5555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 023D
        gbc.setState(0x3274, 0x33ad, 0x7ed0, 0x3a7c, 0x1ef7, 0x2feb, 0x0, 0x0);
        gbc.writeMem(0x3274, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x33ad);
        EXPECT(gbc.pc(), 0x3276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 023E
        gbc.setState(0x88d2, 0xbf04, 0x4350, 0x1197, 0x3ceb, 0x5ab9, 0x1, 0x0);
        gbc.writeMem(0x88d2, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbf04);
        EXPECT(gbc.pc(), 0x88d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d2), 0x16);
        EXPECT(gbc.readMem(0x88d3), 0xd);
        // 16 023F
        gbc.setState(0x38ad, 0x23e9, 0xa780, 0x32a2, 0x444f, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x38ad, { 0x16, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0x38af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0240
        gbc.setState(0xb4fe, 0xed7b, 0x5010, 0x51f3, 0xaff9, 0x1eab, 0x0, 0x0);
        gbc.writeMem(0xb4fe, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xed7b);
        EXPECT(gbc.pc(), 0xb500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fe), 0x16);
        EXPECT(gbc.readMem(0xb4ff), 0xd0);
        // 16 0241
        gbc.setState(0xbcc9, 0x517e, 0x2d70, 0x97f1, 0x86c3, 0xac99, 0x1, 0x0);
        gbc.writeMem(0xbcc9, { 0x16, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x517e);
        EXPECT(gbc.pc(), 0xbccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc9), 0x16);
        EXPECT(gbc.readMem(0xbcca), 0x7d);
        // 16 0242
        gbc.setState(0xd8a2, 0x818b, 0x8ff0, 0xa364, 0x64e1, 0xbc37, 0x0, 0x1);
        gbc.writeMem(0xd8a2, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x818b);
        EXPECT(gbc.pc(), 0xd8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a2), 0x16);
        EXPECT(gbc.readMem(0xd8a3), 0xc7);
        // 16 0243
        gbc.setState(0x8011, 0xf3e9, 0xc750, 0x6431, 0xc63d, 0xdc72, 0x0, 0x0);
        gbc.writeMem(0x8011, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf3e9);
        EXPECT(gbc.pc(), 0x8013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8011), 0x16);
        EXPECT(gbc.readMem(0x8012), 0x38);
        // 16 0244
        gbc.setState(0x1268, 0xd745, 0x47c0, 0x5b45, 0x422a, 0x74cf, 0x1, 0x0);
        gbc.writeMem(0x1268, { 0x16, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd745);
        EXPECT(gbc.pc(), 0x126a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0245
        gbc.setState(0x9523, 0x7981, 0x6760, 0x6e3e, 0x1103, 0xa2d8, 0x1, 0x0);
        gbc.writeMem(0x9523, { 0x16, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7981);
        EXPECT(gbc.pc(), 0x9525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9523), 0x16);
        EXPECT(gbc.readMem(0x9524), 0xeb);
        // 16 0246
        gbc.setState(0x4968, 0x7e7f, 0x4e20, 0x5e4d, 0x2bde, 0x22f2, 0x1, 0x0);
        gbc.writeMem(0x4968, { 0x16, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7e7f);
        EXPECT(gbc.pc(), 0x496a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0247
        gbc.setState(0xbf5, 0xc6d2, 0xe4a0, 0xbf77, 0x5e87, 0xdd00, 0x0, 0x1);
        gbc.writeMem(0xbf5, { 0x16, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc6d2);
        EXPECT(gbc.pc(), 0xbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0248
        gbc.setState(0xa3bc, 0xfdba, 0x97d0, 0xb795, 0xcb82, 0xf38c, 0x1, 0x1);
        gbc.writeMem(0xa3bc, { 0x16, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfdba);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bc), 0x16);
        EXPECT(gbc.readMem(0xa3bd), 0xbc);
        // 16 0249
        gbc.setState(0x3a42, 0x5802, 0xd840, 0x783b, 0x637, 0xd7d6, 0x1, 0x1);
        gbc.writeMem(0x3a42, { 0x16, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5802);
        EXPECT(gbc.pc(), 0x3a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 024A
        gbc.setState(0x98b3, 0x3931, 0xc860, 0x5187, 0xc5ca, 0xaea9, 0x0, 0x1);
        gbc.writeMem(0x98b3, { 0x16, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3931);
        EXPECT(gbc.pc(), 0x98b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b3), 0x16);
        EXPECT(gbc.readMem(0x98b4), 0x7e);
        // 16 024B
        gbc.setState(0x2723, 0xf8c, 0x5b60, 0xe18f, 0xb09, 0x214a, 0x0, 0x0);
        gbc.writeMem(0x2723, { 0x16, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf8c);
        EXPECT(gbc.pc(), 0x2725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 024C
        gbc.setState(0x3d69, 0x516c, 0xdfd0, 0x2602, 0xbcfe, 0xab9d, 0x1, 0x1);
        gbc.writeMem(0x3d69, { 0x16, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x516c);
        EXPECT(gbc.pc(), 0x3d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 024D
        gbc.setState(0x6e96, 0xf3e7, 0x7a60, 0x8858, 0x5101, 0xd59f, 0x1, 0x0);
        gbc.writeMem(0x6e96, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf3e7);
        EXPECT(gbc.pc(), 0x6e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 024E
        gbc.setState(0x53f9, 0x2831, 0xe270, 0xc4bb, 0xee83, 0x2252, 0x0, 0x0);
        gbc.writeMem(0x53f9, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2831);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 024F
        gbc.setState(0x51b0, 0x8d75, 0x9320, 0x6821, 0x7ea6, 0xc0a5, 0x0, 0x0);
        gbc.writeMem(0x51b0, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8d75);
        EXPECT(gbc.pc(), 0x51b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0250
        gbc.setState(0x6042, 0x1e22, 0x4ae0, 0x60ec, 0xaa92, 0x854c, 0x1, 0x1);
        gbc.writeMem(0x6042, { 0x16, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1e22);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0251
        gbc.setState(0x8c19, 0x652f, 0xdab0, 0xb904, 0x4eea, 0x1e97, 0x1, 0x0);
        gbc.writeMem(0x8c19, { 0x16, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x652f);
        EXPECT(gbc.pc(), 0x8c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c19), 0x16);
        EXPECT(gbc.readMem(0x8c1a), 0x52);
        // 16 0252
        gbc.setState(0x5cc4, 0x6c04, 0xf0e0, 0x9bef, 0xbf0e, 0x1211, 0x1, 0x1);
        gbc.writeMem(0x5cc4, { 0x16, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6c04);
        EXPECT(gbc.pc(), 0x5cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0253
        gbc.setState(0xe0c, 0x71ed, 0xdaa0, 0x9099, 0xd8d3, 0x4abe, 0x1, 0x1);
        gbc.writeMem(0xe0c, { 0x16, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x71ed);
        EXPECT(gbc.pc(), 0xe0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0254
        gbc.setState(0x8ffa, 0xf99e, 0x6260, 0x8750, 0xc33f, 0xce06, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0x16, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf99e);
        EXPECT(gbc.pc(), 0x8ffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffa), 0x16);
        EXPECT(gbc.readMem(0x8ffb), 0x95);
        // 16 0255
        gbc.setState(0x7ad, 0xfc4a, 0xf0b0, 0xabbb, 0x3dbb, 0x6e59, 0x0, 0x1);
        gbc.writeMem(0x7ad, { 0x16, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfc4a);
        EXPECT(gbc.pc(), 0x7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0256
        gbc.setState(0x57c1, 0xce41, 0xa620, 0x70e1, 0xa0f7, 0x1dd9, 0x0, 0x0);
        gbc.writeMem(0x57c1, { 0x16, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xce41);
        EXPECT(gbc.pc(), 0x57c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0257
        gbc.setState(0xc4e7, 0x3225, 0x36b0, 0x71bd, 0xd01e, 0x4a3e, 0x1, 0x0);
        gbc.writeMem(0xc4e7, { 0x16, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3225);
        EXPECT(gbc.pc(), 0xc4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e7), 0x16);
        EXPECT(gbc.readMem(0xc4e8), 0x55);
        // 16 0258
        gbc.setState(0x7a93, 0x8806, 0xaab0, 0x6fa2, 0x5fda, 0xa109, 0x1, 0x0);
        gbc.writeMem(0x7a93, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8806);
        EXPECT(gbc.pc(), 0x7a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0259
        gbc.setState(0xb835, 0x5b1a, 0xec50, 0x4e3c, 0xf48e, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0xb835, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5b1a);
        EXPECT(gbc.pc(), 0xb837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb835), 0x16);
        EXPECT(gbc.readMem(0xb836), 0xd9);
        // 16 025A
        gbc.setState(0xc815, 0x3ca8, 0x270, 0x4b56, 0x17f8, 0xaeda, 0x0, 0x0);
        gbc.writeMem(0xc815, { 0x16, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3ca8);
        EXPECT(gbc.pc(), 0xc817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc815), 0x16);
        EXPECT(gbc.readMem(0xc816), 0x3f);
        // 16 025B
        gbc.setState(0xcd20, 0xc54c, 0x12a0, 0xf107, 0x83a3, 0x6c89, 0x0, 0x1);
        gbc.writeMem(0xcd20, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc54c);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd20), 0x16);
        EXPECT(gbc.readMem(0xcd21), 0xb6);
        // 16 025C
        gbc.setState(0x231f, 0xf81, 0x4a50, 0xe0f8, 0x4608, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 025D
        gbc.setState(0x63c6, 0xc3f4, 0x4c80, 0x7fc, 0x58ce, 0x4372, 0x0, 0x0);
        gbc.writeMem(0x63c6, { 0x16, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc3f4);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 025E
        gbc.setState(0xd35b, 0xcc3, 0x620, 0x6af0, 0xe4a, 0x6af, 0x1, 0x0);
        gbc.writeMem(0xd35b, { 0x16, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcc3);
        EXPECT(gbc.pc(), 0xd35d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35b), 0x16);
        EXPECT(gbc.readMem(0xd35c), 0x7d);
        // 16 025F
        gbc.setState(0x2094, 0xe33b, 0xc000, 0xe187, 0x4db5, 0x1d7d, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0260
        gbc.setState(0x4a02, 0x3592, 0x6280, 0xd235, 0x7895, 0x9630, 0x1, 0x1);
        gbc.writeMem(0x4a02, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3592);
        EXPECT(gbc.pc(), 0x4a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0261
        gbc.setState(0xa51a, 0xfbe3, 0x92b0, 0x5818, 0x3c33, 0xd76a, 0x0, 0x1);
        gbc.writeMem(0xa51a, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfbe3);
        EXPECT(gbc.pc(), 0xa51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51a), 0x16);
        EXPECT(gbc.readMem(0xa51b), 0xd1);
        // 16 0262
        gbc.setState(0x83dd, 0xb1bd, 0xa780, 0xff3e, 0xe20c, 0x4cae, 0x0, 0x1);
        gbc.writeMem(0x83dd, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb1bd);
        EXPECT(gbc.pc(), 0x83df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83dd), 0x16);
        EXPECT(gbc.readMem(0x83de), 0xb2);
        // 16 0263
        gbc.setState(0x73db, 0xa46d, 0xf830, 0xd06a, 0x5e34, 0x2450, 0x0, 0x1);
        gbc.writeMem(0x73db, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa46d);
        EXPECT(gbc.pc(), 0x73dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0264
        gbc.setState(0xb723, 0xb709, 0x91c0, 0x26fa, 0x30ac, 0x2f1c, 0x1, 0x0);
        gbc.writeMem(0xb723, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb709);
        EXPECT(gbc.pc(), 0xb725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb723), 0x16);
        EXPECT(gbc.readMem(0xb724), 0x5a);
        // 16 0265
        gbc.setState(0xadca, 0x3b27, 0xe2e0, 0x9de5, 0xb89d, 0xe721, 0x0, 0x0);
        gbc.writeMem(0xadca, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3b27);
        EXPECT(gbc.pc(), 0xadcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadca), 0x16);
        EXPECT(gbc.readMem(0xadcb), 0xa4);
        // 16 0266
        gbc.setState(0xe5f2, 0xe209, 0x6230, 0x334c, 0x72fd, 0x2445, 0x0, 0x0);
        gbc.writeMem(0xe5f2, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe209);
        EXPECT(gbc.pc(), 0xe5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f2), 0x16);
        EXPECT(gbc.readMem(0xe5f3), 0xe9);
        // 16 0267
        gbc.setState(0xafba, 0x40ff, 0x9240, 0xba4c, 0xc88e, 0xd817, 0x0, 0x0);
        gbc.writeMem(0xafba, { 0x16, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x40ff);
        EXPECT(gbc.pc(), 0xafbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafba), 0x16);
        EXPECT(gbc.readMem(0xafbb), 0xcf);
        // 16 0268
        gbc.setState(0xa179, 0xea21, 0x870, 0xe1a4, 0x498e, 0x487d, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0x16, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xea21);
        EXPECT(gbc.pc(), 0xa17b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa179), 0x16);
        EXPECT(gbc.readMem(0xa17a), 0x86);
        // 16 0269
        gbc.setState(0x511c, 0xf6a0, 0x31a0, 0xb24c, 0x18b2, 0x3c89, 0x0, 0x0);
        gbc.writeMem(0x511c, { 0x16, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0x511e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 026A
        gbc.setState(0x2c5e, 0x79ca, 0xbed0, 0xd26e, 0xbba0, 0xab5f, 0x0, 0x1);
        gbc.writeMem(0x2c5e, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0x2c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 026B
        gbc.setState(0x7ae7, 0xd492, 0xd420, 0xf6f7, 0xa018, 0x2adf, 0x0, 0x1);
        gbc.writeMem(0x7ae7, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd492);
        EXPECT(gbc.pc(), 0x7ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 026C
        gbc.setState(0xeb47, 0xa57, 0x44b0, 0x42f3, 0x13f4, 0x24f4, 0x1, 0x0);
        gbc.writeMem(0xeb47, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0xeb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb47), 0x16);
        EXPECT(gbc.readMem(0xeb48), 0xa0);
        // 16 026D
        gbc.setState(0xbd2c, 0xea19, 0x4910, 0x7f63, 0xc252, 0x105e, 0x0, 0x1);
        gbc.writeMem(0xbd2c, { 0x16, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xea19);
        EXPECT(gbc.pc(), 0xbd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2c), 0x16);
        EXPECT(gbc.readMem(0xbd2d), 0x1);
        // 16 026E
        gbc.setState(0x244b, 0x12ac, 0xe4c0, 0x989b, 0xa113, 0xe5f0, 0x0, 0x1);
        gbc.writeMem(0x244b, { 0x16, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x12ac);
        EXPECT(gbc.pc(), 0x244d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 026F
        gbc.setState(0xc95f, 0xf267, 0x7f40, 0x729a, 0x6415, 0x4b72, 0x1, 0x0);
        gbc.writeMem(0xc95f, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf267);
        EXPECT(gbc.pc(), 0xc961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95f), 0x16);
        EXPECT(gbc.readMem(0xc960), 0xf5);
        // 16 0270
        gbc.setState(0xa8ac, 0x4dd, 0x7930, 0xa94e, 0x1407, 0x7fbf, 0x0, 0x0);
        gbc.writeMem(0xa8ac, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4dd);
        EXPECT(gbc.pc(), 0xa8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ac), 0x16);
        EXPECT(gbc.readMem(0xa8ad), 0x53);
        // 16 0271
        gbc.setState(0xc1f0, 0x2cf9, 0x9b60, 0x9dc1, 0xd730, 0xc9a6, 0x0, 0x1);
        gbc.writeMem(0xc1f0, { 0x16, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2cf9);
        EXPECT(gbc.pc(), 0xc1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f0), 0x16);
        EXPECT(gbc.readMem(0xc1f1), 0xec);
        // 16 0272
        gbc.setState(0xb9e4, 0xf5df, 0x8cd0, 0xcf0f, 0xdd28, 0xcaec, 0x1, 0x1);
        gbc.writeMem(0xb9e4, { 0x16, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf5df);
        EXPECT(gbc.pc(), 0xb9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e4), 0x16);
        EXPECT(gbc.readMem(0xb9e5), 0x43);
        // 16 0273
        gbc.setState(0x94cd, 0x4610, 0x7cb0, 0xda99, 0x91ba, 0xf1b7, 0x0, 0x1);
        gbc.writeMem(0x94cd, { 0x16, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4610);
        EXPECT(gbc.pc(), 0x94cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cd), 0x16);
        EXPECT(gbc.readMem(0x94ce), 0x78);
        // 16 0274
        gbc.setState(0xb043, 0xd793, 0x4c60, 0x64f9, 0xccb4, 0x7888, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0x16, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd793);
        EXPECT(gbc.pc(), 0xb045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb043), 0x16);
        EXPECT(gbc.readMem(0xb044), 0x7e);
        // 16 0275
        gbc.setState(0x1323, 0x57ea, 0xae60, 0xe635, 0x1413, 0xe0fa, 0x0, 0x1);
        gbc.writeMem(0x1323, { 0x16, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x57ea);
        EXPECT(gbc.pc(), 0x1325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0276
        gbc.setState(0xe69f, 0x912c, 0x3f00, 0xc9c1, 0x680d, 0x3517, 0x0, 0x1);
        gbc.writeMem(0xe69f, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x912c);
        EXPECT(gbc.pc(), 0xe6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe69f), 0x16);
        EXPECT(gbc.readMem(0xe6a0), 0xd7);
        // 16 0277
        gbc.setState(0x4816, 0xd61b, 0x6f20, 0xab1e, 0xe433, 0xf0be, 0x1, 0x0);
        gbc.writeMem(0x4816, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd61b);
        EXPECT(gbc.pc(), 0x4818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0278
        gbc.setState(0xeb6f, 0x418, 0xe6f0, 0x8adc, 0x9b0d, 0x91ee, 0x0, 0x0);
        gbc.writeMem(0xeb6f, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x418);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6f), 0x16);
        EXPECT(gbc.readMem(0xeb70), 0xe5);
        // 16 0279
        gbc.setState(0xbae9, 0x974e, 0x6850, 0xfcac, 0xe571, 0xa5d, 0x0, 0x1);
        gbc.writeMem(0xbae9, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x974e);
        EXPECT(gbc.pc(), 0xbaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae9), 0x16);
        EXPECT(gbc.readMem(0xbaea), 0xf1);
        // 16 027A
        gbc.setState(0xcb75, 0xcf9b, 0x5830, 0x7034, 0x70f7, 0xbddc, 0x0, 0x1);
        gbc.writeMem(0xcb75, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcf9b);
        EXPECT(gbc.pc(), 0xcb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb75), 0x16);
        EXPECT(gbc.readMem(0xcb76), 0xc9);
        // 16 027B
        gbc.setState(0x5edc, 0x30f1, 0x58b0, 0xd5fe, 0x6941, 0x8a2d, 0x1, 0x1);
        gbc.writeMem(0x5edc, { 0x16, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x30f1);
        EXPECT(gbc.pc(), 0x5ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 027C
        gbc.setState(0xf00, 0x6863, 0x61c0, 0x4901, 0x2673, 0x3fe0, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0x16, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6863);
        EXPECT(gbc.pc(), 0xf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 027E
        gbc.setState(0xdd98, 0x65e2, 0x4bd0, 0x6003, 0x4fb9, 0x25ba, 0x0, 0x1);
        gbc.writeMem(0xdd98, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x65e2);
        EXPECT(gbc.pc(), 0xdd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd98), 0x16);
        EXPECT(gbc.readMem(0xdd99), 0xc3);
        // 16 027F
        gbc.setState(0x7209, 0x84c4, 0x2220, 0xe292, 0xb01, 0xa4ff, 0x1, 0x1);
        gbc.writeMem(0x7209, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x84c4);
        EXPECT(gbc.pc(), 0x720b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0280
        gbc.setState(0x4983, 0x1f6e, 0x6940, 0xe212, 0x2492, 0x9734, 0x1, 0x1);
        gbc.writeMem(0x4983, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1f6e);
        EXPECT(gbc.pc(), 0x4985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0282
        gbc.setState(0x119d, 0xf01f, 0xe7d0, 0x9b06, 0xe8f5, 0xde51, 0x1, 0x1);
        gbc.writeMem(0x119d, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf01f);
        EXPECT(gbc.pc(), 0x119f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0283
        gbc.setState(0xc4a4, 0x2693, 0xc4d0, 0x694, 0xdf07, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0xc4a4, { 0x16, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0xc4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a4), 0x16);
        EXPECT(gbc.readMem(0xc4a5), 0x76);
        // 16 0284
        gbc.setState(0xd182, 0x3c53, 0xe0, 0xde27, 0xdd3e, 0x783c, 0x0, 0x0);
        gbc.writeMem(0xd182, { 0x16, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3c53);
        EXPECT(gbc.pc(), 0xd184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd182), 0x16);
        EXPECT(gbc.readMem(0xd183), 0x96);
        // 16 0285
        gbc.setState(0x9cc, 0x43ee, 0xd150, 0x65d, 0x6249, 0x8b39, 0x1, 0x1);
        gbc.writeMem(0x9cc, { 0x16, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x43ee);
        EXPECT(gbc.pc(), 0x9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0286
        gbc.setState(0x3105, 0x317b, 0xd640, 0xdd28, 0xefa8, 0xbb1a, 0x1, 0x0);
        gbc.writeMem(0x3105, { 0x16, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x317b);
        EXPECT(gbc.pc(), 0x3107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0287
        gbc.setState(0x60ed, 0xa991, 0x9c0, 0x229e, 0x1399, 0x4d4e, 0x0, 0x1);
        gbc.writeMem(0x60ed, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa991);
        EXPECT(gbc.pc(), 0x60ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0288
        gbc.setState(0x8c33, 0x19aa, 0xa660, 0xd6e8, 0x4b6e, 0x6457, 0x0, 0x1);
        gbc.writeMem(0x8c33, { 0x16, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x19aa);
        EXPECT(gbc.pc(), 0x8c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c33), 0x16);
        EXPECT(gbc.readMem(0x8c34), 0x1c);
        // 16 0289
        gbc.setState(0x89d0, 0xcaf6, 0x58e0, 0xa12f, 0x1692, 0xf125, 0x0, 0x0);
        gbc.writeMem(0x89d0, { 0x16, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcaf6);
        EXPECT(gbc.pc(), 0x89d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d0), 0x16);
        EXPECT(gbc.readMem(0x89d1), 0x19);
        // 16 028A
        gbc.setState(0xb203, 0x6a49, 0x7fb0, 0xbd8c, 0x4db5, 0xe367, 0x0, 0x1);
        gbc.writeMem(0xb203, { 0x16, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6a49);
        EXPECT(gbc.pc(), 0xb205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb203), 0x16);
        EXPECT(gbc.readMem(0xb204), 0xfe);
        // 16 028B
        gbc.setState(0x1a8a, 0x1493, 0x9a20, 0xef46, 0x1b35, 0xefff, 0x0, 0x1);
        gbc.writeMem(0x1a8a, { 0x16, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1493);
        EXPECT(gbc.pc(), 0x1a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 028C
        gbc.setState(0xb894, 0x4fc9, 0x8f30, 0x55d2, 0xdeb9, 0xbd2a, 0x0, 0x0);
        gbc.writeMem(0xb894, { 0x16, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4fc9);
        EXPECT(gbc.pc(), 0xb896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb894), 0x16);
        EXPECT(gbc.readMem(0xb895), 0x58);
        // 16 028D
        gbc.setState(0xef4b, 0x50c7, 0x80b0, 0xd114, 0x49db, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0xef4b, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x50c7);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4b), 0x16);
        EXPECT(gbc.readMem(0xef4c), 0xc3);
        // 16 028E
        gbc.setState(0x9f92, 0xb53a, 0xeb0, 0xfd27, 0xf015, 0x9510, 0x1, 0x1);
        gbc.writeMem(0x9f92, { 0x16, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb53a);
        EXPECT(gbc.pc(), 0x9f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f92), 0x16);
        EXPECT(gbc.readMem(0x9f93), 0x65);
        // 16 028F
        gbc.setState(0x5a, 0x91ce, 0x9f70, 0xeda8, 0x6f96, 0x9ca6, 0x1, 0x1);
        gbc.writeMem(0x5a, { 0x16, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x91ce);
        EXPECT(gbc.pc(), 0x5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0290
        gbc.setState(0x3b9f, 0xccca, 0x8330, 0xad47, 0x7b39, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0x3b9f, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xccca);
        EXPECT(gbc.pc(), 0x3ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0291
        gbc.setState(0x2236, 0x6e7d, 0xba80, 0xe62f, 0x3b5e, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0x2236, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e7d);
        EXPECT(gbc.pc(), 0x2238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0292
        gbc.setState(0xb610, 0x8211, 0xbae0, 0x32b9, 0x7581, 0x2bbd, 0x1, 0x1);
        gbc.writeMem(0xb610, { 0x16, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8211);
        EXPECT(gbc.pc(), 0xb612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb610), 0x16);
        EXPECT(gbc.readMem(0xb611), 0xe4);
        // 16 0293
        gbc.setState(0x25dc, 0xb972, 0x4760, 0x2467, 0x423c, 0x50c9, 0x1, 0x1);
        gbc.writeMem(0x25dc, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb972);
        EXPECT(gbc.pc(), 0x25de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0294
        gbc.setState(0xdee4, 0x1c40, 0xca60, 0xf138, 0xd20c, 0x8671, 0x1, 0x1);
        gbc.writeMem(0xdee4, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1c40);
        EXPECT(gbc.pc(), 0xdee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee4), 0x16);
        EXPECT(gbc.readMem(0xdee5), 0xb7);
        // 16 0295
        gbc.setState(0xe7f1, 0x21, 0x2210, 0x4854, 0x8e47, 0x7ab4, 0x0, 0x0);
        gbc.writeMem(0xe7f1, { 0x16, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x21);
        EXPECT(gbc.pc(), 0xe7f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f1), 0x16);
        EXPECT(gbc.readMem(0xe7f2), 0xaf);
        // 16 0297
        gbc.setState(0xe88c, 0x76fb, 0x8930, 0xd6b5, 0xec70, 0x19fc, 0x1, 0x0);
        gbc.writeMem(0xe88c, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x76fb);
        EXPECT(gbc.pc(), 0xe88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88c), 0x16);
        EXPECT(gbc.readMem(0xe88d), 0xa1);
        // 16 0298
        gbc.setState(0xc065, 0x2767, 0xb80, 0x8bc0, 0x634b, 0xd38a, 0x0, 0x1);
        gbc.writeMem(0xc065, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2767);
        EXPECT(gbc.pc(), 0xc067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0x16);
        EXPECT(gbc.readMem(0xc066), 0x5b);
        // 16 0299
        gbc.setState(0x3130, 0x2f7, 0x8f10, 0xe840, 0x9d0d, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0x16, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2f7);
        EXPECT(gbc.pc(), 0x3132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 029A
        gbc.setState(0xa7ab, 0xde7, 0x5260, 0x99bb, 0xc2a8, 0xc83b, 0x1, 0x1);
        gbc.writeMem(0xa7ab, { 0x16, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xde7);
        EXPECT(gbc.pc(), 0xa7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ab), 0x16);
        EXPECT(gbc.readMem(0xa7ac), 0x6c);
        // 16 029B
        gbc.setState(0x10f7, 0x2c14, 0x3640, 0x6740, 0x36dc, 0x251, 0x0, 0x1);
        gbc.writeMem(0x10f7, { 0x16, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2c14);
        EXPECT(gbc.pc(), 0x10f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 029C
        gbc.setState(0x9664, 0x4c05, 0x3560, 0xc696, 0xf5b1, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x9664, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4c05);
        EXPECT(gbc.pc(), 0x9666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9664), 0x16);
        EXPECT(gbc.readMem(0x9665), 0xf7);
        // 16 029D
        gbc.setState(0x2b7a, 0x95cf, 0x5b20, 0x320b, 0x7562, 0x8399, 0x1, 0x0);
        gbc.writeMem(0x2b7a, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x95cf);
        EXPECT(gbc.pc(), 0x2b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 029E
        gbc.setState(0xeb2c, 0x1736, 0x92a0, 0xbe0a, 0xd2f7, 0xb759, 0x0, 0x1);
        gbc.writeMem(0xeb2c, { 0x16, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1736);
        EXPECT(gbc.pc(), 0xeb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2c), 0x16);
        EXPECT(gbc.readMem(0xeb2d), 0x99);
        // 16 029F
        gbc.setState(0xba45, 0x2101, 0xb220, 0xc4a3, 0x803e, 0x21ab, 0x0, 0x1);
        gbc.writeMem(0xba45, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2101);
        EXPECT(gbc.pc(), 0xba47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba45), 0x16);
        EXPECT(gbc.readMem(0xba46), 0xf6);
        // 16 02A0
        gbc.setState(0xbc88, 0x410e, 0xebf0, 0x58b4, 0xe20, 0x3a8f, 0x1, 0x0);
        gbc.writeMem(0xbc88, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x410e);
        EXPECT(gbc.pc(), 0xbc8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc88), 0x16);
        EXPECT(gbc.readMem(0xbc89), 0x60);
        // 16 02A1
        gbc.setState(0x85b, 0xd585, 0x6320, 0x64a3, 0x6747, 0x4d7, 0x1, 0x0);
        gbc.writeMem(0x85b, { 0x16, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd585);
        EXPECT(gbc.pc(), 0x85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02A2
        gbc.setState(0x29f, 0x3a70, 0xe960, 0x5a22, 0xfaa5, 0xe4b2, 0x0, 0x0);
        gbc.writeMem(0x29f, { 0x16, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3a70);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02A3
        gbc.setState(0xab9, 0x7601, 0xe2e0, 0xdc05, 0x234b, 0xbeec, 0x1, 0x1);
        gbc.writeMem(0xab9, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7601);
        EXPECT(gbc.pc(), 0xabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02A4
        gbc.setState(0xda42, 0x6072, 0xe200, 0x30b9, 0xc84f, 0x9708, 0x1, 0x0);
        gbc.writeMem(0xda42, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6072);
        EXPECT(gbc.pc(), 0xda44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda42), 0x16);
        EXPECT(gbc.readMem(0xda43), 0x85);
        // 16 02A5
        gbc.setState(0x5947, 0xef9b, 0xcf50, 0xa112, 0x3530, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x5947, { 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xef9b);
        EXPECT(gbc.pc(), 0x5949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02A6
        gbc.setState(0x6669, 0x5055, 0x2b90, 0xf454, 0xd143, 0xbc0, 0x0, 0x0);
        gbc.writeMem(0x6669, { 0x16, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5055);
        EXPECT(gbc.pc(), 0x666b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02A7
        gbc.setState(0x875e, 0x7fa4, 0x49f0, 0xe56a, 0x1ecd, 0xca48, 0x1, 0x0);
        gbc.writeMem(0x875e, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7fa4);
        EXPECT(gbc.pc(), 0x8760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875e), 0x16);
        EXPECT(gbc.readMem(0x875f), 0xc3);
        // 16 02A8
        gbc.setState(0x32ea, 0x548e, 0xf400, 0x5bdf, 0x8d46, 0xfb5a, 0x0, 0x1);
        gbc.writeMem(0x32ea, { 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x548e);
        EXPECT(gbc.pc(), 0x32ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02A9
        gbc.setState(0x686e, 0xd815, 0x9010, 0x5397, 0xcc32, 0xe237, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0x6870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02AA
        gbc.setState(0xbd88, 0x8cc8, 0x4fe0, 0x2f90, 0x29a8, 0xbae, 0x1, 0x0);
        gbc.writeMem(0xbd88, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8cc8);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd88), 0x16);
        EXPECT(gbc.readMem(0xbd89), 0xc9);
        // 16 02AB
        gbc.setState(0x95d9, 0x4ce0, 0xd4a0, 0x6008, 0x1df3, 0x857e, 0x0, 0x1);
        gbc.writeMem(0x95d9, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4ce0);
        EXPECT(gbc.pc(), 0x95db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d9), 0x16);
        EXPECT(gbc.readMem(0x95da), 0xc3);
        // 16 02AC
        gbc.setState(0xe05e, 0x1317, 0x73f0, 0x2d89, 0x6d56, 0x3483, 0x0, 0x1);
        gbc.writeMem(0xe05e, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1317);
        EXPECT(gbc.pc(), 0xe060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05e), 0x16);
        EXPECT(gbc.readMem(0xe05f), 0xa1);
        // 16 02AD
        gbc.setState(0x1a56, 0xd177, 0x350, 0xfd7a, 0xec15, 0x71e2, 0x1, 0x1);
        gbc.writeMem(0x1a56, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd177);
        EXPECT(gbc.pc(), 0x1a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02AE
        gbc.setState(0x274, 0x8bf0, 0x5c30, 0x531a, 0x9922, 0xbb33, 0x0, 0x1);
        gbc.writeMem(0x274, { 0x16, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8bf0);
        EXPECT(gbc.pc(), 0x276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02AF
        gbc.setState(0x813a, 0x9d65, 0x9b0, 0x3781, 0x8963, 0x5d47, 0x0, 0x1);
        gbc.writeMem(0x813a, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0x813c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813a), 0x16);
        EXPECT(gbc.readMem(0x813b), 0x3);
        // 16 02B0
        gbc.setState(0x378d, 0x222c, 0xcce0, 0x537e, 0x3209, 0xa0b3, 0x1, 0x1);
        gbc.writeMem(0x378d, { 0x16, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x222c);
        EXPECT(gbc.pc(), 0x378f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02B1
        gbc.setState(0xcdc4, 0xee55, 0xad10, 0xf6e4, 0x8c88, 0x6e68, 0x0, 0x1);
        gbc.writeMem(0xcdc4, { 0x16, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xee55);
        EXPECT(gbc.pc(), 0xcdc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc4), 0x16);
        EXPECT(gbc.readMem(0xcdc5), 0x64);
        // 16 02B2
        gbc.setState(0x7dac, 0x5509, 0x1500, 0x247e, 0x7df3, 0x688f, 0x0, 0x1);
        gbc.writeMem(0x7dac, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5509);
        EXPECT(gbc.pc(), 0x7dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02B4
        gbc.setState(0xc445, 0xb5dc, 0xa0a0, 0x7f23, 0xbd89, 0x13b, 0x1, 0x1);
        gbc.writeMem(0xc445, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb5dc);
        EXPECT(gbc.pc(), 0xc447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc445), 0x16);
        EXPECT(gbc.readMem(0xc446), 0xc7);
        // 16 02B5
        gbc.setState(0x4284, 0xe9f0, 0x1630, 0xfcc6, 0xe94d, 0xcd2f, 0x0, 0x0);
        gbc.writeMem(0x4284, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe9f0);
        EXPECT(gbc.pc(), 0x4286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02B6
        gbc.setState(0x3fc6, 0x3282, 0x2d10, 0x1016, 0xed32, 0xfef1, 0x1, 0x1);
        gbc.writeMem(0x3fc6, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3282);
        EXPECT(gbc.pc(), 0x3fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02B7
        gbc.setState(0xd304, 0x4276, 0xd000, 0xd0d1, 0x528a, 0xe55b, 0x1, 0x0);
        gbc.writeMem(0xd304, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4276);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd304), 0x16);
        EXPECT(gbc.readMem(0xd305), 0xa7);
        // 16 02B8
        gbc.setState(0xc715, 0xb095, 0x9b30, 0xfc5d, 0x1f82, 0x4667, 0x1, 0x1);
        gbc.writeMem(0xc715, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb095);
        EXPECT(gbc.pc(), 0xc717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc715), 0x16);
        EXPECT(gbc.readMem(0xc716), 0x2b);
        // 16 02B9
        gbc.setState(0xb2d5, 0x765d, 0x5e50, 0xc66a, 0x3357, 0xc504, 0x0, 0x1);
        gbc.writeMem(0xb2d5, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x765d);
        EXPECT(gbc.pc(), 0xb2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d5), 0x16);
        EXPECT(gbc.readMem(0xb2d6), 0xc0);
        // 16 02BA
        gbc.setState(0x773c, 0x4c95, 0x9280, 0x9854, 0x9968, 0x9825, 0x1, 0x1);
        gbc.writeMem(0x773c, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4c95);
        EXPECT(gbc.pc(), 0x773e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02BB
        gbc.setState(0xbdf7, 0x8a3e, 0xa630, 0xf87, 0xc95c, 0xa5ac, 0x0, 0x0);
        gbc.writeMem(0xbdf7, { 0x16, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8a3e);
        EXPECT(gbc.pc(), 0xbdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf7), 0x16);
        EXPECT(gbc.readMem(0xbdf8), 0x29);
        // 16 02BC
        gbc.setState(0x32eb, 0xdc2a, 0x3660, 0xb453, 0x923e, 0x92ba, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0x16, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdc2a);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02BD
        gbc.setState(0x7733, 0x540, 0xdce0, 0x9dc2, 0x1e6, 0x3939, 0x0, 0x1);
        gbc.writeMem(0x7733, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x540);
        EXPECT(gbc.pc(), 0x7735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02BE
        gbc.setState(0x1307, 0x9650, 0xe380, 0xb107, 0x1060, 0xc5f6, 0x0, 0x1);
        gbc.writeMem(0x1307, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9650);
        EXPECT(gbc.pc(), 0x1309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02BF
        gbc.setState(0x838d, 0x71e, 0x34b0, 0xcf3e, 0x6b45, 0x2661, 0x0, 0x1);
        gbc.writeMem(0x838d, { 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x71e);
        EXPECT(gbc.pc(), 0x838f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838d), 0x16);
        EXPECT(gbc.readMem(0x838e), 0x16);
        // 16 02C0
        gbc.setState(0x9166, 0xa2e7, 0x9950, 0xcaf1, 0x4683, 0x97ff, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0x16, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa2e7);
        EXPECT(gbc.pc(), 0x9168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9166), 0x16);
        EXPECT(gbc.readMem(0x9167), 0x39);
        // 16 02C1
        gbc.setState(0x9b82, 0x38bc, 0x32f0, 0x252a, 0x79e1, 0xad76, 0x1, 0x0);
        gbc.writeMem(0x9b82, { 0x16, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x38bc);
        EXPECT(gbc.pc(), 0x9b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b82), 0x16);
        EXPECT(gbc.readMem(0x9b83), 0x6e);
        // 16 02C2
        gbc.setState(0x93c6, 0xb311, 0x4ed0, 0x127a, 0xa32d, 0x6547, 0x0, 0x1);
        gbc.writeMem(0x93c6, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb311);
        EXPECT(gbc.pc(), 0x93c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c6), 0x16);
        EXPECT(gbc.readMem(0x93c7), 0xd3);
        // 16 02C3
        gbc.setState(0x7c90, 0x9e42, 0x9710, 0xbbbc, 0x31a3, 0x8c6f, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0x16, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9e42);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02C4
        gbc.setState(0x29c6, 0x6a61, 0xb80, 0x6130, 0x4468, 0xce64, 0x1, 0x0);
        gbc.writeMem(0x29c6, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6a61);
        EXPECT(gbc.pc(), 0x29c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02C5
        gbc.setState(0x8432, 0xfd97, 0xe070, 0x147d, 0x8282, 0x2aa5, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0x16, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfd97);
        EXPECT(gbc.pc(), 0x8434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8432), 0x16);
        EXPECT(gbc.readMem(0x8433), 0x5c);
        // 16 02C6
        gbc.setState(0xb409, 0xb54f, 0xd110, 0x649a, 0x7960, 0xdac3, 0x1, 0x0);
        gbc.writeMem(0xb409, { 0x16, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0xb40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb409), 0x16);
        EXPECT(gbc.readMem(0xb40a), 0xfa);
        // 16 02C7
        gbc.setState(0x2ec2, 0x8d71, 0x4760, 0x830b, 0x3ba, 0x59ef, 0x0, 0x1);
        gbc.writeMem(0x2ec2, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8d71);
        EXPECT(gbc.pc(), 0x2ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02C8
        gbc.setState(0xe332, 0x56a8, 0xa1a0, 0x2ee5, 0x8c8a, 0x8cb1, 0x1, 0x1);
        gbc.writeMem(0xe332, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0xe334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe332), 0x16);
        EXPECT(gbc.readMem(0xe333), 0xc7);
        // 16 02C9
        gbc.setState(0xcb, 0xfa61, 0x7390, 0xaaf9, 0x1a0, 0x1977, 0x0, 0x0);
        gbc.writeMem(0xcb, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfa61);
        EXPECT(gbc.pc(), 0xcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02CA
        gbc.setState(0x118e, 0x99cc, 0x1260, 0x6668, 0xe760, 0x25aa, 0x0, 0x1);
        gbc.writeMem(0x118e, { 0x16, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x99cc);
        EXPECT(gbc.pc(), 0x1190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02CB
        gbc.setState(0x190d, 0xf1e2, 0x32f0, 0xa964, 0xefa7, 0xfcc1, 0x0, 0x1);
        gbc.writeMem(0x190d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf1e2);
        EXPECT(gbc.pc(), 0x190f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02CC
        gbc.setState(0xaa9f, 0x3eba, 0xf040, 0xf44, 0x3453, 0x439e, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3eba);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9f), 0x16);
        EXPECT(gbc.readMem(0xaaa0), 0xa1);
        // 16 02CD
        gbc.setState(0x1b1c, 0xff5d, 0xa740, 0xa7fd, 0x2836, 0x8593, 0x1, 0x1);
        gbc.writeMem(0x1b1c, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0x1b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02CE
        gbc.setState(0x1749, 0x1dbd, 0x88c0, 0xe6ba, 0xdcd0, 0xa60e, 0x0, 0x1);
        gbc.writeMem(0x1749, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1dbd);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02CF
        gbc.setState(0x7d5c, 0x3762, 0xa400, 0x1a1a, 0x8b80, 0x27c, 0x0, 0x1);
        gbc.writeMem(0x7d5c, { 0x16, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3762);
        EXPECT(gbc.pc(), 0x7d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02D0
        gbc.setState(0xec83, 0x8411, 0xb130, 0x4ac1, 0xc464, 0xa422, 0x0, 0x0);
        gbc.writeMem(0xec83, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8411);
        EXPECT(gbc.pc(), 0xec85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec83), 0x16);
        EXPECT(gbc.readMem(0xec84), 0xf4);
        // 16 02D1
        gbc.setState(0xc91c, 0xb785, 0xa960, 0x50d5, 0xdd90, 0xfb09, 0x1, 0x1);
        gbc.writeMem(0xc91c, { 0x16, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb785);
        EXPECT(gbc.pc(), 0xc91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91c), 0x16);
        EXPECT(gbc.readMem(0xc91d), 0x9c);
        // 16 02D2
        gbc.setState(0xa924, 0x51e7, 0xcb40, 0xb40f, 0xd1ae, 0xed6a, 0x0, 0x0);
        gbc.writeMem(0xa924, { 0x16, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x51e7);
        EXPECT(gbc.pc(), 0xa926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa924), 0x16);
        EXPECT(gbc.readMem(0xa925), 0xdd);
        // 16 02D3
        gbc.setState(0x9c63, 0xc363, 0x6380, 0x6c04, 0xfc30, 0x2e75, 0x0, 0x0);
        gbc.writeMem(0x9c63, { 0x16, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc363);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0x16);
        EXPECT(gbc.readMem(0x9c64), 0x71);
        // 16 02D4
        gbc.setState(0x2f60, 0x701d, 0x4450, 0xc01d, 0x4dbe, 0xee37, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x701d);
        EXPECT(gbc.pc(), 0x2f62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02D5
        gbc.setState(0xe996, 0x197a, 0x3780, 0xdb86, 0xe58a, 0x6098, 0x1, 0x1);
        gbc.writeMem(0xe996, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x197a);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe996), 0x16);
        EXPECT(gbc.readMem(0xe997), 0x2);
        // 16 02D6
        gbc.setState(0xa003, 0x4930, 0x7780, 0xf302, 0x157f, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0xa003, { 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4930);
        EXPECT(gbc.pc(), 0xa005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa003), 0x16);
        EXPECT(gbc.readMem(0xa004), 0x8b);
        // 16 02D7
        gbc.setState(0x42af, 0xd8d9, 0x30, 0x9e9e, 0x5cb4, 0x7056, 0x0, 0x1);
        gbc.writeMem(0x42af, { 0x16, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd8d9);
        EXPECT(gbc.pc(), 0x42b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02D8
        gbc.setState(0xa6ee, 0xb814, 0x25d0, 0x97e0, 0x453a, 0x4d03, 0x0, 0x1);
        gbc.writeMem(0xa6ee, { 0x16, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0xa6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ee), 0x16);
        EXPECT(gbc.readMem(0xa6ef), 0x76);
        // 16 02D9
        gbc.setState(0x767c, 0xec81, 0xb900, 0xdd70, 0x8c08, 0xf9f2, 0x1, 0x1);
        gbc.writeMem(0x767c, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xec81);
        EXPECT(gbc.pc(), 0x767e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02DA
        gbc.setState(0x71bb, 0x7445, 0x6850, 0xb44b, 0x9bc7, 0xc401, 0x1, 0x0);
        gbc.writeMem(0x71bb, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7445);
        EXPECT(gbc.pc(), 0x71bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02DB
        gbc.setState(0x688a, 0xd81f, 0xbdc0, 0xdcb6, 0xb351, 0xee35, 0x1, 0x0);
        gbc.writeMem(0x688a, { 0x16, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd81f);
        EXPECT(gbc.pc(), 0x688c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02DC
        gbc.setState(0x4a49, 0x755e, 0x1740, 0xd9cc, 0x3e3a, 0xb572, 0x1, 0x1);
        gbc.writeMem(0x4a49, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x755e);
        EXPECT(gbc.pc(), 0x4a4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02DD
        gbc.setState(0xc3a3, 0x9387, 0x4700, 0x40e, 0x2d8c, 0xd2ef, 0x0, 0x0);
        gbc.writeMem(0xc3a3, { 0x16, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9387);
        EXPECT(gbc.pc(), 0xc3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a3), 0x16);
        EXPECT(gbc.readMem(0xc3a4), 0x2a);
        // 16 02DE
        gbc.setState(0x23c8, 0x5dfe, 0xa040, 0x145b, 0x46dd, 0x6961, 0x0, 0x0);
        gbc.writeMem(0x23c8, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5dfe);
        EXPECT(gbc.pc(), 0x23ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02DF
        gbc.setState(0x37e1, 0x32a8, 0xd5d0, 0x96e6, 0xa6bb, 0xbf5b, 0x1, 0x0);
        gbc.writeMem(0x37e1, { 0x16, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x32a8);
        EXPECT(gbc.pc(), 0x37e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02E0
        gbc.setState(0x7d7, 0x683b, 0xfcf0, 0x9db1, 0x16e4, 0x3ae3, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0x16, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x683b);
        EXPECT(gbc.pc(), 0x7d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02E1
        gbc.setState(0x3d4c, 0xc5d1, 0x230, 0x2251, 0x8e62, 0xb14, 0x1, 0x0);
        gbc.writeMem(0x3d4c, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc5d1);
        EXPECT(gbc.pc(), 0x3d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02E2
        gbc.setState(0x19c4, 0x3119, 0x4620, 0xa890, 0x379d, 0x300a, 0x1, 0x1);
        gbc.writeMem(0x19c4, { 0x16, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3119);
        EXPECT(gbc.pc(), 0x19c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02E3
        gbc.setState(0xbe1a, 0x976, 0xa0, 0x29db, 0x87aa, 0x1917, 0x1, 0x1);
        gbc.writeMem(0xbe1a, { 0x16, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x976);
        EXPECT(gbc.pc(), 0xbe1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1a), 0x16);
        EXPECT(gbc.readMem(0xbe1b), 0xed);
        // 16 02E4
        gbc.setState(0xd132, 0xf638, 0x2d50, 0x826, 0xd562, 0xd50d, 0x0, 0x0);
        gbc.writeMem(0xd132, { 0x16, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf638);
        EXPECT(gbc.pc(), 0xd134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd132), 0x16);
        EXPECT(gbc.readMem(0xd133), 0x37);
        // 16 02E6
        gbc.setState(0x2979, 0x8e6d, 0x5c0, 0xa52a, 0xae95, 0x18ef, 0x0, 0x1);
        gbc.writeMem(0x2979, { 0x16, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8e6d);
        EXPECT(gbc.pc(), 0x297b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02E7
        gbc.setState(0x897e, 0xf235, 0x2ca0, 0x9078, 0xbd31, 0x5cfb, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0x16, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf235);
        EXPECT(gbc.pc(), 0x8980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897e), 0x16);
        EXPECT(gbc.readMem(0x897f), 0x86);
        // 16 02E8
        gbc.setState(0x1ba3, 0x2d, 0xcf20, 0xd010, 0xa9f8, 0x3c05, 0x1, 0x0);
        gbc.writeMem(0x1ba3, { 0x16, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2d);
        EXPECT(gbc.pc(), 0x1ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 02E9
        gbc.setState(0x4fdd, 0xb26d, 0xd7c0, 0xb124, 0xa5fd, 0x86a2, 0x0, 0x1);
        gbc.writeMem(0x4fdd, { 0x16, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb26d);
        EXPECT(gbc.pc(), 0x4fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02EA
        gbc.setState(0xbdca, 0x96e, 0x2090, 0x1559, 0xc3e8, 0xe2c1, 0x0, 0x1);
        gbc.writeMem(0xbdca, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x96e);
        EXPECT(gbc.pc(), 0xbdcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdca), 0x16);
        EXPECT(gbc.readMem(0xbdcb), 0xd3);
        // 16 02EB
        gbc.setState(0xaf62, 0xee5a, 0x13f0, 0xf607, 0xbd9, 0xa6d4, 0x1, 0x1);
        gbc.writeMem(0xaf62, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0xaf64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf62), 0x16);
        EXPECT(gbc.readMem(0xaf63), 0xb2);
        // 16 02ED
        gbc.setState(0x4e15, 0xca09, 0x9770, 0xf0dc, 0xb662, 0x3ee2, 0x1, 0x0);
        gbc.writeMem(0x4e15, { 0x16, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xca09);
        EXPECT(gbc.pc(), 0x4e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02EE
        gbc.setState(0x6d53, 0xd7d8, 0x6a30, 0xfe52, 0xcf50, 0xbf99, 0x0, 0x1);
        gbc.writeMem(0x6d53, { 0x16, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd7d8);
        EXPECT(gbc.pc(), 0x6d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02EF
        gbc.setState(0x8fec, 0xe947, 0x4e30, 0xd89, 0x52f0, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x8fec, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe947);
        EXPECT(gbc.pc(), 0x8fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fec), 0x16);
        EXPECT(gbc.readMem(0x8fed), 0xc1);
        // 16 02F0
        gbc.setState(0x13fb, 0x585b, 0x6ec0, 0x246c, 0x9ef7, 0xaad3, 0x1, 0x0);
        gbc.writeMem(0x13fb, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x585b);
        EXPECT(gbc.pc(), 0x13fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02F1
        gbc.setState(0xc702, 0xbd35, 0xea90, 0x899, 0x8adf, 0xf209, 0x0, 0x1);
        gbc.writeMem(0xc702, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbd35);
        EXPECT(gbc.pc(), 0xc704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc702), 0x16);
        EXPECT(gbc.readMem(0xc703), 0xd2);
        // 16 02F2
        gbc.setState(0xee73, 0x2698, 0x8410, 0xb8e0, 0x9c98, 0x4b3, 0x0, 0x1);
        gbc.writeMem(0xee73, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2698);
        EXPECT(gbc.pc(), 0xee75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee73), 0x16);
        EXPECT(gbc.readMem(0xee74), 0x2b);
        // 16 02F3
        gbc.setState(0x379f, 0x1bb8, 0xc450, 0x4464, 0x3767, 0xe120, 0x1, 0x0);
        gbc.writeMem(0x379f, { 0x16, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1bb8);
        EXPECT(gbc.pc(), 0x37a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02F4
        gbc.setState(0xc020, 0xa789, 0x9ee0, 0x9d2b, 0xb994, 0xf9e6, 0x1, 0x0);
        gbc.writeMem(0xc020, { 0x16, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa789);
        EXPECT(gbc.pc(), 0xc022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc020), 0x16);
        EXPECT(gbc.readMem(0xc021), 0x65);
        // 16 02F5
        gbc.setState(0xa824, 0x6092, 0xcd30, 0x52bf, 0xffd5, 0xd71e, 0x0, 0x1);
        gbc.writeMem(0xa824, { 0x16, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6092);
        EXPECT(gbc.pc(), 0xa826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa824), 0x16);
        EXPECT(gbc.readMem(0xa825), 0xab);
        // 16 02F6
        gbc.setState(0xbd6c, 0x3c42, 0xcda0, 0xa34, 0x1a41, 0xcc9a, 0x1, 0x0);
        gbc.writeMem(0xbd6c, { 0x16, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3c42);
        EXPECT(gbc.pc(), 0xbd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6c), 0x16);
        EXPECT(gbc.readMem(0xbd6d), 0x69);
        // 16 02F7
        gbc.setState(0x7192, 0x7f25, 0x1800, 0xb7bd, 0x8c3e, 0xab4c, 0x1, 0x0);
        gbc.writeMem(0x7192, { 0x16, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7f25);
        EXPECT(gbc.pc(), 0x7194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02F8
        gbc.setState(0xca9b, 0x41bc, 0xf750, 0xaa66, 0x876, 0xd723, 0x1, 0x0);
        gbc.writeMem(0xca9b, { 0x16, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x41bc);
        EXPECT(gbc.pc(), 0xca9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9b), 0x16);
        EXPECT(gbc.readMem(0xca9c), 0x61);
        // 16 02F9
        gbc.setState(0x7dc7, 0xe00f, 0xdb70, 0xcf75, 0x6200, 0xd7f3, 0x0, 0x1);
        gbc.writeMem(0x7dc7, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe00f);
        EXPECT(gbc.pc(), 0x7dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02FA
        gbc.setState(0x231a, 0x3d2b, 0x5390, 0xb3d6, 0x9086, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0x231a, { 0x16, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3d2b);
        EXPECT(gbc.pc(), 0x231c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 02FB
        gbc.setState(0xb11, 0x9641, 0x4bf0, 0x485f, 0xcff, 0xb68e, 0x1, 0x1);
        gbc.writeMem(0xb11, { 0x16, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9641);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02FC
        gbc.setState(0xfc4, 0xf2b9, 0x4e80, 0x5320, 0xba0a, 0x1e03, 0x1, 0x1);
        gbc.writeMem(0xfc4, { 0x16, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf2b9);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 02FD
        gbc.setState(0x43be, 0xbead, 0x6b0, 0x6460, 0x3c82, 0xa146, 0x1, 0x0);
        gbc.writeMem(0x43be, { 0x16, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbead);
        EXPECT(gbc.pc(), 0x43c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02FE
        gbc.setState(0x2cd7, 0x93a1, 0xc0f0, 0x513b, 0x51ab, 0x56e2, 0x0, 0x1);
        gbc.writeMem(0x2cd7, { 0x16, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x93a1);
        EXPECT(gbc.pc(), 0x2cd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 02FF
        gbc.setState(0xc7a5, 0xde52, 0x9000, 0x858d, 0xee3a, 0x1018, 0x0, 0x1);
        gbc.writeMem(0xc7a5, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xde52);
        EXPECT(gbc.pc(), 0xc7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a5), 0x16);
        EXPECT(gbc.readMem(0xc7a6), 0xc2);
        // 16 0301
        gbc.setState(0x69ef, 0xcb76, 0xfca0, 0xad6a, 0xce6c, 0xac44, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0x16, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcb76);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0302
        gbc.setState(0x82bc, 0x548e, 0x3d0, 0xdded, 0xe330, 0x2810, 0x0, 0x1);
        gbc.writeMem(0x82bc, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x548e);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bc), 0x16);
        EXPECT(gbc.readMem(0x82bd), 0xb7);
        // 16 0303
        gbc.setState(0x27cc, 0x6df6, 0xd4c0, 0x47c9, 0x154f, 0x7aab, 0x0, 0x1);
        gbc.writeMem(0x27cc, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6df6);
        EXPECT(gbc.pc(), 0x27ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0304
        gbc.setState(0xe3fe, 0x5b27, 0xedd0, 0x3861, 0x9dc5, 0x4a16, 0x0, 0x0);
        gbc.writeMem(0xe3fe, { 0x16, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5b27);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0x16);
        EXPECT(gbc.readMem(0xe3ff), 0x5f);
        // 16 0305
        gbc.setState(0x230a, 0x2b8, 0xab40, 0x8ffe, 0x8dcd, 0xa92f, 0x0, 0x0);
        gbc.writeMem(0x230a, { 0x16, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b8);
        EXPECT(gbc.pc(), 0x230c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0306
        gbc.setState(0x74c0, 0x8a92, 0x5010, 0x8955, 0x147c, 0x5860, 0x0, 0x1);
        gbc.writeMem(0x74c0, { 0x16, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8a92);
        EXPECT(gbc.pc(), 0x74c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0307
        gbc.setState(0x9363, 0x6929, 0x1490, 0xb3e1, 0xbf43, 0x8a1f, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6929);
        EXPECT(gbc.pc(), 0x9365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9363), 0x16);
        EXPECT(gbc.readMem(0x9364), 0x72);
        // 16 0308
        gbc.setState(0xc0b2, 0x6bd4, 0xf460, 0xdb6, 0x3866, 0xaef, 0x1, 0x0);
        gbc.writeMem(0xc0b2, { 0x16, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6bd4);
        EXPECT(gbc.pc(), 0xc0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b2), 0x16);
        EXPECT(gbc.readMem(0xc0b3), 0x42);
        // 16 0309
        gbc.setState(0x9db, 0x4c54, 0x18a0, 0xd47a, 0x380b, 0x49d9, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0x16, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4c54);
        EXPECT(gbc.pc(), 0x9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 030A
        gbc.setState(0x2d0, 0x5542, 0xb7c0, 0x5012, 0x4d0e, 0xd10d, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0x16, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5542);
        EXPECT(gbc.pc(), 0x2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 030B
        gbc.setState(0x1963, 0x363c, 0x2710, 0x3142, 0x65dd, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0x1963, { 0x16, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x363c);
        EXPECT(gbc.pc(), 0x1965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 030C
        gbc.setState(0x446, 0x28cf, 0xb3f0, 0x8363, 0x456, 0xb908, 0x1, 0x1);
        gbc.writeMem(0x446, { 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x28cf);
        EXPECT(gbc.pc(), 0x448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 030D
        gbc.setState(0x5652, 0x1b77, 0x14b0, 0x1c9a, 0xf8c9, 0x6015, 0x1, 0x0);
        gbc.writeMem(0x5652, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1b77);
        EXPECT(gbc.pc(), 0x5654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 030E
        gbc.setState(0x633b, 0x3165, 0xe7f0, 0xde7c, 0x726b, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0x633b, { 0x16, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3165);
        EXPECT(gbc.pc(), 0x633d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 030F
        gbc.setState(0xccc0, 0x8a7c, 0xa090, 0xfb0, 0x1b1d, 0x2060, 0x1, 0x0);
        gbc.writeMem(0xccc0, { 0x16, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8a7c);
        EXPECT(gbc.pc(), 0xccc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc0), 0x16);
        EXPECT(gbc.readMem(0xccc1), 0xad);
        // 16 0310
        gbc.setState(0x6a2a, 0xcaca, 0x5330, 0x595d, 0x20d6, 0xd81, 0x1, 0x1);
        gbc.writeMem(0x6a2a, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcaca);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0311
        gbc.setState(0xd27f, 0x1674, 0x6330, 0x365c, 0x7a8c, 0x30e2, 0x1, 0x1);
        gbc.writeMem(0xd27f, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1674);
        EXPECT(gbc.pc(), 0xd281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27f), 0x16);
        EXPECT(gbc.readMem(0xd280), 0xc9);
        // 16 0312
        gbc.setState(0xafb4, 0xb79d, 0x5860, 0x26da, 0x4bd5, 0x5d10, 0x0, 0x0);
        gbc.writeMem(0xafb4, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0xafb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb4), 0x16);
        EXPECT(gbc.readMem(0xafb5), 0xb);
        // 16 0313
        gbc.setState(0x9344, 0x1e23, 0x6cb0, 0xdc16, 0xd0ec, 0xeba8, 0x0, 0x0);
        gbc.writeMem(0x9344, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1e23);
        EXPECT(gbc.pc(), 0x9346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9344), 0x16);
        EXPECT(gbc.readMem(0x9345), 0x4a);
        // 16 0314
        gbc.setState(0xbdbe, 0xeb66, 0x24e0, 0x6055, 0xd062, 0x3a4, 0x1, 0x1);
        gbc.writeMem(0xbdbe, { 0x16, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xeb66);
        EXPECT(gbc.pc(), 0xbdc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbe), 0x16);
        EXPECT(gbc.readMem(0xbdbf), 0x71);
        // 16 0315
        gbc.setState(0xbe53, 0x687b, 0xb4b0, 0x1592, 0x32b1, 0xf53a, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0x16, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x687b);
        EXPECT(gbc.pc(), 0xbe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe53), 0x16);
        EXPECT(gbc.readMem(0xbe54), 0x9e);
        // 16 0316
        gbc.setState(0x8aae, 0xad35, 0x1a0, 0x41b0, 0x6870, 0xafe, 0x0, 0x0);
        gbc.writeMem(0x8aae, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xad35);
        EXPECT(gbc.pc(), 0x8ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aae), 0x16);
        EXPECT(gbc.readMem(0x8aaf), 0xf1);
        // 16 0317
        gbc.setState(0x704b, 0xdc95, 0xce50, 0xd2df, 0x1bb6, 0xe29a, 0x0, 0x0);
        gbc.writeMem(0x704b, { 0x16, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0x704d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0318
        gbc.setState(0xdb6, 0xd75d, 0x5f80, 0x478c, 0x4b6e, 0xdd34, 0x0, 0x0);
        gbc.writeMem(0xdb6, { 0x16, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd75d);
        EXPECT(gbc.pc(), 0xdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0319
        gbc.setState(0x2d98, 0x3496, 0x61e0, 0x2f67, 0x7568, 0x9d2a, 0x0, 0x1);
        gbc.writeMem(0x2d98, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3496);
        EXPECT(gbc.pc(), 0x2d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 031A
        gbc.setState(0x7ae0, 0x321a, 0x9b80, 0x9625, 0x6d1e, 0x2db7, 0x0, 0x0);
        gbc.writeMem(0x7ae0, { 0x16, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x321a);
        EXPECT(gbc.pc(), 0x7ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 031B
        gbc.setState(0x2198, 0xe3d3, 0xc240, 0xfeb0, 0x385e, 0x51ec, 0x1, 0x1);
        gbc.writeMem(0x2198, { 0x16, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe3d3);
        EXPECT(gbc.pc(), 0x219a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 031C
        gbc.setState(0x7a6d, 0x1895, 0xc010, 0x7531, 0xf6d8, 0x37f5, 0x0, 0x1);
        gbc.writeMem(0x7a6d, { 0x16, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1895);
        EXPECT(gbc.pc(), 0x7a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 031D
        gbc.setState(0xec02, 0x2277, 0x8230, 0x38c5, 0x2122, 0x839b, 0x1, 0x0);
        gbc.writeMem(0xec02, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2277);
        EXPECT(gbc.pc(), 0xec04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec02), 0x16);
        EXPECT(gbc.readMem(0xec03), 0xc4);
        // 16 031E
        gbc.setState(0xbdfa, 0xc2fe, 0xfda0, 0xfed9, 0x3302, 0xc97c, 0x1, 0x1);
        gbc.writeMem(0xbdfa, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc2fe);
        EXPECT(gbc.pc(), 0xbdfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfa), 0x16);
        EXPECT(gbc.readMem(0xbdfb), 0xd2);
        // 16 031F
        gbc.setState(0xa032, 0x9b66, 0xef40, 0x13c7, 0x8545, 0x2441, 0x0, 0x1);
        gbc.writeMem(0xa032, { 0x16, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9b66);
        EXPECT(gbc.pc(), 0xa034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa032), 0x16);
        EXPECT(gbc.readMem(0xa033), 0xaa);
        // 16 0320
        gbc.setState(0xa62f, 0xd6db, 0xae60, 0x3fd9, 0x4890, 0xbe81, 0x0, 0x0);
        gbc.writeMem(0xa62f, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd6db);
        EXPECT(gbc.pc(), 0xa631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa62f), 0x16);
        EXPECT(gbc.readMem(0xa630), 0xa8);
        // 16 0321
        gbc.setState(0x6039, 0xa15b, 0xe2b0, 0xb851, 0x6f49, 0x65d3, 0x0, 0x0);
        gbc.writeMem(0x6039, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa15b);
        EXPECT(gbc.pc(), 0x603b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0322
        gbc.setState(0x6ead, 0x2eb9, 0x17e0, 0x6665, 0x1618, 0x3c3d, 0x1, 0x1);
        gbc.writeMem(0x6ead, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2eb9);
        EXPECT(gbc.pc(), 0x6eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0323
        gbc.setState(0x9e46, 0xa8bc, 0x8c30, 0xbc06, 0x4863, 0xba6d, 0x0, 0x0);
        gbc.writeMem(0x9e46, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa8bc);
        EXPECT(gbc.pc(), 0x9e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e46), 0x16);
        EXPECT(gbc.readMem(0x9e47), 0xc5);
        // 16 0324
        gbc.setState(0x2c88, 0xc2d4, 0xac10, 0xa887, 0x2a2b, 0x1b59, 0x0, 0x1);
        gbc.writeMem(0x2c88, { 0x16, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc2d4);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0325
        gbc.setState(0x891b, 0xa66d, 0x6d60, 0x4974, 0x3aeb, 0xb340, 0x1, 0x0);
        gbc.writeMem(0x891b, { 0x16, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa66d);
        EXPECT(gbc.pc(), 0x891d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891b), 0x16);
        EXPECT(gbc.readMem(0x891c), 0xc);
        // 16 0326
        gbc.setState(0xcb2d, 0x4d65, 0x2e30, 0x4516, 0x3147, 0xe5f3, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0x16, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0xcb2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2d), 0x16);
        EXPECT(gbc.readMem(0xcb2e), 0x20);
        // 16 0327
        gbc.setState(0x63e1, 0x3a6b, 0x3e30, 0x7bcc, 0xcdf0, 0x7bf0, 0x1, 0x1);
        gbc.writeMem(0x63e1, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3a6b);
        EXPECT(gbc.pc(), 0x63e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0328
        gbc.setState(0xd60, 0x803f, 0x2840, 0x17e3, 0xcf83, 0x667f, 0x1, 0x0);
        gbc.writeMem(0xd60, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x803f);
        EXPECT(gbc.pc(), 0xd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0329
        gbc.setState(0x4b42, 0xdde2, 0x5280, 0x7e38, 0xc8f1, 0x129b, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdde2);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 032A
        gbc.setState(0x4e6b, 0x4212, 0x3380, 0xad39, 0x386f, 0x3765, 0x0, 0x0);
        gbc.writeMem(0x4e6b, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4212);
        EXPECT(gbc.pc(), 0x4e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 032B
        gbc.setState(0x53ef, 0xea73, 0x5aa0, 0x1e1e, 0xdfcd, 0x580, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0x16, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xea73);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 032C
        gbc.setState(0x7ed1, 0xcb0d, 0xd1d0, 0x7839, 0xf490, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcb0d);
        EXPECT(gbc.pc(), 0x7ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 032D
        gbc.setState(0x65cf, 0x27ac, 0xa4e0, 0xad9f, 0x3611, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0x16, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x27ac);
        EXPECT(gbc.pc(), 0x65d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 032E
        gbc.setState(0xbbf1, 0x92e2, 0x4a50, 0xc9a, 0xf254, 0xdfe7, 0x1, 0x0);
        gbc.writeMem(0xbbf1, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x92e2);
        EXPECT(gbc.pc(), 0xbbf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf1), 0x16);
        EXPECT(gbc.readMem(0xbbf2), 0x2b);
        // 16 032F
        gbc.setState(0x453a, 0x77c2, 0x9f40, 0x9eb5, 0xb3ac, 0xd0d9, 0x1, 0x1);
        gbc.writeMem(0x453a, { 0x16, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x77c2);
        EXPECT(gbc.pc(), 0x453c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0330
        gbc.setState(0xd2e1, 0xdef0, 0x44e0, 0xfc00, 0xe5a8, 0xf9ff, 0x0, 0x0);
        gbc.writeMem(0xd2e1, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdef0);
        EXPECT(gbc.pc(), 0xd2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e1), 0x16);
        EXPECT(gbc.readMem(0xd2e2), 0xcb);
        // 16 0331
        gbc.setState(0xb963, 0x4753, 0xb880, 0x7b4f, 0x55df, 0xcf25, 0x0, 0x1);
        gbc.writeMem(0xb963, { 0x16, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4753);
        EXPECT(gbc.pc(), 0xb965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb963), 0x16);
        EXPECT(gbc.readMem(0xb964), 0x1f);
        // 16 0332
        gbc.setState(0x3bc7, 0x3261, 0xe080, 0x9ce9, 0xb11f, 0xbdce, 0x1, 0x0);
        gbc.writeMem(0x3bc7, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3261);
        EXPECT(gbc.pc(), 0x3bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0333
        gbc.setState(0xcdcb, 0xf407, 0x29c0, 0x8a8f, 0xbeeb, 0x5136, 0x0, 0x1);
        gbc.writeMem(0xcdcb, { 0x16, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0xcdcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcb), 0x16);
        EXPECT(gbc.readMem(0xcdcc), 0x1b);
        // 16 0334
        gbc.setState(0x4511, 0x199c, 0x200, 0xbee6, 0x73df, 0xec53, 0x0, 0x0);
        gbc.writeMem(0x4511, { 0x16, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0x4513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0335
        gbc.setState(0x714b, 0x36bd, 0xf920, 0x2e55, 0x1ec0, 0x952d, 0x1, 0x1);
        gbc.writeMem(0x714b, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x36bd);
        EXPECT(gbc.pc(), 0x714d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0336
        gbc.setState(0x79bb, 0x5546, 0xe20, 0xc21d, 0x5c1c, 0xc501, 0x0, 0x1);
        gbc.writeMem(0x79bb, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5546);
        EXPECT(gbc.pc(), 0x79bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0337
        gbc.setState(0x9c1e, 0x1648, 0x13a0, 0xa780, 0x7cde, 0x74d4, 0x1, 0x0);
        gbc.writeMem(0x9c1e, { 0x16, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1648);
        EXPECT(gbc.pc(), 0x9c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1e), 0x16);
        EXPECT(gbc.readMem(0x9c1f), 0x5b);
        // 16 0338
        gbc.setState(0x3565, 0x2b67, 0x8900, 0xe123, 0x72a6, 0x2d14, 0x1, 0x1);
        gbc.writeMem(0x3565, { 0x16, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2b67);
        EXPECT(gbc.pc(), 0x3567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0339
        gbc.setState(0x3344, 0xedf8, 0xf3d0, 0xaeec, 0x7c15, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0x3344, { 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xedf8);
        EXPECT(gbc.pc(), 0x3346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 033A
        gbc.setState(0xe198, 0xdb97, 0x7f60, 0x9e77, 0xc1fe, 0x3d0f, 0x1, 0x1);
        gbc.writeMem(0xe198, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdb97);
        EXPECT(gbc.pc(), 0xe19a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe198), 0x16);
        EXPECT(gbc.readMem(0xe199), 0xa5);
        // 16 033B
        gbc.setState(0x7d91, 0x69fc, 0x8b60, 0x239c, 0xb10, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0x16, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x69fc);
        EXPECT(gbc.pc(), 0x7d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 033C
        gbc.setState(0x41ce, 0x6b60, 0x1480, 0x9eb7, 0x1787, 0xd36, 0x1, 0x0);
        gbc.writeMem(0x41ce, { 0x16, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6b60);
        EXPECT(gbc.pc(), 0x41d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 033D
        gbc.setState(0xddf6, 0x7e57, 0xc000, 0xb326, 0x71b3, 0x1420, 0x0, 0x0);
        gbc.writeMem(0xddf6, { 0x16, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf6), 0x16);
        EXPECT(gbc.readMem(0xddf7), 0xdc);
        // 16 033E
        gbc.setState(0xd11a, 0x6453, 0xe180, 0x229a, 0x3867, 0xc087, 0x1, 0x0);
        gbc.writeMem(0xd11a, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6453);
        EXPECT(gbc.pc(), 0xd11c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11a), 0x16);
        EXPECT(gbc.readMem(0xd11b), 0xf7);
        // 16 033F
        gbc.setState(0x567b, 0x775, 0x6db0, 0x4716, 0xc1a0, 0xf579, 0x1, 0x0);
        gbc.writeMem(0x567b, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x775);
        EXPECT(gbc.pc(), 0x567d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0340
        gbc.setState(0xb768, 0xcc0a, 0xab90, 0x21dd, 0xc160, 0xd327, 0x1, 0x0);
        gbc.writeMem(0xb768, { 0x16, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcc0a);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb768), 0x16);
        EXPECT(gbc.readMem(0xb769), 0xe);
        // 16 0341
        gbc.setState(0x7938, 0x1353, 0x5e00, 0x1dc8, 0xbaab, 0x2a25, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0x16, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1353);
        EXPECT(gbc.pc(), 0x793a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0342
        gbc.setState(0x7d1e, 0x56be, 0x3850, 0x8b69, 0xad6, 0xdcd0, 0x0, 0x1);
        gbc.writeMem(0x7d1e, { 0x16, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x56be);
        EXPECT(gbc.pc(), 0x7d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0343
        gbc.setState(0x6dfe, 0x5202, 0x6600, 0xda1b, 0x7e96, 0x7b00, 0x0, 0x0);
        gbc.writeMem(0x6dfe, { 0x16, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5202);
        EXPECT(gbc.pc(), 0x6e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0344
        gbc.setState(0xe328, 0xa5c2, 0xa8f0, 0xaf5f, 0x4d3c, 0x7905, 0x1, 0x1);
        gbc.writeMem(0xe328, { 0x16, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa5c2);
        EXPECT(gbc.pc(), 0xe32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe328), 0x16);
        EXPECT(gbc.readMem(0xe329), 0x4a);
        // 16 0345
        gbc.setState(0xd74a, 0x7a15, 0xda50, 0x656b, 0xa4fa, 0x8b6d, 0x0, 0x1);
        gbc.writeMem(0xd74a, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0xd74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd74a), 0x16);
        EXPECT(gbc.readMem(0xd74b), 0xd5);
        // 16 0346
        gbc.setState(0xa6b, 0xea8d, 0x1d80, 0x17a, 0x1d5d, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0xa6b, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xea8d);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0347
        gbc.setState(0x6c99, 0x4bb3, 0xe370, 0x5c2d, 0xbef4, 0xebb1, 0x0, 0x0);
        gbc.writeMem(0x6c99, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4bb3);
        EXPECT(gbc.pc(), 0x6c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0348
        gbc.setState(0xcb8a, 0xb257, 0xc4f0, 0x4639, 0x14bd, 0xe2ec, 0x0, 0x0);
        gbc.writeMem(0xcb8a, { 0x16, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb257);
        EXPECT(gbc.pc(), 0xcb8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb8a), 0x16);
        EXPECT(gbc.readMem(0xcb8b), 0x64);
        // 16 0349
        gbc.setState(0x907f, 0xd27a, 0x73f0, 0xa5ab, 0x6ee6, 0xfb7b, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0x16, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd27a);
        EXPECT(gbc.pc(), 0x9081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907f), 0x16);
        EXPECT(gbc.readMem(0x9080), 0xab);
        // 16 034A
        gbc.setState(0x2a9a, 0x647, 0x99a0, 0xed2e, 0x464c, 0x8ed6, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0x16, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x2a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 034B
        gbc.setState(0x5a91, 0xba56, 0x49e0, 0xeaf, 0xdced, 0x1d22, 0x0, 0x0);
        gbc.writeMem(0x5a91, { 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xba56);
        EXPECT(gbc.pc(), 0x5a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 034C
        gbc.setState(0xea80, 0x524f, 0x8420, 0x7a4, 0x90bd, 0xc861, 0x1, 0x0);
        gbc.writeMem(0xea80, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x524f);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea80), 0x16);
        EXPECT(gbc.readMem(0xea81), 0xd7);
        // 16 034D
        gbc.setState(0xdc2a, 0xea79, 0x13a0, 0xc4ce, 0x613e, 0xebcd, 0x1, 0x1);
        gbc.writeMem(0xdc2a, { 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xea79);
        EXPECT(gbc.pc(), 0xdc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2a), 0x16);
        EXPECT(gbc.readMem(0xdc2b), 0x17);
        // 16 034E
        gbc.setState(0x158e, 0x5e6d, 0x5ce0, 0xb2de, 0xdfe, 0x1d7c, 0x1, 0x1);
        gbc.writeMem(0x158e, { 0x16, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5e6d);
        EXPECT(gbc.pc(), 0x1590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0350
        gbc.setState(0x599c, 0xe2e1, 0x1670, 0xd1e3, 0x8152, 0xcb2a, 0x0, 0x0);
        gbc.writeMem(0x599c, { 0x16, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe2e1);
        EXPECT(gbc.pc(), 0x599e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0351
        gbc.setState(0x568b, 0x683a, 0x1540, 0x544e, 0xbac7, 0xe763, 0x0, 0x0);
        gbc.writeMem(0x568b, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x683a);
        EXPECT(gbc.pc(), 0x568d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0352
        gbc.setState(0x115f, 0xa518, 0xa5c0, 0x73c8, 0x483e, 0x4878, 0x1, 0x1);
        gbc.writeMem(0x115f, { 0x16, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa518);
        EXPECT(gbc.pc(), 0x1161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0353
        gbc.setState(0x93e5, 0xd5b5, 0x9210, 0xefca, 0x9d1a, 0xe182, 0x0, 0x0);
        gbc.writeMem(0x93e5, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd5b5);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e5), 0x16);
        EXPECT(gbc.readMem(0x93e6), 0xd7);
        // 16 0354
        gbc.setState(0x3d94, 0xe9eb, 0xc960, 0x9954, 0x890e, 0x4c11, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0x16, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe9eb);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0355
        gbc.setState(0x5bcb, 0x67f, 0xa1f0, 0xbe6a, 0xfb72, 0x6d4b, 0x0, 0x0);
        gbc.writeMem(0x5bcb, { 0x16, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x67f);
        EXPECT(gbc.pc(), 0x5bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0356
        gbc.setState(0x2b78, 0x6ec8, 0xf4c0, 0x9966, 0x53, 0xae3f, 0x0, 0x0);
        gbc.writeMem(0x2b78, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6ec8);
        EXPECT(gbc.pc(), 0x2b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0357
        gbc.setState(0x4458, 0xe645, 0x8570, 0x8361, 0x3d2d, 0x70d2, 0x0, 0x0);
        gbc.writeMem(0x4458, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe645);
        EXPECT(gbc.pc(), 0x445a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0358
        gbc.setState(0xcc40, 0x50c0, 0x6bb0, 0xc6d6, 0xede6, 0x5487, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0x16, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x50c0);
        EXPECT(gbc.pc(), 0xcc42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc40), 0x16);
        EXPECT(gbc.readMem(0xcc41), 0x42);
        // 16 0359
        gbc.setState(0x88eb, 0xdf99, 0x47c0, 0xa1dd, 0x1f1f, 0x9c41, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdf99);
        EXPECT(gbc.pc(), 0x88ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88eb), 0x16);
        EXPECT(gbc.readMem(0x88ec), 0xb);
        // 16 035A
        gbc.setState(0xd03, 0x357a, 0xfe80, 0x159b, 0x7081, 0x62aa, 0x1, 0x1);
        gbc.writeMem(0xd03, { 0x16, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x357a);
        EXPECT(gbc.pc(), 0xd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 035B
        gbc.setState(0x9f61, 0x6393, 0x9540, 0xb44d, 0x19eb, 0xf958, 0x0, 0x0);
        gbc.writeMem(0x9f61, { 0x16, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6393);
        EXPECT(gbc.pc(), 0x9f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f61), 0x16);
        EXPECT(gbc.readMem(0x9f62), 0xfe);
        // 16 035C
        gbc.setState(0xdc1e, 0x83c0, 0x5fb0, 0xb70, 0xf7be, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0xdc1e, { 0x16, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x83c0);
        EXPECT(gbc.pc(), 0xdc20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1e), 0x16);
        EXPECT(gbc.readMem(0xdc1f), 0x1);
        // 16 035D
        gbc.setState(0x83ba, 0x579c, 0x1200, 0x95fc, 0xc9e0, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0x83ba, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x579c);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ba), 0x16);
        EXPECT(gbc.readMem(0x83bb), 0xd9);
        // 16 035E
        gbc.setState(0x83a1, 0x7552, 0xcab0, 0x3e92, 0x7e87, 0xa43d, 0x0, 0x0);
        gbc.writeMem(0x83a1, { 0x16, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7552);
        EXPECT(gbc.pc(), 0x83a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83a1), 0x16);
        EXPECT(gbc.readMem(0x83a2), 0xdf);
        // 16 035F
        gbc.setState(0x1475, 0x6d6f, 0x7f40, 0x804c, 0xbf3c, 0x8330, 0x1, 0x0);
        gbc.writeMem(0x1475, { 0x16, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6d6f);
        EXPECT(gbc.pc(), 0x1477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0361
        gbc.setState(0x1d6a, 0x810e, 0x6d70, 0xab60, 0xd126, 0x1bc1, 0x0, 0x0);
        gbc.writeMem(0x1d6a, { 0x16, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x810e);
        EXPECT(gbc.pc(), 0x1d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0362
        gbc.setState(0x846e, 0x697e, 0x6930, 0x1b3, 0xaeb3, 0x7446, 0x0, 0x0);
        gbc.writeMem(0x846e, { 0x16, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x697e);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846e), 0x16);
        EXPECT(gbc.readMem(0x846f), 0xcf);
        // 16 0363
        gbc.setState(0x8a8a, 0xec28, 0xe800, 0xc0ad, 0xdcf1, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x8a8a, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xec28);
        EXPECT(gbc.pc(), 0x8a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8a), 0x16);
        EXPECT(gbc.readMem(0x8a8b), 0x1e);
        // 16 0364
        gbc.setState(0xd6cb, 0xc290, 0x2870, 0x21f, 0x66c, 0x55da, 0x1, 0x1);
        gbc.writeMem(0xd6cb, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc290);
        EXPECT(gbc.pc(), 0xd6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cb), 0x16);
        EXPECT(gbc.readMem(0xd6cc), 0xb0);
        // 16 0365
        gbc.setState(0xd8e9, 0xeac8, 0x71e0, 0x4269, 0xf07, 0xd87c, 0x0, 0x1);
        gbc.writeMem(0xd8e9, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xeac8);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e9), 0x16);
        EXPECT(gbc.readMem(0xd8ea), 0xc2);
        // 16 0366
        gbc.setState(0x3270, 0x139d, 0xe6a0, 0xe326, 0x13d0, 0xb992, 0x0, 0x0);
        gbc.writeMem(0x3270, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0367
        gbc.setState(0x38bc, 0xb011, 0x93a0, 0x3d0e, 0xf38c, 0xfa9c, 0x1, 0x0);
        gbc.writeMem(0x38bc, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb011);
        EXPECT(gbc.pc(), 0x38be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0368
        gbc.setState(0x7fa2, 0x4f82, 0xdaf0, 0x49d7, 0xaaa1, 0x7a25, 0x0, 0x0);
        gbc.writeMem(0x7fa2, { 0x16, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4f82);
        EXPECT(gbc.pc(), 0x7fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 036A
        gbc.setState(0xbe4c, 0x3cfb, 0x8010, 0x2a95, 0xbbbe, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0xbe4c, { 0x16, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3cfb);
        EXPECT(gbc.pc(), 0xbe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe4c), 0x16);
        EXPECT(gbc.readMem(0xbe4d), 0xce);
        // 16 036B
        gbc.setState(0xd401, 0x3fa9, 0x6970, 0xaa0e, 0x3d17, 0x8b87, 0x1, 0x0);
        gbc.writeMem(0xd401, { 0x16, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3fa9);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd401), 0x16);
        EXPECT(gbc.readMem(0xd402), 0x6a);
        // 16 036D
        gbc.setState(0x322e, 0x4507, 0xd430, 0x320c, 0x63f7, 0x8cda, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0x3230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 036E
        gbc.setState(0x55a, 0xd62e, 0x8610, 0xa5c, 0x830b, 0x79e2, 0x1, 0x0);
        gbc.writeMem(0x55a, { 0x16, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd62e);
        EXPECT(gbc.pc(), 0x55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 036F
        gbc.setState(0xe57, 0x913, 0xcef0, 0x2ab7, 0x2807, 0xb909, 0x0, 0x1);
        gbc.writeMem(0xe57, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0xe59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0370
        gbc.setState(0x65c0, 0x28cf, 0x4530, 0xb7ae, 0xcdab, 0xc231, 0x1, 0x1);
        gbc.writeMem(0x65c0, { 0x16, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x28cf);
        EXPECT(gbc.pc(), 0x65c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0371
        gbc.setState(0x41fd, 0x1f0e, 0xabf0, 0x2b5b, 0x48d9, 0x857b, 0x1, 0x0);
        gbc.writeMem(0x41fd, { 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1f0e);
        EXPECT(gbc.pc(), 0x41ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0372
        gbc.setState(0xebff, 0x7ff4, 0xf740, 0xf269, 0x46cc, 0x6210, 0x1, 0x1);
        gbc.writeMem(0xebff, { 0x16, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7ff4);
        EXPECT(gbc.pc(), 0xec01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebff), 0x16);
        EXPECT(gbc.readMem(0xec00), 0x3c);
        // 16 0373
        gbc.setState(0x5035, 0x377e, 0xc650, 0x8be9, 0x6473, 0xfa46, 0x1, 0x1);
        gbc.writeMem(0x5035, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x377e);
        EXPECT(gbc.pc(), 0x5037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0376
        gbc.setState(0xe3ce, 0x1c71, 0xd5f0, 0xbfac, 0xf5ce, 0x6e8, 0x1, 0x1);
        gbc.writeMem(0xe3ce, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1c71);
        EXPECT(gbc.pc(), 0xe3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ce), 0x16);
        EXPECT(gbc.readMem(0xe3cf), 0xa4);
        // 16 0378
        gbc.setState(0x7569, 0xb094, 0x3bc0, 0xc9a6, 0x4888, 0x4daf, 0x0, 0x0);
        gbc.writeMem(0x7569, { 0x16, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb094);
        EXPECT(gbc.pc(), 0x756b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0379
        gbc.setState(0x1c68, 0x6561, 0x78e0, 0x5e6e, 0x771e, 0x719d, 0x0, 0x0);
        gbc.writeMem(0x1c68, { 0x16, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6561);
        EXPECT(gbc.pc(), 0x1c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 037A
        gbc.setState(0xa6d5, 0x7eb7, 0xdfe0, 0x9f34, 0x9985, 0x9b17, 0x0, 0x1);
        gbc.writeMem(0xa6d5, { 0x16, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7eb7);
        EXPECT(gbc.pc(), 0xa6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d5), 0x16);
        EXPECT(gbc.readMem(0xa6d6), 0x3d);
        // 16 037B
        gbc.setState(0x3dc5, 0x80d0, 0xb300, 0x57a3, 0x3b84, 0x7bbb, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0x16, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 037C
        gbc.setState(0x57b0, 0xfbbe, 0x2310, 0xd051, 0x2300, 0xea76, 0x0, 0x1);
        gbc.writeMem(0x57b0, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfbbe);
        EXPECT(gbc.pc(), 0x57b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 037D
        gbc.setState(0xc906, 0xe2df, 0x4620, 0x55b6, 0x1245, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xc906, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe2df);
        EXPECT(gbc.pc(), 0xc908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc906), 0x16);
        EXPECT(gbc.readMem(0xc907), 0xcb);
        // 16 037E
        gbc.setState(0xbec0, 0x88ee, 0x90a0, 0xb3a3, 0x3b06, 0xb55e, 0x1, 0x1);
        gbc.writeMem(0xbec0, { 0x16, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x88ee);
        EXPECT(gbc.pc(), 0xbec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec0), 0x16);
        EXPECT(gbc.readMem(0xbec1), 0xdf);
        // 16 037F
        gbc.setState(0x7640, 0x4106, 0x4780, 0xf669, 0x3b23, 0xa839, 0x1, 0x0);
        gbc.writeMem(0x7640, { 0x16, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4106);
        EXPECT(gbc.pc(), 0x7642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 0380
        gbc.setState(0x4c3f, 0xdcb4, 0xb110, 0x71ae, 0x4ba9, 0xe89e, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0x16, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdcb4);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0381
        gbc.setState(0x37e3, 0x9535, 0xbf70, 0x51bd, 0xf8f9, 0xe98, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0x16, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9535);
        EXPECT(gbc.pc(), 0x37e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0382
        gbc.setState(0x2622, 0xe05b, 0x9270, 0xc499, 0x2f9d, 0x311f, 0x1, 0x1);
        gbc.writeMem(0x2622, { 0x16, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe05b);
        EXPECT(gbc.pc(), 0x2624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0383
        gbc.setState(0xa7e7, 0x4ed9, 0x3a00, 0x8545, 0xf7e8, 0xc642, 0x1, 0x0);
        gbc.writeMem(0xa7e7, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4ed9);
        EXPECT(gbc.pc(), 0xa7e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e7), 0x16);
        EXPECT(gbc.readMem(0xa7e8), 0xa8);
        // 16 0384
        gbc.setState(0x748e, 0x2fbe, 0xcf0, 0x5d83, 0x1d94, 0x9aff, 0x0, 0x1);
        gbc.writeMem(0x748e, { 0x16, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2fbe);
        EXPECT(gbc.pc(), 0x7490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0385
        gbc.setState(0x6705, 0xda0c, 0xb720, 0x9eb5, 0x7280, 0x7971, 0x1, 0x0);
        gbc.writeMem(0x6705, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xda0c);
        EXPECT(gbc.pc(), 0x6707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0386
        gbc.setState(0xb97c, 0xbe4, 0xc8f0, 0x260a, 0x9feb, 0x765c, 0x0, 0x1);
        gbc.writeMem(0xb97c, { 0x16, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbe4);
        EXPECT(gbc.pc(), 0xb97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97c), 0x16);
        EXPECT(gbc.readMem(0xb97d), 0x59);
        // 16 0387
        gbc.setState(0x230, 0x8adb, 0xe190, 0x996e, 0x8b2a, 0xb5a, 0x1, 0x1);
        gbc.writeMem(0x230, { 0x16, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8adb);
        EXPECT(gbc.pc(), 0x232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0388
        gbc.setState(0xae36, 0xcbe, 0x56f0, 0x3270, 0xbcab, 0x5b3c, 0x0, 0x1);
        gbc.writeMem(0xae36, { 0x16, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcbe);
        EXPECT(gbc.pc(), 0xae38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae36), 0x16);
        EXPECT(gbc.readMem(0xae37), 0x59);
        // 16 038A
        gbc.setState(0xbdd4, 0xd278, 0x6af0, 0x591f, 0x8808, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0xbdd4, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd278);
        EXPECT(gbc.pc(), 0xbdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd4), 0x16);
        EXPECT(gbc.readMem(0xbdd5), 0xe2);
        // 16 038B
        gbc.setState(0x92be, 0x1833, 0x1960, 0xbf4, 0xd06d, 0x9810, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x92c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92be), 0x16);
        EXPECT(gbc.readMem(0x92bf), 0xd6);
        // 16 038C
        gbc.setState(0xa330, 0x1bc0, 0x9d60, 0x9382, 0xc116, 0x5193, 0x0, 0x0);
        gbc.writeMem(0xa330, { 0x16, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1bc0);
        EXPECT(gbc.pc(), 0xa332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa330), 0x16);
        EXPECT(gbc.readMem(0xa331), 0x4c);
        // 16 038D
        gbc.setState(0x765b, 0xa530, 0xcf50, 0xced4, 0x47ae, 0x1d31, 0x1, 0x1);
        gbc.writeMem(0x765b, { 0x16, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa530);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 038E
        gbc.setState(0x13a0, 0x4783, 0x4100, 0x2e1b, 0x7f7c, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0x13a0, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4783);
        EXPECT(gbc.pc(), 0x13a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 038F
        gbc.setState(0x15d8, 0x1303, 0x9630, 0xaf57, 0xf424, 0x89fd, 0x1, 0x0);
        gbc.writeMem(0x15d8, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1303);
        EXPECT(gbc.pc(), 0x15da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0390
        gbc.setState(0x4833, 0x6485, 0x5da0, 0x89e9, 0x49cc, 0xf6b3, 0x0, 0x1);
        gbc.writeMem(0x4833, { 0x16, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0x4835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 0391
        gbc.setState(0xc5c0, 0x2d64, 0xbbf0, 0x19ce, 0x943e, 0x762f, 0x1, 0x0);
        gbc.writeMem(0xc5c0, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2d64);
        EXPECT(gbc.pc(), 0xc5c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c0), 0x16);
        EXPECT(gbc.readMem(0xc5c1), 0xc5);
        // 16 0392
        gbc.setState(0x8f1e, 0xc33e, 0xe370, 0xb08e, 0x438, 0xfb75, 0x1, 0x0);
        gbc.writeMem(0x8f1e, { 0x16, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc33e);
        EXPECT(gbc.pc(), 0x8f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1e), 0x16);
        EXPECT(gbc.readMem(0x8f1f), 0x85);
        // 16 0394
        gbc.setState(0x8239, 0x1028, 0xa840, 0x2b1f, 0x7e0a, 0x7792, 0x1, 0x0);
        gbc.writeMem(0x8239, { 0x16, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1028);
        EXPECT(gbc.pc(), 0x823b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8239), 0x16);
        EXPECT(gbc.readMem(0x823a), 0x1a);
        // 16 0395
        gbc.setState(0xe32d, 0xbbcd, 0x4910, 0x7207, 0xc52a, 0x33f9, 0x0, 0x1);
        gbc.writeMem(0xe32d, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbbcd);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32d), 0x16);
        EXPECT(gbc.readMem(0xe32e), 0xd7);
        // 16 0396
        gbc.setState(0x30cf, 0x82ec, 0x14b0, 0x3b89, 0x440d, 0x1cf8, 0x0, 0x1);
        gbc.writeMem(0x30cf, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x82ec);
        EXPECT(gbc.pc(), 0x30d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 0397
        gbc.setState(0xeb95, 0x790a, 0x9bc0, 0x79cf, 0xd0d0, 0x209a, 0x0, 0x1);
        gbc.writeMem(0xeb95, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x790a);
        EXPECT(gbc.pc(), 0xeb97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb95), 0x16);
        EXPECT(gbc.readMem(0xeb96), 0xd2);
        // 16 0398
        gbc.setState(0x44fc, 0x27a6, 0xc710, 0x472d, 0x5c45, 0x909e, 0x1, 0x0);
        gbc.writeMem(0x44fc, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x27a6);
        EXPECT(gbc.pc(), 0x44fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 0399
        gbc.setState(0x99c7, 0xf088, 0x40a0, 0xb7c2, 0xf245, 0x28d5, 0x1, 0x1);
        gbc.writeMem(0x99c7, { 0x16, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf088);
        EXPECT(gbc.pc(), 0x99c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c7), 0x16);
        EXPECT(gbc.readMem(0x99c8), 0x33);
        // 16 039A
        gbc.setState(0x7836, 0xea95, 0x7110, 0xfc25, 0x59bf, 0xad28, 0x1, 0x0);
        gbc.writeMem(0x7836, { 0x16, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0x7838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 039B
        gbc.setState(0xd538, 0x543, 0x8790, 0x5ab9, 0xe70c, 0xa27, 0x1, 0x0);
        gbc.writeMem(0xd538, { 0x16, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x543);
        EXPECT(gbc.pc(), 0xd53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd538), 0x16);
        EXPECT(gbc.readMem(0xd539), 0x65);
        // 16 039C
        gbc.setState(0x4a4c, 0xf12c, 0x5520, 0x94e0, 0xf7b5, 0x3435, 0x0, 0x1);
        gbc.writeMem(0x4a4c, { 0x16, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf12c);
        EXPECT(gbc.pc(), 0x4a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 039D
        gbc.setState(0x9364, 0x853d, 0xe690, 0x2b29, 0x393a, 0x8031, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x853d);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9364), 0x16);
        EXPECT(gbc.readMem(0x9365), 0xd1);
        // 16 039E
        gbc.setState(0x2c0e, 0xe81b, 0xca10, 0x98bf, 0x9a71, 0x848d, 0x0, 0x0);
        gbc.writeMem(0x2c0e, { 0x16, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe81b);
        EXPECT(gbc.pc(), 0x2c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03A0
        gbc.setState(0xa610, 0x8fe7, 0x8560, 0x67d1, 0x89a0, 0x24f8, 0x1, 0x0);
        gbc.writeMem(0xa610, { 0x16, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8fe7);
        EXPECT(gbc.pc(), 0xa612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa610), 0x16);
        EXPECT(gbc.readMem(0xa611), 0xd);
        // 16 03A1
        gbc.setState(0xd894, 0x86a4, 0x5630, 0x70c8, 0xc80d, 0xf0e9, 0x1, 0x1);
        gbc.writeMem(0xd894, { 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x86a4);
        EXPECT(gbc.pc(), 0xd896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd894), 0x16);
        EXPECT(gbc.readMem(0xd895), 0x46);
        // 16 03A2
        gbc.setState(0x8771, 0x955a, 0x1560, 0x3023, 0x27ba, 0xb8ff, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0x16, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x955a);
        EXPECT(gbc.pc(), 0x8773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8771), 0x16);
        EXPECT(gbc.readMem(0x8772), 0xb);
        // 16 03A3
        gbc.setState(0x7926, 0x78e9, 0x1120, 0x8560, 0x8d25, 0x7e2e, 0x1, 0x1);
        gbc.writeMem(0x7926, { 0x16, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0x7928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03A4
        gbc.setState(0x7aa4, 0x1f8d, 0x23e0, 0x20f4, 0xda45, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x7aa4, { 0x16, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1f8d);
        EXPECT(gbc.pc(), 0x7aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03A5
        gbc.setState(0xcedc, 0x86e7, 0xb550, 0xe8b4, 0x97ce, 0x70f0, 0x0, 0x0);
        gbc.writeMem(0xcedc, { 0x16, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0xcede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedc), 0x16);
        EXPECT(gbc.readMem(0xcedd), 0x15);
        // 16 03A6
        gbc.setState(0x147d, 0xbec6, 0x6af0, 0xcda2, 0x7919, 0x8426, 0x0, 0x1);
        gbc.writeMem(0x147d, { 0x16, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbec6);
        EXPECT(gbc.pc(), 0x147f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03A7
        gbc.setState(0x19a4, 0xb6a7, 0x6c40, 0xe357, 0x1088, 0xa142, 0x0, 0x1);
        gbc.writeMem(0x19a4, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb6a7);
        EXPECT(gbc.pc(), 0x19a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03A8
        gbc.setState(0xba38, 0xbb8a, 0x5a80, 0xa1a7, 0x4bca, 0x1b27, 0x1, 0x1);
        gbc.writeMem(0xba38, { 0x16, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbb8a);
        EXPECT(gbc.pc(), 0xba3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba38), 0x16);
        EXPECT(gbc.readMem(0xba39), 0x7d);
        // 16 03A9
        gbc.setState(0x2d9e, 0x2173, 0x1230, 0x2101, 0x674, 0x96c2, 0x1, 0x1);
        gbc.writeMem(0x2d9e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2173);
        EXPECT(gbc.pc(), 0x2da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03AA
        gbc.setState(0x1bfd, 0xadce, 0xcb0, 0xc68b, 0x8608, 0xac47, 0x0, 0x0);
        gbc.writeMem(0x1bfd, { 0x16, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xadce);
        EXPECT(gbc.pc(), 0x1bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03AB
        gbc.setState(0x5c72, 0x4408, 0xd950, 0x3cc2, 0x245d, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x5c72, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4408);
        EXPECT(gbc.pc(), 0x5c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03AC
        gbc.setState(0x5d18, 0xefdc, 0x3020, 0x495f, 0xe0d1, 0x680b, 0x0, 0x0);
        gbc.writeMem(0x5d18, { 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xefdc);
        EXPECT(gbc.pc(), 0x5d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03AD
        gbc.setState(0x6f06, 0x5349, 0xbae0, 0x56ae, 0xcc55, 0xe021, 0x0, 0x1);
        gbc.writeMem(0x6f06, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5349);
        EXPECT(gbc.pc(), 0x6f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03AE
        gbc.setState(0xce0a, 0xe807, 0xb30, 0x2808, 0xadd7, 0xda77, 0x0, 0x1);
        gbc.writeMem(0xce0a, { 0x16, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe807);
        EXPECT(gbc.pc(), 0xce0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0a), 0x16);
        EXPECT(gbc.readMem(0xce0b), 0x9e);
        // 16 03AF
        gbc.setState(0xe8a1, 0xfa2e, 0xad90, 0xffa4, 0x40e3, 0x5b36, 0x0, 0x1);
        gbc.writeMem(0xe8a1, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0xe8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a1), 0x16);
        EXPECT(gbc.readMem(0xe8a2), 0xe2);
        // 16 03B0
        gbc.setState(0x4c33, 0x8ae1, 0x2430, 0xe22c, 0xd565, 0x8766, 0x1, 0x0);
        gbc.writeMem(0x4c33, { 0x16, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8ae1);
        EXPECT(gbc.pc(), 0x4c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03B1
        gbc.setState(0xd6e5, 0x23e5, 0x9200, 0x247d, 0xc307, 0x192c, 0x0, 0x0);
        gbc.writeMem(0xd6e5, { 0x16, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x23e5);
        EXPECT(gbc.pc(), 0xd6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e5), 0x16);
        EXPECT(gbc.readMem(0xd6e6), 0x23);
        // 16 03B2
        gbc.setState(0x39f3, 0xa8d2, 0x4890, 0xcee0, 0x7803, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0x39f3, { 0x16, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa8d2);
        EXPECT(gbc.pc(), 0x39f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03B3
        gbc.setState(0x8485, 0xb0a8, 0xbff0, 0x677e, 0x6718, 0x2607, 0x1, 0x0);
        gbc.writeMem(0x8485, { 0x16, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb0a8);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8485), 0x16);
        EXPECT(gbc.readMem(0x8486), 0xfe);
        // 16 03B4
        gbc.setState(0x6d2c, 0x2975, 0xf8f0, 0x59cc, 0xf596, 0xf5ac, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0x16, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2975);
        EXPECT(gbc.pc(), 0x6d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03B5
        gbc.setState(0xcec, 0xa6a9, 0x2b60, 0x66be, 0xd5, 0x4ce1, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0x16, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa6a9);
        EXPECT(gbc.pc(), 0xcee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03B6
        gbc.setState(0x9287, 0x81b3, 0xada0, 0x376d, 0x2fde, 0x1901, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0x16, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x81b3);
        EXPECT(gbc.pc(), 0x9289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9287), 0x16);
        EXPECT(gbc.readMem(0x9288), 0x5a);
        // 16 03B7
        gbc.setState(0xe300, 0xb7e9, 0x8710, 0x2da, 0xeaed, 0x24fc, 0x0, 0x0);
        gbc.writeMem(0xe300, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb7e9);
        EXPECT(gbc.pc(), 0xe302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0x16);
        EXPECT(gbc.readMem(0xe301), 0xf4);
        // 16 03B8
        gbc.setState(0x2b53, 0x45dc, 0xa1c0, 0xbb7b, 0x80dc, 0x6574, 0x0, 0x1);
        gbc.writeMem(0x2b53, { 0x16, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x45dc);
        EXPECT(gbc.pc(), 0x2b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03B9
        gbc.setState(0x2210, 0x677b, 0xa010, 0xf03c, 0x82f6, 0x23f9, 0x1, 0x0);
        gbc.writeMem(0x2210, { 0x16, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x677b);
        EXPECT(gbc.pc(), 0x2212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03BA
        gbc.setState(0x88cb, 0x8696, 0x2e10, 0x6115, 0xa97d, 0xdc1d, 0x1, 0x1);
        gbc.writeMem(0x88cb, { 0x16, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8696);
        EXPECT(gbc.pc(), 0x88cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cb), 0x16);
        EXPECT(gbc.readMem(0x88cc), 0x7);
        // 16 03BB
        gbc.setState(0x88cf, 0x80dc, 0x5b30, 0xd1bd, 0xfa4b, 0x2d54, 0x0, 0x0);
        gbc.writeMem(0x88cf, { 0x16, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x80dc);
        EXPECT(gbc.pc(), 0x88d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cf), 0x16);
        EXPECT(gbc.readMem(0x88d0), 0x94);
        // 16 03BC
        gbc.setState(0xdb5d, 0xeb90, 0x6870, 0x753b, 0x41e0, 0xac8d, 0x1, 0x1);
        gbc.writeMem(0xdb5d, { 0x16, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeb90);
        EXPECT(gbc.pc(), 0xdb5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb5d), 0x16);
        EXPECT(gbc.readMem(0xdb5e), 0x4d);
        // 16 03BE
        gbc.setState(0xb21d, 0x4f7f, 0x77e0, 0x105f, 0xf27e, 0xa2f1, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4f7f);
        EXPECT(gbc.pc(), 0xb21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21d), 0x16);
        EXPECT(gbc.readMem(0xb21e), 0xe9);
        // 16 03BF
        gbc.setState(0x2386, 0xe2bc, 0x9be0, 0xa8de, 0xc3cb, 0x6607, 0x0, 0x1);
        gbc.writeMem(0x2386, { 0x16, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe2bc);
        EXPECT(gbc.pc(), 0x2388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03C0
        gbc.setState(0x21bd, 0xe449, 0x6170, 0x7dab, 0x6a87, 0x3a29, 0x1, 0x1);
        gbc.writeMem(0x21bd, { 0x16, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe449);
        EXPECT(gbc.pc(), 0x21bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03C1
        gbc.setState(0xbddc, 0x678d, 0xcf40, 0x3efa, 0x5759, 0x8bbd, 0x1, 0x1);
        gbc.writeMem(0xbddc, { 0x16, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x678d);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbddc), 0x16);
        EXPECT(gbc.readMem(0xbddd), 0x58);
        // 16 03C2
        gbc.setState(0x7ce3, 0x30ed, 0x2930, 0xb585, 0x1a33, 0xf3fb, 0x1, 0x1);
        gbc.writeMem(0x7ce3, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x30ed);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03C3
        gbc.setState(0xe661, 0xf363, 0xfab0, 0x9f09, 0x8315, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0xe661, { 0x16, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf363);
        EXPECT(gbc.pc(), 0xe663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe661), 0x16);
        EXPECT(gbc.readMem(0xe662), 0x84);
        // 16 03C4
        gbc.setState(0x254d, 0xa22d, 0x4730, 0x980a, 0xc7cc, 0xa39, 0x0, 0x1);
        gbc.writeMem(0x254d, { 0x16, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa22d);
        EXPECT(gbc.pc(), 0x254f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03C5
        gbc.setState(0x95, 0x4e02, 0xadc0, 0x3120, 0xa085, 0x9913, 0x0, 0x0);
        gbc.writeMem(0x95, { 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4e02);
        EXPECT(gbc.pc(), 0x97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03C6
        gbc.setState(0xd461, 0x5b72, 0x2750, 0xb25a, 0xa665, 0x3610, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0x16, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5b72);
        EXPECT(gbc.pc(), 0xd463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd461), 0x16);
        EXPECT(gbc.readMem(0xd462), 0x0);
        // 16 03C7
        gbc.setState(0x2a68, 0x15e7, 0xe600, 0x52c7, 0xcddb, 0x2c8d, 0x0, 0x1);
        gbc.writeMem(0x2a68, { 0x16, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x15e7);
        EXPECT(gbc.pc(), 0x2a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03C8
        gbc.setState(0x9a53, 0xdce6, 0x99e0, 0xad9d, 0x612, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x9a53, { 0x16, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdce6);
        EXPECT(gbc.pc(), 0x9a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a53), 0x16);
        EXPECT(gbc.readMem(0x9a54), 0x53);
        // 16 03C9
        gbc.setState(0x7e9a, 0x9352, 0xb520, 0x8ad6, 0x169, 0x46b0, 0x0, 0x1);
        gbc.writeMem(0x7e9a, { 0x16, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9352);
        EXPECT(gbc.pc(), 0x7e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03CA
        gbc.setState(0xcd22, 0x249a, 0xf070, 0x2b06, 0x74aa, 0xf5f3, 0x0, 0x1);
        gbc.writeMem(0xcd22, { 0x16, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x249a);
        EXPECT(gbc.pc(), 0xcd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd22), 0x16);
        EXPECT(gbc.readMem(0xcd23), 0x17);
        // 16 03CB
        gbc.setState(0x6d8e, 0xf08e, 0x2cb0, 0x41f9, 0xf179, 0xb257, 0x1, 0x1);
        gbc.writeMem(0x6d8e, { 0x16, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf08e);
        EXPECT(gbc.pc(), 0x6d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03CC
        gbc.setState(0x7953, 0xa804, 0x97f0, 0x58e1, 0xdf6f, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x7953, { 0x16, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa804);
        EXPECT(gbc.pc(), 0x7955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03CD
        gbc.setState(0x9c97, 0x5822, 0xb270, 0xbac8, 0x6097, 0x840d, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5822);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c97), 0x16);
        EXPECT(gbc.readMem(0x9c98), 0xa1);
        // 16 03CF
        gbc.setState(0x8127, 0x5b98, 0xd7c0, 0x9d6b, 0xc41b, 0xfa66, 0x1, 0x1);
        gbc.writeMem(0x8127, { 0x16, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5b98);
        EXPECT(gbc.pc(), 0x8129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8127), 0x16);
        EXPECT(gbc.readMem(0x8128), 0x21);
        // 16 03D0
        gbc.setState(0xd944, 0x6728, 0x2ff0, 0xd4a2, 0x86c7, 0xf9be, 0x1, 0x0);
        gbc.writeMem(0xd944, { 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6728);
        EXPECT(gbc.pc(), 0xd946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd944), 0x16);
        EXPECT(gbc.readMem(0xd945), 0x8b);
        // 16 03D1
        gbc.setState(0x695e, 0x8075, 0xaa70, 0x1415, 0xe739, 0x555d, 0x1, 0x1);
        gbc.writeMem(0x695e, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8075);
        EXPECT(gbc.pc(), 0x6960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03D2
        gbc.setState(0x134, 0x5717, 0xb690, 0xb3af, 0x1ad1, 0x56c2, 0x0, 0x1);
        gbc.writeMem(0x134, { 0x16, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5717);
        EXPECT(gbc.pc(), 0x136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03D3
        gbc.setState(0xacab, 0xf381, 0xb2a0, 0xed15, 0xf963, 0x9be8, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0x16, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf381);
        EXPECT(gbc.pc(), 0xacad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacab), 0x16);
        EXPECT(gbc.readMem(0xacac), 0x68);
        // 16 03D4
        gbc.setState(0x3059, 0xbf78, 0x2f0, 0xd98a, 0x7340, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x3059, { 0x16, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbf78);
        EXPECT(gbc.pc(), 0x305b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03D5
        gbc.setState(0x8fd6, 0x550e, 0x5d90, 0x82a0, 0xc29a, 0xb31a, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0x16, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x550e);
        EXPECT(gbc.pc(), 0x8fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd6), 0x16);
        EXPECT(gbc.readMem(0x8fd7), 0x41);
        // 16 03D6
        gbc.setState(0x3af5, 0x112c, 0x6ec0, 0x8693, 0x7bdd, 0xf4fd, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x112c);
        EXPECT(gbc.pc(), 0x3af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03D7
        gbc.setState(0x9229, 0xdb6b, 0x39c0, 0xeba, 0xbde6, 0xda53, 0x1, 0x1);
        gbc.writeMem(0x9229, { 0x16, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0x922b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9229), 0x16);
        EXPECT(gbc.readMem(0x922a), 0x92);
        // 16 03D8
        gbc.setState(0xdf78, 0x6604, 0xfb20, 0x7c01, 0xd4e9, 0x9863, 0x1, 0x1);
        gbc.writeMem(0xdf78, { 0x16, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6604);
        EXPECT(gbc.pc(), 0xdf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf78), 0x16);
        EXPECT(gbc.readMem(0xdf79), 0x7a);
        // 16 03D9
        gbc.setState(0x8f71, 0xe822, 0x8ea0, 0x33d0, 0xbe25, 0xe1fc, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0x16, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe822);
        EXPECT(gbc.pc(), 0x8f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f71), 0x16);
        EXPECT(gbc.readMem(0x8f72), 0x47);
        // 16 03DA
        gbc.setState(0xb684, 0x35d7, 0x4760, 0x168b, 0xa711, 0xcc88, 0x1, 0x0);
        gbc.writeMem(0xb684, { 0x16, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x35d7);
        EXPECT(gbc.pc(), 0xb686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb684), 0x16);
        EXPECT(gbc.readMem(0xb685), 0x8b);
        // 16 03DB
        gbc.setState(0x3fda, 0xb7, 0xb330, 0x4ccc, 0xc0a4, 0x2a21, 0x1, 0x1);
        gbc.writeMem(0x3fda, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb7);
        EXPECT(gbc.pc(), 0x3fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03DC
        gbc.setState(0x338, 0xa80e, 0xe060, 0x7c31, 0x8a3c, 0x254c, 0x0, 0x0);
        gbc.writeMem(0x338, { 0x16, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa80e);
        EXPECT(gbc.pc(), 0x33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03DD
        gbc.setState(0x1911, 0x1088, 0xf780, 0x711e, 0x5ade, 0xa35c, 0x0, 0x0);
        gbc.writeMem(0x1911, { 0x16, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1088);
        EXPECT(gbc.pc(), 0x1913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03DE
        gbc.setState(0x2f87, 0xc4ac, 0xa530, 0x7761, 0xdbc8, 0xc767, 0x1, 0x1);
        gbc.writeMem(0x2f87, { 0x16, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc4ac);
        EXPECT(gbc.pc(), 0x2f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 16 03DF
        gbc.setState(0x504b, 0x29e3, 0xeb60, 0x6ead, 0x211e, 0x3260, 0x0, 0x1);
        gbc.writeMem(0x504b, { 0x16, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x29e3);
        EXPECT(gbc.pc(), 0x504d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03E0
        gbc.setState(0x7f21, 0xe99e, 0xb7c0, 0xbaff, 0x568a, 0xa969, 0x1, 0x1);
        gbc.writeMem(0x7f21, { 0x16, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe99e);
        EXPECT(gbc.pc(), 0x7f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03E1
        gbc.setState(0x5f83, 0xbe0b, 0x61d0, 0x2e43, 0x6486, 0xef63, 0x1, 0x0);
        gbc.writeMem(0x5f83, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbe0b);
        EXPECT(gbc.pc(), 0x5f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 16 03E2
        gbc.setState(0xc281, 0x92e3, 0x4210, 0xb5a5, 0x65d8, 0x7577, 0x0, 0x1);
        gbc.writeMem(0xc281, { 0x16, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0xc283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc281), 0x16);
        EXPECT(gbc.readMem(0xc282), 0x4);
        // 16 03E3
        gbc.setState(0x1a66, 0x78ab, 0x1d60, 0xd0af, 0xf749, 0x2e5a, 0x1, 0x0);
        gbc.writeMem(0x1a66, { 0x16, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x78ab);
        EXPECT(gbc.pc(), 0x1a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03E4
        gbc.setState(0x825d, 0xff32, 0x1150, 0x920, 0x8db6, 0xa1c5, 0x1, 0x1);
        gbc.writeMem(0x825d, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xff32);
        EXPECT(gbc.pc(), 0x825f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825d), 0x16);
        EXPECT(gbc.readMem(0x825e), 0xe9);
        // 16 03E5
        gbc.setState(0x550b, 0x3676, 0x95e0, 0x1ed1, 0x8b0a, 0x2ace, 0x1, 0x1);
        gbc.writeMem(0x550b, { 0x16, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 16 03E6
        gbc.setState(0x3d55, 0xdb9b, 0xbfc0, 0xf68f, 0x1ce9, 0xe078, 0x1, 0x1);
        gbc.writeMem(0x3d55, { 0x16, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdb9b);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 16 03E7
        gbc.setState(0x96ce, 0x368d, 0x9370, 0x4efa, 0x8171, 0x7608, 0x0, 0x1);
        gbc.writeMem(0x96ce, { 0x16, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x368d);
        EXPECT(gbc.pc(), 0x96d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ce), 0x16);
        EXPECT(gbc.readMem(0x96cf), 0x4c);
    }
