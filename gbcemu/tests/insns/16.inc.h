    TEST(gbcemu, opcode_16) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 16 0000
        gbc.setState(0x8a6c, 0xe7ce, 0x9250, 0xe318, 0x5e3e, 0xf636, 0x1, 0x0);
        gbc.writeMem(0x8a6c, { 0x16, 0x7a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe7ce, gbc.sp());
        EXPECT(0x8a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a6c));
        EXPECT(0x7a, gbc.readMem(0x8a6d));
        // 16 0001
        gbc.setState(0x990, 0x6989, 0x6c20, 0x7dba, 0x1072, 0xf7e3, 0x0, 0x1);
        gbc.writeMem(0x990, { 0x16, 0x7c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6989, gbc.sp());
        EXPECT(0x992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0002
        gbc.setState(0x3d44, 0x271e, 0x2ff0, 0x33f7, 0x314c, 0x635e, 0x0, 0x1);
        gbc.writeMem(0x3d44, { 0x16, 0x63 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0x3d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0003
        gbc.setState(0x8f98, 0x52fc, 0x8090, 0x8eb8, 0x133f, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0x8f98, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x52fc, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f98));
        EXPECT(0x38, gbc.readMem(0x8f99));
        // 16 0004
        gbc.setState(0x3268, 0x9753, 0x9150, 0x2cf6, 0x6eab, 0x84b9, 0x0, 0x1);
        gbc.writeMem(0x3268, { 0x16, 0x8e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9753, gbc.sp());
        EXPECT(0x326a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0005
        gbc.setState(0x9ae0, 0x9fb4, 0xecf0, 0xa807, 0xedb5, 0xa1bb, 0x0, 0x0);
        gbc.writeMem(0x9ae0, { 0x16, 0x64 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0x9ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9ae0));
        EXPECT(0x64, gbc.readMem(0x9ae1));
        // 16 0006
        gbc.setState(0xa93a, 0xb483, 0xe610, 0x7536, 0x4e9a, 0x85cd, 0x0, 0x1);
        gbc.writeMem(0xa93a, { 0x16, 0x18 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa93a));
        EXPECT(0x18, gbc.readMem(0xa93b));
        // 16 0007
        gbc.setState(0x211c, 0xb864, 0xb250, 0x78c1, 0xa7c4, 0x42ae, 0x1, 0x1);
        gbc.writeMem(0x211c, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0008
        gbc.setState(0x2e54, 0xd295, 0xdce0, 0x27a8, 0x61fd, 0xbb0f, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0x16, 0xda });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd295, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0009
        gbc.setState(0xe600, 0xe695, 0x5940, 0x707e, 0x9dc4, 0xe63b, 0x1, 0x0);
        gbc.writeMem(0xe600, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe695, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe600));
        EXPECT(0xd5, gbc.readMem(0xe601));
        // 16 000A
        gbc.setState(0xedf4, 0x63fc, 0xdd00, 0xd4ba, 0x2a82, 0x39bc, 0x0, 0x0);
        gbc.writeMem(0xedf4, { 0x16, 0x11 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xedf4));
        EXPECT(0x11, gbc.readMem(0xedf5));
        // 16 000B
        gbc.setState(0xe00d, 0x1db2, 0x97f0, 0x2b4c, 0xf685, 0x6c97, 0x0, 0x0);
        gbc.writeMem(0xe00d, { 0x16, 0x4c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0xe00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe00d));
        EXPECT(0x4c, gbc.readMem(0xe00e));
        // 16 000C
        gbc.setState(0x1b6f, 0xdde3, 0x3f90, 0x2258, 0xc8cb, 0xb13e, 0x1, 0x0);
        gbc.writeMem(0x1b6f, { 0x16, 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdde3, gbc.sp());
        EXPECT(0x1b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 000D
        gbc.setState(0xc532, 0xcc0f, 0x1e60, 0x31e6, 0x8778, 0x875, 0x1, 0x1);
        gbc.writeMem(0xc532, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0xc534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc532));
        EXPECT(0xf5, gbc.readMem(0xc533));
        // 16 000E
        gbc.setState(0x7225, 0xa9ae, 0xced0, 0xbb0b, 0xf8c3, 0xc807, 0x1, 0x1);
        gbc.writeMem(0x7225, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa9ae, gbc.sp());
        EXPECT(0x7227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 000F
        gbc.setState(0xaf8, 0xac9f, 0x7280, 0x1b8e, 0xbca9, 0x732d, 0x1, 0x1);
        gbc.writeMem(0xaf8, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0010
        gbc.setState(0xd00e, 0xbf43, 0x3fd0, 0xbec, 0x2a3a, 0xf182, 0x1, 0x1);
        gbc.writeMem(0xd00e, { 0x16, 0xf3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd00e));
        EXPECT(0xf3, gbc.readMem(0xd00f));
        // 16 0011
        gbc.setState(0x9cf6, 0x52bb, 0x99f0, 0x1b28, 0xdaff, 0xc1b3, 0x0, 0x0);
        gbc.writeMem(0x9cf6, { 0x16, 0x3f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x52bb, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9cf6));
        EXPECT(0x3f, gbc.readMem(0x9cf7));
        // 16 0012
        gbc.setState(0xbdf5, 0x214, 0xd0d0, 0xbc2c, 0xc284, 0x9062, 0x1, 0x0);
        gbc.writeMem(0xbdf5, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x214, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdf5));
        EXPECT(0xb9, gbc.readMem(0xbdf6));
        // 16 0014
        gbc.setState(0x437f, 0x4373, 0x1210, 0x2b1e, 0x6ee9, 0x429b, 0x0, 0x1);
        gbc.writeMem(0x437f, { 0x16, 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4373, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0015
        gbc.setState(0x534f, 0x614b, 0xffb0, 0x8b12, 0x608d, 0x572c, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x614b, gbc.sp());
        EXPECT(0x5351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0016
        gbc.setState(0xbfb8, 0xc131, 0xacb0, 0x638b, 0x18f7, 0x2e94, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0x16, 0xf2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc131, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbfb8));
        EXPECT(0xf2, gbc.readMem(0xbfb9));
        // 16 0017
        gbc.setState(0xa72a, 0x3bf4, 0x8210, 0x9210, 0xa27a, 0x1995, 0x1, 0x1);
        gbc.writeMem(0xa72a, { 0x16, 0x70 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa72a));
        EXPECT(0x70, gbc.readMem(0xa72b));
        // 16 0018
        gbc.setState(0x11b9, 0x9ffb, 0xb390, 0x377c, 0x48cf, 0x52ae, 0x1, 0x1);
        gbc.writeMem(0x11b9, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9ffb, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0019
        gbc.setState(0x4ed4, 0xd4de, 0xc560, 0x59d4, 0x480c, 0x6294, 0x0, 0x0);
        gbc.writeMem(0x4ed4, { 0x16, 0x87 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 001A
        gbc.setState(0xc043, 0xcb8d, 0xcba0, 0x1e20, 0x60ce, 0x8818, 0x0, 0x0);
        gbc.writeMem(0xc043, { 0x16, 0x1c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcb8d, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc043));
        EXPECT(0x1c, gbc.readMem(0xc044));
        // 16 001B
        gbc.setState(0xeae3, 0xe3d1, 0xd130, 0x5108, 0x4884, 0x3c7d, 0x0, 0x0);
        gbc.writeMem(0xeae3, { 0x16, 0xda });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe3d1, gbc.sp());
        EXPECT(0xeae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeae3));
        EXPECT(0xda, gbc.readMem(0xeae4));
        // 16 001C
        gbc.setState(0xdcfc, 0xd94f, 0x1e70, 0x6458, 0xb892, 0x574, 0x1, 0x1);
        gbc.writeMem(0xdcfc, { 0x16, 0x66 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd94f, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdcfc));
        EXPECT(0x66, gbc.readMem(0xdcfd));
        // 16 001D
        gbc.setState(0x108f, 0x4d87, 0xb350, 0x6102, 0xd443, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x108f, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x1091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 001E
        gbc.setState(0x2ca2, 0xabee, 0xa120, 0xe291, 0x8f4c, 0xdb43, 0x1, 0x0);
        gbc.writeMem(0x2ca2, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 001F
        gbc.setState(0xcfe7, 0x53f0, 0xcf00, 0x922a, 0xb954, 0xb93b, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0x16, 0xee });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcfe7));
        EXPECT(0xee, gbc.readMem(0xcfe8));
        // 16 0020
        gbc.setState(0xef0e, 0x9f2c, 0xcc80, 0x682b, 0xf644, 0x58fa, 0x0, 0x1);
        gbc.writeMem(0xef0e, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xef0e));
        EXPECT(0xd1, gbc.readMem(0xef0f));
        // 16 0021
        gbc.setState(0xa828, 0xf117, 0xe870, 0x889e, 0x55c1, 0x1018, 0x1, 0x0);
        gbc.writeMem(0xa828, { 0x16, 0x64 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xa82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa828));
        EXPECT(0x64, gbc.readMem(0xa829));
        // 16 0023
        gbc.setState(0xe252, 0xc3d7, 0xfdb0, 0x62ce, 0xe610, 0x2278, 0x0, 0x1);
        gbc.writeMem(0xe252, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc3d7, gbc.sp());
        EXPECT(0xe254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe252));
        EXPECT(0xe9, gbc.readMem(0xe253));
        // 16 0024
        gbc.setState(0xc773, 0xd399, 0x4f70, 0xe468, 0x847, 0x9aa4, 0x0, 0x1);
        gbc.writeMem(0xc773, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0xc775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc773));
        EXPECT(0xf5, gbc.readMem(0xc774));
        // 16 0026
        gbc.setState(0xb391, 0x5c2f, 0xaaa0, 0xa730, 0x24f9, 0xf026, 0x1, 0x0);
        gbc.writeMem(0xb391, { 0x16, 0x27 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5c2f, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb391));
        EXPECT(0x27, gbc.readMem(0xb392));
        // 16 0027
        gbc.setState(0x4cd4, 0x7ea7, 0x9940, 0x29d9, 0xfe8e, 0x2c8b, 0x0, 0x0);
        gbc.writeMem(0x4cd4, { 0x16, 0x81 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7ea7, gbc.sp());
        EXPECT(0x4cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0028
        gbc.setState(0x61a2, 0x8387, 0x5cb0, 0xcde5, 0x489f, 0x54b8, 0x1, 0x0);
        gbc.writeMem(0x61a2, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0029
        gbc.setState(0x4067, 0x82c8, 0xe0d0, 0x2b7e, 0xe34a, 0xf0f5, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x82c8, gbc.sp());
        EXPECT(0x4069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 002B
        gbc.setState(0x1755, 0x773a, 0x42c0, 0xbcd9, 0x9c02, 0x646f, 0x1, 0x1);
        gbc.writeMem(0x1755, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 002C
        gbc.setState(0x3f8b, 0x9aba, 0x2590, 0xd73a, 0x4b34, 0xe434, 0x1, 0x0);
        gbc.writeMem(0x3f8b, { 0x16, 0xe });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9aba, gbc.sp());
        EXPECT(0x3f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 002D
        gbc.setState(0xae82, 0xce2c, 0xcb90, 0xfb70, 0x3749, 0x30da, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0x16, 0x35 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce2c, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xae82));
        EXPECT(0x35, gbc.readMem(0xae83));
        // 16 002E
        gbc.setState(0xed34, 0xa648, 0x1050, 0x8a7c, 0x32f9, 0xb9e5, 0x1, 0x0);
        gbc.writeMem(0xed34, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0xed36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xed34));
        EXPECT(0xc4, gbc.readMem(0xed35));
        // 16 002F
        gbc.setState(0x66a9, 0x3aef, 0xf660, 0x77c3, 0x8bf1, 0x9e8e, 0x0, 0x0);
        gbc.writeMem(0x66a9, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3aef, gbc.sp());
        EXPECT(0x66ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0030
        gbc.setState(0x75c, 0xfd73, 0x2860, 0x5307, 0xef0c, 0x6599, 0x0, 0x1);
        gbc.writeMem(0x75c, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfd73, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0031
        gbc.setState(0x777c, 0x8d6a, 0x2f10, 0x4aa7, 0xec90, 0x7e52, 0x1, 0x1);
        gbc.writeMem(0x777c, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0032
        gbc.setState(0x1847, 0xb07c, 0x1930, 0x79e5, 0x68e6, 0xd8db, 0x0, 0x1);
        gbc.writeMem(0x1847, { 0x16, 0x87 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb07c, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0033
        gbc.setState(0x463b, 0x6e97, 0xab10, 0xef7a, 0xcb36, 0x5cbc, 0x0, 0x1);
        gbc.writeMem(0x463b, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6e97, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0034
        gbc.setState(0x3ebb, 0x8586, 0x45b0, 0x5d28, 0x7a88, 0x1ca7, 0x0, 0x1);
        gbc.writeMem(0x3ebb, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8586, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0035
        gbc.setState(0x206b, 0xcf6e, 0xf6e0, 0xe338, 0x4753, 0xf477, 0x0, 0x1);
        gbc.writeMem(0x206b, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf6e, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0036
        gbc.setState(0x8a67, 0xc656, 0x3ec0, 0xb7c9, 0x97de, 0x5871, 0x0, 0x0);
        gbc.writeMem(0x8a67, { 0x16, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc656, gbc.sp());
        EXPECT(0x8a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a67));
        EXPECT(0xf2, gbc.readMem(0x8a68));
        // 16 0037
        gbc.setState(0x52d2, 0x9a70, 0x6610, 0xb160, 0xebb, 0xbf4e, 0x0, 0x0);
        gbc.writeMem(0x52d2, { 0x16, 0x82 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0039
        gbc.setState(0xe0ee, 0xd19c, 0xbad0, 0x60cd, 0x494, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0xe0ee, { 0x16, 0xab });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe0ee));
        EXPECT(0xab, gbc.readMem(0xe0ef));
        // 16 003A
        gbc.setState(0x67d, 0xdc00, 0xccb0, 0x1697, 0x6563, 0x6fff, 0x0, 0x1);
        gbc.writeMem(0x67d, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdc00, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 003B
        gbc.setState(0xb70e, 0x4e8f, 0x2060, 0xf872, 0x89fc, 0xa71a, 0x0, 0x0);
        gbc.writeMem(0xb70e, { 0x16, 0x8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4e8f, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb70e));
        EXPECT(0x8, gbc.readMem(0xb70f));
        // 16 003C
        gbc.setState(0x3ce6, 0x6d8, 0x5430, 0xe45f, 0xa1ad, 0x92ea, 0x0, 0x0);
        gbc.writeMem(0x3ce6, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x3ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 003D
        gbc.setState(0x5eb9, 0xa873, 0x4c20, 0xc13e, 0xcf2d, 0xe342, 0x0, 0x1);
        gbc.writeMem(0x5eb9, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa873, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 003E
        gbc.setState(0xdd4e, 0xfe95, 0x3370, 0x93e9, 0xd7dc, 0xc15b, 0x0, 0x1);
        gbc.writeMem(0xdd4e, { 0x16, 0x6a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfe95, gbc.sp());
        EXPECT(0xdd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdd4e));
        EXPECT(0x6a, gbc.readMem(0xdd4f));
        // 16 003F
        gbc.setState(0xb010, 0xc954, 0x38e0, 0x263a, 0x5ef6, 0xbebc, 0x1, 0x1);
        gbc.writeMem(0xb010, { 0x16, 0x31 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0xb012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb010));
        EXPECT(0x31, gbc.readMem(0xb011));
        // 16 0040
        gbc.setState(0xddd, 0x2a18, 0x9220, 0xd3fc, 0xf9cd, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0xddd, { 0x16, 0x2e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2a18, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0041
        gbc.setState(0x753a, 0x9331, 0x7f10, 0x5b6c, 0xeb75, 0x4249, 0x1, 0x0);
        gbc.writeMem(0x753a, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9331, gbc.sp());
        EXPECT(0x753c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0042
        gbc.setState(0xb1a7, 0x4195, 0x6aa0, 0xc12a, 0x2984, 0x6b59, 0x1, 0x0);
        gbc.writeMem(0xb1a7, { 0x16, 0x6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4195, gbc.sp());
        EXPECT(0xb1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb1a7));
        EXPECT(0x6, gbc.readMem(0xb1a8));
        // 16 0043
        gbc.setState(0x4ec2, 0x8c09, 0x5d90, 0x3433, 0xb9f4, 0xa728, 0x1, 0x0);
        gbc.writeMem(0x4ec2, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8c09, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0044
        gbc.setState(0x881d, 0xe1f6, 0xf0b0, 0x64ac, 0xf7de, 0x8c79, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0x16, 0x54 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe1f6, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x881d));
        EXPECT(0x54, gbc.readMem(0x881e));
        // 16 0045
        gbc.setState(0xec97, 0x813f, 0x7060, 0x9abe, 0x48f1, 0xdedf, 0x1, 0x0);
        gbc.writeMem(0xec97, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x813f, gbc.sp());
        EXPECT(0xec99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec97));
        EXPECT(0xa8, gbc.readMem(0xec98));
        // 16 0046
        gbc.setState(0x8973, 0x4995, 0x8830, 0xf127, 0xa68d, 0xe36d, 0x1, 0x0);
        gbc.writeMem(0x8973, { 0x16, 0x9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0x8975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8973));
        EXPECT(0x9, gbc.readMem(0x8974));
        // 16 0047
        gbc.setState(0xa737, 0xafc5, 0x4da0, 0x3625, 0x164c, 0x8556, 0x1, 0x1);
        gbc.writeMem(0xa737, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xafc5, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa737));
        EXPECT(0x72, gbc.readMem(0xa738));
        // 16 0049
        gbc.setState(0x7a01, 0x15c3, 0xfb80, 0x85b8, 0xaf7f, 0x62b1, 0x1, 0x1);
        gbc.writeMem(0x7a01, { 0x16, 0x9e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 004A
        gbc.setState(0xa227, 0x9553, 0x67e0, 0x1db1, 0x2593, 0xeeb5, 0x0, 0x1);
        gbc.writeMem(0xa227, { 0x16, 0x4e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9553, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa227));
        EXPECT(0x4e, gbc.readMem(0xa228));
        // 16 004B
        gbc.setState(0xb0a7, 0x364f, 0x8ee0, 0x6d4, 0x1cc2, 0xeba9, 0x1, 0x1);
        gbc.writeMem(0xb0a7, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb0a7));
        EXPECT(0xd5, gbc.readMem(0xb0a8));
        // 16 004C
        gbc.setState(0x8108, 0xd574, 0x71f0, 0x223e, 0x431c, 0xdec2, 0x1, 0x1);
        gbc.writeMem(0x8108, { 0x16, 0xae });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8108));
        EXPECT(0xae, gbc.readMem(0x8109));
        // 16 004D
        gbc.setState(0x78aa, 0x584c, 0x9710, 0x5ff, 0x4ea1, 0xfa6a, 0x0, 0x0);
        gbc.writeMem(0x78aa, { 0x16, 0x51 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x584c, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 004E
        gbc.setState(0xca8e, 0xba, 0xd190, 0x57eb, 0xc65f, 0xf433, 0x0, 0x1);
        gbc.writeMem(0xca8e, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0xca90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xca8e));
        EXPECT(0x85, gbc.readMem(0xca8f));
        // 16 004F
        gbc.setState(0x18e4, 0x83d3, 0xc0c0, 0xe179, 0x2cf1, 0x7369, 0x0, 0x1);
        gbc.writeMem(0x18e4, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0x18e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0050
        gbc.setState(0x169f, 0x5951, 0xcda0, 0x40be, 0xec16, 0x361b, 0x0, 0x0);
        gbc.writeMem(0x169f, { 0x16, 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5951, gbc.sp());
        EXPECT(0x16a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0051
        gbc.setState(0xce38, 0x533c, 0xc0c0, 0x4957, 0x5e6b, 0x2f19, 0x0, 0x1);
        gbc.writeMem(0xce38, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x533c, gbc.sp());
        EXPECT(0xce3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xce38));
        EXPECT(0x4f, gbc.readMem(0xce39));
        // 16 0052
        gbc.setState(0x6b1f, 0xd6af, 0x3530, 0x2708, 0x6c2f, 0x8744, 0x0, 0x0);
        gbc.writeMem(0x6b1f, { 0x16, 0xfb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x6b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0053
        gbc.setState(0xd0e7, 0xed4e, 0xa030, 0x788, 0xc038, 0x6ff2, 0x0, 0x1);
        gbc.writeMem(0xd0e7, { 0x16, 0xec });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xed4e, gbc.sp());
        EXPECT(0xd0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd0e7));
        EXPECT(0xec, gbc.readMem(0xd0e8));
        // 16 0054
        gbc.setState(0x2148, 0x3d14, 0x5100, 0xcb3b, 0xa300, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0x2148, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3d14, gbc.sp());
        EXPECT(0x214a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0055
        gbc.setState(0x957a, 0xa045, 0x7610, 0x9f28, 0xb5fe, 0xdb6e, 0x0, 0x1);
        gbc.writeMem(0x957a, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0x957c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x957a));
        EXPECT(0xd2, gbc.readMem(0x957b));
        // 16 0056
        gbc.setState(0x8b5a, 0x91c5, 0x3650, 0x3980, 0xa961, 0x121b, 0x1, 0x1);
        gbc.writeMem(0x8b5a, { 0x16, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x8b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8b5a));
        EXPECT(0xd, gbc.readMem(0x8b5b));
        // 16 0057
        gbc.setState(0x5fef, 0x4309, 0x2780, 0xe464, 0xdcb3, 0x6b5e, 0x1, 0x1);
        gbc.writeMem(0x5fef, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4309, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0058
        gbc.setState(0xe058, 0xf67d, 0x1c80, 0x25e1, 0x4fb8, 0x7798, 0x1, 0x1);
        gbc.writeMem(0xe058, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe058));
        EXPECT(0xe3, gbc.readMem(0xe059));
        // 16 0059
        gbc.setState(0x9861, 0xad15, 0xcc70, 0xdd3a, 0x919e, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0x9861, { 0x16, 0xd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad15, gbc.sp());
        EXPECT(0x9863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9861));
        EXPECT(0xd, gbc.readMem(0x9862));
        // 16 005A
        gbc.setState(0x4a2e, 0x8ab8, 0x3160, 0xf31a, 0x83f2, 0x497e, 0x0, 0x0);
        gbc.writeMem(0x4a2e, { 0x16, 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8ab8, gbc.sp());
        EXPECT(0x4a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 005B
        gbc.setState(0x115a, 0x694, 0x9510, 0x4fa7, 0x233a, 0x7153, 0x1, 0x0);
        gbc.writeMem(0x115a, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x694, gbc.sp());
        EXPECT(0x115c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 005C
        gbc.setState(0x38b, 0x2fe0, 0x9bf0, 0x50f2, 0x5fa3, 0x4a40, 0x0, 0x0);
        gbc.writeMem(0x38b, { 0x16, 0x25 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2fe0, gbc.sp());
        EXPECT(0x38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 005D
        gbc.setState(0x5923, 0x12fb, 0x91d0, 0x84ad, 0x2de3, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0x16, 0x3e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x12fb, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 005E
        gbc.setState(0xc73d, 0x14c3, 0x2750, 0x2978, 0x9f58, 0x1bfd, 0x1, 0x0);
        gbc.writeMem(0xc73d, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0xc73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc73d));
        EXPECT(0xf0, gbc.readMem(0xc73e));
        // 16 005F
        gbc.setState(0x7549, 0xedd4, 0x78d0, 0x1565, 0xce34, 0x2007, 0x0, 0x1);
        gbc.writeMem(0x7549, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0x754b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0060
        gbc.setState(0xd11e, 0x3bce, 0x2950, 0xed09, 0x942e, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xd11e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3bce, gbc.sp());
        EXPECT(0xd120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd11e));
        EXPECT(0x91, gbc.readMem(0xd11f));
        // 16 0061
        gbc.setState(0x4bc6, 0xc4cc, 0x7210, 0xb78c, 0x10b2, 0x9ad1, 0x0, 0x1);
        gbc.writeMem(0x4bc6, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc4cc, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0062
        gbc.setState(0xc117, 0x89bf, 0xa270, 0x8e4d, 0x77ab, 0x61f2, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0x16, 0xbd });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x89bf, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc117));
        EXPECT(0xbd, gbc.readMem(0xc118));
        // 16 0063
        gbc.setState(0xb3e7, 0x3071, 0x8160, 0x41f4, 0x35e2, 0xd019, 0x0, 0x0);
        gbc.writeMem(0xb3e7, { 0x16, 0x17 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3071, gbc.sp());
        EXPECT(0xb3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb3e7));
        EXPECT(0x17, gbc.readMem(0xb3e8));
        // 16 0064
        gbc.setState(0x196e, 0x9f83, 0x9d60, 0x7dec, 0xa3b6, 0x9959, 0x0, 0x0);
        gbc.writeMem(0x196e, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f83, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0065
        gbc.setState(0x350c, 0xf4b, 0x3ef0, 0x8736, 0x74d5, 0x3671, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf4b, gbc.sp());
        EXPECT(0x350e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0066
        gbc.setState(0x720b, 0x13c0, 0xf100, 0xe028, 0x268a, 0xafef, 0x0, 0x0);
        gbc.writeMem(0x720b, { 0x16, 0x6d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0067
        gbc.setState(0x8844, 0x37ff, 0x7280, 0x264c, 0xbec, 0x1589, 0x1, 0x0);
        gbc.writeMem(0x8844, { 0x16, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x37ff, gbc.sp());
        EXPECT(0x8846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8844));
        EXPECT(0x10, gbc.readMem(0x8845));
        // 16 0068
        gbc.setState(0xbcff, 0x2e50, 0xd980, 0x8912, 0xa329, 0xccff, 0x0, 0x1);
        gbc.writeMem(0xbcff, { 0x16, 0x99 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2e50, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbcff));
        EXPECT(0x99, gbc.readMem(0xbd00));
        // 16 0069
        gbc.setState(0x52cc, 0xb0af, 0xf1e0, 0x1ca8, 0x197b, 0xe6e2, 0x1, 0x0);
        gbc.writeMem(0x52cc, { 0x16, 0x84 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb0af, gbc.sp());
        EXPECT(0x52ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 006A
        gbc.setState(0xdbc2, 0x67c8, 0x1350, 0x6500, 0x20f5, 0x58f8, 0x0, 0x0);
        gbc.writeMem(0xdbc2, { 0x16, 0xfd });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x67c8, gbc.sp());
        EXPECT(0xdbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdbc2));
        EXPECT(0xfd, gbc.readMem(0xdbc3));
        // 16 006B
        gbc.setState(0x263b, 0xcf3b, 0x3890, 0x103f, 0x8e7b, 0x5646, 0x1, 0x1);
        gbc.writeMem(0x263b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcf3b, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 006D
        gbc.setState(0xd0c7, 0xe9b8, 0xa140, 0x96c3, 0x4485, 0x7bc, 0x1, 0x0);
        gbc.writeMem(0xd0c7, { 0x16, 0xfa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe9b8, gbc.sp());
        EXPECT(0xd0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd0c7));
        EXPECT(0xfa, gbc.readMem(0xd0c8));
        // 16 006E
        gbc.setState(0x1e6e, 0x1cd8, 0x1fe0, 0x31ce, 0x839b, 0x2a5b, 0x1, 0x0);
        gbc.writeMem(0x1e6e, { 0x16, 0x81 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 006F
        gbc.setState(0xe218, 0x3205, 0xfbf0, 0xc3e, 0xfdfa, 0x7a36, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0x16, 0x3f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3205, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe218));
        EXPECT(0x3f, gbc.readMem(0xe219));
        // 16 0070
        gbc.setState(0x2458, 0x1e0c, 0x680, 0x36fa, 0xc1c3, 0xb71, 0x1, 0x1);
        gbc.writeMem(0x2458, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1e0c, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0071
        gbc.setState(0x755, 0x5688, 0x1530, 0x46ce, 0xae23, 0xc86c, 0x1, 0x0);
        gbc.writeMem(0x755, { 0x16, 0x5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5688, gbc.sp());
        EXPECT(0x757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0072
        gbc.setState(0x852d, 0x9c7a, 0x46f0, 0x9e7b, 0x2f5f, 0xa887, 0x1, 0x0);
        gbc.writeMem(0x852d, { 0x16, 0x84 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0x852f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x852d));
        EXPECT(0x84, gbc.readMem(0x852e));
        // 16 0073
        gbc.setState(0x2388, 0x902d, 0x13b0, 0xcd8d, 0x235d, 0x8d1d, 0x1, 0x0);
        gbc.writeMem(0x2388, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x902d, gbc.sp());
        EXPECT(0x238a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0074
        gbc.setState(0x2d4b, 0xa39e, 0x3f0, 0x3cee, 0xf5, 0x675b, 0x0, 0x0);
        gbc.writeMem(0x2d4b, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa39e, gbc.sp());
        EXPECT(0x2d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0075
        gbc.setState(0x9240, 0xb7fb, 0x4550, 0xbe7a, 0x3b4, 0x8b43, 0x0, 0x0);
        gbc.writeMem(0x9240, { 0x16, 0x6b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb7fb, gbc.sp());
        EXPECT(0x9242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9240));
        EXPECT(0x6b, gbc.readMem(0x9241));
        // 16 0076
        gbc.setState(0x1da, 0x60, 0xa330, 0x40ea, 0x6121, 0xaf1c, 0x1, 0x0);
        gbc.writeMem(0x1da, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0x1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0077
        gbc.setState(0xe152, 0x222, 0x2890, 0x230, 0xe8b8, 0xb4e, 0x1, 0x0);
        gbc.writeMem(0xe152, { 0x16, 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe152));
        EXPECT(0x4b, gbc.readMem(0xe153));
        // 16 0078
        gbc.setState(0x84fa, 0x2392, 0x3470, 0x46a8, 0x5f46, 0xa162, 0x0, 0x0);
        gbc.writeMem(0x84fa, { 0x16, 0x69 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x84fa));
        EXPECT(0x69, gbc.readMem(0x84fb));
        // 16 0079
        gbc.setState(0x7f61, 0xa612, 0x65f0, 0x28db, 0xe349, 0xf2a7, 0x0, 0x1);
        gbc.writeMem(0x7f61, { 0x16, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa612, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 007A
        gbc.setState(0xd078, 0xe676, 0xa7b0, 0xd5e, 0xf239, 0x6ac9, 0x1, 0x0);
        gbc.writeMem(0xd078, { 0x16, 0x3b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe676, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd078));
        EXPECT(0x3b, gbc.readMem(0xd079));
        // 16 007B
        gbc.setState(0x772c, 0x85bc, 0x4940, 0x4f13, 0x2ffb, 0x75ae, 0x0, 0x0);
        gbc.writeMem(0x772c, { 0x16, 0x82 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x85bc, gbc.sp());
        EXPECT(0x772e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 007C
        gbc.setState(0x36c7, 0xa7b7, 0xb2f0, 0x838, 0x5664, 0xb0d8, 0x1, 0x1);
        gbc.writeMem(0x36c7, { 0x16, 0xaf });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0x36c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 007D
        gbc.setState(0x3ac7, 0xa0ca, 0x6dd0, 0x9686, 0x3667, 0x1afe, 0x0, 0x1);
        gbc.writeMem(0x3ac7, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa0ca, gbc.sp());
        EXPECT(0x3ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 007E
        gbc.setState(0xe105, 0xdeea, 0x5ba0, 0xe7a3, 0x1c76, 0x29de, 0x1, 0x0);
        gbc.writeMem(0xe105, { 0x16, 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdeea, gbc.sp());
        EXPECT(0xe107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe105));
        EXPECT(0x2c, gbc.readMem(0xe106));
        // 16 0080
        gbc.setState(0x3f1f, 0x9201, 0x9ab0, 0xd381, 0x9b96, 0x35ee, 0x0, 0x1);
        gbc.writeMem(0x3f1f, { 0x16, 0x2e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9201, gbc.sp());
        EXPECT(0x3f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0081
        gbc.setState(0xc3f4, 0xe456, 0xa160, 0x65d4, 0x31ca, 0x589, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe456, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc3f4));
        EXPECT(0xd1, gbc.readMem(0xc3f5));
        // 16 0082
        gbc.setState(0x7a6e, 0xa508, 0x26a0, 0xff2e, 0xabe2, 0x7bbf, 0x1, 0x0);
        gbc.writeMem(0x7a6e, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x7a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0083
        gbc.setState(0x901d, 0xcd16, 0xb0c0, 0xcf50, 0x32ba, 0xcd87, 0x0, 0x1);
        gbc.writeMem(0x901d, { 0x16, 0x14 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcd16, gbc.sp());
        EXPECT(0x901f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x901d));
        EXPECT(0x14, gbc.readMem(0x901e));
        // 16 0084
        gbc.setState(0x53a8, 0x85a2, 0x6500, 0xec8b, 0xc1cf, 0xa945, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0x16, 0x6c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x85a2, gbc.sp());
        EXPECT(0x53aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0085
        gbc.setState(0x1ffd, 0x5170, 0xb610, 0xc600, 0x1658, 0x1f8e, 0x0, 0x0);
        gbc.writeMem(0x1ffd, { 0x16, 0xda });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5170, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0086
        gbc.setState(0x87a1, 0x8a11, 0x1d10, 0x3538, 0x5a0a, 0xf98a, 0x0, 0x1);
        gbc.writeMem(0x87a1, { 0x16, 0x63 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0x87a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x87a1));
        EXPECT(0x63, gbc.readMem(0x87a2));
        // 16 0087
        gbc.setState(0x7256, 0x9506, 0x8250, 0x2098, 0x77bb, 0x52d3, 0x1, 0x0);
        gbc.writeMem(0x7256, { 0x16, 0xff });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9506, gbc.sp());
        EXPECT(0x7258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0088
        gbc.setState(0x9e8f, 0xf92, 0x40e0, 0x3ca6, 0x8987, 0x148a, 0x0, 0x1);
        gbc.writeMem(0x9e8f, { 0x16, 0x56 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf92, gbc.sp());
        EXPECT(0x9e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9e8f));
        EXPECT(0x56, gbc.readMem(0x9e90));
        // 16 0089
        gbc.setState(0x9493, 0xfff, 0x2330, 0xbd10, 0xdb28, 0x843d, 0x1, 0x1);
        gbc.writeMem(0x9493, { 0x16, 0x86 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9493));
        EXPECT(0x86, gbc.readMem(0x9494));
        // 16 008A
        gbc.setState(0x32a6, 0x3075, 0xdf80, 0xa59a, 0xa8da, 0xcd3c, 0x0, 0x1);
        gbc.writeMem(0x32a6, { 0x16, 0x59 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3075, gbc.sp());
        EXPECT(0x32a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 008B
        gbc.setState(0x3a34, 0xb06b, 0x3d10, 0x5d8c, 0xb561, 0x4aa1, 0x1, 0x0);
        gbc.writeMem(0x3a34, { 0x16, 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb06b, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 008C
        gbc.setState(0x244c, 0x3f4a, 0x3a0, 0x7ccc, 0xbade, 0xd478, 0x0, 0x1);
        gbc.writeMem(0x244c, { 0x16, 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 008D
        gbc.setState(0x2c65, 0xa27f, 0xf530, 0xdf73, 0x79bb, 0x7a36, 0x0, 0x0);
        gbc.writeMem(0x2c65, { 0x16, 0xfb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa27f, gbc.sp());
        EXPECT(0x2c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 008E
        gbc.setState(0x214a, 0x7ed2, 0x17e0, 0xca40, 0xbe85, 0xf83, 0x0, 0x0);
        gbc.writeMem(0x214a, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 008F
        gbc.setState(0x3bbd, 0xe8b, 0x8560, 0xe8af, 0x1cb8, 0x626d, 0x0, 0x0);
        gbc.writeMem(0x3bbd, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe8b, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0090
        gbc.setState(0xc174, 0x439, 0x3e30, 0xedbf, 0x1ca7, 0x2ad, 0x1, 0x0);
        gbc.writeMem(0xc174, { 0x16, 0x2e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0xc176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc174));
        EXPECT(0x2e, gbc.readMem(0xc175));
        // 16 0091
        gbc.setState(0xca19, 0x49f5, 0x7cf0, 0x8a1e, 0x9de6, 0x8aae, 0x1, 0x1);
        gbc.writeMem(0xca19, { 0x16, 0x97 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x49f5, gbc.sp());
        EXPECT(0xca1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xca19));
        EXPECT(0x97, gbc.readMem(0xca1a));
        // 16 0092
        gbc.setState(0x79e2, 0xf4f5, 0x8b00, 0x82e3, 0x2c49, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0x79e2, { 0x16, 0x7c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf4f5, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0093
        gbc.setState(0x1022, 0xfc54, 0x1c60, 0xb475, 0xf344, 0x662f, 0x1, 0x0);
        gbc.writeMem(0x1022, { 0x16, 0x41 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0x1024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0094
        gbc.setState(0x2b50, 0x10f0, 0xa5c0, 0x8008, 0x8d2f, 0x2a8, 0x0, 0x1);
        gbc.writeMem(0x2b50, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x10f0, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0095
        gbc.setState(0x71b0, 0xa622, 0xaa60, 0xfdd1, 0x2651, 0xbd6a, 0x0, 0x1);
        gbc.writeMem(0x71b0, { 0x16, 0x1c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0096
        gbc.setState(0x74ef, 0xf88b, 0xd30, 0x278b, 0xb3d8, 0x5edd, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x74f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0097
        gbc.setState(0x5818, 0xda0b, 0x2c90, 0x986, 0x93b2, 0x818c, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0098
        gbc.setState(0x9f5b, 0x1f0d, 0x5dd0, 0x805a, 0xbece, 0x2cfb, 0x0, 0x1);
        gbc.writeMem(0x9f5b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1f0d, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9f5b));
        EXPECT(0xf6, gbc.readMem(0x9f5c));
        // 16 0099
        gbc.setState(0xb6b3, 0xaaa4, 0xc7b0, 0x30d1, 0xab5, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0xb6b3, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaaa4, gbc.sp());
        EXPECT(0xb6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb6b3));
        EXPECT(0x15, gbc.readMem(0xb6b4));
        // 16 009A
        gbc.setState(0x8812, 0x1db9, 0xdb30, 0x7090, 0xef41, 0x8404, 0x1, 0x0);
        gbc.writeMem(0x8812, { 0x16, 0x36 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8812));
        EXPECT(0x36, gbc.readMem(0x8813));
        // 16 009B
        gbc.setState(0x81b5, 0x928c, 0x1ef0, 0x6c83, 0x49e, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x81b5, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x928c, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x81b5));
        EXPECT(0x15, gbc.readMem(0x81b6));
        // 16 009C
        gbc.setState(0xe0b8, 0x3e0d, 0x69a0, 0x4fd2, 0x2114, 0xa600, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0x16, 0xed });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe0b8));
        EXPECT(0xed, gbc.readMem(0xe0b9));
        // 16 009D
        gbc.setState(0xa0e9, 0xc8a0, 0x9c40, 0x1465, 0x8ae3, 0x20ea, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0x16, 0x24 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc8a0, gbc.sp());
        EXPECT(0xa0eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa0e9));
        EXPECT(0x24, gbc.readMem(0xa0ea));
        // 16 009E
        gbc.setState(0x3d0c, 0x1470, 0xf910, 0xb7cc, 0x6260, 0xf1d6, 0x1, 0x0);
        gbc.writeMem(0x3d0c, { 0x16, 0xaf });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1470, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 009F
        gbc.setState(0x2619, 0xa55a, 0xe3e0, 0xc5a3, 0x2f34, 0x118b, 0x0, 0x1);
        gbc.writeMem(0x2619, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0x261b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00A0
        gbc.setState(0x1361, 0xc12c, 0xf860, 0x2078, 0x1bb4, 0x4d64, 0x1, 0x0);
        gbc.writeMem(0x1361, { 0x16, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x1363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00A1
        gbc.setState(0x4487, 0x55d1, 0xed80, 0xedc8, 0x5d3, 0x1f59, 0x1, 0x0);
        gbc.writeMem(0x4487, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x55d1, gbc.sp());
        EXPECT(0x4489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00A2
        gbc.setState(0x704, 0x9ff3, 0xe4a0, 0xe8f2, 0x7576, 0x64bf, 0x1, 0x0);
        gbc.writeMem(0x704, { 0x16, 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0x706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00A3
        gbc.setState(0x3215, 0xe144, 0xc260, 0xc4, 0xb555, 0xd733, 0x0, 0x1);
        gbc.writeMem(0x3215, { 0x16, 0x16 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe144, gbc.sp());
        EXPECT(0x3217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00A4
        gbc.setState(0xbdab, 0xa687, 0x2e40, 0x1fb, 0x5006, 0x8181, 0x0, 0x1);
        gbc.writeMem(0xbdab, { 0x16, 0x70 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa687, gbc.sp());
        EXPECT(0xbdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdab));
        EXPECT(0x70, gbc.readMem(0xbdac));
        // 16 00A5
        gbc.setState(0x505a, 0x23ab, 0xdbf0, 0x2777, 0xba21, 0xf546, 0x1, 0x1);
        gbc.writeMem(0x505a, { 0x16, 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00A6
        gbc.setState(0xc6eb, 0x8231, 0x8a80, 0xdf33, 0x8d28, 0x81b5, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x16, 0x69 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8231, gbc.sp());
        EXPECT(0xc6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc6eb));
        EXPECT(0x69, gbc.readMem(0xc6ec));
        // 16 00A7
        gbc.setState(0x464a, 0xa940, 0x9810, 0xa09b, 0xcbfa, 0x6638, 0x1, 0x1);
        gbc.writeMem(0x464a, { 0x16, 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00A8
        gbc.setState(0x3c36, 0xba98, 0x8410, 0xaa07, 0x5a0c, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0x3c36, { 0x16, 0x68 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xba98, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00A9
        gbc.setState(0x2ab9, 0xc8bc, 0x8f70, 0x74fb, 0x9724, 0xca0c, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0x16, 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc8bc, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00AA
        gbc.setState(0xb83e, 0x5136, 0x830, 0x3a8c, 0x8753, 0x4210, 0x1, 0x1);
        gbc.writeMem(0xb83e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5136, gbc.sp());
        EXPECT(0xb840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb83e));
        EXPECT(0x91, gbc.readMem(0xb83f));
        // 16 00AB
        gbc.setState(0x37a, 0x8ef2, 0xb020, 0x4367, 0xccc, 0x31ba, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x16, 0x16 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ef2, gbc.sp());
        EXPECT(0x37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00AC
        gbc.setState(0xde2b, 0x1e7, 0x46a0, 0x19d7, 0x674d, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1e7, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xde2b));
        EXPECT(0xc5, gbc.readMem(0xde2c));
        // 16 00AD
        gbc.setState(0xa111, 0x7be6, 0xde80, 0x7e13, 0x3ee5, 0xf40, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0x16, 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7be6, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa111));
        EXPECT(0x17, gbc.readMem(0xa112));
        // 16 00AE
        gbc.setState(0x8fe9, 0x8df5, 0x3940, 0xe7ab, 0x7b60, 0xcbda, 0x1, 0x0);
        gbc.writeMem(0x8fe9, { 0x16, 0xcf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8df5, gbc.sp());
        EXPECT(0x8feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8fe9));
        EXPECT(0xcf, gbc.readMem(0x8fea));
        // 16 00AF
        gbc.setState(0x4b92, 0x2841, 0x20, 0xc38e, 0x183b, 0xd7d0, 0x1, 0x1);
        gbc.writeMem(0x4b92, { 0x16, 0x34 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2841, gbc.sp());
        EXPECT(0x4b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00B0
        gbc.setState(0x57d1, 0xd2d1, 0x3a40, 0x9426, 0x90c0, 0x5dcd, 0x0, 0x0);
        gbc.writeMem(0x57d1, { 0x16, 0x5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd2d1, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00B1
        gbc.setState(0xd733, 0xbb25, 0xc660, 0x1fe4, 0x9925, 0xedbb, 0x1, 0x1);
        gbc.writeMem(0xd733, { 0x16, 0x3a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbb25, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd733));
        EXPECT(0x3a, gbc.readMem(0xd734));
        // 16 00B2
        gbc.setState(0xd268, 0x9929, 0xf380, 0x6f11, 0xc7cb, 0x6454, 0x1, 0x0);
        gbc.writeMem(0xd268, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd268));
        EXPECT(0xe0, gbc.readMem(0xd269));
        // 16 00B3
        gbc.setState(0xd278, 0x8fc5, 0xe3b0, 0x81f4, 0x34a6, 0xf61d, 0x0, 0x1);
        gbc.writeMem(0xd278, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8fc5, gbc.sp());
        EXPECT(0xd27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd278));
        EXPECT(0x9b, gbc.readMem(0xd279));
        // 16 00B4
        gbc.setState(0x3a5a, 0x4834, 0x5da0, 0x89e7, 0x63c5, 0xd735, 0x1, 0x1);
        gbc.writeMem(0x3a5a, { 0x16, 0x77 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4834, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00B5
        gbc.setState(0x41f3, 0xca21, 0xf6a0, 0x2185, 0xef1, 0xc2f4, 0x1, 0x0);
        gbc.writeMem(0x41f3, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x41f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00B6
        gbc.setState(0xa4c, 0xb58, 0x7980, 0xbbc7, 0x6d2e, 0x2465, 0x1, 0x1);
        gbc.writeMem(0xa4c, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00B7
        gbc.setState(0xd2d, 0x9b0e, 0x61b0, 0x744, 0xfd04, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0xd2d, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0xd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00B8
        gbc.setState(0x723e, 0x46a0, 0x8430, 0x3397, 0xd01d, 0x272d, 0x1, 0x0);
        gbc.writeMem(0x723e, { 0x16, 0x92 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x46a0, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00B9
        gbc.setState(0x790, 0x6161, 0x1700, 0x3b27, 0xccdc, 0x139c, 0x0, 0x0);
        gbc.writeMem(0x790, { 0x16, 0xa9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6161, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00BA
        gbc.setState(0xd177, 0xc793, 0x8230, 0x4409, 0x98f5, 0x3f06, 0x1, 0x0);
        gbc.writeMem(0xd177, { 0x16, 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0xd179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd177));
        EXPECT(0x55, gbc.readMem(0xd178));
        // 16 00BB
        gbc.setState(0x2b4a, 0x68d0, 0x3020, 0x7d7d, 0x9fd6, 0xd21a, 0x0, 0x0);
        gbc.writeMem(0x2b4a, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x68d0, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00BC
        gbc.setState(0xee66, 0x3af2, 0x3ac0, 0xb1e9, 0xe188, 0xb5f5, 0x1, 0x1);
        gbc.writeMem(0xee66, { 0x16, 0xfd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0xee68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xee66));
        EXPECT(0xfd, gbc.readMem(0xee67));
        // 16 00BE
        gbc.setState(0xef49, 0xde3e, 0x8e80, 0x2fa1, 0x7b0c, 0x5c8d, 0x0, 0x0);
        gbc.writeMem(0xef49, { 0x16, 0x5f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xef49));
        EXPECT(0x5f, gbc.readMem(0xef4a));
        // 16 00BF
        gbc.setState(0x5061, 0x7ef1, 0xca30, 0xf08, 0x605a, 0x2ccc, 0x1, 0x0);
        gbc.writeMem(0x5061, { 0x16, 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00C1
        gbc.setState(0x94e4, 0x1942, 0xe460, 0xf461, 0x758d, 0x1f96, 0x0, 0x0);
        gbc.writeMem(0x94e4, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1942, gbc.sp());
        EXPECT(0x94e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x94e4));
        EXPECT(0xa6, gbc.readMem(0x94e5));
        // 16 00C2
        gbc.setState(0x5b4b, 0x7cfb, 0x2ce0, 0xccea, 0x7de2, 0x7336, 0x0, 0x1);
        gbc.writeMem(0x5b4b, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7cfb, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00C3
        gbc.setState(0xbff8, 0x478c, 0x9b90, 0x4a3a, 0xa2b1, 0x2a54, 0x1, 0x0);
        gbc.writeMem(0xbff8, { 0x16, 0xef });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x478c, gbc.sp());
        EXPECT(0xbffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbff8));
        EXPECT(0xef, gbc.readMem(0xbff9));
        // 16 00C4
        gbc.setState(0x4fd3, 0x40f4, 0x2c70, 0x317b, 0x17c2, 0xff0c, 0x0, 0x0);
        gbc.writeMem(0x4fd3, { 0x16, 0x16 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x40f4, gbc.sp());
        EXPECT(0x4fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00C5
        gbc.setState(0xc780, 0x7d7c, 0x4550, 0xa530, 0x36f0, 0xf204, 0x1, 0x0);
        gbc.writeMem(0xc780, { 0x16, 0x26 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7d7c, gbc.sp());
        EXPECT(0xc782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc780));
        EXPECT(0x26, gbc.readMem(0xc781));
        // 16 00C6
        gbc.setState(0x1c8e, 0xaf15, 0xc010, 0x1997, 0x37a0, 0xbf76, 0x1, 0x0);
        gbc.writeMem(0x1c8e, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaf15, gbc.sp());
        EXPECT(0x1c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00C7
        gbc.setState(0x4847, 0x2392, 0xdf80, 0x7ca5, 0xbcd0, 0x88e6, 0x0, 0x1);
        gbc.writeMem(0x4847, { 0x16, 0x81 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0x4849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00C8
        gbc.setState(0x85bd, 0x76d5, 0xb6b0, 0xaf33, 0x831e, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x85bd, { 0x16, 0x24 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x76d5, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x85bd));
        EXPECT(0x24, gbc.readMem(0x85be));
        // 16 00C9
        gbc.setState(0xdd39, 0x2b6f, 0x8480, 0x5b77, 0x51e2, 0xba44, 0x1, 0x1);
        gbc.writeMem(0xdd39, { 0x16, 0x56 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdd39));
        EXPECT(0x56, gbc.readMem(0xdd3a));
        // 16 00CA
        gbc.setState(0xdac2, 0xfde0, 0x4e10, 0x5d12, 0x60ce, 0xc199, 0x0, 0x1);
        gbc.writeMem(0xdac2, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfde0, gbc.sp());
        EXPECT(0xdac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdac2));
        EXPECT(0x60, gbc.readMem(0xdac3));
        // 16 00CB
        gbc.setState(0xd30b, 0x7ffe, 0x3c70, 0x59c8, 0xf92d, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0xd30b, { 0x16, 0x14 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0xd30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd30b));
        EXPECT(0x14, gbc.readMem(0xd30c));
        // 16 00CC
        gbc.setState(0x3dbf, 0x3add, 0x5f0, 0xf0d9, 0x7633, 0x2f56, 0x1, 0x1);
        gbc.writeMem(0x3dbf, { 0x16, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3add, gbc.sp());
        EXPECT(0x3dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00CD
        gbc.setState(0x42e7, 0x55a8, 0x89d0, 0x6f50, 0x7c0, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0x42e7, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x55a8, gbc.sp());
        EXPECT(0x42e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00CE
        gbc.setState(0x734a, 0x16ce, 0x1b90, 0xa94a, 0xec5f, 0x7069, 0x1, 0x1);
        gbc.writeMem(0x734a, { 0x16, 0xee });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0x734c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00CF
        gbc.setState(0x2f4, 0x9c58, 0x4550, 0xeb6d, 0x81ec, 0x4296, 0x0, 0x0);
        gbc.writeMem(0x2f4, { 0x16, 0x77 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00D0
        gbc.setState(0xeeb9, 0xec5b, 0x3520, 0x3082, 0x7b2a, 0x8ab0, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeeb9));
        EXPECT(0xc4, gbc.readMem(0xeeba));
        // 16 00D1
        gbc.setState(0x8e99, 0xd869, 0xb190, 0x6b2b, 0x9aed, 0xbdf8, 0x0, 0x1);
        gbc.writeMem(0x8e99, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8e99));
        EXPECT(0xf9, gbc.readMem(0x8e9a));
        // 16 00D2
        gbc.setState(0x6159, 0x1817, 0xc2c0, 0xcc35, 0xefda, 0x4950, 0x1, 0x1);
        gbc.writeMem(0x6159, { 0x16, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1817, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00D3
        gbc.setState(0xc8e8, 0x994c, 0x4190, 0x340b, 0x63c4, 0xdbc9, 0x0, 0x1);
        gbc.writeMem(0xc8e8, { 0x16, 0xec });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x994c, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc8e8));
        EXPECT(0xec, gbc.readMem(0xc8e9));
        // 16 00D4
        gbc.setState(0x47eb, 0x9d11, 0x49e0, 0x25ce, 0x21cd, 0xb9fe, 0x0, 0x1);
        gbc.writeMem(0x47eb, { 0x16, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9d11, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00D5
        gbc.setState(0x9550, 0x47fd, 0x23d0, 0x7d1e, 0x30c3, 0x59be, 0x0, 0x1);
        gbc.writeMem(0x9550, { 0x16, 0xde });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0x9552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9550));
        EXPECT(0xde, gbc.readMem(0x9551));
        // 16 00D6
        gbc.setState(0xbd9a, 0xf578, 0xc520, 0xc80f, 0x8422, 0xa58c, 0x1, 0x0);
        gbc.writeMem(0xbd9a, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf578, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbd9a));
        EXPECT(0xa5, gbc.readMem(0xbd9b));
        // 16 00D7
        gbc.setState(0x1531, 0x5eda, 0x2d00, 0xb876, 0x206b, 0x44e9, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0x16, 0xba });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00D8
        gbc.setState(0x5f7c, 0x996f, 0x9560, 0xd054, 0x4c44, 0x6de1, 0x1, 0x0);
        gbc.writeMem(0x5f7c, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00D9
        gbc.setState(0x9d70, 0xaaf7, 0x3580, 0xc404, 0x43e1, 0xeb04, 0x0, 0x0);
        gbc.writeMem(0x9d70, { 0x16, 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaaf7, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9d70));
        EXPECT(0x3c, gbc.readMem(0x9d71));
        // 16 00DA
        gbc.setState(0x1804, 0x590, 0xe1d0, 0x3098, 0x93da, 0xf18f, 0x1, 0x0);
        gbc.writeMem(0x1804, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x590, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00DB
        gbc.setState(0x80e0, 0x5702, 0xb210, 0xb1b2, 0x9d8, 0xbec5, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0x16, 0x30 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5702, gbc.sp());
        EXPECT(0x80e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x80e0));
        EXPECT(0x30, gbc.readMem(0x80e1));
        // 16 00DC
        gbc.setState(0x9579, 0x290d, 0x7460, 0x890a, 0x6028, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0x9579, { 0x16, 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0x957b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9579));
        EXPECT(0xd, gbc.readMem(0x957a));
        // 16 00DD
        gbc.setState(0xebfe, 0x387c, 0xe630, 0xf0aa, 0x892a, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0xebfe, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x387c, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xebfe));
        EXPECT(0x6e, gbc.readMem(0xebff));
        // 16 00DE
        gbc.setState(0x930b, 0x23a7, 0xc4e0, 0x9a4f, 0x3411, 0xd6da, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x23a7, gbc.sp());
        EXPECT(0x930d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x930b));
        EXPECT(0xb0, gbc.readMem(0x930c));
        // 16 00DF
        gbc.setState(0x666f, 0x2685, 0x3f70, 0xc282, 0xb586, 0x539f, 0x1, 0x1);
        gbc.writeMem(0x666f, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2685, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00E0
        gbc.setState(0xe307, 0x83ee, 0x4590, 0x5ac3, 0x6e82, 0x8827, 0x0, 0x1);
        gbc.writeMem(0xe307, { 0x16, 0x8c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x83ee, gbc.sp());
        EXPECT(0xe309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe307));
        EXPECT(0x8c, gbc.readMem(0xe308));
        // 16 00E1
        gbc.setState(0xdcc0, 0x6f6a, 0x8c60, 0x8b73, 0xf76e, 0xee7d, 0x1, 0x1);
        gbc.writeMem(0xdcc0, { 0x16, 0x18 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0xdcc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdcc0));
        EXPECT(0x18, gbc.readMem(0xdcc1));
        // 16 00E2
        gbc.setState(0xc6a, 0x3079, 0xb290, 0x6036, 0xdf44, 0x4bae, 0x0, 0x0);
        gbc.writeMem(0xc6a, { 0x16, 0xaa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3079, gbc.sp());
        EXPECT(0xc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00E3
        gbc.setState(0x34df, 0x836a, 0x2ca0, 0xe8b1, 0x86a2, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x34df, { 0x16, 0x88 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x836a, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00E4
        gbc.setState(0x72b7, 0x5182, 0xd9b0, 0xbd5d, 0x5bc5, 0xd073, 0x0, 0x1);
        gbc.writeMem(0x72b7, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00E7
        gbc.setState(0xd36f, 0x7979, 0x380, 0x2028, 0xd2b4, 0xea55, 0x0, 0x0);
        gbc.writeMem(0xd36f, { 0x16, 0x55 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0xd371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd36f));
        EXPECT(0x55, gbc.readMem(0xd370));
        // 16 00E9
        gbc.setState(0x433b, 0xdde1, 0xe800, 0x2876, 0xd572, 0x26a9, 0x0, 0x1);
        gbc.writeMem(0x433b, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdde1, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00EA
        gbc.setState(0xc533, 0x6fa8, 0xddb0, 0xb1a4, 0xf6e3, 0x836b, 0x0, 0x0);
        gbc.writeMem(0xc533, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6fa8, gbc.sp());
        EXPECT(0xc535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc533));
        EXPECT(0xc8, gbc.readMem(0xc534));
        // 16 00EB
        gbc.setState(0xaed9, 0xd98e, 0xf20, 0x771, 0x1e59, 0xf4b6, 0x1, 0x0);
        gbc.writeMem(0xaed9, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0xaedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaed9));
        EXPECT(0xa4, gbc.readMem(0xaeda));
        // 16 00EC
        gbc.setState(0xd5dd, 0xad4c, 0xf8d0, 0x21fc, 0x13c1, 0xead2, 0x0, 0x0);
        gbc.writeMem(0xd5dd, { 0x16, 0xde });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0xd5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd5dd));
        EXPECT(0xde, gbc.readMem(0xd5de));
        // 16 00ED
        gbc.setState(0x853b, 0x72c3, 0x2560, 0x2d89, 0xacef, 0xeee3, 0x1, 0x1);
        gbc.writeMem(0x853b, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0x853d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x853b));
        EXPECT(0x1d, gbc.readMem(0x853c));
        // 16 00EE
        gbc.setState(0x4f54, 0x8958, 0x1330, 0x7c61, 0x1f2, 0x692f, 0x0, 0x0);
        gbc.writeMem(0x4f54, { 0x16, 0xcc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8958, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00EF
        gbc.setState(0x7a17, 0xc9e4, 0x500, 0xf44c, 0xf31d, 0xdf4e, 0x1, 0x0);
        gbc.writeMem(0x7a17, { 0x16, 0x6d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc9e4, gbc.sp());
        EXPECT(0x7a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00F0
        gbc.setState(0x8bcf, 0x1915, 0x1fc0, 0xc226, 0xe2a8, 0x4cd2, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x8bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8bcf));
        EXPECT(0xf9, gbc.readMem(0x8bd0));
        // 16 00F1
        gbc.setState(0x49c6, 0x8fe5, 0x9b00, 0x93f6, 0x5d85, 0xe5c, 0x0, 0x1);
        gbc.writeMem(0x49c6, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fe5, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00F2
        gbc.setState(0x16c6, 0x5920, 0x3cc0, 0x42c7, 0xe814, 0xd83f, 0x0, 0x0);
        gbc.writeMem(0x16c6, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0x16c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00F3
        gbc.setState(0xb567, 0xc7ad, 0x9280, 0x5a3e, 0x7593, 0xeca9, 0x1, 0x1);
        gbc.writeMem(0xb567, { 0x16, 0xfc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0xb569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb567));
        EXPECT(0xfc, gbc.readMem(0xb568));
        // 16 00F4
        gbc.setState(0xbe3, 0x95aa, 0x8f80, 0xc05a, 0x470a, 0x7145, 0x0, 0x1);
        gbc.writeMem(0xbe3, { 0x16, 0xfc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0xbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00F5
        gbc.setState(0x53d0, 0xafd3, 0xe7b0, 0x4d9f, 0xd2cd, 0xd8d5, 0x1, 0x0);
        gbc.writeMem(0x53d0, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xafd3, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00F6
        gbc.setState(0x15b9, 0x665a, 0xb550, 0x2372, 0xc5ff, 0x95cc, 0x0, 0x0);
        gbc.writeMem(0x15b9, { 0x16, 0x18 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x665a, gbc.sp());
        EXPECT(0x15bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00F8
        gbc.setState(0x87e3, 0xb4, 0x9940, 0x6a67, 0x4803, 0x9530, 0x1, 0x0);
        gbc.writeMem(0x87e3, { 0x16, 0x6f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb4, gbc.sp());
        EXPECT(0x87e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x87e3));
        EXPECT(0x6f, gbc.readMem(0x87e4));
        // 16 00F9
        gbc.setState(0x55bd, 0xaed7, 0xf4c0, 0xdcb3, 0xeab6, 0xa31f, 0x1, 0x1);
        gbc.writeMem(0x55bd, { 0x16, 0x11 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00FA
        gbc.setState(0xcc04, 0xe153, 0xfe20, 0xbf9e, 0xae0b, 0x32cc, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0x16, 0x62 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe153, gbc.sp());
        EXPECT(0xcc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcc04));
        EXPECT(0x62, gbc.readMem(0xcc05));
        // 16 00FB
        gbc.setState(0xdee2, 0x3876, 0x4080, 0xb027, 0xae26, 0xe00f, 0x0, 0x0);
        gbc.writeMem(0xdee2, { 0x16, 0x98 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdee2));
        EXPECT(0x98, gbc.readMem(0xdee3));
        // 16 00FC
        gbc.setState(0xd2b6, 0xef62, 0xba40, 0xa5b5, 0xcfca, 0x817d, 0x1, 0x1);
        gbc.writeMem(0xd2b6, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0xd2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd2b6));
        EXPECT(0x60, gbc.readMem(0xd2b7));
        // 16 00FD
        gbc.setState(0xfd0, 0xeb7d, 0xfe10, 0xb49a, 0xfe75, 0x4b79, 0x1, 0x0);
        gbc.writeMem(0xfd0, { 0x16, 0x4c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0xfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 00FE
        gbc.setState(0x7cd4, 0xd234, 0xcf20, 0x845e, 0x9b29, 0x6876, 0x1, 0x0);
        gbc.writeMem(0x7cd4, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0x7cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 00FF
        gbc.setState(0x75c1, 0xde57, 0xab20, 0xb514, 0x7c54, 0x9e7f, 0x1, 0x0);
        gbc.writeMem(0x75c1, { 0x16, 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde57, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0100
        gbc.setState(0x986d, 0x4ec4, 0xee30, 0x4444, 0xbfde, 0xf8b5, 0x1, 0x0);
        gbc.writeMem(0x986d, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4ec4, gbc.sp());
        EXPECT(0x986f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x986d));
        EXPECT(0xb7, gbc.readMem(0x986e));
        // 16 0101
        gbc.setState(0xab19, 0xe087, 0x9410, 0xdb9b, 0x6203, 0x6ae6, 0x0, 0x0);
        gbc.writeMem(0xab19, { 0x16, 0x68 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe087, gbc.sp());
        EXPECT(0xab1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xab19));
        EXPECT(0x68, gbc.readMem(0xab1a));
        // 16 0102
        gbc.setState(0x4a14, 0x1ff2, 0x4460, 0xcbe, 0xa3ca, 0x324, 0x1, 0x0);
        gbc.writeMem(0x4a14, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1ff2, gbc.sp());
        EXPECT(0x4a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0103
        gbc.setState(0x185c, 0x519e, 0x65a0, 0xc274, 0x8462, 0xb8ba, 0x1, 0x1);
        gbc.writeMem(0x185c, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x519e, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0104
        gbc.setState(0xca6, 0xd43e, 0xf8c0, 0x7743, 0x19f2, 0x4273, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0x16, 0x6a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0105
        gbc.setState(0xa5f9, 0x59fa, 0x18e0, 0x4b0f, 0x3c93, 0x5923, 0x0, 0x0);
        gbc.writeMem(0xa5f9, { 0x16, 0xba });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x59fa, gbc.sp());
        EXPECT(0xa5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa5f9));
        EXPECT(0xba, gbc.readMem(0xa5fa));
        // 16 0106
        gbc.setState(0xb259, 0x6b32, 0x5320, 0xe708, 0x4d0, 0x2240, 0x0, 0x0);
        gbc.writeMem(0xb259, { 0x16, 0xda });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6b32, gbc.sp());
        EXPECT(0xb25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb259));
        EXPECT(0xda, gbc.readMem(0xb25a));
        // 16 0107
        gbc.setState(0xd26c, 0x7657, 0x5cd0, 0x6b8f, 0x9123, 0x31cc, 0x1, 0x1);
        gbc.writeMem(0xd26c, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7657, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd26c));
        EXPECT(0xe7, gbc.readMem(0xd26d));
        // 16 0108
        gbc.setState(0xe9f7, 0x5910, 0x990, 0x9834, 0xbe5d, 0xda8a, 0x1, 0x0);
        gbc.writeMem(0xe9f7, { 0x16, 0x56 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe9f7));
        EXPECT(0x56, gbc.readMem(0xe9f8));
        // 16 0109
        gbc.setState(0x53be, 0x3d97, 0xbee0, 0xd01e, 0x2f64, 0xe56e, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3d97, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 010A
        gbc.setState(0x3f7e, 0xf227, 0x9b60, 0xa482, 0xc359, 0x33f9, 0x0, 0x1);
        gbc.writeMem(0x3f7e, { 0x16, 0x63 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf227, gbc.sp());
        EXPECT(0x3f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 010B
        gbc.setState(0xa259, 0x2476, 0xff50, 0x3493, 0x682f, 0xf4, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0x16, 0x40 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2476, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa259));
        EXPECT(0x40, gbc.readMem(0xa25a));
        // 16 010C
        gbc.setState(0xc12, 0x3e90, 0x4de0, 0x2827, 0x169, 0xea7, 0x0, 0x1);
        gbc.writeMem(0xc12, { 0x16, 0xef });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3e90, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 010D
        gbc.setState(0x26e7, 0x5576, 0xbc70, 0xde78, 0x9df4, 0x47, 0x0, 0x1);
        gbc.writeMem(0x26e7, { 0x16, 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5576, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 010E
        gbc.setState(0x8f77, 0xc3bb, 0xb220, 0xaf00, 0x79a8, 0x98fd, 0x0, 0x0);
        gbc.writeMem(0x8f77, { 0x16, 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f77));
        EXPECT(0x13, gbc.readMem(0x8f78));
        // 16 010F
        gbc.setState(0xcab0, 0xed92, 0x3d10, 0x40b2, 0x713a, 0xba00, 0x0, 0x0);
        gbc.writeMem(0xcab0, { 0x16, 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcab0));
        EXPECT(0x8f, gbc.readMem(0xcab1));
        // 16 0110
        gbc.setState(0xb8d9, 0x9991, 0x6490, 0x40df, 0x2199, 0xd5d6, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0xb8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb8d9));
        EXPECT(0xb9, gbc.readMem(0xb8da));
        // 16 0111
        gbc.setState(0x335d, 0x8289, 0x90b0, 0x1fae, 0xac47, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0x335d, { 0x16, 0x3d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x335f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0112
        gbc.setState(0x3236, 0x6f07, 0x6340, 0xfc08, 0xc5b8, 0x757, 0x0, 0x1);
        gbc.writeMem(0x3236, { 0x16, 0x36 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6f07, gbc.sp());
        EXPECT(0x3238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0114
        gbc.setState(0x7f9f, 0x801e, 0x780, 0x4eb6, 0xe03d, 0x1ead, 0x0, 0x0);
        gbc.writeMem(0x7f9f, { 0x16, 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0x7fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0115
        gbc.setState(0x932b, 0xdedc, 0x1710, 0x1126, 0xaed5, 0x833e, 0x1, 0x1);
        gbc.writeMem(0x932b, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdedc, gbc.sp());
        EXPECT(0x932d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x932b));
        EXPECT(0xf6, gbc.readMem(0x932c));
        // 16 0118
        gbc.setState(0xa0fb, 0xbd1d, 0x6290, 0xb034, 0xf6f3, 0x21c7, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0x16, 0x45 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0xa0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa0fb));
        EXPECT(0x45, gbc.readMem(0xa0fc));
        // 16 0119
        gbc.setState(0x6a9d, 0xfd6, 0xcd60, 0xb21e, 0xd8c, 0x7e54, 0x0, 0x1);
        gbc.writeMem(0x6a9d, { 0x16, 0xf });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x6a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 011A
        gbc.setState(0x1bb6, 0xf64f, 0x8270, 0x4fae, 0x2554, 0x2db, 0x1, 0x1);
        gbc.writeMem(0x1bb6, { 0x16, 0x3d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf64f, gbc.sp());
        EXPECT(0x1bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 011B
        gbc.setState(0x48ce, 0x5cb8, 0xc290, 0xc6d, 0x8950, 0xaead, 0x1, 0x0);
        gbc.writeMem(0x48ce, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5cb8, gbc.sp());
        EXPECT(0x48d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 011C
        gbc.setState(0x151f, 0xd7d1, 0xd4a0, 0x9370, 0xe460, 0x852, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0x16, 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd7d1, gbc.sp());
        EXPECT(0x1521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 011D
        gbc.setState(0xcdc9, 0xa1c7, 0x85c0, 0x9997, 0xa622, 0x1cb, 0x1, 0x0);
        gbc.writeMem(0xcdc9, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa1c7, gbc.sp());
        EXPECT(0xcdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcdc9));
        EXPECT(0x9b, gbc.readMem(0xcdca));
        // 16 011E
        gbc.setState(0x8ea6, 0x9b43, 0xd950, 0x9615, 0x8244, 0xbf5, 0x0, 0x1);
        gbc.writeMem(0x8ea6, { 0x16, 0xfb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9b43, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8ea6));
        EXPECT(0xfb, gbc.readMem(0x8ea7));
        // 16 011F
        gbc.setState(0x7d90, 0x3bed, 0xc130, 0xa98f, 0xcc39, 0x5ac1, 0x0, 0x1);
        gbc.writeMem(0x7d90, { 0x16, 0x9a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3bed, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0120
        gbc.setState(0xd787, 0xba5, 0x4d80, 0x8799, 0xf2ac, 0xc9c1, 0x1, 0x0);
        gbc.writeMem(0xd787, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xba5, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd787));
        EXPECT(0x5b, gbc.readMem(0xd788));
        // 16 0121
        gbc.setState(0x6462, 0xd94f, 0x7990, 0xc15e, 0x3c88, 0x78b6, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd94f, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0122
        gbc.setState(0x6742, 0xa56f, 0x9550, 0xeae, 0xd9e8, 0xc0e6, 0x0, 0x1);
        gbc.writeMem(0x6742, { 0x16, 0x8a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0x6744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0123
        gbc.setState(0xa5f, 0x9394, 0x16e0, 0xafeb, 0x6fc3, 0x200c, 0x0, 0x1);
        gbc.writeMem(0xa5f, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9394, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0124
        gbc.setState(0x3d7e, 0xa542, 0xbf90, 0x9af5, 0xbb0f, 0x965, 0x0, 0x0);
        gbc.writeMem(0x3d7e, { 0x16, 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0x3d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0125
        gbc.setState(0x6d15, 0x6dad, 0x2cc0, 0xcc51, 0xc7fd, 0xbef, 0x1, 0x0);
        gbc.writeMem(0x6d15, { 0x16, 0x9a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0126
        gbc.setState(0xbaea, 0x44b1, 0xa660, 0xf768, 0x6ab8, 0x2bc2, 0x0, 0x1);
        gbc.writeMem(0xbaea, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x44b1, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbaea));
        EXPECT(0xf7, gbc.readMem(0xbaeb));
        // 16 0129
        gbc.setState(0xcd50, 0x2d74, 0x9f20, 0xfaa3, 0x894a, 0x7bbf, 0x1, 0x1);
        gbc.writeMem(0xcd50, { 0x16, 0xf });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2d74, gbc.sp());
        EXPECT(0xcd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcd50));
        EXPECT(0xf, gbc.readMem(0xcd51));
        // 16 012A
        gbc.setState(0xc93e, 0xe32, 0xc0a0, 0x1de6, 0x1bf9, 0x543d, 0x0, 0x1);
        gbc.writeMem(0xc93e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe32, gbc.sp());
        EXPECT(0xc940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc93e));
        EXPECT(0x91, gbc.readMem(0xc93f));
        // 16 012B
        gbc.setState(0x7305, 0x3c90, 0xacd0, 0x6159, 0xf9df, 0xb43e, 0x1, 0x1);
        gbc.writeMem(0x7305, { 0x16, 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0x7307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 012C
        gbc.setState(0xb028, 0x28e2, 0xd80, 0xc3f6, 0x78b4, 0xdd46, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0x16, 0x73 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb028));
        EXPECT(0x73, gbc.readMem(0xb029));
        // 16 012D
        gbc.setState(0x34f2, 0x3842, 0xdc40, 0x4cca, 0xf62b, 0x6376, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3842, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 012E
        gbc.setState(0x459b, 0xc444, 0xd910, 0x8b2d, 0x25d1, 0x24c7, 0x0, 0x0);
        gbc.writeMem(0x459b, { 0x16, 0x90 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc444, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 012F
        gbc.setState(0x8a8a, 0xa58, 0xd070, 0xd1e0, 0xefe8, 0x5096, 0x0, 0x0);
        gbc.writeMem(0x8a8a, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa58, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a8a));
        EXPECT(0x1e, gbc.readMem(0x8a8b));
        // 16 0130
        gbc.setState(0x36f3, 0x696, 0x9fa0, 0x8040, 0xd505, 0x4694, 0x1, 0x0);
        gbc.writeMem(0x36f3, { 0x16, 0x6d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0132
        gbc.setState(0x4e77, 0x2228, 0x3c20, 0x74be, 0x230f, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x4e77, { 0x16, 0x48 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2228, gbc.sp());
        EXPECT(0x4e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0133
        gbc.setState(0xbaa5, 0x3442, 0x7f80, 0x81ef, 0xd1b1, 0x5873, 0x1, 0x1);
        gbc.writeMem(0xbaa5, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3442, gbc.sp());
        EXPECT(0xbaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbaa5));
        EXPECT(0xb6, gbc.readMem(0xbaa6));
        // 16 0135
        gbc.setState(0x496d, 0x8095, 0x6300, 0xa8e1, 0x44ae, 0xb4aa, 0x1, 0x1);
        gbc.writeMem(0x496d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0x496f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0136
        gbc.setState(0x10d7, 0xc16, 0x5570, 0x5f82, 0xf90f, 0x10d4, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0x16, 0x8a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0x10d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0138
        gbc.setState(0xc973, 0x3534, 0xc30, 0x9729, 0xbd64, 0x2228, 0x1, 0x0);
        gbc.writeMem(0xc973, { 0x16, 0xee });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3534, gbc.sp());
        EXPECT(0xc975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc973));
        EXPECT(0xee, gbc.readMem(0xc974));
        // 16 0139
        gbc.setState(0xbaa1, 0x2b68, 0xd100, 0x635b, 0xa5a8, 0xbdd1, 0x0, 0x1);
        gbc.writeMem(0xbaa1, { 0x16, 0x43 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2b68, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbaa1));
        EXPECT(0x43, gbc.readMem(0xbaa2));
        // 16 013A
        gbc.setState(0x8a82, 0x4565, 0xdcf0, 0x37b2, 0x2190, 0xf506, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x16, 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a82));
        EXPECT(0x61, gbc.readMem(0x8a83));
        // 16 013B
        gbc.setState(0xb9b5, 0xf4d1, 0x30c0, 0x7ec2, 0xe5b4, 0x152d, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0x16, 0x62 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0xb9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb9b5));
        EXPECT(0x62, gbc.readMem(0xb9b6));
        // 16 013C
        gbc.setState(0x3e10, 0x8e9c, 0xcd10, 0x3bb3, 0x1040, 0x71e2, 0x0, 0x0);
        gbc.writeMem(0x3e10, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8e9c, gbc.sp());
        EXPECT(0x3e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 013D
        gbc.setState(0x697, 0x981b, 0xedc0, 0x7330, 0x9699, 0x8993, 0x0, 0x1);
        gbc.writeMem(0x697, { 0x16, 0x11 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 013E
        gbc.setState(0x44b2, 0x14fc, 0x3410, 0xf9a6, 0xf175, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0x44b2, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x14fc, gbc.sp());
        EXPECT(0x44b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 013F
        gbc.setState(0x1b51, 0x96bd, 0xfff0, 0x65dd, 0x1274, 0x8e56, 0x1, 0x0);
        gbc.writeMem(0x1b51, { 0x16, 0x2e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0x1b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0140
        gbc.setState(0x6080, 0xe827, 0x3a90, 0x24ac, 0x2405, 0x212e, 0x0, 0x0);
        gbc.writeMem(0x6080, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe827, gbc.sp());
        EXPECT(0x6082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0141
        gbc.setState(0x49bc, 0xb034, 0xab80, 0xb881, 0x49bb, 0x3ee2, 0x0, 0x1);
        gbc.writeMem(0x49bc, { 0x16, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0142
        gbc.setState(0x7967, 0x4f0f, 0xd450, 0x723, 0xc66, 0xa468, 0x0, 0x1);
        gbc.writeMem(0x7967, { 0x16, 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4f0f, gbc.sp());
        EXPECT(0x7969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0143
        gbc.setState(0xe379, 0x1178, 0xb160, 0x771e, 0xb165, 0xcb26, 0x0, 0x1);
        gbc.writeMem(0xe379, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe379));
        EXPECT(0xcb, gbc.readMem(0xe37a));
        // 16 0144
        gbc.setState(0x925b, 0x3740, 0x830, 0xbe6c, 0xdaf4, 0x7637, 0x0, 0x1);
        gbc.writeMem(0x925b, { 0x16, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x925b));
        EXPECT(0x0, gbc.readMem(0x925c));
        // 16 0145
        gbc.setState(0xb08c, 0x8f4, 0x5010, 0x1591, 0x8300, 0xacdc, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0x16, 0xab });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8f4, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb08c));
        EXPECT(0xab, gbc.readMem(0xb08d));
        // 16 0146
        gbc.setState(0x2982, 0x319e, 0x6880, 0x1f4a, 0x8250, 0x837d, 0x0, 0x1);
        gbc.writeMem(0x2982, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x319e, gbc.sp());
        EXPECT(0x2984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0147
        gbc.setState(0x74ea, 0xfba0, 0x120, 0xf283, 0xd4c0, 0xb8e2, 0x1, 0x1);
        gbc.writeMem(0x74ea, { 0x16, 0x7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfba0, gbc.sp());
        EXPECT(0x74ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0148
        gbc.setState(0x7d19, 0x8147, 0x8130, 0xecaf, 0xfd86, 0x4931, 0x1, 0x0);
        gbc.writeMem(0x7d19, { 0x16, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0x7d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0149
        gbc.setState(0x252e, 0xab61, 0x8d20, 0x4512, 0x98be, 0x79f5, 0x1, 0x1);
        gbc.writeMem(0x252e, { 0x16, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0x2530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 014A
        gbc.setState(0x65d6, 0x4bea, 0x8a90, 0x2ad6, 0xc0e0, 0x9444, 0x1, 0x1);
        gbc.writeMem(0x65d6, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 014B
        gbc.setState(0x6fb9, 0x2d03, 0x4700, 0x7968, 0x8757, 0xa356, 0x0, 0x0);
        gbc.writeMem(0x6fb9, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x6fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 014C
        gbc.setState(0xd992, 0xdae1, 0x8660, 0xdc0e, 0xc145, 0x50b2, 0x0, 0x0);
        gbc.writeMem(0xd992, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdae1, gbc.sp());
        EXPECT(0xd994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd992));
        EXPECT(0xf9, gbc.readMem(0xd993));
        // 16 014D
        gbc.setState(0xd876, 0x3879, 0xd1c0, 0xd3a5, 0x1525, 0x9509, 0x1, 0x1);
        gbc.writeMem(0xd876, { 0x16, 0xf8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd876));
        EXPECT(0xf8, gbc.readMem(0xd877));
        // 16 014F
        gbc.setState(0xab1b, 0x82da, 0x7590, 0xa1a8, 0xe3e, 0x4245, 0x0, 0x1);
        gbc.writeMem(0xab1b, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0xab1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xab1b));
        EXPECT(0xd0, gbc.readMem(0xab1c));
        // 16 0150
        gbc.setState(0x81f, 0x5580, 0x6c00, 0x3219, 0xa41f, 0x23d8, 0x0, 0x1);
        gbc.writeMem(0x81f, { 0x16, 0x9e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5580, gbc.sp());
        EXPECT(0x821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0151
        gbc.setState(0xa2af, 0xe3e8, 0x82d0, 0x9274, 0xdda7, 0x872b, 0x1, 0x0);
        gbc.writeMem(0xa2af, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe3e8, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa2af));
        EXPECT(0xb1, gbc.readMem(0xa2b0));
        // 16 0152
        gbc.setState(0xe5f3, 0x5a74, 0xe3f0, 0xfb86, 0xe004, 0x1582, 0x0, 0x0);
        gbc.writeMem(0xe5f3, { 0x16, 0x70 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0xe5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe5f3));
        EXPECT(0x70, gbc.readMem(0xe5f4));
        // 16 0153
        gbc.setState(0xbe55, 0x8d13, 0xcd10, 0xfdb7, 0x53b1, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0xbe55, { 0x16, 0x71 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8d13, gbc.sp());
        EXPECT(0xbe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbe55));
        EXPECT(0x71, gbc.readMem(0xbe56));
        // 16 0154
        gbc.setState(0x7e8a, 0x3772, 0xe170, 0x32ed, 0xee7, 0xe2e9, 0x0, 0x1);
        gbc.writeMem(0x7e8a, { 0x16, 0xf8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3772, gbc.sp());
        EXPECT(0x7e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0155
        gbc.setState(0x8b64, 0x80c8, 0x53b0, 0x4779, 0x2b38, 0xa1d, 0x0, 0x1);
        gbc.writeMem(0x8b64, { 0x16, 0xd4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0x8b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8b64));
        EXPECT(0xd4, gbc.readMem(0x8b65));
        // 16 0156
        gbc.setState(0x8011, 0x2281, 0x8c0, 0xe7ca, 0x279e, 0x7ea3, 0x1, 0x1);
        gbc.writeMem(0x8011, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2281, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8011));
        EXPECT(0x38, gbc.readMem(0x8012));
        // 16 0157
        gbc.setState(0x2e84, 0x4015, 0xaf80, 0x4488, 0x7e04, 0x962, 0x1, 0x1);
        gbc.writeMem(0x2e84, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4015, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0158
        gbc.setState(0x53b5, 0x1634, 0x5250, 0xbb4b, 0x4619, 0x4cf6, 0x0, 0x1);
        gbc.writeMem(0x53b5, { 0x16, 0xa9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x53b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0159
        gbc.setState(0xaa66, 0xd7f8, 0x5b50, 0xc7c2, 0xcd1d, 0x982f, 0x0, 0x0);
        gbc.writeMem(0xaa66, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd7f8, gbc.sp());
        EXPECT(0xaa68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaa66));
        EXPECT(0xa8, gbc.readMem(0xaa67));
        // 16 015A
        gbc.setState(0xe98f, 0xacf9, 0x2390, 0x1296, 0x4e23, 0x8aab, 0x1, 0x0);
        gbc.writeMem(0xe98f, { 0x16, 0xdc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xacf9, gbc.sp());
        EXPECT(0xe991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe98f));
        EXPECT(0xdc, gbc.readMem(0xe990));
        // 16 015B
        gbc.setState(0x7be0, 0xdb03, 0xcb30, 0x3049, 0x5d3f, 0x353a, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0x16, 0xef });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 015C
        gbc.setState(0xb1e2, 0x5493, 0x9070, 0xb314, 0x148a, 0xb7c8, 0x0, 0x1);
        gbc.writeMem(0xb1e2, { 0x16, 0x8b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5493, gbc.sp());
        EXPECT(0xb1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb1e2));
        EXPECT(0x8b, gbc.readMem(0xb1e3));
        // 16 015D
        gbc.setState(0x1623, 0x4034, 0x28a0, 0xcd3e, 0x2456, 0x40cf, 0x1, 0x1);
        gbc.writeMem(0x1623, { 0x16, 0x4c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 015E
        gbc.setState(0x17c1, 0x56b5, 0x9ff0, 0xb5ae, 0xb06d, 0xf3c8, 0x0, 0x1);
        gbc.writeMem(0x17c1, { 0x16, 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0x17c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 015F
        gbc.setState(0x92d7, 0x18ac, 0x2f90, 0x2408, 0x3c96, 0x6b62, 0x0, 0x1);
        gbc.writeMem(0x92d7, { 0x16, 0x4e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x18ac, gbc.sp());
        EXPECT(0x92d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x92d7));
        EXPECT(0x4e, gbc.readMem(0x92d8));
        // 16 0160
        gbc.setState(0xcc0c, 0x6120, 0x6350, 0x5be2, 0x4759, 0x13c, 0x1, 0x0);
        gbc.writeMem(0xcc0c, { 0x16, 0x29 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6120, gbc.sp());
        EXPECT(0xcc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcc0c));
        EXPECT(0x29, gbc.readMem(0xcc0d));
        // 16 0161
        gbc.setState(0xab8c, 0x54ec, 0x9e50, 0x624, 0x5673, 0x519b, 0x0, 0x0);
        gbc.writeMem(0xab8c, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x54ec, gbc.sp());
        EXPECT(0xab8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xab8c));
        EXPECT(0xe9, gbc.readMem(0xab8d));
        // 16 0162
        gbc.setState(0xe5ee, 0x2db3, 0x330, 0x359e, 0xada2, 0x5ffd, 0x0, 0x1);
        gbc.writeMem(0xe5ee, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2db3, gbc.sp());
        EXPECT(0xe5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe5ee));
        EXPECT(0xdb, gbc.readMem(0xe5ef));
        // 16 0163
        gbc.setState(0x5689, 0x31fd, 0xf6a0, 0xbcb3, 0x5d53, 0xfdea, 0x0, 0x1);
        gbc.writeMem(0x5689, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0165
        gbc.setState(0xe128, 0x2711, 0x9710, 0x5741, 0x90c5, 0x1d15, 0x0, 0x1);
        gbc.writeMem(0xe128, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0xe12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe128));
        EXPECT(0x5e, gbc.readMem(0xe129));
        // 16 0167
        gbc.setState(0xbfa1, 0x8f4f, 0x6230, 0xbd9f, 0x69aa, 0x60e3, 0x1, 0x0);
        gbc.writeMem(0xbfa1, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8f4f, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbfa1));
        EXPECT(0xd2, gbc.readMem(0xbfa2));
        // 16 0169
        gbc.setState(0x2b9d, 0x83f5, 0xdab0, 0x58ef, 0xc94f, 0xcea5, 0x1, 0x1);
        gbc.writeMem(0x2b9d, { 0x16, 0x7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 016A
        gbc.setState(0xbc56, 0x743a, 0x55a0, 0x286c, 0x8843, 0x783f, 0x0, 0x0);
        gbc.writeMem(0xbc56, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x743a, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbc56));
        EXPECT(0x1e, gbc.readMem(0xbc57));
        // 16 016B
        gbc.setState(0x8a75, 0x74b9, 0x2410, 0x2ef4, 0x1311, 0xb131, 0x1, 0x0);
        gbc.writeMem(0x8a75, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x74b9, gbc.sp());
        EXPECT(0x8a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a75));
        EXPECT(0xc2, gbc.readMem(0x8a76));
        // 16 016C
        gbc.setState(0xe08a, 0xcf97, 0x79a0, 0x3f39, 0x9a85, 0xbc70, 0x0, 0x1);
        gbc.writeMem(0xe08a, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcf97, gbc.sp());
        EXPECT(0xe08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe08a));
        EXPECT(0xd6, gbc.readMem(0xe08b));
        // 16 016D
        gbc.setState(0x6fcf, 0x89a8, 0xbd90, 0xb641, 0xd436, 0x737d, 0x0, 0x1);
        gbc.writeMem(0x6fcf, { 0x16, 0x18 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x89a8, gbc.sp());
        EXPECT(0x6fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 016E
        gbc.setState(0x87f4, 0xa808, 0xe000, 0xc554, 0x35b6, 0x53d2, 0x0, 0x1);
        gbc.writeMem(0x87f4, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x87f4));
        EXPECT(0x38, gbc.readMem(0x87f5));
        // 16 016F
        gbc.setState(0x1226, 0x828a, 0x1210, 0x38a9, 0x437d, 0x3112, 0x0, 0x1);
        gbc.writeMem(0x1226, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x1228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0170
        gbc.setState(0xd6f5, 0x8746, 0x2d80, 0x886c, 0xb618, 0x3964, 0x0, 0x1);
        gbc.writeMem(0xd6f5, { 0x16, 0xeb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0xd6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd6f5));
        EXPECT(0xeb, gbc.readMem(0xd6f6));
        // 16 0171
        gbc.setState(0xc2f, 0xcd89, 0xa3d0, 0x6da, 0x9b36, 0x8af0, 0x1, 0x1);
        gbc.writeMem(0xc2f, { 0x16, 0x3e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcd89, gbc.sp());
        EXPECT(0xc31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0172
        gbc.setState(0xc44a, 0x442f, 0x4f90, 0xd87a, 0x5699, 0xa2ab, 0x0, 0x1);
        gbc.writeMem(0xc44a, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x442f, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc44a));
        EXPECT(0x4f, gbc.readMem(0xc44b));
        // 16 0173
        gbc.setState(0x53fd, 0xd46c, 0x8df0, 0x8d31, 0x5fc5, 0xe97f, 0x0, 0x0);
        gbc.writeMem(0x53fd, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd46c, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0174
        gbc.setState(0x8ef0, 0xf8af, 0x91d0, 0x7535, 0xd05d, 0xdddc, 0x0, 0x1);
        gbc.writeMem(0x8ef0, { 0x16, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8ef0));
        EXPECT(0x2c, gbc.readMem(0x8ef1));
        // 16 0175
        gbc.setState(0xe2d1, 0x8c86, 0x81b0, 0x9362, 0x72f1, 0x973b, 0x1, 0x0);
        gbc.writeMem(0xe2d1, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe2d1));
        EXPECT(0xb4, gbc.readMem(0xe2d2));
        // 16 0177
        gbc.setState(0xeabe, 0xe751, 0x8b0, 0x24e8, 0x2901, 0xa6da, 0x1, 0x0);
        gbc.writeMem(0xeabe, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe751, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeabe));
        EXPECT(0x5e, gbc.readMem(0xeabf));
        // 16 0178
        gbc.setState(0xab89, 0xd4b0, 0x34f0, 0x880f, 0x728e, 0x1dc3, 0x0, 0x0);
        gbc.writeMem(0xab89, { 0x16, 0xcf });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xab89));
        EXPECT(0xcf, gbc.readMem(0xab8a));
        // 16 0179
        gbc.setState(0x448d, 0xeada, 0xaf70, 0x67de, 0x87b5, 0x2a01, 0x0, 0x0);
        gbc.writeMem(0x448d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 017A
        gbc.setState(0x269b, 0x4e26, 0x5510, 0xa565, 0x128e, 0xae78, 0x1, 0x0);
        gbc.writeMem(0x269b, { 0x16, 0x8d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4e26, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 017B
        gbc.setState(0xd23e, 0x16d, 0x71e0, 0x2b6f, 0x9bca, 0xce9, 0x0, 0x1);
        gbc.writeMem(0xd23e, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x16d, gbc.sp());
        EXPECT(0xd240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd23e));
        EXPECT(0xe9, gbc.readMem(0xd23f));
        // 16 017C
        gbc.setState(0x547f, 0xb58, 0x1870, 0xa190, 0x6102, 0x7a2a, 0x1, 0x0);
        gbc.writeMem(0x547f, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb58, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 017D
        gbc.setState(0x4109, 0x613e, 0x760, 0xc0c8, 0x7ce7, 0x8a4e, 0x1, 0x0);
        gbc.writeMem(0x4109, { 0x16, 0x14 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x613e, gbc.sp());
        EXPECT(0x410b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0180
        gbc.setState(0xe658, 0x4673, 0xd690, 0xf7d6, 0xe913, 0x9623, 0x1, 0x1);
        gbc.writeMem(0xe658, { 0x16, 0xda });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0xe65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe658));
        EXPECT(0xda, gbc.readMem(0xe659));
        // 16 0181
        gbc.setState(0x6730, 0xfb40, 0x3410, 0xf363, 0x5d7c, 0x6946, 0x0, 0x0);
        gbc.writeMem(0x6730, { 0x16, 0xbf });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0182
        gbc.setState(0xc0a, 0x81d0, 0x8300, 0x4165, 0x4c98, 0x78f6, 0x1, 0x0);
        gbc.writeMem(0xc0a, { 0x16, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x81d0, gbc.sp());
        EXPECT(0xc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0183
        gbc.setState(0xe25f, 0x17b2, 0xaf10, 0x5b88, 0x3baf, 0x8c59, 0x1, 0x1);
        gbc.writeMem(0xe25f, { 0x16, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x17b2, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe25f));
        EXPECT(0x2d, gbc.readMem(0xe260));
        // 16 0184
        gbc.setState(0xd82b, 0x45be, 0xcb0, 0x8f10, 0x7acf, 0xc5c3, 0x1, 0x0);
        gbc.writeMem(0xd82b, { 0x16, 0x13 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x45be, gbc.sp());
        EXPECT(0xd82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd82b));
        EXPECT(0x13, gbc.readMem(0xd82c));
        // 16 0185
        gbc.setState(0x7dcb, 0xbdb4, 0x3310, 0x310d, 0x513f, 0x1083, 0x1, 0x0);
        gbc.writeMem(0x7dcb, { 0x16, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0x7dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0186
        gbc.setState(0x9026, 0x1f23, 0x2c20, 0xe895, 0x7415, 0xa591, 0x1, 0x0);
        gbc.writeMem(0x9026, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0x9028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9026));
        EXPECT(0xb6, gbc.readMem(0x9027));
        // 16 0187
        gbc.setState(0xbdf6, 0xcec9, 0xe720, 0xea03, 0x6df4, 0x2bcb, 0x1, 0x1);
        gbc.writeMem(0xbdf6, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcec9, gbc.sp());
        EXPECT(0xbdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdf6));
        EXPECT(0xc8, gbc.readMem(0xbdf7));
        // 16 0188
        gbc.setState(0xff2, 0x418f, 0x60a0, 0x84bd, 0xafce, 0x3dbc, 0x1, 0x0);
        gbc.writeMem(0xff2, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x418f, gbc.sp());
        EXPECT(0xff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0189
        gbc.setState(0x6d92, 0x5761, 0x34c0, 0x1de9, 0x3325, 0x294b, 0x0, 0x1);
        gbc.writeMem(0x6d92, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0x6d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 018A
        gbc.setState(0x625a, 0xfa57, 0xa2b0, 0xe4a8, 0x329f, 0xea0, 0x1, 0x0);
        gbc.writeMem(0x625a, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0x625c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 018B
        gbc.setState(0x9bb9, 0x455a, 0x44b0, 0x5c9c, 0x7f45, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x455a, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9bb9));
        EXPECT(0xc9, gbc.readMem(0x9bba));
        // 16 018C
        gbc.setState(0xac2e, 0xe34, 0x8370, 0x410f, 0xf5b1, 0x7db4, 0x0, 0x0);
        gbc.writeMem(0xac2e, { 0x16, 0xbc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe34, gbc.sp());
        EXPECT(0xac30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xac2e));
        EXPECT(0xbc, gbc.readMem(0xac2f));
        // 16 018D
        gbc.setState(0xda3b, 0x1033, 0xe800, 0x3bca, 0xeb86, 0xc473, 0x0, 0x1);
        gbc.writeMem(0xda3b, { 0x16, 0x45 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1033, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xda3b));
        EXPECT(0x45, gbc.readMem(0xda3c));
        // 16 018E
        gbc.setState(0xa738, 0x58d4, 0x3a00, 0x8289, 0x34fb, 0x2edd, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x58d4, gbc.sp());
        EXPECT(0xa73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa738));
        EXPECT(0xd1, gbc.readMem(0xa739));
        // 16 018F
        gbc.setState(0xfd8, 0x7b3, 0x1760, 0x3880, 0x2be, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0xfd8, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7b3, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0190
        gbc.setState(0x9fd7, 0xc6a2, 0xbc80, 0xf798, 0xab5f, 0x2131, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9fd7));
        EXPECT(0xb1, gbc.readMem(0x9fd8));
        // 16 0191
        gbc.setState(0x257a, 0x527b, 0xba40, 0xcbfa, 0x9f23, 0x5d80, 0x1, 0x0);
        gbc.writeMem(0x257a, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x527b, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0192
        gbc.setState(0x9b79, 0x58f8, 0x4e40, 0x8d5a, 0x58be, 0xfb5f, 0x0, 0x1);
        gbc.writeMem(0x9b79, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x58f8, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9b79));
        EXPECT(0xa0, gbc.readMem(0x9b7a));
        // 16 0193
        gbc.setState(0x19b7, 0x5a1b, 0x2360, 0x860f, 0x82ac, 0xe804, 0x1, 0x1);
        gbc.writeMem(0x19b7, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x19b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0194
        gbc.setState(0x9fd5, 0xbc4, 0xf810, 0x82cc, 0x4059, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x9fd5, { 0x16, 0x59 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0x9fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9fd5));
        EXPECT(0x59, gbc.readMem(0x9fd6));
        // 16 0195
        gbc.setState(0xb76d, 0x42e7, 0x6980, 0x50c4, 0x3714, 0xaf8b, 0x1, 0x0);
        gbc.writeMem(0xb76d, { 0x16, 0xfa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x42e7, gbc.sp());
        EXPECT(0xb76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb76d));
        EXPECT(0xfa, gbc.readMem(0xb76e));
        // 16 0196
        gbc.setState(0x5fc, 0x7785, 0x9150, 0xfa11, 0x8422, 0x8603, 0x0, 0x0);
        gbc.writeMem(0x5fc, { 0x16, 0x2e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0197
        gbc.setState(0x3c84, 0xe0f, 0x48f0, 0xf71b, 0x29e2, 0xa554, 0x1, 0x0);
        gbc.writeMem(0x3c84, { 0x16, 0xfd });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0198
        gbc.setState(0xb157, 0x4927, 0x1570, 0xf74a, 0xe3e0, 0x9410, 0x1, 0x0);
        gbc.writeMem(0xb157, { 0x16, 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4927, gbc.sp());
        EXPECT(0xb159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb157));
        EXPECT(0x3a, gbc.readMem(0xb158));
        // 16 0199
        gbc.setState(0x193b, 0x8428, 0x1780, 0x4914, 0xd5a1, 0xfbcb, 0x0, 0x0);
        gbc.writeMem(0x193b, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x193d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 019A
        gbc.setState(0x3265, 0xae1a, 0x5410, 0x6ae7, 0x4914, 0xc002, 0x1, 0x0);
        gbc.writeMem(0x3265, { 0x16, 0x80 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 019B
        gbc.setState(0xf40, 0x9c95, 0xa360, 0x793a, 0x5dbf, 0xcc32, 0x0, 0x1);
        gbc.writeMem(0xf40, { 0x16, 0x8a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 019C
        gbc.setState(0xaa3d, 0x94ce, 0x3590, 0xb481, 0xed70, 0xb5d9, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0xaa3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaa3d));
        EXPECT(0x9f, gbc.readMem(0xaa3e));
        // 16 019D
        gbc.setState(0x1b5d, 0x6a3c, 0xae30, 0x362, 0x83ca, 0x8234, 0x0, 0x1);
        gbc.writeMem(0x1b5d, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0x1b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 019E
        gbc.setState(0x76c9, 0x2d78, 0x9450, 0xf841, 0xfa25, 0x7816, 0x0, 0x1);
        gbc.writeMem(0x76c9, { 0x16, 0x75 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2d78, gbc.sp());
        EXPECT(0x76cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 019F
        gbc.setState(0xc960, 0xda49, 0xfef0, 0x8b53, 0x79ba, 0xa5fd, 0x0, 0x0);
        gbc.writeMem(0xc960, { 0x16, 0x52 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc960));
        EXPECT(0x52, gbc.readMem(0xc961));
        // 16 01A0
        gbc.setState(0x5bda, 0xe1fc, 0xbc50, 0x3d9d, 0x3d08, 0xb7f6, 0x0, 0x0);
        gbc.writeMem(0x5bda, { 0x16, 0xad });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe1fc, gbc.sp());
        EXPECT(0x5bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01A1
        gbc.setState(0x53f9, 0x3cee, 0xa90, 0x8665, 0xa451, 0x6c55, 0x0, 0x0);
        gbc.writeMem(0x53f9, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3cee, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01A2
        gbc.setState(0x5095, 0xe62e, 0xac80, 0x2d55, 0x60f2, 0x60b, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x16, 0x9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe62e, gbc.sp());
        EXPECT(0x5097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01A4
        gbc.setState(0xc51d, 0x8ee3, 0x61d0, 0x3a8a, 0x4368, 0xcaf7, 0x1, 0x0);
        gbc.writeMem(0xc51d, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8ee3, gbc.sp());
        EXPECT(0xc51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc51d));
        EXPECT(0xd2, gbc.readMem(0xc51e));
        // 16 01A5
        gbc.setState(0xcb0e, 0xf3e1, 0xfbf0, 0x6d90, 0xecee, 0x6faf, 0x1, 0x0);
        gbc.writeMem(0xcb0e, { 0x16, 0xd });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0xcb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcb0e));
        EXPECT(0xd, gbc.readMem(0xcb0f));
        // 16 01A6
        gbc.setState(0xa6b4, 0x690c, 0x8030, 0x6a57, 0x5f89, 0x5228, 0x0, 0x0);
        gbc.writeMem(0xa6b4, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa6b4));
        EXPECT(0xb7, gbc.readMem(0xa6b5));
        // 16 01A7
        gbc.setState(0x6a3c, 0xc8a4, 0x3d50, 0xec50, 0xc163, 0xd52e, 0x1, 0x1);
        gbc.writeMem(0x6a3c, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x6a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01A8
        gbc.setState(0xa250, 0x4fa2, 0x6fd0, 0xfaff, 0xbd59, 0xc538, 0x1, 0x1);
        gbc.writeMem(0xa250, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa250));
        EXPECT(0xf7, gbc.readMem(0xa251));
        // 16 01A9
        gbc.setState(0xe78, 0xb1f7, 0x7b10, 0xf481, 0x9d8, 0xd312, 0x0, 0x1);
        gbc.writeMem(0xe78, { 0x16, 0x9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb1f7, gbc.sp());
        EXPECT(0xe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01AA
        gbc.setState(0xa7f5, 0x8ff1, 0x42f0, 0x2dca, 0x3486, 0x83bf, 0x1, 0x0);
        gbc.writeMem(0xa7f5, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8ff1, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa7f5));
        EXPECT(0xa0, gbc.readMem(0xa7f6));
        // 16 01AB
        gbc.setState(0xdacd, 0x91ac, 0x3160, 0xec7a, 0xeede, 0x58b, 0x1, 0x0);
        gbc.writeMem(0xdacd, { 0x16, 0xca });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x91ac, gbc.sp());
        EXPECT(0xdacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdacd));
        EXPECT(0xca, gbc.readMem(0xdace));
        // 16 01AC
        gbc.setState(0x28c2, 0xeaa4, 0x6a10, 0x12e9, 0x8789, 0x1316, 0x1, 0x1);
        gbc.writeMem(0x28c2, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeaa4, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01AD
        gbc.setState(0x9601, 0x15ee, 0x9660, 0x63d6, 0x3217, 0x95d4, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0x16, 0x8a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0x9603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9601));
        EXPECT(0x8a, gbc.readMem(0x9602));
        // 16 01AE
        gbc.setState(0x49cd, 0x74db, 0x7c90, 0x7032, 0xc043, 0xe48a, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0x16, 0x99 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x74db, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01AF
        gbc.setState(0x765a, 0xac70, 0x63d0, 0x1b8d, 0x3ade, 0x17b3, 0x1, 0x1);
        gbc.writeMem(0x765a, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xac70, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01B0
        gbc.setState(0x17a9, 0xbcc5, 0xa950, 0xa583, 0xcff5, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x17a9, { 0x16, 0xca });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01B1
        gbc.setState(0xcc08, 0x5021, 0xa060, 0xde93, 0x196b, 0xecbe, 0x1, 0x0);
        gbc.writeMem(0xcc08, { 0x16, 0x1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5021, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcc08));
        EXPECT(0x1, gbc.readMem(0xcc09));
        // 16 01B2
        gbc.setState(0x2dbe, 0x67d2, 0xe280, 0xdb2d, 0x9eb5, 0x305e, 0x0, 0x0);
        gbc.writeMem(0x2dbe, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x67d2, gbc.sp());
        EXPECT(0x2dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01B3
        gbc.setState(0xb92d, 0xb90b, 0x7830, 0x78c4, 0x147f, 0x893d, 0x0, 0x0);
        gbc.writeMem(0xb92d, { 0x16, 0xa3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb90b, gbc.sp());
        EXPECT(0xb92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb92d));
        EXPECT(0xa3, gbc.readMem(0xb92e));
        // 16 01B4
        gbc.setState(0x4e3e, 0xf855, 0x7c00, 0x1f88, 0x9b2a, 0x6f66, 0x1, 0x1);
        gbc.writeMem(0x4e3e, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf855, gbc.sp());
        EXPECT(0x4e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01B5
        gbc.setState(0x5f7, 0xc47c, 0xff20, 0xabcc, 0xb99, 0x73e8, 0x0, 0x1);
        gbc.writeMem(0x5f7, { 0x16, 0xb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc47c, gbc.sp());
        EXPECT(0x5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01B6
        gbc.setState(0x7732, 0x806, 0x20d0, 0xb1e9, 0x8f9a, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x7732, { 0x16, 0xae });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0x7734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01B7
        gbc.setState(0xd5f, 0xdf40, 0xde90, 0xe9be, 0x40c2, 0x1565, 0x0, 0x0);
        gbc.writeMem(0xd5f, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf40, gbc.sp());
        EXPECT(0xd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01B8
        gbc.setState(0xda39, 0x9ee1, 0x7270, 0xf95d, 0x6dfb, 0xfe9f, 0x0, 0x0);
        gbc.writeMem(0xda39, { 0x16, 0x68 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9ee1, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xda39));
        EXPECT(0x68, gbc.readMem(0xda3a));
        // 16 01B9
        gbc.setState(0x50aa, 0x7a17, 0xba90, 0xcc03, 0x542f, 0x8a0d, 0x1, 0x0);
        gbc.writeMem(0x50aa, { 0x16, 0x67 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7a17, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01BA
        gbc.setState(0x5215, 0x5dba, 0x8930, 0xe588, 0xe7e3, 0xa076, 0x0, 0x0);
        gbc.writeMem(0x5215, { 0x16, 0x86 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0x5217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01BB
        gbc.setState(0x5969, 0xc0e2, 0x3ab0, 0x65db, 0xc279, 0xf966, 0x1, 0x0);
        gbc.writeMem(0x5969, { 0x16, 0xd });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc0e2, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01BC
        gbc.setState(0x9686, 0xcdcc, 0x6670, 0x5f46, 0xe692, 0x4aee, 0x1, 0x0);
        gbc.writeMem(0x9686, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcdcc, gbc.sp());
        EXPECT(0x9688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9686));
        EXPECT(0xf7, gbc.readMem(0x9687));
        // 16 01BD
        gbc.setState(0x4a0c, 0xedbf, 0xe4c0, 0xdd72, 0x3bd4, 0xb322, 0x0, 0x0);
        gbc.writeMem(0x4a0c, { 0x16, 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xedbf, gbc.sp());
        EXPECT(0x4a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01BE
        gbc.setState(0x7ea9, 0x5893, 0x95e0, 0xca08, 0x2090, 0xc4a0, 0x0, 0x1);
        gbc.writeMem(0x7ea9, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01BF
        gbc.setState(0xaf7e, 0x8bf, 0x8d90, 0xb7f4, 0xe888, 0x426d, 0x0, 0x1);
        gbc.writeMem(0xaf7e, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8bf, gbc.sp());
        EXPECT(0xaf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaf7e));
        EXPECT(0xf1, gbc.readMem(0xaf7f));
        // 16 01C0
        gbc.setState(0xec78, 0xa2f0, 0x63f0, 0xf0fb, 0xd90e, 0x3d59, 0x0, 0x1);
        gbc.writeMem(0xec78, { 0x16, 0x62 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa2f0, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec78));
        EXPECT(0x62, gbc.readMem(0xec79));
        // 16 01C1
        gbc.setState(0x921, 0xf550, 0x8ac0, 0x8412, 0x4033, 0x484, 0x0, 0x0);
        gbc.writeMem(0x921, { 0x16, 0x35 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf550, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01C2
        gbc.setState(0x79b9, 0x394b, 0xde50, 0xba2, 0xdd22, 0xc6c0, 0x0, 0x0);
        gbc.writeMem(0x79b9, { 0x16, 0x73 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x394b, gbc.sp());
        EXPECT(0x79bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01C3
        gbc.setState(0x77df, 0x6ee8, 0x9910, 0x843a, 0xbd9e, 0xffbd, 0x0, 0x1);
        gbc.writeMem(0x77df, { 0x16, 0x5d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x77e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01C4
        gbc.setState(0xec9e, 0x1102, 0xdf60, 0xd8fe, 0x5854, 0x5f6a, 0x1, 0x0);
        gbc.writeMem(0xec9e, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1102, gbc.sp());
        EXPECT(0xeca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec9e));
        EXPECT(0xa4, gbc.readMem(0xec9f));
        // 16 01C5
        gbc.setState(0x8534, 0x9562, 0xe710, 0x80ad, 0xdad1, 0x21b5, 0x1, 0x1);
        gbc.writeMem(0x8534, { 0x16, 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9562, gbc.sp());
        EXPECT(0x8536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8534));
        EXPECT(0x47, gbc.readMem(0x8535));
        // 16 01C6
        gbc.setState(0xca17, 0x53d2, 0x7c00, 0xcfc, 0x1fde, 0x85d, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xca17));
        EXPECT(0xc0, gbc.readMem(0xca18));
        // 16 01C7
        gbc.setState(0xa48e, 0xf27b, 0x3430, 0x4e79, 0x78c8, 0xc7e9, 0x1, 0x1);
        gbc.writeMem(0xa48e, { 0x16, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf27b, gbc.sp());
        EXPECT(0xa490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa48e));
        EXPECT(0x12, gbc.readMem(0xa48f));
        // 16 01C8
        gbc.setState(0x7e77, 0x2ccf, 0xa0f0, 0x722b, 0x5ee8, 0x79d3, 0x0, 0x0);
        gbc.writeMem(0x7e77, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01C9
        gbc.setState(0xc7b, 0x2442, 0x7c50, 0x55da, 0xa2a1, 0x967f, 0x0, 0x1);
        gbc.writeMem(0xc7b, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0xc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01CA
        gbc.setState(0x1b4f, 0x6366, 0xde90, 0x3253, 0x12c0, 0x3779, 0x0, 0x0);
        gbc.writeMem(0x1b4f, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0x1b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01CB
        gbc.setState(0xc366, 0x1929, 0x68e0, 0x35ca, 0x878c, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0xc366, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1929, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc366));
        EXPECT(0x85, gbc.readMem(0xc367));
        // 16 01CD
        gbc.setState(0xd896, 0xf389, 0x5a20, 0xd113, 0xc82e, 0xca44, 0x1, 0x0);
        gbc.writeMem(0xd896, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd896));
        EXPECT(0x9b, gbc.readMem(0xd897));
        // 16 01CE
        gbc.setState(0x3714, 0x2cd3, 0xc0a0, 0x3f64, 0xb7, 0xbaa7, 0x1, 0x1);
        gbc.writeMem(0x3714, { 0x16, 0x6b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x3716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01CF
        gbc.setState(0xda15, 0x7e13, 0xe600, 0x28e1, 0x262d, 0xe363, 0x1, 0x0);
        gbc.writeMem(0xda15, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7e13, gbc.sp());
        EXPECT(0xda17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xda15));
        EXPECT(0x4a, gbc.readMem(0xda16));
        // 16 01D0
        gbc.setState(0x2d49, 0x7bf, 0x4a20, 0x8ec2, 0xfd96, 0xeec6, 0x1, 0x1);
        gbc.writeMem(0x2d49, { 0x16, 0x7c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01D1
        gbc.setState(0xb170, 0x877a, 0x8210, 0xc238, 0x66fc, 0x7ce7, 0x1, 0x1);
        gbc.writeMem(0xb170, { 0x16, 0x5f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x877a, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb170));
        EXPECT(0x5f, gbc.readMem(0xb171));
        // 16 01D2
        gbc.setState(0x2774, 0x6d77, 0x4c40, 0x90a3, 0x1c81, 0x95af, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0x16, 0xfb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6d77, gbc.sp());
        EXPECT(0x2776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01D3
        gbc.setState(0x6b73, 0xc535, 0x66e0, 0x1d17, 0x6c3d, 0x5225, 0x1, 0x0);
        gbc.writeMem(0x6b73, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01D4
        gbc.setState(0x209e, 0xb0fe, 0x3090, 0x8261, 0x226d, 0xe9b8, 0x1, 0x1);
        gbc.writeMem(0x209e, { 0x16, 0x52 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb0fe, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01D6
        gbc.setState(0x4125, 0xbd75, 0x8b00, 0x3d, 0xba5d, 0x966c, 0x1, 0x1);
        gbc.writeMem(0x4125, { 0x16, 0x6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0x4127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01D7
        gbc.setState(0xc895, 0xb317, 0xa960, 0x2d76, 0x69c9, 0xcedd, 0x0, 0x1);
        gbc.writeMem(0xc895, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb317, gbc.sp());
        EXPECT(0xc897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc895));
        EXPECT(0x4f, gbc.readMem(0xc896));
        // 16 01D8
        gbc.setState(0x1529, 0xc2f6, 0x5140, 0xb47c, 0x25ac, 0x7e26, 0x0, 0x1);
        gbc.writeMem(0x1529, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc2f6, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01D9
        gbc.setState(0x76a0, 0xfc6b, 0x3880, 0xa167, 0x8258, 0xd959, 0x0, 0x1);
        gbc.writeMem(0x76a0, { 0x16, 0x5d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0x76a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01DB
        gbc.setState(0x144f, 0xfae0, 0xa0e0, 0x4afc, 0x49aa, 0x93d5, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfae0, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01DC
        gbc.setState(0xe6d3, 0x45c3, 0xe450, 0x4f34, 0x5be2, 0x5e05, 0x0, 0x0);
        gbc.writeMem(0xe6d3, { 0x16, 0xdc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0xe6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe6d3));
        EXPECT(0xdc, gbc.readMem(0xe6d4));
        // 16 01DD
        gbc.setState(0xed0, 0x80f7, 0x35d0, 0xc79, 0x50a5, 0xdaee, 0x1, 0x0);
        gbc.writeMem(0xed0, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01DE
        gbc.setState(0x6abc, 0xd16e, 0xaf30, 0xab73, 0x3e0c, 0x1e69, 0x0, 0x1);
        gbc.writeMem(0x6abc, { 0x16, 0x8b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0x6abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01DF
        gbc.setState(0xee26, 0xeb4e, 0xd680, 0xa6db, 0xfe0e, 0x7628, 0x0, 0x0);
        gbc.writeMem(0xee26, { 0x16, 0x6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0xee28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xee26));
        EXPECT(0x6, gbc.readMem(0xee27));
        // 16 01E0
        gbc.setState(0x1aa5, 0xdca1, 0x740, 0xe25, 0xc9ff, 0x6961, 0x1, 0x0);
        gbc.writeMem(0x1aa5, { 0x16, 0xef });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdca1, gbc.sp());
        EXPECT(0x1aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01E1
        gbc.setState(0x3007, 0x2793, 0x7df0, 0x6572, 0xf5f1, 0x14a1, 0x0, 0x0);
        gbc.writeMem(0x3007, { 0x16, 0x13 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2793, gbc.sp());
        EXPECT(0x3009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01E2
        gbc.setState(0x27cf, 0xefa4, 0x4720, 0x1ba8, 0xbd22, 0xf31d, 0x0, 0x1);
        gbc.writeMem(0x27cf, { 0x16, 0xec });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0x27d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01E3
        gbc.setState(0xb02e, 0x9166, 0x6fa0, 0xba70, 0x883f, 0xb9e5, 0x0, 0x1);
        gbc.writeMem(0xb02e, { 0x16, 0x66 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9166, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb02e));
        EXPECT(0x66, gbc.readMem(0xb02f));
        // 16 01E4
        gbc.setState(0xa3bc, 0xa29e, 0x6d50, 0x5ff0, 0x8dbd, 0x9d90, 0x0, 0x0);
        gbc.writeMem(0xa3bc, { 0x16, 0xbc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa3bc));
        EXPECT(0xbc, gbc.readMem(0xa3bd));
        // 16 01E6
        gbc.setState(0x11b9, 0x6fa8, 0x3330, 0x1d39, 0x3c5e, 0xeb01, 0x1, 0x0);
        gbc.writeMem(0x11b9, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6fa8, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01E7
        gbc.setState(0xde81, 0x469b, 0x5510, 0x7f02, 0xa9d3, 0x8786, 0x0, 0x1);
        gbc.writeMem(0xde81, { 0x16, 0x3b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x469b, gbc.sp());
        EXPECT(0xde83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xde81));
        EXPECT(0x3b, gbc.readMem(0xde82));
        // 16 01E8
        gbc.setState(0x9625, 0x30c0, 0x8330, 0xd65c, 0xfff2, 0x647f, 0x1, 0x1);
        gbc.writeMem(0x9625, { 0x16, 0x6d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0x9627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9625));
        EXPECT(0x6d, gbc.readMem(0x9626));
        // 16 01E9
        gbc.setState(0x73ef, 0x4295, 0xabb0, 0xfc6, 0xbf26, 0x8014, 0x1, 0x1);
        gbc.writeMem(0x73ef, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4295, gbc.sp());
        EXPECT(0x73f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01EA
        gbc.setState(0x47ed, 0x3feb, 0x4cf0, 0x944f, 0x2614, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0x47ed, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3feb, gbc.sp());
        EXPECT(0x47ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01EB
        gbc.setState(0xad06, 0xfeea, 0xfda0, 0xddfa, 0x4e8b, 0x9117, 0x0, 0x0);
        gbc.writeMem(0xad06, { 0x16, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0xad08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xad06));
        EXPECT(0x31, gbc.readMem(0xad07));
        // 16 01EC
        gbc.setState(0x85c8, 0x874b, 0x2b70, 0xdc1f, 0xf2af, 0xe3c1, 0x1, 0x1);
        gbc.writeMem(0x85c8, { 0x16, 0x57 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x874b, gbc.sp());
        EXPECT(0x85ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x85c8));
        EXPECT(0x57, gbc.readMem(0x85c9));
        // 16 01ED
        gbc.setState(0x1c18, 0x7859, 0x2d30, 0xd8e7, 0x7bf, 0x8591, 0x0, 0x1);
        gbc.writeMem(0x1c18, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0x1c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01EE
        gbc.setState(0x5956, 0x12f8, 0xe810, 0x83f7, 0x50b0, 0xbe37, 0x0, 0x0);
        gbc.writeMem(0x5956, { 0x16, 0x42 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0x5958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01EF
        gbc.setState(0x363a, 0x47b, 0x6930, 0x8ee3, 0x6fd3, 0x350a, 0x1, 0x0);
        gbc.writeMem(0x363a, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x47b, gbc.sp());
        EXPECT(0x363c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01F0
        gbc.setState(0x6fc2, 0xcfb6, 0xe260, 0xaa5a, 0x5fa6, 0x636c, 0x1, 0x0);
        gbc.writeMem(0x6fc2, { 0x16, 0x80 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcfb6, gbc.sp());
        EXPECT(0x6fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01F1
        gbc.setState(0x97a, 0x5c50, 0x7350, 0xd5ef, 0x430e, 0xcecd, 0x0, 0x1);
        gbc.writeMem(0x97a, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0x97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01F2
        gbc.setState(0xdabf, 0x124d, 0xb7e0, 0xf708, 0x2d90, 0x1a0b, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0x16, 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x124d, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdabf));
        EXPECT(0x2c, gbc.readMem(0xdac0));
        // 16 01F3
        gbc.setState(0x8695, 0x71c3, 0xce50, 0xdf64, 0xeb64, 0x5f9f, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0x16, 0x5f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x71c3, gbc.sp());
        EXPECT(0x8697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8695));
        EXPECT(0x5f, gbc.readMem(0x8696));
        // 16 01F4
        gbc.setState(0x7297, 0xf4f3, 0xdeb0, 0x98b7, 0xf986, 0xc1bc, 0x1, 0x0);
        gbc.writeMem(0x7297, { 0x16, 0xfb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf4f3, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01F5
        gbc.setState(0x54fb, 0x5d0d, 0x2450, 0xe87a, 0xe816, 0x16bb, 0x0, 0x1);
        gbc.writeMem(0x54fb, { 0x16, 0x92 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5d0d, gbc.sp());
        EXPECT(0x54fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01F6
        gbc.setState(0xd1e7, 0xb61b, 0x54b0, 0x8c15, 0x5f96, 0xafac, 0x0, 0x1);
        gbc.writeMem(0xd1e7, { 0x16, 0x77 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb61b, gbc.sp());
        EXPECT(0xd1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd1e7));
        EXPECT(0x77, gbc.readMem(0xd1e8));
        // 16 01F7
        gbc.setState(0x7c1f, 0x74ae, 0x3180, 0xa1fb, 0xe917, 0x7a2f, 0x1, 0x1);
        gbc.writeMem(0x7c1f, { 0x16, 0x74 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x74ae, gbc.sp());
        EXPECT(0x7c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01F8
        gbc.setState(0x4310, 0xc035, 0x6930, 0x3d57, 0x63f0, 0x6951, 0x1, 0x1);
        gbc.writeMem(0x4310, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0x4312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01F9
        gbc.setState(0x6804, 0xe534, 0x1470, 0xa2d8, 0xe108, 0x4492, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0x16, 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0x6806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01FA
        gbc.setState(0x3635, 0xbd34, 0x27c0, 0xdd5d, 0xb389, 0x4da5, 0x1, 0x1);
        gbc.writeMem(0x3635, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbd34, gbc.sp());
        EXPECT(0x3637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 01FB
        gbc.setState(0x5f35, 0x6073, 0xbe50, 0xc6e2, 0xa23f, 0x3714, 0x0, 0x0);
        gbc.writeMem(0x5f35, { 0x16, 0x4e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6073, gbc.sp());
        EXPECT(0x5f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01FC
        gbc.setState(0xe920, 0xdbdc, 0x8ab0, 0xdd6b, 0x688f, 0xc2a3, 0x1, 0x0);
        gbc.writeMem(0xe920, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe920));
        EXPECT(0x4a, gbc.readMem(0xe921));
        // 16 01FD
        gbc.setState(0x7fb4, 0xf466, 0x50d0, 0xcd9f, 0xea92, 0xd987, 0x1, 0x1);
        gbc.writeMem(0x7fb4, { 0x16, 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf466, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 01FE
        gbc.setState(0x9520, 0x64a2, 0x4d40, 0x950d, 0x877f, 0xa488, 0x0, 0x1);
        gbc.writeMem(0x9520, { 0x16, 0xef });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x64a2, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9520));
        EXPECT(0xef, gbc.readMem(0x9521));
        // 16 01FF
        gbc.setState(0xac19, 0x6ae5, 0x6f30, 0x424d, 0xf972, 0x806c, 0x0, 0x1);
        gbc.writeMem(0xac19, { 0x16, 0x1c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6ae5, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xac19));
        EXPECT(0x1c, gbc.readMem(0xac1a));
        // 16 0200
        gbc.setState(0x9a1b, 0xa182, 0x9980, 0x43ab, 0xab06, 0x8c0, 0x0, 0x0);
        gbc.writeMem(0x9a1b, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa182, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9a1b));
        EXPECT(0xe3, gbc.readMem(0x9a1c));
        // 16 0202
        gbc.setState(0xa6c2, 0xfbbd, 0xd420, 0x1820, 0x34ce, 0x1254, 0x1, 0x1);
        gbc.writeMem(0xa6c2, { 0x16, 0xa3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfbbd, gbc.sp());
        EXPECT(0xa6c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa6c2));
        EXPECT(0xa3, gbc.readMem(0xa6c3));
        // 16 0203
        gbc.setState(0x9db8, 0x94ce, 0x4c20, 0xb925, 0x9bc1, 0x4f0a, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0x9dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9db8));
        EXPECT(0xa1, gbc.readMem(0x9db9));
        // 16 0204
        gbc.setState(0x946f, 0x94b0, 0x4c80, 0xd6f8, 0x48de, 0x9394, 0x0, 0x1);
        gbc.writeMem(0x946f, { 0x16, 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x9471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x946f));
        EXPECT(0x9b, gbc.readMem(0x9470));
        // 16 0205
        gbc.setState(0xb861, 0xb745, 0x43c0, 0x35b8, 0xc86e, 0x9f2a, 0x1, 0x1);
        gbc.writeMem(0xb861, { 0x16, 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb745, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb861));
        EXPECT(0xc, gbc.readMem(0xb862));
        // 16 0206
        gbc.setState(0x9665, 0x3fc8, 0xf170, 0xb2a7, 0x6e2, 0x7698, 0x0, 0x0);
        gbc.writeMem(0x9665, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3fc8, gbc.sp());
        EXPECT(0x9667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9665));
        EXPECT(0x5b, gbc.readMem(0x9666));
        // 16 0208
        gbc.setState(0x267f, 0xf252, 0xd050, 0x4910, 0xe7cc, 0xed28, 0x0, 0x0);
        gbc.writeMem(0x267f, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0x2681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0209
        gbc.setState(0xbfd0, 0xd31d, 0x2dd0, 0x22f2, 0xc076, 0x1b92, 0x1, 0x1);
        gbc.writeMem(0xbfd0, { 0x16, 0xdc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0xbfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbfd0));
        EXPECT(0xdc, gbc.readMem(0xbfd1));
        // 16 020A
        gbc.setState(0xb178, 0xfaf0, 0x6a10, 0xdb17, 0xafcc, 0x7666, 0x0, 0x1);
        gbc.writeMem(0xb178, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb178));
        EXPECT(0xd5, gbc.readMem(0xb179));
        // 16 020B
        gbc.setState(0x65be, 0x8a1f, 0x75a0, 0x12e8, 0x71c, 0xcc24, 0x0, 0x1);
        gbc.writeMem(0x65be, { 0x16, 0xaa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8a1f, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 020C
        gbc.setState(0xddfb, 0x4628, 0xe730, 0xb8f5, 0x83c8, 0x385d, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0x16, 0xcd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xddfb));
        EXPECT(0xcd, gbc.readMem(0xddfc));
        // 16 020D
        gbc.setState(0x76e5, 0xb19, 0xff20, 0xd571, 0xb422, 0xa5f1, 0x0, 0x1);
        gbc.writeMem(0x76e5, { 0x16, 0x99 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb19, gbc.sp());
        EXPECT(0x76e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 020E
        gbc.setState(0x846d, 0xf6d3, 0xfe40, 0xf4fd, 0x9f02, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0x846d, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf6d3, gbc.sp());
        EXPECT(0x846f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x846d));
        EXPECT(0xe1, gbc.readMem(0x846e));
        // 16 020F
        gbc.setState(0x47d2, 0xa3ab, 0x2a80, 0xa41a, 0x36e8, 0x6cd9, 0x0, 0x0);
        gbc.writeMem(0x47d2, { 0x16, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa3ab, gbc.sp());
        EXPECT(0x47d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0210
        gbc.setState(0x7524, 0xf7b2, 0xa6d0, 0x4bba, 0x3631, 0xacce, 0x0, 0x1);
        gbc.writeMem(0x7524, { 0x16, 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf7b2, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0211
        gbc.setState(0x3815, 0x4b4b, 0x9140, 0x4a1a, 0xfa49, 0x148e, 0x0, 0x0);
        gbc.writeMem(0x3815, { 0x16, 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4b4b, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0212
        gbc.setState(0xd47c, 0xfdf9, 0x3470, 0x5dee, 0x7b09, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0xd47c, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfdf9, gbc.sp());
        EXPECT(0xd47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd47c));
        EXPECT(0xe0, gbc.readMem(0xd47d));
        // 16 0213
        gbc.setState(0xb010, 0xd0f3, 0x1ae0, 0xa16a, 0xcc04, 0xc1e9, 0x0, 0x0);
        gbc.writeMem(0xb010, { 0x16, 0x31 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0xb012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb010));
        EXPECT(0x31, gbc.readMem(0xb011));
        // 16 0214
        gbc.setState(0x3e7f, 0x5e87, 0x2b80, 0xcdc8, 0x8840, 0xa916, 0x1, 0x0);
        gbc.writeMem(0x3e7f, { 0x16, 0xe });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5e87, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0215
        gbc.setState(0xa6f7, 0x2c3, 0xaa80, 0xcb54, 0x8be7, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0xa6f7, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2c3, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa6f7));
        EXPECT(0x9f, gbc.readMem(0xa6f8));
        // 16 0216
        gbc.setState(0xed7a, 0x57bf, 0xbdf0, 0x9424, 0xbe90, 0x2a6, 0x0, 0x0);
        gbc.writeMem(0xed7a, { 0x16, 0x6a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x57bf, gbc.sp());
        EXPECT(0xed7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xed7a));
        EXPECT(0x6a, gbc.readMem(0xed7b));
        // 16 0217
        gbc.setState(0x5f9f, 0x5267, 0xebf0, 0xc37a, 0x8a1e, 0x7d26, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0x16, 0xea });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0218
        gbc.setState(0xc5b5, 0x6cb3, 0x6320, 0xa446, 0x11d2, 0xad0d, 0x0, 0x0);
        gbc.writeMem(0xc5b5, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6cb3, gbc.sp());
        EXPECT(0xc5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc5b5));
        EXPECT(0xc9, gbc.readMem(0xc5b6));
        // 16 0219
        gbc.setState(0x4823, 0x225d, 0x3a0, 0x1ea2, 0x606, 0x9243, 0x0, 0x0);
        gbc.writeMem(0x4823, { 0x16, 0x47 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x225d, gbc.sp());
        EXPECT(0x4825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 021A
        gbc.setState(0x6b64, 0x823c, 0xaa10, 0x2ae2, 0x13fb, 0x3741, 0x1, 0x1);
        gbc.writeMem(0x6b64, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x823c, gbc.sp());
        EXPECT(0x6b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 021B
        gbc.setState(0x6217, 0x587e, 0xeff0, 0x9f3a, 0xf50, 0x8985, 0x0, 0x1);
        gbc.writeMem(0x6217, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x587e, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 021C
        gbc.setState(0x94e, 0xcbec, 0xb90, 0xfa0b, 0xab4, 0xe227, 0x0, 0x0);
        gbc.writeMem(0x94e, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 021D
        gbc.setState(0x9788, 0xa8fc, 0xc4b0, 0x1ac4, 0x74d1, 0x15a0, 0x1, 0x1);
        gbc.writeMem(0x9788, { 0x16, 0x8e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa8fc, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9788));
        EXPECT(0x8e, gbc.readMem(0x9789));
        // 16 021E
        gbc.setState(0x396, 0x180f, 0xd30, 0xb1b, 0x63ba, 0x1568, 0x0, 0x0);
        gbc.writeMem(0x396, { 0x16, 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0x398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 021F
        gbc.setState(0x2ebf, 0xa12e, 0x8880, 0xe789, 0xc988, 0x66b2, 0x1, 0x0);
        gbc.writeMem(0x2ebf, { 0x16, 0x75 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x2ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0220
        gbc.setState(0xb358, 0xdfa, 0x9de0, 0x48a4, 0x2b03, 0x8dc3, 0x0, 0x0);
        gbc.writeMem(0xb358, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdfa, gbc.sp());
        EXPECT(0xb35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb358));
        EXPECT(0x6e, gbc.readMem(0xb359));
        // 16 0221
        gbc.setState(0xee41, 0xea74, 0x2530, 0x79e, 0xcd49, 0xa740, 0x0, 0x0);
        gbc.writeMem(0xee41, { 0x16, 0x7c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0xee43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xee41));
        EXPECT(0x7c, gbc.readMem(0xee42));
        // 16 0222
        gbc.setState(0x1eb1, 0x2054, 0xadb0, 0xae3, 0x4dd4, 0x8aa4, 0x0, 0x0);
        gbc.writeMem(0x1eb1, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2054, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0223
        gbc.setState(0x722e, 0x3bb2, 0x5b30, 0x8ce8, 0xcb44, 0x33a9, 0x0, 0x0);
        gbc.writeMem(0x722e, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0224
        gbc.setState(0x624a, 0x2656, 0xc6a0, 0xe36e, 0x9ad6, 0x6e6d, 0x1, 0x1);
        gbc.writeMem(0x624a, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2656, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0225
        gbc.setState(0xb15f, 0x3d88, 0x86d0, 0xfffb, 0xda8c, 0xdb05, 0x0, 0x0);
        gbc.writeMem(0xb15f, { 0x16, 0xb5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d88, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb15f));
        EXPECT(0xb5, gbc.readMem(0xb160));
        // 16 0226
        gbc.setState(0x547f, 0x41cf, 0xc220, 0x7f6f, 0xc3fc, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0x547f, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x41cf, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0227
        gbc.setState(0x438f, 0x575c, 0x7a40, 0x7953, 0x372c, 0x8030, 0x0, 0x0);
        gbc.writeMem(0x438f, { 0x16, 0xce });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0x4391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0228
        gbc.setState(0xa875, 0xe788, 0x7d20, 0x6c7e, 0xc6f2, 0xc699, 0x1, 0x1);
        gbc.writeMem(0xa875, { 0x16, 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0xa877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa875));
        EXPECT(0x7d, gbc.readMem(0xa876));
        // 16 0229
        gbc.setState(0x5dee, 0x78ca, 0x8eb0, 0xaa03, 0x63cc, 0xf41c, 0x0, 0x1);
        gbc.writeMem(0x5dee, { 0x16, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 022A
        gbc.setState(0x23ea, 0x2d1e, 0xe250, 0xb835, 0xfaf4, 0x103c, 0x0, 0x0);
        gbc.writeMem(0x23ea, { 0x16, 0xaa });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d1e, gbc.sp());
        EXPECT(0x23ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 022B
        gbc.setState(0x2e9f, 0xc5be, 0xc040, 0xb121, 0xbc8e, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0x2e9f, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc5be, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 022C
        gbc.setState(0x2a56, 0xcac0, 0x55f0, 0x6020, 0x4690, 0xe270, 0x0, 0x1);
        gbc.writeMem(0x2a56, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 022D
        gbc.setState(0xc36, 0x1f99, 0xd430, 0xdf10, 0x7bb9, 0x7852, 0x0, 0x0);
        gbc.writeMem(0xc36, { 0x16, 0x14 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f99, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 022E
        gbc.setState(0x101c, 0xc2ab, 0x9f80, 0xbc8c, 0x7491, 0x8e4e, 0x0, 0x1);
        gbc.writeMem(0x101c, { 0x16, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x101e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 022F
        gbc.setState(0x95b8, 0xafa8, 0x4840, 0xce6e, 0x56d4, 0xd2f9, 0x0, 0x1);
        gbc.writeMem(0x95b8, { 0x16, 0x14 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x95b8));
        EXPECT(0x14, gbc.readMem(0x95b9));
        // 16 0230
        gbc.setState(0xe33a, 0xca12, 0x7300, 0x6d5c, 0x80aa, 0xf0d7, 0x1, 0x0);
        gbc.writeMem(0xe33a, { 0x16, 0xe1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xca12, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe33a));
        EXPECT(0xe1, gbc.readMem(0xe33b));
        // 16 0231
        gbc.setState(0xef2e, 0x37c5, 0xf9f0, 0x700e, 0xcadf, 0xc3f5, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0x16, 0x81 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x37c5, gbc.sp());
        EXPECT(0xef30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xef2e));
        EXPECT(0x81, gbc.readMem(0xef2f));
        // 16 0232
        gbc.setState(0x1d4e, 0x258d, 0xa4d0, 0xf88a, 0x5593, 0xba0e, 0x0, 0x1);
        gbc.writeMem(0x1d4e, { 0x16, 0x3b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x258d, gbc.sp());
        EXPECT(0x1d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0233
        gbc.setState(0x393e, 0x922e, 0x3b90, 0xefe2, 0x5726, 0x6446, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x16, 0x13 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x922e, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0234
        gbc.setState(0xa933, 0x8f2f, 0xa4c0, 0x7371, 0x255d, 0x4dfc, 0x0, 0x1);
        gbc.writeMem(0xa933, { 0x16, 0xb1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa933));
        EXPECT(0xb1, gbc.readMem(0xa934));
        // 16 0235
        gbc.setState(0x2853, 0xcb9f, 0x8a80, 0x8057, 0xa55c, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0x2853, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0x2855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0236
        gbc.setState(0x56a1, 0xf7a4, 0xd0a0, 0xaf19, 0x3c4f, 0x2fbc, 0x0, 0x0);
        gbc.writeMem(0x56a1, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf7a4, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0237
        gbc.setState(0xb1b3, 0xf2bb, 0x25a0, 0xd56a, 0xf8ba, 0x734a, 0x0, 0x0);
        gbc.writeMem(0xb1b3, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf2bb, gbc.sp());
        EXPECT(0xb1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb1b3));
        EXPECT(0xd2, gbc.readMem(0xb1b4));
        // 16 0238
        gbc.setState(0x8c81, 0xdd4c, 0xdd90, 0x7288, 0x2fd, 0x446b, 0x0, 0x1);
        gbc.writeMem(0x8c81, { 0x16, 0x8e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x8c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8c81));
        EXPECT(0x8e, gbc.readMem(0x8c82));
        // 16 0239
        gbc.setState(0xa28e, 0x45ae, 0xb3d0, 0x73de, 0x8882, 0x846b, 0x0, 0x0);
        gbc.writeMem(0xa28e, { 0x16, 0x8d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa28e));
        EXPECT(0x8d, gbc.readMem(0xa28f));
        // 16 023A
        gbc.setState(0x814e, 0xa9c4, 0xeb00, 0xb58e, 0xaad3, 0x443, 0x1, 0x1);
        gbc.writeMem(0x814e, { 0x16, 0x5e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x814e));
        EXPECT(0x5e, gbc.readMem(0x814f));
        // 16 023C
        gbc.setState(0x5553, 0x47e2, 0x6060, 0x31a8, 0x48d1, 0xb31a, 0x1, 0x1);
        gbc.writeMem(0x5553, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x47e2, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 023D
        gbc.setState(0x3274, 0x33ad, 0x7ed0, 0x3a7c, 0x1ef7, 0x2feb, 0x0, 0x0);
        gbc.writeMem(0x3274, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0x3276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 023E
        gbc.setState(0x88d2, 0xbf04, 0x4350, 0x1197, 0x3ceb, 0x5ab9, 0x1, 0x0);
        gbc.writeMem(0x88d2, { 0x16, 0xd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbf04, gbc.sp());
        EXPECT(0x88d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x88d2));
        EXPECT(0xd, gbc.readMem(0x88d3));
        // 16 023F
        gbc.setState(0x38ad, 0x23e9, 0xa780, 0x32a2, 0x444f, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x38ad, { 0x16, 0xdf });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0x38af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0240
        gbc.setState(0xb4fe, 0xed7b, 0x5010, 0x51f3, 0xaff9, 0x1eab, 0x0, 0x0);
        gbc.writeMem(0xb4fe, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0xb500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb4fe));
        EXPECT(0xd0, gbc.readMem(0xb4ff));
        // 16 0241
        gbc.setState(0xbcc9, 0x517e, 0x2d70, 0x97f1, 0x86c3, 0xac99, 0x1, 0x0);
        gbc.writeMem(0xbcc9, { 0x16, 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbcc9));
        EXPECT(0x7d, gbc.readMem(0xbcca));
        // 16 0242
        gbc.setState(0xd8a2, 0x818b, 0x8ff0, 0xa364, 0x64e1, 0xbc37, 0x0, 0x1);
        gbc.writeMem(0xd8a2, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x818b, gbc.sp());
        EXPECT(0xd8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd8a2));
        EXPECT(0xc7, gbc.readMem(0xd8a3));
        // 16 0243
        gbc.setState(0x8011, 0xf3e9, 0xc750, 0x6431, 0xc63d, 0xdc72, 0x0, 0x0);
        gbc.writeMem(0x8011, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8011));
        EXPECT(0x38, gbc.readMem(0x8012));
        // 16 0244
        gbc.setState(0x1268, 0xd745, 0x47c0, 0x5b45, 0x422a, 0x74cf, 0x1, 0x0);
        gbc.writeMem(0x1268, { 0x16, 0xca });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd745, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0245
        gbc.setState(0x9523, 0x7981, 0x6760, 0x6e3e, 0x1103, 0xa2d8, 0x1, 0x0);
        gbc.writeMem(0x9523, { 0x16, 0xeb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0x9525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9523));
        EXPECT(0xeb, gbc.readMem(0x9524));
        // 16 0246
        gbc.setState(0x4968, 0x7e7f, 0x4e20, 0x5e4d, 0x2bde, 0x22f2, 0x1, 0x0);
        gbc.writeMem(0x4968, { 0x16, 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7e7f, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0247
        gbc.setState(0xbf5, 0xc6d2, 0xe4a0, 0xbf77, 0x5e87, 0xdd00, 0x0, 0x1);
        gbc.writeMem(0xbf5, { 0x16, 0x77 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc6d2, gbc.sp());
        EXPECT(0xbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0248
        gbc.setState(0xa3bc, 0xfdba, 0x97d0, 0xb795, 0xcb82, 0xf38c, 0x1, 0x1);
        gbc.writeMem(0xa3bc, { 0x16, 0xbc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfdba, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa3bc));
        EXPECT(0xbc, gbc.readMem(0xa3bd));
        // 16 0249
        gbc.setState(0x3a42, 0x5802, 0xd840, 0x783b, 0x637, 0xd7d6, 0x1, 0x1);
        gbc.writeMem(0x3a42, { 0x16, 0xcd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0x3a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 024A
        gbc.setState(0x98b3, 0x3931, 0xc860, 0x5187, 0xc5ca, 0xaea9, 0x0, 0x1);
        gbc.writeMem(0x98b3, { 0x16, 0x7e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0x98b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x98b3));
        EXPECT(0x7e, gbc.readMem(0x98b4));
        // 16 024B
        gbc.setState(0x2723, 0xf8c, 0x5b60, 0xe18f, 0xb09, 0x214a, 0x0, 0x0);
        gbc.writeMem(0x2723, { 0x16, 0x87 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf8c, gbc.sp());
        EXPECT(0x2725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 024C
        gbc.setState(0x3d69, 0x516c, 0xdfd0, 0x2602, 0xbcfe, 0xab9d, 0x1, 0x1);
        gbc.writeMem(0x3d69, { 0x16, 0x82 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x516c, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 024D
        gbc.setState(0x6e96, 0xf3e7, 0x7a60, 0x8858, 0x5101, 0xd59f, 0x1, 0x0);
        gbc.writeMem(0x6e96, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf3e7, gbc.sp());
        EXPECT(0x6e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 024E
        gbc.setState(0x53f9, 0x2831, 0xe270, 0xc4bb, 0xee83, 0x2252, 0x0, 0x0);
        gbc.writeMem(0x53f9, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 024F
        gbc.setState(0x51b0, 0x8d75, 0x9320, 0x6821, 0x7ea6, 0xc0a5, 0x0, 0x0);
        gbc.writeMem(0x51b0, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x51b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0250
        gbc.setState(0x6042, 0x1e22, 0x4ae0, 0x60ec, 0xaa92, 0x854c, 0x1, 0x1);
        gbc.writeMem(0x6042, { 0x16, 0x6b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0251
        gbc.setState(0x8c19, 0x652f, 0xdab0, 0xb904, 0x4eea, 0x1e97, 0x1, 0x0);
        gbc.writeMem(0x8c19, { 0x16, 0x52 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8c19));
        EXPECT(0x52, gbc.readMem(0x8c1a));
        // 16 0252
        gbc.setState(0x5cc4, 0x6c04, 0xf0e0, 0x9bef, 0xbf0e, 0x1211, 0x1, 0x1);
        gbc.writeMem(0x5cc4, { 0x16, 0x77 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c04, gbc.sp());
        EXPECT(0x5cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0253
        gbc.setState(0xe0c, 0x71ed, 0xdaa0, 0x9099, 0xd8d3, 0x4abe, 0x1, 0x1);
        gbc.writeMem(0xe0c, { 0x16, 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x71ed, gbc.sp());
        EXPECT(0xe0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0254
        gbc.setState(0x8ffa, 0xf99e, 0x6260, 0x8750, 0xc33f, 0xce06, 0x1, 0x0);
        gbc.writeMem(0x8ffa, { 0x16, 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf99e, gbc.sp());
        EXPECT(0x8ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8ffa));
        EXPECT(0x95, gbc.readMem(0x8ffb));
        // 16 0255
        gbc.setState(0x7ad, 0xfc4a, 0xf0b0, 0xabbb, 0x3dbb, 0x6e59, 0x0, 0x1);
        gbc.writeMem(0x7ad, { 0x16, 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfc4a, gbc.sp());
        EXPECT(0x7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0256
        gbc.setState(0x57c1, 0xce41, 0xa620, 0x70e1, 0xa0f7, 0x1dd9, 0x0, 0x0);
        gbc.writeMem(0x57c1, { 0x16, 0x3a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0x57c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0257
        gbc.setState(0xc4e7, 0x3225, 0x36b0, 0x71bd, 0xd01e, 0x4a3e, 0x1, 0x0);
        gbc.writeMem(0xc4e7, { 0x16, 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3225, gbc.sp());
        EXPECT(0xc4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc4e7));
        EXPECT(0x55, gbc.readMem(0xc4e8));
        // 16 0258
        gbc.setState(0x7a93, 0x8806, 0xaab0, 0x6fa2, 0x5fda, 0xa109, 0x1, 0x0);
        gbc.writeMem(0x7a93, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8806, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0259
        gbc.setState(0xb835, 0x5b1a, 0xec50, 0x4e3c, 0xf48e, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0xb835, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5b1a, gbc.sp());
        EXPECT(0xb837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb835));
        EXPECT(0xd9, gbc.readMem(0xb836));
        // 16 025A
        gbc.setState(0xc815, 0x3ca8, 0x270, 0x4b56, 0x17f8, 0xaeda, 0x0, 0x0);
        gbc.writeMem(0xc815, { 0x16, 0x3f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3ca8, gbc.sp());
        EXPECT(0xc817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc815));
        EXPECT(0x3f, gbc.readMem(0xc816));
        // 16 025B
        gbc.setState(0xcd20, 0xc54c, 0x12a0, 0xf107, 0x83a3, 0x6c89, 0x0, 0x1);
        gbc.writeMem(0xcd20, { 0x16, 0xb6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc54c, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcd20));
        EXPECT(0xb6, gbc.readMem(0xcd21));
        // 16 025C
        gbc.setState(0x231f, 0xf81, 0x4a50, 0xe0f8, 0x4608, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 025D
        gbc.setState(0x63c6, 0xc3f4, 0x4c80, 0x7fc, 0x58ce, 0x4372, 0x0, 0x0);
        gbc.writeMem(0x63c6, { 0x16, 0x98 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc3f4, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 025E
        gbc.setState(0xd35b, 0xcc3, 0x620, 0x6af0, 0xe4a, 0x6af, 0x1, 0x0);
        gbc.writeMem(0xd35b, { 0x16, 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0xd35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd35b));
        EXPECT(0x7d, gbc.readMem(0xd35c));
        // 16 025F
        gbc.setState(0x2094, 0xe33b, 0xc000, 0xe187, 0x4db5, 0x1d7d, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0x2096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0260
        gbc.setState(0x4a02, 0x3592, 0x6280, 0xd235, 0x7895, 0x9630, 0x1, 0x1);
        gbc.writeMem(0x4a02, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3592, gbc.sp());
        EXPECT(0x4a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0261
        gbc.setState(0xa51a, 0xfbe3, 0x92b0, 0x5818, 0x3c33, 0xd76a, 0x0, 0x1);
        gbc.writeMem(0xa51a, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfbe3, gbc.sp());
        EXPECT(0xa51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa51a));
        EXPECT(0xd1, gbc.readMem(0xa51b));
        // 16 0262
        gbc.setState(0x83dd, 0xb1bd, 0xa780, 0xff3e, 0xe20c, 0x4cae, 0x0, 0x1);
        gbc.writeMem(0x83dd, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb1bd, gbc.sp());
        EXPECT(0x83df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x83dd));
        EXPECT(0xb2, gbc.readMem(0x83de));
        // 16 0263
        gbc.setState(0x73db, 0xa46d, 0xf830, 0xd06a, 0x5e34, 0x2450, 0x0, 0x1);
        gbc.writeMem(0x73db, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa46d, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0264
        gbc.setState(0xb723, 0xb709, 0x91c0, 0x26fa, 0x30ac, 0x2f1c, 0x1, 0x0);
        gbc.writeMem(0xb723, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0xb725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb723));
        EXPECT(0x5a, gbc.readMem(0xb724));
        // 16 0265
        gbc.setState(0xadca, 0x3b27, 0xe2e0, 0x9de5, 0xb89d, 0xe721, 0x0, 0x0);
        gbc.writeMem(0xadca, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3b27, gbc.sp());
        EXPECT(0xadcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xadca));
        EXPECT(0xa4, gbc.readMem(0xadcb));
        // 16 0266
        gbc.setState(0xe5f2, 0xe209, 0x6230, 0x334c, 0x72fd, 0x2445, 0x0, 0x0);
        gbc.writeMem(0xe5f2, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe209, gbc.sp());
        EXPECT(0xe5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe5f2));
        EXPECT(0xe9, gbc.readMem(0xe5f3));
        // 16 0267
        gbc.setState(0xafba, 0x40ff, 0x9240, 0xba4c, 0xc88e, 0xd817, 0x0, 0x0);
        gbc.writeMem(0xafba, { 0x16, 0xcf });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0xafbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xafba));
        EXPECT(0xcf, gbc.readMem(0xafbb));
        // 16 0268
        gbc.setState(0xa179, 0xea21, 0x870, 0xe1a4, 0x498e, 0x487d, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0x16, 0x86 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xea21, gbc.sp());
        EXPECT(0xa17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa179));
        EXPECT(0x86, gbc.readMem(0xa17a));
        // 16 0269
        gbc.setState(0x511c, 0xf6a0, 0x31a0, 0xb24c, 0x18b2, 0x3c89, 0x0, 0x0);
        gbc.writeMem(0x511c, { 0x16, 0xe4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x511e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 026A
        gbc.setState(0x2c5e, 0x79ca, 0xbed0, 0xd26e, 0xbba0, 0xab5f, 0x0, 0x1);
        gbc.writeMem(0x2c5e, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 026B
        gbc.setState(0x7ae7, 0xd492, 0xd420, 0xf6f7, 0xa018, 0x2adf, 0x0, 0x1);
        gbc.writeMem(0x7ae7, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 026C
        gbc.setState(0xeb47, 0xa57, 0x44b0, 0x42f3, 0x13f4, 0x24f4, 0x1, 0x0);
        gbc.writeMem(0xeb47, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa57, gbc.sp());
        EXPECT(0xeb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb47));
        EXPECT(0xa0, gbc.readMem(0xeb48));
        // 16 026D
        gbc.setState(0xbd2c, 0xea19, 0x4910, 0x7f63, 0xc252, 0x105e, 0x0, 0x1);
        gbc.writeMem(0xbd2c, { 0x16, 0x1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xea19, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbd2c));
        EXPECT(0x1, gbc.readMem(0xbd2d));
        // 16 026E
        gbc.setState(0x244b, 0x12ac, 0xe4c0, 0x989b, 0xa113, 0xe5f0, 0x0, 0x1);
        gbc.writeMem(0x244b, { 0x16, 0x49 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x12ac, gbc.sp());
        EXPECT(0x244d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 026F
        gbc.setState(0xc95f, 0xf267, 0x7f40, 0x729a, 0x6415, 0x4b72, 0x1, 0x0);
        gbc.writeMem(0xc95f, { 0x16, 0xf5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf267, gbc.sp());
        EXPECT(0xc961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc95f));
        EXPECT(0xf5, gbc.readMem(0xc960));
        // 16 0270
        gbc.setState(0xa8ac, 0x4dd, 0x7930, 0xa94e, 0x1407, 0x7fbf, 0x0, 0x0);
        gbc.writeMem(0xa8ac, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4dd, gbc.sp());
        EXPECT(0xa8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa8ac));
        EXPECT(0x53, gbc.readMem(0xa8ad));
        // 16 0271
        gbc.setState(0xc1f0, 0x2cf9, 0x9b60, 0x9dc1, 0xd730, 0xc9a6, 0x0, 0x1);
        gbc.writeMem(0xc1f0, { 0x16, 0xec });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc1f0));
        EXPECT(0xec, gbc.readMem(0xc1f1));
        // 16 0272
        gbc.setState(0xb9e4, 0xf5df, 0x8cd0, 0xcf0f, 0xdd28, 0xcaec, 0x1, 0x1);
        gbc.writeMem(0xb9e4, { 0x16, 0x43 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb9e4));
        EXPECT(0x43, gbc.readMem(0xb9e5));
        // 16 0273
        gbc.setState(0x94cd, 0x4610, 0x7cb0, 0xda99, 0x91ba, 0xf1b7, 0x0, 0x1);
        gbc.writeMem(0x94cd, { 0x16, 0x78 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x94cd));
        EXPECT(0x78, gbc.readMem(0x94ce));
        // 16 0274
        gbc.setState(0xb043, 0xd793, 0x4c60, 0x64f9, 0xccb4, 0x7888, 0x0, 0x0);
        gbc.writeMem(0xb043, { 0x16, 0x7e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb043));
        EXPECT(0x7e, gbc.readMem(0xb044));
        // 16 0275
        gbc.setState(0x1323, 0x57ea, 0xae60, 0xe635, 0x1413, 0xe0fa, 0x0, 0x1);
        gbc.writeMem(0x1323, { 0x16, 0x18 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x57ea, gbc.sp());
        EXPECT(0x1325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0276
        gbc.setState(0xe69f, 0x912c, 0x3f00, 0xc9c1, 0x680d, 0x3517, 0x0, 0x1);
        gbc.writeMem(0xe69f, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x912c, gbc.sp());
        EXPECT(0xe6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe69f));
        EXPECT(0xd7, gbc.readMem(0xe6a0));
        // 16 0277
        gbc.setState(0x4816, 0xd61b, 0x6f20, 0xab1e, 0xe433, 0xf0be, 0x1, 0x0);
        gbc.writeMem(0x4816, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd61b, gbc.sp());
        EXPECT(0x4818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0278
        gbc.setState(0xeb6f, 0x418, 0xe6f0, 0x8adc, 0x9b0d, 0x91ee, 0x0, 0x0);
        gbc.writeMem(0xeb6f, { 0x16, 0xe5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb6f));
        EXPECT(0xe5, gbc.readMem(0xeb70));
        // 16 0279
        gbc.setState(0xbae9, 0x974e, 0x6850, 0xfcac, 0xe571, 0xa5d, 0x0, 0x1);
        gbc.writeMem(0xbae9, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0xbaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbae9));
        EXPECT(0xf1, gbc.readMem(0xbaea));
        // 16 027A
        gbc.setState(0xcb75, 0xcf9b, 0x5830, 0x7034, 0x70f7, 0xbddc, 0x0, 0x1);
        gbc.writeMem(0xcb75, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf9b, gbc.sp());
        EXPECT(0xcb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcb75));
        EXPECT(0xc9, gbc.readMem(0xcb76));
        // 16 027B
        gbc.setState(0x5edc, 0x30f1, 0x58b0, 0xd5fe, 0x6941, 0x8a2d, 0x1, 0x1);
        gbc.writeMem(0x5edc, { 0x16, 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x30f1, gbc.sp());
        EXPECT(0x5ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 027C
        gbc.setState(0xf00, 0x6863, 0x61c0, 0x4901, 0x2673, 0x3fe0, 0x0, 0x0);
        gbc.writeMem(0xf00, { 0x16, 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 027E
        gbc.setState(0xdd98, 0x65e2, 0x4bd0, 0x6003, 0x4fb9, 0x25ba, 0x0, 0x1);
        gbc.writeMem(0xdd98, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x65e2, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdd98));
        EXPECT(0xc3, gbc.readMem(0xdd99));
        // 16 027F
        gbc.setState(0x7209, 0x84c4, 0x2220, 0xe292, 0xb01, 0xa4ff, 0x1, 0x1);
        gbc.writeMem(0x7209, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x84c4, gbc.sp());
        EXPECT(0x720b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0280
        gbc.setState(0x4983, 0x1f6e, 0x6940, 0xe212, 0x2492, 0x9734, 0x1, 0x1);
        gbc.writeMem(0x4983, { 0x16, 0xf9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0x4985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0282
        gbc.setState(0x119d, 0xf01f, 0xe7d0, 0x9b06, 0xe8f5, 0xde51, 0x1, 0x1);
        gbc.writeMem(0x119d, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0283
        gbc.setState(0xc4a4, 0x2693, 0xc4d0, 0x694, 0xdf07, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0xc4a4, { 0x16, 0x76 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2693, gbc.sp());
        EXPECT(0xc4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc4a4));
        EXPECT(0x76, gbc.readMem(0xc4a5));
        // 16 0284
        gbc.setState(0xd182, 0x3c53, 0xe0, 0xde27, 0xdd3e, 0x783c, 0x0, 0x0);
        gbc.writeMem(0xd182, { 0x16, 0x96 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0xd184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd182));
        EXPECT(0x96, gbc.readMem(0xd183));
        // 16 0285
        gbc.setState(0x9cc, 0x43ee, 0xd150, 0x65d, 0x6249, 0x8b39, 0x1, 0x1);
        gbc.writeMem(0x9cc, { 0x16, 0x6c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x43ee, gbc.sp());
        EXPECT(0x9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0286
        gbc.setState(0x3105, 0x317b, 0xd640, 0xdd28, 0xefa8, 0xbb1a, 0x1, 0x0);
        gbc.writeMem(0x3105, { 0x16, 0x12 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0x3107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0287
        gbc.setState(0x60ed, 0xa991, 0x9c0, 0x229e, 0x1399, 0x4d4e, 0x0, 0x1);
        gbc.writeMem(0x60ed, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0x60ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0288
        gbc.setState(0x8c33, 0x19aa, 0xa660, 0xd6e8, 0x4b6e, 0x6457, 0x0, 0x1);
        gbc.writeMem(0x8c33, { 0x16, 0x1c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0x8c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8c33));
        EXPECT(0x1c, gbc.readMem(0x8c34));
        // 16 0289
        gbc.setState(0x89d0, 0xcaf6, 0x58e0, 0xa12f, 0x1692, 0xf125, 0x0, 0x0);
        gbc.writeMem(0x89d0, { 0x16, 0x19 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x89d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x89d0));
        EXPECT(0x19, gbc.readMem(0x89d1));
        // 16 028A
        gbc.setState(0xb203, 0x6a49, 0x7fb0, 0xbd8c, 0x4db5, 0xe367, 0x0, 0x1);
        gbc.writeMem(0xb203, { 0x16, 0xfe });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0xb205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb203));
        EXPECT(0xfe, gbc.readMem(0xb204));
        // 16 028B
        gbc.setState(0x1a8a, 0x1493, 0x9a20, 0xef46, 0x1b35, 0xefff, 0x0, 0x1);
        gbc.writeMem(0x1a8a, { 0x16, 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1493, gbc.sp());
        EXPECT(0x1a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 028C
        gbc.setState(0xb894, 0x4fc9, 0x8f30, 0x55d2, 0xdeb9, 0xbd2a, 0x0, 0x0);
        gbc.writeMem(0xb894, { 0x16, 0x58 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb894));
        EXPECT(0x58, gbc.readMem(0xb895));
        // 16 028D
        gbc.setState(0xef4b, 0x50c7, 0x80b0, 0xd114, 0x49db, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0xef4b, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x50c7, gbc.sp());
        EXPECT(0xef4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xef4b));
        EXPECT(0xc3, gbc.readMem(0xef4c));
        // 16 028E
        gbc.setState(0x9f92, 0xb53a, 0xeb0, 0xfd27, 0xf015, 0x9510, 0x1, 0x1);
        gbc.writeMem(0x9f92, { 0x16, 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x9f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9f92));
        EXPECT(0x65, gbc.readMem(0x9f93));
        // 16 028F
        gbc.setState(0x5a, 0x91ce, 0x9f70, 0xeda8, 0x6f96, 0x9ca6, 0x1, 0x1);
        gbc.writeMem(0x5a, { 0x16, 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x91ce, gbc.sp());
        EXPECT(0x5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0290
        gbc.setState(0x3b9f, 0xccca, 0x8330, 0xad47, 0x7b39, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0x3b9f, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x3ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0291
        gbc.setState(0x2236, 0x6e7d, 0xba80, 0xe62f, 0x3b5e, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0x2236, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0292
        gbc.setState(0xb610, 0x8211, 0xbae0, 0x32b9, 0x7581, 0x2bbd, 0x1, 0x1);
        gbc.writeMem(0xb610, { 0x16, 0xe4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8211, gbc.sp());
        EXPECT(0xb612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb610));
        EXPECT(0xe4, gbc.readMem(0xb611));
        // 16 0293
        gbc.setState(0x25dc, 0xb972, 0x4760, 0x2467, 0x423c, 0x50c9, 0x1, 0x1);
        gbc.writeMem(0x25dc, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb972, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0294
        gbc.setState(0xdee4, 0x1c40, 0xca60, 0xf138, 0xd20c, 0x8671, 0x1, 0x1);
        gbc.writeMem(0xdee4, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdee4));
        EXPECT(0xb7, gbc.readMem(0xdee5));
        // 16 0295
        gbc.setState(0xe7f1, 0x21, 0x2210, 0x4854, 0x8e47, 0x7ab4, 0x0, 0x0);
        gbc.writeMem(0xe7f1, { 0x16, 0xaf });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x21, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe7f1));
        EXPECT(0xaf, gbc.readMem(0xe7f2));
        // 16 0297
        gbc.setState(0xe88c, 0x76fb, 0x8930, 0xd6b5, 0xec70, 0x19fc, 0x1, 0x0);
        gbc.writeMem(0xe88c, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x76fb, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe88c));
        EXPECT(0xa1, gbc.readMem(0xe88d));
        // 16 0298
        gbc.setState(0xc065, 0x2767, 0xb80, 0x8bc0, 0x634b, 0xd38a, 0x0, 0x1);
        gbc.writeMem(0xc065, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2767, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc065));
        EXPECT(0x5b, gbc.readMem(0xc066));
        // 16 0299
        gbc.setState(0x3130, 0x2f7, 0x8f10, 0xe840, 0x9d0d, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x3130, { 0x16, 0xe8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2f7, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 029A
        gbc.setState(0xa7ab, 0xde7, 0x5260, 0x99bb, 0xc2a8, 0xc83b, 0x1, 0x1);
        gbc.writeMem(0xa7ab, { 0x16, 0x6c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xde7, gbc.sp());
        EXPECT(0xa7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa7ab));
        EXPECT(0x6c, gbc.readMem(0xa7ac));
        // 16 029B
        gbc.setState(0x10f7, 0x2c14, 0x3640, 0x6740, 0x36dc, 0x251, 0x0, 0x1);
        gbc.writeMem(0x10f7, { 0x16, 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2c14, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 029C
        gbc.setState(0x9664, 0x4c05, 0x3560, 0xc696, 0xf5b1, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x9664, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4c05, gbc.sp());
        EXPECT(0x9666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9664));
        EXPECT(0xf7, gbc.readMem(0x9665));
        // 16 029D
        gbc.setState(0x2b7a, 0x95cf, 0x5b20, 0x320b, 0x7562, 0x8399, 0x1, 0x0);
        gbc.writeMem(0x2b7a, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x2b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 029E
        gbc.setState(0xeb2c, 0x1736, 0x92a0, 0xbe0a, 0xd2f7, 0xb759, 0x0, 0x1);
        gbc.writeMem(0xeb2c, { 0x16, 0x99 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0xeb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb2c));
        EXPECT(0x99, gbc.readMem(0xeb2d));
        // 16 029F
        gbc.setState(0xba45, 0x2101, 0xb220, 0xc4a3, 0x803e, 0x21ab, 0x0, 0x1);
        gbc.writeMem(0xba45, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2101, gbc.sp());
        EXPECT(0xba47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xba45));
        EXPECT(0xf6, gbc.readMem(0xba46));
        // 16 02A0
        gbc.setState(0xbc88, 0x410e, 0xebf0, 0x58b4, 0xe20, 0x3a8f, 0x1, 0x0);
        gbc.writeMem(0xbc88, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0xbc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbc88));
        EXPECT(0x60, gbc.readMem(0xbc89));
        // 16 02A1
        gbc.setState(0x85b, 0xd585, 0x6320, 0x64a3, 0x6747, 0x4d7, 0x1, 0x0);
        gbc.writeMem(0x85b, { 0x16, 0x8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02A2
        gbc.setState(0x29f, 0x3a70, 0xe960, 0x5a22, 0xfaa5, 0xe4b2, 0x0, 0x0);
        gbc.writeMem(0x29f, { 0x16, 0x86 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3a70, gbc.sp());
        EXPECT(0x2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02A3
        gbc.setState(0xab9, 0x7601, 0xe2e0, 0xdc05, 0x234b, 0xbeec, 0x1, 0x1);
        gbc.writeMem(0xab9, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7601, gbc.sp());
        EXPECT(0xabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02A4
        gbc.setState(0xda42, 0x6072, 0xe200, 0x30b9, 0xc84f, 0x9708, 0x1, 0x0);
        gbc.writeMem(0xda42, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6072, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xda42));
        EXPECT(0x85, gbc.readMem(0xda43));
        // 16 02A5
        gbc.setState(0x5947, 0xef9b, 0xcf50, 0xa112, 0x3530, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x5947, { 0x16, 0x74 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xef9b, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02A6
        gbc.setState(0x6669, 0x5055, 0x2b90, 0xf454, 0xd143, 0xbc0, 0x0, 0x0);
        gbc.writeMem(0x6669, { 0x16, 0xdd });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5055, gbc.sp());
        EXPECT(0x666b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02A7
        gbc.setState(0x875e, 0x7fa4, 0x49f0, 0xe56a, 0x1ecd, 0xca48, 0x1, 0x0);
        gbc.writeMem(0x875e, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7fa4, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x875e));
        EXPECT(0xc3, gbc.readMem(0x875f));
        // 16 02A8
        gbc.setState(0x32ea, 0x548e, 0xf400, 0x5bdf, 0x8d46, 0xfb5a, 0x0, 0x1);
        gbc.writeMem(0x32ea, { 0x16, 0x74 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x548e, gbc.sp());
        EXPECT(0x32ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02A9
        gbc.setState(0x686e, 0xd815, 0x9010, 0x5397, 0xcc32, 0xe237, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd815, gbc.sp());
        EXPECT(0x6870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02AA
        gbc.setState(0xbd88, 0x8cc8, 0x4fe0, 0x2f90, 0x29a8, 0xbae, 0x1, 0x0);
        gbc.writeMem(0xbd88, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8cc8, gbc.sp());
        EXPECT(0xbd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbd88));
        EXPECT(0xc9, gbc.readMem(0xbd89));
        // 16 02AB
        gbc.setState(0x95d9, 0x4ce0, 0xd4a0, 0x6008, 0x1df3, 0x857e, 0x0, 0x1);
        gbc.writeMem(0x95d9, { 0x16, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4ce0, gbc.sp());
        EXPECT(0x95db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x95d9));
        EXPECT(0xc3, gbc.readMem(0x95da));
        // 16 02AC
        gbc.setState(0xe05e, 0x1317, 0x73f0, 0x2d89, 0x6d56, 0x3483, 0x0, 0x1);
        gbc.writeMem(0xe05e, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe05e));
        EXPECT(0xa1, gbc.readMem(0xe05f));
        // 16 02AD
        gbc.setState(0x1a56, 0xd177, 0x350, 0xfd7a, 0xec15, 0x71e2, 0x1, 0x1);
        gbc.writeMem(0x1a56, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02AE
        gbc.setState(0x274, 0x8bf0, 0x5c30, 0x531a, 0x9922, 0xbb33, 0x0, 0x1);
        gbc.writeMem(0x274, { 0x16, 0x22 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8bf0, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02AF
        gbc.setState(0x813a, 0x9d65, 0x9b0, 0x3781, 0x8963, 0x5d47, 0x0, 0x1);
        gbc.writeMem(0x813a, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9d65, gbc.sp());
        EXPECT(0x813c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x813a));
        EXPECT(0x3, gbc.readMem(0x813b));
        // 16 02B0
        gbc.setState(0x378d, 0x222c, 0xcce0, 0x537e, 0x3209, 0xa0b3, 0x1, 0x1);
        gbc.writeMem(0x378d, { 0x16, 0x87 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x222c, gbc.sp());
        EXPECT(0x378f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02B1
        gbc.setState(0xcdc4, 0xee55, 0xad10, 0xf6e4, 0x8c88, 0x6e68, 0x0, 0x1);
        gbc.writeMem(0xcdc4, { 0x16, 0x64 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xee55, gbc.sp());
        EXPECT(0xcdc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcdc4));
        EXPECT(0x64, gbc.readMem(0xcdc5));
        // 16 02B2
        gbc.setState(0x7dac, 0x5509, 0x1500, 0x247e, 0x7df3, 0x688f, 0x0, 0x1);
        gbc.writeMem(0x7dac, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5509, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02B4
        gbc.setState(0xc445, 0xb5dc, 0xa0a0, 0x7f23, 0xbd89, 0x13b, 0x1, 0x1);
        gbc.writeMem(0xc445, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0xc447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc445));
        EXPECT(0xc7, gbc.readMem(0xc446));
        // 16 02B5
        gbc.setState(0x4284, 0xe9f0, 0x1630, 0xfcc6, 0xe94d, 0xcd2f, 0x0, 0x0);
        gbc.writeMem(0x4284, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x4286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02B6
        gbc.setState(0x3fc6, 0x3282, 0x2d10, 0x1016, 0xed32, 0xfef1, 0x1, 0x1);
        gbc.writeMem(0x3fc6, { 0x16, 0xb8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0x3fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02B7
        gbc.setState(0xd304, 0x4276, 0xd000, 0xd0d1, 0x528a, 0xe55b, 0x1, 0x0);
        gbc.writeMem(0xd304, { 0x16, 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4276, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd304));
        EXPECT(0xa7, gbc.readMem(0xd305));
        // 16 02B8
        gbc.setState(0xc715, 0xb095, 0x9b30, 0xfc5d, 0x1f82, 0x4667, 0x1, 0x1);
        gbc.writeMem(0xc715, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb095, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc715));
        EXPECT(0x2b, gbc.readMem(0xc716));
        // 16 02B9
        gbc.setState(0xb2d5, 0x765d, 0x5e50, 0xc66a, 0x3357, 0xc504, 0x0, 0x1);
        gbc.writeMem(0xb2d5, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x765d, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb2d5));
        EXPECT(0xc0, gbc.readMem(0xb2d6));
        // 16 02BA
        gbc.setState(0x773c, 0x4c95, 0x9280, 0x9854, 0x9968, 0x9825, 0x1, 0x1);
        gbc.writeMem(0x773c, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c95, gbc.sp());
        EXPECT(0x773e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02BB
        gbc.setState(0xbdf7, 0x8a3e, 0xa630, 0xf87, 0xc95c, 0xa5ac, 0x0, 0x0);
        gbc.writeMem(0xbdf7, { 0x16, 0x29 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8a3e, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdf7));
        EXPECT(0x29, gbc.readMem(0xbdf8));
        // 16 02BC
        gbc.setState(0x32eb, 0xdc2a, 0x3660, 0xb453, 0x923e, 0x92ba, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0x16, 0x63 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdc2a, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02BD
        gbc.setState(0x7733, 0x540, 0xdce0, 0x9dc2, 0x1e6, 0x3939, 0x0, 0x1);
        gbc.writeMem(0x7733, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x540, gbc.sp());
        EXPECT(0x7735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02BE
        gbc.setState(0x1307, 0x9650, 0xe380, 0xb107, 0x1060, 0xc5f6, 0x0, 0x1);
        gbc.writeMem(0x1307, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x1309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02BF
        gbc.setState(0x838d, 0x71e, 0x34b0, 0xcf3e, 0x6b45, 0x2661, 0x0, 0x1);
        gbc.writeMem(0x838d, { 0x16, 0x16 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x71e, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x838d));
        EXPECT(0x16, gbc.readMem(0x838e));
        // 16 02C0
        gbc.setState(0x9166, 0xa2e7, 0x9950, 0xcaf1, 0x4683, 0x97ff, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0x16, 0x39 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa2e7, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9166));
        EXPECT(0x39, gbc.readMem(0x9167));
        // 16 02C1
        gbc.setState(0x9b82, 0x38bc, 0x32f0, 0x252a, 0x79e1, 0xad76, 0x1, 0x0);
        gbc.writeMem(0x9b82, { 0x16, 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x38bc, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9b82));
        EXPECT(0x6e, gbc.readMem(0x9b83));
        // 16 02C2
        gbc.setState(0x93c6, 0xb311, 0x4ed0, 0x127a, 0xa32d, 0x6547, 0x0, 0x1);
        gbc.writeMem(0x93c6, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb311, gbc.sp());
        EXPECT(0x93c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x93c6));
        EXPECT(0xd3, gbc.readMem(0x93c7));
        // 16 02C3
        gbc.setState(0x7c90, 0x9e42, 0x9710, 0xbbbc, 0x31a3, 0x8c6f, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0x16, 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e42, gbc.sp());
        EXPECT(0x7c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02C4
        gbc.setState(0x29c6, 0x6a61, 0xb80, 0x6130, 0x4468, 0xce64, 0x1, 0x0);
        gbc.writeMem(0x29c6, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6a61, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02C5
        gbc.setState(0x8432, 0xfd97, 0xe070, 0x147d, 0x8282, 0x2aa5, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0x16, 0x5c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8432));
        EXPECT(0x5c, gbc.readMem(0x8433));
        // 16 02C6
        gbc.setState(0xb409, 0xb54f, 0xd110, 0x649a, 0x7960, 0xdac3, 0x1, 0x0);
        gbc.writeMem(0xb409, { 0x16, 0xfa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0xb40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb409));
        EXPECT(0xfa, gbc.readMem(0xb40a));
        // 16 02C7
        gbc.setState(0x2ec2, 0x8d71, 0x4760, 0x830b, 0x3ba, 0x59ef, 0x0, 0x1);
        gbc.writeMem(0x2ec2, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8d71, gbc.sp());
        EXPECT(0x2ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02C8
        gbc.setState(0xe332, 0x56a8, 0xa1a0, 0x2ee5, 0x8c8a, 0x8cb1, 0x1, 0x1);
        gbc.writeMem(0xe332, { 0x16, 0xc7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x56a8, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe332));
        EXPECT(0xc7, gbc.readMem(0xe333));
        // 16 02C9
        gbc.setState(0xcb, 0xfa61, 0x7390, 0xaaf9, 0x1a0, 0x1977, 0x0, 0x0);
        gbc.writeMem(0xcb, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfa61, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02CA
        gbc.setState(0x118e, 0x99cc, 0x1260, 0x6668, 0xe760, 0x25aa, 0x0, 0x1);
        gbc.writeMem(0x118e, { 0x16, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x99cc, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02CB
        gbc.setState(0x190d, 0xf1e2, 0x32f0, 0xa964, 0xefa7, 0xfcc1, 0x0, 0x1);
        gbc.writeMem(0x190d, { 0x16, 0x78 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1e2, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02CC
        gbc.setState(0xaa9f, 0x3eba, 0xf040, 0xf44, 0x3453, 0x439e, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaa9f));
        EXPECT(0xa1, gbc.readMem(0xaaa0));
        // 16 02CD
        gbc.setState(0x1b1c, 0xff5d, 0xa740, 0xa7fd, 0x2836, 0x8593, 0x1, 0x1);
        gbc.writeMem(0x1b1c, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0x1b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02CE
        gbc.setState(0x1749, 0x1dbd, 0x88c0, 0xe6ba, 0xdcd0, 0xa60e, 0x0, 0x1);
        gbc.writeMem(0x1749, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1dbd, gbc.sp());
        EXPECT(0x174b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02CF
        gbc.setState(0x7d5c, 0x3762, 0xa400, 0x1a1a, 0x8b80, 0x27c, 0x0, 0x1);
        gbc.writeMem(0x7d5c, { 0x16, 0xb3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3762, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02D0
        gbc.setState(0xec83, 0x8411, 0xb130, 0x4ac1, 0xc464, 0xa422, 0x0, 0x0);
        gbc.writeMem(0xec83, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8411, gbc.sp());
        EXPECT(0xec85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec83));
        EXPECT(0xf4, gbc.readMem(0xec84));
        // 16 02D1
        gbc.setState(0xc91c, 0xb785, 0xa960, 0x50d5, 0xdd90, 0xfb09, 0x1, 0x1);
        gbc.writeMem(0xc91c, { 0x16, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0xc91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc91c));
        EXPECT(0x9c, gbc.readMem(0xc91d));
        // 16 02D2
        gbc.setState(0xa924, 0x51e7, 0xcb40, 0xb40f, 0xd1ae, 0xed6a, 0x0, 0x0);
        gbc.writeMem(0xa924, { 0x16, 0xdd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x51e7, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa924));
        EXPECT(0xdd, gbc.readMem(0xa925));
        // 16 02D3
        gbc.setState(0x9c63, 0xc363, 0x6380, 0x6c04, 0xfc30, 0x2e75, 0x0, 0x0);
        gbc.writeMem(0x9c63, { 0x16, 0x71 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc363, gbc.sp());
        EXPECT(0x9c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9c63));
        EXPECT(0x71, gbc.readMem(0x9c64));
        // 16 02D4
        gbc.setState(0x2f60, 0x701d, 0x4450, 0xc01d, 0x4dbe, 0xee37, 0x0, 0x1);
        gbc.writeMem(0x2f60, { 0x16, 0xe3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x701d, gbc.sp());
        EXPECT(0x2f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02D5
        gbc.setState(0xe996, 0x197a, 0x3780, 0xdb86, 0xe58a, 0x6098, 0x1, 0x1);
        gbc.writeMem(0xe996, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x197a, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe996));
        EXPECT(0x2, gbc.readMem(0xe997));
        // 16 02D6
        gbc.setState(0xa003, 0x4930, 0x7780, 0xf302, 0x157f, 0xd7c3, 0x0, 0x1);
        gbc.writeMem(0xa003, { 0x16, 0x8b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4930, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa003));
        EXPECT(0x8b, gbc.readMem(0xa004));
        // 16 02D7
        gbc.setState(0x42af, 0xd8d9, 0x30, 0x9e9e, 0x5cb4, 0x7056, 0x0, 0x1);
        gbc.writeMem(0x42af, { 0x16, 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02D8
        gbc.setState(0xa6ee, 0xb814, 0x25d0, 0x97e0, 0x453a, 0x4d03, 0x0, 0x1);
        gbc.writeMem(0xa6ee, { 0x16, 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb814, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa6ee));
        EXPECT(0x76, gbc.readMem(0xa6ef));
        // 16 02D9
        gbc.setState(0x767c, 0xec81, 0xb900, 0xdd70, 0x8c08, 0xf9f2, 0x1, 0x1);
        gbc.writeMem(0x767c, { 0x16, 0xc8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xec81, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02DA
        gbc.setState(0x71bb, 0x7445, 0x6850, 0xb44b, 0x9bc7, 0xc401, 0x1, 0x0);
        gbc.writeMem(0x71bb, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02DB
        gbc.setState(0x688a, 0xd81f, 0xbdc0, 0xdcb6, 0xb351, 0xee35, 0x1, 0x0);
        gbc.writeMem(0x688a, { 0x16, 0x7c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd81f, gbc.sp());
        EXPECT(0x688c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02DC
        gbc.setState(0x4a49, 0x755e, 0x1740, 0xd9cc, 0x3e3a, 0xb572, 0x1, 0x1);
        gbc.writeMem(0x4a49, { 0x16, 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x755e, gbc.sp());
        EXPECT(0x4a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02DD
        gbc.setState(0xc3a3, 0x9387, 0x4700, 0x40e, 0x2d8c, 0xd2ef, 0x0, 0x0);
        gbc.writeMem(0xc3a3, { 0x16, 0x2a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9387, gbc.sp());
        EXPECT(0xc3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc3a3));
        EXPECT(0x2a, gbc.readMem(0xc3a4));
        // 16 02DE
        gbc.setState(0x23c8, 0x5dfe, 0xa040, 0x145b, 0x46dd, 0x6961, 0x0, 0x0);
        gbc.writeMem(0x23c8, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5dfe, gbc.sp());
        EXPECT(0x23ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02DF
        gbc.setState(0x37e1, 0x32a8, 0xd5d0, 0x96e6, 0xa6bb, 0xbf5b, 0x1, 0x0);
        gbc.writeMem(0x37e1, { 0x16, 0x8e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02E0
        gbc.setState(0x7d7, 0x683b, 0xfcf0, 0x9db1, 0x16e4, 0x3ae3, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0x16, 0x9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x683b, gbc.sp());
        EXPECT(0x7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02E1
        gbc.setState(0x3d4c, 0xc5d1, 0x230, 0x2251, 0x8e62, 0xb14, 0x1, 0x0);
        gbc.writeMem(0x3d4c, { 0x16, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc5d1, gbc.sp());
        EXPECT(0x3d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02E2
        gbc.setState(0x19c4, 0x3119, 0x4620, 0xa890, 0x379d, 0x300a, 0x1, 0x1);
        gbc.writeMem(0x19c4, { 0x16, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3119, gbc.sp());
        EXPECT(0x19c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02E3
        gbc.setState(0xbe1a, 0x976, 0xa0, 0x29db, 0x87aa, 0x1917, 0x1, 0x1);
        gbc.writeMem(0xbe1a, { 0x16, 0xed });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x976, gbc.sp());
        EXPECT(0xbe1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbe1a));
        EXPECT(0xed, gbc.readMem(0xbe1b));
        // 16 02E4
        gbc.setState(0xd132, 0xf638, 0x2d50, 0x826, 0xd562, 0xd50d, 0x0, 0x0);
        gbc.writeMem(0xd132, { 0x16, 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf638, gbc.sp());
        EXPECT(0xd134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd132));
        EXPECT(0x37, gbc.readMem(0xd133));
        // 16 02E6
        gbc.setState(0x2979, 0x8e6d, 0x5c0, 0xa52a, 0xae95, 0x18ef, 0x0, 0x1);
        gbc.writeMem(0x2979, { 0x16, 0xae });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8e6d, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02E7
        gbc.setState(0x897e, 0xf235, 0x2ca0, 0x9078, 0xbd31, 0x5cfb, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0x16, 0x86 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0x8980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x897e));
        EXPECT(0x86, gbc.readMem(0x897f));
        // 16 02E8
        gbc.setState(0x1ba3, 0x2d, 0xcf20, 0xd010, 0xa9f8, 0x3c05, 0x1, 0x0);
        gbc.writeMem(0x1ba3, { 0x16, 0x75 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2d, gbc.sp());
        EXPECT(0x1ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02E9
        gbc.setState(0x4fdd, 0xb26d, 0xd7c0, 0xb124, 0xa5fd, 0x86a2, 0x0, 0x1);
        gbc.writeMem(0x4fdd, { 0x16, 0x83 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb26d, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02EA
        gbc.setState(0xbdca, 0x96e, 0x2090, 0x1559, 0xc3e8, 0xe2c1, 0x0, 0x1);
        gbc.writeMem(0xbdca, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x96e, gbc.sp());
        EXPECT(0xbdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdca));
        EXPECT(0xd3, gbc.readMem(0xbdcb));
        // 16 02EB
        gbc.setState(0xaf62, 0xee5a, 0x13f0, 0xf607, 0xbd9, 0xa6d4, 0x1, 0x1);
        gbc.writeMem(0xaf62, { 0x16, 0xb2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xee5a, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaf62));
        EXPECT(0xb2, gbc.readMem(0xaf63));
        // 16 02ED
        gbc.setState(0x4e15, 0xca09, 0x9770, 0xf0dc, 0xb662, 0x3ee2, 0x1, 0x0);
        gbc.writeMem(0x4e15, { 0x16, 0x73 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca09, gbc.sp());
        EXPECT(0x4e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02EE
        gbc.setState(0x6d53, 0xd7d8, 0x6a30, 0xfe52, 0xcf50, 0xbf99, 0x0, 0x1);
        gbc.writeMem(0x6d53, { 0x16, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02EF
        gbc.setState(0x8fec, 0xe947, 0x4e30, 0xd89, 0x52f0, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x8fec, { 0x16, 0xc1 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe947, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8fec));
        EXPECT(0xc1, gbc.readMem(0x8fed));
        // 16 02F0
        gbc.setState(0x13fb, 0x585b, 0x6ec0, 0x246c, 0x9ef7, 0xaad3, 0x1, 0x0);
        gbc.writeMem(0x13fb, { 0x16, 0xf6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x585b, gbc.sp());
        EXPECT(0x13fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02F1
        gbc.setState(0xc702, 0xbd35, 0xea90, 0x899, 0x8adf, 0xf209, 0x0, 0x1);
        gbc.writeMem(0xc702, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc702));
        EXPECT(0xd2, gbc.readMem(0xc703));
        // 16 02F2
        gbc.setState(0xee73, 0x2698, 0x8410, 0xb8e0, 0x9c98, 0x4b3, 0x0, 0x1);
        gbc.writeMem(0xee73, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2698, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xee73));
        EXPECT(0x2b, gbc.readMem(0xee74));
        // 16 02F3
        gbc.setState(0x379f, 0x1bb8, 0xc450, 0x4464, 0x3767, 0xe120, 0x1, 0x0);
        gbc.writeMem(0x379f, { 0x16, 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0x37a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02F4
        gbc.setState(0xc020, 0xa789, 0x9ee0, 0x9d2b, 0xb994, 0xf9e6, 0x1, 0x0);
        gbc.writeMem(0xc020, { 0x16, 0x65 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa789, gbc.sp());
        EXPECT(0xc022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc020));
        EXPECT(0x65, gbc.readMem(0xc021));
        // 16 02F5
        gbc.setState(0xa824, 0x6092, 0xcd30, 0x52bf, 0xffd5, 0xd71e, 0x0, 0x1);
        gbc.writeMem(0xa824, { 0x16, 0xab });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6092, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa824));
        EXPECT(0xab, gbc.readMem(0xa825));
        // 16 02F6
        gbc.setState(0xbd6c, 0x3c42, 0xcda0, 0xa34, 0x1a41, 0xcc9a, 0x1, 0x0);
        gbc.writeMem(0xbd6c, { 0x16, 0x69 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3c42, gbc.sp());
        EXPECT(0xbd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbd6c));
        EXPECT(0x69, gbc.readMem(0xbd6d));
        // 16 02F7
        gbc.setState(0x7192, 0x7f25, 0x1800, 0xb7bd, 0x8c3e, 0xab4c, 0x1, 0x0);
        gbc.writeMem(0x7192, { 0x16, 0xee });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7f25, gbc.sp());
        EXPECT(0x7194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02F8
        gbc.setState(0xca9b, 0x41bc, 0xf750, 0xaa66, 0x876, 0xd723, 0x1, 0x0);
        gbc.writeMem(0xca9b, { 0x16, 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x41bc, gbc.sp());
        EXPECT(0xca9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xca9b));
        EXPECT(0x61, gbc.readMem(0xca9c));
        // 16 02F9
        gbc.setState(0x7dc7, 0xe00f, 0xdb70, 0xcf75, 0x6200, 0xd7f3, 0x0, 0x1);
        gbc.writeMem(0x7dc7, { 0x16, 0xd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0x7dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02FA
        gbc.setState(0x231a, 0x3d2b, 0x5390, 0xb3d6, 0x9086, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0x231a, { 0x16, 0x1a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0x231c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02FB
        gbc.setState(0xb11, 0x9641, 0x4bf0, 0x485f, 0xcff, 0xb68e, 0x1, 0x1);
        gbc.writeMem(0xb11, { 0x16, 0x3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9641, gbc.sp());
        EXPECT(0xb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02FC
        gbc.setState(0xfc4, 0xf2b9, 0x4e80, 0x5320, 0xba0a, 0x1e03, 0x1, 0x1);
        gbc.writeMem(0xfc4, { 0x16, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf2b9, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 02FD
        gbc.setState(0x43be, 0xbead, 0x6b0, 0x6460, 0x3c82, 0xa146, 0x1, 0x0);
        gbc.writeMem(0x43be, { 0x16, 0x39 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbead, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02FE
        gbc.setState(0x2cd7, 0x93a1, 0xc0f0, 0x513b, 0x51ab, 0x56e2, 0x0, 0x1);
        gbc.writeMem(0x2cd7, { 0x16, 0x3b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0x2cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 02FF
        gbc.setState(0xc7a5, 0xde52, 0x9000, 0x858d, 0xee3a, 0x1018, 0x0, 0x1);
        gbc.writeMem(0xc7a5, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xde52, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc7a5));
        EXPECT(0xc2, gbc.readMem(0xc7a6));
        // 16 0301
        gbc.setState(0x69ef, 0xcb76, 0xfca0, 0xad6a, 0xce6c, 0xac44, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0x16, 0x9d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcb76, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0302
        gbc.setState(0x82bc, 0x548e, 0x3d0, 0xdded, 0xe330, 0x2810, 0x0, 0x1);
        gbc.writeMem(0x82bc, { 0x16, 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x548e, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x82bc));
        EXPECT(0xb7, gbc.readMem(0x82bd));
        // 16 0303
        gbc.setState(0x27cc, 0x6df6, 0xd4c0, 0x47c9, 0x154f, 0x7aab, 0x0, 0x1);
        gbc.writeMem(0x27cc, { 0x16, 0xf0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6df6, gbc.sp());
        EXPECT(0x27ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0304
        gbc.setState(0xe3fe, 0x5b27, 0xedd0, 0x3861, 0x9dc5, 0x4a16, 0x0, 0x0);
        gbc.writeMem(0xe3fe, { 0x16, 0x5f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5b27, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe3fe));
        EXPECT(0x5f, gbc.readMem(0xe3ff));
        // 16 0305
        gbc.setState(0x230a, 0x2b8, 0xab40, 0x8ffe, 0x8dcd, 0xa92f, 0x0, 0x0);
        gbc.writeMem(0x230a, { 0x16, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0306
        gbc.setState(0x74c0, 0x8a92, 0x5010, 0x8955, 0x147c, 0x5860, 0x0, 0x1);
        gbc.writeMem(0x74c0, { 0x16, 0x30 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a92, gbc.sp());
        EXPECT(0x74c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0307
        gbc.setState(0x9363, 0x6929, 0x1490, 0xb3e1, 0xbf43, 0x8a1f, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6929, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9363));
        EXPECT(0x72, gbc.readMem(0x9364));
        // 16 0308
        gbc.setState(0xc0b2, 0x6bd4, 0xf460, 0xdb6, 0x3866, 0xaef, 0x1, 0x0);
        gbc.writeMem(0xc0b2, { 0x16, 0x42 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc0b2));
        EXPECT(0x42, gbc.readMem(0xc0b3));
        // 16 0309
        gbc.setState(0x9db, 0x4c54, 0x18a0, 0xd47a, 0x380b, 0x49d9, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0x16, 0xde });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0x9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 030A
        gbc.setState(0x2d0, 0x5542, 0xb7c0, 0x5012, 0x4d0e, 0xd10d, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0x16, 0xaf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5542, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 030B
        gbc.setState(0x1963, 0x363c, 0x2710, 0x3142, 0x65dd, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0x1963, { 0x16, 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 030C
        gbc.setState(0x446, 0x28cf, 0xb3f0, 0x8363, 0x456, 0xb908, 0x1, 0x1);
        gbc.writeMem(0x446, { 0x16, 0x74 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x28cf, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 030D
        gbc.setState(0x5652, 0x1b77, 0x14b0, 0x1c9a, 0xf8c9, 0x6015, 0x1, 0x0);
        gbc.writeMem(0x5652, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1b77, gbc.sp());
        EXPECT(0x5654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 030E
        gbc.setState(0x633b, 0x3165, 0xe7f0, 0xde7c, 0x726b, 0xbbaa, 0x1, 0x0);
        gbc.writeMem(0x633b, { 0x16, 0xc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 030F
        gbc.setState(0xccc0, 0x8a7c, 0xa090, 0xfb0, 0x1b1d, 0x2060, 0x1, 0x0);
        gbc.writeMem(0xccc0, { 0x16, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0xccc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xccc0));
        EXPECT(0xad, gbc.readMem(0xccc1));
        // 16 0310
        gbc.setState(0x6a2a, 0xcaca, 0x5330, 0x595d, 0x20d6, 0xd81, 0x1, 0x1);
        gbc.writeMem(0x6a2a, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0x6a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0311
        gbc.setState(0xd27f, 0x1674, 0x6330, 0x365c, 0x7a8c, 0x30e2, 0x1, 0x1);
        gbc.writeMem(0xd27f, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1674, gbc.sp());
        EXPECT(0xd281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd27f));
        EXPECT(0xc9, gbc.readMem(0xd280));
        // 16 0312
        gbc.setState(0xafb4, 0xb79d, 0x5860, 0x26da, 0x4bd5, 0x5d10, 0x0, 0x0);
        gbc.writeMem(0xafb4, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xafb4));
        EXPECT(0xb, gbc.readMem(0xafb5));
        // 16 0313
        gbc.setState(0x9344, 0x1e23, 0x6cb0, 0xdc16, 0xd0ec, 0xeba8, 0x0, 0x0);
        gbc.writeMem(0x9344, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9344));
        EXPECT(0x4a, gbc.readMem(0x9345));
        // 16 0314
        gbc.setState(0xbdbe, 0xeb66, 0x24e0, 0x6055, 0xd062, 0x3a4, 0x1, 0x1);
        gbc.writeMem(0xbdbe, { 0x16, 0x71 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xeb66, gbc.sp());
        EXPECT(0xbdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdbe));
        EXPECT(0x71, gbc.readMem(0xbdbf));
        // 16 0315
        gbc.setState(0xbe53, 0x687b, 0xb4b0, 0x1592, 0x32b1, 0xf53a, 0x1, 0x1);
        gbc.writeMem(0xbe53, { 0x16, 0x9e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x687b, gbc.sp());
        EXPECT(0xbe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbe53));
        EXPECT(0x9e, gbc.readMem(0xbe54));
        // 16 0316
        gbc.setState(0x8aae, 0xad35, 0x1a0, 0x41b0, 0x6870, 0xafe, 0x0, 0x0);
        gbc.writeMem(0x8aae, { 0x16, 0xf1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xad35, gbc.sp());
        EXPECT(0x8ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8aae));
        EXPECT(0xf1, gbc.readMem(0x8aaf));
        // 16 0317
        gbc.setState(0x704b, 0xdc95, 0xce50, 0xd2df, 0x1bb6, 0xe29a, 0x0, 0x0);
        gbc.writeMem(0x704b, { 0x16, 0xdd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc95, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0318
        gbc.setState(0xdb6, 0xd75d, 0x5f80, 0x478c, 0x4b6e, 0xdd34, 0x0, 0x0);
        gbc.writeMem(0xdb6, { 0x16, 0x3a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd75d, gbc.sp());
        EXPECT(0xdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0319
        gbc.setState(0x2d98, 0x3496, 0x61e0, 0x2f67, 0x7568, 0x9d2a, 0x0, 0x1);
        gbc.writeMem(0x2d98, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3496, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 031A
        gbc.setState(0x7ae0, 0x321a, 0x9b80, 0x9625, 0x6d1e, 0x2db7, 0x0, 0x0);
        gbc.writeMem(0x7ae0, { 0x16, 0x3e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0x7ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 031B
        gbc.setState(0x2198, 0xe3d3, 0xc240, 0xfeb0, 0x385e, 0x51ec, 0x1, 0x1);
        gbc.writeMem(0x2198, { 0x16, 0x95 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe3d3, gbc.sp());
        EXPECT(0x219a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 031C
        gbc.setState(0x7a6d, 0x1895, 0xc010, 0x7531, 0xf6d8, 0x37f5, 0x0, 0x1);
        gbc.writeMem(0x7a6d, { 0x16, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1895, gbc.sp());
        EXPECT(0x7a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 031D
        gbc.setState(0xec02, 0x2277, 0x8230, 0x38c5, 0x2122, 0x839b, 0x1, 0x0);
        gbc.writeMem(0xec02, { 0x16, 0xc4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2277, gbc.sp());
        EXPECT(0xec04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xec02));
        EXPECT(0xc4, gbc.readMem(0xec03));
        // 16 031E
        gbc.setState(0xbdfa, 0xc2fe, 0xfda0, 0xfed9, 0x3302, 0xc97c, 0x1, 0x1);
        gbc.writeMem(0xbdfa, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0xbdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdfa));
        EXPECT(0xd2, gbc.readMem(0xbdfb));
        // 16 031F
        gbc.setState(0xa032, 0x9b66, 0xef40, 0x13c7, 0x8545, 0x2441, 0x0, 0x1);
        gbc.writeMem(0xa032, { 0x16, 0xaa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b66, gbc.sp());
        EXPECT(0xa034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa032));
        EXPECT(0xaa, gbc.readMem(0xa033));
        // 16 0320
        gbc.setState(0xa62f, 0xd6db, 0xae60, 0x3fd9, 0x4890, 0xbe81, 0x0, 0x0);
        gbc.writeMem(0xa62f, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd6db, gbc.sp());
        EXPECT(0xa631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa62f));
        EXPECT(0xa8, gbc.readMem(0xa630));
        // 16 0321
        gbc.setState(0x6039, 0xa15b, 0xe2b0, 0xb851, 0x6f49, 0x65d3, 0x0, 0x0);
        gbc.writeMem(0x6039, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa15b, gbc.sp());
        EXPECT(0x603b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0322
        gbc.setState(0x6ead, 0x2eb9, 0x17e0, 0x6665, 0x1618, 0x3c3d, 0x1, 0x1);
        gbc.writeMem(0x6ead, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2eb9, gbc.sp());
        EXPECT(0x6eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0323
        gbc.setState(0x9e46, 0xa8bc, 0x8c30, 0xbc06, 0x4863, 0xba6d, 0x0, 0x0);
        gbc.writeMem(0x9e46, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9e46));
        EXPECT(0xc5, gbc.readMem(0x9e47));
        // 16 0324
        gbc.setState(0x2c88, 0xc2d4, 0xac10, 0xa887, 0x2a2b, 0x1b59, 0x0, 0x1);
        gbc.writeMem(0x2c88, { 0x16, 0x7f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0325
        gbc.setState(0x891b, 0xa66d, 0x6d60, 0x4974, 0x3aeb, 0xb340, 0x1, 0x0);
        gbc.writeMem(0x891b, { 0x16, 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0x891d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x891b));
        EXPECT(0xc, gbc.readMem(0x891c));
        // 16 0326
        gbc.setState(0xcb2d, 0x4d65, 0x2e30, 0x4516, 0x3147, 0xe5f3, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0x16, 0x20 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0xcb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcb2d));
        EXPECT(0x20, gbc.readMem(0xcb2e));
        // 16 0327
        gbc.setState(0x63e1, 0x3a6b, 0x3e30, 0x7bcc, 0xcdf0, 0x7bf0, 0x1, 0x1);
        gbc.writeMem(0x63e1, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3a6b, gbc.sp());
        EXPECT(0x63e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0328
        gbc.setState(0xd60, 0x803f, 0x2840, 0x17e3, 0xcf83, 0x667f, 0x1, 0x0);
        gbc.writeMem(0xd60, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0329
        gbc.setState(0x4b42, 0xdde2, 0x5280, 0x7e38, 0xc8f1, 0x129b, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 032A
        gbc.setState(0x4e6b, 0x4212, 0x3380, 0xad39, 0x386f, 0x3765, 0x0, 0x0);
        gbc.writeMem(0x4e6b, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4212, gbc.sp());
        EXPECT(0x4e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 032B
        gbc.setState(0x53ef, 0xea73, 0x5aa0, 0x1e1e, 0xdfcd, 0x580, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0x16, 0x84 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 032C
        gbc.setState(0x7ed1, 0xcb0d, 0xd1d0, 0x7839, 0xf490, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcb0d, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 032D
        gbc.setState(0x65cf, 0x27ac, 0xa4e0, 0xad9f, 0x3611, 0xfef, 0x0, 0x0);
        gbc.writeMem(0x65cf, { 0x16, 0x22 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x65d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 032E
        gbc.setState(0xbbf1, 0x92e2, 0x4a50, 0xc9a, 0xf254, 0xdfe7, 0x1, 0x0);
        gbc.writeMem(0xbbf1, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x92e2, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbbf1));
        EXPECT(0x2b, gbc.readMem(0xbbf2));
        // 16 032F
        gbc.setState(0x453a, 0x77c2, 0x9f40, 0x9eb5, 0xb3ac, 0xd0d9, 0x1, 0x1);
        gbc.writeMem(0x453a, { 0x16, 0x90 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0330
        gbc.setState(0xd2e1, 0xdef0, 0x44e0, 0xfc00, 0xe5a8, 0xf9ff, 0x0, 0x0);
        gbc.writeMem(0xd2e1, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdef0, gbc.sp());
        EXPECT(0xd2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd2e1));
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        // 16 0331
        gbc.setState(0xb963, 0x4753, 0xb880, 0x7b4f, 0x55df, 0xcf25, 0x0, 0x1);
        gbc.writeMem(0xb963, { 0x16, 0x1f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0xb965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb963));
        EXPECT(0x1f, gbc.readMem(0xb964));
        // 16 0332
        gbc.setState(0x3bc7, 0x3261, 0xe080, 0x9ce9, 0xb11f, 0xbdce, 0x1, 0x0);
        gbc.writeMem(0x3bc7, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0x3bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0333
        gbc.setState(0xcdcb, 0xf407, 0x29c0, 0x8a8f, 0xbeeb, 0x5136, 0x0, 0x1);
        gbc.writeMem(0xcdcb, { 0x16, 0x1b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf407, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcdcb));
        EXPECT(0x1b, gbc.readMem(0xcdcc));
        // 16 0334
        gbc.setState(0x4511, 0x199c, 0x200, 0xbee6, 0x73df, 0xec53, 0x0, 0x0);
        gbc.writeMem(0x4511, { 0x16, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x199c, gbc.sp());
        EXPECT(0x4513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0335
        gbc.setState(0x714b, 0x36bd, 0xf920, 0x2e55, 0x1ec0, 0x952d, 0x1, 0x1);
        gbc.writeMem(0x714b, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x714d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0336
        gbc.setState(0x79bb, 0x5546, 0xe20, 0xc21d, 0x5c1c, 0xc501, 0x0, 0x1);
        gbc.writeMem(0x79bb, { 0x16, 0xb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5546, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0337
        gbc.setState(0x9c1e, 0x1648, 0x13a0, 0xa780, 0x7cde, 0x74d4, 0x1, 0x0);
        gbc.writeMem(0x9c1e, { 0x16, 0x5b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x9c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9c1e));
        EXPECT(0x5b, gbc.readMem(0x9c1f));
        // 16 0338
        gbc.setState(0x3565, 0x2b67, 0x8900, 0xe123, 0x72a6, 0x2d14, 0x1, 0x1);
        gbc.writeMem(0x3565, { 0x16, 0x6 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b67, gbc.sp());
        EXPECT(0x3567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0339
        gbc.setState(0x3344, 0xedf8, 0xf3d0, 0xaeec, 0x7c15, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0x3344, { 0x16, 0x17 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xedf8, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 033A
        gbc.setState(0xe198, 0xdb97, 0x7f60, 0x9e77, 0xc1fe, 0x3d0f, 0x1, 0x1);
        gbc.writeMem(0xe198, { 0x16, 0xa5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe198));
        EXPECT(0xa5, gbc.readMem(0xe199));
        // 16 033B
        gbc.setState(0x7d91, 0x69fc, 0x8b60, 0x239c, 0xb10, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0x16, 0xed });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x69fc, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 033C
        gbc.setState(0x41ce, 0x6b60, 0x1480, 0x9eb7, 0x1787, 0xd36, 0x1, 0x0);
        gbc.writeMem(0x41ce, { 0x16, 0x47 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 033D
        gbc.setState(0xddf6, 0x7e57, 0xc000, 0xb326, 0x71b3, 0x1420, 0x0, 0x0);
        gbc.writeMem(0xddf6, { 0x16, 0xdc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0xddf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xddf6));
        EXPECT(0xdc, gbc.readMem(0xddf7));
        // 16 033E
        gbc.setState(0xd11a, 0x6453, 0xe180, 0x229a, 0x3867, 0xc087, 0x1, 0x0);
        gbc.writeMem(0xd11a, { 0x16, 0xf7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd11a));
        EXPECT(0xf7, gbc.readMem(0xd11b));
        // 16 033F
        gbc.setState(0x567b, 0x775, 0x6db0, 0x4716, 0xc1a0, 0xf579, 0x1, 0x0);
        gbc.writeMem(0x567b, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x775, gbc.sp());
        EXPECT(0x567d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0340
        gbc.setState(0xb768, 0xcc0a, 0xab90, 0x21dd, 0xc160, 0xd327, 0x1, 0x0);
        gbc.writeMem(0xb768, { 0x16, 0xe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb768));
        EXPECT(0xe, gbc.readMem(0xb769));
        // 16 0341
        gbc.setState(0x7938, 0x1353, 0x5e00, 0x1dc8, 0xbaab, 0x2a25, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0x16, 0x20 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1353, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0342
        gbc.setState(0x7d1e, 0x56be, 0x3850, 0x8b69, 0xad6, 0xdcd0, 0x0, 0x1);
        gbc.writeMem(0x7d1e, { 0x16, 0x51 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x56be, gbc.sp());
        EXPECT(0x7d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0343
        gbc.setState(0x6dfe, 0x5202, 0x6600, 0xda1b, 0x7e96, 0x7b00, 0x0, 0x0);
        gbc.writeMem(0x6dfe, { 0x16, 0x45 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5202, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0344
        gbc.setState(0xe328, 0xa5c2, 0xa8f0, 0xaf5f, 0x4d3c, 0x7905, 0x1, 0x1);
        gbc.writeMem(0xe328, { 0x16, 0x4a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0xe32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe328));
        EXPECT(0x4a, gbc.readMem(0xe329));
        // 16 0345
        gbc.setState(0xd74a, 0x7a15, 0xda50, 0x656b, 0xa4fa, 0x8b6d, 0x0, 0x1);
        gbc.writeMem(0xd74a, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd74a));
        EXPECT(0xd5, gbc.readMem(0xd74b));
        // 16 0346
        gbc.setState(0xa6b, 0xea8d, 0x1d80, 0x17a, 0x1d5d, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0xa6b, { 0x16, 0xa0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0347
        gbc.setState(0x6c99, 0x4bb3, 0xe370, 0x5c2d, 0xbef4, 0xebb1, 0x0, 0x0);
        gbc.writeMem(0x6c99, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0348
        gbc.setState(0xcb8a, 0xb257, 0xc4f0, 0x4639, 0x14bd, 0xe2ec, 0x0, 0x0);
        gbc.writeMem(0xcb8a, { 0x16, 0x64 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb257, gbc.sp());
        EXPECT(0xcb8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcb8a));
        EXPECT(0x64, gbc.readMem(0xcb8b));
        // 16 0349
        gbc.setState(0x907f, 0xd27a, 0x73f0, 0xa5ab, 0x6ee6, 0xfb7b, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0x16, 0xab });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd27a, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x907f));
        EXPECT(0xab, gbc.readMem(0x9080));
        // 16 034A
        gbc.setState(0x2a9a, 0x647, 0x99a0, 0xed2e, 0x464c, 0x8ed6, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0x16, 0x2a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 034B
        gbc.setState(0x5a91, 0xba56, 0x49e0, 0xeaf, 0xdced, 0x1d22, 0x0, 0x0);
        gbc.writeMem(0x5a91, { 0x16, 0x16 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xba56, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 034C
        gbc.setState(0xea80, 0x524f, 0x8420, 0x7a4, 0x90bd, 0xc861, 0x1, 0x0);
        gbc.writeMem(0xea80, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x524f, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xea80));
        EXPECT(0xd7, gbc.readMem(0xea81));
        // 16 034D
        gbc.setState(0xdc2a, 0xea79, 0x13a0, 0xc4ce, 0x613e, 0xebcd, 0x1, 0x1);
        gbc.writeMem(0xdc2a, { 0x16, 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xea79, gbc.sp());
        EXPECT(0xdc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdc2a));
        EXPECT(0x17, gbc.readMem(0xdc2b));
        // 16 034E
        gbc.setState(0x158e, 0x5e6d, 0x5ce0, 0xb2de, 0xdfe, 0x1d7c, 0x1, 0x1);
        gbc.writeMem(0x158e, { 0x16, 0x6b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x1590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0350
        gbc.setState(0x599c, 0xe2e1, 0x1670, 0xd1e3, 0x8152, 0xcb2a, 0x0, 0x0);
        gbc.writeMem(0x599c, { 0x16, 0x24 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x599e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0351
        gbc.setState(0x568b, 0x683a, 0x1540, 0x544e, 0xbac7, 0xe763, 0x0, 0x0);
        gbc.writeMem(0x568b, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x683a, gbc.sp());
        EXPECT(0x568d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0352
        gbc.setState(0x115f, 0xa518, 0xa5c0, 0x73c8, 0x483e, 0x4878, 0x1, 0x1);
        gbc.writeMem(0x115f, { 0x16, 0xee });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa518, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0353
        gbc.setState(0x93e5, 0xd5b5, 0x9210, 0xefca, 0x9d1a, 0xe182, 0x0, 0x0);
        gbc.writeMem(0x93e5, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd5b5, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x93e5));
        EXPECT(0xd7, gbc.readMem(0x93e6));
        // 16 0354
        gbc.setState(0x3d94, 0xe9eb, 0xc960, 0x9954, 0x890e, 0x4c11, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0x16, 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe9eb, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0355
        gbc.setState(0x5bcb, 0x67f, 0xa1f0, 0xbe6a, 0xfb72, 0x6d4b, 0x0, 0x0);
        gbc.writeMem(0x5bcb, { 0x16, 0x11 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0x5bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0356
        gbc.setState(0x2b78, 0x6ec8, 0xf4c0, 0x9966, 0x53, 0xae3f, 0x0, 0x0);
        gbc.writeMem(0x2b78, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x2b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0357
        gbc.setState(0x4458, 0xe645, 0x8570, 0x8361, 0x3d2d, 0x70d2, 0x0, 0x0);
        gbc.writeMem(0x4458, { 0x16, 0xd3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x445a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0358
        gbc.setState(0xcc40, 0x50c0, 0x6bb0, 0xc6d6, 0xede6, 0x5487, 0x0, 0x1);
        gbc.writeMem(0xcc40, { 0x16, 0x42 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x50c0, gbc.sp());
        EXPECT(0xcc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcc40));
        EXPECT(0x42, gbc.readMem(0xcc41));
        // 16 0359
        gbc.setState(0x88eb, 0xdf99, 0x47c0, 0xa1dd, 0x1f1f, 0x9c41, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdf99, gbc.sp());
        EXPECT(0x88ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x88eb));
        EXPECT(0xb, gbc.readMem(0x88ec));
        // 16 035A
        gbc.setState(0xd03, 0x357a, 0xfe80, 0x159b, 0x7081, 0x62aa, 0x1, 0x1);
        gbc.writeMem(0xd03, { 0x16, 0x4f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0xd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 035B
        gbc.setState(0x9f61, 0x6393, 0x9540, 0xb44d, 0x19eb, 0xf958, 0x0, 0x0);
        gbc.writeMem(0x9f61, { 0x16, 0xfe });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x9f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9f61));
        EXPECT(0xfe, gbc.readMem(0x9f62));
        // 16 035C
        gbc.setState(0xdc1e, 0x83c0, 0x5fb0, 0xb70, 0xf7be, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0xdc1e, { 0x16, 0x1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdc1e));
        EXPECT(0x1, gbc.readMem(0xdc1f));
        // 16 035D
        gbc.setState(0x83ba, 0x579c, 0x1200, 0x95fc, 0xc9e0, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0x83ba, { 0x16, 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x83ba));
        EXPECT(0xd9, gbc.readMem(0x83bb));
        // 16 035E
        gbc.setState(0x83a1, 0x7552, 0xcab0, 0x3e92, 0x7e87, 0xa43d, 0x0, 0x0);
        gbc.writeMem(0x83a1, { 0x16, 0xdf });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7552, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x83a1));
        EXPECT(0xdf, gbc.readMem(0x83a2));
        // 16 035F
        gbc.setState(0x1475, 0x6d6f, 0x7f40, 0x804c, 0xbf3c, 0x8330, 0x1, 0x0);
        gbc.writeMem(0x1475, { 0x16, 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0361
        gbc.setState(0x1d6a, 0x810e, 0x6d70, 0xab60, 0xd126, 0x1bc1, 0x0, 0x0);
        gbc.writeMem(0x1d6a, { 0x16, 0x93 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x810e, gbc.sp());
        EXPECT(0x1d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0362
        gbc.setState(0x846e, 0x697e, 0x6930, 0x1b3, 0xaeb3, 0x7446, 0x0, 0x0);
        gbc.writeMem(0x846e, { 0x16, 0xcf });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x697e, gbc.sp());
        EXPECT(0x8470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x846e));
        EXPECT(0xcf, gbc.readMem(0x846f));
        // 16 0363
        gbc.setState(0x8a8a, 0xec28, 0xe800, 0xc0ad, 0xdcf1, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x8a8a, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8a8a));
        EXPECT(0x1e, gbc.readMem(0x8a8b));
        // 16 0364
        gbc.setState(0xd6cb, 0xc290, 0x2870, 0x21f, 0x66c, 0x55da, 0x1, 0x1);
        gbc.writeMem(0xd6cb, { 0x16, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd6cb));
        EXPECT(0xb0, gbc.readMem(0xd6cc));
        // 16 0365
        gbc.setState(0xd8e9, 0xeac8, 0x71e0, 0x4269, 0xf07, 0xd87c, 0x0, 0x1);
        gbc.writeMem(0xd8e9, { 0x16, 0xc2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeac8, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd8e9));
        EXPECT(0xc2, gbc.readMem(0xd8ea));
        // 16 0366
        gbc.setState(0x3270, 0x139d, 0xe6a0, 0xe326, 0x13d0, 0xb992, 0x0, 0x0);
        gbc.writeMem(0x3270, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0367
        gbc.setState(0x38bc, 0xb011, 0x93a0, 0x3d0e, 0xf38c, 0xfa9c, 0x1, 0x0);
        gbc.writeMem(0x38bc, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb011, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0368
        gbc.setState(0x7fa2, 0x4f82, 0xdaf0, 0x49d7, 0xaaa1, 0x7a25, 0x0, 0x0);
        gbc.writeMem(0x7fa2, { 0x16, 0xf3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4f82, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 036A
        gbc.setState(0xbe4c, 0x3cfb, 0x8010, 0x2a95, 0xbbbe, 0xf93f, 0x0, 0x0);
        gbc.writeMem(0xbe4c, { 0x16, 0xce });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbe4c));
        EXPECT(0xce, gbc.readMem(0xbe4d));
        // 16 036B
        gbc.setState(0xd401, 0x3fa9, 0x6970, 0xaa0e, 0x3d17, 0x8b87, 0x1, 0x0);
        gbc.writeMem(0xd401, { 0x16, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xd403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd401));
        EXPECT(0x6a, gbc.readMem(0xd402));
        // 16 036D
        gbc.setState(0x322e, 0x4507, 0xd430, 0x320c, 0x63f7, 0x8cda, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 036E
        gbc.setState(0x55a, 0xd62e, 0x8610, 0xa5c, 0x830b, 0x79e2, 0x1, 0x0);
        gbc.writeMem(0x55a, { 0x16, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd62e, gbc.sp());
        EXPECT(0x55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 036F
        gbc.setState(0xe57, 0x913, 0xcef0, 0x2ab7, 0x2807, 0xb909, 0x0, 0x1);
        gbc.writeMem(0xe57, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0370
        gbc.setState(0x65c0, 0x28cf, 0x4530, 0xb7ae, 0xcdab, 0xc231, 0x1, 0x1);
        gbc.writeMem(0x65c0, { 0x16, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x28cf, gbc.sp());
        EXPECT(0x65c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0371
        gbc.setState(0x41fd, 0x1f0e, 0xabf0, 0x2b5b, 0x48d9, 0x857b, 0x1, 0x0);
        gbc.writeMem(0x41fd, { 0x16, 0x6d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1f0e, gbc.sp());
        EXPECT(0x41ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0372
        gbc.setState(0xebff, 0x7ff4, 0xf740, 0xf269, 0x46cc, 0x6210, 0x1, 0x1);
        gbc.writeMem(0xebff, { 0x16, 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7ff4, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xebff));
        EXPECT(0x3c, gbc.readMem(0xec00));
        // 16 0373
        gbc.setState(0x5035, 0x377e, 0xc650, 0x8be9, 0x6473, 0xfa46, 0x1, 0x1);
        gbc.writeMem(0x5035, { 0x16, 0xa6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x377e, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0376
        gbc.setState(0xe3ce, 0x1c71, 0xd5f0, 0xbfac, 0xf5ce, 0x6e8, 0x1, 0x1);
        gbc.writeMem(0xe3ce, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe3ce));
        EXPECT(0xa4, gbc.readMem(0xe3cf));
        // 16 0378
        gbc.setState(0x7569, 0xb094, 0x3bc0, 0xc9a6, 0x4888, 0x4daf, 0x0, 0x0);
        gbc.writeMem(0x7569, { 0x16, 0x56 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0x756b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0379
        gbc.setState(0x1c68, 0x6561, 0x78e0, 0x5e6e, 0x771e, 0x719d, 0x0, 0x0);
        gbc.writeMem(0x1c68, { 0x16, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x1c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 037A
        gbc.setState(0xa6d5, 0x7eb7, 0xdfe0, 0x9f34, 0x9985, 0x9b17, 0x0, 0x1);
        gbc.writeMem(0xa6d5, { 0x16, 0x3d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa6d5));
        EXPECT(0x3d, gbc.readMem(0xa6d6));
        // 16 037B
        gbc.setState(0x3dc5, 0x80d0, 0xb300, 0x57a3, 0x3b84, 0x7bbb, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0x16, 0x1d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x80d0, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 037C
        gbc.setState(0x57b0, 0xfbbe, 0x2310, 0xd051, 0x2300, 0xea76, 0x0, 0x1);
        gbc.writeMem(0x57b0, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x57b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 037D
        gbc.setState(0xc906, 0xe2df, 0x4620, 0x55b6, 0x1245, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xc906, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0xc908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc906));
        EXPECT(0xcb, gbc.readMem(0xc907));
        // 16 037E
        gbc.setState(0xbec0, 0x88ee, 0x90a0, 0xb3a3, 0x3b06, 0xb55e, 0x1, 0x1);
        gbc.writeMem(0xbec0, { 0x16, 0xdf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x88ee, gbc.sp());
        EXPECT(0xbec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbec0));
        EXPECT(0xdf, gbc.readMem(0xbec1));
        // 16 037F
        gbc.setState(0x7640, 0x4106, 0x4780, 0xf669, 0x3b23, 0xa839, 0x1, 0x0);
        gbc.writeMem(0x7640, { 0x16, 0x5f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4106, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0380
        gbc.setState(0x4c3f, 0xdcb4, 0xb110, 0x71ae, 0x4ba9, 0xe89e, 0x0, 0x0);
        gbc.writeMem(0x4c3f, { 0x16, 0x38 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdcb4, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0381
        gbc.setState(0x37e3, 0x9535, 0xbf70, 0x51bd, 0xf8f9, 0xe98, 0x0, 0x1);
        gbc.writeMem(0x37e3, { 0x16, 0x72 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0382
        gbc.setState(0x2622, 0xe05b, 0x9270, 0xc499, 0x2f9d, 0x311f, 0x1, 0x1);
        gbc.writeMem(0x2622, { 0x16, 0xad });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe05b, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0383
        gbc.setState(0xa7e7, 0x4ed9, 0x3a00, 0x8545, 0xf7e8, 0xc642, 0x1, 0x0);
        gbc.writeMem(0xa7e7, { 0x16, 0xa8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa7e7));
        EXPECT(0xa8, gbc.readMem(0xa7e8));
        // 16 0384
        gbc.setState(0x748e, 0x2fbe, 0xcf0, 0x5d83, 0x1d94, 0x9aff, 0x0, 0x1);
        gbc.writeMem(0x748e, { 0x16, 0xbd });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0x7490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0385
        gbc.setState(0x6705, 0xda0c, 0xb720, 0x9eb5, 0x7280, 0x7971, 0x1, 0x0);
        gbc.writeMem(0x6705, { 0x16, 0xe7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xda0c, gbc.sp());
        EXPECT(0x6707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0386
        gbc.setState(0xb97c, 0xbe4, 0xc8f0, 0x260a, 0x9feb, 0x765c, 0x0, 0x1);
        gbc.writeMem(0xb97c, { 0x16, 0x59 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbe4, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb97c));
        EXPECT(0x59, gbc.readMem(0xb97d));
        // 16 0387
        gbc.setState(0x230, 0x8adb, 0xe190, 0x996e, 0x8b2a, 0xb5a, 0x1, 0x1);
        gbc.writeMem(0x230, { 0x16, 0x7f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8adb, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0388
        gbc.setState(0xae36, 0xcbe, 0x56f0, 0x3270, 0xbcab, 0x5b3c, 0x0, 0x1);
        gbc.writeMem(0xae36, { 0x16, 0x59 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcbe, gbc.sp());
        EXPECT(0xae38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xae36));
        EXPECT(0x59, gbc.readMem(0xae37));
        // 16 038A
        gbc.setState(0xbdd4, 0xd278, 0x6af0, 0x591f, 0x8808, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0xbdd4, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd278, gbc.sp());
        EXPECT(0xbdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbdd4));
        EXPECT(0xe2, gbc.readMem(0xbdd5));
        // 16 038B
        gbc.setState(0x92be, 0x1833, 0x1960, 0xbf4, 0xd06d, 0x9810, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0x92c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x92be));
        EXPECT(0xd6, gbc.readMem(0x92bf));
        // 16 038C
        gbc.setState(0xa330, 0x1bc0, 0x9d60, 0x9382, 0xc116, 0x5193, 0x0, 0x0);
        gbc.writeMem(0xa330, { 0x16, 0x4c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0xa332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa330));
        EXPECT(0x4c, gbc.readMem(0xa331));
        // 16 038D
        gbc.setState(0x765b, 0xa530, 0xcf50, 0xced4, 0x47ae, 0x1d31, 0x1, 0x1);
        gbc.writeMem(0x765b, { 0x16, 0x93 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa530, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 038E
        gbc.setState(0x13a0, 0x4783, 0x4100, 0x2e1b, 0x7f7c, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0x13a0, { 0x16, 0xc0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4783, gbc.sp());
        EXPECT(0x13a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 038F
        gbc.setState(0x15d8, 0x1303, 0x9630, 0xaf57, 0xf424, 0x89fd, 0x1, 0x0);
        gbc.writeMem(0x15d8, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0390
        gbc.setState(0x4833, 0x6485, 0x5da0, 0x89e9, 0x49cc, 0xf6b3, 0x0, 0x1);
        gbc.writeMem(0x4833, { 0x16, 0xaa });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x4835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 0391
        gbc.setState(0xc5c0, 0x2d64, 0xbbf0, 0x19ce, 0x943e, 0x762f, 0x1, 0x0);
        gbc.writeMem(0xc5c0, { 0x16, 0xc5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2d64, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc5c0));
        EXPECT(0xc5, gbc.readMem(0xc5c1));
        // 16 0392
        gbc.setState(0x8f1e, 0xc33e, 0xe370, 0xb08e, 0x438, 0xfb75, 0x1, 0x0);
        gbc.writeMem(0x8f1e, { 0x16, 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0x8f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f1e));
        EXPECT(0x85, gbc.readMem(0x8f1f));
        // 16 0394
        gbc.setState(0x8239, 0x1028, 0xa840, 0x2b1f, 0x7e0a, 0x7792, 0x1, 0x0);
        gbc.writeMem(0x8239, { 0x16, 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1028, gbc.sp());
        EXPECT(0x823b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8239));
        EXPECT(0x1a, gbc.readMem(0x823a));
        // 16 0395
        gbc.setState(0xe32d, 0xbbcd, 0x4910, 0x7207, 0xc52a, 0x33f9, 0x0, 0x1);
        gbc.writeMem(0xe32d, { 0x16, 0xd7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbbcd, gbc.sp());
        EXPECT(0xe32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe32d));
        EXPECT(0xd7, gbc.readMem(0xe32e));
        // 16 0396
        gbc.setState(0x30cf, 0x82ec, 0x14b0, 0x3b89, 0x440d, 0x1cf8, 0x0, 0x1);
        gbc.writeMem(0x30cf, { 0x16, 0xda });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x82ec, gbc.sp());
        EXPECT(0x30d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0397
        gbc.setState(0xeb95, 0x790a, 0x9bc0, 0x79cf, 0xd0d0, 0x209a, 0x0, 0x1);
        gbc.writeMem(0xeb95, { 0x16, 0xd2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x790a, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb95));
        EXPECT(0xd2, gbc.readMem(0xeb96));
        // 16 0398
        gbc.setState(0x44fc, 0x27a6, 0xc710, 0x472d, 0x5c45, 0x909e, 0x1, 0x0);
        gbc.writeMem(0x44fc, { 0x16, 0xa4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x44fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 0399
        gbc.setState(0x99c7, 0xf088, 0x40a0, 0xb7c2, 0xf245, 0x28d5, 0x1, 0x1);
        gbc.writeMem(0x99c7, { 0x16, 0x33 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf088, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x99c7));
        EXPECT(0x33, gbc.readMem(0x99c8));
        // 16 039A
        gbc.setState(0x7836, 0xea95, 0x7110, 0xfc25, 0x59bf, 0xad28, 0x1, 0x0);
        gbc.writeMem(0x7836, { 0x16, 0x54 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0x7838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 039B
        gbc.setState(0xd538, 0x543, 0x8790, 0x5ab9, 0xe70c, 0xa27, 0x1, 0x0);
        gbc.writeMem(0xd538, { 0x16, 0x65 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0xd53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd538));
        EXPECT(0x65, gbc.readMem(0xd539));
        // 16 039C
        gbc.setState(0x4a4c, 0xf12c, 0x5520, 0x94e0, 0xf7b5, 0x3435, 0x0, 0x1);
        gbc.writeMem(0x4a4c, { 0x16, 0x6c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf12c, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 039D
        gbc.setState(0x9364, 0x853d, 0xe690, 0x2b29, 0x393a, 0x8031, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0x16, 0xd1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9364));
        EXPECT(0xd1, gbc.readMem(0x9365));
        // 16 039E
        gbc.setState(0x2c0e, 0xe81b, 0xca10, 0x98bf, 0x9a71, 0x848d, 0x0, 0x0);
        gbc.writeMem(0x2c0e, { 0x16, 0xda });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03A0
        gbc.setState(0xa610, 0x8fe7, 0x8560, 0x67d1, 0x89a0, 0x24f8, 0x1, 0x0);
        gbc.writeMem(0xa610, { 0x16, 0xd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8fe7, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa610));
        EXPECT(0xd, gbc.readMem(0xa611));
        // 16 03A1
        gbc.setState(0xd894, 0x86a4, 0x5630, 0x70c8, 0xc80d, 0xf0e9, 0x1, 0x1);
        gbc.writeMem(0xd894, { 0x16, 0x46 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x86a4, gbc.sp());
        EXPECT(0xd896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd894));
        EXPECT(0x46, gbc.readMem(0xd895));
        // 16 03A2
        gbc.setState(0x8771, 0x955a, 0x1560, 0x3023, 0x27ba, 0xb8ff, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0x16, 0xb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0x8773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8771));
        EXPECT(0xb, gbc.readMem(0x8772));
        // 16 03A3
        gbc.setState(0x7926, 0x78e9, 0x1120, 0x8560, 0x8d25, 0x7e2e, 0x1, 0x1);
        gbc.writeMem(0x7926, { 0x16, 0xe8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0x7928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03A4
        gbc.setState(0x7aa4, 0x1f8d, 0x23e0, 0x20f4, 0xda45, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x7aa4, { 0x16, 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1f8d, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03A5
        gbc.setState(0xcedc, 0x86e7, 0xb550, 0xe8b4, 0x97ce, 0x70f0, 0x0, 0x0);
        gbc.writeMem(0xcedc, { 0x16, 0x15 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0xcede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcedc));
        EXPECT(0x15, gbc.readMem(0xcedd));
        // 16 03A6
        gbc.setState(0x147d, 0xbec6, 0x6af0, 0xcda2, 0x7919, 0x8426, 0x0, 0x1);
        gbc.writeMem(0x147d, { 0x16, 0x43 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbec6, gbc.sp());
        EXPECT(0x147f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03A7
        gbc.setState(0x19a4, 0xb6a7, 0x6c40, 0xe357, 0x1088, 0xa142, 0x0, 0x1);
        gbc.writeMem(0x19a4, { 0x16, 0xe0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0x19a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03A8
        gbc.setState(0xba38, 0xbb8a, 0x5a80, 0xa1a7, 0x4bca, 0x1b27, 0x1, 0x1);
        gbc.writeMem(0xba38, { 0x16, 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbb8a, gbc.sp());
        EXPECT(0xba3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xba38));
        EXPECT(0x7d, gbc.readMem(0xba39));
        // 16 03A9
        gbc.setState(0x2d9e, 0x2173, 0x1230, 0x2101, 0x674, 0x96c2, 0x1, 0x1);
        gbc.writeMem(0x2d9e, { 0x16, 0x91 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2173, gbc.sp());
        EXPECT(0x2da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03AA
        gbc.setState(0x1bfd, 0xadce, 0xcb0, 0xc68b, 0x8608, 0xac47, 0x0, 0x0);
        gbc.writeMem(0x1bfd, { 0x16, 0x98 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xadce, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03AB
        gbc.setState(0x5c72, 0x4408, 0xd950, 0x3cc2, 0x245d, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x5c72, { 0x16, 0xd5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4408, gbc.sp());
        EXPECT(0x5c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03AC
        gbc.setState(0x5d18, 0xefdc, 0x3020, 0x495f, 0xe0d1, 0x680b, 0x0, 0x0);
        gbc.writeMem(0x5d18, { 0x16, 0x60 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xefdc, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03AD
        gbc.setState(0x6f06, 0x5349, 0xbae0, 0x56ae, 0xcc55, 0xe021, 0x0, 0x1);
        gbc.writeMem(0x6f06, { 0x16, 0xd6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03AE
        gbc.setState(0xce0a, 0xe807, 0xb30, 0x2808, 0xadd7, 0xda77, 0x0, 0x1);
        gbc.writeMem(0xce0a, { 0x16, 0x9e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe807, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xce0a));
        EXPECT(0x9e, gbc.readMem(0xce0b));
        // 16 03AF
        gbc.setState(0xe8a1, 0xfa2e, 0xad90, 0xffa4, 0x40e3, 0x5b36, 0x0, 0x1);
        gbc.writeMem(0xe8a1, { 0x16, 0xe2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0xe8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe8a1));
        EXPECT(0xe2, gbc.readMem(0xe8a2));
        // 16 03B0
        gbc.setState(0x4c33, 0x8ae1, 0x2430, 0xe22c, 0xd565, 0x8766, 0x1, 0x0);
        gbc.writeMem(0x4c33, { 0x16, 0x78 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8ae1, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03B1
        gbc.setState(0xd6e5, 0x23e5, 0x9200, 0x247d, 0xc307, 0x192c, 0x0, 0x0);
        gbc.writeMem(0xd6e5, { 0x16, 0x23 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x23e5, gbc.sp());
        EXPECT(0xd6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd6e5));
        EXPECT(0x23, gbc.readMem(0xd6e6));
        // 16 03B2
        gbc.setState(0x39f3, 0xa8d2, 0x4890, 0xcee0, 0x7803, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0x39f3, { 0x16, 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03B3
        gbc.setState(0x8485, 0xb0a8, 0xbff0, 0x677e, 0x6718, 0x2607, 0x1, 0x0);
        gbc.writeMem(0x8485, { 0x16, 0xfe });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb0a8, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8485));
        EXPECT(0xfe, gbc.readMem(0x8486));
        // 16 03B4
        gbc.setState(0x6d2c, 0x2975, 0xf8f0, 0x59cc, 0xf596, 0xf5ac, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0x16, 0x25 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2975, gbc.sp());
        EXPECT(0x6d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03B5
        gbc.setState(0xcec, 0xa6a9, 0x2b60, 0x66be, 0xd5, 0x4ce1, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0x16, 0xff });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03B6
        gbc.setState(0x9287, 0x81b3, 0xada0, 0x376d, 0x2fde, 0x1901, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0x16, 0x5a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9287));
        EXPECT(0x5a, gbc.readMem(0x9288));
        // 16 03B7
        gbc.setState(0xe300, 0xb7e9, 0x8710, 0x2da, 0xeaed, 0x24fc, 0x0, 0x0);
        gbc.writeMem(0xe300, { 0x16, 0xf4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb7e9, gbc.sp());
        EXPECT(0xe302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe300));
        EXPECT(0xf4, gbc.readMem(0xe301));
        // 16 03B8
        gbc.setState(0x2b53, 0x45dc, 0xa1c0, 0xbb7b, 0x80dc, 0x6574, 0x0, 0x1);
        gbc.writeMem(0x2b53, { 0x16, 0xce });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x45dc, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03B9
        gbc.setState(0x2210, 0x677b, 0xa010, 0xf03c, 0x82f6, 0x23f9, 0x1, 0x0);
        gbc.writeMem(0x2210, { 0x16, 0x1 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03BA
        gbc.setState(0x88cb, 0x8696, 0x2e10, 0x6115, 0xa97d, 0xdc1d, 0x1, 0x1);
        gbc.writeMem(0x88cb, { 0x16, 0x7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8696, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x88cb));
        EXPECT(0x7, gbc.readMem(0x88cc));
        // 16 03BB
        gbc.setState(0x88cf, 0x80dc, 0x5b30, 0xd1bd, 0xfa4b, 0x2d54, 0x0, 0x0);
        gbc.writeMem(0x88cf, { 0x16, 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x88cf));
        EXPECT(0x94, gbc.readMem(0x88d0));
        // 16 03BC
        gbc.setState(0xdb5d, 0xeb90, 0x6870, 0x753b, 0x41e0, 0xac8d, 0x1, 0x1);
        gbc.writeMem(0xdb5d, { 0x16, 0x4d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xeb90, gbc.sp());
        EXPECT(0xdb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdb5d));
        EXPECT(0x4d, gbc.readMem(0xdb5e));
        // 16 03BE
        gbc.setState(0xb21d, 0x4f7f, 0x77e0, 0x105f, 0xf27e, 0xa2f1, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4f7f, gbc.sp());
        EXPECT(0xb21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb21d));
        EXPECT(0xe9, gbc.readMem(0xb21e));
        // 16 03BF
        gbc.setState(0x2386, 0xe2bc, 0x9be0, 0xa8de, 0xc3cb, 0x6607, 0x0, 0x1);
        gbc.writeMem(0x2386, { 0x16, 0x2b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x2388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03C0
        gbc.setState(0x21bd, 0xe449, 0x6170, 0x7dab, 0x6a87, 0x3a29, 0x1, 0x1);
        gbc.writeMem(0x21bd, { 0x16, 0x8a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe449, gbc.sp());
        EXPECT(0x21bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03C1
        gbc.setState(0xbddc, 0x678d, 0xcf40, 0x3efa, 0x5759, 0x8bbd, 0x1, 0x1);
        gbc.writeMem(0xbddc, { 0x16, 0x58 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0xbdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbddc));
        EXPECT(0x58, gbc.readMem(0xbddd));
        // 16 03C2
        gbc.setState(0x7ce3, 0x30ed, 0x2930, 0xb585, 0x1a33, 0xf3fb, 0x1, 0x1);
        gbc.writeMem(0x7ce3, { 0x16, 0xb9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x7ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03C3
        gbc.setState(0xe661, 0xf363, 0xfab0, 0x9f09, 0x8315, 0xc89a, 0x0, 0x0);
        gbc.writeMem(0xe661, { 0x16, 0x84 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf363, gbc.sp());
        EXPECT(0xe663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe661));
        EXPECT(0x84, gbc.readMem(0xe662));
        // 16 03C4
        gbc.setState(0x254d, 0xa22d, 0x4730, 0x980a, 0xc7cc, 0xa39, 0x0, 0x1);
        gbc.writeMem(0x254d, { 0x16, 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa22d, gbc.sp());
        EXPECT(0x254f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03C5
        gbc.setState(0x95, 0x4e02, 0xadc0, 0x3120, 0xa085, 0x9913, 0x0, 0x0);
        gbc.writeMem(0x95, { 0x16, 0x74 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4e02, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03C6
        gbc.setState(0xd461, 0x5b72, 0x2750, 0xb25a, 0xa665, 0x3610, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0x16, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd461));
        EXPECT(0x0, gbc.readMem(0xd462));
        // 16 03C7
        gbc.setState(0x2a68, 0x15e7, 0xe600, 0x52c7, 0xcddb, 0x2c8d, 0x0, 0x1);
        gbc.writeMem(0x2a68, { 0x16, 0x30 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03C8
        gbc.setState(0x9a53, 0xdce6, 0x99e0, 0xad9d, 0x612, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x9a53, { 0x16, 0x53 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdce6, gbc.sp());
        EXPECT(0x9a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9a53));
        EXPECT(0x53, gbc.readMem(0x9a54));
        // 16 03C9
        gbc.setState(0x7e9a, 0x9352, 0xb520, 0x8ad6, 0x169, 0x46b0, 0x0, 0x1);
        gbc.writeMem(0x7e9a, { 0x16, 0x28 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9352, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03CA
        gbc.setState(0xcd22, 0x249a, 0xf070, 0x2b06, 0x74aa, 0xf5f3, 0x0, 0x1);
        gbc.writeMem(0xcd22, { 0x16, 0x17 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xcd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcd22));
        EXPECT(0x17, gbc.readMem(0xcd23));
        // 16 03CB
        gbc.setState(0x6d8e, 0xf08e, 0x2cb0, 0x41f9, 0xf179, 0xb257, 0x1, 0x1);
        gbc.writeMem(0x6d8e, { 0x16, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0x6d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03CC
        gbc.setState(0x7953, 0xa804, 0x97f0, 0x58e1, 0xdf6f, 0x1141, 0x0, 0x0);
        gbc.writeMem(0x7953, { 0x16, 0x4e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa804, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03CD
        gbc.setState(0x9c97, 0x5822, 0xb270, 0xbac8, 0x6097, 0x840d, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0x16, 0xa1 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9c97));
        EXPECT(0xa1, gbc.readMem(0x9c98));
        // 16 03CF
        gbc.setState(0x8127, 0x5b98, 0xd7c0, 0x9d6b, 0xc41b, 0xfa66, 0x1, 0x1);
        gbc.writeMem(0x8127, { 0x16, 0x21 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0x8129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8127));
        EXPECT(0x21, gbc.readMem(0x8128));
        // 16 03D0
        gbc.setState(0xd944, 0x6728, 0x2ff0, 0xd4a2, 0x86c7, 0xf9be, 0x1, 0x0);
        gbc.writeMem(0xd944, { 0x16, 0x8b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6728, gbc.sp());
        EXPECT(0xd946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd944));
        EXPECT(0x8b, gbc.readMem(0xd945));
        // 16 03D1
        gbc.setState(0x695e, 0x8075, 0xaa70, 0x1415, 0xe739, 0x555d, 0x1, 0x1);
        gbc.writeMem(0x695e, { 0x16, 0xc6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8075, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03D2
        gbc.setState(0x134, 0x5717, 0xb690, 0xb3af, 0x1ad1, 0x56c2, 0x0, 0x1);
        gbc.writeMem(0x134, { 0x16, 0x11 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03D3
        gbc.setState(0xacab, 0xf381, 0xb2a0, 0xed15, 0xf963, 0x9be8, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0x16, 0x68 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0xacad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xacab));
        EXPECT(0x68, gbc.readMem(0xacac));
        // 16 03D4
        gbc.setState(0x3059, 0xbf78, 0x2f0, 0xd98a, 0x7340, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x3059, { 0x16, 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbf78, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03D5
        gbc.setState(0x8fd6, 0x550e, 0x5d90, 0x82a0, 0xc29a, 0xb31a, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0x16, 0x41 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x550e, gbc.sp());
        EXPECT(0x8fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8fd6));
        EXPECT(0x41, gbc.readMem(0x8fd7));
        // 16 03D6
        gbc.setState(0x3af5, 0x112c, 0x6ec0, 0x8693, 0x7bdd, 0xf4fd, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x112c, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03D7
        gbc.setState(0x9229, 0xdb6b, 0x39c0, 0xeba, 0xbde6, 0xda53, 0x1, 0x1);
        gbc.writeMem(0x9229, { 0x16, 0x92 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0x922b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9229));
        EXPECT(0x92, gbc.readMem(0x922a));
        // 16 03D8
        gbc.setState(0xdf78, 0x6604, 0xfb20, 0x7c01, 0xd4e9, 0x9863, 0x1, 0x1);
        gbc.writeMem(0xdf78, { 0x16, 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6604, gbc.sp());
        EXPECT(0xdf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xdf78));
        EXPECT(0x7a, gbc.readMem(0xdf79));
        // 16 03D9
        gbc.setState(0x8f71, 0xe822, 0x8ea0, 0x33d0, 0xbe25, 0xe1fc, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0x16, 0x47 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe822, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f71));
        EXPECT(0x47, gbc.readMem(0x8f72));
        // 16 03DA
        gbc.setState(0xb684, 0x35d7, 0x4760, 0x168b, 0xa711, 0xcc88, 0x1, 0x0);
        gbc.writeMem(0xb684, { 0x16, 0x8b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35d7, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb684));
        EXPECT(0x8b, gbc.readMem(0xb685));
        // 16 03DB
        gbc.setState(0x3fda, 0xb7, 0xb330, 0x4ccc, 0xc0a4, 0x2a21, 0x1, 0x1);
        gbc.writeMem(0x3fda, { 0x16, 0xa2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb7, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03DC
        gbc.setState(0x338, 0xa80e, 0xe060, 0x7c31, 0x8a3c, 0x254c, 0x0, 0x0);
        gbc.writeMem(0x338, { 0x16, 0x1e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa80e, gbc.sp());
        EXPECT(0x33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03DD
        gbc.setState(0x1911, 0x1088, 0xf780, 0x711e, 0x5ade, 0xa35c, 0x0, 0x0);
        gbc.writeMem(0x1911, { 0x16, 0x6a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x1913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03DE
        gbc.setState(0x2f87, 0xc4ac, 0xa530, 0x7761, 0xdbc8, 0xc767, 0x1, 0x1);
        gbc.writeMem(0x2f87, { 0x16, 0x58 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x2f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03DF
        gbc.setState(0x504b, 0x29e3, 0xeb60, 0x6ead, 0x211e, 0x3260, 0x0, 0x1);
        gbc.writeMem(0x504b, { 0x16, 0xec });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x29e3, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03E0
        gbc.setState(0x7f21, 0xe99e, 0xb7c0, 0xbaff, 0x568a, 0xa969, 0x1, 0x1);
        gbc.writeMem(0x7f21, { 0x16, 0x29 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe99e, gbc.sp());
        EXPECT(0x7f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03E1
        gbc.setState(0x5f83, 0xbe0b, 0x61d0, 0x2e43, 0x6486, 0xef63, 0x1, 0x0);
        gbc.writeMem(0x5f83, { 0x16, 0xc9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbe0b, gbc.sp());
        EXPECT(0x5f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 16 03E2
        gbc.setState(0xc281, 0x92e3, 0x4210, 0xb5a5, 0x65d8, 0x7577, 0x0, 0x1);
        gbc.writeMem(0xc281, { 0x16, 0x4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xc281));
        EXPECT(0x4, gbc.readMem(0xc282));
        // 16 03E3
        gbc.setState(0x1a66, 0x78ab, 0x1d60, 0xd0af, 0xf749, 0x2e5a, 0x1, 0x0);
        gbc.writeMem(0x1a66, { 0x16, 0x76 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x78ab, gbc.sp());
        EXPECT(0x1a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03E4
        gbc.setState(0x825d, 0xff32, 0x1150, 0x920, 0x8db6, 0xa1c5, 0x1, 0x1);
        gbc.writeMem(0x825d, { 0x16, 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xff32, gbc.sp());
        EXPECT(0x825f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x825d));
        EXPECT(0xe9, gbc.readMem(0x825e));
        // 16 03E5
        gbc.setState(0x550b, 0x3676, 0x95e0, 0x1ed1, 0x8b0a, 0x2ace, 0x1, 0x1);
        gbc.writeMem(0x550b, { 0x16, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03E6
        gbc.setState(0x3d55, 0xdb9b, 0xbfc0, 0xf68f, 0x1ce9, 0xe078, 0x1, 0x1);
        gbc.writeMem(0x3d55, { 0x16, 0x7a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdb9b, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 16 03E7
        gbc.setState(0x96ce, 0x368d, 0x9370, 0x4efa, 0x8171, 0x7608, 0x0, 0x1);
        gbc.writeMem(0x96ce, { 0x16, 0x4c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0x96d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x96ce));
        EXPECT(0x4c, gbc.readMem(0x96cf));
    }
