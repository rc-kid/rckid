    TEST(gbcemu, opcode_cb_97) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 97 0000
        gbc.setState(0xeaf7, 0xf1ee, 0x4420, 0x8408, 0x4d38, 0x2dc3, 0x1, 0x1);
        gbc.writeMem(0xeaf7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0xeaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf7));
        EXPECT(0x97, gbc.readMem(0xeaf8));
        // CB 97 0001
        gbc.setState(0xa6cc, 0xd5df, 0x4f20, 0x6d56, 0xc9e2, 0x9cff, 0x1, 0x1);
        gbc.writeMem(0xa6cc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd5df, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cc));
        EXPECT(0x97, gbc.readMem(0xa6cd));
        // CB 97 0002
        gbc.setState(0x9082, 0xea9f, 0xad10, 0xa43c, 0x3d8e, 0xb4dd, 0x1, 0x0);
        gbc.writeMem(0x9082, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xea9f, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9082));
        EXPECT(0x97, gbc.readMem(0x9083));
        // CB 97 0003
        gbc.setState(0x1d38, 0x634b, 0x9a80, 0x9790, 0xd710, 0x4613, 0x1, 0x0);
        gbc.writeMem(0x1d38, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x634b, gbc.sp());
        EXPECT(0x1d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0004
        gbc.setState(0xbdef, 0x74f6, 0x5b40, 0xdc09, 0x2686, 0xa8f2, 0x1, 0x1);
        gbc.writeMem(0xbdef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x74f6, gbc.sp());
        EXPECT(0xbdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdef));
        EXPECT(0x97, gbc.readMem(0xbdf0));
        // CB 97 0005
        gbc.setState(0x7c0f, 0xbb1d, 0xc090, 0x9b56, 0x57df, 0x9d82, 0x0, 0x1);
        gbc.writeMem(0x7c0f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbb1d, gbc.sp());
        EXPECT(0x7c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0006
        gbc.setState(0x462f, 0x8b8a, 0x5940, 0xdcb0, 0x299e, 0x5567, 0x0, 0x0);
        gbc.writeMem(0x462f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8b8a, gbc.sp());
        EXPECT(0x4631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0007
        gbc.setState(0x4743, 0x6a0a, 0x34c0, 0x5d3a, 0x8700, 0x2dc3, 0x1, 0x0);
        gbc.writeMem(0x4743, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x4745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0008
        gbc.setState(0xb1ed, 0x7584, 0xb680, 0x2d32, 0xc2d7, 0xa8c5, 0x1, 0x1);
        gbc.writeMem(0xb1ed, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7584, gbc.sp());
        EXPECT(0xb1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ed));
        EXPECT(0x97, gbc.readMem(0xb1ee));
        // CB 97 0009
        gbc.setState(0xc9be, 0xb18d, 0xaa70, 0xe2fd, 0x8d23, 0x7033, 0x1, 0x1);
        gbc.writeMem(0xc9be, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb18d, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9be));
        EXPECT(0x97, gbc.readMem(0xc9bf));
        // CB 97 000A
        gbc.setState(0x61ba, 0xedb8, 0x83d0, 0x44e5, 0x8391, 0xd486, 0x1, 0x0);
        gbc.writeMem(0x61ba, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedb8, gbc.sp());
        EXPECT(0x61bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 000C
        gbc.setState(0x81cd, 0x6a09, 0xd6b0, 0xfa85, 0x6f96, 0x4ad4, 0x1, 0x1);
        gbc.writeMem(0x81cd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0x81cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cd));
        EXPECT(0x97, gbc.readMem(0x81ce));
        // CB 97 000D
        gbc.setState(0xb644, 0xf75e, 0x1020, 0xfc9b, 0x22f6, 0x1028, 0x1, 0x0);
        gbc.writeMem(0xb644, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf75e, gbc.sp());
        EXPECT(0xb646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb644));
        EXPECT(0x97, gbc.readMem(0xb645));
        // CB 97 000E
        gbc.setState(0xaf78, 0x1783, 0x6900, 0x4ebc, 0x6800, 0x3e0b, 0x1, 0x1);
        gbc.writeMem(0xaf78, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1783, gbc.sp());
        EXPECT(0xaf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf78));
        EXPECT(0x97, gbc.readMem(0xaf79));
        // CB 97 000F
        gbc.setState(0xb53e, 0x6f56, 0x78c0, 0xac33, 0x4ed4, 0xa911, 0x0, 0x1);
        gbc.writeMem(0xb53e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0xb540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53e));
        EXPECT(0x97, gbc.readMem(0xb53f));
        // CB 97 0010
        gbc.setState(0xefc, 0xb73a, 0x3310, 0x1b3c, 0xb35, 0x2615, 0x1, 0x0);
        gbc.writeMem(0xefc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb73a, gbc.sp());
        EXPECT(0xefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0011
        gbc.setState(0x1fff, 0x3e89, 0xd160, 0xf2d4, 0x60f0, 0x3898, 0x1, 0x0);
        gbc.writeMem(0x1fff, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x2001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0012
        gbc.setState(0x8f8a, 0x4f46, 0x3ca0, 0x540b, 0xff07, 0xa31f, 0x0, 0x1);
        gbc.writeMem(0x8f8a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4f46, gbc.sp());
        EXPECT(0x8f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8a));
        EXPECT(0x97, gbc.readMem(0x8f8b));
        // CB 97 0013
        gbc.setState(0x9caa, 0x8952, 0x1e90, 0xc11, 0xcab4, 0xc891, 0x0, 0x0);
        gbc.writeMem(0x9caa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0x9cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caa));
        EXPECT(0x97, gbc.readMem(0x9cab));
        // CB 97 0014
        gbc.setState(0x2bbe, 0x29eb, 0x4840, 0x5d1d, 0xfe9, 0x3019, 0x1, 0x1);
        gbc.writeMem(0x2bbe, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0015
        gbc.setState(0x5979, 0x9f05, 0xf940, 0x85c2, 0xc438, 0x778e, 0x0, 0x0);
        gbc.writeMem(0x5979, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0x597b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0017
        gbc.setState(0x886f, 0xd523, 0x7ab0, 0xe533, 0x68c3, 0xcd08, 0x0, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd523, gbc.sp());
        EXPECT(0x8871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886f));
        EXPECT(0x97, gbc.readMem(0x8870));
        // CB 97 0018
        gbc.setState(0xdd82, 0x1d41, 0x2b0, 0x2e51, 0x3b2a, 0x6067, 0x0, 0x1);
        gbc.writeMem(0xdd82, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1d41, gbc.sp());
        EXPECT(0xdd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd82));
        EXPECT(0x97, gbc.readMem(0xdd83));
        // CB 97 0019
        gbc.setState(0x2162, 0xad31, 0xd020, 0x829b, 0x45e2, 0xba3, 0x1, 0x0);
        gbc.writeMem(0x2162, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 001A
        gbc.setState(0x4aae, 0x657d, 0xce00, 0xf483, 0xc6e0, 0xa6bb, 0x0, 0x1);
        gbc.writeMem(0x4aae, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0x4ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 001B
        gbc.setState(0x285d, 0x996b, 0x4cc0, 0x6c2b, 0x6c79, 0xd044, 0x0, 0x1);
        gbc.writeMem(0x285d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x996b, gbc.sp());
        EXPECT(0x285f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 001C
        gbc.setState(0xc892, 0x24ef, 0xda60, 0x8162, 0x3f36, 0x68a2, 0x1, 0x1);
        gbc.writeMem(0xc892, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0xc894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc892));
        EXPECT(0x97, gbc.readMem(0xc893));
        // CB 97 001D
        gbc.setState(0x7895, 0x4601, 0xf260, 0x9cc0, 0x3aba, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x7895, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0x7897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 001E
        gbc.setState(0x84f5, 0x7491, 0xd5c0, 0xa168, 0x30e, 0x6b1e, 0x0, 0x0);
        gbc.writeMem(0x84f5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0x84f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f5));
        EXPECT(0x97, gbc.readMem(0x84f6));
        // CB 97 001F
        gbc.setState(0x6f7a, 0x84be, 0x75a0, 0x152f, 0x7db6, 0x4106, 0x0, 0x0);
        gbc.writeMem(0x6f7a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0020
        gbc.setState(0xd1ec, 0x8cd8, 0x8b90, 0x2a6d, 0x304, 0xe01e, 0x1, 0x0);
        gbc.writeMem(0xd1ec, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8cd8, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ec));
        EXPECT(0x97, gbc.readMem(0xd1ed));
        // CB 97 0021
        gbc.setState(0x6a82, 0xc317, 0x8420, 0x9757, 0x9a64, 0x7233, 0x0, 0x0);
        gbc.writeMem(0x6a82, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc317, gbc.sp());
        EXPECT(0x6a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0022
        gbc.setState(0xdb70, 0xdede, 0xee90, 0xc55b, 0x969, 0x8d90, 0x0, 0x1);
        gbc.writeMem(0xdb70, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdede, gbc.sp());
        EXPECT(0xdb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb70));
        EXPECT(0x97, gbc.readMem(0xdb71));
        // CB 97 0023
        gbc.setState(0xda48, 0xb3a2, 0x4ef0, 0xba2d, 0x947, 0xe5c0, 0x1, 0x0);
        gbc.writeMem(0xda48, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0xda4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda48));
        EXPECT(0x97, gbc.readMem(0xda49));
        // CB 97 0024
        gbc.setState(0x1386, 0x47db, 0x75c0, 0x7dad, 0xa72b, 0xb86f, 0x0, 0x1);
        gbc.writeMem(0x1386, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x47db, gbc.sp());
        EXPECT(0x1388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0026
        gbc.setState(0xdb8e, 0x136d, 0x6d70, 0x70ab, 0x3329, 0x2655, 0x0, 0x0);
        gbc.writeMem(0xdb8e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x136d, gbc.sp());
        EXPECT(0xdb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8e));
        EXPECT(0x97, gbc.readMem(0xdb8f));
        // CB 97 0027
        gbc.setState(0xc6ba, 0xbfdf, 0xb9a0, 0x5fae, 0x6ba2, 0xc4dd, 0x1, 0x0);
        gbc.writeMem(0xc6ba, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbfdf, gbc.sp());
        EXPECT(0xc6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ba));
        EXPECT(0x97, gbc.readMem(0xc6bb));
        // CB 97 0028
        gbc.setState(0x4b15, 0xc6f7, 0xb880, 0x1650, 0x826c, 0xa28, 0x0, 0x1);
        gbc.writeMem(0x4b15, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x4b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0029
        gbc.setState(0xe115, 0x6210, 0x3230, 0xcd32, 0x617c, 0x8976, 0x0, 0x0);
        gbc.writeMem(0xe115, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0xe117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe115));
        EXPECT(0x97, gbc.readMem(0xe116));
        // CB 97 002A
        gbc.setState(0x162a, 0x3d4d, 0xf1e0, 0xe5d3, 0x624d, 0xa536, 0x1, 0x1);
        gbc.writeMem(0x162a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x162c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 002B
        gbc.setState(0xaab6, 0x3cc8, 0xb510, 0x14f5, 0xd8ef, 0x5053, 0x0, 0x1);
        gbc.writeMem(0xaab6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3cc8, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab6));
        EXPECT(0x97, gbc.readMem(0xaab7));
        // CB 97 002C
        gbc.setState(0x422c, 0x30ee, 0x2fa0, 0xefa, 0x88ae, 0x9be0, 0x0, 0x0);
        gbc.writeMem(0x422c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x30ee, gbc.sp());
        EXPECT(0x422e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 002D
        gbc.setState(0x8b6, 0x1f1, 0x580, 0x8c63, 0x1b37, 0x3bb8, 0x1, 0x1);
        gbc.writeMem(0x8b6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 002E
        gbc.setState(0xed51, 0x619b, 0xcff0, 0x45ca, 0x8041, 0xf6e0, 0x1, 0x1);
        gbc.writeMem(0xed51, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x619b, gbc.sp());
        EXPECT(0xed53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed51));
        EXPECT(0x97, gbc.readMem(0xed52));
        // CB 97 002F
        gbc.setState(0x4c6a, 0xbe77, 0x7940, 0x4e0, 0xbe4, 0xa47b, 0x0, 0x1);
        gbc.writeMem(0x4c6a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0030
        gbc.setState(0x2c2, 0x1ab1, 0xa700, 0x11b1, 0x2716, 0xf663, 0x1, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0x2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0031
        gbc.setState(0xd3fe, 0x77fc, 0x13a0, 0xc84d, 0x2e79, 0xc704, 0x0, 0x1);
        gbc.writeMem(0xd3fe, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fe));
        EXPECT(0x97, gbc.readMem(0xd3ff));
        // CB 97 0032
        gbc.setState(0xb3d1, 0x83c2, 0xe600, 0x110f, 0x4ddf, 0xd015, 0x0, 0x0);
        gbc.writeMem(0xb3d1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x83c2, gbc.sp());
        EXPECT(0xb3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d1));
        EXPECT(0x97, gbc.readMem(0xb3d2));
        // CB 97 0033
        gbc.setState(0x526f, 0x316e, 0x2490, 0x5a5f, 0xae80, 0x49a7, 0x1, 0x0);
        gbc.writeMem(0x526f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x316e, gbc.sp());
        EXPECT(0x5271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0034
        gbc.setState(0x13b5, 0x13f, 0xc8f0, 0x323d, 0xf1f8, 0xb01d, 0x0, 0x1);
        gbc.writeMem(0x13b5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0x13b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0035
        gbc.setState(0x3a59, 0x57bc, 0xdbb0, 0x59d2, 0x8aed, 0x41e6, 0x1, 0x0);
        gbc.writeMem(0x3a59, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0x3a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0036
        gbc.setState(0xe643, 0xe990, 0xd630, 0x50fc, 0x27a6, 0x9fbe, 0x0, 0x1);
        gbc.writeMem(0xe643, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe643));
        EXPECT(0x97, gbc.readMem(0xe644));
        // CB 97 0037
        gbc.setState(0xe5a1, 0xaa8a, 0x700, 0xfef2, 0xf7a1, 0x633, 0x1, 0x1);
        gbc.writeMem(0xe5a1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaa8a, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a1));
        EXPECT(0x97, gbc.readMem(0xe5a2));
        // CB 97 0038
        gbc.setState(0xab05, 0xa115, 0xe2c0, 0x156, 0x41fd, 0x20e2, 0x1, 0x0);
        gbc.writeMem(0xab05, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa115, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab05));
        EXPECT(0x97, gbc.readMem(0xab06));
        // CB 97 0039
        gbc.setState(0x588e, 0xd4a0, 0xfab0, 0xb61e, 0xa699, 0xfe4, 0x1, 0x1);
        gbc.writeMem(0x588e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd4a0, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 003A
        gbc.setState(0x7e53, 0x9590, 0xe190, 0xf0a0, 0x4164, 0x350a, 0x1, 0x0);
        gbc.writeMem(0x7e53, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 003B
        gbc.setState(0x7a70, 0x27be, 0x8af0, 0xeac, 0xc182, 0xff1a, 0x0, 0x1);
        gbc.writeMem(0x7a70, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x27be, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 003C
        gbc.setState(0x91ad, 0x3a76, 0x33e0, 0xc24e, 0x49f2, 0x4d96, 0x0, 0x1);
        gbc.writeMem(0x91ad, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3a76, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ad));
        EXPECT(0x97, gbc.readMem(0x91ae));
        // CB 97 003D
        gbc.setState(0xc1f8, 0x5277, 0xaaa0, 0xac19, 0x6f02, 0x3470, 0x0, 0x1);
        gbc.writeMem(0xc1f8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5277, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f8));
        EXPECT(0x97, gbc.readMem(0xc1f9));
        // CB 97 003E
        gbc.setState(0xd316, 0x4e7f, 0x3790, 0xf09e, 0xebcc, 0xe203, 0x1, 0x0);
        gbc.writeMem(0xd316, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd316));
        EXPECT(0x97, gbc.readMem(0xd317));
        // CB 97 003F
        gbc.setState(0x1f97, 0xb99b, 0x33e0, 0x5f21, 0x8574, 0x8e32, 0x0, 0x0);
        gbc.writeMem(0x1f97, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb99b, gbc.sp());
        EXPECT(0x1f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0040
        gbc.setState(0x9c7f, 0x119e, 0x1510, 0xaaa6, 0x98d, 0xbcee, 0x0, 0x0);
        gbc.writeMem(0x9c7f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0x9c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7f));
        EXPECT(0x97, gbc.readMem(0x9c80));
        // CB 97 0042
        gbc.setState(0x2af0, 0xc6b4, 0x80e0, 0x326b, 0x4cce, 0x27f4, 0x0, 0x0);
        gbc.writeMem(0x2af0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0x2af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0043
        gbc.setState(0x231e, 0x4fa4, 0x9490, 0x8cf6, 0x5de9, 0x849d, 0x0, 0x0);
        gbc.writeMem(0x231e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4fa4, gbc.sp());
        EXPECT(0x2320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0044
        gbc.setState(0x8fb1, 0xb905, 0xd9d0, 0xc0e, 0x4992, 0x86c3, 0x1, 0x0);
        gbc.writeMem(0x8fb1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb905, gbc.sp());
        EXPECT(0x8fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb1));
        EXPECT(0x97, gbc.readMem(0x8fb2));
        // CB 97 0045
        gbc.setState(0xd742, 0x715b, 0xe8e0, 0x4e71, 0xab79, 0xa16, 0x1, 0x1);
        gbc.writeMem(0xd742, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0xd744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd742));
        EXPECT(0x97, gbc.readMem(0xd743));
        // CB 97 0046
        gbc.setState(0x951a, 0x78cc, 0x2f10, 0x1741, 0xdf8, 0x6946, 0x0, 0x1);
        gbc.writeMem(0x951a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951a));
        EXPECT(0x97, gbc.readMem(0x951b));
        // CB 97 0047
        gbc.setState(0x333a, 0x99e9, 0x1b20, 0x829d, 0xc2b1, 0x4523, 0x1, 0x0);
        gbc.writeMem(0x333a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x99e9, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0048
        gbc.setState(0x1625, 0x2f6e, 0x3950, 0x42da, 0x8cc8, 0x66d2, 0x1, 0x0);
        gbc.writeMem(0x1625, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2f6e, gbc.sp());
        EXPECT(0x1627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0049
        gbc.setState(0x712, 0x1ccf, 0xcbb0, 0x18dd, 0xfc95, 0x87f, 0x0, 0x1);
        gbc.writeMem(0x712, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1ccf, gbc.sp());
        EXPECT(0x714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 004A
        gbc.setState(0x9e0, 0xd492, 0x8ac0, 0xd83c, 0x78af, 0x86f8, 0x0, 0x0);
        gbc.writeMem(0x9e0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 004B
        gbc.setState(0x3882, 0x521e, 0x8090, 0xbacd, 0x5818, 0x3a29, 0x0, 0x1);
        gbc.writeMem(0x3882, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x521e, gbc.sp());
        EXPECT(0x3884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 004C
        gbc.setState(0x8dd4, 0x5c21, 0xf530, 0x3b5a, 0xec08, 0x1175, 0x0, 0x0);
        gbc.writeMem(0x8dd4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5c21, gbc.sp());
        EXPECT(0x8dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd4));
        EXPECT(0x97, gbc.readMem(0x8dd5));
        // CB 97 004D
        gbc.setState(0xdb17, 0xe9b9, 0x2730, 0x2350, 0xba57, 0xa1db, 0x0, 0x0);
        gbc.writeMem(0xdb17, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0xdb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb17));
        EXPECT(0x97, gbc.readMem(0xdb18));
        // CB 97 004E
        gbc.setState(0x9ab7, 0xedd, 0xa630, 0xd2ba, 0xb022, 0x3706, 0x1, 0x1);
        gbc.writeMem(0x9ab7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xedd, gbc.sp());
        EXPECT(0x9ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab7));
        EXPECT(0x97, gbc.readMem(0x9ab8));
        // CB 97 004F
        gbc.setState(0x95db, 0x9886, 0xf10, 0xc72c, 0xf952, 0x2be, 0x0, 0x0);
        gbc.writeMem(0x95db, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9886, gbc.sp());
        EXPECT(0x95dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95db));
        EXPECT(0x97, gbc.readMem(0x95dc));
        // CB 97 0050
        gbc.setState(0x8003, 0xd927, 0x8200, 0xa0b7, 0xfa94, 0xc083, 0x0, 0x1);
        gbc.writeMem(0x8003, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x8005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8003));
        EXPECT(0x97, gbc.readMem(0x8004));
        // CB 97 0051
        gbc.setState(0xcb8f, 0xcc94, 0x5f40, 0x3fba, 0x7c68, 0xd209, 0x0, 0x1);
        gbc.writeMem(0xcb8f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcc94, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8f));
        EXPECT(0x97, gbc.readMem(0xcb90));
        // CB 97 0052
        gbc.setState(0x6665, 0xf7c4, 0x14e0, 0x24fb, 0x3c9a, 0xc1ce, 0x0, 0x0);
        gbc.writeMem(0x6665, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf7c4, gbc.sp());
        EXPECT(0x6667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0053
        gbc.setState(0xad4c, 0xbc7c, 0xfb10, 0xf594, 0x5096, 0x3a34, 0x1, 0x1);
        gbc.writeMem(0xad4c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4c));
        EXPECT(0x97, gbc.readMem(0xad4d));
        // CB 97 0054
        gbc.setState(0x8df7, 0xbbdd, 0xd740, 0xec8a, 0x1001, 0x5572, 0x0, 0x0);
        gbc.writeMem(0x8df7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbbdd, gbc.sp());
        EXPECT(0x8df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df7));
        EXPECT(0x97, gbc.readMem(0x8df8));
        // CB 97 0055
        gbc.setState(0xb475, 0xa77c, 0x3170, 0x6cf7, 0x2839, 0x66c2, 0x0, 0x0);
        gbc.writeMem(0xb475, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa77c, gbc.sp());
        EXPECT(0xb477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb475));
        EXPECT(0x97, gbc.readMem(0xb476));
        // CB 97 0056
        gbc.setState(0x4687, 0x6778, 0x7410, 0xa3fc, 0x6d9d, 0x42b, 0x0, 0x0);
        gbc.writeMem(0x4687, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0x4689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0057
        gbc.setState(0x8c3b, 0x30dd, 0x1110, 0xd267, 0x2c32, 0xefad, 0x1, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x30dd, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3b));
        EXPECT(0x97, gbc.readMem(0x8c3c));
        // CB 97 0059
        gbc.setState(0x101b, 0x7a6c, 0x3450, 0xce7, 0xc5c, 0x7964, 0x0, 0x0);
        gbc.writeMem(0x101b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7a6c, gbc.sp());
        EXPECT(0x101d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 005A
        gbc.setState(0x5c4d, 0x9133, 0xc4d0, 0xf2b4, 0x94be, 0x4875, 0x1, 0x0);
        gbc.writeMem(0x5c4d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0x5c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 005B
        gbc.setState(0x3143, 0x95c0, 0xa190, 0x8809, 0x7ca5, 0x6bdd, 0x1, 0x1);
        gbc.writeMem(0x3143, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x95c0, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 005C
        gbc.setState(0x30ea, 0xc4ad, 0x8e80, 0x694f, 0xd7c7, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x30ea, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc4ad, gbc.sp());
        EXPECT(0x30ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 005D
        gbc.setState(0xa4e7, 0x3dbc, 0x7e80, 0xf369, 0xcda3, 0x2219, 0x1, 0x1);
        gbc.writeMem(0xa4e7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3dbc, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e7));
        EXPECT(0x97, gbc.readMem(0xa4e8));
        // CB 97 005E
        gbc.setState(0x7b1b, 0x882b, 0xce90, 0x8f2c, 0x4cf4, 0x4da2, 0x1, 0x1);
        gbc.writeMem(0x7b1b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0x7b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 005F
        gbc.setState(0x910b, 0x9ad9, 0x13d0, 0xe4df, 0x415, 0xfdca, 0x1, 0x1);
        gbc.writeMem(0x910b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9ad9, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910b));
        EXPECT(0x97, gbc.readMem(0x910c));
        // CB 97 0060
        gbc.setState(0xd95d, 0x2509, 0x10b0, 0xe56, 0xb24, 0xb152, 0x1, 0x0);
        gbc.writeMem(0xd95d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2509, gbc.sp());
        EXPECT(0xd95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95d));
        EXPECT(0x97, gbc.readMem(0xd95e));
        // CB 97 0062
        gbc.setState(0x1f6d, 0xa77d, 0x9800, 0xf12d, 0xcb95, 0xc66c, 0x0, 0x1);
        gbc.writeMem(0x1f6d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa77d, gbc.sp());
        EXPECT(0x1f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0064
        gbc.setState(0x4145, 0x85ee, 0x9aa0, 0xe0e7, 0xf3b0, 0x344f, 0x1, 0x1);
        gbc.writeMem(0x4145, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x85ee, gbc.sp());
        EXPECT(0x4147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0065
        gbc.setState(0x748e, 0x575, 0xef00, 0x12fe, 0x9705, 0x33a5, 0x1, 0x1);
        gbc.writeMem(0x748e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0x7490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0067
        gbc.setState(0xe30d, 0x71f, 0x1690, 0xeb89, 0xb515, 0x34fb, 0x1, 0x1);
        gbc.writeMem(0xe30d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x71f, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30d));
        EXPECT(0x97, gbc.readMem(0xe30e));
        // CB 97 0068
        gbc.setState(0x52b9, 0x9de6, 0x3560, 0x2eb7, 0x3c17, 0x11b2, 0x0, 0x0);
        gbc.writeMem(0x52b9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9de6, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0069
        gbc.setState(0x5d22, 0xab71, 0x1830, 0x49c0, 0x312b, 0x375c, 0x0, 0x0);
        gbc.writeMem(0x5d22, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0x5d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 006A
        gbc.setState(0x4363, 0x2715, 0x15a0, 0x158c, 0x4737, 0xc2d8, 0x1, 0x1);
        gbc.writeMem(0x4363, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2715, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 006B
        gbc.setState(0xeb60, 0x283e, 0x4600, 0x7197, 0xa9b2, 0xb23f, 0x0, 0x1);
        gbc.writeMem(0xeb60, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x283e, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0x97, gbc.readMem(0xeb61));
        // CB 97 006C
        gbc.setState(0xceea, 0xfb5b, 0xcdd0, 0xa10f, 0x9f31, 0x37b8, 0x1, 0x1);
        gbc.writeMem(0xceea, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfb5b, gbc.sp());
        EXPECT(0xceec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceea));
        EXPECT(0x97, gbc.readMem(0xceeb));
        // CB 97 006D
        gbc.setState(0x1cfe, 0x4f79, 0x57a0, 0xc3d8, 0x3c25, 0x5628, 0x1, 0x1);
        gbc.writeMem(0x1cfe, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4f79, gbc.sp());
        EXPECT(0x1d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 006E
        gbc.setState(0x3dc9, 0xae33, 0xfe0, 0x6ade, 0xe769, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0x3dc9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xae33, gbc.sp());
        EXPECT(0x3dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 006F
        gbc.setState(0xd58d, 0x3a2a, 0x8b50, 0x7ea8, 0xd1e, 0x654e, 0x0, 0x0);
        gbc.writeMem(0xd58d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0xd58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58d));
        EXPECT(0x97, gbc.readMem(0xd58e));
        // CB 97 0070
        gbc.setState(0x78e4, 0xd869, 0x42c0, 0xb18f, 0xf6b8, 0xe339, 0x0, 0x0);
        gbc.writeMem(0x78e4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0071
        gbc.setState(0xbadd, 0x1c88, 0xfdf0, 0xc0cf, 0x77fc, 0x448e, 0x1, 0x0);
        gbc.writeMem(0xbadd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0xbadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadd));
        EXPECT(0x97, gbc.readMem(0xbade));
        // CB 97 0072
        gbc.setState(0xa417, 0xe5c, 0x9b0, 0x8932, 0x1764, 0x2b5d, 0x0, 0x0);
        gbc.writeMem(0xa417, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa417));
        EXPECT(0x97, gbc.readMem(0xa418));
        // CB 97 0073
        gbc.setState(0x2c1, 0xead3, 0xd4c0, 0xf135, 0x7446, 0x3266, 0x1, 0x1);
        gbc.writeMem(0x2c1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xead3, gbc.sp());
        EXPECT(0x2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0074
        gbc.setState(0x736e, 0xfd9a, 0x4ec0, 0xabf7, 0x17b3, 0xc289, 0x1, 0x1);
        gbc.writeMem(0x736e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0075
        gbc.setState(0xc0aa, 0xe2c2, 0x2cd0, 0xeda7, 0x6396, 0xdcdf, 0x1, 0x0);
        gbc.writeMem(0xc0aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0xc0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0aa));
        EXPECT(0x97, gbc.readMem(0xc0ab));
        // CB 97 0076
        gbc.setState(0xfac, 0x42a4, 0x2da0, 0xfd52, 0xdf95, 0x3d1a, 0x1, 0x1);
        gbc.writeMem(0xfac, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x42a4, gbc.sp());
        EXPECT(0xfae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0077
        gbc.setState(0x6d1f, 0xfab9, 0xa850, 0x5055, 0x5933, 0x108b, 0x0, 0x1);
        gbc.writeMem(0x6d1f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0078
        gbc.setState(0xb78d, 0x57cc, 0x4540, 0xe068, 0x4460, 0x7a86, 0x0, 0x1);
        gbc.writeMem(0xb78d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x57cc, gbc.sp());
        EXPECT(0xb78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78d));
        EXPECT(0x97, gbc.readMem(0xb78e));
        // CB 97 0079
        gbc.setState(0xa9e7, 0xbdb2, 0x1a20, 0x377c, 0xf7e3, 0xbc0, 0x0, 0x0);
        gbc.writeMem(0xa9e7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbdb2, gbc.sp());
        EXPECT(0xa9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e7));
        EXPECT(0x97, gbc.readMem(0xa9e8));
        // CB 97 007A
        gbc.setState(0x1d25, 0x1823, 0xf320, 0xf563, 0xa04b, 0x611e, 0x0, 0x0);
        gbc.writeMem(0x1d25, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1823, gbc.sp());
        EXPECT(0x1d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 007B
        gbc.setState(0xb025, 0xd79f, 0x8f10, 0x156b, 0x3124, 0x8f7c, 0x1, 0x0);
        gbc.writeMem(0xb025, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0xb027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb025));
        EXPECT(0x97, gbc.readMem(0xb026));
        // CB 97 007C
        gbc.setState(0x464b, 0xc222, 0x5730, 0xc937, 0x5a8e, 0xb616, 0x0, 0x1);
        gbc.writeMem(0x464b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc222, gbc.sp());
        EXPECT(0x464d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 007D
        gbc.setState(0xb1ec, 0x294c, 0x57b0, 0xf09a, 0x61e2, 0x839a, 0x1, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0xb1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ec));
        EXPECT(0x97, gbc.readMem(0xb1ed));
        // CB 97 007E
        gbc.setState(0x9199, 0xfecd, 0x9e00, 0x356, 0xab08, 0x8252, 0x0, 0x0);
        gbc.writeMem(0x9199, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9199));
        EXPECT(0x97, gbc.readMem(0x919a));
        // CB 97 007F
        gbc.setState(0x998d, 0x3cb4, 0x3920, 0xe2ee, 0x466b, 0x46c2, 0x0, 0x0);
        gbc.writeMem(0x998d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3cb4, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998d));
        EXPECT(0x97, gbc.readMem(0x998e));
        // CB 97 0080
        gbc.setState(0xa0d3, 0xe82a, 0x2c30, 0x1871, 0x8858, 0xde02, 0x0, 0x1);
        gbc.writeMem(0xa0d3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0xa0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d3));
        EXPECT(0x97, gbc.readMem(0xa0d4));
        // CB 97 0081
        gbc.setState(0x3c63, 0xeb6, 0x28b0, 0x68b7, 0x1c59, 0x3e1e, 0x1, 0x1);
        gbc.writeMem(0x3c63, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xeb6, gbc.sp());
        EXPECT(0x3c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0082
        gbc.setState(0x81c1, 0xe055, 0x7560, 0x2023, 0x50eb, 0x483e, 0x0, 0x1);
        gbc.writeMem(0x81c1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c1));
        EXPECT(0x97, gbc.readMem(0x81c2));
        // CB 97 0083
        gbc.setState(0xb1a4, 0xb5d8, 0xa5b0, 0x50d4, 0xf44f, 0xd97, 0x1, 0x0);
        gbc.writeMem(0xb1a4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a4));
        EXPECT(0x97, gbc.readMem(0xb1a5));
        // CB 97 0084
        gbc.setState(0xce80, 0x15d5, 0x2be0, 0x7e69, 0x2565, 0x739e, 0x0, 0x1);
        gbc.writeMem(0xce80, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce80));
        EXPECT(0x97, gbc.readMem(0xce81));
        // CB 97 0085
        gbc.setState(0x495f, 0xf0c, 0xee70, 0x8116, 0xe90, 0x7455, 0x1, 0x1);
        gbc.writeMem(0x495f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0086
        gbc.setState(0x11db, 0x8f3a, 0x30a0, 0x928d, 0xfb4d, 0x49d4, 0x0, 0x0);
        gbc.writeMem(0x11db, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f3a, gbc.sp());
        EXPECT(0x11dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0087
        gbc.setState(0xe602, 0xe815, 0x43d0, 0x65b, 0xe209, 0xc23d, 0x0, 0x1);
        gbc.writeMem(0xe602, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe815, gbc.sp());
        EXPECT(0xe604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe602));
        EXPECT(0x97, gbc.readMem(0xe603));
        // CB 97 0088
        gbc.setState(0x69a1, 0x2363, 0x6bf0, 0x90fd, 0xc20, 0x12ae, 0x0, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0089
        gbc.setState(0x1699, 0x515c, 0xd8a0, 0xf979, 0x1d59, 0xa984, 0x1, 0x0);
        gbc.writeMem(0x1699, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x515c, gbc.sp());
        EXPECT(0x169b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 008A
        gbc.setState(0xbd5, 0x847f, 0x39e0, 0x5f6c, 0xaf29, 0x2d53, 0x0, 0x1);
        gbc.writeMem(0xbd5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 008B
        gbc.setState(0xeae7, 0x45f2, 0xf240, 0xf9b9, 0xdf44, 0x3702, 0x0, 0x1);
        gbc.writeMem(0xeae7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae7));
        EXPECT(0x97, gbc.readMem(0xeae8));
        // CB 97 008C
        gbc.setState(0xd371, 0x62e2, 0x7670, 0xe547, 0x4c4, 0xd596, 0x1, 0x1);
        gbc.writeMem(0xd371, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x62e2, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd371));
        EXPECT(0x97, gbc.readMem(0xd372));
        // CB 97 008D
        gbc.setState(0x651c, 0x888d, 0xbab0, 0x606e, 0x3f38, 0x2de5, 0x1, 0x1);
        gbc.writeMem(0x651c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x888d, gbc.sp());
        EXPECT(0x651e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 008E
        gbc.setState(0x9cf2, 0xa8a7, 0x4170, 0x704a, 0x6d9e, 0xf650, 0x1, 0x0);
        gbc.writeMem(0x9cf2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x9cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf2));
        EXPECT(0x97, gbc.readMem(0x9cf3));
        // CB 97 008F
        gbc.setState(0x15e1, 0x7bce, 0x80e0, 0x6e2b, 0x3d5d, 0x6013, 0x0, 0x0);
        gbc.writeMem(0x15e1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7bce, gbc.sp());
        EXPECT(0x15e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0090
        gbc.setState(0x89d8, 0x68f7, 0x54e0, 0x4c33, 0x5191, 0xaf3a, 0x0, 0x0);
        gbc.writeMem(0x89d8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d8));
        EXPECT(0x97, gbc.readMem(0x89d9));
        // CB 97 0091
        gbc.setState(0x29f7, 0x9974, 0xf1c0, 0xdf5c, 0x64fe, 0xd27, 0x1, 0x1);
        gbc.writeMem(0x29f7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x29f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0092
        gbc.setState(0x22ec, 0x4a6e, 0xdca0, 0x851f, 0x5cc5, 0x580b, 0x0, 0x0);
        gbc.writeMem(0x22ec, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4a6e, gbc.sp());
        EXPECT(0x22ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0093
        gbc.setState(0xbcac, 0xbe6c, 0x6990, 0xffc4, 0xe2a9, 0x58d8, 0x0, 0x1);
        gbc.writeMem(0xbcac, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0xbcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcac));
        EXPECT(0x97, gbc.readMem(0xbcad));
        // CB 97 0094
        gbc.setState(0x3f03, 0xfaac, 0x7d30, 0xbf0a, 0x1b83, 0x3efe, 0x0, 0x1);
        gbc.writeMem(0x3f03, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0096
        gbc.setState(0xd7c2, 0x755c, 0x34b0, 0xb4c5, 0xe6d9, 0xcb1c, 0x0, 0x1);
        gbc.writeMem(0xd7c2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x755c, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c2));
        EXPECT(0x97, gbc.readMem(0xd7c3));
        // CB 97 0097
        gbc.setState(0x2091, 0x60f7, 0x1e70, 0x50d, 0x13ca, 0xc39f, 0x1, 0x1);
        gbc.writeMem(0x2091, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0x2093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0098
        gbc.setState(0x3008, 0x6169, 0xd120, 0xce66, 0x154, 0x741, 0x1, 0x1);
        gbc.writeMem(0x3008, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6169, gbc.sp());
        EXPECT(0x300a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0099
        gbc.setState(0xa6b, 0x9163, 0xd0d0, 0x8081, 0xd3da, 0xbfae, 0x1, 0x0);
        gbc.writeMem(0xa6b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 009A
        gbc.setState(0x824f, 0x3be4, 0x5f50, 0x748e, 0x224e, 0x7fc, 0x0, 0x0);
        gbc.writeMem(0x824f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0x8251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824f));
        EXPECT(0x97, gbc.readMem(0x8250));
        // CB 97 009B
        gbc.setState(0x3733, 0x44df, 0xd3c0, 0xf401, 0xd8bc, 0x23c4, 0x0, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 009D
        gbc.setState(0xd0ac, 0xbcd6, 0x6ca0, 0x9c74, 0x5b9b, 0xf7f4, 0x1, 0x0);
        gbc.writeMem(0xd0ac, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbcd6, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ac));
        EXPECT(0x97, gbc.readMem(0xd0ad));
        // CB 97 009E
        gbc.setState(0x680d, 0x796e, 0x8680, 0xbbed, 0xf32a, 0xec83, 0x1, 0x0);
        gbc.writeMem(0x680d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x796e, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 009F
        gbc.setState(0x7806, 0x49ba, 0x66b0, 0x18a6, 0x2741, 0x8797, 0x1, 0x0);
        gbc.writeMem(0x7806, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x49ba, gbc.sp());
        EXPECT(0x7808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00A0
        gbc.setState(0x44cc, 0xcdd5, 0x7b0, 0x16c1, 0x71a3, 0xdd51, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00A1
        gbc.setState(0xe634, 0x1e3f, 0x5860, 0x89fe, 0xe52d, 0x11b2, 0x1, 0x1);
        gbc.writeMem(0xe634, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1e3f, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe634));
        EXPECT(0x97, gbc.readMem(0xe635));
        // CB 97 00A2
        gbc.setState(0xe366, 0xf327, 0x3770, 0xf839, 0xacbf, 0x866c, 0x1, 0x0);
        gbc.writeMem(0xe366, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0xe368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe366));
        EXPECT(0x97, gbc.readMem(0xe367));
        // CB 97 00A3
        gbc.setState(0x8182, 0x1ba3, 0x69c0, 0x2b4e, 0x9fea, 0x2eff, 0x1, 0x1);
        gbc.writeMem(0x8182, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1ba3, gbc.sp());
        EXPECT(0x8184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8182));
        EXPECT(0x97, gbc.readMem(0x8183));
        // CB 97 00A4
        gbc.setState(0x8c7, 0xd7c3, 0xaee0, 0x1c6b, 0x720f, 0xe16a, 0x0, 0x0);
        gbc.writeMem(0x8c7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd7c3, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00A5
        gbc.setState(0xca6, 0x94a5, 0xc360, 0x88c3, 0x29f2, 0x54cd, 0x0, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x94a5, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00A6
        gbc.setState(0x17a7, 0x8bad, 0x71d0, 0x1271, 0xee1d, 0xe3cf, 0x0, 0x0);
        gbc.writeMem(0x17a7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8bad, gbc.sp());
        EXPECT(0x17a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00A7
        gbc.setState(0xb6cb, 0xbc2a, 0xb680, 0xc921, 0x53d6, 0x8659, 0x1, 0x1);
        gbc.writeMem(0xb6cb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc2a, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cb));
        EXPECT(0x97, gbc.readMem(0xb6cc));
        // CB 97 00A8
        gbc.setState(0xb1c6, 0xf992, 0x3bf0, 0x230, 0xe4e8, 0xaed7, 0x1, 0x1);
        gbc.writeMem(0xb1c6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c6));
        EXPECT(0x97, gbc.readMem(0xb1c7));
        // CB 97 00A9
        gbc.setState(0x1099, 0x680, 0xe3e0, 0x4df6, 0x3dc1, 0x60aa, 0x1, 0x1);
        gbc.writeMem(0x1099, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00AA
        gbc.setState(0xa4e3, 0x67ce, 0xbe30, 0x684, 0x9198, 0xc1eb, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e3));
        EXPECT(0x97, gbc.readMem(0xa4e4));
        // CB 97 00AB
        gbc.setState(0xa905, 0x6a1c, 0x2df0, 0x9f1e, 0xd9af, 0xd62d, 0x0, 0x0);
        gbc.writeMem(0xa905, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6a1c, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa905));
        EXPECT(0x97, gbc.readMem(0xa906));
        // CB 97 00AC
        gbc.setState(0x46f1, 0xcceb, 0x5b00, 0x9f01, 0x1c12, 0xa08c, 0x0, 0x1);
        gbc.writeMem(0x46f1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcceb, gbc.sp());
        EXPECT(0x46f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00AD
        gbc.setState(0x1b8f, 0x563c, 0x7c10, 0x73, 0xbe55, 0x1e28, 0x1, 0x1);
        gbc.writeMem(0x1b8f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x1b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00AF
        gbc.setState(0xdeb4, 0xa0b4, 0x7a60, 0x7715, 0x9224, 0xd394, 0x0, 0x0);
        gbc.writeMem(0xdeb4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa0b4, gbc.sp());
        EXPECT(0xdeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb4));
        EXPECT(0x97, gbc.readMem(0xdeb5));
        // CB 97 00B0
        gbc.setState(0x7aa7, 0xf681, 0xf3d0, 0x2320, 0x2f17, 0x8b74, 0x1, 0x1);
        gbc.writeMem(0x7aa7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0x7aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00B1
        gbc.setState(0x405e, 0x1b34, 0xd340, 0xd9b2, 0x2330, 0x844c, 0x0, 0x0);
        gbc.writeMem(0x405e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b34, gbc.sp());
        EXPECT(0x4060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00B2
        gbc.setState(0x7382, 0x833f, 0xf4a0, 0xbacc, 0xf7af, 0x47e7, 0x0, 0x1);
        gbc.writeMem(0x7382, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x833f, gbc.sp());
        EXPECT(0x7384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00B4
        gbc.setState(0xbe61, 0xca1a, 0x7890, 0x5c86, 0x3107, 0x167e, 0x1, 0x1);
        gbc.writeMem(0xbe61, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xca1a, gbc.sp());
        EXPECT(0xbe63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe61));
        EXPECT(0x97, gbc.readMem(0xbe62));
        // CB 97 00B5
        gbc.setState(0x9dc9, 0xd886, 0x15a0, 0x6838, 0x8bee, 0xda3a, 0x0, 0x0);
        gbc.writeMem(0x9dc9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd886, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc9));
        EXPECT(0x97, gbc.readMem(0x9dca));
        // CB 97 00B6
        gbc.setState(0x9869, 0x9c83, 0x7630, 0xf201, 0x788c, 0xa9e, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x986b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9869));
        EXPECT(0x97, gbc.readMem(0x986a));
        // CB 97 00B7
        gbc.setState(0x6f82, 0x4311, 0xc000, 0xe8a8, 0xbae0, 0x2fd3, 0x0, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4311, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00B8
        gbc.setState(0xd063, 0x2d8d, 0x1590, 0x2f73, 0x3a84, 0x3bb0, 0x1, 0x0);
        gbc.writeMem(0xd063, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2d8d, gbc.sp());
        EXPECT(0xd065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd063));
        EXPECT(0x97, gbc.readMem(0xd064));
        // CB 97 00B9
        gbc.setState(0x68a8, 0x1d88, 0x200, 0x1187, 0xa8e9, 0xc79a, 0x0, 0x1);
        gbc.writeMem(0x68a8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0x68aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00BB
        gbc.setState(0x6c69, 0xa657, 0x2750, 0x3cce, 0xde76, 0x5329, 0x0, 0x1);
        gbc.writeMem(0x6c69, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa657, gbc.sp());
        EXPECT(0x6c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00BC
        gbc.setState(0xc0ac, 0xe35f, 0x7de0, 0x138e, 0xc73, 0xa2b0, 0x1, 0x1);
        gbc.writeMem(0xc0ac, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0x97, gbc.readMem(0xc0ad));
        // CB 97 00BE
        gbc.setState(0x51e3, 0x5cf, 0xba80, 0x46cc, 0xf52, 0x101f, 0x0, 0x0);
        gbc.writeMem(0x51e3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5cf, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00BF
        gbc.setState(0x6c8, 0x8714, 0xbd20, 0xe40c, 0xe825, 0x9bf, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0x6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00C0
        gbc.setState(0xbf94, 0xcf2, 0x1710, 0x2dca, 0xf285, 0x86f9, 0x1, 0x1);
        gbc.writeMem(0xbf94, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcf2, gbc.sp());
        EXPECT(0xbf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf94));
        EXPECT(0x97, gbc.readMem(0xbf95));
        // CB 97 00C1
        gbc.setState(0xd702, 0xe4c3, 0x740, 0xf960, 0xd29, 0x621a, 0x1, 0x1);
        gbc.writeMem(0xd702, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0xd704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd702));
        EXPECT(0x97, gbc.readMem(0xd703));
        // CB 97 00C2
        gbc.setState(0xd99d, 0xb9bb, 0xec60, 0x24e7, 0x5a67, 0x41d7, 0x0, 0x0);
        gbc.writeMem(0xd99d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb9bb, gbc.sp());
        EXPECT(0xd99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99d));
        EXPECT(0x97, gbc.readMem(0xd99e));
        // CB 97 00C3
        gbc.setState(0xbf4e, 0x33f4, 0x6950, 0x7ae1, 0x6662, 0xc849, 0x1, 0x0);
        gbc.writeMem(0xbf4e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x33f4, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4e));
        EXPECT(0x97, gbc.readMem(0xbf4f));
        // CB 97 00C4
        gbc.setState(0x9f, 0xd92a, 0xe2d0, 0x23bc, 0xcaa2, 0x6992, 0x1, 0x1);
        gbc.writeMem(0x9f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0xa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00C5
        gbc.setState(0x1131, 0x7944, 0xfc10, 0xae07, 0x9b3c, 0xe6, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7944, gbc.sp());
        EXPECT(0x1133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00C6
        gbc.setState(0xce2a, 0x6875, 0x7f20, 0x87ac, 0xb042, 0xe0ab, 0x1, 0x0);
        gbc.writeMem(0xce2a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2a));
        EXPECT(0x97, gbc.readMem(0xce2b));
        // CB 97 00C7
        gbc.setState(0x443, 0x1399, 0xc200, 0xaef0, 0x678c, 0x2b6e, 0x0, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1399, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00C8
        gbc.setState(0xcbbf, 0x264c, 0xb010, 0xd40e, 0xce7f, 0xcf54, 0x1, 0x1);
        gbc.writeMem(0xcbbf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x264c, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbf));
        EXPECT(0x97, gbc.readMem(0xcbc0));
        // CB 97 00C9
        gbc.setState(0x1812, 0x518c, 0x2750, 0x6e94, 0x49be, 0x6f1d, 0x0, 0x1);
        gbc.writeMem(0x1812, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x1814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00CA
        gbc.setState(0x5266, 0x4e9e, 0x8080, 0x297a, 0x4556, 0x18de, 0x0, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4e9e, gbc.sp());
        EXPECT(0x5268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00CB
        gbc.setState(0x2c3a, 0x4304, 0x6d0, 0xda8e, 0x972e, 0x7d62, 0x1, 0x0);
        gbc.writeMem(0x2c3a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4304, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00CD
        gbc.setState(0x9237, 0xc3, 0x55d0, 0xb3f8, 0xf878, 0x3f97, 0x0, 0x1);
        gbc.writeMem(0x9237, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0x97, gbc.readMem(0x9238));
        // CB 97 00CE
        gbc.setState(0x5851, 0x3b83, 0xc0a0, 0x50e9, 0x25bc, 0x4295, 0x1, 0x0);
        gbc.writeMem(0x5851, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00CF
        gbc.setState(0xcf48, 0xc831, 0xcde0, 0x7ba8, 0x4d8a, 0x9dec, 0x0, 0x1);
        gbc.writeMem(0xcf48, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc831, gbc.sp());
        EXPECT(0xcf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf48));
        EXPECT(0x97, gbc.readMem(0xcf49));
        // CB 97 00D0
        gbc.setState(0x2783, 0x5a6f, 0x1280, 0xe73f, 0xe2c0, 0xdb23, 0x0, 0x1);
        gbc.writeMem(0x2783, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5a6f, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00D1
        gbc.setState(0xc2aa, 0xb54c, 0xf9d0, 0xc14e, 0xe795, 0x57ba, 0x0, 0x0);
        gbc.writeMem(0xc2aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb54c, gbc.sp());
        EXPECT(0xc2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2aa));
        EXPECT(0x97, gbc.readMem(0xc2ab));
        // CB 97 00D2
        gbc.setState(0xbb8e, 0xe493, 0xd200, 0xea3c, 0x1177, 0x61c4, 0x0, 0x1);
        gbc.writeMem(0xbb8e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe493, gbc.sp());
        EXPECT(0xbb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8e));
        EXPECT(0x97, gbc.readMem(0xbb8f));
        // CB 97 00D3
        gbc.setState(0x23b7, 0x9dc3, 0xd1d0, 0x6e5, 0x7698, 0x2878, 0x0, 0x1);
        gbc.writeMem(0x23b7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9dc3, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00D4
        gbc.setState(0x1da1, 0x2818, 0x1970, 0x9db1, 0x9950, 0x5ad, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00D5
        gbc.setState(0x90b7, 0x45e7, 0x9eb0, 0x52b3, 0x5be3, 0x6c14, 0x1, 0x0);
        gbc.writeMem(0x90b7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x45e7, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0x97, gbc.readMem(0x90b8));
        // CB 97 00D6
        gbc.setState(0x767a, 0x2914, 0xf810, 0x6ae1, 0xc32e, 0xd6ca, 0x1, 0x1);
        gbc.writeMem(0x767a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00D7
        gbc.setState(0x8deb, 0x18d, 0x12f0, 0x3738, 0xa4d1, 0xaebd, 0x0, 0x1);
        gbc.writeMem(0x8deb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0x8ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8deb));
        EXPECT(0x97, gbc.readMem(0x8dec));
        // CB 97 00D8
        gbc.setState(0xbf14, 0x437, 0xaae0, 0xa595, 0xb1da, 0x794c, 0x1, 0x0);
        gbc.writeMem(0xbf14, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x437, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf14));
        EXPECT(0x97, gbc.readMem(0xbf15));
        // CB 97 00D9
        gbc.setState(0x5075, 0xb55c, 0x9e70, 0x9f00, 0xbb29, 0x212, 0x0, 0x1);
        gbc.writeMem(0x5075, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb55c, gbc.sp());
        EXPECT(0x5077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00DA
        gbc.setState(0x6ad0, 0x4bc4, 0x7f60, 0xfd1, 0x57e8, 0x8396, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00DB
        gbc.setState(0xabe4, 0x2d5c, 0xe680, 0xc925, 0x527, 0x3f81, 0x0, 0x1);
        gbc.writeMem(0xabe4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe4));
        EXPECT(0x97, gbc.readMem(0xabe5));
        // CB 97 00DC
        gbc.setState(0xe42, 0xbf58, 0x2ee0, 0xbb88, 0x9a53, 0x8bc2, 0x0, 0x0);
        gbc.writeMem(0xe42, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0xe44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00DD
        gbc.setState(0x4052, 0xef83, 0x2230, 0xfef3, 0x520, 0x53b, 0x1, 0x1);
        gbc.writeMem(0x4052, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00DE
        gbc.setState(0x323e, 0x36c, 0x28b0, 0x80bd, 0xa1c8, 0x149f, 0x0, 0x0);
        gbc.writeMem(0x323e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x36c, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00DF
        gbc.setState(0x4fc2, 0x7816, 0xd40, 0xe7c8, 0x3a09, 0x3449, 0x0, 0x1);
        gbc.writeMem(0x4fc2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7816, gbc.sp());
        EXPECT(0x4fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00E1
        gbc.setState(0x998f, 0x6422, 0x7920, 0x886e, 0x92b6, 0x9b23, 0x0, 0x0);
        gbc.writeMem(0x998f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6422, gbc.sp());
        EXPECT(0x9991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998f));
        EXPECT(0x97, gbc.readMem(0x9990));
        // CB 97 00E2
        gbc.setState(0x9c9d, 0x4a85, 0xa1e0, 0x4bbd, 0x312c, 0x9dc8, 0x1, 0x0);
        gbc.writeMem(0x9c9d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4a85, gbc.sp());
        EXPECT(0x9c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9d));
        EXPECT(0x97, gbc.readMem(0x9c9e));
        // CB 97 00E3
        gbc.setState(0xdf59, 0xefa4, 0x4580, 0x3ddc, 0xcaab, 0x2699, 0x0, 0x1);
        gbc.writeMem(0xdf59, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf59));
        EXPECT(0x97, gbc.readMem(0xdf5a));
        // CB 97 00E4
        gbc.setState(0x3874, 0x9b01, 0x6400, 0xf384, 0x1539, 0xe161, 0x1, 0x0);
        gbc.writeMem(0x3874, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9b01, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00E5
        gbc.setState(0x101d, 0xcfa9, 0x4470, 0xf013, 0xed6b, 0x97e8, 0x1, 0x1);
        gbc.writeMem(0x101d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x101f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00E6
        gbc.setState(0x5a4b, 0x2b87, 0xd2f0, 0x5dba, 0x9f2d, 0x5d7, 0x1, 0x0);
        gbc.writeMem(0x5a4b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2b87, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00E7
        gbc.setState(0xc771, 0xe61, 0x1530, 0xfb2c, 0xfc55, 0x3dbb, 0x1, 0x1);
        gbc.writeMem(0xc771, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc771));
        EXPECT(0x97, gbc.readMem(0xc772));
        // CB 97 00E8
        gbc.setState(0x7218, 0x1e5, 0x65f0, 0xf8a6, 0x4ea9, 0xb44a, 0x1, 0x0);
        gbc.writeMem(0x7218, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e5, gbc.sp());
        EXPECT(0x721a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00E9
        gbc.setState(0x4d04, 0x7ffe, 0x17a0, 0x977c, 0xdae5, 0xeceb, 0x0, 0x1);
        gbc.writeMem(0x4d04, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0x4d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00EB
        gbc.setState(0x6a38, 0xf6a2, 0xdd90, 0x68c3, 0x5121, 0x291a, 0x0, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf6a2, gbc.sp());
        EXPECT(0x6a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00EC
        gbc.setState(0x19d3, 0x9312, 0x15e0, 0x78ed, 0x1cc6, 0xba21, 0x0, 0x1);
        gbc.writeMem(0x19d3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9312, gbc.sp());
        EXPECT(0x19d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00ED
        gbc.setState(0x4274, 0xadc7, 0x8370, 0xd890, 0x7d0a, 0xed71, 0x0, 0x0);
        gbc.writeMem(0x4274, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xadc7, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00EE
        gbc.setState(0xcf06, 0x5a62, 0xcb90, 0x82a2, 0x77d9, 0x901c, 0x0, 0x0);
        gbc.writeMem(0xcf06, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5a62, gbc.sp());
        EXPECT(0xcf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf06));
        EXPECT(0x97, gbc.readMem(0xcf07));
        // CB 97 00EF
        gbc.setState(0x5693, 0x5d2e, 0x3d10, 0x84fb, 0x9b0e, 0x2909, 0x1, 0x0);
        gbc.writeMem(0x5693, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5d2e, gbc.sp());
        EXPECT(0x5695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F1
        gbc.setState(0x48e4, 0xe6fa, 0x7cb0, 0x5205, 0x508f, 0xc74e, 0x1, 0x0);
        gbc.writeMem(0x48e4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x48e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F2
        gbc.setState(0xdebd, 0xede9, 0xdc80, 0xa7b0, 0x7143, 0x7549, 0x1, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xede9, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebd));
        EXPECT(0x97, gbc.readMem(0xdebe));
        // CB 97 00F3
        gbc.setState(0x3952, 0x509a, 0xb030, 0xacd, 0x33a9, 0xc4e5, 0x0, 0x1);
        gbc.writeMem(0x3952, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x509a, gbc.sp());
        EXPECT(0x3954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F4
        gbc.setState(0x7260, 0xad0a, 0x3470, 0xec5e, 0x7506, 0x15ad, 0x0, 0x0);
        gbc.writeMem(0x7260, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad0a, gbc.sp());
        EXPECT(0x7262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F5
        gbc.setState(0x45ef, 0xccc1, 0x4ab0, 0xa32b, 0xa64f, 0x95e1, 0x0, 0x1);
        gbc.writeMem(0x45ef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xccc1, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F7
        gbc.setState(0x151b, 0x41a4, 0x1800, 0x265f, 0x8bd1, 0xfde6, 0x1, 0x0);
        gbc.writeMem(0x151b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x41a4, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00F8
        gbc.setState(0x3af5, 0x2cf9, 0x4570, 0x295b, 0xe514, 0x1c40, 0x0, 0x1);
        gbc.writeMem(0x3af5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2cf9, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00F9
        gbc.setState(0xc065, 0x1288, 0xf360, 0xfd31, 0x758c, 0x11a1, 0x1, 0x1);
        gbc.writeMem(0xc065, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1288, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc065));
        EXPECT(0x97, gbc.readMem(0xc066));
        // CB 97 00FA
        gbc.setState(0xc8e8, 0xef30, 0xa8f0, 0x217f, 0x76b, 0xc371, 0x0, 0x1);
        gbc.writeMem(0xc8e8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xef30, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e8));
        EXPECT(0x97, gbc.readMem(0xc8e9));
        // CB 97 00FC
        gbc.setState(0x3860, 0x6ec6, 0x6bb0, 0x5eca, 0xf62a, 0x8eda, 0x0, 0x1);
        gbc.writeMem(0x3860, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ec6, gbc.sp());
        EXPECT(0x3862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00FD
        gbc.setState(0x85c, 0xc864, 0x8110, 0xcb2, 0xd781, 0x2574, 0x0, 0x0);
        gbc.writeMem(0x85c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc864, gbc.sp());
        EXPECT(0x85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 00FE
        gbc.setState(0x4e55, 0x1f19, 0x8be0, 0xa4f8, 0xe69f, 0xd40a, 0x1, 0x0);
        gbc.writeMem(0x4e55, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1f19, gbc.sp());
        EXPECT(0x4e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 00FF
        gbc.setState(0x7e58, 0x5cd9, 0x1620, 0x5b0b, 0x1d1b, 0x4edf, 0x0, 0x0);
        gbc.writeMem(0x7e58, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5cd9, gbc.sp());
        EXPECT(0x7e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0100
        gbc.setState(0xa36f, 0x2723, 0x6c20, 0xa315, 0x8be9, 0x9aed, 0x1, 0x1);
        gbc.writeMem(0xa36f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2723, gbc.sp());
        EXPECT(0xa371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36f));
        EXPECT(0x97, gbc.readMem(0xa370));
        // CB 97 0101
        gbc.setState(0x9723, 0x188a, 0x8d80, 0xd022, 0x376f, 0xb33c, 0x0, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x188a, gbc.sp());
        EXPECT(0x9725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9723));
        EXPECT(0x97, gbc.readMem(0x9724));
        // CB 97 0102
        gbc.setState(0x3ecb, 0xc07d, 0x7dd0, 0xd86c, 0xd1c3, 0xbef4, 0x0, 0x0);
        gbc.writeMem(0x3ecb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc07d, gbc.sp());
        EXPECT(0x3ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0103
        gbc.setState(0xe844, 0x21bd, 0x4fc0, 0x37f4, 0x40db, 0xbc90, 0x0, 0x1);
        gbc.writeMem(0xe844, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x21bd, gbc.sp());
        EXPECT(0xe846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe844));
        EXPECT(0x97, gbc.readMem(0xe845));
        // CB 97 0104
        gbc.setState(0x8c3a, 0x139b, 0x5e70, 0x2166, 0x5a63, 0x1cbe, 0x0, 0x1);
        gbc.writeMem(0x8c3a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x139b, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3a));
        EXPECT(0x97, gbc.readMem(0x8c3b));
        // CB 97 0105
        gbc.setState(0x577e, 0x99ff, 0x3c80, 0xfea4, 0xcf24, 0xf965, 0x1, 0x1);
        gbc.writeMem(0x577e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x99ff, gbc.sp());
        EXPECT(0x5780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0106
        gbc.setState(0xaa99, 0xd06, 0x5be0, 0xb744, 0xc143, 0x4b11, 0x0, 0x1);
        gbc.writeMem(0xaa99, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd06, gbc.sp());
        EXPECT(0xaa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa99));
        EXPECT(0x97, gbc.readMem(0xaa9a));
        // CB 97 0107
        gbc.setState(0xd51b, 0xbf28, 0xa190, 0xe6c9, 0x5473, 0x1265, 0x1, 0x1);
        gbc.writeMem(0xd51b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbf28, gbc.sp());
        EXPECT(0xd51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51b));
        EXPECT(0x97, gbc.readMem(0xd51c));
        // CB 97 0108
        gbc.setState(0x6af2, 0xd645, 0x670, 0xdb92, 0xcfe4, 0xd3a2, 0x0, 0x0);
        gbc.writeMem(0x6af2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0x6af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0109
        gbc.setState(0x9523, 0x7ff3, 0x820, 0x22e1, 0xe28a, 0xb251, 0x0, 0x1);
        gbc.writeMem(0x9523, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ff3, gbc.sp());
        EXPECT(0x9525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9523));
        EXPECT(0x97, gbc.readMem(0x9524));
        // CB 97 010A
        gbc.setState(0x5f40, 0x655d, 0x5a50, 0xc419, 0xc923, 0xdfc4, 0x0, 0x0);
        gbc.writeMem(0x5f40, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0x5f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 010B
        gbc.setState(0xe3f0, 0x6463, 0xc600, 0x7bc8, 0x81af, 0xd5f9, 0x0, 0x0);
        gbc.writeMem(0xe3f0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6463, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f0));
        EXPECT(0x97, gbc.readMem(0xe3f1));
        // CB 97 010C
        gbc.setState(0xd7de, 0x734d, 0xc520, 0x3054, 0xbd1e, 0xa746, 0x0, 0x0);
        gbc.writeMem(0xd7de, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x734d, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7de));
        EXPECT(0x97, gbc.readMem(0xd7df));
        // CB 97 010D
        gbc.setState(0x944f, 0x83b4, 0x5cf0, 0x3ee, 0x6879, 0x6c43, 0x1, 0x0);
        gbc.writeMem(0x944f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0x9451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944f));
        EXPECT(0x97, gbc.readMem(0x9450));
        // CB 97 010E
        gbc.setState(0x51f, 0x64c2, 0x75f0, 0x5742, 0x9fc0, 0x702e, 0x1, 0x0);
        gbc.writeMem(0x51f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x64c2, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 010F
        gbc.setState(0xab14, 0xb049, 0x2cc0, 0xc79c, 0x9df0, 0x9eee, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb049, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab14));
        EXPECT(0x97, gbc.readMem(0xab15));
        // CB 97 0110
        gbc.setState(0x13e8, 0x4f7a, 0x6230, 0xa066, 0xaaf3, 0x4ca, 0x1, 0x0);
        gbc.writeMem(0x13e8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0x13ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0111
        gbc.setState(0x7ba3, 0x35d2, 0xdb30, 0x3010, 0x5301, 0x26be, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x35d2, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0113
        gbc.setState(0x1d3d, 0xff2a, 0x6270, 0x31c0, 0xe5e8, 0x4437, 0x1, 0x1);
        gbc.writeMem(0x1d3d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x1d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0114
        gbc.setState(0x7d3c, 0xd5e5, 0xb740, 0x9fca, 0xa25, 0x189e, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd5e5, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0115
        gbc.setState(0xae2, 0x84f3, 0xeb30, 0x5e17, 0x2270, 0xd834, 0x0, 0x0);
        gbc.writeMem(0xae2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0xae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0116
        gbc.setState(0x1486, 0x8277, 0x6fb0, 0x1a50, 0x3a1d, 0xdd91, 0x1, 0x1);
        gbc.writeMem(0x1486, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x1488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0117
        gbc.setState(0x3061, 0x7bcf, 0x180, 0xc0c5, 0x9cdc, 0xc941, 0x1, 0x1);
        gbc.writeMem(0x3061, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7bcf, gbc.sp());
        EXPECT(0x3063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0118
        gbc.setState(0x3129, 0x5627, 0xb530, 0x20de, 0xb40b, 0x4856, 0x1, 0x1);
        gbc.writeMem(0x3129, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5627, gbc.sp());
        EXPECT(0x312b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0119
        gbc.setState(0x9dbb, 0x43a5, 0x1130, 0x82f8, 0xf3dc, 0xa291, 0x0, 0x0);
        gbc.writeMem(0x9dbb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x43a5, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0x97, gbc.readMem(0x9dbc));
        // CB 97 011A
        gbc.setState(0x3ebd, 0x5537, 0x5dd0, 0xbeb1, 0x6ff7, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0x3ebd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x3ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 011B
        gbc.setState(0xe4af, 0x19a4, 0x9ef0, 0xd1ce, 0xf203, 0x4645, 0x1, 0x1);
        gbc.writeMem(0xe4af, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x19a4, gbc.sp());
        EXPECT(0xe4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4af));
        EXPECT(0x97, gbc.readMem(0xe4b0));
        // CB 97 011C
        gbc.setState(0x2c51, 0x8f23, 0x25b0, 0xdff5, 0x80dc, 0x23a4, 0x1, 0x0);
        gbc.writeMem(0x2c51, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8f23, gbc.sp());
        EXPECT(0x2c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 011D
        gbc.setState(0xd781, 0xf15f, 0xf6e0, 0xeb29, 0x58b, 0x6b91, 0x1, 0x0);
        gbc.writeMem(0xd781, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xd783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd781));
        EXPECT(0x97, gbc.readMem(0xd782));
        // CB 97 011E
        gbc.setState(0x3303, 0x7b97, 0xcbd0, 0xed98, 0x41ac, 0x4497, 0x1, 0x1);
        gbc.writeMem(0x3303, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7b97, gbc.sp());
        EXPECT(0x3305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 011F
        gbc.setState(0x235f, 0x91ad, 0x1f40, 0xa27b, 0xa44d, 0x2e8c, 0x1, 0x1);
        gbc.writeMem(0x235f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x91ad, gbc.sp());
        EXPECT(0x2361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0120
        gbc.setState(0x9e8d, 0x3a53, 0x8050, 0xc921, 0x73a2, 0x5939, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0x9e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8d));
        EXPECT(0x97, gbc.readMem(0x9e8e));
        // CB 97 0121
        gbc.setState(0x2fdb, 0xe457, 0xda10, 0xd4a, 0x663, 0x9138, 0x0, 0x1);
        gbc.writeMem(0x2fdb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0x2fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0122
        gbc.setState(0xda4b, 0x63f1, 0x8e60, 0x854d, 0x7f42, 0x7c29, 0x0, 0x1);
        gbc.writeMem(0xda4b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x63f1, gbc.sp());
        EXPECT(0xda4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4b));
        EXPECT(0x97, gbc.readMem(0xda4c));
        // CB 97 0123
        gbc.setState(0xeeff, 0xe7e0, 0xcb30, 0x2734, 0x1a13, 0x9869, 0x0, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe7e0, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x97, gbc.readMem(0xef00));
        // CB 97 0124
        gbc.setState(0x4a11, 0x6fe3, 0x3960, 0x2691, 0x732d, 0xfda1, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x4a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0125
        gbc.setState(0x4b44, 0x81b, 0xd1b0, 0xc320, 0x952d, 0x5ea6, 0x0, 0x1);
        gbc.writeMem(0x4b44, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x81b, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0126
        gbc.setState(0x305b, 0xca90, 0xda30, 0x4e3f, 0x40c6, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0x305b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0127
        gbc.setState(0x277d, 0xed50, 0x5960, 0x1fbb, 0x93da, 0xf9d1, 0x1, 0x0);
        gbc.writeMem(0x277d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed50, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0128
        gbc.setState(0xbf27, 0xf004, 0xb5d0, 0x97fb, 0x7bfd, 0x7cab, 0x0, 0x0);
        gbc.writeMem(0xbf27, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf27));
        EXPECT(0x97, gbc.readMem(0xbf28));
        // CB 97 0129
        gbc.setState(0x27f6, 0xd93a, 0x83b0, 0x3be4, 0xe89d, 0xee5c, 0x0, 0x0);
        gbc.writeMem(0x27f6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd93a, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 012A
        gbc.setState(0x9876, 0x59b0, 0x270, 0x2218, 0x1fd4, 0x5f28, 0x1, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x59b0, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x97, gbc.readMem(0x9877));
        // CB 97 012B
        gbc.setState(0x637c, 0x45a0, 0x60c0, 0x954e, 0xc924, 0x8a74, 0x0, 0x0);
        gbc.writeMem(0x637c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x45a0, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 012C
        gbc.setState(0xc7a7, 0x57da, 0x1a90, 0x9dc1, 0x8c0d, 0x701c, 0x1, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x97, gbc.readMem(0xc7a8));
        // CB 97 012D
        gbc.setState(0x8c20, 0x1b0e, 0x4620, 0xbbac, 0x30bd, 0xcdf8, 0x1, 0x0);
        gbc.writeMem(0x8c20, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1b0e, gbc.sp());
        EXPECT(0x8c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c20));
        EXPECT(0x97, gbc.readMem(0x8c21));
        // CB 97 012E
        gbc.setState(0xc7bc, 0x3aba, 0x8680, 0x8492, 0x858e, 0x810d, 0x0, 0x0);
        gbc.writeMem(0xc7bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3aba, gbc.sp());
        EXPECT(0xc7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bc));
        EXPECT(0x97, gbc.readMem(0xc7bd));
        // CB 97 012F
        gbc.setState(0x1c35, 0x3142, 0x300, 0x7c4, 0x1885, 0xd208, 0x0, 0x0);
        gbc.writeMem(0x1c35, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x1c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0130
        gbc.setState(0x6a49, 0xdfbc, 0x880, 0xd364, 0x94b8, 0xda8d, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0x6a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0131
        gbc.setState(0x2e7c, 0x1654, 0xf920, 0xe779, 0x1e48, 0xd0b9, 0x0, 0x0);
        gbc.writeMem(0x2e7c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1654, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0132
        gbc.setState(0x4ade, 0x6b3f, 0x7620, 0x4bf6, 0x9f79, 0xda71, 0x1, 0x1);
        gbc.writeMem(0x4ade, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6b3f, gbc.sp());
        EXPECT(0x4ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0133
        gbc.setState(0x534d, 0x7b23, 0xec90, 0xefcb, 0xa158, 0xe941, 0x0, 0x0);
        gbc.writeMem(0x534d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7b23, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0134
        gbc.setState(0x7c4, 0xec78, 0xee40, 0x56ac, 0xd41c, 0xf150, 0x0, 0x1);
        gbc.writeMem(0x7c4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec78, gbc.sp());
        EXPECT(0x7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0135
        gbc.setState(0x59f0, 0x284c, 0x3a00, 0x307c, 0xeeee, 0x2532, 0x1, 0x0);
        gbc.writeMem(0x59f0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x284c, gbc.sp());
        EXPECT(0x59f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0136
        gbc.setState(0x6dab, 0xf781, 0x1350, 0x6db7, 0xd568, 0xd09c, 0x1, 0x1);
        gbc.writeMem(0x6dab, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0137
        gbc.setState(0x74cb, 0x644f, 0x3180, 0x3143, 0x7b1, 0xb057, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0138
        gbc.setState(0x3395, 0x8826, 0x2130, 0xf89f, 0xaadc, 0x3e0, 0x1, 0x1);
        gbc.writeMem(0x3395, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0139
        gbc.setState(0xb7c6, 0x360, 0x4610, 0x35ba, 0x3333, 0xac4a, 0x0, 0x1);
        gbc.writeMem(0xb7c6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0xb7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c6));
        EXPECT(0x97, gbc.readMem(0xb7c7));
        // CB 97 013A
        gbc.setState(0xbefd, 0x1ae5, 0x7e70, 0xd5d5, 0x9d19, 0xdb57, 0x0, 0x1);
        gbc.writeMem(0xbefd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ae5, gbc.sp());
        EXPECT(0xbeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbefd));
        EXPECT(0x97, gbc.readMem(0xbefe));
        // CB 97 013B
        gbc.setState(0xeb62, 0xe7b2, 0x2310, 0x1df3, 0x2472, 0x1f36, 0x0, 0x1);
        gbc.writeMem(0xeb62, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0x97, gbc.readMem(0xeb63));
        // CB 97 013C
        gbc.setState(0x7c84, 0x9324, 0x7d10, 0xb6f0, 0x51a6, 0xb34e, 0x1, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9324, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 013D
        gbc.setState(0xda33, 0xa78f, 0xb9e0, 0x1c44, 0x1d9e, 0xac7, 0x1, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0x97, gbc.readMem(0xda34));
        // CB 97 013E
        gbc.setState(0xc0eb, 0xf46a, 0x6510, 0x5e07, 0xa420, 0x61de, 0x1, 0x1);
        gbc.writeMem(0xc0eb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0eb));
        EXPECT(0x97, gbc.readMem(0xc0ec));
        // CB 97 013F
        gbc.setState(0x484a, 0xc3c7, 0x47d0, 0x5a3b, 0x639c, 0xbb3d, 0x0, 0x1);
        gbc.writeMem(0x484a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0140
        gbc.setState(0xb0e5, 0xfb0c, 0xb930, 0x9eb1, 0x72f5, 0xb1e7, 0x1, 0x0);
        gbc.writeMem(0xb0e5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb0c, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e5));
        EXPECT(0x97, gbc.readMem(0xb0e6));
        // CB 97 0141
        gbc.setState(0xb35b, 0x4655, 0x3760, 0x7d66, 0x45e3, 0x5eff, 0x1, 0x1);
        gbc.writeMem(0xb35b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4655, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35b));
        EXPECT(0x97, gbc.readMem(0xb35c));
        // CB 97 0142
        gbc.setState(0x5cb5, 0xd596, 0x8d00, 0x7d1e, 0x985, 0xfc02, 0x1, 0x0);
        gbc.writeMem(0x5cb5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x5cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0143
        gbc.setState(0xc19b, 0x9bba, 0x5210, 0x8a52, 0x96ff, 0x53, 0x0, 0x0);
        gbc.writeMem(0xc19b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9bba, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19b));
        EXPECT(0x97, gbc.readMem(0xc19c));
        // CB 97 0144
        gbc.setState(0x3311, 0xe090, 0xdcf0, 0x789a, 0x4fe2, 0x4a41, 0x1, 0x0);
        gbc.writeMem(0x3311, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe090, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0145
        gbc.setState(0x2c64, 0x2957, 0xc4a0, 0xc82e, 0xd4ca, 0x4bc7, 0x1, 0x0);
        gbc.writeMem(0x2c64, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0146
        gbc.setState(0xa68e, 0xd603, 0x9930, 0xfa82, 0xa28a, 0x8b, 0x1, 0x0);
        gbc.writeMem(0xa68e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xa690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68e));
        EXPECT(0x97, gbc.readMem(0xa68f));
        // CB 97 0147
        gbc.setState(0x728e, 0x7019, 0x1840, 0x1983, 0xe27f, 0x3b2b, 0x0, 0x1);
        gbc.writeMem(0x728e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7019, gbc.sp());
        EXPECT(0x7290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0148
        gbc.setState(0x99b8, 0x7c1, 0x5150, 0x4848, 0xa103, 0xb59b, 0x0, 0x0);
        gbc.writeMem(0x99b8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b8));
        EXPECT(0x97, gbc.readMem(0x99b9));
        // CB 97 0149
        gbc.setState(0x1526, 0x6c5, 0xeba0, 0x3fd7, 0xebaf, 0x604b, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6c5, gbc.sp());
        EXPECT(0x1528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 014A
        gbc.setState(0x95bc, 0x756e, 0xcd50, 0xf736, 0xfe30, 0xd2f9, 0x1, 0x1);
        gbc.writeMem(0x95bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0x95be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bc));
        EXPECT(0x97, gbc.readMem(0x95bd));
        // CB 97 014B
        gbc.setState(0x24fa, 0xe58b, 0xa6c0, 0x32b8, 0x81c1, 0x99fc, 0x1, 0x1);
        gbc.writeMem(0x24fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe58b, gbc.sp());
        EXPECT(0x24fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 014D
        gbc.setState(0xe897, 0x5b16, 0xb150, 0xea0, 0xea1c, 0x903e, 0x0, 0x0);
        gbc.writeMem(0xe897, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe897));
        EXPECT(0x97, gbc.readMem(0xe898));
        // CB 97 014E
        gbc.setState(0x8f38, 0x7ace, 0x4dc0, 0x9002, 0xea3d, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0x8f38, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ace, gbc.sp());
        EXPECT(0x8f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f38));
        EXPECT(0x97, gbc.readMem(0x8f39));
        // CB 97 014F
        gbc.setState(0x4f40, 0x4082, 0x7070, 0x67ef, 0xfcf6, 0x8415, 0x0, 0x1);
        gbc.writeMem(0x4f40, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4082, gbc.sp());
        EXPECT(0x4f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0150
        gbc.setState(0x3944, 0x3eec, 0x1070, 0x4ad0, 0x6c49, 0xf360, 0x1, 0x1);
        gbc.writeMem(0x3944, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3eec, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0151
        gbc.setState(0x83b8, 0xbe5a, 0x77d0, 0x59aa, 0x36ab, 0x55d7, 0x1, 0x1);
        gbc.writeMem(0x83b8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x83ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b8));
        EXPECT(0x97, gbc.readMem(0x83b9));
        // CB 97 0152
        gbc.setState(0x7417, 0x489d, 0xcc00, 0x53de, 0x9235, 0xddd9, 0x1, 0x1);
        gbc.writeMem(0x7417, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x489d, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0153
        gbc.setState(0x7e0, 0x45b9, 0xa480, 0x8c0, 0x457f, 0x6a9e, 0x0, 0x0);
        gbc.writeMem(0x7e0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x45b9, gbc.sp());
        EXPECT(0x7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0154
        gbc.setState(0xd8e1, 0x523d, 0x5820, 0x5c38, 0xea71, 0xa820, 0x0, 0x0);
        gbc.writeMem(0xd8e1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e1));
        EXPECT(0x97, gbc.readMem(0xd8e2));
        // CB 97 0155
        gbc.setState(0xb677, 0xf37a, 0xb3f0, 0xde8c, 0x9b6a, 0x12ba, 0x0, 0x0);
        gbc.writeMem(0xb677, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf37a, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb677));
        EXPECT(0x97, gbc.readMem(0xb678));
        // CB 97 0156
        gbc.setState(0xcace, 0x9b5a, 0xf840, 0x4c7b, 0x9483, 0xc5d4, 0x0, 0x0);
        gbc.writeMem(0xcace, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9b5a, gbc.sp());
        EXPECT(0xcad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcace));
        EXPECT(0x97, gbc.readMem(0xcacf));
        // CB 97 0157
        gbc.setState(0x9238, 0x61d2, 0x3470, 0x5c51, 0xc784, 0xc48, 0x1, 0x1);
        gbc.writeMem(0x9238, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x61d2, gbc.sp());
        EXPECT(0x923a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9238));
        EXPECT(0x97, gbc.readMem(0x9239));
        // CB 97 0158
        gbc.setState(0x26c3, 0xe774, 0x6de0, 0x68af, 0xa4fc, 0x3291, 0x1, 0x0);
        gbc.writeMem(0x26c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe774, gbc.sp());
        EXPECT(0x26c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0159
        gbc.setState(0xe29, 0x3051, 0xcae0, 0x8e74, 0xc51e, 0xd2e1, 0x0, 0x1);
        gbc.writeMem(0xe29, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3051, gbc.sp());
        EXPECT(0xe2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 015A
        gbc.setState(0x4099, 0x4c74, 0x37b0, 0x9769, 0x9683, 0xfd11, 0x0, 0x0);
        gbc.writeMem(0x4099, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c74, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 015B
        gbc.setState(0xa093, 0x3c3b, 0x6830, 0x3982, 0xfb58, 0xf8ea, 0x1, 0x1);
        gbc.writeMem(0xa093, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c3b, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa093));
        EXPECT(0x97, gbc.readMem(0xa094));
        // CB 97 015C
        gbc.setState(0x6fcc, 0xd11, 0x1230, 0x681f, 0x2977, 0x67d2, 0x1, 0x1);
        gbc.writeMem(0x6fcc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd11, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 015D
        gbc.setState(0xe73d, 0xb1fa, 0x1f90, 0x95eb, 0xe170, 0xc69a, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73d));
        EXPECT(0x97, gbc.readMem(0xe73e));
        // CB 97 015E
        gbc.setState(0x9395, 0x7799, 0xb2b0, 0x88c0, 0x6977, 0xb965, 0x0, 0x1);
        gbc.writeMem(0x9395, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7799, gbc.sp());
        EXPECT(0x9397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9395));
        EXPECT(0x97, gbc.readMem(0x9396));
        // CB 97 015F
        gbc.setState(0x12ea, 0x5ab9, 0x5f70, 0x5f18, 0x17ff, 0x6f8d, 0x0, 0x0);
        gbc.writeMem(0x12ea, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ab9, gbc.sp());
        EXPECT(0x12ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0160
        gbc.setState(0x7434, 0x3fde, 0xb840, 0xbc80, 0xa86c, 0xf035, 0x1, 0x0);
        gbc.writeMem(0x7434, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3fde, gbc.sp());
        EXPECT(0x7436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0161
        gbc.setState(0x9185, 0x4d88, 0xc430, 0xd233, 0x7b5e, 0x7a8, 0x0, 0x0);
        gbc.writeMem(0x9185, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4d88, gbc.sp());
        EXPECT(0x9187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9185));
        EXPECT(0x97, gbc.readMem(0x9186));
        // CB 97 0162
        gbc.setState(0x8817, 0x9a7c, 0xcc40, 0x7d5c, 0xe9ef, 0x2f5a, 0x1, 0x0);
        gbc.writeMem(0x8817, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9a7c, gbc.sp());
        EXPECT(0x8819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8817));
        EXPECT(0x97, gbc.readMem(0x8818));
        // CB 97 0163
        gbc.setState(0x861, 0x43b0, 0xa7a0, 0xb194, 0x90e8, 0x58f0, 0x0, 0x0);
        gbc.writeMem(0x861, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x43b0, gbc.sp());
        EXPECT(0x863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0166
        gbc.setState(0x102c, 0x30e8, 0x14d0, 0xebd5, 0xa8f8, 0x489f, 0x0, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x30e8, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0167
        gbc.setState(0x936c, 0x651b, 0x13f0, 0x9938, 0xa070, 0x6d1, 0x0, 0x1);
        gbc.writeMem(0x936c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936c));
        EXPECT(0x97, gbc.readMem(0x936d));
        // CB 97 0168
        gbc.setState(0x5e66, 0xb208, 0x6220, 0x1ccd, 0x3618, 0xab21, 0x0, 0x1);
        gbc.writeMem(0x5e66, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb208, gbc.sp());
        EXPECT(0x5e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0169
        gbc.setState(0x370c, 0x4955, 0x8f80, 0x7d43, 0xfc85, 0xcb6, 0x1, 0x0);
        gbc.writeMem(0x370c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0x370e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 016B
        gbc.setState(0x3855, 0x4cfe, 0xb330, 0x5d4f, 0xea3f, 0x9e77, 0x0, 0x1);
        gbc.writeMem(0x3855, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0x3857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 016C
        gbc.setState(0x8a21, 0xb71, 0xf590, 0xfc3d, 0xceaa, 0x4a1c, 0x1, 0x1);
        gbc.writeMem(0x8a21, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb71, gbc.sp());
        EXPECT(0x8a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a21));
        EXPECT(0x97, gbc.readMem(0x8a22));
        // CB 97 016D
        gbc.setState(0x9ba2, 0x559a, 0xe630, 0xc31c, 0x916e, 0xf5f8, 0x0, 0x1);
        gbc.writeMem(0x9ba2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x559a, gbc.sp());
        EXPECT(0x9ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba2));
        EXPECT(0x97, gbc.readMem(0x9ba3));
        // CB 97 016E
        gbc.setState(0x1b5e, 0xe7f8, 0xb410, 0x8606, 0xd135, 0xa8a0, 0x1, 0x0);
        gbc.writeMem(0x1b5e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 016F
        gbc.setState(0x3683, 0x19d5, 0xf60, 0x863b, 0xca82, 0xa4d7, 0x1, 0x0);
        gbc.writeMem(0x3683, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x19d5, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0170
        gbc.setState(0x4b66, 0x6218, 0xcee0, 0xc809, 0x81b8, 0x88fe, 0x0, 0x1);
        gbc.writeMem(0x4b66, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6218, gbc.sp());
        EXPECT(0x4b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0171
        gbc.setState(0x1c9, 0x58a0, 0x4250, 0xa9e5, 0x97c2, 0xb2d0, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x58a0, gbc.sp());
        EXPECT(0x1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0172
        gbc.setState(0x6801, 0xbcb8, 0xacf0, 0x6190, 0x93b0, 0xe725, 0x0, 0x0);
        gbc.writeMem(0x6801, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbcb8, gbc.sp());
        EXPECT(0x6803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0173
        gbc.setState(0x7e03, 0x8f84, 0x7cc0, 0x31d9, 0x6e8f, 0xd996, 0x1, 0x0);
        gbc.writeMem(0x7e03, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8f84, gbc.sp());
        EXPECT(0x7e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0174
        gbc.setState(0x39e7, 0x9b30, 0xd360, 0x96fb, 0x7129, 0x69a5, 0x1, 0x1);
        gbc.writeMem(0x39e7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0175
        gbc.setState(0x14c5, 0x122b, 0x2a0, 0xb281, 0x4b34, 0xbf5e, 0x0, 0x0);
        gbc.writeMem(0x14c5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0176
        gbc.setState(0x3a3f, 0x8941, 0x43e0, 0x65f4, 0x4782, 0x2285, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x3a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0177
        gbc.setState(0x527d, 0x1228, 0xeaa0, 0x185, 0xb83b, 0x8ee9, 0x1, 0x0);
        gbc.writeMem(0x527d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1228, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0178
        gbc.setState(0xee60, 0x3296, 0x2780, 0x75ad, 0xf892, 0x769b, 0x1, 0x1);
        gbc.writeMem(0xee60, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3296, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0x97, gbc.readMem(0xee61));
        // CB 97 0179
        gbc.setState(0xb25c, 0x918a, 0x4900, 0x16f5, 0xb324, 0x1782, 0x1, 0x0);
        gbc.writeMem(0xb25c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0xb25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25c));
        EXPECT(0x97, gbc.readMem(0xb25d));
        // CB 97 017A
        gbc.setState(0xaef, 0xb0c3, 0xaf60, 0xd5c9, 0x830c, 0x7c68, 0x0, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb0c3, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 017B
        gbc.setState(0x73c8, 0x55ae, 0x70c0, 0xb158, 0x6e63, 0x8875, 0x0, 0x0);
        gbc.writeMem(0x73c8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x55ae, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 017C
        gbc.setState(0xd991, 0x30c9, 0x6d10, 0x3d4f, 0xa6ef, 0xe11f, 0x0, 0x1);
        gbc.writeMem(0xd991, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd991));
        EXPECT(0x97, gbc.readMem(0xd992));
        // CB 97 017E
        gbc.setState(0x3a6c, 0x7002, 0x8520, 0x9704, 0x14e1, 0x89b8, 0x0, 0x0);
        gbc.writeMem(0x3a6c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7002, gbc.sp());
        EXPECT(0x3a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 017F
        gbc.setState(0x7ccb, 0xc25a, 0x7860, 0xcfbd, 0xe4e5, 0xe481, 0x0, 0x0);
        gbc.writeMem(0x7ccb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x7ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0180
        gbc.setState(0x7f3c, 0x35ba, 0xbe20, 0x64b1, 0x6987, 0xff66, 0x1, 0x0);
        gbc.writeMem(0x7f3c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x35ba, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0181
        gbc.setState(0x50f3, 0xb846, 0xbad0, 0x3db6, 0x89d1, 0x6221, 0x1, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0x50f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0182
        gbc.setState(0x7110, 0x9d45, 0x29d0, 0x37af, 0x8eeb, 0xe201, 0x1, 0x0);
        gbc.writeMem(0x7110, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0x7112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0183
        gbc.setState(0x325c, 0x8bb, 0xf660, 0x25f8, 0x7625, 0x42be, 0x1, 0x1);
        gbc.writeMem(0x325c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8bb, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0185
        gbc.setState(0xd769, 0x4830, 0x3140, 0xf78f, 0x166b, 0x599c, 0x0, 0x1);
        gbc.writeMem(0xd769, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4830, gbc.sp());
        EXPECT(0xd76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd769));
        EXPECT(0x97, gbc.readMem(0xd76a));
        // CB 97 0187
        gbc.setState(0x2a35, 0x9bbc, 0xa170, 0x4374, 0x817a, 0x640d, 0x1, 0x1);
        gbc.writeMem(0x2a35, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9bbc, gbc.sp());
        EXPECT(0x2a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0188
        gbc.setState(0x9343, 0xb8ad, 0x95c0, 0xbea6, 0x9bf3, 0xc08, 0x1, 0x1);
        gbc.writeMem(0x9343, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb8ad, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0x97, gbc.readMem(0x9344));
        // CB 97 0189
        gbc.setState(0x3f0f, 0xec7c, 0xe440, 0x7a68, 0x4b25, 0x210d, 0x1, 0x1);
        gbc.writeMem(0x3f0f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0x3f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 018A
        gbc.setState(0x7bf0, 0xcd82, 0x1b90, 0x80bd, 0xc835, 0xa05e, 0x0, 0x1);
        gbc.writeMem(0x7bf0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0x7bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 018B
        gbc.setState(0x5004, 0x68c3, 0x4600, 0x41f3, 0xdef7, 0xa02, 0x1, 0x0);
        gbc.writeMem(0x5004, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x5006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 018C
        gbc.setState(0xbb40, 0x85e1, 0x48a0, 0x66f, 0xdfbf, 0x8659, 0x0, 0x0);
        gbc.writeMem(0xbb40, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x85e1, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb40));
        EXPECT(0x97, gbc.readMem(0xbb41));
        // CB 97 018D
        gbc.setState(0x89ad, 0x8b38, 0x5f50, 0xde82, 0xcc52, 0xf42c, 0x1, 0x1);
        gbc.writeMem(0x89ad, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8b38, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ad));
        EXPECT(0x97, gbc.readMem(0x89ae));
        // CB 97 018E
        gbc.setState(0x9371, 0xa2b5, 0x7ae0, 0x2b11, 0x1042, 0xfe2, 0x1, 0x0);
        gbc.writeMem(0x9371, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0x9373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9371));
        EXPECT(0x97, gbc.readMem(0x9372));
        // CB 97 018F
        gbc.setState(0x7c, 0x758f, 0x9940, 0x16b0, 0x50fe, 0xa867, 0x0, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x758f, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0190
        gbc.setState(0x2aee, 0x9428, 0x47a0, 0x4d6, 0x3124, 0x77ae, 0x1, 0x0);
        gbc.writeMem(0x2aee, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9428, gbc.sp());
        EXPECT(0x2af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0191
        gbc.setState(0x9955, 0xa705, 0x77a0, 0xaa06, 0x4958, 0xd709, 0x1, 0x1);
        gbc.writeMem(0x9955, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0x97, gbc.readMem(0x9956));
        // CB 97 0192
        gbc.setState(0x462a, 0x728c, 0xf360, 0x5dee, 0x2bc0, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x728c, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0193
        gbc.setState(0x7a7f, 0x3f3d, 0x68e0, 0x6213, 0x3d0e, 0xcb43, 0x1, 0x0);
        gbc.writeMem(0x7a7f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3f3d, gbc.sp());
        EXPECT(0x7a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0194
        gbc.setState(0xe9ba, 0x3d66, 0x8bc0, 0xaead, 0xac4d, 0xa095, 0x0, 0x0);
        gbc.writeMem(0xe9ba, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3d66, gbc.sp());
        EXPECT(0xe9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ba));
        EXPECT(0x97, gbc.readMem(0xe9bb));
        // CB 97 0195
        gbc.setState(0x9458, 0x4266, 0x4570, 0x7a95, 0x6fe0, 0x4a47, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9458));
        EXPECT(0x97, gbc.readMem(0x9459));
        // CB 97 0196
        gbc.setState(0xc3cd, 0x6985, 0x3ba0, 0x495b, 0x440, 0x924f, 0x1, 0x0);
        gbc.writeMem(0xc3cd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6985, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cd));
        EXPECT(0x97, gbc.readMem(0xc3ce));
        // CB 97 0197
        gbc.setState(0xac81, 0x819, 0x6e30, 0x6537, 0xd23c, 0xa37f, 0x1, 0x0);
        gbc.writeMem(0xac81, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac81));
        EXPECT(0x97, gbc.readMem(0xac82));
        // CB 97 0198
        gbc.setState(0x145b, 0x2cc3, 0x96a0, 0xc01, 0x6bda, 0xba40, 0x1, 0x0);
        gbc.writeMem(0x145b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0x145d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0199
        gbc.setState(0x5c5c, 0x9379, 0x4260, 0x41af, 0xf16d, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x5c5c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x5c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 019A
        gbc.setState(0x4bf8, 0xf07c, 0x6eb0, 0xc373, 0x9f30, 0xb642, 0x0, 0x1);
        gbc.writeMem(0x4bf8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf07c, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 019B
        gbc.setState(0x1311, 0xa7b, 0xdfc0, 0x5fad, 0x7c75, 0x8b9d, 0x1, 0x1);
        gbc.writeMem(0x1311, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa7b, gbc.sp());
        EXPECT(0x1313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 019C
        gbc.setState(0x523e, 0x120d, 0x8380, 0x3364, 0x658f, 0xd1a2, 0x0, 0x1);
        gbc.writeMem(0x523e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x5240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 019D
        gbc.setState(0x6da, 0xf844, 0x100, 0x710a, 0x1444, 0x2111, 0x1, 0x0);
        gbc.writeMem(0x6da, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf844, gbc.sp());
        EXPECT(0x6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 019F
        gbc.setState(0xb837, 0x12cb, 0x2230, 0xd391, 0xe2db, 0xe529, 0x0, 0x1);
        gbc.writeMem(0xb837, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x12cb, gbc.sp());
        EXPECT(0xb839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb837));
        EXPECT(0x97, gbc.readMem(0xb838));
        // CB 97 01A0
        gbc.setState(0x54ab, 0x544d, 0xaf0, 0x3a26, 0xe113, 0xef7c, 0x0, 0x1);
        gbc.writeMem(0x54ab, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x544d, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01A1
        gbc.setState(0x27e1, 0xa73b, 0xc3f0, 0x5c06, 0xb9e7, 0x8914, 0x1, 0x0);
        gbc.writeMem(0x27e1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa73b, gbc.sp());
        EXPECT(0x27e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01A2
        gbc.setState(0xc32f, 0x62ef, 0xbf00, 0x342a, 0x5617, 0x2a46, 0x0, 0x0);
        gbc.writeMem(0xc32f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0x97, gbc.readMem(0xc330));
        // CB 97 01A3
        gbc.setState(0xb5d9, 0xa089, 0xc6f0, 0x1362, 0x74eb, 0x58de, 0x1, 0x0);
        gbc.writeMem(0xb5d9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0xb5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d9));
        EXPECT(0x97, gbc.readMem(0xb5da));
        // CB 97 01A4
        gbc.setState(0x3a71, 0x7445, 0x86a0, 0xd572, 0x196f, 0xb0c1, 0x0, 0x0);
        gbc.writeMem(0x3a71, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01A5
        gbc.setState(0x30fa, 0x9934, 0x2fa0, 0xddd6, 0xe772, 0x8571, 0x1, 0x0);
        gbc.writeMem(0x30fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01A6
        gbc.setState(0x1fda, 0xf552, 0x8f40, 0x7730, 0x86ce, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0x1fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01A7
        gbc.setState(0xa3e3, 0x6fdd, 0xb3a0, 0x8c7f, 0xe181, 0x1595, 0x0, 0x1);
        gbc.writeMem(0xa3e3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6fdd, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e3));
        EXPECT(0x97, gbc.readMem(0xa3e4));
        // CB 97 01A8
        gbc.setState(0x6f89, 0x5863, 0xf010, 0xa6b2, 0x4fe7, 0xe16c, 0x0, 0x1);
        gbc.writeMem(0x6f89, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0x6f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01A9
        gbc.setState(0xa34f, 0xae84, 0x2170, 0x776b, 0x8afd, 0x8a62, 0x1, 0x0);
        gbc.writeMem(0xa34f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0xa351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34f));
        EXPECT(0x97, gbc.readMem(0xa350));
        // CB 97 01AA
        gbc.setState(0xbbe9, 0x5b5d, 0x38c0, 0xb4ab, 0x3aac, 0x6972, 0x1, 0x1);
        gbc.writeMem(0xbbe9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5b5d, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe9));
        EXPECT(0x97, gbc.readMem(0xbbea));
        // CB 97 01AB
        gbc.setState(0xa89b, 0x654a, 0xcbb0, 0x9f6b, 0xccf3, 0x71a8, 0x1, 0x1);
        gbc.writeMem(0xa89b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0xa89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89b));
        EXPECT(0x97, gbc.readMem(0xa89c));
        // CB 97 01AC
        gbc.setState(0x5ac4, 0xfa04, 0xc140, 0xf8e9, 0x148, 0xebbd, 0x0, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfa04, gbc.sp());
        EXPECT(0x5ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01AD
        gbc.setState(0xe77b, 0x4549, 0x2050, 0xc59a, 0x3bdb, 0xe139, 0x0, 0x0);
        gbc.writeMem(0xe77b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0xe77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77b));
        EXPECT(0x97, gbc.readMem(0xe77c));
        // CB 97 01AE
        gbc.setState(0xcc22, 0xe07, 0xd9f0, 0x3682, 0xfe67, 0x27e2, 0x1, 0x0);
        gbc.writeMem(0xcc22, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe07, gbc.sp());
        EXPECT(0xcc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc22));
        EXPECT(0x97, gbc.readMem(0xcc23));
        // CB 97 01AF
        gbc.setState(0x470f, 0xc262, 0xf4a0, 0x36fa, 0xb049, 0xb8ad, 0x1, 0x0);
        gbc.writeMem(0x470f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc262, gbc.sp());
        EXPECT(0x4711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01B0
        gbc.setState(0x2039, 0xe960, 0xf3f0, 0x6313, 0xd215, 0x1793, 0x1, 0x0);
        gbc.writeMem(0x2039, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x203b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01B1
        gbc.setState(0xb6ae, 0x3f12, 0x34d0, 0x5ec, 0xb8e3, 0xbd80, 0x1, 0x0);
        gbc.writeMem(0xb6ae, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0xb6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ae));
        EXPECT(0x97, gbc.readMem(0xb6af));
        // CB 97 01B2
        gbc.setState(0xb9, 0x1773, 0x8e50, 0xcf86, 0x50f7, 0xcafb, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1773, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01B3
        gbc.setState(0x8386, 0x83b8, 0x2ca0, 0xf09f, 0xad8c, 0x5fc3, 0x1, 0x0);
        gbc.writeMem(0x8386, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x83b8, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8386));
        EXPECT(0x97, gbc.readMem(0x8387));
        // CB 97 01B4
        gbc.setState(0xca74, 0x3165, 0x9d90, 0x8245, 0xec92, 0x4b7, 0x1, 0x0);
        gbc.writeMem(0xca74, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca74));
        EXPECT(0x97, gbc.readMem(0xca75));
        // CB 97 01B5
        gbc.setState(0x95a8, 0xaa4f, 0xb9d0, 0x7f7b, 0x6c0d, 0xd0ab, 0x0, 0x0);
        gbc.writeMem(0x95a8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x95aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a8));
        EXPECT(0x97, gbc.readMem(0x95a9));
        // CB 97 01B6
        gbc.setState(0x2f5, 0x6405, 0x23b0, 0x27b, 0xbd5e, 0xd87c, 0x0, 0x1);
        gbc.writeMem(0x2f5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6405, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01B7
        gbc.setState(0x9ec5, 0x320c, 0x75b0, 0x9bb, 0x5ce2, 0xc0af, 0x1, 0x0);
        gbc.writeMem(0x9ec5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec5));
        EXPECT(0x97, gbc.readMem(0x9ec6));
        // CB 97 01B8
        gbc.setState(0xdf10, 0x428f, 0xa750, 0x9111, 0x3cc, 0xb111, 0x1, 0x0);
        gbc.writeMem(0xdf10, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf10));
        EXPECT(0x97, gbc.readMem(0xdf11));
        // CB 97 01B9
        gbc.setState(0x3d8, 0x1640, 0x99e0, 0xa3f8, 0x70f6, 0xc5aa, 0x0, 0x0);
        gbc.writeMem(0x3d8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1640, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01BA
        gbc.setState(0x9354, 0x3181, 0xc490, 0xd270, 0xeaa6, 0xbad1, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x9356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9354));
        EXPECT(0x97, gbc.readMem(0x9355));
        // CB 97 01BB
        gbc.setState(0xb298, 0x857c, 0xf4e0, 0xa0f6, 0xa21a, 0xa10f, 0x0, 0x1);
        gbc.writeMem(0xb298, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb298));
        EXPECT(0x97, gbc.readMem(0xb299));
        // CB 97 01BC
        gbc.setState(0x702b, 0x319, 0x8aa0, 0x9c28, 0xc26b, 0xa5be, 0x1, 0x1);
        gbc.writeMem(0x702b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x319, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01BD
        gbc.setState(0x7f2a, 0x1af6, 0xace0, 0x6d2b, 0x2dbb, 0x74b8, 0x0, 0x1);
        gbc.writeMem(0x7f2a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01BE
        gbc.setState(0xb6ef, 0x5a32, 0x1bc0, 0x6184, 0x8b01, 0x1a6f, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0xb6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ef));
        EXPECT(0x97, gbc.readMem(0xb6f0));
        // CB 97 01BF
        gbc.setState(0xb079, 0x4c15, 0x6bd0, 0x1e9a, 0x2142, 0x935d, 0x0, 0x1);
        gbc.writeMem(0xb079, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb079));
        EXPECT(0x97, gbc.readMem(0xb07a));
        // CB 97 01C0
        gbc.setState(0xa7f9, 0xe5f4, 0xa4a0, 0x4858, 0xf9b3, 0x7a21, 0x0, 0x0);
        gbc.writeMem(0xa7f9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f9));
        EXPECT(0x97, gbc.readMem(0xa7fa));
        // CB 97 01C1
        gbc.setState(0x6267, 0xc90f, 0x7f50, 0x3b63, 0xf298, 0x7654, 0x1, 0x1);
        gbc.writeMem(0x6267, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc90f, gbc.sp());
        EXPECT(0x6269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01C2
        gbc.setState(0xebc7, 0x4196, 0xe7e0, 0x324f, 0x86b3, 0xe860, 0x1, 0x0);
        gbc.writeMem(0xebc7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4196, gbc.sp());
        EXPECT(0xebc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc7));
        EXPECT(0x97, gbc.readMem(0xebc8));
        // CB 97 01C3
        gbc.setState(0xc478, 0x6b90, 0xe560, 0x876, 0x4c6f, 0xd494, 0x1, 0x1);
        gbc.writeMem(0xc478, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6b90, gbc.sp());
        EXPECT(0xc47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc478));
        EXPECT(0x97, gbc.readMem(0xc479));
        // CB 97 01C4
        gbc.setState(0x10c2, 0x9547, 0xba90, 0x645b, 0x14fe, 0xb4cb, 0x1, 0x0);
        gbc.writeMem(0x10c2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0x10c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01C5
        gbc.setState(0x9c0f, 0xada4, 0xbb20, 0xeceb, 0xff7d, 0xe497, 0x0, 0x0);
        gbc.writeMem(0x9c0f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0x9c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0f));
        EXPECT(0x97, gbc.readMem(0x9c10));
        // CB 97 01C6
        gbc.setState(0x618f, 0x49d6, 0x6ba0, 0xdf27, 0x99e5, 0xa92c, 0x0, 0x1);
        gbc.writeMem(0x618f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x49d6, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01C7
        gbc.setState(0x3aa6, 0x18ed, 0xcf70, 0x5ee, 0xcc25, 0x2f97, 0x0, 0x0);
        gbc.writeMem(0x3aa6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x3aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01C8
        gbc.setState(0x2b6f, 0x45a8, 0xbf70, 0xec0b, 0x7261, 0xd932, 0x1, 0x0);
        gbc.writeMem(0x2b6f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01C9
        gbc.setState(0x7c2, 0xba4c, 0xebf0, 0xd99d, 0x2465, 0xba98, 0x1, 0x1);
        gbc.writeMem(0x7c2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xba4c, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01CA
        gbc.setState(0xdbef, 0xfb3, 0x37e0, 0x835a, 0xb6fd, 0xe9dc, 0x0, 0x1);
        gbc.writeMem(0xdbef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfb3, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbef));
        EXPECT(0x97, gbc.readMem(0xdbf0));
        // CB 97 01CB
        gbc.setState(0xb55, 0x6ae4, 0x5180, 0x49a1, 0x868a, 0x81c, 0x1, 0x1);
        gbc.writeMem(0xb55, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0xb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01CC
        gbc.setState(0x8f90, 0x2488, 0x78e0, 0x4da2, 0xa4b9, 0xd3a3, 0x0, 0x1);
        gbc.writeMem(0x8f90, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f90));
        EXPECT(0x97, gbc.readMem(0x8f91));
        // CB 97 01CD
        gbc.setState(0xb461, 0x9bd3, 0x6d50, 0xb8d, 0x214f, 0x4505, 0x0, 0x0);
        gbc.writeMem(0xb461, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9bd3, gbc.sp());
        EXPECT(0xb463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb461));
        EXPECT(0x97, gbc.readMem(0xb462));
        // CB 97 01CE
        gbc.setState(0xc86e, 0x1cde, 0x73f0, 0x9927, 0xc121, 0x5c5d, 0x1, 0x1);
        gbc.writeMem(0xc86e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1cde, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86e));
        EXPECT(0x97, gbc.readMem(0xc86f));
        // CB 97 01CF
        gbc.setState(0x80f, 0x83f3, 0x8c70, 0x28dd, 0x3e1d, 0xfc5b, 0x1, 0x1);
        gbc.writeMem(0x80f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01D0
        gbc.setState(0x3178, 0xe9d1, 0xdc50, 0x1afb, 0xdffb, 0x162, 0x1, 0x1);
        gbc.writeMem(0x3178, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0x317a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01D1
        gbc.setState(0x3966, 0xbe7, 0x72e0, 0x2f52, 0x3f5b, 0x9bd7, 0x0, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01D2
        gbc.setState(0x9c51, 0x11a2, 0x3110, 0x5084, 0x1d7a, 0x2360, 0x1, 0x0);
        gbc.writeMem(0x9c51, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0x9c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c51));
        EXPECT(0x97, gbc.readMem(0x9c52));
        // CB 97 01D3
        gbc.setState(0x13d3, 0x986f, 0xaee0, 0x4afc, 0x6ff5, 0x5309, 0x1, 0x0);
        gbc.writeMem(0x13d3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x986f, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01D4
        gbc.setState(0x237b, 0xb27e, 0xaf20, 0x593e, 0xede0, 0xf5b1, 0x1, 0x1);
        gbc.writeMem(0x237b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x237d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01D5
        gbc.setState(0x2b48, 0x8c1a, 0xf1a0, 0xa68e, 0xc801, 0xdd0c, 0x0, 0x0);
        gbc.writeMem(0x2b48, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8c1a, gbc.sp());
        EXPECT(0x2b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01D6
        gbc.setState(0xe6f5, 0xdbdc, 0x5d30, 0x193a, 0xd65f, 0x5555, 0x1, 0x0);
        gbc.writeMem(0xe6f5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdbdc, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f5));
        EXPECT(0x97, gbc.readMem(0xe6f6));
        // CB 97 01D7
        gbc.setState(0x15bc, 0xaaa2, 0x40d0, 0xc548, 0x7c79, 0x528f, 0x0, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0x15be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01D8
        gbc.setState(0x5ac9, 0x6359, 0x2180, 0xd7b7, 0x4b35, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x5ac9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6359, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01D9
        gbc.setState(0x6e09, 0x4f7, 0x6590, 0x3179, 0x14d6, 0x16e0, 0x1, 0x0);
        gbc.writeMem(0x6e09, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4f7, gbc.sp());
        EXPECT(0x6e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01DA
        gbc.setState(0xcdcf, 0xd7a1, 0x25a0, 0x4cde, 0x74eb, 0x123c, 0x1, 0x1);
        gbc.writeMem(0xcdcf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcf));
        EXPECT(0x97, gbc.readMem(0xcdd0));
        // CB 97 01DB
        gbc.setState(0x9d98, 0xfd17, 0x1f70, 0x63da, 0x9076, 0x122b, 0x0, 0x0);
        gbc.writeMem(0x9d98, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfd17, gbc.sp());
        EXPECT(0x9d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d98));
        EXPECT(0x97, gbc.readMem(0x9d99));
        // CB 97 01DC
        gbc.setState(0x9e70, 0xf357, 0xc70, 0x5ac5, 0x7b49, 0xae6e, 0x0, 0x1);
        gbc.writeMem(0x9e70, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf357, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e70));
        EXPECT(0x97, gbc.readMem(0x9e71));
        // CB 97 01DD
        gbc.setState(0x475e, 0x2bdc, 0xc160, 0xb5ee, 0xb181, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0x475e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x4760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01DE
        gbc.setState(0x2fde, 0xa59f, 0x7540, 0xd370, 0x5608, 0x739b, 0x0, 0x1);
        gbc.writeMem(0x2fde, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa59f, gbc.sp());
        EXPECT(0x2fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01DF
        gbc.setState(0xde40, 0x1ea4, 0xf3d0, 0x410c, 0xc53f, 0xb842, 0x1, 0x0);
        gbc.writeMem(0xde40, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0xde42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde40));
        EXPECT(0x97, gbc.readMem(0xde41));
        // CB 97 01E0
        gbc.setState(0x758e, 0x2e97, 0x6110, 0x995e, 0x366c, 0x46c8, 0x0, 0x0);
        gbc.writeMem(0x758e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2e97, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01E1
        gbc.setState(0xe9a0, 0xfe2a, 0xbce0, 0xbeec, 0xa59, 0xd82d, 0x1, 0x1);
        gbc.writeMem(0xe9a0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a0));
        EXPECT(0x97, gbc.readMem(0xe9a1));
        // CB 97 01E2
        gbc.setState(0x36ba, 0x29e4, 0x8870, 0x8fb1, 0xe9b7, 0x208c, 0x1, 0x1);
        gbc.writeMem(0x36ba, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x29e4, gbc.sp());
        EXPECT(0x36bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01E3
        gbc.setState(0xe674, 0xf66b, 0xf9f0, 0x3f2, 0x5d00, 0xe5e0, 0x1, 0x1);
        gbc.writeMem(0xe674, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf66b, gbc.sp());
        EXPECT(0xe676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe674));
        EXPECT(0x97, gbc.readMem(0xe675));
        // CB 97 01E4
        gbc.setState(0x1e25, 0xac24, 0xf220, 0xc947, 0x824a, 0x77fb, 0x1, 0x0);
        gbc.writeMem(0x1e25, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0x1e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01E5
        gbc.setState(0x5705, 0xfb27, 0x5b70, 0x4af, 0x7a74, 0xd785, 0x1, 0x0);
        gbc.writeMem(0x5705, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0x5707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01E6
        gbc.setState(0xb62e, 0xbfe5, 0xd4c0, 0x8ac5, 0xb5bf, 0x1bf9, 0x1, 0x0);
        gbc.writeMem(0xb62e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbfe5, gbc.sp());
        EXPECT(0xb630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62e));
        EXPECT(0x97, gbc.readMem(0xb62f));
        // CB 97 01E7
        gbc.setState(0xc4b, 0xf53d, 0x5ad0, 0x314b, 0x2f80, 0xd117, 0x1, 0x0);
        gbc.writeMem(0xc4b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0xc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01E8
        gbc.setState(0xfc2, 0xa30, 0x3810, 0xb2f4, 0x4cd3, 0xfbe1, 0x1, 0x0);
        gbc.writeMem(0xfc2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0xfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01E9
        gbc.setState(0xc73e, 0xdca5, 0x5340, 0x784e, 0xa160, 0xcf53, 0x1, 0x0);
        gbc.writeMem(0xc73e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdca5, gbc.sp());
        EXPECT(0xc740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73e));
        EXPECT(0x97, gbc.readMem(0xc73f));
        // CB 97 01EA
        gbc.setState(0x3945, 0xcbbf, 0xc190, 0x9415, 0xee22, 0x9600, 0x0, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcbbf, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01EB
        gbc.setState(0xb2b2, 0x8746, 0x35f0, 0xf802, 0x92eb, 0x98f0, 0x1, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b2));
        EXPECT(0x97, gbc.readMem(0xb2b3));
        // CB 97 01EC
        gbc.setState(0xaf98, 0x1451, 0x4150, 0x895b, 0x2625, 0xaf74, 0x0, 0x1);
        gbc.writeMem(0xaf98, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1451, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf98));
        EXPECT(0x97, gbc.readMem(0xaf99));
        // CB 97 01ED
        gbc.setState(0xa7bd, 0x41bd, 0x9940, 0x8659, 0x8fc9, 0xad02, 0x1, 0x0);
        gbc.writeMem(0xa7bd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x41bd, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bd));
        EXPECT(0x97, gbc.readMem(0xa7be));
        // CB 97 01EE
        gbc.setState(0x45b0, 0x1d9b, 0x4250, 0xa5f9, 0x1bbf, 0x573c, 0x1, 0x1);
        gbc.writeMem(0x45b0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1d9b, gbc.sp());
        EXPECT(0x45b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01EF
        gbc.setState(0x5098, 0xf654, 0xac90, 0xbc6d, 0x7677, 0x4929, 0x0, 0x1);
        gbc.writeMem(0x5098, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01F1
        gbc.setState(0x8104, 0xbd18, 0xbf70, 0xdda2, 0x5562, 0x330c, 0x1, 0x1);
        gbc.writeMem(0x8104, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbd18, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8104));
        EXPECT(0x97, gbc.readMem(0x8105));
        // CB 97 01F2
        gbc.setState(0x54fd, 0x2825, 0x5270, 0x8522, 0x959f, 0xa17, 0x0, 0x0);
        gbc.writeMem(0x54fd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01F3
        gbc.setState(0x9c93, 0x605a, 0x67d0, 0x64b5, 0xed13, 0xa7d9, 0x0, 0x1);
        gbc.writeMem(0x9c93, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x605a, gbc.sp());
        EXPECT(0x9c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c93));
        EXPECT(0x97, gbc.readMem(0x9c94));
        // CB 97 01F4
        gbc.setState(0xcb75, 0x2245, 0x7080, 0xfea4, 0xef28, 0x480d, 0x1, 0x0);
        gbc.writeMem(0xcb75, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0xcb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb75));
        EXPECT(0x97, gbc.readMem(0xcb76));
        // CB 97 01F5
        gbc.setState(0x5842, 0x4b1d, 0xd740, 0x6ca9, 0xe9d9, 0xa607, 0x0, 0x0);
        gbc.writeMem(0x5842, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01F6
        gbc.setState(0x173, 0x6ebd, 0x9840, 0x89bd, 0xe5c5, 0x1209, 0x0, 0x0);
        gbc.writeMem(0x173, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01F7
        gbc.setState(0x7b1, 0xf1fa, 0x9300, 0x4bb4, 0xb6, 0xfdc5, 0x1, 0x1);
        gbc.writeMem(0x7b1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf1fa, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01F9
        gbc.setState(0xeef8, 0x651f, 0x7350, 0x88e2, 0x2336, 0xd900, 0x1, 0x0);
        gbc.writeMem(0xeef8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x651f, gbc.sp());
        EXPECT(0xeefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef8));
        EXPECT(0x97, gbc.readMem(0xeef9));
        // CB 97 01FA
        gbc.setState(0x9890, 0xcf19, 0x9e20, 0xbbf9, 0x7ec5, 0xe8aa, 0x0, 0x1);
        gbc.writeMem(0x9890, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcf19, gbc.sp());
        EXPECT(0x9892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9890));
        EXPECT(0x97, gbc.readMem(0x9891));
        // CB 97 01FB
        gbc.setState(0xc2d4, 0x615b, 0x4850, 0x3f8d, 0xcd0d, 0xf05c, 0x1, 0x1);
        gbc.writeMem(0xc2d4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x615b, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d4));
        EXPECT(0x97, gbc.readMem(0xc2d5));
        // CB 97 01FC
        gbc.setState(0x6af6, 0xca36, 0x7bb0, 0x1037, 0xd44d, 0x5aa1, 0x0, 0x1);
        gbc.writeMem(0x6af6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xca36, gbc.sp());
        EXPECT(0x6af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 01FD
        gbc.setState(0xe9f5, 0x83a8, 0x6190, 0xccb9, 0x12df, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0xe9f5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x83a8, gbc.sp());
        EXPECT(0xe9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f5));
        EXPECT(0x97, gbc.readMem(0xe9f6));
        // CB 97 01FE
        gbc.setState(0x263e, 0xba0, 0xf760, 0xd7ce, 0xf0df, 0x52ee, 0x1, 0x0);
        gbc.writeMem(0x263e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xba0, gbc.sp());
        EXPECT(0x2640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 01FF
        gbc.setState(0x3d2e, 0xee7e, 0x4760, 0x1bfe, 0xc495, 0x31e2, 0x0, 0x1);
        gbc.writeMem(0x3d2e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0x3d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0200
        gbc.setState(0x701c, 0x76e1, 0x360, 0x65c7, 0x68e8, 0xf928, 0x1, 0x1);
        gbc.writeMem(0x701c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x76e1, gbc.sp());
        EXPECT(0x701e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0201
        gbc.setState(0xd3a6, 0x338b, 0xa90, 0xb38, 0x5265, 0xbdf9, 0x1, 0x1);
        gbc.writeMem(0xd3a6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x338b, gbc.sp());
        EXPECT(0xd3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a6));
        EXPECT(0x97, gbc.readMem(0xd3a7));
        // CB 97 0202
        gbc.setState(0x7919, 0x2ba6, 0x3400, 0x5d2c, 0x1ffb, 0x8b90, 0x0, 0x0);
        gbc.writeMem(0x7919, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2ba6, gbc.sp());
        EXPECT(0x791b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0203
        gbc.setState(0x8a0d, 0x374, 0xc880, 0xce98, 0x4ecf, 0xe20f, 0x0, 0x1);
        gbc.writeMem(0x8a0d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x8a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0d));
        EXPECT(0x97, gbc.readMem(0x8a0e));
        // CB 97 0204
        gbc.setState(0x8565, 0xb88a, 0x40c0, 0x8c3a, 0x481a, 0xd83f, 0x1, 0x1);
        gbc.writeMem(0x8565, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8565));
        EXPECT(0x97, gbc.readMem(0x8566));
        // CB 97 0205
        gbc.setState(0x56c3, 0xc218, 0xbbf0, 0x5758, 0x5de4, 0xe160, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x56c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0206
        gbc.setState(0x334b, 0x2553, 0xfdc0, 0xa9e5, 0x5759, 0x5838, 0x0, 0x1);
        gbc.writeMem(0x334b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2553, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0207
        gbc.setState(0x445e, 0xaff6, 0xc9f0, 0x60ba, 0x8713, 0xc85, 0x0, 0x1);
        gbc.writeMem(0x445e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x4460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0208
        gbc.setState(0xc292, 0xd059, 0xc170, 0x579d, 0x624c, 0x1a99, 0x0, 0x1);
        gbc.writeMem(0xc292, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0xc294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc292));
        EXPECT(0x97, gbc.readMem(0xc293));
        // CB 97 0209
        gbc.setState(0xae13, 0xca99, 0x290, 0x4974, 0x4d17, 0x75c6, 0x1, 0x0);
        gbc.writeMem(0xae13, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xca99, gbc.sp());
        EXPECT(0xae15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae13));
        EXPECT(0x97, gbc.readMem(0xae14));
        // CB 97 020A
        gbc.setState(0x152a, 0x5be0, 0x6ac0, 0x6ae8, 0xca42, 0xfc47, 0x1, 0x0);
        gbc.writeMem(0x152a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5be0, gbc.sp());
        EXPECT(0x152c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 020B
        gbc.setState(0x3642, 0x6ac9, 0xf690, 0xe367, 0xa012, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0x3642, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 020C
        gbc.setState(0xe969, 0xb7ab, 0xe450, 0x4326, 0xa8eb, 0x7744, 0x0, 0x0);
        gbc.writeMem(0xe969, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe969));
        EXPECT(0x97, gbc.readMem(0xe96a));
        // CB 97 020D
        gbc.setState(0x8459, 0xf6d, 0xd300, 0xf596, 0x8557, 0x4473, 0x0, 0x1);
        gbc.writeMem(0x8459, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf6d, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8459));
        EXPECT(0x97, gbc.readMem(0x845a));
        // CB 97 020E
        gbc.setState(0x1812, 0x4d87, 0x7bd0, 0x1a56, 0x1667, 0xa499, 0x1, 0x0);
        gbc.writeMem(0x1812, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x1814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 020F
        gbc.setState(0x990, 0x6fe2, 0x4f70, 0x2906, 0xafb7, 0x743d, 0x0, 0x0);
        gbc.writeMem(0x990, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6fe2, gbc.sp());
        EXPECT(0x992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0210
        gbc.setState(0x7a40, 0x5004, 0xb4f0, 0xcce5, 0x8cf1, 0x28e7, 0x1, 0x1);
        gbc.writeMem(0x7a40, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5004, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0211
        gbc.setState(0x3651, 0x773b, 0x5fd0, 0x3455, 0x5ad9, 0x5b2e, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x773b, gbc.sp());
        EXPECT(0x3653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0212
        gbc.setState(0x4612, 0xc143, 0x3880, 0x9b24, 0xaf42, 0x10a0, 0x1, 0x0);
        gbc.writeMem(0x4612, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0x4614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0213
        gbc.setState(0xe735, 0xd2f3, 0x87a0, 0x103a, 0x5c34, 0xf63c, 0x1, 0x1);
        gbc.writeMem(0xe735, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0xe737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe735));
        EXPECT(0x97, gbc.readMem(0xe736));
        // CB 97 0214
        gbc.setState(0x6b9b, 0x7efb, 0xb320, 0xe585, 0xbbeb, 0x200a, 0x0, 0x1);
        gbc.writeMem(0x6b9b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7efb, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0215
        gbc.setState(0x85b2, 0x8fda, 0x71f0, 0x4f67, 0x77a4, 0x5216, 0x1, 0x0);
        gbc.writeMem(0x85b2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b2));
        EXPECT(0x97, gbc.readMem(0x85b3));
        // CB 97 0216
        gbc.setState(0x12bb, 0x3481, 0xc190, 0x75ac, 0x97e2, 0x132e, 0x0, 0x1);
        gbc.writeMem(0x12bb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3481, gbc.sp());
        EXPECT(0x12bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0217
        gbc.setState(0xcd0e, 0x1f76, 0xcf30, 0x9109, 0xb043, 0xb013, 0x1, 0x1);
        gbc.writeMem(0xcd0e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1f76, gbc.sp());
        EXPECT(0xcd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0e));
        EXPECT(0x97, gbc.readMem(0xcd0f));
        // CB 97 0218
        gbc.setState(0xb41c, 0x500e, 0xb5e0, 0x1849, 0x2f93, 0x18d8, 0x1, 0x1);
        gbc.writeMem(0xb41c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41c));
        EXPECT(0x97, gbc.readMem(0xb41d));
        // CB 97 0219
        gbc.setState(0xafb3, 0xa77d, 0xf0f0, 0xbc5d, 0x22cc, 0xd278, 0x1, 0x1);
        gbc.writeMem(0xafb3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa77d, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb3));
        EXPECT(0x97, gbc.readMem(0xafb4));
        // CB 97 021A
        gbc.setState(0x80cb, 0x5d4c, 0xf180, 0xc887, 0xb012, 0xa739, 0x0, 0x0);
        gbc.writeMem(0x80cb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cb));
        EXPECT(0x97, gbc.readMem(0x80cc));
        // CB 97 021B
        gbc.setState(0x5bc7, 0x244b, 0x97c0, 0xb158, 0x827d, 0xaed8, 0x0, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 021C
        gbc.setState(0x1244, 0xb7c5, 0xdb00, 0xff1a, 0x53da, 0x917c, 0x1, 0x0);
        gbc.writeMem(0x1244, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x1246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 021D
        gbc.setState(0x2f2e, 0xeae6, 0x68f0, 0xa94, 0xd494, 0xd825, 0x0, 0x0);
        gbc.writeMem(0x2f2e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0x2f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 021E
        gbc.setState(0x3891, 0x96ab, 0x6470, 0xb444, 0xc0a2, 0x5532, 0x0, 0x1);
        gbc.writeMem(0x3891, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x96ab, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 021F
        gbc.setState(0x456c, 0xde0d, 0x9540, 0x7304, 0xd539, 0x6692, 0x0, 0x0);
        gbc.writeMem(0x456c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde0d, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0220
        gbc.setState(0xd7a4, 0x938e, 0xb670, 0xeb30, 0x3371, 0xe6a7, 0x0, 0x0);
        gbc.writeMem(0xd7a4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x938e, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0x97, gbc.readMem(0xd7a5));
        // CB 97 0221
        gbc.setState(0x97a6, 0xf908, 0x7340, 0x3fc2, 0xb385, 0x16d5, 0x0, 0x0);
        gbc.writeMem(0x97a6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf908, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a6));
        EXPECT(0x97, gbc.readMem(0x97a7));
        // CB 97 0222
        gbc.setState(0x9a25, 0x1f88, 0x9e80, 0xd3b2, 0xe5f2, 0x5bf3, 0x1, 0x0);
        gbc.writeMem(0x9a25, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1f88, gbc.sp());
        EXPECT(0x9a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a25));
        EXPECT(0x97, gbc.readMem(0x9a26));
        // CB 97 0223
        gbc.setState(0x26c4, 0xa076, 0xb4b0, 0x991b, 0x187d, 0x5489, 0x1, 0x1);
        gbc.writeMem(0x26c4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0x26c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0224
        gbc.setState(0x8f7, 0x3c89, 0x91a0, 0x25c9, 0x7bc7, 0xc614, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0225
        gbc.setState(0x6702, 0x1c1c, 0x3e60, 0xeef1, 0x947c, 0x237b, 0x1, 0x0);
        gbc.writeMem(0x6702, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0x6704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0226
        gbc.setState(0x3e45, 0x707c, 0xc7b0, 0x74d3, 0xf533, 0x8267, 0x1, 0x0);
        gbc.writeMem(0x3e45, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x707c, gbc.sp());
        EXPECT(0x3e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0227
        gbc.setState(0x67da, 0xc75f, 0x9e20, 0xee20, 0xeba2, 0x623, 0x1, 0x0);
        gbc.writeMem(0x67da, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x67dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0228
        gbc.setState(0xd52e, 0x3fd2, 0xba00, 0x26b4, 0xbed9, 0x521d, 0x0, 0x0);
        gbc.writeMem(0xd52e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3fd2, gbc.sp());
        EXPECT(0xd530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52e));
        EXPECT(0x97, gbc.readMem(0xd52f));
        // CB 97 0229
        gbc.setState(0x5ba9, 0x1b75, 0x7af0, 0xa124, 0xa4f6, 0xaab, 0x0, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1b75, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 022A
        gbc.setState(0xf27, 0x17b1, 0x3f30, 0xa470, 0x998e, 0xf121, 0x1, 0x0);
        gbc.writeMem(0xf27, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x17b1, gbc.sp());
        EXPECT(0xf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 022B
        gbc.setState(0x1861, 0x2545, 0xe70, 0x2638, 0x9e89, 0x272b, 0x0, 0x1);
        gbc.writeMem(0x1861, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2545, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 022C
        gbc.setState(0xba8c, 0xb4de, 0xcdd0, 0x91ae, 0xab57, 0xb002, 0x0, 0x0);
        gbc.writeMem(0xba8c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb4de, gbc.sp());
        EXPECT(0xba8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8c));
        EXPECT(0x97, gbc.readMem(0xba8d));
        // CB 97 022D
        gbc.setState(0x8032, 0xcb8d, 0xcb0, 0x3b90, 0x8d0, 0x126e, 0x0, 0x0);
        gbc.writeMem(0x8032, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcb8d, gbc.sp());
        EXPECT(0x8034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8032));
        EXPECT(0x97, gbc.readMem(0x8033));
        // CB 97 022F
        gbc.setState(0x12aa, 0xfe4a, 0xbe50, 0xfb61, 0x250e, 0xfe77, 0x1, 0x0);
        gbc.writeMem(0x12aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfe4a, gbc.sp());
        EXPECT(0x12ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0230
        gbc.setState(0x13d5, 0xf048, 0xdff0, 0xfc65, 0x788b, 0x3e20, 0x0, 0x0);
        gbc.writeMem(0x13d5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0231
        gbc.setState(0x4231, 0xde28, 0xfb90, 0x9fa0, 0x6222, 0x5824, 0x0, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xde28, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0232
        gbc.setState(0x9545, 0x34c4, 0xa580, 0x5bde, 0x344c, 0xe84c, 0x1, 0x1);
        gbc.writeMem(0x9545, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x34c4, gbc.sp());
        EXPECT(0x9547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9545));
        EXPECT(0x97, gbc.readMem(0x9546));
        // CB 97 0233
        gbc.setState(0xb22b, 0xc1a5, 0x8430, 0xa5c6, 0x92b4, 0xe95a, 0x0, 0x1);
        gbc.writeMem(0xb22b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc1a5, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0x97, gbc.readMem(0xb22c));
        // CB 97 0234
        gbc.setState(0x2211, 0xf792, 0x8140, 0x9b66, 0xc2d4, 0x5036, 0x1, 0x1);
        gbc.writeMem(0x2211, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf792, gbc.sp());
        EXPECT(0x2213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0235
        gbc.setState(0xa2fa, 0x5134, 0xd040, 0x169e, 0xd204, 0x28b1, 0x1, 0x1);
        gbc.writeMem(0xa2fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5134, gbc.sp());
        EXPECT(0xa2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fa));
        EXPECT(0x97, gbc.readMem(0xa2fb));
        // CB 97 0236
        gbc.setState(0x13d7, 0x2072, 0x4a20, 0x233e, 0x20ae, 0xd7a1, 0x1, 0x0);
        gbc.writeMem(0x13d7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2072, gbc.sp());
        EXPECT(0x13d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0237
        gbc.setState(0x6f73, 0x7ffa, 0xf8b0, 0x4006, 0xb3d4, 0x5253, 0x1, 0x0);
        gbc.writeMem(0x6f73, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x6f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0238
        gbc.setState(0xc9a2, 0xc90, 0xe510, 0xd0fb, 0xf766, 0xed7f, 0x1, 0x1);
        gbc.writeMem(0xc9a2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc90, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a2));
        EXPECT(0x97, gbc.readMem(0xc9a3));
        // CB 97 0239
        gbc.setState(0x23d7, 0xa666, 0xf5d0, 0x354d, 0x642c, 0xe440, 0x1, 0x0);
        gbc.writeMem(0x23d7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa666, gbc.sp());
        EXPECT(0x23d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 023A
        gbc.setState(0x1343, 0xe400, 0xfaf0, 0xc691, 0xc108, 0x23a9, 0x1, 0x0);
        gbc.writeMem(0x1343, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 023B
        gbc.setState(0xc7eb, 0xa47c, 0x5360, 0xe8f4, 0x7546, 0xbe6c, 0x1, 0x1);
        gbc.writeMem(0xc7eb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa47c, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0x97, gbc.readMem(0xc7ec));
        // CB 97 023C
        gbc.setState(0x76c6, 0xa059, 0x370, 0x1e7b, 0x194c, 0x16f8, 0x0, 0x1);
        gbc.writeMem(0x76c6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa059, gbc.sp());
        EXPECT(0x76c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 023D
        gbc.setState(0x4de5, 0xd2f6, 0x3d00, 0xde2, 0x779d, 0xdabb, 0x0, 0x1);
        gbc.writeMem(0x4de5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 023E
        gbc.setState(0x2b2f, 0xbdbc, 0x1210, 0x277e, 0x5cc9, 0x90b9, 0x0, 0x1);
        gbc.writeMem(0x2b2f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0x2b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 023F
        gbc.setState(0x45ba, 0x50d2, 0xa700, 0xb684, 0x6a34, 0xe545, 0x1, 0x1);
        gbc.writeMem(0x45ba, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0240
        gbc.setState(0x7e8c, 0xd2b7, 0x4890, 0x7db2, 0xc1e0, 0x1cc0, 0x1, 0x0);
        gbc.writeMem(0x7e8c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd2b7, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0241
        gbc.setState(0x45cf, 0xf590, 0xb160, 0x4f70, 0x1054, 0xd5e3, 0x0, 0x1);
        gbc.writeMem(0x45cf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0x45d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0242
        gbc.setState(0x3a88, 0x9479, 0x7650, 0x6c3, 0xa79, 0x1e43, 0x1, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9479, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0243
        gbc.setState(0x9a0c, 0x1dbe, 0x7b90, 0xe9dc, 0x9508, 0xb263, 0x1, 0x1);
        gbc.writeMem(0x9a0c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0c));
        EXPECT(0x97, gbc.readMem(0x9a0d));
        // CB 97 0244
        gbc.setState(0x2681, 0xbc05, 0xdcb0, 0x4244, 0x68e, 0xa824, 0x0, 0x1);
        gbc.writeMem(0x2681, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbc05, gbc.sp());
        EXPECT(0x2683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0245
        gbc.setState(0x934b, 0xa048, 0x1b10, 0x2092, 0x6384, 0x245a, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x934d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934b));
        EXPECT(0x97, gbc.readMem(0x934c));
        // CB 97 0246
        gbc.setState(0x662c, 0xb7a6, 0xa870, 0x408f, 0x2c4a, 0x23b8, 0x1, 0x1);
        gbc.writeMem(0x662c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0247
        gbc.setState(0x6be3, 0xeb97, 0x4800, 0xbece, 0xd848, 0x5c57, 0x0, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeb97, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0248
        gbc.setState(0xe42c, 0x552a, 0xe980, 0x9fe7, 0xc464, 0x684d, 0x1, 0x1);
        gbc.writeMem(0xe42c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x552a, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42c));
        EXPECT(0x97, gbc.readMem(0xe42d));
        // CB 97 0249
        gbc.setState(0x1515, 0x3d1a, 0xd1f0, 0xb7bb, 0x7292, 0x3836, 0x1, 0x0);
        gbc.writeMem(0x1515, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0x1517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 024A
        gbc.setState(0xc799, 0xfa8, 0xa0a0, 0xdf5e, 0xf138, 0x8fe, 0x0, 0x1);
        gbc.writeMem(0xc799, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0xc79b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc799));
        EXPECT(0x97, gbc.readMem(0xc79a));
        // CB 97 024B
        gbc.setState(0x9b90, 0x2f4e, 0xb4a0, 0xe6c0, 0x7526, 0x626b, 0x1, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2f4e, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b90));
        EXPECT(0x97, gbc.readMem(0x9b91));
        // CB 97 024C
        gbc.setState(0xb07e, 0x488e, 0x1e0, 0x88c, 0x6675, 0xca8c, 0x0, 0x1);
        gbc.writeMem(0xb07e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x488e, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07e));
        EXPECT(0x97, gbc.readMem(0xb07f));
        // CB 97 024D
        gbc.setState(0xb03b, 0x81c1, 0xdb60, 0x9bd0, 0xaedb, 0x9d06, 0x1, 0x1);
        gbc.writeMem(0xb03b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x81c1, gbc.sp());
        EXPECT(0xb03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03b));
        EXPECT(0x97, gbc.readMem(0xb03c));
        // CB 97 024E
        gbc.setState(0xc00d, 0x8c74, 0xc6f0, 0x4fce, 0xdcc5, 0x61a3, 0x0, 0x1);
        gbc.writeMem(0xc00d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8c74, gbc.sp());
        EXPECT(0xc00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00d));
        EXPECT(0x97, gbc.readMem(0xc00e));
        // CB 97 024F
        gbc.setState(0x41e5, 0x5a08, 0x3790, 0x3da9, 0x4c5d, 0x5f1, 0x0, 0x1);
        gbc.writeMem(0x41e5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0x41e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0250
        gbc.setState(0xa241, 0x2d53, 0x1f40, 0x57ba, 0xf49e, 0x7369, 0x0, 0x0);
        gbc.writeMem(0xa241, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2d53, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa241));
        EXPECT(0x97, gbc.readMem(0xa242));
        // CB 97 0251
        gbc.setState(0x169c, 0x29b3, 0xe5e0, 0xedc, 0x1aa9, 0xbd05, 0x1, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0252
        gbc.setState(0xd1f1, 0xedc2, 0xdf30, 0xab21, 0x689f, 0x8071, 0x1, 0x0);
        gbc.writeMem(0xd1f1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xedc2, gbc.sp());
        EXPECT(0xd1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f1));
        EXPECT(0x97, gbc.readMem(0xd1f2));
        // CB 97 0253
        gbc.setState(0x7be1, 0xe4e, 0x13f0, 0xd4a3, 0xc4a7, 0x269a, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe4e, gbc.sp());
        EXPECT(0x7be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0254
        gbc.setState(0xab43, 0x51a6, 0xbc20, 0xbbe2, 0x59fb, 0xc229, 0x0, 0x1);
        gbc.writeMem(0xab43, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x51a6, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab43));
        EXPECT(0x97, gbc.readMem(0xab44));
        // CB 97 0255
        gbc.setState(0xc25e, 0x1e5, 0xed00, 0xbafa, 0xb426, 0x7d63, 0x0, 0x0);
        gbc.writeMem(0xc25e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1e5, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25e));
        EXPECT(0x97, gbc.readMem(0xc25f));
        // CB 97 0256
        gbc.setState(0x8ed, 0x80c3, 0x9dc0, 0x740e, 0x808e, 0x1383, 0x1, 0x0);
        gbc.writeMem(0x8ed, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0257
        gbc.setState(0x36dd, 0x66cc, 0x5a40, 0x15d0, 0x3f3c, 0xafd6, 0x0, 0x0);
        gbc.writeMem(0x36dd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x66cc, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0258
        gbc.setState(0x7acf, 0x2fc2, 0xe590, 0x7f02, 0x5a6, 0xb014, 0x0, 0x1);
        gbc.writeMem(0x7acf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2fc2, gbc.sp());
        EXPECT(0x7ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0259
        gbc.setState(0xd5ec, 0x8960, 0x6850, 0x793, 0xc9be, 0x7e0b, 0x0, 0x1);
        gbc.writeMem(0xd5ec, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8960, gbc.sp());
        EXPECT(0xd5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ec));
        EXPECT(0x97, gbc.readMem(0xd5ed));
        // CB 97 025A
        gbc.setState(0xc32f, 0x23b7, 0x4670, 0x9d83, 0x46c8, 0x9d7a, 0x0, 0x1);
        gbc.writeMem(0xc32f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0x97, gbc.readMem(0xc330));
        // CB 97 025B
        gbc.setState(0xeb74, 0xa3c, 0x4cd0, 0x9e1c, 0xeee8, 0x6cae, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0xeb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb74));
        EXPECT(0x97, gbc.readMem(0xeb75));
        // CB 97 025C
        gbc.setState(0x4428, 0x927e, 0x39f0, 0x7e6c, 0x3f29, 0x73e2, 0x1, 0x0);
        gbc.writeMem(0x4428, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0x442a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 025D
        gbc.setState(0x2f46, 0x2af2, 0xcda0, 0xae3a, 0xdc08, 0xf3bd, 0x1, 0x1);
        gbc.writeMem(0x2f46, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2af2, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 025E
        gbc.setState(0xed45, 0x4a94, 0xe8f0, 0x5fb5, 0x3aed, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0xed45, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4a94, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed45));
        EXPECT(0x97, gbc.readMem(0xed46));
        // CB 97 025F
        gbc.setState(0x3f69, 0xe7f5, 0x1f10, 0xcb9, 0xd22b, 0xe2f, 0x1, 0x1);
        gbc.writeMem(0x3f69, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0260
        gbc.setState(0xc5dd, 0xaefe, 0x6720, 0x8db1, 0x9ae0, 0x2414, 0x0, 0x0);
        gbc.writeMem(0xc5dd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaefe, gbc.sp());
        EXPECT(0xc5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5dd));
        EXPECT(0x97, gbc.readMem(0xc5de));
        // CB 97 0261
        gbc.setState(0xa563, 0xd341, 0xbd60, 0xffe8, 0xf4cd, 0x660a, 0x1, 0x1);
        gbc.writeMem(0xa563, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd341, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0x97, gbc.readMem(0xa564));
        // CB 97 0262
        gbc.setState(0x126, 0xb16b, 0x5240, 0x6b51, 0x5f57, 0x5f6d, 0x1, 0x1);
        gbc.writeMem(0x126, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb16b, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0263
        gbc.setState(0x136b, 0xdd38, 0x2e20, 0x4ccf, 0xaec1, 0xe3e8, 0x1, 0x0);
        gbc.writeMem(0x136b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0264
        gbc.setState(0xd848, 0x88f4, 0x3ee0, 0x61e9, 0x7747, 0xfaa6, 0x1, 0x1);
        gbc.writeMem(0xd848, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0xd84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd848));
        EXPECT(0x97, gbc.readMem(0xd849));
        // CB 97 0265
        gbc.setState(0xd93d, 0x8887, 0xfb30, 0x6fbf, 0xbfa1, 0x58be, 0x0, 0x1);
        gbc.writeMem(0xd93d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8887, gbc.sp());
        EXPECT(0xd93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93d));
        EXPECT(0x97, gbc.readMem(0xd93e));
        // CB 97 0266
        gbc.setState(0x846c, 0x4962, 0x330, 0x971a, 0xa8d4, 0xd24f, 0x0, 0x1);
        gbc.writeMem(0x846c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x846e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846c));
        EXPECT(0x97, gbc.readMem(0x846d));
        // CB 97 0267
        gbc.setState(0xdd93, 0x1f23, 0x7f90, 0x686a, 0xdbd9, 0x28d9, 0x0, 0x1);
        gbc.writeMem(0xdd93, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0xdd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd93));
        EXPECT(0x97, gbc.readMem(0xdd94));
        // CB 97 0268
        gbc.setState(0x1610, 0x5495, 0x7210, 0xaf0f, 0x570b, 0x23c8, 0x0, 0x1);
        gbc.writeMem(0x1610, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5495, gbc.sp());
        EXPECT(0x1612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0269
        gbc.setState(0x517c, 0xbd94, 0xfbe0, 0xacac, 0x12bf, 0xfb75, 0x0, 0x1);
        gbc.writeMem(0x517c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbd94, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 026A
        gbc.setState(0x7171, 0x60a1, 0x6f80, 0x7b94, 0xdc98, 0x7183, 0x0, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x60a1, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 026B
        gbc.setState(0x8a37, 0x3752, 0xa630, 0xfa80, 0x3561, 0xd127, 0x1, 0x1);
        gbc.writeMem(0x8a37, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3752, gbc.sp());
        EXPECT(0x8a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a37));
        EXPECT(0x97, gbc.readMem(0x8a38));
        // CB 97 026C
        gbc.setState(0x6b86, 0xaeaf, 0x57a0, 0x60fb, 0xda2d, 0xf8aa, 0x1, 0x0);
        gbc.writeMem(0x6b86, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0x6b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 026D
        gbc.setState(0x2b9d, 0x7a0c, 0x3190, 0x7f0b, 0xc336, 0xecab, 0x1, 0x0);
        gbc.writeMem(0x2b9d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 026E
        gbc.setState(0x3738, 0x488a, 0xd1a0, 0x5f3b, 0x7c6c, 0xe17e, 0x1, 0x0);
        gbc.writeMem(0x3738, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x488a, gbc.sp());
        EXPECT(0x373a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 026F
        gbc.setState(0x5b89, 0x7be4, 0xe970, 0x8800, 0x5a43, 0x7375, 0x0, 0x0);
        gbc.writeMem(0x5b89, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7be4, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0270
        gbc.setState(0xe662, 0x31e9, 0x70a0, 0xb96f, 0xb322, 0x7e4e, 0x0, 0x0);
        gbc.writeMem(0xe662, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x31e9, gbc.sp());
        EXPECT(0xe664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe662));
        EXPECT(0x97, gbc.readMem(0xe663));
        // CB 97 0271
        gbc.setState(0xe56, 0xc207, 0x9e00, 0x2f34, 0x3c0f, 0xc508, 0x1, 0x1);
        gbc.writeMem(0xe56, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0xe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0272
        gbc.setState(0xa93f, 0xc778, 0xcc0, 0x9b10, 0x97d5, 0x192c, 0x0, 0x1);
        gbc.writeMem(0xa93f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0xa941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93f));
        EXPECT(0x97, gbc.readMem(0xa940));
        // CB 97 0273
        gbc.setState(0x9bb4, 0xc7b5, 0x2770, 0xd76a, 0x59ed, 0x1a96, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc7b5, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb4));
        EXPECT(0x97, gbc.readMem(0x9bb5));
        // CB 97 0274
        gbc.setState(0x5cd4, 0x664b, 0x3dc0, 0x2ec9, 0x96f9, 0xd931, 0x1, 0x0);
        gbc.writeMem(0x5cd4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x664b, gbc.sp());
        EXPECT(0x5cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0275
        gbc.setState(0xa57e, 0xcea7, 0x80a0, 0x3fee, 0x7324, 0xb724, 0x0, 0x0);
        gbc.writeMem(0xa57e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcea7, gbc.sp());
        EXPECT(0xa580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57e));
        EXPECT(0x97, gbc.readMem(0xa57f));
        // CB 97 0276
        gbc.setState(0x7720, 0x6ed4, 0x6320, 0xafbd, 0xcb9c, 0xa5f9, 0x1, 0x0);
        gbc.writeMem(0x7720, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6ed4, gbc.sp());
        EXPECT(0x7722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0278
        gbc.setState(0x813e, 0x726b, 0xa860, 0x4101, 0x86b9, 0x4653, 0x1, 0x1);
        gbc.writeMem(0x813e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0x8140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813e));
        EXPECT(0x97, gbc.readMem(0x813f));
        // CB 97 0279
        gbc.setState(0xbf19, 0x9420, 0x5c70, 0x7a3c, 0x61f2, 0xca2e, 0x1, 0x0);
        gbc.writeMem(0xbf19, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9420, gbc.sp());
        EXPECT(0xbf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf19));
        EXPECT(0x97, gbc.readMem(0xbf1a));
        // CB 97 027A
        gbc.setState(0xdb23, 0xdb, 0x5b60, 0x81bf, 0x870b, 0xcad3, 0x0, 0x0);
        gbc.writeMem(0xdb23, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdb, gbc.sp());
        EXPECT(0xdb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb23));
        EXPECT(0x97, gbc.readMem(0xdb24));
        // CB 97 027B
        gbc.setState(0x230c, 0xaf6b, 0x8ec0, 0xdcde, 0x3845, 0x97d3, 0x0, 0x1);
        gbc.writeMem(0x230c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0x230e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 027C
        gbc.setState(0xdac5, 0x55a5, 0xd3b0, 0xfcce, 0x2fab, 0x9874, 0x0, 0x0);
        gbc.writeMem(0xdac5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac5));
        EXPECT(0x97, gbc.readMem(0xdac6));
        // CB 97 027D
        gbc.setState(0x19bf, 0x89cf, 0x8580, 0x9c21, 0x10ec, 0xbff5, 0x0, 0x1);
        gbc.writeMem(0x19bf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x89cf, gbc.sp());
        EXPECT(0x19c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 027E
        gbc.setState(0x1d7a, 0x2407, 0xd30, 0x1d71, 0x27ad, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0x1d7a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x1d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 027F
        gbc.setState(0xec8d, 0x825c, 0x56b0, 0xb0d3, 0xda82, 0x9cec, 0x0, 0x1);
        gbc.writeMem(0xec8d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0xec8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8d));
        EXPECT(0x97, gbc.readMem(0xec8e));
        // CB 97 0280
        gbc.setState(0xca4, 0xd246, 0xeda0, 0x10fc, 0xb964, 0xfb6c, 0x1, 0x0);
        gbc.writeMem(0xca4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd246, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0281
        gbc.setState(0xbcf5, 0x210c, 0x33e0, 0x1133, 0xc8ca, 0x2764, 0x0, 0x1);
        gbc.writeMem(0xbcf5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x210c, gbc.sp());
        EXPECT(0xbcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf5));
        EXPECT(0x97, gbc.readMem(0xbcf6));
        // CB 97 0282
        gbc.setState(0x9116, 0xb152, 0x1740, 0xdbbb, 0x9dc2, 0xdc30, 0x0, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb152, gbc.sp());
        EXPECT(0x9118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9116));
        EXPECT(0x97, gbc.readMem(0x9117));
        // CB 97 0283
        gbc.setState(0x2ffc, 0x3c2c, 0x3210, 0xf0b0, 0xdb58, 0x84f8, 0x0, 0x0);
        gbc.writeMem(0x2ffc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3c2c, gbc.sp());
        EXPECT(0x2ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0284
        gbc.setState(0x911d, 0xeb3d, 0xdbc0, 0xc0f5, 0xd86b, 0x1a16, 0x0, 0x1);
        gbc.writeMem(0x911d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb3d, gbc.sp());
        EXPECT(0x911f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911d));
        EXPECT(0x97, gbc.readMem(0x911e));
        // CB 97 0285
        gbc.setState(0x41d3, 0xab73, 0xfa30, 0x46d8, 0x5d4, 0xffc6, 0x1, 0x0);
        gbc.writeMem(0x41d3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xab73, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0286
        gbc.setState(0x309c, 0x8f38, 0x6fc0, 0xf968, 0x1757, 0x355d, 0x0, 0x1);
        gbc.writeMem(0x309c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8f38, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0287
        gbc.setState(0xedaa, 0x9ea, 0xbfe0, 0x378d, 0x752f, 0x2d, 0x0, 0x0);
        gbc.writeMem(0xedaa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0x97, gbc.readMem(0xedab));
        // CB 97 0288
        gbc.setState(0x70ca, 0xc53d, 0x25f0, 0x643, 0x2815, 0x181a, 0x0, 0x1);
        gbc.writeMem(0x70ca, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc53d, gbc.sp());
        EXPECT(0x70cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0289
        gbc.setState(0x8763, 0xd2b0, 0x2fb0, 0xc9fd, 0xc32f, 0xf903, 0x0, 0x0);
        gbc.writeMem(0x8763, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd2b0, gbc.sp());
        EXPECT(0x8765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8763));
        EXPECT(0x97, gbc.readMem(0x8764));
        // CB 97 028A
        gbc.setState(0x601b, 0xc58e, 0xe9c0, 0x19a3, 0x59e5, 0x4f3d, 0x1, 0x1);
        gbc.writeMem(0x601b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x601d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 028B
        gbc.setState(0x3144, 0xd0d2, 0x560, 0xbd6d, 0x2f94, 0xdc43, 0x0, 0x0);
        gbc.writeMem(0x3144, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0x3146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 028C
        gbc.setState(0x596a, 0x26f3, 0x8200, 0x5678, 0x2219, 0x2324, 0x0, 0x1);
        gbc.writeMem(0x596a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x26f3, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 028D
        gbc.setState(0xc21, 0xdbe7, 0xc340, 0x3cc5, 0xb8c4, 0x6e08, 0x1, 0x0);
        gbc.writeMem(0xc21, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0xc23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 028E
        gbc.setState(0x5592, 0xb03f, 0x45e0, 0x5c3d, 0x3de3, 0x64b4, 0x1, 0x0);
        gbc.writeMem(0x5592, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb03f, gbc.sp());
        EXPECT(0x5594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0290
        gbc.setState(0xb6ad, 0x6e6c, 0xf70, 0x1b85, 0x8130, 0x46ed, 0x0, 0x1);
        gbc.writeMem(0xb6ad, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0xb6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ad));
        EXPECT(0x97, gbc.readMem(0xb6ae));
        // CB 97 0291
        gbc.setState(0x7970, 0x54ef, 0xa490, 0x90da, 0xaa3e, 0x9432, 0x0, 0x1);
        gbc.writeMem(0x7970, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x54ef, gbc.sp());
        EXPECT(0x7972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0292
        gbc.setState(0xadcc, 0x4df3, 0xe040, 0x4405, 0xa44f, 0x5f4d, 0x1, 0x0);
        gbc.writeMem(0xadcc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4df3, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadcc));
        EXPECT(0x97, gbc.readMem(0xadcd));
        // CB 97 0293
        gbc.setState(0x76c4, 0xc43b, 0x6000, 0xc8c4, 0x90cd, 0x540, 0x0, 0x1);
        gbc.writeMem(0x76c4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0x76c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0294
        gbc.setState(0xd6ac, 0x2624, 0xbc30, 0x2c4f, 0x982c, 0x52cb, 0x1, 0x0);
        gbc.writeMem(0xd6ac, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2624, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ac));
        EXPECT(0x97, gbc.readMem(0xd6ad));
        // CB 97 0295
        gbc.setState(0xa3a2, 0x9535, 0xe110, 0x151, 0x4e86, 0x8e0f, 0x1, 0x1);
        gbc.writeMem(0xa3a2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0xa3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a2));
        EXPECT(0x97, gbc.readMem(0xa3a3));
        // CB 97 0296
        gbc.setState(0x6161, 0x7762, 0xcbe0, 0xde56, 0xea2d, 0xd05, 0x0, 0x1);
        gbc.writeMem(0x6161, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7762, gbc.sp());
        EXPECT(0x6163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0297
        gbc.setState(0x3d56, 0x7ec5, 0x4650, 0x8980, 0x2c0d, 0x84f3, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0298
        gbc.setState(0x717f, 0x71eb, 0x68d0, 0x267a, 0xfdb1, 0xf1a0, 0x1, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x71eb, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0299
        gbc.setState(0xe31a, 0x6579, 0x6ca0, 0xaf6b, 0x91b6, 0xa6b8, 0x0, 0x0);
        gbc.writeMem(0xe31a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6579, gbc.sp());
        EXPECT(0xe31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31a));
        EXPECT(0x97, gbc.readMem(0xe31b));
        // CB 97 029A
        gbc.setState(0x5878, 0xd74e, 0xda0, 0xa6a2, 0xedbc, 0x800, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd74e, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 029B
        gbc.setState(0xd981, 0x3b3f, 0xee70, 0x46e3, 0x911e, 0x36f1, 0x1, 0x0);
        gbc.writeMem(0xd981, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3b3f, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd981));
        EXPECT(0x97, gbc.readMem(0xd982));
        // CB 97 029C
        gbc.setState(0xd127, 0x3af5, 0x4db0, 0x7767, 0x2dd9, 0xa198, 0x0, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3af5, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0x97, gbc.readMem(0xd128));
        // CB 97 029D
        gbc.setState(0xdfc9, 0xee7b, 0xb190, 0xa80f, 0xc313, 0x2b1f, 0x1, 0x0);
        gbc.writeMem(0xdfc9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xee7b, gbc.sp());
        EXPECT(0xdfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc9));
        EXPECT(0x97, gbc.readMem(0xdfca));
        // CB 97 029E
        gbc.setState(0x2603, 0xda79, 0xc8e0, 0xeca8, 0xa2e8, 0x6e3a, 0x1, 0x1);
        gbc.writeMem(0x2603, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0x2605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 029F
        gbc.setState(0xa94, 0xb95e, 0xd210, 0x629f, 0xafce, 0x6af9, 0x0, 0x0);
        gbc.writeMem(0xa94, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0xa96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02A0
        gbc.setState(0x5203, 0xf685, 0x9a20, 0x92d0, 0x636b, 0xdaa2, 0x1, 0x1);
        gbc.writeMem(0x5203, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf685, gbc.sp());
        EXPECT(0x5205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02A1
        gbc.setState(0x96f3, 0x3c1c, 0x2810, 0xbb3d, 0xdf12, 0x5af2, 0x1, 0x0);
        gbc.writeMem(0x96f3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0x96f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f3));
        EXPECT(0x97, gbc.readMem(0x96f4));
        // CB 97 02A3
        gbc.setState(0x2ad6, 0xcc5, 0x8510, 0x30b, 0x3a34, 0x900e, 0x1, 0x1);
        gbc.writeMem(0x2ad6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0x2ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02A4
        gbc.setState(0xa47c, 0x8464, 0x7a80, 0x4016, 0xca4f, 0xfac8, 0x1, 0x1);
        gbc.writeMem(0xa47c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8464, gbc.sp());
        EXPECT(0xa47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47c));
        EXPECT(0x97, gbc.readMem(0xa47d));
        // CB 97 02A5
        gbc.setState(0x5097, 0x6d52, 0xa720, 0xf4d9, 0x7bb8, 0xfc34, 0x0, 0x1);
        gbc.writeMem(0x5097, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x5099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02A6
        gbc.setState(0x1ec, 0xe87d, 0xf700, 0xf453, 0x7da3, 0xfde8, 0x1, 0x1);
        gbc.writeMem(0x1ec, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe87d, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02A7
        gbc.setState(0x384d, 0x98aa, 0xb1b0, 0xb6a6, 0x4b50, 0xd652, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02A8
        gbc.setState(0x3d0a, 0xef3a, 0x9b40, 0x568, 0xa9fe, 0x7b6d, 0x1, 0x1);
        gbc.writeMem(0x3d0a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xef3a, gbc.sp());
        EXPECT(0x3d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02A9
        gbc.setState(0xa23, 0x6569, 0x30, 0xe2ca, 0xa7f8, 0x37f2, 0x1, 0x0);
        gbc.writeMem(0xa23, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6569, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02AA
        gbc.setState(0xb795, 0xddb9, 0x16e0, 0xb4cd, 0x6949, 0x7d29, 0x1, 0x0);
        gbc.writeMem(0xb795, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddb9, gbc.sp());
        EXPECT(0xb797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb795));
        EXPECT(0x97, gbc.readMem(0xb796));
        // CB 97 02AB
        gbc.setState(0xa1f, 0x10b5, 0xc5d0, 0x1642, 0x9080, 0x2788, 0x0, 0x1);
        gbc.writeMem(0xa1f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x10b5, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02AC
        gbc.setState(0xb2fb, 0x37a, 0x14d0, 0xb445, 0xef78, 0x7fc7, 0x0, 0x1);
        gbc.writeMem(0xb2fb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x37a, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fb));
        EXPECT(0x97, gbc.readMem(0xb2fc));
        // CB 97 02AD
        gbc.setState(0x7b94, 0x31e8, 0x8f30, 0xfa0f, 0x5bd5, 0xe1ca, 0x0, 0x1);
        gbc.writeMem(0x7b94, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0x7b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02AE
        gbc.setState(0xaf99, 0x3e77, 0xd490, 0x775c, 0xeea2, 0x4dfb, 0x0, 0x0);
        gbc.writeMem(0xaf99, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0x97, gbc.readMem(0xaf9a));
        // CB 97 02AF
        gbc.setState(0xd43e, 0x96d9, 0x1a20, 0xef1a, 0x5ac7, 0x934, 0x0, 0x1);
        gbc.writeMem(0xd43e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x96d9, gbc.sp());
        EXPECT(0xd440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43e));
        EXPECT(0x97, gbc.readMem(0xd43f));
        // CB 97 02B0
        gbc.setState(0x2302, 0x932b, 0xc3d0, 0x4799, 0xcea6, 0xb57d, 0x1, 0x1);
        gbc.writeMem(0x2302, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02B2
        gbc.setState(0xd696, 0x78ad, 0x3230, 0x7de3, 0xbf98, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0xd696, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x78ad, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd696));
        EXPECT(0x97, gbc.readMem(0xd697));
        // CB 97 02B3
        gbc.setState(0xe48f, 0x5f20, 0x4ea0, 0xcb38, 0xcf81, 0xeaf3, 0x1, 0x0);
        gbc.writeMem(0xe48f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48f));
        EXPECT(0x97, gbc.readMem(0xe490));
        // CB 97 02B4
        gbc.setState(0x6de2, 0x37ae, 0xfdf0, 0xd88b, 0x50aa, 0xe46f, 0x0, 0x1);
        gbc.writeMem(0x6de2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x37ae, gbc.sp());
        EXPECT(0x6de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02B5
        gbc.setState(0x888b, 0x37bc, 0xd550, 0xeda, 0xdfd8, 0x7d46, 0x1, 0x1);
        gbc.writeMem(0x888b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x37bc, gbc.sp());
        EXPECT(0x888d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888b));
        EXPECT(0x97, gbc.readMem(0x888c));
        // CB 97 02B6
        gbc.setState(0x4457, 0x7f77, 0x1280, 0xaa2b, 0xdad8, 0xd7e, 0x0, 0x1);
        gbc.writeMem(0x4457, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7f77, gbc.sp());
        EXPECT(0x4459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02B7
        gbc.setState(0x1ea7, 0x54e7, 0xe590, 0xceb0, 0x82e8, 0x87a2, 0x1, 0x0);
        gbc.writeMem(0x1ea7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02B8
        gbc.setState(0xddd7, 0x2d34, 0xaeb0, 0xa08e, 0xd717, 0xc247, 0x1, 0x0);
        gbc.writeMem(0xddd7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2d34, gbc.sp());
        EXPECT(0xddd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd7));
        EXPECT(0x97, gbc.readMem(0xddd8));
        // CB 97 02B9
        gbc.setState(0x70c3, 0xda4b, 0xb920, 0x34f4, 0x8705, 0x6b, 0x1, 0x1);
        gbc.writeMem(0x70c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02BA
        gbc.setState(0x7912, 0x35df, 0xaea0, 0x2052, 0x83fb, 0x67bf, 0x0, 0x1);
        gbc.writeMem(0x7912, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x35df, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02BC
        gbc.setState(0xd554, 0x57bc, 0xeb90, 0x313f, 0xbc66, 0xe87, 0x1, 0x1);
        gbc.writeMem(0xd554, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0x97, gbc.readMem(0xd555));
        // CB 97 02BD
        gbc.setState(0x53e2, 0x2190, 0xa150, 0x9381, 0xda7f, 0xabc4, 0x1, 0x1);
        gbc.writeMem(0x53e2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02BE
        gbc.setState(0xbe59, 0x69ad, 0x9b80, 0xa70b, 0x86f3, 0xe495, 0x0, 0x1);
        gbc.writeMem(0xbe59, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0xbe5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe59));
        EXPECT(0x97, gbc.readMem(0xbe5a));
        // CB 97 02BF
        gbc.setState(0xc012, 0x2c29, 0xd840, 0x7054, 0x17c4, 0xe259, 0x0, 0x1);
        gbc.writeMem(0xc012, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2c29, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc012));
        EXPECT(0x97, gbc.readMem(0xc013));
        // CB 97 02C1
        gbc.setState(0x8afc, 0x4f57, 0x6aa0, 0xe288, 0xd6d6, 0x2c75, 0x1, 0x0);
        gbc.writeMem(0x8afc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0x97, gbc.readMem(0x8afd));
        // CB 97 02C2
        gbc.setState(0x16a7, 0xf4f2, 0x2fc0, 0xfc3, 0x96b3, 0xe414, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02C3
        gbc.setState(0x33a9, 0x146b, 0x8260, 0x4000, 0xbeb2, 0x9dd6, 0x0, 0x0);
        gbc.writeMem(0x33a9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x146b, gbc.sp());
        EXPECT(0x33ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02C4
        gbc.setState(0x9a0, 0x5e52, 0x8650, 0xbfe8, 0x80ed, 0xd663, 0x1, 0x0);
        gbc.writeMem(0x9a0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5e52, gbc.sp());
        EXPECT(0x9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02C5
        gbc.setState(0x5e87, 0x944c, 0x1190, 0x5859, 0x3e42, 0xbeab, 0x0, 0x1);
        gbc.writeMem(0x5e87, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02C6
        gbc.setState(0x45fe, 0xfd3, 0xf0f0, 0x18be, 0xd36, 0x1a33, 0x1, 0x0);
        gbc.writeMem(0x45fe, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfd3, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02C7
        gbc.setState(0xba72, 0xb283, 0xf980, 0x95f1, 0x8caa, 0xde1, 0x1, 0x1);
        gbc.writeMem(0xba72, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb283, gbc.sp());
        EXPECT(0xba74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba72));
        EXPECT(0x97, gbc.readMem(0xba73));
        // CB 97 02C8
        gbc.setState(0x4930, 0xda19, 0xdc10, 0xa726, 0xd74, 0x7cfe, 0x1, 0x1);
        gbc.writeMem(0x4930, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0x4932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02C9
        gbc.setState(0x80bc, 0xc547, 0x72c0, 0x7cef, 0x3a75, 0x1dc8, 0x1, 0x0);
        gbc.writeMem(0x80bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bc));
        EXPECT(0x97, gbc.readMem(0x80bd));
        // CB 97 02CA
        gbc.setState(0x3897, 0xac8b, 0x38a0, 0xf768, 0xd0b8, 0xec55, 0x1, 0x0);
        gbc.writeMem(0x3897, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac8b, gbc.sp());
        EXPECT(0x3899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02CB
        gbc.setState(0x51d0, 0xcaa2, 0x4600, 0x5736, 0x9974, 0x9d43, 0x0, 0x0);
        gbc.writeMem(0x51d0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcaa2, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02CC
        gbc.setState(0xdac8, 0x452d, 0x94c0, 0x1007, 0x48ff, 0x4b05, 0x1, 0x1);
        gbc.writeMem(0xdac8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0x97, gbc.readMem(0xdac9));
        // CB 97 02CD
        gbc.setState(0xd007, 0xa81c, 0x5710, 0x3323, 0x108e, 0x430d, 0x0, 0x1);
        gbc.writeMem(0xd007, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0xd009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd007));
        EXPECT(0x97, gbc.readMem(0xd008));
        // CB 97 02CE
        gbc.setState(0xba79, 0x6f2, 0x3990, 0x606f, 0xe13b, 0xf049, 0x0, 0x1);
        gbc.writeMem(0xba79, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0xba7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba79));
        EXPECT(0x97, gbc.readMem(0xba7a));
        // CB 97 02CF
        gbc.setState(0x6bb4, 0xa890, 0x15b0, 0x5fb1, 0x2c56, 0x6f21, 0x1, 0x0);
        gbc.writeMem(0x6bb4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0x6bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02D0
        gbc.setState(0x4489, 0xc235, 0x4d80, 0x3f4f, 0x9dac, 0xab2f, 0x0, 0x0);
        gbc.writeMem(0x4489, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0x448b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02D1
        gbc.setState(0x8ac5, 0xf37d, 0x6370, 0x19e, 0x688b, 0x6aee, 0x0, 0x1);
        gbc.writeMem(0x8ac5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac5));
        EXPECT(0x97, gbc.readMem(0x8ac6));
        // CB 97 02D2
        gbc.setState(0xa372, 0xb485, 0x9410, 0xabc, 0xd514, 0x2392, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb485, gbc.sp());
        EXPECT(0xa374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa372));
        EXPECT(0x97, gbc.readMem(0xa373));
        // CB 97 02D4
        gbc.setState(0x2a01, 0x9a07, 0x22a0, 0x8731, 0xd929, 0x5dda, 0x1, 0x1);
        gbc.writeMem(0x2a01, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9a07, gbc.sp());
        EXPECT(0x2a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02D5
        gbc.setState(0x6078, 0x2822, 0x13a0, 0x44c4, 0x1c1b, 0x330f, 0x0, 0x0);
        gbc.writeMem(0x6078, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0x607a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02D6
        gbc.setState(0xb76a, 0x9d28, 0xd730, 0x6539, 0x120e, 0xdd4e, 0x1, 0x1);
        gbc.writeMem(0xb76a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76a));
        EXPECT(0x97, gbc.readMem(0xb76b));
        // CB 97 02D7
        gbc.setState(0xc9e0, 0x6ed8, 0x3d10, 0xbe93, 0x9568, 0x11b9, 0x0, 0x0);
        gbc.writeMem(0xc9e0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6ed8, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e0));
        EXPECT(0x97, gbc.readMem(0xc9e1));
        // CB 97 02D8
        gbc.setState(0x7d4a, 0xfee8, 0x530, 0xb0ff, 0x64f8, 0x806, 0x1, 0x0);
        gbc.writeMem(0x7d4a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02D9
        gbc.setState(0xc29e, 0x688b, 0xd630, 0x322f, 0x925a, 0x1795, 0x0, 0x0);
        gbc.writeMem(0xc29e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x688b, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29e));
        EXPECT(0x97, gbc.readMem(0xc29f));
        // CB 97 02DA
        gbc.setState(0x9fbc, 0xadd6, 0x1ee0, 0x345b, 0x1c8e, 0x8ed8, 0x0, 0x0);
        gbc.writeMem(0x9fbc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xadd6, gbc.sp());
        EXPECT(0x9fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbc));
        EXPECT(0x97, gbc.readMem(0x9fbd));
        // CB 97 02DB
        gbc.setState(0x51fa, 0xf47c, 0xd4f0, 0xf670, 0xe3b6, 0x1fac, 0x1, 0x1);
        gbc.writeMem(0x51fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf47c, gbc.sp());
        EXPECT(0x51fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02DC
        gbc.setState(0x60ce, 0x89ae, 0xd5d0, 0xf210, 0x9220, 0x845c, 0x1, 0x1);
        gbc.writeMem(0x60ce, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x89ae, gbc.sp());
        EXPECT(0x60d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02DD
        gbc.setState(0x44a, 0x1cbb, 0x6f0, 0xf42, 0x594, 0x237, 0x0, 0x1);
        gbc.writeMem(0x44a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0x44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02DE
        gbc.setState(0xce1a, 0x10e0, 0x94b0, 0xa77e, 0x6ce7, 0x174b, 0x0, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0x97, gbc.readMem(0xce1b));
        // CB 97 02DF
        gbc.setState(0x2248, 0xd207, 0x82a0, 0x3b36, 0xf1ef, 0xd6c8, 0x0, 0x0);
        gbc.writeMem(0x2248, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0x224a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02E0
        gbc.setState(0xc42f, 0x8959, 0x4190, 0xc0e9, 0x2866, 0x1a75, 0x1, 0x1);
        gbc.writeMem(0xc42f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8959, gbc.sp());
        EXPECT(0xc431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42f));
        EXPECT(0x97, gbc.readMem(0xc430));
        // CB 97 02E1
        gbc.setState(0x7ca1, 0x8c94, 0xb210, 0x247c, 0x9504, 0x36ef, 0x0, 0x0);
        gbc.writeMem(0x7ca1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8c94, gbc.sp());
        EXPECT(0x7ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02E2
        gbc.setState(0x1697, 0x6f47, 0x6a50, 0x4e6d, 0x9e5c, 0x4628, 0x0, 0x0);
        gbc.writeMem(0x1697, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6f47, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02E3
        gbc.setState(0xeff0, 0xccbc, 0x7380, 0x3164, 0xe36e, 0x36b, 0x0, 0x1);
        gbc.writeMem(0xeff0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xccbc, gbc.sp());
        EXPECT(0xeff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff0));
        EXPECT(0x97, gbc.readMem(0xeff1));
        // CB 97 02E4
        gbc.setState(0x39cf, 0xf256, 0x46a0, 0x41bd, 0xbba9, 0x6510, 0x0, 0x0);
        gbc.writeMem(0x39cf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf256, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02E5
        gbc.setState(0x84d6, 0x1b7b, 0x1210, 0x2628, 0xe156, 0x5298, 0x1, 0x0);
        gbc.writeMem(0x84d6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0x84d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d6));
        EXPECT(0x97, gbc.readMem(0x84d7));
        // CB 97 02E6
        gbc.setState(0x75, 0x5e72, 0x96c0, 0x86e5, 0xb83e, 0xeaf9, 0x0, 0x1);
        gbc.writeMem(0x75, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5e72, gbc.sp());
        EXPECT(0x77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02E8
        gbc.setState(0x1bfa, 0x7ed6, 0x7b00, 0x45f2, 0xb930, 0x4534, 0x1, 0x1);
        gbc.writeMem(0x1bfa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0x1bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02E9
        gbc.setState(0xb84b, 0xed4c, 0x69f0, 0xaf17, 0xb494, 0xb824, 0x1, 0x1);
        gbc.writeMem(0xb84b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0xb84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84b));
        EXPECT(0x97, gbc.readMem(0xb84c));
        // CB 97 02EB
        gbc.setState(0x79cf, 0xd18d, 0x2270, 0xb3c0, 0x3a78, 0x37fe, 0x1, 0x1);
        gbc.writeMem(0x79cf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd18d, gbc.sp());
        EXPECT(0x79d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02EC
        gbc.setState(0xb55b, 0x5df8, 0x9980, 0xe970, 0x50df, 0x1cc6, 0x0, 0x0);
        gbc.writeMem(0xb55b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55b));
        EXPECT(0x97, gbc.readMem(0xb55c));
        // CB 97 02ED
        gbc.setState(0x759c, 0xd673, 0x5a50, 0xde62, 0x6fca, 0xef63, 0x1, 0x0);
        gbc.writeMem(0x759c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd673, gbc.sp());
        EXPECT(0x759e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02EE
        gbc.setState(0x5180, 0xe594, 0x7c20, 0x63d8, 0x7a52, 0xbfb0, 0x0, 0x1);
        gbc.writeMem(0x5180, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02EF
        gbc.setState(0x75dc, 0x372a, 0x2dc0, 0x8d66, 0xa6d4, 0x7038, 0x1, 0x1);
        gbc.writeMem(0x75dc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x372a, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02F0
        gbc.setState(0x426, 0x3b64, 0x9350, 0x7be7, 0x41e2, 0x1633, 0x1, 0x0);
        gbc.writeMem(0x426, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3b64, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02F1
        gbc.setState(0xa9f3, 0x52a8, 0x5e00, 0x495c, 0x6d41, 0x36b2, 0x0, 0x1);
        gbc.writeMem(0xa9f3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f3));
        EXPECT(0x97, gbc.readMem(0xa9f4));
        // CB 97 02F2
        gbc.setState(0x8bce, 0x62c9, 0xbcc0, 0x9850, 0x1ee1, 0xdfb9, 0x1, 0x1);
        gbc.writeMem(0x8bce, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x62c9, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bce));
        EXPECT(0x97, gbc.readMem(0x8bcf));
        // CB 97 02F3
        gbc.setState(0xb4fa, 0x7f7b, 0x5d30, 0xfdb6, 0x8fc8, 0xc50a, 0x0, 0x1);
        gbc.writeMem(0xb4fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7f7b, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fa));
        EXPECT(0x97, gbc.readMem(0xb4fb));
        // CB 97 02F4
        gbc.setState(0x4f17, 0xd8db, 0xfc50, 0x358b, 0x8962, 0x97e4, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd8db, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02F5
        gbc.setState(0xee4b, 0x8e9d, 0xd580, 0x9abb, 0x41b7, 0xb96a, 0x1, 0x1);
        gbc.writeMem(0xee4b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0xee4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4b));
        EXPECT(0x97, gbc.readMem(0xee4c));
        // CB 97 02F6
        gbc.setState(0x8cb9, 0xff75, 0x8f30, 0x2433, 0x957, 0x710b, 0x1, 0x1);
        gbc.writeMem(0x8cb9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0x8cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb9));
        EXPECT(0x97, gbc.readMem(0x8cba));
        // CB 97 02F7
        gbc.setState(0x40f7, 0x8b58, 0x92d0, 0x15e5, 0x9691, 0xb3f2, 0x0, 0x1);
        gbc.writeMem(0x40f7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02F8
        gbc.setState(0x931d, 0xb477, 0x3c10, 0x687e, 0x1447, 0x35bf, 0x1, 0x1);
        gbc.writeMem(0x931d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0x931f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931d));
        EXPECT(0x97, gbc.readMem(0x931e));
        // CB 97 02F9
        gbc.setState(0x7e1e, 0x7063, 0xe450, 0x26e3, 0xc6db, 0x95c7, 0x1, 0x0);
        gbc.writeMem(0x7e1e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7063, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 02FA
        gbc.setState(0xd14e, 0xf01f, 0xf5f0, 0x4951, 0x82a8, 0x279e, 0x0, 0x1);
        gbc.writeMem(0xd14e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14e));
        EXPECT(0x97, gbc.readMem(0xd14f));
        // CB 97 02FB
        gbc.setState(0x8f3d, 0xad49, 0x95b0, 0x7329, 0x6562, 0xa7cf, 0x0, 0x1);
        gbc.writeMem(0x8f3d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0x8f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3d));
        EXPECT(0x97, gbc.readMem(0x8f3e));
        // CB 97 02FC
        gbc.setState(0x7a09, 0x686a, 0x9a80, 0xd42c, 0xf9eb, 0x7935, 0x0, 0x1);
        gbc.writeMem(0x7a09, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x686a, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02FD
        gbc.setState(0xbf7f, 0x2762, 0x71c0, 0x2485, 0xaa88, 0xc1ad, 0x1, 0x1);
        gbc.writeMem(0xbf7f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2762, gbc.sp());
        EXPECT(0xbf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7f));
        EXPECT(0x97, gbc.readMem(0xbf80));
        // CB 97 02FE
        gbc.setState(0x4c8f, 0xc4be, 0xe320, 0x6225, 0xb14a, 0xc9a5, 0x0, 0x0);
        gbc.writeMem(0x4c8f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 02FF
        gbc.setState(0xdef6, 0x73d7, 0xe4b0, 0x827c, 0xe53b, 0x3421, 0x0, 0x0);
        gbc.writeMem(0xdef6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0xdef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef6));
        EXPECT(0x97, gbc.readMem(0xdef7));
        // CB 97 0300
        gbc.setState(0xb0fd, 0xbfcc, 0x9720, 0x9f9e, 0x42d2, 0xced4, 0x0, 0x1);
        gbc.writeMem(0xb0fd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfcc, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fd));
        EXPECT(0x97, gbc.readMem(0xb0fe));
        // CB 97 0301
        gbc.setState(0xb701, 0xcf9, 0xe360, 0xed9f, 0xbf25, 0x6682, 0x0, 0x1);
        gbc.writeMem(0xb701, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf9, gbc.sp());
        EXPECT(0xb703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb701));
        EXPECT(0x97, gbc.readMem(0xb702));
        // CB 97 0302
        gbc.setState(0x564e, 0x94be, 0x8950, 0x2e4e, 0xba7b, 0x9348, 0x1, 0x1);
        gbc.writeMem(0x564e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x94be, gbc.sp());
        EXPECT(0x5650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0304
        gbc.setState(0x7ce6, 0x128d, 0x4de0, 0xcb2f, 0xe601, 0x27ce, 0x0, 0x0);
        gbc.writeMem(0x7ce6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0x7ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0305
        gbc.setState(0x51aa, 0x319a, 0x1ed0, 0xd69f, 0x3b91, 0xa16c, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x319a, gbc.sp());
        EXPECT(0x51ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0306
        gbc.setState(0xce9a, 0x3d42, 0x4ad0, 0x7339, 0x8f69, 0x4126, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3d42, gbc.sp());
        EXPECT(0xce9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9a));
        EXPECT(0x97, gbc.readMem(0xce9b));
        // CB 97 0307
        gbc.setState(0xe0b, 0x81ff, 0x74a0, 0x5157, 0x5067, 0xa3ce, 0x0, 0x0);
        gbc.writeMem(0xe0b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0xe0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0308
        gbc.setState(0x328c, 0x9a11, 0x29e0, 0x51ce, 0xb81, 0xad5b, 0x1, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9a11, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0309
        gbc.setState(0xe172, 0xfd44, 0x37d0, 0x2ad2, 0x1b0, 0x3d10, 0x0, 0x0);
        gbc.writeMem(0xe172, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0xe174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe172));
        EXPECT(0x97, gbc.readMem(0xe173));
        // CB 97 030A
        gbc.setState(0x5385, 0x4000, 0x2020, 0xa454, 0x1470, 0x9d62, 0x1, 0x1);
        gbc.writeMem(0x5385, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 030B
        gbc.setState(0x32ab, 0xd0f1, 0x52b0, 0x47de, 0x1553, 0x2e67, 0x1, 0x1);
        gbc.writeMem(0x32ab, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd0f1, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 030C
        gbc.setState(0x90e8, 0x2434, 0xe930, 0x13f2, 0x314a, 0x6c32, 0x0, 0x1);
        gbc.writeMem(0x90e8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2434, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e8));
        EXPECT(0x97, gbc.readMem(0x90e9));
        // CB 97 030D
        gbc.setState(0x79a4, 0x5960, 0xdb50, 0xf020, 0xcf09, 0xcd55, 0x1, 0x0);
        gbc.writeMem(0x79a4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5960, gbc.sp());
        EXPECT(0x79a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 030E
        gbc.setState(0x3023, 0xf265, 0x75f0, 0xac75, 0x2072, 0x93c7, 0x1, 0x1);
        gbc.writeMem(0x3023, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf265, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 030F
        gbc.setState(0xae71, 0x7cf1, 0x2c30, 0xa26b, 0x8033, 0x24b, 0x0, 0x0);
        gbc.writeMem(0xae71, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7cf1, gbc.sp());
        EXPECT(0xae73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae71));
        EXPECT(0x97, gbc.readMem(0xae72));
        // CB 97 0310
        gbc.setState(0x4b5, 0x4f5, 0x1ec0, 0xf951, 0x85e5, 0x2012, 0x1, 0x0);
        gbc.writeMem(0x4b5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0311
        gbc.setState(0x2fe4, 0xd0bb, 0x36a0, 0x2f26, 0x537c, 0x5d0f, 0x1, 0x1);
        gbc.writeMem(0x2fe4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0312
        gbc.setState(0xb9d9, 0x8873, 0x7b20, 0xf7a, 0x4040, 0x24a6, 0x0, 0x1);
        gbc.writeMem(0xb9d9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8873, gbc.sp());
        EXPECT(0xb9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d9));
        EXPECT(0x97, gbc.readMem(0xb9da));
        // CB 97 0313
        gbc.setState(0x9e9d, 0x4728, 0xad60, 0xec71, 0x3736, 0xa91b, 0x1, 0x1);
        gbc.writeMem(0x9e9d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4728, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9d));
        EXPECT(0x97, gbc.readMem(0x9e9e));
        // CB 97 0314
        gbc.setState(0x92b2, 0x3254, 0x10b0, 0x4ea0, 0xb3a5, 0x658, 0x1, 0x0);
        gbc.writeMem(0x92b2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3254, gbc.sp());
        EXPECT(0x92b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b2));
        EXPECT(0x97, gbc.readMem(0x92b3));
        // CB 97 0315
        gbc.setState(0x7028, 0xe3b8, 0xeac0, 0x4980, 0xb730, 0x978a, 0x0, 0x0);
        gbc.writeMem(0x7028, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe3b8, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0316
        gbc.setState(0xbfd5, 0x3931, 0x6e70, 0xfe38, 0xe0ed, 0x86b2, 0x0, 0x0);
        gbc.writeMem(0xbfd5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0xbfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd5));
        EXPECT(0x97, gbc.readMem(0xbfd6));
        // CB 97 0317
        gbc.setState(0x8b82, 0xf96b, 0x5b50, 0x4b06, 0x89e0, 0x31b6, 0x1, 0x0);
        gbc.writeMem(0x8b82, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf96b, gbc.sp());
        EXPECT(0x8b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b82));
        EXPECT(0x97, gbc.readMem(0x8b83));
        // CB 97 0318
        gbc.setState(0x1acd, 0x31bf, 0x3b50, 0x26b, 0xb3b5, 0xa50d, 0x1, 0x1);
        gbc.writeMem(0x1acd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0x1acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0319
        gbc.setState(0x28d2, 0xb48a, 0xc410, 0x2864, 0x5abc, 0xd68d, 0x1, 0x0);
        gbc.writeMem(0x28d2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0x28d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 031A
        gbc.setState(0x7ed4, 0xf94c, 0x5b50, 0x8297, 0x12fa, 0x4254, 0x0, 0x0);
        gbc.writeMem(0x7ed4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf94c, gbc.sp());
        EXPECT(0x7ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 031B
        gbc.setState(0x3bc0, 0xa675, 0x3190, 0x609, 0xcdb3, 0x5efb, 0x0, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 031C
        gbc.setState(0xefc4, 0x5fd8, 0xa10, 0xa912, 0x2e36, 0x6566, 0x0, 0x1);
        gbc.writeMem(0xefc4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5fd8, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc4));
        EXPECT(0x97, gbc.readMem(0xefc5));
        // CB 97 031D
        gbc.setState(0x441a, 0xc59, 0x4f40, 0x6614, 0x73fe, 0xb865, 0x0, 0x1);
        gbc.writeMem(0x441a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc59, gbc.sp());
        EXPECT(0x441c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 031E
        gbc.setState(0x6097, 0x873f, 0xadd0, 0xd905, 0x7e39, 0xe267, 0x0, 0x0);
        gbc.writeMem(0x6097, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x873f, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 031F
        gbc.setState(0x70e0, 0xb826, 0x7520, 0x5692, 0xdc69, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x70e0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb826, gbc.sp());
        EXPECT(0x70e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0320
        gbc.setState(0x3b13, 0xaf46, 0xd3c0, 0x7e00, 0x8974, 0x9a16, 0x1, 0x0);
        gbc.writeMem(0x3b13, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0x3b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0321
        gbc.setState(0x1362, 0x3cef, 0x1d60, 0xf3ce, 0x7788, 0x64a1, 0x1, 0x0);
        gbc.writeMem(0x1362, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0322
        gbc.setState(0xe9cf, 0xd1b4, 0x3110, 0x1ec7, 0x5f6a, 0xee10, 0x0, 0x0);
        gbc.writeMem(0xe9cf, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cf));
        EXPECT(0x97, gbc.readMem(0xe9d0));
        // CB 97 0324
        gbc.setState(0x5b5e, 0xd9e2, 0x1c70, 0x53aa, 0xde44, 0x791b, 0x1, 0x0);
        gbc.writeMem(0x5b5e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0325
        gbc.setState(0x7a2a, 0x8b2f, 0x1430, 0xf7b4, 0x1c2d, 0xdcc2, 0x0, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8b2f, gbc.sp());
        EXPECT(0x7a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0326
        gbc.setState(0x6d5, 0x4f4d, 0x8f10, 0xc3f2, 0x8818, 0x2891, 0x1, 0x0);
        gbc.writeMem(0x6d5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4f4d, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0327
        gbc.setState(0xb3b0, 0xea01, 0xc7e0, 0xbcb8, 0xbcd1, 0xb60e, 0x1, 0x1);
        gbc.writeMem(0xb3b0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xea01, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0x97, gbc.readMem(0xb3b1));
        // CB 97 0328
        gbc.setState(0x2f0b, 0x4ab9, 0x5130, 0xc25b, 0x6f69, 0x8ba7, 0x1, 0x0);
        gbc.writeMem(0x2f0b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4ab9, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0329
        gbc.setState(0x924, 0x15ab, 0x5e50, 0x20aa, 0x83b9, 0xd826, 0x0, 0x1);
        gbc.writeMem(0x924, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x15ab, gbc.sp());
        EXPECT(0x926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 032A
        gbc.setState(0xb1bc, 0xfd8c, 0x2d70, 0x4b72, 0xe6c4, 0x27d6, 0x1, 0x1);
        gbc.writeMem(0xb1bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xb1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bc));
        EXPECT(0x97, gbc.readMem(0xb1bd));
        // CB 97 032B
        gbc.setState(0xbfdd, 0x2213, 0x40f0, 0xd1a9, 0x626a, 0x3010, 0x0, 0x1);
        gbc.writeMem(0xbfdd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2213, gbc.sp());
        EXPECT(0xbfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdd));
        EXPECT(0x97, gbc.readMem(0xbfde));
        // CB 97 032C
        gbc.setState(0x33aa, 0x62, 0x86c0, 0xc4d8, 0x9ae7, 0xc252, 0x1, 0x1);
        gbc.writeMem(0x33aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x62, gbc.sp());
        EXPECT(0x33ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 032D
        gbc.setState(0x7937, 0x3e98, 0xe930, 0xf327, 0x9d10, 0xb0e5, 0x1, 0x0);
        gbc.writeMem(0x7937, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e98, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 032E
        gbc.setState(0xb254, 0x53d, 0x3db0, 0x502b, 0x5434, 0xf10e, 0x1, 0x0);
        gbc.writeMem(0xb254, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x53d, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb254));
        EXPECT(0x97, gbc.readMem(0xb255));
        // CB 97 032F
        gbc.setState(0xcf9a, 0x477a, 0x4800, 0xcd45, 0xf632, 0xf4dc, 0x0, 0x0);
        gbc.writeMem(0xcf9a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0xcf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9a));
        EXPECT(0x97, gbc.readMem(0xcf9b));
        // CB 97 0330
        gbc.setState(0xcf46, 0xa83f, 0xb30, 0x793a, 0x6fb6, 0xee4a, 0x1, 0x1);
        gbc.writeMem(0xcf46, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0xcf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf46));
        EXPECT(0x97, gbc.readMem(0xcf47));
        // CB 97 0331
        gbc.setState(0x2d48, 0xe5c9, 0x350, 0x8cd6, 0xe177, 0x8d28, 0x1, 0x1);
        gbc.writeMem(0x2d48, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe5c9, gbc.sp());
        EXPECT(0x2d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0332
        gbc.setState(0x35f, 0x3887, 0x2bb0, 0x5489, 0x8fb0, 0xcd91, 0x0, 0x0);
        gbc.writeMem(0x35f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0333
        gbc.setState(0x40aa, 0x5d39, 0x15a0, 0x1b32, 0x2c2, 0x2755, 0x0, 0x0);
        gbc.writeMem(0x40aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5d39, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0334
        gbc.setState(0xeef1, 0xc2e9, 0x36f0, 0x96ad, 0xc42c, 0xe162, 0x0, 0x0);
        gbc.writeMem(0xeef1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef1));
        EXPECT(0x97, gbc.readMem(0xeef2));
        // CB 97 0335
        gbc.setState(0x3422, 0x2c39, 0x72d0, 0x9c9e, 0x4605, 0x171b, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2c39, gbc.sp());
        EXPECT(0x3424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0336
        gbc.setState(0xa0ca, 0x7d3b, 0x5550, 0xd180, 0x8f81, 0xbf0f, 0x1, 0x0);
        gbc.writeMem(0xa0ca, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0xa0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ca));
        EXPECT(0x97, gbc.readMem(0xa0cb));
        // CB 97 0337
        gbc.setState(0x92b6, 0xc823, 0xe5f0, 0xdeeb, 0x6b7b, 0xd31e, 0x0, 0x1);
        gbc.writeMem(0x92b6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc823, gbc.sp());
        EXPECT(0x92b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b6));
        EXPECT(0x97, gbc.readMem(0x92b7));
        // CB 97 0339
        gbc.setState(0x8ae3, 0x8520, 0x7460, 0xb763, 0x8b2f, 0xbda5, 0x1, 0x0);
        gbc.writeMem(0x8ae3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0x8ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae3));
        EXPECT(0x97, gbc.readMem(0x8ae4));
        // CB 97 033B
        gbc.setState(0x3653, 0x1079, 0xa1c0, 0x747b, 0x39b5, 0xde9f, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1079, gbc.sp());
        EXPECT(0x3655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 033C
        gbc.setState(0x2f55, 0xcf75, 0xe1b0, 0xad, 0x4508, 0xced0, 0x0, 0x1);
        gbc.writeMem(0x2f55, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 033D
        gbc.setState(0x6aa5, 0xf09c, 0x92a0, 0x7210, 0xe75e, 0xaeb6, 0x0, 0x1);
        gbc.writeMem(0x6aa5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 033F
        gbc.setState(0xab25, 0x267f, 0x5890, 0x1eb7, 0x7435, 0xc94, 0x1, 0x0);
        gbc.writeMem(0xab25, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x267f, gbc.sp());
        EXPECT(0xab27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab25));
        EXPECT(0x97, gbc.readMem(0xab26));
        // CB 97 0340
        gbc.setState(0x4cfc, 0x290c, 0x8930, 0x4f08, 0x39b8, 0x7765, 0x1, 0x0);
        gbc.writeMem(0x4cfc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x290c, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0342
        gbc.setState(0x8041, 0x1359, 0x7460, 0xf0eb, 0xd66a, 0x7eff, 0x0, 0x1);
        gbc.writeMem(0x8041, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1359, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8041));
        EXPECT(0x97, gbc.readMem(0x8042));
        // CB 97 0344
        gbc.setState(0x5b69, 0xa8b2, 0xc9e0, 0xf163, 0xee50, 0x77d3, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0x5b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0345
        gbc.setState(0xdc7b, 0x21e6, 0xd20, 0x814a, 0x1160, 0x2c2, 0x1, 0x1);
        gbc.writeMem(0xdc7b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x21e6, gbc.sp());
        EXPECT(0xdc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7b));
        EXPECT(0x97, gbc.readMem(0xdc7c));
        // CB 97 0346
        gbc.setState(0xa42c, 0xeb4a, 0x3b10, 0xb74f, 0xa5b8, 0xefd, 0x0, 0x1);
        gbc.writeMem(0xa42c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeb4a, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42c));
        EXPECT(0x97, gbc.readMem(0xa42d));
        // CB 97 0347
        gbc.setState(0x9771, 0x3262, 0x3080, 0xb010, 0xef1f, 0xdc91, 0x1, 0x0);
        gbc.writeMem(0x9771, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3262, gbc.sp());
        EXPECT(0x9773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9771));
        EXPECT(0x97, gbc.readMem(0x9772));
        // CB 97 0348
        gbc.setState(0x50c0, 0xa909, 0xd570, 0x9865, 0x530e, 0xf29a, 0x1, 0x0);
        gbc.writeMem(0x50c0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa909, gbc.sp());
        EXPECT(0x50c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0349
        gbc.setState(0xeb04, 0xf4c8, 0xd060, 0xd0b5, 0x71ba, 0xc575, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0xeb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb04));
        EXPECT(0x97, gbc.readMem(0xeb05));
        // CB 97 034A
        gbc.setState(0x2fb1, 0xf17, 0x9dd0, 0x9537, 0xcdf6, 0x28b5, 0x1, 0x0);
        gbc.writeMem(0x2fb1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf17, gbc.sp());
        EXPECT(0x2fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 034B
        gbc.setState(0x6584, 0x1298, 0x88f0, 0xcca7, 0xe977, 0x7370, 0x0, 0x0);
        gbc.writeMem(0x6584, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0x6586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 034C
        gbc.setState(0x4aa9, 0x58cd, 0xb10, 0xbbdc, 0x15d2, 0x439e, 0x0, 0x0);
        gbc.writeMem(0x4aa9, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x58cd, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 034D
        gbc.setState(0xacdb, 0x6f7d, 0x5520, 0xac99, 0xb6bf, 0x4695, 0x0, 0x0);
        gbc.writeMem(0xacdb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6f7d, gbc.sp());
        EXPECT(0xacdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdb));
        EXPECT(0x97, gbc.readMem(0xacdc));
        // CB 97 034E
        gbc.setState(0xa863, 0x9d2c, 0xe310, 0x32ee, 0x4fb9, 0xcfdd, 0x1, 0x1);
        gbc.writeMem(0xa863, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9d2c, gbc.sp());
        EXPECT(0xa865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa863));
        EXPECT(0x97, gbc.readMem(0xa864));
        // CB 97 034F
        gbc.setState(0x772f, 0xe105, 0x98d0, 0x624e, 0xb0d7, 0xb25e, 0x0, 0x1);
        gbc.writeMem(0x772f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe105, gbc.sp());
        EXPECT(0x7731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0350
        gbc.setState(0x2166, 0x5848, 0xb030, 0x93c, 0x2ae0, 0xc5f, 0x1, 0x0);
        gbc.writeMem(0x2166, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5848, gbc.sp());
        EXPECT(0x2168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0351
        gbc.setState(0x5231, 0x3808, 0x89e0, 0x8a1b, 0x90f6, 0x71de, 0x1, 0x0);
        gbc.writeMem(0x5231, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3808, gbc.sp());
        EXPECT(0x5233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0352
        gbc.setState(0x56fa, 0x640, 0x97a0, 0x64dc, 0x73b9, 0xd86d, 0x1, 0x1);
        gbc.writeMem(0x56fa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x640, gbc.sp());
        EXPECT(0x56fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0353
        gbc.setState(0x6e1b, 0x302d, 0x5c60, 0xedb3, 0xa403, 0x20e8, 0x1, 0x0);
        gbc.writeMem(0x6e1b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x302d, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0354
        gbc.setState(0x4079, 0xf56d, 0xe060, 0x3b5f, 0x34e9, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0x4079, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf56d, gbc.sp());
        EXPECT(0x407b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0355
        gbc.setState(0x20c4, 0x8603, 0x7f10, 0xea19, 0x6512, 0x41a8, 0x0, 0x0);
        gbc.writeMem(0x20c4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8603, gbc.sp());
        EXPECT(0x20c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0356
        gbc.setState(0xa374, 0xe953, 0x8400, 0xd800, 0xc922, 0xbe50, 0x1, 0x0);
        gbc.writeMem(0xa374, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa374));
        EXPECT(0x97, gbc.readMem(0xa375));
        // CB 97 0357
        gbc.setState(0xc02, 0x8abf, 0xf290, 0x4f9f, 0x6715, 0x2e58, 0x1, 0x1);
        gbc.writeMem(0xc02, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0xc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0358
        gbc.setState(0x55c, 0x2c25, 0x6120, 0xfab5, 0x2b34, 0x9a21, 0x1, 0x1);
        gbc.writeMem(0x55c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0359
        gbc.setState(0xd885, 0xf8cb, 0x2150, 0xcfe8, 0x5443, 0x9dd4, 0x1, 0x0);
        gbc.writeMem(0xd885, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf8cb, gbc.sp());
        EXPECT(0xd887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd885));
        EXPECT(0x97, gbc.readMem(0xd886));
        // CB 97 035A
        gbc.setState(0x9067, 0x5a5, 0x8e0, 0x7ba3, 0xdd5b, 0xaa11, 0x1, 0x0);
        gbc.writeMem(0x9067, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5a5, gbc.sp());
        EXPECT(0x9069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9067));
        EXPECT(0x97, gbc.readMem(0x9068));
        // CB 97 035B
        gbc.setState(0x3a74, 0xae65, 0x2d30, 0xf8f1, 0x5776, 0x64ae, 0x1, 0x1);
        gbc.writeMem(0x3a74, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xae65, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 035C
        gbc.setState(0x79d6, 0xb5d8, 0x4b80, 0xf5f5, 0x85ac, 0x1dcd, 0x1, 0x0);
        gbc.writeMem(0x79d6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 035E
        gbc.setState(0x920a, 0x37d6, 0xa820, 0xdfce, 0x15cb, 0x3b0b, 0x1, 0x1);
        gbc.writeMem(0x920a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x920c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920a));
        EXPECT(0x97, gbc.readMem(0x920b));
        // CB 97 035F
        gbc.setState(0xe464, 0xdac6, 0x8850, 0x9c13, 0x838, 0x9221, 0x1, 0x0);
        gbc.writeMem(0xe464, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdac6, gbc.sp());
        EXPECT(0xe466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe464));
        EXPECT(0x97, gbc.readMem(0xe465));
        // CB 97 0360
        gbc.setState(0x71a7, 0x89ae, 0x8f80, 0xc38d, 0x1494, 0x21c0, 0x1, 0x0);
        gbc.writeMem(0x71a7, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x89ae, gbc.sp());
        EXPECT(0x71a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0361
        gbc.setState(0xcb2d, 0x8226, 0xd5f0, 0x241d, 0xbfc0, 0xcca9, 0x1, 0x0);
        gbc.writeMem(0xcb2d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8226, gbc.sp());
        EXPECT(0xcb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2d));
        EXPECT(0x97, gbc.readMem(0xcb2e));
        // CB 97 0362
        gbc.setState(0x69bc, 0x9fdd, 0x13e0, 0x1837, 0xc23c, 0xeeb0, 0x0, 0x1);
        gbc.writeMem(0x69bc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0363
        gbc.setState(0x4118, 0x96c1, 0xc4b0, 0x2769, 0x8472, 0x4c29, 0x0, 0x0);
        gbc.writeMem(0x4118, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x96c1, gbc.sp());
        EXPECT(0x411a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0364
        gbc.setState(0xb88a, 0xf6df, 0xd950, 0x5426, 0x4893, 0x186c, 0x1, 0x1);
        gbc.writeMem(0xb88a, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88a));
        EXPECT(0x97, gbc.readMem(0xb88b));
        // CB 97 0365
        gbc.setState(0x8b50, 0xbebb, 0x6880, 0xb1d1, 0xcb9e, 0xf082, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbebb, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0x97, gbc.readMem(0x8b51));
        // CB 97 0366
        gbc.setState(0x3e3, 0xbdb5, 0x3400, 0x484f, 0x94d2, 0x435a, 0x0, 0x0);
        gbc.writeMem(0x3e3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0368
        gbc.setState(0x2165, 0x97f5, 0x68c0, 0xc774, 0x9920, 0xd86f, 0x0, 0x0);
        gbc.writeMem(0x2165, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x97f5, gbc.sp());
        EXPECT(0x2167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0369
        gbc.setState(0x69c3, 0xda8e, 0xa510, 0x7905, 0xf272, 0xb5d0, 0x1, 0x0);
        gbc.writeMem(0x69c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 036B
        gbc.setState(0x2b2e, 0xe40c, 0x2cf0, 0x7e20, 0xc902, 0x94b5, 0x1, 0x1);
        gbc.writeMem(0x2b2e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0x2b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 036D
        gbc.setState(0xe9ce, 0x44c5, 0x28b0, 0x956d, 0xc000, 0xc297, 0x1, 0x0);
        gbc.writeMem(0xe9ce, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ce));
        EXPECT(0x97, gbc.readMem(0xe9cf));
        // CB 97 036E
        gbc.setState(0xc169, 0x4221, 0xff70, 0xccae, 0x28bd, 0x5a3f, 0x1, 0x0);
        gbc.writeMem(0xc169, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4221, gbc.sp());
        EXPECT(0xc16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc169));
        EXPECT(0x97, gbc.readMem(0xc16a));
        // CB 97 036F
        gbc.setState(0x692f, 0x9eca, 0x5bd0, 0xf654, 0xf05, 0xb652, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9eca, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0370
        gbc.setState(0xc25, 0x100b, 0x3380, 0x4e, 0xfbab, 0x87ae, 0x0, 0x0);
        gbc.writeMem(0xc25, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0371
        gbc.setState(0x82e8, 0xe5b, 0xc8b0, 0x1c19, 0x52b6, 0x1fb5, 0x1, 0x0);
        gbc.writeMem(0x82e8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e8));
        EXPECT(0x97, gbc.readMem(0x82e9));
        // CB 97 0372
        gbc.setState(0x6bc4, 0x2897, 0x3440, 0x260b, 0x21dd, 0x539, 0x1, 0x0);
        gbc.writeMem(0x6bc4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2897, gbc.sp());
        EXPECT(0x6bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0373
        gbc.setState(0xe39, 0xb475, 0x3a60, 0x3397, 0xe390, 0x6a36, 0x1, 0x0);
        gbc.writeMem(0xe39, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb475, gbc.sp());
        EXPECT(0xe3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0374
        gbc.setState(0xa61e, 0x5394, 0x3030, 0x1065, 0xb981, 0x216a, 0x1, 0x1);
        gbc.writeMem(0xa61e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5394, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61e));
        EXPECT(0x97, gbc.readMem(0xa61f));
        // CB 97 0375
        gbc.setState(0x6d61, 0x4dff, 0x400, 0x3681, 0x663d, 0x917e, 0x0, 0x0);
        gbc.writeMem(0x6d61, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4dff, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0376
        gbc.setState(0x811, 0x9e4b, 0xe240, 0x3000, 0x469d, 0xabab, 0x0, 0x0);
        gbc.writeMem(0x811, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9e4b, gbc.sp());
        EXPECT(0x813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0377
        gbc.setState(0x1047, 0x75b, 0x6b80, 0xbd2d, 0x9699, 0xdb2, 0x1, 0x0);
        gbc.writeMem(0x1047, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0378
        gbc.setState(0x3213, 0x18c, 0xfa70, 0xa5d5, 0x4724, 0x212d, 0x1, 0x0);
        gbc.writeMem(0x3213, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x18c, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0379
        gbc.setState(0x7457, 0xa693, 0xf620, 0x9ecb, 0x500a, 0xb7a0, 0x0, 0x1);
        gbc.writeMem(0x7457, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa693, gbc.sp());
        EXPECT(0x7459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 037A
        gbc.setState(0x1d4, 0xa294, 0x9160, 0xe25c, 0x70b4, 0xabff, 0x1, 0x0);
        gbc.writeMem(0x1d4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa294, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 037B
        gbc.setState(0x8fe6, 0x40ea, 0x79c0, 0xc7ff, 0x495c, 0x36f8, 0x0, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe6));
        EXPECT(0x97, gbc.readMem(0x8fe7));
        // CB 97 037C
        gbc.setState(0x41da, 0xae4b, 0x9f40, 0xf8ed, 0x462a, 0xd45c, 0x1, 0x1);
        gbc.writeMem(0x41da, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0x41dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 037D
        gbc.setState(0xa2b4, 0x4504, 0xeb10, 0x7028, 0x5ccc, 0x907, 0x1, 0x1);
        gbc.writeMem(0xa2b4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4504, gbc.sp());
        EXPECT(0xa2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b4));
        EXPECT(0x97, gbc.readMem(0xa2b5));
        // CB 97 037F
        gbc.setState(0x5f42, 0xd048, 0x480, 0x7604, 0x76b1, 0xa46e, 0x0, 0x0);
        gbc.writeMem(0x5f42, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0x5f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0380
        gbc.setState(0xaddd, 0x168b, 0x8ba0, 0xff2d, 0xc90e, 0x16c4, 0x0, 0x1);
        gbc.writeMem(0xaddd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x168b, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddd));
        EXPECT(0x97, gbc.readMem(0xadde));
        // CB 97 0381
        gbc.setState(0x9b57, 0xcba2, 0xae90, 0x9c91, 0xf8d, 0x71ae, 0x1, 0x0);
        gbc.writeMem(0x9b57, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcba2, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x97, gbc.readMem(0x9b58));
        // CB 97 0382
        gbc.setState(0x699e, 0xcc54, 0x2e10, 0x4c39, 0x7261, 0x365d, 0x0, 0x1);
        gbc.writeMem(0x699e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcc54, gbc.sp());
        EXPECT(0x69a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0383
        gbc.setState(0xa17d, 0xc612, 0x6c00, 0x8f69, 0xb49d, 0xaba0, 0x0, 0x0);
        gbc.writeMem(0xa17d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc612, gbc.sp());
        EXPECT(0xa17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17d));
        EXPECT(0x97, gbc.readMem(0xa17e));
        // CB 97 0384
        gbc.setState(0x6c8e, 0xc4f, 0xa400, 0xda0, 0xd6b4, 0x467, 0x1, 0x0);
        gbc.writeMem(0x6c8e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4f, gbc.sp());
        EXPECT(0x6c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0385
        gbc.setState(0xa1ad, 0xec1d, 0x3310, 0x5fcb, 0x8bec, 0x691c, 0x0, 0x1);
        gbc.writeMem(0xa1ad, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec1d, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ad));
        EXPECT(0x97, gbc.readMem(0xa1ae));
        // CB 97 0386
        gbc.setState(0xc2c, 0x206b, 0x7d30, 0xd7c6, 0x1626, 0xcb6c, 0x1, 0x0);
        gbc.writeMem(0xc2c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x206b, gbc.sp());
        EXPECT(0xc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0387
        gbc.setState(0x43f8, 0x5a58, 0x7260, 0xcca2, 0x6714, 0xd548, 0x1, 0x1);
        gbc.writeMem(0x43f8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0388
        gbc.setState(0x429c, 0xee6b, 0x2ea0, 0xe6d, 0x4285, 0xb9e6, 0x0, 0x0);
        gbc.writeMem(0x429c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee6b, gbc.sp());
        EXPECT(0x429e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0389
        gbc.setState(0x4cc2, 0x7987, 0x70, 0xbef, 0xd052, 0x1aa7, 0x1, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7987, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 038A
        gbc.setState(0x8303, 0x6a07, 0x9070, 0xa7a7, 0x57f4, 0x22c6, 0x1, 0x1);
        gbc.writeMem(0x8303, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6a07, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8303));
        EXPECT(0x97, gbc.readMem(0x8304));
        // CB 97 038B
        gbc.setState(0xdf68, 0xadca, 0xa1c0, 0x7858, 0x2101, 0xf533, 0x1, 0x0);
        gbc.writeMem(0xdf68, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xadca, gbc.sp());
        EXPECT(0xdf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf68));
        EXPECT(0x97, gbc.readMem(0xdf69));
        // CB 97 038C
        gbc.setState(0xbcbd, 0x4d4d, 0xb380, 0x2cd8, 0x8f97, 0xc467, 0x1, 0x1);
        gbc.writeMem(0xbcbd, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbd));
        EXPECT(0x97, gbc.readMem(0xbcbe));
        // CB 97 038D
        gbc.setState(0xe96b, 0xde8c, 0x98c0, 0x4363, 0x11a5, 0x6735, 0x1, 0x1);
        gbc.writeMem(0xe96b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0x97, gbc.readMem(0xe96c));
        // CB 97 038E
        gbc.setState(0x4072, 0x639c, 0x4390, 0xf4ae, 0x4898, 0xe324, 0x0, 0x0);
        gbc.writeMem(0x4072, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x639c, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 038F
        gbc.setState(0x56b8, 0x597e, 0x7aa0, 0xab50, 0x4df2, 0x5227, 0x1, 0x1);
        gbc.writeMem(0x56b8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0x56ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0390
        gbc.setState(0x5d90, 0x11e1, 0x83e0, 0x8d8b, 0x3e89, 0x5d76, 0x1, 0x0);
        gbc.writeMem(0x5d90, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0391
        gbc.setState(0xcd33, 0x1833, 0x6300, 0xc414, 0xe339, 0x5b76, 0x1, 0x1);
        gbc.writeMem(0xcd33, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0xcd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd33));
        EXPECT(0x97, gbc.readMem(0xcd34));
        // CB 97 0392
        gbc.setState(0x4879, 0xac97, 0x6e80, 0x22, 0xbfd1, 0x939d, 0x0, 0x0);
        gbc.writeMem(0x4879, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xac97, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0393
        gbc.setState(0x3f4, 0xfe0c, 0x1c50, 0x90bf, 0x8e98, 0x4ae7, 0x0, 0x1);
        gbc.writeMem(0x3f4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfe0c, gbc.sp());
        EXPECT(0x3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 0395
        gbc.setState(0xaf79, 0xd069, 0xc050, 0x2c5, 0xb669, 0xd2ac, 0x1, 0x0);
        gbc.writeMem(0xaf79, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf79));
        EXPECT(0x97, gbc.readMem(0xaf7a));
        // CB 97 0396
        gbc.setState(0x4635, 0x3ae6, 0xc360, 0xb1f7, 0x2321, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x4635, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0397
        gbc.setState(0x247e, 0x509b, 0xd0c0, 0xb48f, 0x7d09, 0xefa1, 0x1, 0x1);
        gbc.writeMem(0x247e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x509b, gbc.sp());
        EXPECT(0x2480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 0398
        gbc.setState(0xee6f, 0x2c52, 0x2c20, 0xf495, 0x10ae, 0x7e1f, 0x1, 0x1);
        gbc.writeMem(0xee6f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0xee71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6f));
        EXPECT(0x97, gbc.readMem(0xee70));
        // CB 97 0399
        gbc.setState(0x552b, 0x3d55, 0x9750, 0x8a32, 0xdf7c, 0x4cd5, 0x0, 0x0);
        gbc.writeMem(0x552b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3d55, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 039A
        gbc.setState(0xccca, 0xce9e, 0xf060, 0x560c, 0x861d, 0xed8d, 0x1, 0x0);
        gbc.writeMem(0xccca, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccca));
        EXPECT(0x97, gbc.readMem(0xcccb));
        // CB 97 039B
        gbc.setState(0x6330, 0xfd46, 0x6200, 0x2bce, 0x795c, 0x1353, 0x1, 0x0);
        gbc.writeMem(0x6330, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfd46, gbc.sp());
        EXPECT(0x6332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 039C
        gbc.setState(0xcf63, 0x5b63, 0x8fc0, 0x1dfa, 0x23b6, 0xf7ec, 0x1, 0x1);
        gbc.writeMem(0xcf63, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5b63, gbc.sp());
        EXPECT(0xcf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf63));
        EXPECT(0x97, gbc.readMem(0xcf64));
        // CB 97 039D
        gbc.setState(0x4e3c, 0xbfea, 0x4450, 0x6b46, 0xc121, 0xde7e, 0x0, 0x0);
        gbc.writeMem(0x4e3c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbfea, gbc.sp());
        EXPECT(0x4e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 039E
        gbc.setState(0x6f0d, 0xf83f, 0xa2e0, 0xafe4, 0x11d1, 0xbb05, 0x1, 0x1);
        gbc.writeMem(0x6f0d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 039F
        gbc.setState(0x89a1, 0x6a8f, 0xc9a0, 0x5a31, 0x98e, 0x4de6, 0x0, 0x1);
        gbc.writeMem(0x89a1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6a8f, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a1));
        EXPECT(0x97, gbc.readMem(0x89a2));
        // CB 97 03A0
        gbc.setState(0x2320, 0xabbe, 0xd350, 0x6970, 0x4868, 0x54c4, 0x1, 0x1);
        gbc.writeMem(0x2320, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xabbe, gbc.sp());
        EXPECT(0x2322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03A1
        gbc.setState(0x7a75, 0xf98, 0x31a0, 0xd76c, 0x83d3, 0xac87, 0x1, 0x1);
        gbc.writeMem(0x7a75, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03A2
        gbc.setState(0xa5eb, 0x331b, 0x8630, 0x766a, 0x352e, 0x4311, 0x0, 0x0);
        gbc.writeMem(0xa5eb, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x331b, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5eb));
        EXPECT(0x97, gbc.readMem(0xa5ec));
        // CB 97 03A3
        gbc.setState(0xc61c, 0x1719, 0xc130, 0x98c0, 0x7490, 0x58a6, 0x0, 0x1);
        gbc.writeMem(0xc61c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1719, gbc.sp());
        EXPECT(0xc61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61c));
        EXPECT(0x97, gbc.readMem(0xc61d));
        // CB 97 03A4
        gbc.setState(0x1264, 0xce09, 0xb810, 0xd614, 0x6d3f, 0x2ad5, 0x0, 0x0);
        gbc.writeMem(0x1264, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x1266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03A5
        gbc.setState(0x31f0, 0x2de6, 0x7910, 0xc394, 0xd923, 0x4d67, 0x1, 0x0);
        gbc.writeMem(0x31f0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0x31f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03A6
        gbc.setState(0x9a7b, 0x947e, 0x3840, 0xfae6, 0xf75, 0x2c2e, 0x0, 0x1);
        gbc.writeMem(0x9a7b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x947e, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7b));
        EXPECT(0x97, gbc.readMem(0x9a7c));
        // CB 97 03A7
        gbc.setState(0xc397, 0xa8a3, 0xbd0, 0x4b1a, 0xac1b, 0x859b, 0x1, 0x1);
        gbc.writeMem(0xc397, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0xc399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc397));
        EXPECT(0x97, gbc.readMem(0xc398));
        // CB 97 03A8
        gbc.setState(0x13d3, 0x6456, 0xe660, 0x7daa, 0xa527, 0x3d07, 0x0, 0x1);
        gbc.writeMem(0x13d3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03A9
        gbc.setState(0xadef, 0xe10d, 0x68e0, 0x2eac, 0xdf22, 0xad6a, 0x0, 0x0);
        gbc.writeMem(0xadef, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadef));
        EXPECT(0x97, gbc.readMem(0xadf0));
        // CB 97 03AA
        gbc.setState(0x14aa, 0x4659, 0x9ac0, 0x9b2, 0x8889, 0x1613, 0x1, 0x1);
        gbc.writeMem(0x14aa, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4659, gbc.sp());
        EXPECT(0x14ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03AB
        gbc.setState(0x6afe, 0x313c, 0xa3e0, 0x72e0, 0x7d23, 0x6dce, 0x1, 0x0);
        gbc.writeMem(0x6afe, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x313c, gbc.sp());
        EXPECT(0x6b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03AC
        gbc.setState(0x7820, 0x3cc3, 0xc770, 0x1a1c, 0x2eee, 0xc3d0, 0x1, 0x1);
        gbc.writeMem(0x7820, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3cc3, gbc.sp());
        EXPECT(0x7822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03AD
        gbc.setState(0x278e, 0x950c, 0x7d90, 0xcc0a, 0xa4fd, 0x4f99, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x950c, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03AE
        gbc.setState(0x4727, 0x501, 0xe460, 0x42b8, 0xd96a, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x4727, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03AF
        gbc.setState(0x184d, 0x2636, 0x4550, 0x9cea, 0xecd2, 0x9635, 0x1, 0x0);
        gbc.writeMem(0x184d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03B0
        gbc.setState(0xa30, 0xd874, 0xa440, 0xfac6, 0x7a88, 0xbdbe, 0x0, 0x0);
        gbc.writeMem(0xa30, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd874, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03B1
        gbc.setState(0xe760, 0x40ff, 0xeb40, 0x448c, 0xb1a1, 0x3bed, 0x1, 0x1);
        gbc.writeMem(0xe760, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0xe762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe760));
        EXPECT(0x97, gbc.readMem(0xe761));
        // CB 97 03B2
        gbc.setState(0x45c3, 0xbb52, 0xcae0, 0xabf4, 0x5536, 0x78c6, 0x1, 0x0);
        gbc.writeMem(0x45c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x45c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03B3
        gbc.setState(0xbb80, 0xbff6, 0xd1d0, 0xaba5, 0xee2b, 0x848, 0x0, 0x1);
        gbc.writeMem(0xbb80, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbff6, gbc.sp());
        EXPECT(0xbb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb80));
        EXPECT(0x97, gbc.readMem(0xbb81));
        // CB 97 03B4
        gbc.setState(0xd7de, 0xaf4b, 0x85f0, 0xeeb7, 0x5a5b, 0xe9ef, 0x1, 0x0);
        gbc.writeMem(0xd7de, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaf4b, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7de));
        EXPECT(0x97, gbc.readMem(0xd7df));
        // CB 97 03B5
        gbc.setState(0x3f9d, 0xa991, 0xd950, 0x716c, 0x6d4f, 0x29db, 0x1, 0x1);
        gbc.writeMem(0x3f9d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03B6
        gbc.setState(0xa4db, 0x5c70, 0xe520, 0xa736, 0xfd7b, 0x8e70, 0x1, 0x0);
        gbc.writeMem(0xa4db, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5c70, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4db));
        EXPECT(0x97, gbc.readMem(0xa4dc));
        // CB 97 03B7
        gbc.setState(0x127b, 0x545d, 0xd3a0, 0x7c1c, 0x5bfb, 0xa5cc, 0x1, 0x1);
        gbc.writeMem(0x127b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x545d, gbc.sp());
        EXPECT(0x127d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03B8
        gbc.setState(0x4471, 0xe409, 0x55e0, 0x195f, 0x67d7, 0x6b96, 0x1, 0x0);
        gbc.writeMem(0x4471, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe409, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03B9
        gbc.setState(0xbe2c, 0x6f52, 0xc920, 0xb205, 0xd8e, 0xac36, 0x1, 0x0);
        gbc.writeMem(0xbe2c, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6f52, gbc.sp());
        EXPECT(0xbe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2c));
        EXPECT(0x97, gbc.readMem(0xbe2d));
        // CB 97 03BA
        gbc.setState(0xdb71, 0xa83f, 0x59c0, 0xbfd2, 0x309d, 0xea2f, 0x0, 0x0);
        gbc.writeMem(0xdb71, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0x97, gbc.readMem(0xdb72));
        // CB 97 03BB
        gbc.setState(0xadc8, 0xe6bf, 0x8a0, 0xe900, 0x43a8, 0x8f42, 0x0, 0x0);
        gbc.writeMem(0xadc8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0xadca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc8));
        EXPECT(0x97, gbc.readMem(0xadc9));
        // CB 97 03BC
        gbc.setState(0x762b, 0x4e24, 0x15c0, 0xf44f, 0x45e6, 0xb3b0, 0x1, 0x0);
        gbc.writeMem(0x762b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4e24, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03BD
        gbc.setState(0x854d, 0xc990, 0x8b0, 0xfc31, 0xb4c8, 0xd2b7, 0x0, 0x0);
        gbc.writeMem(0x854d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc990, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x97, gbc.readMem(0x854e));
        // CB 97 03BE
        gbc.setState(0x86e5, 0x7b8, 0xa3b0, 0x2deb, 0xd67c, 0xa92d, 0x1, 0x1);
        gbc.writeMem(0x86e5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7b8, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e5));
        EXPECT(0x97, gbc.readMem(0x86e6));
        // CB 97 03BF
        gbc.setState(0xc92f, 0x8f2b, 0xfc00, 0x5a0f, 0x905e, 0xdd91, 0x1, 0x0);
        gbc.writeMem(0xc92f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8f2b, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92f));
        EXPECT(0x97, gbc.readMem(0xc930));
        // CB 97 03C0
        gbc.setState(0x4678, 0x241, 0xfa20, 0x1096, 0x2d1, 0xf673, 0x0, 0x0);
        gbc.writeMem(0x4678, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x241, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03C1
        gbc.setState(0xdd32, 0x55e2, 0x64e0, 0x6b21, 0x6e80, 0x69ad, 0x1, 0x0);
        gbc.writeMem(0xdd32, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x55e2, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd32));
        EXPECT(0x97, gbc.readMem(0xdd33));
        // CB 97 03C2
        gbc.setState(0x65a3, 0xb8b2, 0xf2e0, 0x4eff, 0x9465, 0x509c, 0x1, 0x1);
        gbc.writeMem(0x65a3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x65a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03C3
        gbc.setState(0x64c6, 0xc144, 0x5dc0, 0xcc5, 0xfee9, 0x7b64, 0x1, 0x0);
        gbc.writeMem(0x64c6, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03C4
        gbc.setState(0x3e95, 0xc02e, 0x410, 0xb755, 0x6bd3, 0x2eea, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc02e, gbc.sp());
        EXPECT(0x3e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03C5
        gbc.setState(0x5788, 0x1777, 0x2690, 0x9a49, 0xf9a8, 0xb1f8, 0x0, 0x0);
        gbc.writeMem(0x5788, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1777, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03C6
        gbc.setState(0x3705, 0x28f6, 0xf4a0, 0x2a9d, 0x1094, 0x1e68, 0x1, 0x0);
        gbc.writeMem(0x3705, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x28f6, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03C7
        gbc.setState(0x36d2, 0x54a9, 0x49a0, 0xc25f, 0x169e, 0xfe5c, 0x0, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0x36d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03C9
        gbc.setState(0x127d, 0x591, 0xa7a0, 0x337c, 0xd9ae, 0xd810, 0x0, 0x0);
        gbc.writeMem(0x127d, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x591, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03CA
        gbc.setState(0xd782, 0x218d, 0xb550, 0x69ef, 0xccb2, 0x3e06, 0x1, 0x1);
        gbc.writeMem(0xd782, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x218d, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd782));
        EXPECT(0x97, gbc.readMem(0xd783));
        // CB 97 03CB
        gbc.setState(0xa070, 0xf8dd, 0x51f0, 0x8e6b, 0x260, 0xa686, 0x1, 0x1);
        gbc.writeMem(0xa070, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf8dd, gbc.sp());
        EXPECT(0xa072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa070));
        EXPECT(0x97, gbc.readMem(0xa071));
        // CB 97 03CC
        gbc.setState(0xc6b8, 0x3e0b, 0x5180, 0x2eca, 0x863d, 0x7837, 0x0, 0x1);
        gbc.writeMem(0xc6b8, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0xc6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b8));
        EXPECT(0x97, gbc.readMem(0xc6b9));
        // CB 97 03CE
        gbc.setState(0xd2c3, 0x1228, 0x3cb0, 0xd6cc, 0x109b, 0xb283, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1228, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c3));
        EXPECT(0x97, gbc.readMem(0xd2c4));
        // CB 97 03CF
        gbc.setState(0xeb89, 0x7414, 0xaf40, 0x43e4, 0x6e78, 0x23a1, 0x0, 0x1);
        gbc.writeMem(0xeb89, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0xeb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb89));
        EXPECT(0x97, gbc.readMem(0xeb8a));
        // CB 97 03D0
        gbc.setState(0x56e2, 0x2555, 0x5950, 0x25a6, 0xd632, 0xcc7e, 0x0, 0x1);
        gbc.writeMem(0x56e2, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2555, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03D1
        gbc.setState(0x2563, 0x987b, 0xd260, 0x11df, 0x1e78, 0x6633, 0x1, 0x1);
        gbc.writeMem(0x2563, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x987b, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03D2
        gbc.setState(0xd6ff, 0x90ce, 0x8f00, 0x7a00, 0xb643, 0x3bd0, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x90ce, gbc.sp());
        EXPECT(0xd701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ff));
        EXPECT(0x97, gbc.readMem(0xd700));
        // CB 97 03D3
        gbc.setState(0x76f5, 0x4d90, 0x7070, 0x5afa, 0x826c, 0x5894, 0x0, 0x0);
        gbc.writeMem(0x76f5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03D4
        gbc.setState(0x9a24, 0x5ca9, 0x5850, 0xfadc, 0xbece, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0x9a24, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5ca9, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a24));
        EXPECT(0x97, gbc.readMem(0x9a25));
        // CB 97 03D5
        gbc.setState(0x62a5, 0xb9f8, 0x6240, 0x7c64, 0x8728, 0x7bd3, 0x1, 0x0);
        gbc.writeMem(0x62a5, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb9f8, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03D6
        gbc.setState(0xcbd4, 0x2345, 0x81a0, 0x8c69, 0x62f7, 0xb425, 0x1, 0x1);
        gbc.writeMem(0xcbd4, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2345, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd4));
        EXPECT(0x97, gbc.readMem(0xcbd5));
        // CB 97 03D7
        gbc.setState(0xdaee, 0x65e6, 0x830, 0x6c49, 0x60a7, 0xcd59, 0x1, 0x1);
        gbc.writeMem(0xdaee, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x65e6, gbc.sp());
        EXPECT(0xdaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaee));
        EXPECT(0x97, gbc.readMem(0xdaef));
        // CB 97 03D8
        gbc.setState(0xdccc, 0x4bc1, 0xad0, 0x42bc, 0xbf41, 0xc68e, 0x0, 0x0);
        gbc.writeMem(0xdccc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccc));
        EXPECT(0x97, gbc.readMem(0xdccd));
        // CB 97 03D9
        gbc.setState(0xf7f, 0xf1e, 0xa6c0, 0x90d, 0x640, 0x1758, 0x1, 0x1);
        gbc.writeMem(0xf7f, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf1e, gbc.sp());
        EXPECT(0xf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03DA
        gbc.setState(0xd971, 0x9b64, 0x8fd0, 0xcc04, 0x6131, 0xeaa4, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9b64, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0x97, gbc.readMem(0xd972));
        // CB 97 03DB
        gbc.setState(0x498b, 0xcea9, 0x9140, 0x80c7, 0x4b0c, 0xf4b8, 0x0, 0x1);
        gbc.writeMem(0x498b, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcea9, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03DC
        gbc.setState(0x4575, 0xbd54, 0xfb80, 0x2db, 0xab94, 0x6080, 0x1, 0x0);
        gbc.writeMem(0x4575, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbd54, gbc.sp());
        EXPECT(0x4577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03DD
        gbc.setState(0x7d75, 0x74dc, 0x9e30, 0x5443, 0xe2da, 0xee8f, 0x1, 0x1);
        gbc.writeMem(0x7d75, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x74dc, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03DE
        gbc.setState(0x7e76, 0xcdd9, 0xdba0, 0xe8df, 0x9c82, 0xf828, 0x0, 0x0);
        gbc.writeMem(0x7e76, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcdd9, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 97 03DF
        gbc.setState(0x1bbc, 0xd42c, 0xe610, 0x20de, 0x277a, 0x9b88, 0x1, 0x0);
        gbc.writeMem(0x1bbc, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd42c, gbc.sp());
        EXPECT(0x1bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03E1
        gbc.setState(0xe6d0, 0x5f77, 0xaed0, 0x1322, 0x13ca, 0xc034, 0x1, 0x0);
        gbc.writeMem(0xe6d0, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5f77, gbc.sp());
        EXPECT(0xe6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d0));
        EXPECT(0x97, gbc.readMem(0xe6d1));
        // CB 97 03E2
        gbc.setState(0x4e43, 0x1d, 0xf4d0, 0xd1c8, 0xa9d7, 0x9b00, 0x0, 0x1);
        gbc.writeMem(0x4e43, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03E3
        gbc.setState(0x6b5e, 0x85a6, 0xa830, 0x7475, 0xb2e7, 0x3535, 0x0, 0x0);
        gbc.writeMem(0x6b5e, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x85a6, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 97 03E4
        gbc.setState(0xefca, 0x1648, 0x2d30, 0x1151, 0x2238, 0x7a2d, 0x0, 0x1);
        gbc.writeMem(0xefca, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0xefcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefca));
        EXPECT(0x97, gbc.readMem(0xefcb));
        // CB 97 03E5
        gbc.setState(0xb979, 0xfe2d, 0x7870, 0x5eee, 0x3164, 0x2ac7, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb979));
        EXPECT(0x97, gbc.readMem(0xb97a));
        // CB 97 03E6
        gbc.setState(0x8ca1, 0xecd3, 0x2710, 0xeba1, 0x5d15, 0xc232, 0x1, 0x0);
        gbc.writeMem(0x8ca1, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0x8ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca1));
        EXPECT(0x97, gbc.readMem(0x8ca2));
        // CB 97 03E7
        gbc.setState(0x1add, 0x2f36, 0xa2a0, 0xf602, 0xa66c, 0xfd10, 0x1, 0x1);
        gbc.writeMem(0x1add, { 0xcb, 0x97 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2f36, gbc.sp());
        EXPECT(0x1adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
