    TEST(gbcemu, opcode_bc) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BC 0000
        gbc.setState(0x956b, 0xa187, 0x130, 0x1909, 0x81c5, 0xe855, 0x1, 0x1);
        gbc.writeMem(0x956b, { 0xbc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa187, gbc.sp());
        EXPECT(0x956c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x956b));
        // BC 0001
        gbc.setState(0x1053, 0xaee1, 0x11b0, 0x95e2, 0xf0c9, 0x6e23, 0x1, 0x1);
        gbc.writeMem(0x1053, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaee1, gbc.sp());
        EXPECT(0x1054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0002
        gbc.setState(0x388e, 0xb4fe, 0x2e10, 0xfc6e, 0x1a66, 0xf4d8, 0x1, 0x0);
        gbc.writeMem(0x388e, { 0xbc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb4fe, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0003
        gbc.setState(0x5919, 0x7aac, 0x6f50, 0x2066, 0x8b31, 0x904f, 0x0, 0x1);
        gbc.writeMem(0x5919, { 0xbc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7aac, gbc.sp());
        EXPECT(0x591a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0004
        gbc.setState(0xca21, 0x318f, 0x8500, 0x398c, 0x178b, 0x1cd7, 0x0, 0x0);
        gbc.writeMem(0xca21, { 0xbc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x318f, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xca21));
        // BC 0005
        gbc.setState(0x5f0c, 0xfea7, 0x7840, 0x4b49, 0x8e1b, 0xe3ad, 0x0, 0x0);
        gbc.writeMem(0x5f0c, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfea7, gbc.sp());
        EXPECT(0x5f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0006
        gbc.setState(0xa8f5, 0xc40b, 0x1430, 0x1776, 0x4c6, 0x674, 0x0, 0x0);
        gbc.writeMem(0xa8f5, { 0xbc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc40b, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8f5));
        // BC 0007
        gbc.setState(0x8223, 0xaf18, 0x30a0, 0x7dbd, 0x695e, 0x333b, 0x0, 0x1);
        gbc.writeMem(0x8223, { 0xbc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8223));
        // BC 0008
        gbc.setState(0xef8c, 0x7ffd, 0xc520, 0xd2d0, 0x9950, 0xb9d, 0x1, 0x1);
        gbc.writeMem(0xef8c, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7ffd, gbc.sp());
        EXPECT(0xef8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xef8c));
        // BC 0009
        gbc.setState(0xc7a6, 0xdb05, 0xf560, 0x993, 0x8510, 0x90c, 0x0, 0x1);
        gbc.writeMem(0xc7a6, { 0xbc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdb05, gbc.sp());
        EXPECT(0xc7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc7a6));
        // BC 000A
        gbc.setState(0xec6a, 0x50e, 0xf80, 0x5e79, 0xdba9, 0x45bd, 0x1, 0x0);
        gbc.writeMem(0xec6a, { 0xbc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x50e, gbc.sp());
        EXPECT(0xec6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec6a));
        // BC 000B
        gbc.setState(0x600a, 0xeccc, 0x4e0, 0x8f8a, 0x7d7f, 0xb0a2, 0x1, 0x0);
        gbc.writeMem(0x600a, { 0xbc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeccc, gbc.sp());
        EXPECT(0x600b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 000D
        gbc.setState(0xda1, 0xd13, 0x85a0, 0x44f2, 0xcf69, 0x3023, 0x0, 0x0);
        gbc.writeMem(0xda1, { 0xbc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd13, gbc.sp());
        EXPECT(0xda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 000E
        gbc.setState(0xa6bf, 0xd34a, 0xc890, 0xa020, 0x4308, 0x2e99, 0x0, 0x0);
        gbc.writeMem(0xa6bf, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd34a, gbc.sp());
        EXPECT(0xa6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa6bf));
        // BC 000F
        gbc.setState(0xd0d7, 0x8ec3, 0x2f60, 0xa6c3, 0x6946, 0x16d9, 0x1, 0x0);
        gbc.writeMem(0xd0d7, { 0xbc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8ec3, gbc.sp());
        EXPECT(0xd0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd0d7));
        // BC 0010
        gbc.setState(0x987, 0xd4aa, 0x6cb0, 0x7b13, 0x7610, 0xdc9c, 0x0, 0x1);
        gbc.writeMem(0x987, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0x988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0011
        gbc.setState(0xe301, 0xc038, 0xfb30, 0xdbe0, 0xe20f, 0x7a73, 0x0, 0x0);
        gbc.writeMem(0xe301, { 0xbc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0xe302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe301));
        // BC 0012
        gbc.setState(0xa8c3, 0x79ed, 0xf150, 0xce95, 0xb603, 0xc21c, 0x0, 0x0);
        gbc.writeMem(0xa8c3, { 0xbc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x79ed, gbc.sp());
        EXPECT(0xa8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8c3));
        // BC 0013
        gbc.setState(0xa8eb, 0x1a3c, 0x86f0, 0x5ab7, 0xaeca, 0x11bc, 0x1, 0x0);
        gbc.writeMem(0xa8eb, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0xa8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8eb));
        // BC 0014
        gbc.setState(0xb2f4, 0xd331, 0x76e0, 0x324e, 0x5c45, 0x3c6b, 0x0, 0x1);
        gbc.writeMem(0xb2f4, { 0xbc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd331, gbc.sp());
        EXPECT(0xb2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb2f4));
        // BC 0016
        gbc.setState(0xb3f9, 0x9d4c, 0x32f0, 0xe7bb, 0xcdab, 0x4530, 0x0, 0x0);
        gbc.writeMem(0xb3f9, { 0xbc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d4c, gbc.sp());
        EXPECT(0xb3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb3f9));
        // BC 0017
        gbc.setState(0x9740, 0x72dd, 0x2dc0, 0x45a5, 0xfec6, 0x3e1b, 0x0, 0x1);
        gbc.writeMem(0x9740, { 0xbc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x72dd, gbc.sp());
        EXPECT(0x9741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9740));
        // BC 0018
        gbc.setState(0x1c41, 0x90a, 0x9610, 0x574b, 0x553, 0xc7, 0x1, 0x1);
        gbc.writeMem(0x1c41, { 0xbc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x90a, gbc.sp());
        EXPECT(0x1c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0019
        gbc.setState(0xd9a6, 0xe217, 0x94c0, 0x4f5f, 0x5e11, 0x7680, 0x0, 0x1);
        gbc.writeMem(0xd9a6, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe217, gbc.sp());
        EXPECT(0xd9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd9a6));
        // BC 001A
        gbc.setState(0x12b3, 0xe481, 0xccc0, 0x2c7e, 0x72ff, 0x382c, 0x0, 0x1);
        gbc.writeMem(0x12b3, { 0xbc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe481, gbc.sp());
        EXPECT(0x12b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 001B
        gbc.setState(0x6e33, 0x7422, 0x11c0, 0x5147, 0x7943, 0x9257, 0x0, 0x1);
        gbc.writeMem(0x6e33, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x6e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 001C
        gbc.setState(0x9aaf, 0xdfc2, 0x83c0, 0x85e4, 0x3f06, 0x8588, 0x1, 0x1);
        gbc.writeMem(0x9aaf, { 0xbc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9aaf));
        // BC 001D
        gbc.setState(0x25ca, 0xa6e9, 0xcfc0, 0x1a48, 0xcc04, 0x8603, 0x1, 0x0);
        gbc.writeMem(0x25ca, { 0xbc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 001E
        gbc.setState(0x2f33, 0x3edf, 0xee90, 0xd945, 0x767e, 0x807f, 0x0, 0x1);
        gbc.writeMem(0x2f33, { 0xbc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3edf, gbc.sp());
        EXPECT(0x2f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 001F
        gbc.setState(0x75ee, 0xb998, 0x1510, 0x7a2d, 0x14df, 0x71c6, 0x0, 0x0);
        gbc.writeMem(0x75ee, { 0xbc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0x75ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0020
        gbc.setState(0x3f90, 0xa553, 0x69c0, 0xe448, 0x8261, 0xef64, 0x0, 0x1);
        gbc.writeMem(0x3f90, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0021
        gbc.setState(0xa307, 0xd237, 0x900, 0x49af, 0xf585, 0x6a10, 0x0, 0x1);
        gbc.writeMem(0xa307, { 0xbc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd237, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa307));
        // BC 0022
        gbc.setState(0xa2d2, 0xdf44, 0xe960, 0x49ee, 0x26e0, 0xaecf, 0x0, 0x1);
        gbc.writeMem(0xa2d2, { 0xbc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdf44, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa2d2));
        // BC 0023
        gbc.setState(0x73a8, 0xc9c2, 0x1ee0, 0x5e4d, 0x23c0, 0xe2e5, 0x1, 0x1);
        gbc.writeMem(0x73a8, { 0xbc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc9c2, gbc.sp());
        EXPECT(0x73a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0024
        gbc.setState(0x5c59, 0xf458, 0xe3e0, 0x9d7d, 0x6bef, 0xda97, 0x0, 0x1);
        gbc.writeMem(0x5c59, { 0xbc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf458, gbc.sp());
        EXPECT(0x5c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0025
        gbc.setState(0x43b3, 0x374a, 0x840, 0x357a, 0xc503, 0x4a41, 0x0, 0x0);
        gbc.writeMem(0x43b3, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x374a, gbc.sp());
        EXPECT(0x43b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0026
        gbc.setState(0x7256, 0xaa46, 0x12b0, 0x4e4, 0x7ae3, 0xe10c, 0x0, 0x0);
        gbc.writeMem(0x7256, { 0xbc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaa46, gbc.sp());
        EXPECT(0x7257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0027
        gbc.setState(0x1d96, 0xb4a9, 0x1930, 0xb1d4, 0xb458, 0x450e, 0x1, 0x0);
        gbc.writeMem(0x1d96, { 0xbc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb4a9, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0028
        gbc.setState(0x2be0, 0x2262, 0xe1e0, 0x6b28, 0x751e, 0x8d69, 0x0, 0x0);
        gbc.writeMem(0x2be0, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0x2be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0029
        gbc.setState(0xc470, 0xf2ae, 0x31f0, 0xdb5e, 0x3cc2, 0x84a3, 0x1, 0x0);
        gbc.writeMem(0xc470, { 0xbc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf2ae, gbc.sp());
        EXPECT(0xc471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc470));
        // BC 002A
        gbc.setState(0x41ae, 0x4ffd, 0xdfd0, 0x4d8e, 0x2c6b, 0x9ad3, 0x0, 0x0);
        gbc.writeMem(0x41ae, { 0xbc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4ffd, gbc.sp());
        EXPECT(0x41af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 002B
        gbc.setState(0xe9c0, 0x7a21, 0x750, 0xcc50, 0xf92e, 0x8615, 0x0, 0x1);
        gbc.writeMem(0xe9c0, { 0xbc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7a21, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe9c0));
        // BC 002C
        gbc.setState(0xc9c, 0xe737, 0x24d0, 0xdab2, 0xa67b, 0xdaff, 0x1, 0x0);
        gbc.writeMem(0xc9c, { 0xbc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe737, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 002D
        gbc.setState(0x200f, 0xd980, 0x4300, 0x4fb2, 0x3235, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x200f, { 0xbc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0x2010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 002E
        gbc.setState(0x762c, 0x1ffb, 0x3550, 0x29e0, 0x52ab, 0xa21a, 0x0, 0x0);
        gbc.writeMem(0x762c, { 0xbc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1ffb, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 002F
        gbc.setState(0xb8fe, 0xe1c, 0x1640, 0x7a65, 0xb612, 0x65d7, 0x1, 0x0);
        gbc.writeMem(0xb8fe, { 0xbc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb8fe));
        // BC 0030
        gbc.setState(0x5d71, 0xadea, 0x97a0, 0x39d6, 0xa8f5, 0x907d, 0x0, 0x1);
        gbc.writeMem(0x5d71, { 0xbc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xadea, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0031
        gbc.setState(0xd734, 0x5878, 0x4510, 0x61c7, 0xf7b2, 0x5582, 0x0, 0x1);
        gbc.writeMem(0xd734, { 0xbc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5878, gbc.sp());
        EXPECT(0xd735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd734));
        // BC 0032
        gbc.setState(0xefb3, 0x9dce, 0xfd70, 0xd81d, 0x6ecd, 0x65e, 0x0, 0x1);
        gbc.writeMem(0xefb3, { 0xbc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xefb3));
        // BC 0033
        gbc.setState(0x3948, 0x4338, 0xc520, 0x41f3, 0x4dc7, 0xf3e4, 0x1, 0x0);
        gbc.writeMem(0x3948, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4338, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0034
        gbc.setState(0xd65d, 0x884a, 0xb130, 0x7c52, 0x8059, 0x7846, 0x0, 0x1);
        gbc.writeMem(0xd65d, { 0xbc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x884a, gbc.sp());
        EXPECT(0xd65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd65d));
        // BC 0035
        gbc.setState(0x47ec, 0x39c2, 0xb270, 0x39ea, 0x3690, 0x141b, 0x1, 0x1);
        gbc.writeMem(0x47ec, { 0xbc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0036
        gbc.setState(0xb617, 0x4b4f, 0xa5b0, 0x471a, 0xc2fc, 0x7062, 0x1, 0x0);
        gbc.writeMem(0xb617, { 0xbc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4b4f, gbc.sp());
        EXPECT(0xb618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb617));
        // BC 0037
        gbc.setState(0xed5b, 0x1339, 0x5870, 0xf11a, 0xbd3b, 0xc184, 0x1, 0x1);
        gbc.writeMem(0xed5b, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0xed5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xed5b));
        // BC 0038
        gbc.setState(0xd3fa, 0x49ed, 0xbec0, 0xb0cc, 0xaeb1, 0xec2f, 0x1, 0x1);
        gbc.writeMem(0xd3fa, { 0xbc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0xd3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd3fa));
        // BC 0039
        gbc.setState(0x5a47, 0x24ca, 0xfe60, 0xec6b, 0x25ef, 0xe164, 0x1, 0x0);
        gbc.writeMem(0x5a47, { 0xbc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x5a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 003A
        gbc.setState(0x4032, 0xf571, 0x7b20, 0xf192, 0x6f3a, 0xe170, 0x1, 0x0);
        gbc.writeMem(0x4032, { 0xbc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0x4033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 003B
        gbc.setState(0x18a5, 0xb0f6, 0xe9b0, 0x5e92, 0xf28b, 0xff3d, 0x0, 0x0);
        gbc.writeMem(0x18a5, { 0xbc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb0f6, gbc.sp());
        EXPECT(0x18a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 003C
        gbc.setState(0x842f, 0x4624, 0xda10, 0x7510, 0x3b2, 0x9e32, 0x0, 0x1);
        gbc.writeMem(0x842f, { 0xbc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4624, gbc.sp());
        EXPECT(0x8430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x842f));
        // BC 003D
        gbc.setState(0x22ab, 0x3e05, 0x7030, 0x2b80, 0x8820, 0x3e32, 0x1, 0x1);
        gbc.writeMem(0x22ab, { 0xbc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3e05, gbc.sp());
        EXPECT(0x22ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 003E
        gbc.setState(0xe518, 0xf700, 0x2270, 0x71e5, 0x959a, 0xa751, 0x0, 0x1);
        gbc.writeMem(0xe518, { 0xbc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf700, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe518));
        // BC 0040
        gbc.setState(0xaa0b, 0x2936, 0xcb10, 0x65e2, 0xb03, 0x60e5, 0x0, 0x1);
        gbc.writeMem(0xaa0b, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2936, gbc.sp());
        EXPECT(0xaa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaa0b));
        // BC 0041
        gbc.setState(0xd4f1, 0x5a4, 0x1870, 0xc77b, 0xe6c2, 0x2323, 0x0, 0x1);
        gbc.writeMem(0xd4f1, { 0xbc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5a4, gbc.sp());
        EXPECT(0xd4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd4f1));
        // BC 0042
        gbc.setState(0xcb2b, 0x2dd6, 0xcd0, 0xcd6f, 0x98ce, 0x8cc2, 0x0, 0x1);
        gbc.writeMem(0xcb2b, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2dd6, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcb2b));
        // BC 0043
        gbc.setState(0x88a9, 0xabc2, 0xbdb0, 0xa0f6, 0x9a3d, 0x9c07, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x88a9));
        // BC 0044
        gbc.setState(0x4b75, 0x6065, 0x3df0, 0x59a7, 0xf16c, 0x2c21, 0x0, 0x1);
        gbc.writeMem(0x4b75, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6065, gbc.sp());
        EXPECT(0x4b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0045
        gbc.setState(0xccc1, 0x87ac, 0x9d90, 0x77bb, 0x3429, 0xadf3, 0x1, 0x1);
        gbc.writeMem(0xccc1, { 0xbc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x87ac, gbc.sp());
        EXPECT(0xccc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xccc1));
        // BC 0046
        gbc.setState(0xb982, 0x23a8, 0x780, 0x4b5d, 0xcb28, 0x7d23, 0x0, 0x1);
        gbc.writeMem(0xb982, { 0xbc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0xb983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb982));
        // BC 0047
        gbc.setState(0x966, 0x845, 0x550, 0x696d, 0xffe0, 0x6cb2, 0x1, 0x1);
        gbc.writeMem(0x966, { 0xbc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x845, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0048
        gbc.setState(0x4ffe, 0x3cba, 0x4820, 0x1573, 0x229a, 0x978b, 0x1, 0x1);
        gbc.writeMem(0x4ffe, { 0xbc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3cba, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0049
        gbc.setState(0xc59d, 0x8e47, 0x2bc0, 0xe274, 0x7f79, 0xedaf, 0x0, 0x1);
        gbc.writeMem(0xc59d, { 0xbc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e47, gbc.sp());
        EXPECT(0xc59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc59d));
        // BC 004A
        gbc.setState(0x3684, 0xb53c, 0x7310, 0xa2b4, 0x50ec, 0xc06, 0x0, 0x1);
        gbc.writeMem(0x3684, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 004B
        gbc.setState(0xa050, 0xad88, 0x7740, 0xb418, 0xe009, 0x2c3b, 0x0, 0x0);
        gbc.writeMem(0xa050, { 0xbc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xad88, gbc.sp());
        EXPECT(0xa051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa050));
        // BC 004C
        gbc.setState(0xac86, 0x3e48, 0xae60, 0x1999, 0xf0b3, 0xcf68, 0x1, 0x0);
        gbc.writeMem(0xac86, { 0xbc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e48, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xac86));
        // BC 004D
        gbc.setState(0xe2e1, 0xb46c, 0xc960, 0x3776, 0x2a82, 0xcf0b, 0x1, 0x1);
        gbc.writeMem(0xe2e1, { 0xbc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb46c, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe2e1));
        // BC 004E
        gbc.setState(0x906f, 0x3d85, 0x5780, 0x456, 0xf754, 0x22ff, 0x1, 0x0);
        gbc.writeMem(0x906f, { 0xbc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3d85, gbc.sp());
        EXPECT(0x9070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x906f));
        // BC 004F
        gbc.setState(0xe11b, 0xd272, 0xef40, 0x3e89, 0x7381, 0x2483, 0x1, 0x1);
        gbc.writeMem(0xe11b, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0xe11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe11b));
        // BC 0050
        gbc.setState(0x5daa, 0x3082, 0xd700, 0x206c, 0xf488, 0x450, 0x1, 0x1);
        gbc.writeMem(0x5daa, { 0xbc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x5dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0051
        gbc.setState(0x9ec7, 0x20a4, 0x2180, 0xb25, 0x67a, 0x1d87, 0x0, 0x1);
        gbc.writeMem(0x9ec7, { 0xbc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9ec7));
        // BC 0052
        gbc.setState(0x273, 0xb4, 0x1cb0, 0xb291, 0xc9f4, 0x1fc, 0x0, 0x1);
        gbc.writeMem(0x273, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb4, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0053
        gbc.setState(0x64ba, 0xbcda, 0xb5a0, 0xa4cf, 0x2c1, 0xe395, 0x1, 0x0);
        gbc.writeMem(0x64ba, { 0xbc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbcda, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0054
        gbc.setState(0x2db8, 0xb545, 0x9fc0, 0xd1ff, 0xa58f, 0xb16b, 0x0, 0x0);
        gbc.writeMem(0x2db8, { 0xbc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb545, gbc.sp());
        EXPECT(0x2db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0055
        gbc.setState(0x47b0, 0x8ba6, 0x7250, 0xe3cf, 0x2b6e, 0xad50, 0x1, 0x1);
        gbc.writeMem(0x47b0, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0x47b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0056
        gbc.setState(0xc722, 0xb554, 0x4630, 0xb8b4, 0x5086, 0x6bb1, 0x1, 0x0);
        gbc.writeMem(0xc722, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb554, gbc.sp());
        EXPECT(0xc723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc722));
        // BC 0057
        gbc.setState(0x88dd, 0x5b5d, 0x83f0, 0x9c35, 0xb65a, 0x317f, 0x1, 0x1);
        gbc.writeMem(0x88dd, { 0xbc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5b5d, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x88dd));
        // BC 0058
        gbc.setState(0x74b9, 0xc66, 0xac20, 0x525d, 0x830a, 0xfdc5, 0x1, 0x1);
        gbc.writeMem(0x74b9, { 0xbc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0x74ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0059
        gbc.setState(0x3fba, 0xc2d2, 0xf500, 0x2406, 0xd244, 0x7707, 0x0, 0x1);
        gbc.writeMem(0x3fba, { 0xbc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 005A
        gbc.setState(0x2dc4, 0xa985, 0xeb80, 0x52d8, 0x610a, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0x2dc4, { 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0x2dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 005B
        gbc.setState(0xb5b2, 0xb01b, 0x1180, 0xdb11, 0xfabf, 0xf687, 0x0, 0x0);
        gbc.writeMem(0xb5b2, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb01b, gbc.sp());
        EXPECT(0xb5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb5b2));
        // BC 005C
        gbc.setState(0x61f6, 0xceb7, 0xef20, 0x39ee, 0xa3c4, 0x16b0, 0x1, 0x1);
        gbc.writeMem(0x61f6, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xceb7, gbc.sp());
        EXPECT(0x61f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 005D
        gbc.setState(0x77e9, 0xdd66, 0xc6a0, 0x36e4, 0xc19a, 0xa878, 0x1, 0x0);
        gbc.writeMem(0x77e9, { 0xbc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdd66, gbc.sp());
        EXPECT(0x77ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 005E
        gbc.setState(0x7a3b, 0x44af, 0x7ad0, 0x4260, 0xdf7c, 0x471d, 0x1, 0x0);
        gbc.writeMem(0x7a3b, { 0xbc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x44af, gbc.sp());
        EXPECT(0x7a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 005F
        gbc.setState(0xbfa2, 0xcaee, 0x6040, 0x3a65, 0x1ecf, 0x2480, 0x0, 0x1);
        gbc.writeMem(0xbfa2, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbfa2));
        // BC 0060
        gbc.setState(0x120f, 0xb207, 0x5170, 0xa6c5, 0x8eea, 0x1a52, 0x0, 0x1);
        gbc.writeMem(0x120f, { 0xbc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0x1210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0061
        gbc.setState(0xb302, 0xfb8d, 0xa310, 0xe409, 0x1e0d, 0xdf45, 0x1, 0x0);
        gbc.writeMem(0xb302, { 0xbc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfb8d, gbc.sp());
        EXPECT(0xb303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb302));
        // BC 0062
        gbc.setState(0xd21, 0xc20a, 0xa5b0, 0x8c00, 0xc643, 0x4244, 0x0, 0x1);
        gbc.writeMem(0xd21, { 0xbc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0063
        gbc.setState(0x4475, 0x6c46, 0xfb80, 0x39bc, 0x92ee, 0xaabe, 0x1, 0x1);
        gbc.writeMem(0x4475, { 0xbc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6c46, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0064
        gbc.setState(0x46b0, 0xe761, 0x4280, 0x9c95, 0xdcdc, 0xb8a4, 0x0, 0x1);
        gbc.writeMem(0x46b0, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe761, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0065
        gbc.setState(0x1ec0, 0x1686, 0x66f0, 0x9051, 0x52af, 0x430a, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xbc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1686, gbc.sp());
        EXPECT(0x1ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0066
        gbc.setState(0x2d8c, 0xbc1a, 0x3230, 0x4ba9, 0x712c, 0x7527, 0x0, 0x1);
        gbc.writeMem(0x2d8c, { 0xbc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc1a, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0067
        gbc.setState(0x9bf3, 0x3016, 0xae30, 0xb05b, 0x855d, 0x124f, 0x0, 0x0);
        gbc.writeMem(0x9bf3, { 0xbc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3016, gbc.sp());
        EXPECT(0x9bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9bf3));
        // BC 0068
        gbc.setState(0x2667, 0xfec2, 0x38d0, 0x1f75, 0x8ab3, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0x2667, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0x2668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0069
        gbc.setState(0x802b, 0x3945, 0x3470, 0xbde2, 0x741b, 0x63fe, 0x0, 0x0);
        gbc.writeMem(0x802b, { 0xbc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3945, gbc.sp());
        EXPECT(0x802c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x802b));
        // BC 006A
        gbc.setState(0x1ccc, 0x37b0, 0x81a0, 0xca37, 0x7a16, 0xa644, 0x1, 0x1);
        gbc.writeMem(0x1ccc, { 0xbc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x37b0, gbc.sp());
        EXPECT(0x1ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 006B
        gbc.setState(0x751, 0x4d0e, 0xd680, 0x8a92, 0x4034, 0x9344, 0x0, 0x0);
        gbc.writeMem(0x751, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4d0e, gbc.sp());
        EXPECT(0x752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 006C
        gbc.setState(0x1e3, 0x80d5, 0x7ba0, 0x1e3b, 0xaaeb, 0x2cb6, 0x1, 0x0);
        gbc.writeMem(0x1e3, { 0xbc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80d5, gbc.sp());
        EXPECT(0x1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 006D
        gbc.setState(0xc031, 0x19ca, 0x4c40, 0xb5c0, 0xf128, 0x49a9, 0x1, 0x1);
        gbc.writeMem(0xc031, { 0xbc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x19ca, gbc.sp());
        EXPECT(0xc032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc031));
        // BC 006F
        gbc.setState(0x3e56, 0x4cf3, 0x78a0, 0xfe, 0x59d2, 0x3165, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x3e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0070
        gbc.setState(0xc96c, 0xa860, 0x5fe0, 0xa473, 0xa6fe, 0x6ec, 0x1, 0x0);
        gbc.writeMem(0xc96c, { 0xbc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa860, gbc.sp());
        EXPECT(0xc96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc96c));
        // BC 0071
        gbc.setState(0x7ac, 0x1d1d, 0x8730, 0x9b43, 0xcf5a, 0xcd38, 0x1, 0x1);
        gbc.writeMem(0x7ac, { 0xbc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0072
        gbc.setState(0x1825, 0x6a9, 0x8bf0, 0xa715, 0xb665, 0xbe56, 0x0, 0x0);
        gbc.writeMem(0x1825, { 0xbc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0073
        gbc.setState(0xd1f8, 0x767d, 0x6c00, 0x8ff4, 0x1cdc, 0xb9d6, 0x1, 0x1);
        gbc.writeMem(0xd1f8, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x767d, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd1f8));
        // BC 0074
        gbc.setState(0x9492, 0xfedd, 0xdde0, 0x2524, 0xb04b, 0xf1a3, 0x0, 0x1);
        gbc.writeMem(0x9492, { 0xbc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfedd, gbc.sp());
        EXPECT(0x9493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9492));
        // BC 0075
        gbc.setState(0x4628, 0xa55c, 0x74d0, 0x28ae, 0x4e4c, 0x1e70, 0x0, 0x1);
        gbc.writeMem(0x4628, { 0xbc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0x4629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0076
        gbc.setState(0x1153, 0xd435, 0x97b0, 0xe425, 0xc320, 0x3d5f, 0x0, 0x0);
        gbc.writeMem(0x1153, { 0xbc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd435, gbc.sp());
        EXPECT(0x1154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0078
        gbc.setState(0x8fdc, 0x4f, 0x7e10, 0x94e0, 0xd8a1, 0xb9c3, 0x0, 0x0);
        gbc.writeMem(0x8fdc, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4f, gbc.sp());
        EXPECT(0x8fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8fdc));
        // BC 0079
        gbc.setState(0xd75, 0xc7a7, 0x3970, 0x7341, 0x9497, 0xc55f, 0x0, 0x0);
        gbc.writeMem(0xd75, { 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc7a7, gbc.sp());
        EXPECT(0xd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 007A
        gbc.setState(0x6118, 0x463f, 0xc800, 0x5d1a, 0xb7c5, 0xea00, 0x0, 0x0);
        gbc.writeMem(0x6118, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0x6119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 007B
        gbc.setState(0xeaae, 0xd093, 0xf8f0, 0xe92a, 0x4e79, 0x9fc7, 0x1, 0x1);
        gbc.writeMem(0xeaae, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0xeaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeaae));
        // BC 007C
        gbc.setState(0x43f7, 0x4344, 0x6760, 0xb196, 0xb341, 0x6a27, 0x1, 0x1);
        gbc.writeMem(0x43f7, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x43f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 007D
        gbc.setState(0xda94, 0xc399, 0xc700, 0x4053, 0x3487, 0xd0d9, 0x0, 0x1);
        gbc.writeMem(0xda94, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0xda95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xda94));
        // BC 007F
        gbc.setState(0x774b, 0xaa6e, 0x7450, 0x35cc, 0xbdab, 0x4cee, 0x1, 0x1);
        gbc.writeMem(0x774b, { 0xbc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0x774c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0080
        gbc.setState(0x4633, 0x5833, 0x9000, 0xc5c9, 0x7769, 0x8d39, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0xbc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0081
        gbc.setState(0x3633, 0xc5d6, 0x1ba0, 0xa1ab, 0xdc16, 0x470, 0x0, 0x1);
        gbc.writeMem(0x3633, { 0xbc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0082
        gbc.setState(0x7f27, 0xece8, 0x970, 0xfb63, 0x7484, 0xda23, 0x0, 0x0);
        gbc.writeMem(0x7f27, { 0xbc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xece8, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0083
        gbc.setState(0xa8c8, 0x1aff, 0x8290, 0xfaef, 0x6f96, 0xa69, 0x0, 0x0);
        gbc.writeMem(0xa8c8, { 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1aff, gbc.sp());
        EXPECT(0xa8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8c8));
        // BC 0084
        gbc.setState(0xc033, 0x5565, 0x1f50, 0x177a, 0xcc8b, 0x538f, 0x0, 0x1);
        gbc.writeMem(0xc033, { 0xbc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5565, gbc.sp());
        EXPECT(0xc034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc033));
        // BC 0085
        gbc.setState(0xe4b7, 0xf73b, 0x6df0, 0xbf7a, 0x519e, 0xd5af, 0x0, 0x0);
        gbc.writeMem(0xe4b7, { 0xbc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0xe4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe4b7));
        // BC 0086
        gbc.setState(0x4bfb, 0xa94b, 0x87b0, 0x258f, 0x4177, 0xf338, 0x1, 0x0);
        gbc.writeMem(0x4bfb, { 0xbc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0087
        gbc.setState(0x65cb, 0x37a8, 0xd220, 0xf957, 0xbaa9, 0x96ac, 0x0, 0x1);
        gbc.writeMem(0x65cb, { 0xbc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0089
        gbc.setState(0x54a0, 0x506d, 0x1800, 0xd4ee, 0x8063, 0x30c1, 0x0, 0x0);
        gbc.writeMem(0x54a0, { 0xbc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x506d, gbc.sp());
        EXPECT(0x54a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 008A
        gbc.setState(0x6f26, 0x5067, 0xf7d0, 0xca05, 0x4202, 0xc15c, 0x0, 0x0);
        gbc.writeMem(0x6f26, { 0xbc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x6f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 008B
        gbc.setState(0x160e, 0x1a2f, 0x850, 0x97e1, 0xb842, 0xe260, 0x0, 0x0);
        gbc.writeMem(0x160e, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1a2f, gbc.sp());
        EXPECT(0x160f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 008C
        gbc.setState(0xabab, 0x5f98, 0x11c0, 0xc4cb, 0x15ad, 0xf2a8, 0x0, 0x0);
        gbc.writeMem(0xabab, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0xabac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xabab));
        // BC 008E
        gbc.setState(0x600e, 0xa5fe, 0x1950, 0xae13, 0x9299, 0xd75c, 0x1, 0x0);
        gbc.writeMem(0x600e, { 0xbc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0x600f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 008F
        gbc.setState(0xc280, 0xf969, 0xc500, 0x4c55, 0xf022, 0xf91a, 0x0, 0x1);
        gbc.writeMem(0xc280, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc280));
        // BC 0090
        gbc.setState(0x360f, 0x43c7, 0x2410, 0x9c86, 0x661c, 0x956, 0x1, 0x0);
        gbc.writeMem(0x360f, { 0xbc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x43c7, gbc.sp());
        EXPECT(0x3610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0091
        gbc.setState(0x32a9, 0xdac8, 0xb0c0, 0x80ae, 0xc742, 0x57fe, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0xbc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x32aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0092
        gbc.setState(0x1708, 0xa0ec, 0xa50, 0x555a, 0xd251, 0xdf6c, 0x0, 0x1);
        gbc.writeMem(0x1708, { 0xbc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0x1709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0093
        gbc.setState(0x3113, 0x9d20, 0xa280, 0x490, 0x4619, 0x3243, 0x0, 0x1);
        gbc.writeMem(0x3113, { 0xbc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9d20, gbc.sp());
        EXPECT(0x3114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0094
        gbc.setState(0x6f0c, 0x76e8, 0xf290, 0x59a, 0xb80e, 0xe825, 0x1, 0x1);
        gbc.writeMem(0x6f0c, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x76e8, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0095
        gbc.setState(0x8654, 0xc0c2, 0xe080, 0xe843, 0xf1dd, 0x212d, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8654));
        // BC 0096
        gbc.setState(0xef01, 0xbe1e, 0x8110, 0x4c3c, 0x9160, 0x2515, 0x1, 0x0);
        gbc.writeMem(0xef01, { 0xbc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbe1e, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xef01));
        // BC 0097
        gbc.setState(0xcb6a, 0x6f80, 0xa4b0, 0x9f0f, 0xa9f8, 0x249d, 0x0, 0x1);
        gbc.writeMem(0xcb6a, { 0xbc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f80, gbc.sp());
        EXPECT(0xcb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcb6a));
        // BC 0098
        gbc.setState(0x6816, 0x5d21, 0xbbe0, 0x1efb, 0x40d4, 0xf689, 0x0, 0x0);
        gbc.writeMem(0x6816, { 0xbc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0x6817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0099
        gbc.setState(0x3a0d, 0x3b16, 0x4920, 0x1ef3, 0x7a56, 0x1aef, 0x1, 0x0);
        gbc.writeMem(0x3a0d, { 0xbc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3b16, gbc.sp());
        EXPECT(0x3a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 009A
        gbc.setState(0x81b6, 0x542a, 0xe860, 0xe34b, 0x3fee, 0xc06f, 0x0, 0x1);
        gbc.writeMem(0x81b6, { 0xbc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x542a, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x81b6));
        // BC 009B
        gbc.setState(0x86b9, 0x92f2, 0x2c70, 0xa987, 0xfbcd, 0x3aba, 0x0, 0x0);
        gbc.writeMem(0x86b9, { 0xbc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0x86ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x86b9));
        // BC 009C
        gbc.setState(0x4d0b, 0xd63b, 0x6e10, 0x92e5, 0xa52b, 0xf0c5, 0x1, 0x1);
        gbc.writeMem(0x4d0b, { 0xbc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd63b, gbc.sp());
        EXPECT(0x4d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 009D
        gbc.setState(0xa74d, 0x372e, 0x7480, 0x9c26, 0x2e4c, 0x7bae, 0x1, 0x0);
        gbc.writeMem(0xa74d, { 0xbc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0xa74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa74d));
        // BC 009E
        gbc.setState(0x9344, 0x4900, 0xd6b0, 0xea21, 0xb65e, 0x76c7, 0x1, 0x0);
        gbc.writeMem(0x9344, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4900, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9344));
        // BC 009F
        gbc.setState(0x962a, 0xa7b6, 0x7f40, 0x3ab, 0x54fd, 0xb012, 0x1, 0x1);
        gbc.writeMem(0x962a, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa7b6, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x962a));
        // BC 00A0
        gbc.setState(0xd86e, 0x9def, 0xeb80, 0x74fe, 0x23da, 0x860e, 0x1, 0x0);
        gbc.writeMem(0xd86e, { 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd86e));
        // BC 00A1
        gbc.setState(0xc474, 0xa144, 0xe170, 0xe716, 0xd60f, 0x40aa, 0x1, 0x1);
        gbc.writeMem(0xc474, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa144, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc474));
        // BC 00A2
        gbc.setState(0xa012, 0xed7a, 0x1360, 0x1d74, 0xd42b, 0x54fd, 0x1, 0x1);
        gbc.writeMem(0xa012, { 0xbc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed7a, gbc.sp());
        EXPECT(0xa013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa012));
        // BC 00A3
        gbc.setState(0xa9ca, 0x5596, 0xbf60, 0x1b68, 0x464b, 0xe70c, 0x0, 0x0);
        gbc.writeMem(0xa9ca, { 0xbc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5596, gbc.sp());
        EXPECT(0xa9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa9ca));
        // BC 00A4
        gbc.setState(0xc10, 0x6c8c, 0xd800, 0xc4e3, 0x4129, 0xbc11, 0x1, 0x0);
        gbc.writeMem(0xc10, { 0xbc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c8c, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00A5
        gbc.setState(0x492b, 0xabdf, 0x7eb0, 0xb30b, 0x354c, 0x14cf, 0x0, 0x0);
        gbc.writeMem(0x492b, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xabdf, gbc.sp());
        EXPECT(0x492c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00A6
        gbc.setState(0x1e7c, 0xeef1, 0xf910, 0x9c29, 0xeb0a, 0x2134, 0x1, 0x0);
        gbc.writeMem(0x1e7c, { 0xbc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xeef1, gbc.sp());
        EXPECT(0x1e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00A8
        gbc.setState(0x8b89, 0x36a6, 0x6c10, 0x58ae, 0xeb9f, 0xf8d8, 0x1, 0x0);
        gbc.writeMem(0x8b89, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8b89));
        // BC 00A9
        gbc.setState(0xa8ab, 0x8c05, 0x5c30, 0x7246, 0xbf0d, 0x9507, 0x0, 0x0);
        gbc.writeMem(0xa8ab, { 0xbc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8c05, gbc.sp());
        EXPECT(0xa8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8ab));
        // BC 00AA
        gbc.setState(0xd48a, 0xb477, 0x26e0, 0x39cc, 0x1032, 0x135c, 0x1, 0x0);
        gbc.writeMem(0xd48a, { 0xbc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb477, gbc.sp());
        EXPECT(0xd48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd48a));
        // BC 00AB
        gbc.setState(0x1ea, 0x99a, 0xa200, 0x1ed4, 0x66e1, 0x2c25, 0x1, 0x0);
        gbc.writeMem(0x1ea, { 0xbc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00AC
        gbc.setState(0xa625, 0xf5f0, 0xdbd0, 0x64eb, 0x1c9e, 0xee88, 0x1, 0x0);
        gbc.writeMem(0xa625, { 0xbc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0xa626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa625));
        // BC 00AD
        gbc.setState(0x5755, 0x9678, 0x8ce0, 0xf4a3, 0xaa5d, 0x249, 0x1, 0x1);
        gbc.writeMem(0x5755, { 0xbc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9678, gbc.sp());
        EXPECT(0x5756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00AE
        gbc.setState(0xb79e, 0x3c30, 0x3980, 0xf67f, 0xda82, 0xe47f, 0x0, 0x0);
        gbc.writeMem(0xb79e, { 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3c30, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb79e));
        // BC 00AF
        gbc.setState(0xd1ee, 0x3086, 0x5dd0, 0xeb40, 0x1204, 0xc533, 0x1, 0x1);
        gbc.writeMem(0xd1ee, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3086, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd1ee));
        // BC 00B0
        gbc.setState(0xb25e, 0xd24b, 0x19d0, 0xceb2, 0xec19, 0x3d10, 0x1, 0x1);
        gbc.writeMem(0xb25e, { 0xbc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd24b, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb25e));
        // BC 00B1
        gbc.setState(0xc3f2, 0x2ae2, 0xefd0, 0xcc96, 0x300d, 0x1af8, 0x1, 0x1);
        gbc.writeMem(0xc3f2, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ae2, gbc.sp());
        EXPECT(0xc3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc3f2));
        // BC 00B2
        gbc.setState(0xe419, 0x2c95, 0x71c0, 0x876c, 0x48e9, 0x2b69, 0x1, 0x1);
        gbc.writeMem(0xe419, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c95, gbc.sp());
        EXPECT(0xe41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe419));
        // BC 00B4
        gbc.setState(0x9692, 0x764, 0x82b0, 0x33b, 0xf6bd, 0x68c3, 0x1, 0x1);
        gbc.writeMem(0x9692, { 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9692));
        // BC 00B5
        gbc.setState(0xd184, 0x6016, 0xd6d0, 0xf575, 0x6d55, 0x5eb2, 0x1, 0x0);
        gbc.writeMem(0xd184, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0xd185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd184));
        // BC 00B6
        gbc.setState(0x8ba5, 0xbff8, 0x7640, 0xaa9b, 0xc56e, 0x29c8, 0x1, 0x0);
        gbc.writeMem(0x8ba5, { 0xbc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8ba5));
        // BC 00B7
        gbc.setState(0x4453, 0x27e0, 0xc70, 0x41a7, 0x8cbd, 0x127c, 0x0, 0x1);
        gbc.writeMem(0x4453, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x27e0, gbc.sp());
        EXPECT(0x4454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00B8
        gbc.setState(0x5c59, 0xae4b, 0xc200, 0xa2f3, 0x4f1f, 0xada, 0x1, 0x0);
        gbc.writeMem(0x5c59, { 0xbc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0x5c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00B9
        gbc.setState(0x48b6, 0x1f1a, 0xe7c0, 0x1e02, 0xb9e8, 0x157f, 0x0, 0x0);
        gbc.writeMem(0x48b6, { 0xbc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f1a, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00BA
        gbc.setState(0xb5b4, 0x6340, 0x4690, 0xe147, 0x9ceb, 0x4110, 0x1, 0x0);
        gbc.writeMem(0xb5b4, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb5b4));
        // BC 00BB
        gbc.setState(0xc0b8, 0x374d, 0x3390, 0xa61c, 0xa25, 0xa69d, 0x1, 0x0);
        gbc.writeMem(0xc0b8, { 0xbc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0xc0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc0b8));
        // BC 00BC
        gbc.setState(0xe925, 0x8bc9, 0x2e10, 0x25e6, 0x83d6, 0x3c6b, 0x1, 0x0);
        gbc.writeMem(0xe925, { 0xbc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8bc9, gbc.sp());
        EXPECT(0xe926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe925));
        // BC 00BD
        gbc.setState(0x86ea, 0xd035, 0x3900, 0xeaf5, 0xa53e, 0x75da, 0x0, 0x0);
        gbc.writeMem(0x86ea, { 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd035, gbc.sp());
        EXPECT(0x86eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x86ea));
        // BC 00BE
        gbc.setState(0x56f6, 0xe2d3, 0xea80, 0x3bb9, 0x1e0, 0x258b, 0x1, 0x0);
        gbc.writeMem(0x56f6, { 0xbc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2d3, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00BF
        gbc.setState(0x86d8, 0x9199, 0x5da0, 0xab03, 0xceb1, 0x77ea, 0x0, 0x0);
        gbc.writeMem(0x86d8, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x86d8));
        // BC 00C0
        gbc.setState(0xed9c, 0x9086, 0x9a40, 0x5695, 0x790a, 0xb0f1, 0x1, 0x1);
        gbc.writeMem(0xed9c, { 0xbc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9086, gbc.sp());
        EXPECT(0xed9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xed9c));
        // BC 00C1
        gbc.setState(0x9806, 0xf1e8, 0xdc70, 0xf4ed, 0xf851, 0xeed9, 0x0, 0x0);
        gbc.writeMem(0x9806, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf1e8, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9806));
        // BC 00C2
        gbc.setState(0xb462, 0xc91c, 0x41d0, 0x7a90, 0xa303, 0x2f52, 0x0, 0x1);
        gbc.writeMem(0xb462, { 0xbc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc91c, gbc.sp());
        EXPECT(0xb463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb462));
        // BC 00C3
        gbc.setState(0xe501, 0x694c, 0x59b0, 0x24f3, 0xd21a, 0xf2b5, 0x0, 0x0);
        gbc.writeMem(0xe501, { 0xbc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0xe502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe501));
        // BC 00C4
        gbc.setState(0xc423, 0x88b, 0x1450, 0x68d9, 0x7a04, 0x9a85, 0x0, 0x0);
        gbc.writeMem(0xc423, { 0xbc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0xc424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc423));
        // BC 00C5
        gbc.setState(0x9bbe, 0x2c91, 0xf690, 0x7ca5, 0xe609, 0x5761, 0x0, 0x0);
        gbc.writeMem(0x9bbe, { 0xbc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9bbe));
        // BC 00C6
        gbc.setState(0x2316, 0xaa51, 0xc460, 0xc3ae, 0x834a, 0x5504, 0x0, 0x1);
        gbc.writeMem(0x2316, { 0xbc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0x2317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00C7
        gbc.setState(0x3f07, 0xfa82, 0x8c50, 0xe996, 0x576d, 0x2842, 0x1, 0x1);
        gbc.writeMem(0x3f07, { 0xbc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfa82, gbc.sp());
        EXPECT(0x3f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00C8
        gbc.setState(0x94d6, 0xc8ea, 0x54d0, 0x7c19, 0xefa8, 0xd25d, 0x1, 0x0);
        gbc.writeMem(0x94d6, { 0xbc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc8ea, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x94d6));
        // BC 00CA
        gbc.setState(0xe83b, 0x707d, 0x7910, 0x3b3e, 0x887e, 0xd220, 0x0, 0x0);
        gbc.writeMem(0xe83b, { 0xbc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x707d, gbc.sp());
        EXPECT(0xe83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe83b));
        // BC 00CB
        gbc.setState(0x7d33, 0xa2d4, 0x360, 0xc8f5, 0xddc1, 0xf768, 0x0, 0x0);
        gbc.writeMem(0x7d33, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2d4, gbc.sp());
        EXPECT(0x7d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00CD
        gbc.setState(0x5736, 0xa42b, 0xa650, 0x44ca, 0xc1e8, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x5736, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00CF
        gbc.setState(0xbdb5, 0x6ec8, 0xb480, 0x93d, 0xbd2c, 0x5b2d, 0x1, 0x1);
        gbc.writeMem(0xbdb5, { 0xbc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbdb5));
        // BC 00D0
        gbc.setState(0xad2e, 0x6140, 0x9ed0, 0xd518, 0xc810, 0xc616, 0x0, 0x0);
        gbc.writeMem(0xad2e, { 0xbc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6140, gbc.sp());
        EXPECT(0xad2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xad2e));
        // BC 00D1
        gbc.setState(0xf4, 0xced2, 0x2a00, 0x4e9e, 0x93be, 0x3184, 0x0, 0x1);
        gbc.writeMem(0xf4, { 0xbc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00D2
        gbc.setState(0xa143, 0x734b, 0xbdb0, 0x3a6, 0x83fc, 0x3fb7, 0x1, 0x0);
        gbc.writeMem(0xa143, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0xa144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa143));
        // BC 00D3
        gbc.setState(0xdfd9, 0xa89d, 0x38c0, 0x3303, 0xf13c, 0x7015, 0x1, 0x1);
        gbc.writeMem(0xdfd9, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdfd9));
        // BC 00D4
        gbc.setState(0xb2d8, 0xf311, 0xa1c0, 0x412c, 0x84cf, 0x2e8b, 0x0, 0x0);
        gbc.writeMem(0xb2d8, { 0xbc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf311, gbc.sp());
        EXPECT(0xb2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb2d8));
        // BC 00D5
        gbc.setState(0x218b, 0xfe7c, 0xd10, 0xd3c9, 0x8786, 0x5cdf, 0x0, 0x1);
        gbc.writeMem(0x218b, { 0xbc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0x218c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00D6
        gbc.setState(0x9a07, 0xace4, 0x8b90, 0xe44c, 0x58a3, 0x85e6, 0x0, 0x1);
        gbc.writeMem(0x9a07, { 0xbc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9a07));
        // BC 00D7
        gbc.setState(0xdd3a, 0x5e50, 0xd210, 0x1870, 0xccec, 0xc8a4, 0x1, 0x0);
        gbc.writeMem(0xdd3a, { 0xbc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5e50, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdd3a));
        // BC 00D8
        gbc.setState(0x7fe6, 0x90fa, 0x2680, 0xdbc9, 0x16b1, 0x60f5, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xbc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x90fa, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00D9
        gbc.setState(0x8e32, 0x5b72, 0xe410, 0x75ef, 0x61ac, 0x53e2, 0x0, 0x0);
        gbc.writeMem(0x8e32, { 0xbc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0x8e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8e32));
        // BC 00DA
        gbc.setState(0xd557, 0x80d1, 0xa940, 0xc32f, 0xbe4d, 0x2e02, 0x1, 0x0);
        gbc.writeMem(0xd557, { 0xbc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x80d1, gbc.sp());
        EXPECT(0xd558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd557));
        // BC 00DB
        gbc.setState(0x569e, 0xce71, 0xc800, 0x3612, 0x8ded, 0x701d, 0x0, 0x0);
        gbc.writeMem(0x569e, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xce71, gbc.sp());
        EXPECT(0x569f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00DC
        gbc.setState(0x10f4, 0xb9bf, 0x22e0, 0xe1af, 0xb5d4, 0x3720, 0x1, 0x1);
        gbc.writeMem(0x10f4, { 0xbc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0x10f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00DD
        gbc.setState(0x4991, 0xebf8, 0xa0b0, 0xa4b1, 0xe453, 0xa255, 0x0, 0x1);
        gbc.writeMem(0x4991, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xebf8, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00DE
        gbc.setState(0x2cee, 0x22e4, 0x94d0, 0x8421, 0x384d, 0x9878, 0x1, 0x0);
        gbc.writeMem(0x2cee, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0x2cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00DF
        gbc.setState(0x1444, 0xc31d, 0x3ff0, 0x78dd, 0x47e8, 0xf6e, 0x1, 0x0);
        gbc.writeMem(0x1444, { 0xbc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x1445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E0
        gbc.setState(0x844a, 0x7328, 0x42a0, 0xd227, 0x47ae, 0xdee3, 0x1, 0x1);
        gbc.writeMem(0x844a, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x844a));
        // BC 00E1
        gbc.setState(0x17d1, 0x4802, 0xe1e0, 0x7daf, 0x2c2, 0xc90c, 0x1, 0x0);
        gbc.writeMem(0x17d1, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4802, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E2
        gbc.setState(0xad68, 0x48d6, 0xcc30, 0x9c2c, 0x1f32, 0x7117, 0x0, 0x0);
        gbc.writeMem(0xad68, { 0xbc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x48d6, gbc.sp());
        EXPECT(0xad69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xad68));
        // BC 00E3
        gbc.setState(0x23a1, 0xe016, 0xfc60, 0xc4e, 0x15b4, 0xea0b, 0x0, 0x1);
        gbc.writeMem(0x23a1, { 0xbc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe016, gbc.sp());
        EXPECT(0x23a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E4
        gbc.setState(0x5a52, 0x90d9, 0x8220, 0x92c1, 0x5284, 0x1fc1, 0x0, 0x1);
        gbc.writeMem(0x5a52, { 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x90d9, gbc.sp());
        EXPECT(0x5a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E5
        gbc.setState(0x2005, 0xe24d, 0x6ab0, 0x5836, 0x2310, 0x5bd1, 0x1, 0x0);
        gbc.writeMem(0x2005, { 0xbc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe24d, gbc.sp());
        EXPECT(0x2006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E6
        gbc.setState(0xbf90, 0xf26, 0x4250, 0x599b, 0xcee1, 0x29ac, 0x0, 0x1);
        gbc.writeMem(0xbf90, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbf90));
        // BC 00E7
        gbc.setState(0x35, 0x35a8, 0xc190, 0x308b, 0x7fe2, 0x582f, 0x0, 0x0);
        gbc.writeMem(0x35, { 0xbc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x35a8, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E8
        gbc.setState(0x538a, 0xb2ca, 0x1290, 0x80e4, 0xea83, 0xf5d, 0x0, 0x1);
        gbc.writeMem(0x538a, { 0xbc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb2ca, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00E9
        gbc.setState(0x7b12, 0x64c9, 0xe4b0, 0x7c40, 0x8f58, 0x11c8, 0x1, 0x1);
        gbc.writeMem(0x7b12, { 0xbc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00EB
        gbc.setState(0x46b4, 0xc32c, 0x65f0, 0xe57b, 0x9443, 0xf5c4, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0xbc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc32c, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00EC
        gbc.setState(0x453d, 0xe8da, 0x5a30, 0xa1d4, 0xdd50, 0x7382, 0x1, 0x1);
        gbc.writeMem(0x453d, { 0xbc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe8da, gbc.sp());
        EXPECT(0x453e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00ED
        gbc.setState(0xe2c5, 0x88c9, 0x3a0, 0x29d2, 0x4029, 0xd40f, 0x0, 0x0);
        gbc.writeMem(0xe2c5, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88c9, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe2c5));
        // BC 00EE
        gbc.setState(0xea44, 0xbf3, 0xcd0, 0x4400, 0x2ba7, 0x24ae, 0x1, 0x0);
        gbc.writeMem(0xea44, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbf3, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xea44));
        // BC 00EF
        gbc.setState(0xaa06, 0xd153, 0x1110, 0xeabb, 0xdbd, 0xcb8, 0x0, 0x0);
        gbc.writeMem(0xaa06, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd153, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaa06));
        // BC 00F0
        gbc.setState(0xc141, 0xec96, 0x2700, 0xfe17, 0xa26f, 0xa12e, 0x1, 0x1);
        gbc.writeMem(0xc141, { 0xbc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc141));
        // BC 00F1
        gbc.setState(0xa1ce, 0xa059, 0xd9d0, 0xd21, 0x4811, 0x2f7d, 0x1, 0x1);
        gbc.writeMem(0xa1ce, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa059, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa1ce));
        // BC 00F2
        gbc.setState(0x46d7, 0x80b1, 0x9cc0, 0x6ae1, 0x7bce, 0x379a, 0x1, 0x1);
        gbc.writeMem(0x46d7, { 0xbc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0x46d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00F3
        gbc.setState(0xdb90, 0xf7f2, 0xc720, 0x5bce, 0x781, 0x8225, 0x1, 0x0);
        gbc.writeMem(0xdb90, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdb90));
        // BC 00F4
        gbc.setState(0x1c3b, 0x1ba2, 0x1c50, 0xa1bd, 0xcb6a, 0x2700, 0x1, 0x0);
        gbc.writeMem(0x1c3b, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00F5
        gbc.setState(0x7225, 0x946f, 0x2690, 0x1f78, 0xdae8, 0xb0fc, 0x0, 0x0);
        gbc.writeMem(0x7225, { 0xbc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x7226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00F6
        gbc.setState(0x52d5, 0xcd75, 0x5210, 0x9814, 0xb67a, 0xe112, 0x1, 0x0);
        gbc.writeMem(0x52d5, { 0xbc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcd75, gbc.sp());
        EXPECT(0x52d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00F7
        gbc.setState(0xd98b, 0xd6f, 0xad70, 0xdc51, 0x6b1e, 0xb5b5, 0x0, 0x1);
        gbc.writeMem(0xd98b, { 0xbc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd6f, gbc.sp());
        EXPECT(0xd98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd98b));
        // BC 00F8
        gbc.setState(0xcbec, 0x4f17, 0x690, 0x2cdc, 0x6da3, 0x7a4e, 0x1, 0x0);
        gbc.writeMem(0xcbec, { 0xbc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0xcbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcbec));
        // BC 00F9
        gbc.setState(0x87d1, 0xe259, 0xfcf0, 0x2f9c, 0xdc69, 0xf80, 0x0, 0x1);
        gbc.writeMem(0x87d1, { 0xbc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0x87d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x87d1));
        // BC 00FA
        gbc.setState(0x35f9, 0x8ca, 0x33c0, 0x7509, 0xc8c7, 0x6434, 0x0, 0x0);
        gbc.writeMem(0x35f9, { 0xbc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8ca, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 00FB
        gbc.setState(0x89ab, 0x4126, 0x9420, 0x493c, 0x769, 0x14fd, 0x1, 0x0);
        gbc.writeMem(0x89ab, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4126, gbc.sp());
        EXPECT(0x89ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x89ab));
        // BC 00FC
        gbc.setState(0xaa55, 0x3097, 0x5120, 0x163c, 0x5de7, 0xb33f, 0x0, 0x1);
        gbc.writeMem(0xaa55, { 0xbc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3097, gbc.sp());
        EXPECT(0xaa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaa55));
        // BC 00FD
        gbc.setState(0x77e9, 0x5379, 0xb720, 0xbd4c, 0x7d0b, 0x6142, 0x0, 0x1);
        gbc.writeMem(0x77e9, { 0xbc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5379, gbc.sp());
        EXPECT(0x77ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00FE
        gbc.setState(0x3395, 0x4b93, 0xf270, 0xd656, 0x56cb, 0x78c9, 0x1, 0x1);
        gbc.writeMem(0x3395, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0x3396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 00FF
        gbc.setState(0x427c, 0x6cbb, 0x7970, 0x4d64, 0x1e2a, 0xea89, 0x0, 0x0);
        gbc.writeMem(0x427c, { 0xbc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6cbb, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0101
        gbc.setState(0x556e, 0x83e2, 0xdc90, 0x9564, 0xf693, 0xd5cd, 0x0, 0x0);
        gbc.writeMem(0x556e, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x83e2, gbc.sp());
        EXPECT(0x556f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0102
        gbc.setState(0xd49b, 0x5b16, 0x4650, 0xe08, 0xa1c9, 0x4fcb, 0x1, 0x1);
        gbc.writeMem(0xd49b, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xd49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd49b));
        // BC 0103
        gbc.setState(0x2a58, 0x5378, 0x9c40, 0x6bf1, 0x649b, 0xdd4e, 0x1, 0x1);
        gbc.writeMem(0x2a58, { 0xbc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5378, gbc.sp());
        EXPECT(0x2a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0104
        gbc.setState(0x1ef3, 0x15be, 0x1a20, 0xaa06, 0xb574, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0x1ef3, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0x1ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0105
        gbc.setState(0x947b, 0xafa5, 0x57f0, 0x64bc, 0xf56d, 0xa407, 0x0, 0x1);
        gbc.writeMem(0x947b, { 0xbc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xafa5, gbc.sp());
        EXPECT(0x947c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x947b));
        // BC 0106
        gbc.setState(0x71ae, 0xa7d8, 0xb30, 0xca89, 0xf703, 0xdb2a, 0x0, 0x1);
        gbc.writeMem(0x71ae, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa7d8, gbc.sp());
        EXPECT(0x71af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0107
        gbc.setState(0xcc5a, 0x54d4, 0x5420, 0x2648, 0x510e, 0xf2a1, 0x1, 0x0);
        gbc.writeMem(0xcc5a, { 0xbc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0xcc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcc5a));
        // BC 0109
        gbc.setState(0x2cdf, 0x18af, 0x9370, 0x39ce, 0x3e25, 0x6c5b, 0x0, 0x0);
        gbc.writeMem(0x2cdf, { 0xbc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x18af, gbc.sp());
        EXPECT(0x2ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 010A
        gbc.setState(0x5660, 0x78a3, 0x1a50, 0x1cf9, 0xf511, 0x51b2, 0x0, 0x1);
        gbc.writeMem(0x5660, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x78a3, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 010B
        gbc.setState(0x2e1c, 0xadab, 0x4d30, 0xdb78, 0x996a, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x2e1c, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xadab, gbc.sp());
        EXPECT(0x2e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 010E
        gbc.setState(0xa21d, 0xc625, 0x54a0, 0x97bb, 0x5eaa, 0xd959, 0x1, 0x0);
        gbc.writeMem(0xa21d, { 0xbc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc625, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa21d));
        // BC 010F
        gbc.setState(0x8484, 0x8c78, 0xba70, 0x6a16, 0xac74, 0xf244, 0x0, 0x0);
        gbc.writeMem(0x8484, { 0xbc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8484));
        // BC 0110
        gbc.setState(0x4165, 0xbbc8, 0x7450, 0x2c28, 0x7ceb, 0xac24, 0x0, 0x0);
        gbc.writeMem(0x4165, { 0xbc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbbc8, gbc.sp());
        EXPECT(0x4166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0111
        gbc.setState(0xe1ac, 0xd81a, 0xdc50, 0x46b1, 0xc1b4, 0xc73c, 0x1, 0x1);
        gbc.writeMem(0xe1ac, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe1ac));
        // BC 0112
        gbc.setState(0x4c88, 0x2906, 0xd970, 0xa673, 0xf4a8, 0x82b6, 0x0, 0x1);
        gbc.writeMem(0x4c88, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0113
        gbc.setState(0x2184, 0x60e9, 0xe2d0, 0xf06f, 0xb6b6, 0x57c, 0x1, 0x0);
        gbc.writeMem(0x2184, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x60e9, gbc.sp());
        EXPECT(0x2185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0114
        gbc.setState(0x53f2, 0xe4da, 0x6890, 0x2677, 0x77bb, 0x36e4, 0x1, 0x0);
        gbc.writeMem(0x53f2, { 0xbc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe4da, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0115
        gbc.setState(0x935e, 0xbee6, 0x2f30, 0x2ef4, 0x52f7, 0x2de6, 0x1, 0x1);
        gbc.writeMem(0x935e, { 0xbc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbee6, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x935e));
        // BC 0116
        gbc.setState(0xa02b, 0x7e61, 0xbd0, 0x8d33, 0x495f, 0x60f6, 0x0, 0x1);
        gbc.writeMem(0xa02b, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0xa02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa02b));
        // BC 0117
        gbc.setState(0x3dea, 0xea43, 0x4e0, 0xe4b0, 0xfb8e, 0x8ca9, 0x1, 0x1);
        gbc.writeMem(0x3dea, { 0xbc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xea43, gbc.sp());
        EXPECT(0x3deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0118
        gbc.setState(0x5b6, 0x9263, 0x9150, 0x73fc, 0xb358, 0x2429, 0x1, 0x0);
        gbc.writeMem(0x5b6, { 0xbc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0x5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0119
        gbc.setState(0x9527, 0x6d23, 0xe390, 0x234c, 0x7b89, 0x278, 0x1, 0x0);
        gbc.writeMem(0x9527, { 0xbc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9527));
        // BC 011A
        gbc.setState(0x3158, 0xb6b7, 0x1430, 0x4c10, 0x8286, 0x7d99, 0x1, 0x0);
        gbc.writeMem(0x3158, { 0xbc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb6b7, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 011B
        gbc.setState(0x6f3, 0x939, 0xcb80, 0xbe25, 0x761d, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0x6f3, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 011C
        gbc.setState(0xa117, 0x6f72, 0xf3f0, 0x88d0, 0x8246, 0x1c13, 0x1, 0x0);
        gbc.writeMem(0xa117, { 0xbc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6f72, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa117));
        // BC 011D
        gbc.setState(0xdf19, 0x7232, 0xed00, 0xa370, 0xd160, 0x60df, 0x1, 0x1);
        gbc.writeMem(0xdf19, { 0xbc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdf19));
        // BC 011E
        gbc.setState(0xb98d, 0x194e, 0x4d70, 0x26ef, 0x133d, 0x768, 0x0, 0x0);
        gbc.writeMem(0xb98d, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xb98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb98d));
        // BC 011F
        gbc.setState(0x3c93, 0x3581, 0x86e0, 0xe61, 0x7d69, 0xe2f9, 0x0, 0x1);
        gbc.writeMem(0x3c93, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3581, gbc.sp());
        EXPECT(0x3c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0120
        gbc.setState(0x9f0f, 0xdabe, 0xf970, 0x1a20, 0x16ad, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0x9f0f, { 0xbc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x9f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9f0f));
        // BC 0121
        gbc.setState(0xee30, 0xd454, 0x5810, 0x2005, 0x9972, 0x1c4b, 0x1, 0x1);
        gbc.writeMem(0xee30, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xee30));
        // BC 0122
        gbc.setState(0xddf, 0x60b4, 0x3900, 0x1a9, 0x7279, 0x71a4, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0xde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0123
        gbc.setState(0x5e9e, 0x3690, 0xb830, 0x3e6f, 0x109d, 0x84e7, 0x0, 0x0);
        gbc.writeMem(0x5e9e, { 0xbc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0x5e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0124
        gbc.setState(0x97dd, 0x67dd, 0xf150, 0xb5fd, 0x8f0, 0x6185, 0x1, 0x0);
        gbc.writeMem(0x97dd, { 0xbc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x97dd));
        // BC 0125
        gbc.setState(0x15ea, 0x2a46, 0x1070, 0xc295, 0x37ea, 0xc0f5, 0x0, 0x1);
        gbc.writeMem(0x15ea, { 0xbc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0126
        gbc.setState(0x2816, 0x71f5, 0x4d40, 0x8837, 0x5183, 0x2571, 0x0, 0x1);
        gbc.writeMem(0x2816, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x71f5, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0127
        gbc.setState(0x5248, 0x8baf, 0x3f70, 0x81db, 0x618a, 0x7a63, 0x0, 0x0);
        gbc.writeMem(0x5248, { 0xbc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8baf, gbc.sp());
        EXPECT(0x5249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0128
        gbc.setState(0xb4b0, 0x1551, 0xc330, 0xf44b, 0xd956, 0xfb8f, 0x0, 0x1);
        gbc.writeMem(0xb4b0, { 0xbc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0xb4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb4b0));
        // BC 0129
        gbc.setState(0xca3, 0x39b6, 0x890, 0x89b1, 0x64aa, 0x5297, 0x0, 0x0);
        gbc.writeMem(0xca3, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 012A
        gbc.setState(0xdb6a, 0xee06, 0x5fe0, 0x2824, 0x24, 0x4c71, 0x0, 0x1);
        gbc.writeMem(0xdb6a, { 0xbc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0xdb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdb6a));
        // BC 012B
        gbc.setState(0xb4b7, 0x2fc8, 0x4820, 0xc221, 0xd782, 0xfb83, 0x1, 0x1);
        gbc.writeMem(0xb4b7, { 0xbc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2fc8, gbc.sp());
        EXPECT(0xb4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb4b7));
        // BC 012C
        gbc.setState(0x5457, 0x9b16, 0x9b30, 0x78b9, 0xa4fe, 0x8d5c, 0x1, 0x0);
        gbc.writeMem(0x5457, { 0xbc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 012D
        gbc.setState(0x7ca8, 0xeffd, 0x2ca0, 0x64d3, 0xa37, 0xf190, 0x1, 0x0);
        gbc.writeMem(0x7ca8, { 0xbc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeffd, gbc.sp());
        EXPECT(0x7ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 012E
        gbc.setState(0x8188, 0x1552, 0xf950, 0xf94e, 0x3837, 0xe70c, 0x1, 0x1);
        gbc.writeMem(0x8188, { 0xbc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0x8189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8188));
        // BC 012F
        gbc.setState(0x63a4, 0x8db7, 0x4730, 0x93ec, 0x4f52, 0xf1af, 0x1, 0x0);
        gbc.writeMem(0x63a4, { 0xbc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x63a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0130
        gbc.setState(0x4e5d, 0x3ae6, 0x1a00, 0x9336, 0xdc15, 0xc23c, 0x0, 0x0);
        gbc.writeMem(0x4e5d, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x4e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0132
        gbc.setState(0xc6d1, 0xd85a, 0xdb50, 0xb1cd, 0xb0bf, 0xbd46, 0x0, 0x0);
        gbc.writeMem(0xc6d1, { 0xbc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0xc6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc6d1));
        // BC 0133
        gbc.setState(0xe7e7, 0x48b0, 0x58c0, 0x50d2, 0xa13d, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xe7e7, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x48b0, gbc.sp());
        EXPECT(0xe7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe7e7));
        // BC 0135
        gbc.setState(0x70b3, 0xfcee, 0x23b0, 0x8896, 0xf4ce, 0x3db4, 0x1, 0x0);
        gbc.writeMem(0x70b3, { 0xbc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfcee, gbc.sp());
        EXPECT(0x70b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0136
        gbc.setState(0x732f, 0xb00c, 0x2960, 0xef8a, 0x6c03, 0x6a3c, 0x0, 0x1);
        gbc.writeMem(0x732f, { 0xbc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb00c, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0137
        gbc.setState(0x9c5e, 0xe490, 0x94a0, 0xbac2, 0xce50, 0x5ed2, 0x1, 0x0);
        gbc.writeMem(0x9c5e, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9c5e));
        // BC 0138
        gbc.setState(0x2dbf, 0xd19b, 0x5d40, 0x1dcd, 0xd821, 0x1ce9, 0x0, 0x1);
        gbc.writeMem(0x2dbf, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0x2dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0139
        gbc.setState(0x2d2f, 0xce78, 0xfc90, 0xeee8, 0x429b, 0xc688, 0x1, 0x0);
        gbc.writeMem(0x2d2f, { 0xbc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xce78, gbc.sp());
        EXPECT(0x2d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 013A
        gbc.setState(0xa197, 0xd1e2, 0xbf80, 0x7e4a, 0x406f, 0xad1d, 0x1, 0x1);
        gbc.writeMem(0xa197, { 0xbc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd1e2, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa197));
        // BC 013B
        gbc.setState(0x9084, 0x67dd, 0xff00, 0xf62, 0x129f, 0x7254, 0x0, 0x1);
        gbc.writeMem(0x9084, { 0xbc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x9085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9084));
        // BC 013C
        gbc.setState(0x5318, 0x15c3, 0xe120, 0x32f8, 0xe5b6, 0xe2f5, 0x0, 0x0);
        gbc.writeMem(0x5318, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 013D
        gbc.setState(0xdc81, 0xc77e, 0x7a00, 0x8b1, 0x9eb, 0x34ea, 0x0, 0x1);
        gbc.writeMem(0xdc81, { 0xbc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc77e, gbc.sp());
        EXPECT(0xdc82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdc81));
        // BC 013E
        gbc.setState(0x40b1, 0x7b07, 0x7fb0, 0xa22, 0x1a9, 0xd38f, 0x1, 0x1);
        gbc.writeMem(0x40b1, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 013F
        gbc.setState(0x46d5, 0xea8, 0x8e20, 0xcd64, 0x1db8, 0x5028, 0x1, 0x1);
        gbc.writeMem(0x46d5, { 0xbc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xea8, gbc.sp());
        EXPECT(0x46d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0141
        gbc.setState(0x2745, 0xfd57, 0x3d50, 0xe875, 0x3972, 0xd221, 0x0, 0x0);
        gbc.writeMem(0x2745, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0x2746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0142
        gbc.setState(0xb738, 0xec7f, 0x62b0, 0xa608, 0x757f, 0x6f4, 0x0, 0x1);
        gbc.writeMem(0xb738, { 0xbc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xec7f, gbc.sp());
        EXPECT(0xb739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb738));
        // BC 0143
        gbc.setState(0xd037, 0x147b, 0xd370, 0xadd5, 0x5728, 0x4bb4, 0x1, 0x1);
        gbc.writeMem(0xd037, { 0xbc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0xd038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd037));
        // BC 0144
        gbc.setState(0x77c4, 0x2a1, 0xe1a0, 0x8607, 0x5aa0, 0x851e, 0x1, 0x0);
        gbc.writeMem(0x77c4, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0145
        gbc.setState(0x39b, 0x9b15, 0xb7d0, 0x2aff, 0x5083, 0x71cf, 0x1, 0x1);
        gbc.writeMem(0x39b, { 0xbc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0x39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0146
        gbc.setState(0x9d81, 0xd005, 0x8ea0, 0x74b1, 0xaa18, 0xfb3f, 0x0, 0x0);
        gbc.writeMem(0x9d81, { 0xbc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd005, gbc.sp());
        EXPECT(0x9d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9d81));
        // BC 0147
        gbc.setState(0xd5c1, 0x5e7e, 0x35a0, 0x6b02, 0x6a14, 0x1e33, 0x1, 0x0);
        gbc.writeMem(0xd5c1, { 0xbc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5e7e, gbc.sp());
        EXPECT(0xd5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd5c1));
        // BC 0149
        gbc.setState(0x96ad, 0x4f63, 0xa70, 0xa5bb, 0xd9d, 0xe6b1, 0x0, 0x1);
        gbc.writeMem(0x96ad, { 0xbc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0x96ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x96ad));
        // BC 014B
        gbc.setState(0xbb6a, 0x762f, 0x4430, 0x385c, 0xf192, 0x93f2, 0x1, 0x0);
        gbc.writeMem(0xbb6a, { 0xbc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x762f, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbb6a));
        // BC 014C
        gbc.setState(0xa325, 0xfe8b, 0xf210, 0xdec1, 0x10b9, 0x461c, 0x0, 0x0);
        gbc.writeMem(0xa325, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfe8b, gbc.sp());
        EXPECT(0xa326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa325));
        // BC 014E
        gbc.setState(0x7c2a, 0xd449, 0x1e80, 0x6f59, 0x4980, 0xa48a, 0x1, 0x0);
        gbc.writeMem(0x7c2a, { 0xbc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd449, gbc.sp());
        EXPECT(0x7c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 014F
        gbc.setState(0x4569, 0xc683, 0xab00, 0x6c6e, 0x456c, 0x95a9, 0x0, 0x0);
        gbc.writeMem(0x4569, { 0xbc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0150
        gbc.setState(0x7420, 0xbd15, 0x1a00, 0x309f, 0x8ffe, 0x7d79, 0x0, 0x1);
        gbc.writeMem(0x7420, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0x7421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0151
        gbc.setState(0x2f55, 0x5090, 0xcb70, 0x77ed, 0xf803, 0x8aa9, 0x0, 0x0);
        gbc.writeMem(0x2f55, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5090, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0152
        gbc.setState(0x4aba, 0x7e23, 0x35f0, 0x1ffa, 0x693a, 0xf9e5, 0x0, 0x0);
        gbc.writeMem(0x4aba, { 0xbc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e23, gbc.sp());
        EXPECT(0x4abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0153
        gbc.setState(0x7762, 0xc54f, 0x8f90, 0x42db, 0x117d, 0x40d5, 0x1, 0x1);
        gbc.writeMem(0x7762, { 0xbc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc54f, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0154
        gbc.setState(0x305b, 0x9c15, 0x6f60, 0xd4b2, 0x21f0, 0x606, 0x1, 0x0);
        gbc.writeMem(0x305b, { 0xbc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0155
        gbc.setState(0xb2ec, 0x82bc, 0xc180, 0x7b74, 0xd8cb, 0x8563, 0x0, 0x1);
        gbc.writeMem(0xb2ec, { 0xbc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x82bc, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb2ec));
        // BC 0156
        gbc.setState(0x891d, 0x705c, 0xe7a0, 0x20b8, 0x3c27, 0xc29e, 0x0, 0x0);
        gbc.writeMem(0x891d, { 0xbc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x891d));
        // BC 0157
        gbc.setState(0x541b, 0xa227, 0x7200, 0x54b8, 0x6573, 0x796b, 0x1, 0x0);
        gbc.writeMem(0x541b, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa227, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0158
        gbc.setState(0x120c, 0x6a68, 0x9bc0, 0xa0ee, 0x8726, 0xd5c5, 0x0, 0x1);
        gbc.writeMem(0x120c, { 0xbc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0x120d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0159
        gbc.setState(0x3313, 0xbdea, 0x8df0, 0xff79, 0x529c, 0xa968, 0x0, 0x0);
        gbc.writeMem(0x3313, { 0xbc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x3314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 015A
        gbc.setState(0xad10, 0xa859, 0x5230, 0x8280, 0x843, 0x3461, 0x0, 0x1);
        gbc.writeMem(0xad10, { 0xbc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0xad11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xad10));
        // BC 015B
        gbc.setState(0x9b71, 0x161f, 0x6020, 0xcbff, 0x13c0, 0x99d3, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x161f, gbc.sp());
        EXPECT(0x9b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9b71));
        // BC 015C
        gbc.setState(0xd065, 0x2bce, 0x8c60, 0x27e4, 0x3adf, 0x34c0, 0x0, 0x0);
        gbc.writeMem(0xd065, { 0xbc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0xd066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd065));
        // BC 015D
        gbc.setState(0x8a83, 0x4085, 0x9480, 0xd039, 0xc602, 0x4f84, 0x0, 0x1);
        gbc.writeMem(0x8a83, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4085, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8a83));
        // BC 015E
        gbc.setState(0x6e77, 0x6a56, 0x6cb0, 0x84de, 0x7fa0, 0xea06, 0x1, 0x1);
        gbc.writeMem(0x6e77, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 015F
        gbc.setState(0xea95, 0xadbc, 0xfb30, 0xa6db, 0xa6d3, 0xedac, 0x1, 0x1);
        gbc.writeMem(0xea95, { 0xbc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0xea96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xea95));
        // BC 0160
        gbc.setState(0xa99d, 0x4b00, 0x8620, 0x7e8, 0x2e34, 0xcc81, 0x1, 0x1);
        gbc.writeMem(0xa99d, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4b00, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa99d));
        // BC 0161
        gbc.setState(0x2056, 0x959d, 0x2b00, 0xbeba, 0x2e16, 0x27e9, 0x1, 0x0);
        gbc.writeMem(0x2056, { 0xbc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x959d, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0162
        gbc.setState(0x37b4, 0x4660, 0x3d50, 0x5ec5, 0x2ec0, 0x75be, 0x0, 0x0);
        gbc.writeMem(0x37b4, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4660, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0163
        gbc.setState(0x9e6b, 0xcfdb, 0xfe90, 0x1d4e, 0xc70, 0x620a, 0x1, 0x0);
        gbc.writeMem(0x9e6b, { 0xbc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x9e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9e6b));
        // BC 0164
        gbc.setState(0x4649, 0xe79d, 0x990, 0x5961, 0xe662, 0x99ab, 0x1, 0x1);
        gbc.writeMem(0x4649, { 0xbc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe79d, gbc.sp());
        EXPECT(0x464a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0165
        gbc.setState(0x36a1, 0x322, 0x39d0, 0xcb8a, 0x8578, 0x7498, 0x1, 0x1);
        gbc.writeMem(0x36a1, { 0xbc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x322, gbc.sp());
        EXPECT(0x36a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0166
        gbc.setState(0xe817, 0x675, 0xc940, 0x23a7, 0xb922, 0x8610, 0x1, 0x0);
        gbc.writeMem(0xe817, { 0xbc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0xe818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe817));
        // BC 0168
        gbc.setState(0xb8d8, 0xf875, 0x73f0, 0xce97, 0x28ac, 0xacc0, 0x1, 0x0);
        gbc.writeMem(0xb8d8, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf875, gbc.sp());
        EXPECT(0xb8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb8d8));
        // BC 0169
        gbc.setState(0x8e23, 0xc7be, 0xf130, 0xa1a3, 0x54aa, 0xa520, 0x1, 0x0);
        gbc.writeMem(0x8e23, { 0xbc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc7be, gbc.sp());
        EXPECT(0x8e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8e23));
        // BC 016A
        gbc.setState(0xb3c6, 0x2afb, 0x8e30, 0xbcfd, 0x29b2, 0x10e4, 0x0, 0x1);
        gbc.writeMem(0xb3c6, { 0xbc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2afb, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb3c6));
        // BC 016B
        gbc.setState(0x1ecd, 0x7c7e, 0xc870, 0x38ff, 0x6cc9, 0x92d7, 0x1, 0x1);
        gbc.writeMem(0x1ecd, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7c7e, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 016C
        gbc.setState(0xd206, 0x5ed6, 0xa850, 0x50c1, 0x865e, 0xc2e2, 0x0, 0x1);
        gbc.writeMem(0xd206, { 0xbc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5ed6, gbc.sp());
        EXPECT(0xd207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd206));
        // BC 016D
        gbc.setState(0x1f78, 0x6770, 0xe950, 0xa956, 0xc0d3, 0x195d, 0x0, 0x1);
        gbc.writeMem(0x1f78, { 0xbc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 016E
        gbc.setState(0x4af4, 0x2793, 0x7ef0, 0xf405, 0x83c6, 0xb8ea, 0x0, 0x0);
        gbc.writeMem(0x4af4, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2793, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 016F
        gbc.setState(0x2b75, 0x2a7f, 0xe070, 0xddb3, 0x6a89, 0x3da9, 0x1, 0x1);
        gbc.writeMem(0x2b75, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x2b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0170
        gbc.setState(0x522e, 0xa98d, 0x4370, 0x4dfc, 0x5bee, 0x48bd, 0x0, 0x0);
        gbc.writeMem(0x522e, { 0xbc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa98d, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0171
        gbc.setState(0x60da, 0x40c, 0xeec0, 0x6009, 0xd9d1, 0x2bfc, 0x1, 0x0);
        gbc.writeMem(0x60da, { 0xbc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x40c, gbc.sp());
        EXPECT(0x60db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0173
        gbc.setState(0x4197, 0x6df1, 0x5f50, 0x3e64, 0xb6f5, 0xbe8e, 0x0, 0x1);
        gbc.writeMem(0x4197, { 0xbc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6df1, gbc.sp());
        EXPECT(0x4198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0174
        gbc.setState(0x2c, 0xcc4f, 0x3d90, 0x35a9, 0x832c, 0xb5fb, 0x0, 0x0);
        gbc.writeMem(0x2c, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0x2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0175
        gbc.setState(0x7f59, 0x1ab5, 0x66a0, 0x8af4, 0x52c4, 0x2093, 0x0, 0x1);
        gbc.writeMem(0x7f59, { 0xbc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1ab5, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0176
        gbc.setState(0x267f, 0x17ad, 0x3bf0, 0xa44f, 0x2fff, 0x6bb8, 0x1, 0x0);
        gbc.writeMem(0x267f, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x2680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0177
        gbc.setState(0xbf85, 0x9ab1, 0xa090, 0x85a2, 0x9bde, 0xf518, 0x1, 0x0);
        gbc.writeMem(0xbf85, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9ab1, gbc.sp());
        EXPECT(0xbf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbf85));
        // BC 0178
        gbc.setState(0x2c8b, 0x65b1, 0xa170, 0x9108, 0x2f38, 0x6529, 0x0, 0x1);
        gbc.writeMem(0x2c8b, { 0xbc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x65b1, gbc.sp());
        EXPECT(0x2c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0179
        gbc.setState(0x6a5e, 0x96e8, 0xba0, 0x72df, 0x1ca8, 0xf831, 0x1, 0x1);
        gbc.writeMem(0x6a5e, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 017A
        gbc.setState(0x6b5d, 0xb1bc, 0x4020, 0xd3a4, 0x368c, 0x9b05, 0x1, 0x1);
        gbc.writeMem(0x6b5d, { 0xbc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb1bc, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 017B
        gbc.setState(0x7e23, 0x5aeb, 0x19f0, 0x4dfd, 0xbc95, 0xbbc, 0x0, 0x1);
        gbc.writeMem(0x7e23, { 0xbc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5aeb, gbc.sp());
        EXPECT(0x7e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 017C
        gbc.setState(0x2c44, 0x45e9, 0x1610, 0xdc70, 0x1a9b, 0x360b, 0x1, 0x1);
        gbc.writeMem(0x2c44, { 0xbc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 017D
        gbc.setState(0xb1e3, 0x4129, 0x5410, 0x9a76, 0x16ac, 0x24a8, 0x0, 0x1);
        gbc.writeMem(0xb1e3, { 0xbc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4129, gbc.sp());
        EXPECT(0xb1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb1e3));
        // BC 017E
        gbc.setState(0xcc06, 0x734a, 0xe080, 0x3462, 0xb8cf, 0x33e8, 0x1, 0x0);
        gbc.writeMem(0xcc06, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0xcc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcc06));
        // BC 017F
        gbc.setState(0x9cf0, 0xde25, 0x5900, 0x9830, 0x89fd, 0x5d7f, 0x1, 0x0);
        gbc.writeMem(0x9cf0, { 0xbc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xde25, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9cf0));
        // BC 0181
        gbc.setState(0x3030, 0xde22, 0xf90, 0x45bb, 0x6a75, 0xa4dc, 0x0, 0x1);
        gbc.writeMem(0x3030, { 0xbc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xde22, gbc.sp());
        EXPECT(0x3031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0182
        gbc.setState(0xa9f2, 0x2b6f, 0xe230, 0x19c5, 0x4bea, 0x901a, 0x0, 0x0);
        gbc.writeMem(0xa9f2, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0xa9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa9f2));
        // BC 0183
        gbc.setState(0x288e, 0xf0e3, 0x7af0, 0x8155, 0xc827, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0xbc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0184
        gbc.setState(0xdd6a, 0x9de, 0x7890, 0x7b03, 0xef76, 0x3cb8, 0x1, 0x0);
        gbc.writeMem(0xdd6a, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0xdd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdd6a));
        // BC 0185
        gbc.setState(0x20cf, 0x93b7, 0xd8e0, 0xa5cb, 0x1c1, 0x91a, 0x1, 0x1);
        gbc.writeMem(0x20cf, { 0xbc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x93b7, gbc.sp());
        EXPECT(0x20d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0186
        gbc.setState(0x14b3, 0xa3ac, 0x5c60, 0xa5d4, 0xc4dd, 0x9eb6, 0x0, 0x0);
        gbc.writeMem(0x14b3, { 0xbc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa3ac, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0187
        gbc.setState(0x18be, 0x17af, 0x19d0, 0x1291, 0x26c7, 0xa82e, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0xbc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x17af, gbc.sp());
        EXPECT(0x18bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0188
        gbc.setState(0x820a, 0x172b, 0x8a00, 0xfdfa, 0xea8f, 0x8044, 0x0, 0x0);
        gbc.writeMem(0x820a, { 0xbc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x172b, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x820a));
        // BC 018A
        gbc.setState(0x113d, 0x2fde, 0x7f50, 0xfa50, 0x95ff, 0xdd7b, 0x1, 0x0);
        gbc.writeMem(0x113d, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 018C
        gbc.setState(0x7d3c, 0xc4e2, 0x9840, 0xebec, 0x504b, 0x16aa, 0x1, 0x1);
        gbc.writeMem(0x7d3c, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc4e2, gbc.sp());
        EXPECT(0x7d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 018E
        gbc.setState(0xa3fe, 0x590e, 0xd7e0, 0xeb3f, 0x31c2, 0x15d1, 0x1, 0x1);
        gbc.writeMem(0xa3fe, { 0xbc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa3fe));
        // BC 018F
        gbc.setState(0x8270, 0xa4b7, 0x1fa0, 0x8229, 0xceb7, 0xce3b, 0x0, 0x0);
        gbc.writeMem(0x8270, { 0xbc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0x8271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8270));
        // BC 0190
        gbc.setState(0x2865, 0xda0b, 0xd740, 0xe6a5, 0xba34, 0x671f, 0x0, 0x0);
        gbc.writeMem(0x2865, { 0xbc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x2866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0191
        gbc.setState(0x1cb3, 0x3269, 0x5e50, 0x777, 0xdf7c, 0xfc28, 0x1, 0x1);
        gbc.writeMem(0x1cb3, { 0xbc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3269, gbc.sp());
        EXPECT(0x1cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0192
        gbc.setState(0x63e, 0xf14c, 0xd2c0, 0x58b, 0xd15, 0x1ca7, 0x0, 0x1);
        gbc.writeMem(0x63e, { 0xbc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf14c, gbc.sp());
        EXPECT(0x63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0193
        gbc.setState(0x2583, 0xb659, 0x2710, 0xb264, 0x4cee, 0xd3e, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xbc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb659, gbc.sp());
        EXPECT(0x2584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0194
        gbc.setState(0xcb31, 0x51d9, 0xb640, 0xa9d0, 0x7639, 0x9f36, 0x0, 0x0);
        gbc.writeMem(0xcb31, { 0xbc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0xcb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcb31));
        // BC 0196
        gbc.setState(0x1df1, 0x5912, 0x5840, 0x7aff, 0x6bee, 0xaa54, 0x0, 0x1);
        gbc.writeMem(0x1df1, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5912, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0197
        gbc.setState(0x444a, 0x757e, 0x47d0, 0xb513, 0x7337, 0xbd87, 0x1, 0x1);
        gbc.writeMem(0x444a, { 0xbc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x757e, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0199
        gbc.setState(0x8a87, 0x22ed, 0xdca0, 0xda79, 0x141, 0xe80b, 0x0, 0x0);
        gbc.writeMem(0x8a87, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x22ed, gbc.sp());
        EXPECT(0x8a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8a87));
        // BC 019A
        gbc.setState(0xdb7f, 0x72dd, 0xf850, 0xbc30, 0x1a9f, 0xa595, 0x0, 0x1);
        gbc.writeMem(0xdb7f, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x72dd, gbc.sp());
        EXPECT(0xdb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdb7f));
        // BC 019B
        gbc.setState(0xab26, 0x5f82, 0xa580, 0x47a3, 0xf3fd, 0xddf5, 0x0, 0x0);
        gbc.writeMem(0xab26, { 0xbc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5f82, gbc.sp());
        EXPECT(0xab27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xab26));
        // BC 019C
        gbc.setState(0xe5d6, 0xbf62, 0x4f30, 0xeed8, 0xb035, 0x891d, 0x0, 0x1);
        gbc.writeMem(0xe5d6, { 0xbc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbf62, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe5d6));
        // BC 019D
        gbc.setState(0x3f90, 0x49c9, 0xd820, 0xc8ae, 0xec3f, 0x292a, 0x0, 0x0);
        gbc.writeMem(0x3f90, { 0xbc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 019E
        gbc.setState(0x13b8, 0x8617, 0xfa10, 0xf004, 0xe3b6, 0x1a07, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0xbc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x13b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 019F
        gbc.setState(0x6379, 0xa469, 0x89f0, 0x5807, 0x282b, 0xebdc, 0x1, 0x1);
        gbc.writeMem(0x6379, { 0xbc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa469, gbc.sp());
        EXPECT(0x637a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A0
        gbc.setState(0x6145, 0xe4d1, 0x7520, 0xda50, 0xa6e9, 0x826b, 0x0, 0x0);
        gbc.writeMem(0x6145, { 0xbc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe4d1, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A1
        gbc.setState(0x44c7, 0x89dd, 0xaeb0, 0x5313, 0x79bd, 0xc94e, 0x0, 0x0);
        gbc.writeMem(0x44c7, { 0xbc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A2
        gbc.setState(0x9dd1, 0xfd25, 0x22b0, 0xa95, 0xf6c1, 0x32c9, 0x0, 0x0);
        gbc.writeMem(0x9dd1, { 0xbc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfd25, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9dd1));
        // BC 01A3
        gbc.setState(0xafac, 0xc84a, 0x7250, 0xc7f8, 0x1e97, 0x5149, 0x1, 0x1);
        gbc.writeMem(0xafac, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc84a, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xafac));
        // BC 01A4
        gbc.setState(0xf81, 0x290f, 0xaf70, 0xb44e, 0x1c4d, 0xcf5a, 0x1, 0x1);
        gbc.writeMem(0xf81, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x290f, gbc.sp());
        EXPECT(0xf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A5
        gbc.setState(0x2288, 0x75c4, 0x1c60, 0xd4d9, 0x1e7e, 0x74b7, 0x1, 0x1);
        gbc.writeMem(0x2288, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0x2289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A6
        gbc.setState(0x42bc, 0xe581, 0xa470, 0x6718, 0xb14c, 0xaab9, 0x1, 0x1);
        gbc.writeMem(0x42bc, { 0xbc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe581, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01A7
        gbc.setState(0xd93d, 0x8e, 0xcf40, 0x6b25, 0x4f3b, 0x3c10, 0x1, 0x1);
        gbc.writeMem(0xd93d, { 0xbc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0xd93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd93d));
        // BC 01A8
        gbc.setState(0xddf9, 0xc7ca, 0x3d70, 0x6186, 0xaf09, 0x9c31, 0x1, 0x1);
        gbc.writeMem(0xddf9, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xddf9));
        // BC 01A9
        gbc.setState(0x6057, 0x5589, 0x9bc0, 0x5429, 0xc270, 0x81dc, 0x0, 0x0);
        gbc.writeMem(0x6057, { 0xbc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0x6058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01AA
        gbc.setState(0x97bc, 0x4bd4, 0xbdd0, 0x4bf7, 0xa854, 0x60d0, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4bd4, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x97bc));
        // BC 01AB
        gbc.setState(0xeb29, 0x861, 0xf570, 0xd951, 0x226d, 0x1db, 0x1, 0x1);
        gbc.writeMem(0xeb29, { 0xbc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x861, gbc.sp());
        EXPECT(0xeb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeb29));
        // BC 01AC
        gbc.setState(0x6dab, 0xdae9, 0x3df0, 0xf190, 0x7263, 0x1d46, 0x1, 0x1);
        gbc.writeMem(0x6dab, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0x6dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01AD
        gbc.setState(0x11db, 0x28d6, 0xedd0, 0x608e, 0x98b, 0x43b3, 0x0, 0x0);
        gbc.writeMem(0x11db, { 0xbc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0x11dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01AE
        gbc.setState(0xea69, 0x811e, 0xcdf0, 0x36a, 0xfecd, 0xf042, 0x1, 0x1);
        gbc.writeMem(0xea69, { 0xbc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x811e, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xea69));
        // BC 01AF
        gbc.setState(0xb152, 0x9e7a, 0xe0d0, 0xf168, 0xcdcc, 0x7837, 0x0, 0x1);
        gbc.writeMem(0xb152, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e7a, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb152));
        // BC 01B0
        gbc.setState(0xd30, 0x2876, 0x8650, 0xba19, 0x5871, 0x598a, 0x0, 0x1);
        gbc.writeMem(0xd30, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2876, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01B1
        gbc.setState(0xc081, 0x9e2d, 0x1ac0, 0x5e51, 0x51ca, 0xf751, 0x0, 0x1);
        gbc.writeMem(0xc081, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0xc082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc081));
        // BC 01B2
        gbc.setState(0x6902, 0x9652, 0xc870, 0x924, 0xf9b8, 0xaaaa, 0x0, 0x1);
        gbc.writeMem(0x6902, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9652, gbc.sp());
        EXPECT(0x6903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01B3
        gbc.setState(0x406b, 0xdec, 0x3500, 0x364e, 0xf590, 0x9d45, 0x0, 0x0);
        gbc.writeMem(0x406b, { 0xbc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0x406c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01B4
        gbc.setState(0x1d58, 0x2e28, 0x3850, 0x1dc1, 0x9bcc, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0x1d58, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01B5
        gbc.setState(0xa5ad, 0x92ea, 0xb6c0, 0xd5e0, 0xb981, 0xca6d, 0x0, 0x0);
        gbc.writeMem(0xa5ad, { 0xbc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa5ad));
        // BC 01B6
        gbc.setState(0x16cd, 0x2ce0, 0x6870, 0xf41, 0xa428, 0xb59f, 0x0, 0x1);
        gbc.writeMem(0x16cd, { 0xbc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ce0, gbc.sp());
        EXPECT(0x16ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01B7
        gbc.setState(0x35ed, 0x993b, 0x4380, 0xb390, 0xdce, 0x888d, 0x0, 0x1);
        gbc.writeMem(0x35ed, { 0xbc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x993b, gbc.sp());
        EXPECT(0x35ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01B8
        gbc.setState(0x9986, 0x5728, 0x6710, 0x964d, 0x54ec, 0x8360, 0x1, 0x1);
        gbc.writeMem(0x9986, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5728, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9986));
        // BC 01B9
        gbc.setState(0x29d, 0x2778, 0xe040, 0xe69d, 0x62de, 0xb15e, 0x1, 0x0);
        gbc.writeMem(0x29d, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01BA
        gbc.setState(0xed1b, 0xae59, 0xc5e0, 0xce16, 0x673e, 0xb7d5, 0x1, 0x0);
        gbc.writeMem(0xed1b, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xed1b));
        // BC 01BB
        gbc.setState(0xd281, 0xa29a, 0x9820, 0xa371, 0x4121, 0x7ec3, 0x1, 0x1);
        gbc.writeMem(0xd281, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0xd282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd281));
        // BC 01BC
        gbc.setState(0x1d7b, 0x5502, 0xe3e0, 0xadb6, 0x573, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x1d7b, { 0xbc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0x1d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01BE
        gbc.setState(0xcd5b, 0x45d0, 0xba70, 0xcf61, 0x277d, 0xb799, 0x1, 0x1);
        gbc.writeMem(0xcd5b, { 0xbc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcd5b));
        // BC 01BF
        gbc.setState(0x426, 0x4383, 0x2190, 0xab30, 0x4b53, 0x1a9d, 0x1, 0x0);
        gbc.writeMem(0x426, { 0xbc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01C0
        gbc.setState(0x3c4a, 0x123a, 0xfd20, 0x8965, 0xc1ee, 0xf7e5, 0x0, 0x1);
        gbc.writeMem(0x3c4a, { 0xbc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x3c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01C1
        gbc.setState(0x695a, 0x1d04, 0x48a0, 0x8f72, 0x7304, 0xeedd, 0x0, 0x0);
        gbc.writeMem(0x695a, { 0xbc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01C2
        gbc.setState(0x38a7, 0x6f32, 0x4d10, 0xeb6d, 0xc335, 0x1aa4, 0x0, 0x0);
        gbc.writeMem(0x38a7, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6f32, gbc.sp());
        EXPECT(0x38a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01C3
        gbc.setState(0xd3cb, 0x7bd, 0x7110, 0x69cb, 0xd515, 0x9025, 0x1, 0x0);
        gbc.writeMem(0xd3cb, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7bd, gbc.sp());
        EXPECT(0xd3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd3cb));
        // BC 01C4
        gbc.setState(0x9977, 0x3887, 0xf4d0, 0x5ad7, 0x144a, 0x4223, 0x0, 0x0);
        gbc.writeMem(0x9977, { 0xbc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9977));
        // BC 01C5
        gbc.setState(0xe915, 0xc20c, 0xaa60, 0xf8b, 0xda9, 0xe92, 0x0, 0x1);
        gbc.writeMem(0xe915, { 0xbc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc20c, gbc.sp());
        EXPECT(0xe916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe915));
        // BC 01C6
        gbc.setState(0x5733, 0x54ae, 0x67f0, 0xbfc8, 0x5dec, 0x5e8c, 0x0, 0x1);
        gbc.writeMem(0x5733, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0x5734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01C7
        gbc.setState(0x8c48, 0xb0ea, 0x37f0, 0x3eec, 0xba75, 0xcbba, 0x1, 0x0);
        gbc.writeMem(0x8c48, { 0xbc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb0ea, gbc.sp());
        EXPECT(0x8c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8c48));
        // BC 01C8
        gbc.setState(0x9801, 0xa28f, 0x52a0, 0xff0e, 0x7c47, 0xe759, 0x0, 0x1);
        gbc.writeMem(0x9801, { 0xbc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa28f, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9801));
        // BC 01C9
        gbc.setState(0xce6b, 0x1398, 0x7c70, 0x818e, 0x1dfc, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0xce6b, { 0xbc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0xce6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xce6b));
        // BC 01CA
        gbc.setState(0xc163, 0x6635, 0x20a0, 0x96df, 0x83fb, 0xb6c5, 0x1, 0x0);
        gbc.writeMem(0xc163, { 0xbc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6635, gbc.sp());
        EXPECT(0xc164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc163));
        // BC 01CB
        gbc.setState(0x22b8, 0x3182, 0xb810, 0xa88d, 0x9f9e, 0x52f4, 0x1, 0x1);
        gbc.writeMem(0x22b8, { 0xbc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3182, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01CC
        gbc.setState(0xaa88, 0xd515, 0x9dd0, 0xd547, 0xc97d, 0xa088, 0x1, 0x1);
        gbc.writeMem(0xaa88, { 0xbc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd515, gbc.sp());
        EXPECT(0xaa89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaa88));
        // BC 01CD
        gbc.setState(0xe9f0, 0x8315, 0xa630, 0x15af, 0x297f, 0x2246, 0x0, 0x0);
        gbc.writeMem(0xe9f0, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8315, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe9f0));
        // BC 01CE
        gbc.setState(0xcbc2, 0xab09, 0xc010, 0x9f45, 0x7721, 0x427, 0x1, 0x0);
        gbc.writeMem(0xcbc2, { 0xbc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xab09, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcbc2));
        // BC 01CF
        gbc.setState(0x2bcb, 0xeb1a, 0x50e0, 0x7fc8, 0x9426, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0x2bcb, { 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeb1a, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01D0
        gbc.setState(0xd23b, 0xe0eb, 0xdef0, 0x919f, 0xcf5f, 0x601e, 0x0, 0x0);
        gbc.writeMem(0xd23b, { 0xbc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe0eb, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd23b));
        // BC 01D1
        gbc.setState(0x6887, 0xe170, 0x3d80, 0xe9d5, 0x1db0, 0x5884, 0x1, 0x0);
        gbc.writeMem(0x6887, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0x6888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01D2
        gbc.setState(0xbbe1, 0x9199, 0x33b0, 0x4a4f, 0xe820, 0xec1d, 0x1, 0x0);
        gbc.writeMem(0xbbe1, { 0xbc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0xbbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbbe1));
        // BC 01D3
        gbc.setState(0x578c, 0x9f22, 0x280, 0x7b19, 0x7ca2, 0xbf3, 0x0, 0x1);
        gbc.writeMem(0x578c, { 0xbc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9f22, gbc.sp());
        EXPECT(0x578d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01D4
        gbc.setState(0x9c78, 0x658d, 0xe2e0, 0x7dca, 0xe678, 0xc98c, 0x1, 0x0);
        gbc.writeMem(0x9c78, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x658d, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9c78));
        // BC 01D5
        gbc.setState(0x709b, 0xfcb1, 0xf250, 0xd5b4, 0x7cc6, 0xe621, 0x0, 0x0);
        gbc.writeMem(0x709b, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfcb1, gbc.sp());
        EXPECT(0x709c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01D6
        gbc.setState(0xc942, 0x16ed, 0x6090, 0x33ee, 0xce9f, 0x2015, 0x1, 0x0);
        gbc.writeMem(0xc942, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x16ed, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc942));
        // BC 01D7
        gbc.setState(0x6e54, 0x2479, 0x1560, 0x12f2, 0x1486, 0xb91, 0x0, 0x0);
        gbc.writeMem(0x6e54, { 0xbc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2479, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01D8
        gbc.setState(0x4103, 0x68da, 0x1130, 0xa7c3, 0x5b2d, 0x874e, 0x0, 0x1);
        gbc.writeMem(0x4103, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x68da, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01D9
        gbc.setState(0x8516, 0x4556, 0xa2f0, 0xc870, 0x1033, 0x97fe, 0x0, 0x1);
        gbc.writeMem(0x8516, { 0xbc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8516));
        // BC 01DA
        gbc.setState(0x2d01, 0x66e0, 0xd5c0, 0xe642, 0xd317, 0xac51, 0x0, 0x1);
        gbc.writeMem(0x2d01, { 0xbc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x66e0, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01DB
        gbc.setState(0x91be, 0xc754, 0x1c60, 0xbb7d, 0xfb8c, 0x8548, 0x1, 0x1);
        gbc.writeMem(0x91be, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc754, gbc.sp());
        EXPECT(0x91bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x91be));
        // BC 01DC
        gbc.setState(0x8abc, 0xa7ea, 0xbeb0, 0x476, 0x4012, 0xe7ce, 0x0, 0x0);
        gbc.writeMem(0x8abc, { 0xbc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa7ea, gbc.sp());
        EXPECT(0x8abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8abc));
        // BC 01DD
        gbc.setState(0x9721, 0xbcf6, 0x4450, 0x3251, 0x7e53, 0xffb6, 0x1, 0x0);
        gbc.writeMem(0x9721, { 0xbc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbcf6, gbc.sp());
        EXPECT(0x9722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9721));
        // BC 01DE
        gbc.setState(0x54f8, 0x2d03, 0xda20, 0xe423, 0xfab9, 0x32d5, 0x0, 0x1);
        gbc.writeMem(0x54f8, { 0xbc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d03, gbc.sp());
        EXPECT(0x54f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01DF
        gbc.setState(0xa332, 0x2a9f, 0x8e0, 0xa783, 0xaee2, 0xb807, 0x0, 0x0);
        gbc.writeMem(0xa332, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0xa333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa332));
        // BC 01E0
        gbc.setState(0x5559, 0xe635, 0x7180, 0xc418, 0xa494, 0xde18, 0x0, 0x0);
        gbc.writeMem(0x5559, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01E1
        gbc.setState(0x7608, 0x8b6f, 0x4af0, 0x2cf8, 0x69ce, 0xcdeb, 0x0, 0x0);
        gbc.writeMem(0x7608, { 0xbc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8b6f, gbc.sp());
        EXPECT(0x7609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01E2
        gbc.setState(0xdd88, 0x92ee, 0xbeb0, 0x264d, 0xfb3, 0x2e9c, 0x1, 0x0);
        gbc.writeMem(0xdd88, { 0xbc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x92ee, gbc.sp());
        EXPECT(0xdd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdd88));
        // BC 01E3
        gbc.setState(0x422f, 0xf664, 0x7770, 0x6c57, 0x42db, 0x8336, 0x1, 0x0);
        gbc.writeMem(0x422f, { 0xbc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01E5
        gbc.setState(0x2b43, 0x5aff, 0xf2c0, 0xa5c6, 0xcf81, 0x948b, 0x0, 0x1);
        gbc.writeMem(0x2b43, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5aff, gbc.sp());
        EXPECT(0x2b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01E6
        gbc.setState(0xccf3, 0xdbe2, 0xec0, 0xdf84, 0x3c20, 0x5a90, 0x1, 0x1);
        gbc.writeMem(0xccf3, { 0xbc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdbe2, gbc.sp());
        EXPECT(0xccf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xccf3));
        // BC 01E8
        gbc.setState(0x5694, 0x7029, 0x5070, 0xfd55, 0x2d6c, 0x5b12, 0x1, 0x1);
        gbc.writeMem(0x5694, { 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x5695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01E9
        gbc.setState(0x90c2, 0x9e6b, 0xfaa0, 0xc0c0, 0x1d0b, 0x9f07, 0x1, 0x1);
        gbc.writeMem(0x90c2, { 0xbc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0x90c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x90c2));
        // BC 01EA
        gbc.setState(0x8bfe, 0xc218, 0x5830, 0xc336, 0xf626, 0x80f2, 0x0, 0x1);
        gbc.writeMem(0x8bfe, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x8bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8bfe));
        // BC 01EB
        gbc.setState(0x25f3, 0x3ad9, 0x7270, 0x88a0, 0x1bf9, 0xf7be, 0x1, 0x0);
        gbc.writeMem(0x25f3, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ad9, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01EC
        gbc.setState(0x5010, 0xe945, 0x8a70, 0x9d2d, 0x5280, 0x3134, 0x0, 0x0);
        gbc.writeMem(0x5010, { 0xbc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe945, gbc.sp());
        EXPECT(0x5011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01ED
        gbc.setState(0xccf4, 0x70f3, 0x5650, 0xe67f, 0x8335, 0x424a, 0x1, 0x1);
        gbc.writeMem(0xccf4, { 0xbc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x70f3, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xccf4));
        // BC 01EE
        gbc.setState(0xe03e, 0x1e11, 0xc880, 0x1d00, 0xcab1, 0xfd23, 0x0, 0x1);
        gbc.writeMem(0xe03e, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1e11, gbc.sp());
        EXPECT(0xe03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe03e));
        // BC 01EF
        gbc.setState(0xec83, 0xcce7, 0x5dc0, 0x9062, 0xe510, 0x6d48, 0x0, 0x1);
        gbc.writeMem(0xec83, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcce7, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec83));
        // BC 01F0
        gbc.setState(0xca92, 0x2fbf, 0xde0, 0xc6b9, 0x5957, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0xca92, { 0xbc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0xca93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xca92));
        // BC 01F1
        gbc.setState(0xd12d, 0x5b09, 0xa9d0, 0x8f98, 0x57e7, 0xcde3, 0x0, 0x0);
        gbc.writeMem(0xd12d, { 0xbc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd12d));
        // BC 01F2
        gbc.setState(0xab13, 0xd787, 0x4e30, 0x9f31, 0x216a, 0x5751, 0x0, 0x0);
        gbc.writeMem(0xab13, { 0xbc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0xab14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xab13));
        // BC 01F3
        gbc.setState(0xb8a6, 0x67b2, 0x4080, 0x74e9, 0x80e6, 0x5310, 0x1, 0x1);
        gbc.writeMem(0xb8a6, { 0xbc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x67b2, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb8a6));
        // BC 01F4
        gbc.setState(0x87c7, 0x9ca0, 0x7280, 0x36af, 0x8305, 0x458e, 0x0, 0x0);
        gbc.writeMem(0x87c7, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x87c7));
        // BC 01F5
        gbc.setState(0xbf72, 0x843d, 0xc770, 0x4790, 0x677e, 0xf965, 0x1, 0x0);
        gbc.writeMem(0xbf72, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0xbf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbf72));
        // BC 01F6
        gbc.setState(0x154d, 0x7fe5, 0x46e0, 0x435c, 0xc88b, 0xec48, 0x1, 0x0);
        gbc.writeMem(0x154d, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7fe5, gbc.sp());
        EXPECT(0x154e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01F7
        gbc.setState(0xce74, 0x39f6, 0x6df0, 0x668c, 0x33e2, 0xb0e2, 0x1, 0x0);
        gbc.writeMem(0xce74, { 0xbc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x39f6, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xce74));
        // BC 01F8
        gbc.setState(0xe890, 0xca54, 0x2150, 0xb2fe, 0x9e7c, 0xf659, 0x1, 0x0);
        gbc.writeMem(0xe890, { 0xbc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xe891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe890));
        // BC 01F9
        gbc.setState(0x73ea, 0x76dc, 0x1e20, 0x277f, 0x7337, 0x83b5, 0x0, 0x0);
        gbc.writeMem(0x73ea, { 0xbc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x76dc, gbc.sp());
        EXPECT(0x73eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01FA
        gbc.setState(0x9e7a, 0x146, 0x2e60, 0x1d11, 0x830, 0xf5ba, 0x1, 0x1);
        gbc.writeMem(0x9e7a, { 0xbc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x146, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9e7a));
        // BC 01FB
        gbc.setState(0x7883, 0x183a, 0x38a0, 0xc94, 0x4db0, 0xdd37, 0x0, 0x0);
        gbc.writeMem(0x7883, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x183a, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01FC
        gbc.setState(0x550f, 0xb093, 0x8610, 0x3205, 0x1829, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0x550f, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0x5510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 01FD
        gbc.setState(0x1422, 0x70ed, 0x9e30, 0x365b, 0xb23f, 0x978b, 0x1, 0x1);
        gbc.writeMem(0x1422, { 0xbc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x1423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 01FF
        gbc.setState(0x38c6, 0xccf4, 0x41e0, 0x927a, 0x4357, 0x8e6, 0x1, 0x0);
        gbc.writeMem(0x38c6, { 0xbc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xccf4, gbc.sp());
        EXPECT(0x38c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0200
        gbc.setState(0x4ecf, 0x3651, 0x4260, 0x423c, 0xe3ba, 0xf00c, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0x4ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0201
        gbc.setState(0xc78e, 0x4de2, 0x72c0, 0x86e3, 0x20ba, 0xdbec, 0x1, 0x0);
        gbc.writeMem(0xc78e, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4de2, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc78e));
        // BC 0202
        gbc.setState(0xcc88, 0x2af4, 0xdc40, 0xc6f3, 0xdf02, 0x52da, 0x1, 0x1);
        gbc.writeMem(0xcc88, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2af4, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcc88));
        // BC 0203
        gbc.setState(0xca71, 0xa11c, 0x5820, 0x9130, 0xf346, 0x229a, 0x0, 0x1);
        gbc.writeMem(0xca71, { 0xbc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0xca72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xca71));
        // BC 0204
        gbc.setState(0x1e48, 0x4d30, 0x6cb0, 0xc478, 0x7e2f, 0x76a, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4d30, gbc.sp());
        EXPECT(0x1e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0205
        gbc.setState(0x5dff, 0x61ba, 0x9310, 0x5f32, 0x7ee, 0x9f55, 0x1, 0x1);
        gbc.writeMem(0x5dff, { 0xbc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0206
        gbc.setState(0x8613, 0x8374, 0x17f0, 0xc16b, 0x72c5, 0x42b8, 0x1, 0x1);
        gbc.writeMem(0x8613, { 0xbc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8374, gbc.sp());
        EXPECT(0x8614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8613));
        // BC 0207
        gbc.setState(0xa313, 0x37c, 0x5f50, 0x6ede, 0x7f0a, 0xd34f, 0x1, 0x0);
        gbc.writeMem(0xa313, { 0xbc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x37c, gbc.sp());
        EXPECT(0xa314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa313));
        // BC 0208
        gbc.setState(0x72dc, 0x2c26, 0x5040, 0x16b3, 0xd7c0, 0xe7f2, 0x0, 0x1);
        gbc.writeMem(0x72dc, { 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2c26, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0209
        gbc.setState(0x166d, 0x7efe, 0x6900, 0xc5ec, 0xce7e, 0x3a4e, 0x0, 0x0);
        gbc.writeMem(0x166d, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0x166e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 020A
        gbc.setState(0xcf84, 0xda2, 0xb00, 0xce13, 0x70cd, 0xc41, 0x0, 0x1);
        gbc.writeMem(0xcf84, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xda2, gbc.sp());
        EXPECT(0xcf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcf84));
        // BC 020B
        gbc.setState(0x9d9f, 0xfd10, 0xaf50, 0xe644, 0x9c53, 0x71d2, 0x1, 0x1);
        gbc.writeMem(0x9d9f, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0x9da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9d9f));
        // BC 020C
        gbc.setState(0x36b2, 0x8e46, 0x76a0, 0x33b4, 0xeda8, 0x28c8, 0x1, 0x0);
        gbc.writeMem(0x36b2, { 0xbc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x36b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 020D
        gbc.setState(0x8b61, 0xd640, 0xc260, 0x2015, 0xb213, 0xa3fe, 0x1, 0x1);
        gbc.writeMem(0x8b61, { 0xbc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x8b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8b61));
        // BC 020E
        gbc.setState(0xe9b7, 0xaa3a, 0x3810, 0x1c95, 0x6a80, 0xac0b, 0x0, 0x0);
        gbc.writeMem(0xe9b7, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaa3a, gbc.sp());
        EXPECT(0xe9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe9b7));
        // BC 020F
        gbc.setState(0x77e3, 0x761e, 0x69e0, 0x22b1, 0x55d, 0x1876, 0x0, 0x0);
        gbc.writeMem(0x77e3, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x761e, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0210
        gbc.setState(0x8672, 0x2f, 0xcbc0, 0x189, 0xa647, 0x8826, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0x8673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8672));
        // BC 0211
        gbc.setState(0xcbd4, 0xaca8, 0x5540, 0x85c7, 0x6bdb, 0x8e3e, 0x1, 0x1);
        gbc.writeMem(0xcbd4, { 0xbc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaca8, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcbd4));
        // BC 0213
        gbc.setState(0xcc95, 0x60eb, 0x1c30, 0xb67d, 0x2ed4, 0x5a04, 0x0, 0x0);
        gbc.writeMem(0xcc95, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcc95));
        // BC 0214
        gbc.setState(0xaacb, 0xa100, 0x9da0, 0x14c6, 0xf426, 0x57af, 0x1, 0x0);
        gbc.writeMem(0xaacb, { 0xbc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0xaacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaacb));
        // BC 0215
        gbc.setState(0x2e30, 0xa624, 0x3760, 0x295f, 0xe882, 0x4636, 0x0, 0x1);
        gbc.writeMem(0x2e30, { 0xbc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa624, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0216
        gbc.setState(0x7d79, 0x6eda, 0x8690, 0x840a, 0xf5d0, 0xfe19, 0x1, 0x0);
        gbc.writeMem(0x7d79, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6eda, gbc.sp());
        EXPECT(0x7d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0217
        gbc.setState(0xbd1b, 0xa1bd, 0x8910, 0xe82f, 0xf551, 0x8e9, 0x0, 0x0);
        gbc.writeMem(0xbd1b, { 0xbc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa1bd, gbc.sp());
        EXPECT(0xbd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbd1b));
        // BC 0218
        gbc.setState(0x2784, 0x6236, 0x5e90, 0xee98, 0x9e07, 0x781, 0x1, 0x0);
        gbc.writeMem(0x2784, { 0xbc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6236, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0219
        gbc.setState(0x215d, 0x88de, 0x4ae0, 0x9159, 0x3e42, 0x431a, 0x0, 0x0);
        gbc.writeMem(0x215d, { 0xbc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x88de, gbc.sp());
        EXPECT(0x215e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 021A
        gbc.setState(0x6432, 0x90d1, 0x1800, 0xbc35, 0x1595, 0x6fa4, 0x1, 0x1);
        gbc.writeMem(0x6432, { 0xbc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x90d1, gbc.sp());
        EXPECT(0x6433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 021B
        gbc.setState(0x2a48, 0xcefe, 0x1050, 0x4f4a, 0xc862, 0xe210, 0x0, 0x1);
        gbc.writeMem(0x2a48, { 0xbc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0x2a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 021C
        gbc.setState(0x37af, 0xd423, 0xf390, 0xcd22, 0x4f2a, 0x9e43, 0x1, 0x1);
        gbc.writeMem(0x37af, { 0xbc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd423, gbc.sp());
        EXPECT(0x37b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 021D
        gbc.setState(0x79a5, 0x5f32, 0xe760, 0x9b9a, 0xf8a7, 0xd307, 0x0, 0x0);
        gbc.writeMem(0x79a5, { 0xbc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0x79a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 021E
        gbc.setState(0x10da, 0x5665, 0xd720, 0xcf80, 0x47dc, 0xefa9, 0x1, 0x1);
        gbc.writeMem(0x10da, { 0xbc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5665, gbc.sp());
        EXPECT(0x10db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 021F
        gbc.setState(0xdab4, 0x675f, 0x2b50, 0x277, 0xa763, 0x566, 0x1, 0x0);
        gbc.writeMem(0xdab4, { 0xbc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x675f, gbc.sp());
        EXPECT(0xdab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdab4));
        // BC 0220
        gbc.setState(0xd69d, 0xc9ac, 0xc9b0, 0xebd5, 0x1eb9, 0x7e15, 0x1, 0x0);
        gbc.writeMem(0xd69d, { 0xbc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd69d));
        // BC 0221
        gbc.setState(0x8271, 0xafaf, 0x1580, 0x9d72, 0xca61, 0xa7ff, 0x1, 0x0);
        gbc.writeMem(0x8271, { 0xbc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x8272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8271));
        // BC 0222
        gbc.setState(0x69b0, 0x660a, 0x6300, 0x243e, 0x49f7, 0x81, 0x0, 0x1);
        gbc.writeMem(0x69b0, { 0xbc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0x69b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0223
        gbc.setState(0x5b3f, 0xf141, 0x6c10, 0xae91, 0xbaf7, 0x9c81, 0x1, 0x1);
        gbc.writeMem(0x5b3f, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0225
        gbc.setState(0x7847, 0xce24, 0xa8d0, 0x98e, 0x4697, 0x5535, 0x0, 0x1);
        gbc.writeMem(0x7847, { 0xbc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0226
        gbc.setState(0x45e4, 0x48fc, 0xef50, 0x6082, 0x72ab, 0x74ae, 0x0, 0x0);
        gbc.writeMem(0x45e4, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x48fc, gbc.sp());
        EXPECT(0x45e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0227
        gbc.setState(0x5167, 0xaa, 0x1ec0, 0x4289, 0xeec0, 0xed74, 0x0, 0x1);
        gbc.writeMem(0x5167, { 0xbc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaa, gbc.sp());
        EXPECT(0x5168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0228
        gbc.setState(0x7625, 0xa0f4, 0x4610, 0xa0fd, 0xd82, 0x8085, 0x0, 0x1);
        gbc.writeMem(0x7625, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0x7626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0229
        gbc.setState(0xc4c5, 0xa6be, 0x73d0, 0x911f, 0x1751, 0xffed, 0x0, 0x0);
        gbc.writeMem(0xc4c5, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa6be, gbc.sp());
        EXPECT(0xc4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc4c5));
        // BC 022A
        gbc.setState(0x6414, 0xe6f, 0x6fd0, 0xb41c, 0xd691, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x6414, { 0xbc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe6f, gbc.sp());
        EXPECT(0x6415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 022B
        gbc.setState(0x5136, 0x7091, 0xb5c0, 0x680a, 0x7dbf, 0xebc2, 0x1, 0x0);
        gbc.writeMem(0x5136, { 0xbc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7091, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 022C
        gbc.setState(0x4b22, 0xa58a, 0xe920, 0x67ea, 0xae6a, 0x29b6, 0x0, 0x0);
        gbc.writeMem(0x4b22, { 0xbc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa58a, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 022D
        gbc.setState(0x26dc, 0xcc66, 0xf730, 0x5875, 0x8eb3, 0xbae9, 0x0, 0x1);
        gbc.writeMem(0x26dc, { 0xbc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcc66, gbc.sp());
        EXPECT(0x26dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 022E
        gbc.setState(0x7898, 0x5629, 0x61a0, 0x99b3, 0xb70a, 0xe2c, 0x1, 0x1);
        gbc.writeMem(0x7898, { 0xbc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5629, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 022F
        gbc.setState(0x3633, 0x7006, 0xa6e0, 0x547c, 0x83a2, 0xfe15, 0x0, 0x0);
        gbc.writeMem(0x3633, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7006, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0230
        gbc.setState(0x4d0c, 0x35fd, 0x6950, 0xff62, 0x27d5, 0x2e9, 0x1, 0x1);
        gbc.writeMem(0x4d0c, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x35fd, gbc.sp());
        EXPECT(0x4d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0231
        gbc.setState(0x62a4, 0x3b03, 0xcb20, 0x2a3b, 0xb417, 0xf44, 0x1, 0x0);
        gbc.writeMem(0x62a4, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3b03, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0232
        gbc.setState(0xae0e, 0x8041, 0xe0b0, 0x3ea3, 0x3177, 0xff03, 0x0, 0x0);
        gbc.writeMem(0xae0e, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xae0e));
        // BC 0233
        gbc.setState(0x5382, 0xac59, 0xd960, 0x657f, 0x6261, 0x9d06, 0x0, 0x1);
        gbc.writeMem(0x5382, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xac59, gbc.sp());
        EXPECT(0x5383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0234
        gbc.setState(0x3eba, 0x41b4, 0xc7b0, 0x78ea, 0xfa53, 0xa803, 0x1, 0x1);
        gbc.writeMem(0x3eba, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x41b4, gbc.sp());
        EXPECT(0x3ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0235
        gbc.setState(0x4e94, 0xad19, 0xea90, 0x3e43, 0x3520, 0x5213, 0x0, 0x0);
        gbc.writeMem(0x4e94, { 0xbc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x4e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0236
        gbc.setState(0xdc30, 0xbf0a, 0xd510, 0xbda9, 0xed6b, 0x6d04, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0xbc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbf0a, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdc30));
        // BC 0237
        gbc.setState(0x19ed, 0xbbc2, 0x4c00, 0x191, 0xb1ba, 0x9700, 0x0, 0x0);
        gbc.writeMem(0x19ed, { 0xbc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0x19ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0238
        gbc.setState(0xb4f8, 0x4960, 0x6020, 0x3d51, 0x2a85, 0xef08, 0x0, 0x1);
        gbc.writeMem(0xb4f8, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb4f8));
        // BC 0239
        gbc.setState(0x97e5, 0xd03c, 0xc890, 0xc9ef, 0x1c1d, 0x21c, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd03c, gbc.sp());
        EXPECT(0x97e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x97e5));
        // BC 023A
        gbc.setState(0xb7da, 0xa969, 0x4730, 0xb0c0, 0x1ad1, 0x9bea, 0x1, 0x1);
        gbc.writeMem(0xb7da, { 0xbc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa969, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb7da));
        // BC 023B
        gbc.setState(0x54e8, 0xeed9, 0x420, 0x82b8, 0xd3fd, 0x5f9a, 0x1, 0x0);
        gbc.writeMem(0x54e8, { 0xbc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeed9, gbc.sp());
        EXPECT(0x54e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 023C
        gbc.setState(0xe198, 0x764a, 0x7620, 0xfdb9, 0x36b0, 0xf430, 0x0, 0x1);
        gbc.writeMem(0xe198, { 0xbc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x764a, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe198));
        // BC 023D
        gbc.setState(0x8102, 0x5f63, 0x60, 0x5e34, 0x2b66, 0x8c69, 0x0, 0x1);
        gbc.writeMem(0x8102, { 0xbc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0x8103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8102));
        // BC 023E
        gbc.setState(0xc2cc, 0x5dbe, 0xabb0, 0x3322, 0x900a, 0x671b, 0x1, 0x0);
        gbc.writeMem(0xc2cc, { 0xbc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5dbe, gbc.sp());
        EXPECT(0xc2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc2cc));
        // BC 023F
        gbc.setState(0xa634, 0x9814, 0xbeb0, 0xda1b, 0xe2f8, 0xb5b9, 0x1, 0x0);
        gbc.writeMem(0xa634, { 0xbc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0xa635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa634));
        // BC 0240
        gbc.setState(0x492c, 0x937f, 0xd610, 0xc847, 0xc205, 0x1514, 0x0, 0x0);
        gbc.writeMem(0x492c, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0241
        gbc.setState(0x648b, 0x908f, 0x6030, 0x88e1, 0x54a0, 0xbbe9, 0x1, 0x0);
        gbc.writeMem(0x648b, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x908f, gbc.sp());
        EXPECT(0x648c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0242
        gbc.setState(0xc83, 0xb3e6, 0x95c0, 0xdb11, 0x2592, 0x908b, 0x0, 0x1);
        gbc.writeMem(0xc83, { 0xbc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb3e6, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0243
        gbc.setState(0xba00, 0x452c, 0x81f0, 0x1c5e, 0x345c, 0xc72b, 0x1, 0x1);
        gbc.writeMem(0xba00, { 0xbc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x452c, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xba00));
        // BC 0244
        gbc.setState(0x1972, 0xafdc, 0xe2c0, 0x294, 0xf957, 0xf7, 0x1, 0x0);
        gbc.writeMem(0x1972, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xafdc, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0245
        gbc.setState(0x200d, 0x8a31, 0xc120, 0x81ad, 0xda2a, 0x5b81, 0x0, 0x1);
        gbc.writeMem(0x200d, { 0xbc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8a31, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0246
        gbc.setState(0xe258, 0xa521, 0x990, 0x88f7, 0x7e78, 0xf3c1, 0x1, 0x0);
        gbc.writeMem(0xe258, { 0xbc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa521, gbc.sp());
        EXPECT(0xe259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe258));
        // BC 0247
        gbc.setState(0x601c, 0x30c5, 0xb110, 0x5161, 0x5f63, 0x539a, 0x0, 0x0);
        gbc.writeMem(0x601c, { 0xbc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x30c5, gbc.sp());
        EXPECT(0x601d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0248
        gbc.setState(0x85fe, 0xd67b, 0xaa30, 0xa201, 0x90ab, 0x2254, 0x0, 0x0);
        gbc.writeMem(0x85fe, { 0xbc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x85fe));
        // BC 0249
        gbc.setState(0xebd, 0x2137, 0xa6a0, 0xcb25, 0xb64, 0xd270, 0x1, 0x0);
        gbc.writeMem(0xebd, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 024A
        gbc.setState(0x8a08, 0x36a7, 0xcf90, 0x4dd5, 0x5b46, 0xf857, 0x1, 0x0);
        gbc.writeMem(0x8a08, { 0xbc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8a08));
        // BC 024B
        gbc.setState(0x3659, 0x71d1, 0x9cc0, 0x8c4d, 0x5df2, 0x7843, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0xbc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 024C
        gbc.setState(0x1bfe, 0x2ca3, 0x11a0, 0xd11a, 0xec0d, 0x7936, 0x1, 0x0);
        gbc.writeMem(0x1bfe, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2ca3, gbc.sp());
        EXPECT(0x1bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 024D
        gbc.setState(0xee54, 0x3324, 0x24a0, 0x6596, 0xf4b2, 0x1cda, 0x1, 0x0);
        gbc.writeMem(0xee54, { 0xbc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xee54));
        // BC 024E
        gbc.setState(0x4902, 0x2825, 0x7ea0, 0xa16d, 0xcfb7, 0x6a54, 0x1, 0x1);
        gbc.writeMem(0x4902, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0250
        gbc.setState(0x5e71, 0x3a9a, 0x7360, 0xb0b5, 0xc0f5, 0xb4a9, 0x0, 0x1);
        gbc.writeMem(0x5e71, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a9a, gbc.sp());
        EXPECT(0x5e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0251
        gbc.setState(0xe6b6, 0xc539, 0xc7f0, 0xcd7b, 0x2609, 0x7be7, 0x0, 0x0);
        gbc.writeMem(0xe6b6, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc539, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe6b6));
        // BC 0252
        gbc.setState(0x3eba, 0xe08f, 0x2830, 0x5844, 0x965d, 0x83c3, 0x1, 0x1);
        gbc.writeMem(0x3eba, { 0xbc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe08f, gbc.sp());
        EXPECT(0x3ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0253
        gbc.setState(0xa65c, 0xbec2, 0xc410, 0x5cc, 0xe6b4, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xa65c, { 0xbc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbec2, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa65c));
        // BC 0255
        gbc.setState(0xbce0, 0x8263, 0x2360, 0xfa16, 0x6a64, 0xf315, 0x1, 0x0);
        gbc.writeMem(0xbce0, { 0xbc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xbce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbce0));
        // BC 0256
        gbc.setState(0xa900, 0x327, 0xdf20, 0x22c6, 0x8e4c, 0x207, 0x1, 0x0);
        gbc.writeMem(0xa900, { 0xbc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa900));
        // BC 0257
        gbc.setState(0x2426, 0xb482, 0x92c0, 0xeb3b, 0x4f9f, 0xcb15, 0x0, 0x0);
        gbc.writeMem(0x2426, { 0xbc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb482, gbc.sp());
        EXPECT(0x2427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0258
        gbc.setState(0xe45d, 0x4f11, 0xa3c0, 0xb58e, 0xca7a, 0xdbb, 0x1, 0x1);
        gbc.writeMem(0xe45d, { 0xbc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe45d));
        // BC 0259
        gbc.setState(0x2ec8, 0x5863, 0x8320, 0x5e6, 0xed45, 0x20c6, 0x1, 0x0);
        gbc.writeMem(0x2ec8, { 0xbc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0x2ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 025A
        gbc.setState(0xafcf, 0x900f, 0x24e0, 0x798a, 0x1fed, 0xc7e5, 0x1, 0x1);
        gbc.writeMem(0xafcf, { 0xbc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x900f, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xafcf));
        // BC 025B
        gbc.setState(0x5aa9, 0x930a, 0x98c0, 0xf704, 0xf7b5, 0x6066, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 025C
        gbc.setState(0x1ecf, 0x1659, 0x2450, 0xf87b, 0xa749, 0xda44, 0x1, 0x0);
        gbc.writeMem(0x1ecf, { 0xbc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0x1ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 025D
        gbc.setState(0xe855, 0x2371, 0x5760, 0x631c, 0x6e7b, 0xd52e, 0x1, 0x0);
        gbc.writeMem(0xe855, { 0xbc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2371, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe855));
        // BC 025E
        gbc.setState(0x63c0, 0x8bda, 0xdb50, 0x248c, 0xa077, 0x14c6, 0x1, 0x0);
        gbc.writeMem(0x63c0, { 0xbc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8bda, gbc.sp());
        EXPECT(0x63c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0260
        gbc.setState(0x6d68, 0x1b38, 0x4a0, 0x8514, 0x597a, 0xbda7, 0x1, 0x1);
        gbc.writeMem(0x6d68, { 0xbc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1b38, gbc.sp());
        EXPECT(0x6d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0261
        gbc.setState(0xae91, 0xbda8, 0x4dc0, 0xec04, 0x39a1, 0xfc0b, 0x0, 0x0);
        gbc.writeMem(0xae91, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbda8, gbc.sp());
        EXPECT(0xae92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xae91));
        // BC 0262
        gbc.setState(0x6175, 0x377a, 0xb00, 0xaaa2, 0xaaad, 0x9cef, 0x0, 0x1);
        gbc.writeMem(0x6175, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x377a, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0263
        gbc.setState(0xb2b6, 0x92f5, 0x3e0, 0x76ed, 0x5f7d, 0x66dd, 0x0, 0x1);
        gbc.writeMem(0xb2b6, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xb2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb2b6));
        // BC 0264
        gbc.setState(0x2431, 0x9369, 0x6710, 0x160c, 0x2f33, 0xcda1, 0x0, 0x1);
        gbc.writeMem(0x2431, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9369, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0265
        gbc.setState(0x948c, 0x8eca, 0xf870, 0x5aa9, 0x21e9, 0xba9c, 0x0, 0x0);
        gbc.writeMem(0x948c, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x948d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x948c));
        // BC 0266
        gbc.setState(0xaadd, 0xa7c8, 0x8e00, 0x7c16, 0x52e5, 0x3412, 0x1, 0x1);
        gbc.writeMem(0xaadd, { 0xbc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0xaade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaadd));
        // BC 0267
        gbc.setState(0x1e14, 0x9139, 0xffe0, 0xd9eb, 0xcaaf, 0x1242, 0x0, 0x0);
        gbc.writeMem(0x1e14, { 0xbc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0x1e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0268
        gbc.setState(0xb18e, 0xa8b4, 0x4360, 0x6fc8, 0x4e04, 0xf222, 0x0, 0x1);
        gbc.writeMem(0xb18e, { 0xbc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa8b4, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb18e));
        // BC 0269
        gbc.setState(0x3f3b, 0xe63b, 0xb7c0, 0xd4e5, 0x3c41, 0x3699, 0x0, 0x0);
        gbc.writeMem(0x3f3b, { 0xbc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe63b, gbc.sp());
        EXPECT(0x3f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 026A
        gbc.setState(0x7b31, 0x34a0, 0x6660, 0xaed2, 0x67a6, 0x65db, 0x0, 0x0);
        gbc.writeMem(0x7b31, { 0xbc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x34a0, gbc.sp());
        EXPECT(0x7b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 026B
        gbc.setState(0x788, 0xaa1c, 0xafa0, 0x9855, 0x24c7, 0x9a8a, 0x1, 0x1);
        gbc.writeMem(0x788, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 026C
        gbc.setState(0x7284, 0x7959, 0x9380, 0xa4a8, 0xa8be, 0xc18, 0x0, 0x1);
        gbc.writeMem(0x7284, { 0xbc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 026D
        gbc.setState(0x8b76, 0xbf0c, 0xf6d0, 0xe27, 0x1dbc, 0xeb86, 0x1, 0x0);
        gbc.writeMem(0x8b76, { 0xbc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8b76));
        // BC 026E
        gbc.setState(0x18ef, 0xbf91, 0x7bc0, 0x37c0, 0x4b3, 0x35a8, 0x1, 0x1);
        gbc.writeMem(0x18ef, { 0xbc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 026F
        gbc.setState(0xe569, 0x9948, 0xea60, 0x6bd6, 0xbcb7, 0x402f, 0x0, 0x1);
        gbc.writeMem(0xe569, { 0xbc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9948, gbc.sp());
        EXPECT(0xe56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe569));
        // BC 0270
        gbc.setState(0x5fcb, 0xb31d, 0x4fa0, 0x6e8d, 0x877d, 0x4a15, 0x0, 0x0);
        gbc.writeMem(0x5fcb, { 0xbc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb31d, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0271
        gbc.setState(0x906a, 0x16f, 0xb7e0, 0x9e1b, 0x40d6, 0xfe5, 0x0, 0x1);
        gbc.writeMem(0x906a, { 0xbc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x16f, gbc.sp());
        EXPECT(0x906b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x906a));
        // BC 0272
        gbc.setState(0x93ec, 0xcc72, 0x99a0, 0x2859, 0xb31a, 0xb9ea, 0x0, 0x0);
        gbc.writeMem(0x93ec, { 0xbc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcc72, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x93ec));
        // BC 0273
        gbc.setState(0x404, 0x5bab, 0x91a0, 0xb54e, 0x2a85, 0x915c, 0x0, 0x1);
        gbc.writeMem(0x404, { 0xbc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0274
        gbc.setState(0xb5e, 0x7297, 0x3740, 0xcc89, 0x62f7, 0x262d, 0x0, 0x0);
        gbc.writeMem(0xb5e, { 0xbc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7297, gbc.sp());
        EXPECT(0xb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0275
        gbc.setState(0x7a42, 0x68a2, 0x2a00, 0x5bf7, 0x6b7a, 0x7dde, 0x0, 0x1);
        gbc.writeMem(0x7a42, { 0xbc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x68a2, gbc.sp());
        EXPECT(0x7a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0276
        gbc.setState(0x2c3d, 0xb0d1, 0x9890, 0x3d81, 0x6958, 0x1d9d, 0x0, 0x0);
        gbc.writeMem(0x2c3d, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb0d1, gbc.sp());
        EXPECT(0x2c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0277
        gbc.setState(0xa38d, 0xd19, 0x6450, 0xb589, 0xd533, 0xd6f3, 0x1, 0x0);
        gbc.writeMem(0xa38d, { 0xbc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd19, gbc.sp());
        EXPECT(0xa38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa38d));
        // BC 0279
        gbc.setState(0x7f5, 0xc707, 0x6eb0, 0x8433, 0xc97a, 0x112b, 0x1, 0x1);
        gbc.writeMem(0x7f5, { 0xbc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc707, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 027A
        gbc.setState(0x532f, 0xe1a2, 0x5ef0, 0x1aa, 0x3fb8, 0xf593, 0x1, 0x0);
        gbc.writeMem(0x532f, { 0xbc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0x5330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 027E
        gbc.setState(0x7c1f, 0x1ed5, 0xd600, 0x1bab, 0x32ad, 0xed94, 0x1, 0x0);
        gbc.writeMem(0x7c1f, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0x7c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 027F
        gbc.setState(0x19b4, 0x5020, 0xb30, 0x2b95, 0xefda, 0x7c2f, 0x0, 0x1);
        gbc.writeMem(0x19b4, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0280
        gbc.setState(0xa13e, 0xc9b5, 0x3250, 0x76b9, 0x737d, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0xa13e, { 0xbc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc9b5, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa13e));
        // BC 0281
        gbc.setState(0x2898, 0x43dd, 0xb840, 0x4b17, 0x1052, 0xd25d, 0x1, 0x1);
        gbc.writeMem(0x2898, { 0xbc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x43dd, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0282
        gbc.setState(0xd076, 0xf0f9, 0xdf10, 0xa49f, 0xc1d9, 0x785, 0x1, 0x1);
        gbc.writeMem(0xd076, { 0xbc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf0f9, gbc.sp());
        EXPECT(0xd077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd076));
        // BC 0283
        gbc.setState(0x1bc2, 0xcf62, 0x15d0, 0x9282, 0x86cb, 0x8e6e, 0x1, 0x0);
        gbc.writeMem(0x1bc2, { 0xbc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0x1bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0284
        gbc.setState(0x89dd, 0x88a4, 0xc220, 0x48d4, 0x19f1, 0x1315, 0x0, 0x1);
        gbc.writeMem(0x89dd, { 0xbc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x88a4, gbc.sp());
        EXPECT(0x89de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x89dd));
        // BC 0285
        gbc.setState(0x9831, 0x7a18, 0xec50, 0x6ca6, 0x87df, 0x9540, 0x0, 0x0);
        gbc.writeMem(0x9831, { 0xbc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a18, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9831));
        // BC 0286
        gbc.setState(0x279d, 0x9354, 0xe120, 0x8e8, 0xb7b7, 0x302d, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0287
        gbc.setState(0x23b1, 0x29e4, 0x4a80, 0x6178, 0xbc10, 0xe768, 0x0, 0x0);
        gbc.writeMem(0x23b1, { 0xbc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x29e4, gbc.sp());
        EXPECT(0x23b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0288
        gbc.setState(0x741a, 0x67bd, 0x3d00, 0xb199, 0x220c, 0xecbd, 0x0, 0x0);
        gbc.writeMem(0x741a, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x67bd, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0289
        gbc.setState(0x8909, 0x36dd, 0xe260, 0x2bbf, 0x916f, 0xbfd2, 0x0, 0x0);
        gbc.writeMem(0x8909, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x36dd, gbc.sp());
        EXPECT(0x890a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8909));
        // BC 028A
        gbc.setState(0x67, 0xa8f9, 0x3b60, 0x8f74, 0xcb09, 0x9b44, 0x1, 0x0);
        gbc.writeMem(0x67, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa8f9, gbc.sp());
        EXPECT(0x68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 028B
        gbc.setState(0x9b91, 0xf501, 0x3f0, 0x5ae0, 0xd7a3, 0x4bc5, 0x0, 0x0);
        gbc.writeMem(0x9b91, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf501, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9b91));
        // BC 028C
        gbc.setState(0x4be3, 0xb6f, 0x6920, 0x965b, 0x6a83, 0xdc7e, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 028D
        gbc.setState(0x35c5, 0x450f, 0x4a70, 0x2b37, 0xea8, 0x6f77, 0x1, 0x0);
        gbc.writeMem(0x35c5, { 0xbc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x35c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 028E
        gbc.setState(0x6e81, 0x2cc4, 0xe10, 0x345f, 0xee7, 0x349, 0x1, 0x1);
        gbc.writeMem(0x6e81, { 0xbc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2cc4, gbc.sp());
        EXPECT(0x6e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 028F
        gbc.setState(0x1c27, 0xb6e5, 0xf7d0, 0x925f, 0x4d09, 0x9b5f, 0x0, 0x0);
        gbc.writeMem(0x1c27, { 0xbc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x1c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0290
        gbc.setState(0x4e08, 0x920d, 0x7320, 0x829e, 0xbed4, 0xe79a, 0x0, 0x1);
        gbc.writeMem(0x4e08, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x920d, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0291
        gbc.setState(0x2032, 0x76fd, 0xf5d0, 0x9527, 0x9853, 0x690f, 0x0, 0x0);
        gbc.writeMem(0x2032, { 0xbc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0292
        gbc.setState(0x4178, 0xe8d9, 0xbda0, 0x8362, 0x40c, 0x80f1, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe8d9, gbc.sp());
        EXPECT(0x4179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0293
        gbc.setState(0x4376, 0xda62, 0xb5b0, 0xdd15, 0x3a56, 0xac54, 0x0, 0x0);
        gbc.writeMem(0x4376, { 0xbc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda62, gbc.sp());
        EXPECT(0x4377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0294
        gbc.setState(0x2db3, 0x3977, 0xb230, 0xdf17, 0x947c, 0x319a, 0x0, 0x0);
        gbc.writeMem(0x2db3, { 0xbc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3977, gbc.sp());
        EXPECT(0x2db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0295
        gbc.setState(0x824c, 0x671b, 0xa90, 0xce3, 0xe2, 0xe02, 0x1, 0x1);
        gbc.writeMem(0x824c, { 0xbc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x671b, gbc.sp());
        EXPECT(0x824d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x824c));
        // BC 0296
        gbc.setState(0x6129, 0x5402, 0xfc60, 0xfd81, 0xdd8d, 0x612c, 0x1, 0x1);
        gbc.writeMem(0x6129, { 0xbc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5402, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0297
        gbc.setState(0xd3ad, 0xfba3, 0xde60, 0x6030, 0xa73d, 0x5488, 0x1, 0x1);
        gbc.writeMem(0xd3ad, { 0xbc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfba3, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd3ad));
        // BC 0298
        gbc.setState(0x2c56, 0x3ab7, 0xb7f0, 0x2f21, 0x4c31, 0x24f4, 0x0, 0x0);
        gbc.writeMem(0x2c56, { 0xbc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3ab7, gbc.sp());
        EXPECT(0x2c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0299
        gbc.setState(0xcd59, 0xeb8b, 0x55a0, 0xb80f, 0x8abb, 0xb225, 0x0, 0x1);
        gbc.writeMem(0xcd59, { 0xbc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeb8b, gbc.sp());
        EXPECT(0xcd5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcd59));
        // BC 029B
        gbc.setState(0x19f4, 0xed48, 0xc630, 0x43e6, 0x1803, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x19f4, { 0xbc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed48, gbc.sp());
        EXPECT(0x19f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 029C
        gbc.setState(0xacc3, 0x423e, 0x6bc0, 0xf8ec, 0xf5cd, 0x3b35, 0x0, 0x1);
        gbc.writeMem(0xacc3, { 0xbc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x423e, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xacc3));
        // BC 029D
        gbc.setState(0xa251, 0xa2fd, 0x7e0, 0xb558, 0xcb21, 0x11cd, 0x1, 0x1);
        gbc.writeMem(0xa251, { 0xbc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa251));
        // BC 029E
        gbc.setState(0xbcd6, 0xbb93, 0x89c0, 0x55eb, 0xf282, 0x367c, 0x0, 0x1);
        gbc.writeMem(0xbcd6, { 0xbc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbb93, gbc.sp());
        EXPECT(0xbcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbcd6));
        // BC 029F
        gbc.setState(0xd76e, 0x96f0, 0xc2e0, 0x6aec, 0x97ee, 0x777, 0x1, 0x1);
        gbc.writeMem(0xd76e, { 0xbc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x96f0, gbc.sp());
        EXPECT(0xd76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd76e));
        // BC 02A0
        gbc.setState(0xb780, 0x7e68, 0x9a80, 0x2ba7, 0xa866, 0xb4ba, 0x0, 0x0);
        gbc.writeMem(0xb780, { 0xbc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e68, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb780));
        // BC 02A1
        gbc.setState(0x1ac2, 0xdafd, 0x7140, 0xce39, 0x5b49, 0xe75a, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02A2
        gbc.setState(0xa36a, 0x497c, 0x60, 0xd17b, 0xaf61, 0xa72e, 0x1, 0x1);
        gbc.writeMem(0xa36a, { 0xbc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0xa36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa36a));
        // BC 02A3
        gbc.setState(0xa21d, 0xda85, 0xebb0, 0x1fa3, 0xd508, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0xa21d, { 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xda85, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa21d));
        // BC 02A4
        gbc.setState(0xbe63, 0xb907, 0x8b50, 0x38a, 0x4c7b, 0x6537, 0x1, 0x1);
        gbc.writeMem(0xbe63, { 0xbc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb907, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbe63));
        // BC 02A5
        gbc.setState(0x2038, 0x6bff, 0xc9d0, 0xd62d, 0x9770, 0xc0f, 0x1, 0x0);
        gbc.writeMem(0x2038, { 0xbc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6bff, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02A6
        gbc.setState(0x41b, 0xdaea, 0x3430, 0x19da, 0xbaf0, 0xf953, 0x0, 0x1);
        gbc.writeMem(0x41b, { 0xbc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02A7
        gbc.setState(0xa427, 0xe771, 0xef10, 0xbcf6, 0x85d1, 0x222c, 0x0, 0x0);
        gbc.writeMem(0xa427, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe771, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa427));
        // BC 02A8
        gbc.setState(0xe370, 0x5714, 0x1280, 0xbb2a, 0x866d, 0xc20b, 0x0, 0x1);
        gbc.writeMem(0xe370, { 0xbc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe370));
        // BC 02A9
        gbc.setState(0xec67, 0x9df3, 0x1a20, 0x32d8, 0x6ee9, 0xfc31, 0x1, 0x0);
        gbc.writeMem(0xec67, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0xec68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec67));
        // BC 02AA
        gbc.setState(0x1481, 0x9b9f, 0x7d90, 0x5bb, 0x1b25, 0x9d22, 0x0, 0x1);
        gbc.writeMem(0x1481, { 0xbc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0x1482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02AB
        gbc.setState(0x289e, 0x62bf, 0xafe0, 0xab3e, 0xc0b6, 0xb2d8, 0x1, 0x1);
        gbc.writeMem(0x289e, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x62bf, gbc.sp());
        EXPECT(0x289f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02AC
        gbc.setState(0x98fd, 0xd913, 0x7820, 0x1a18, 0xf554, 0x9a33, 0x1, 0x0);
        gbc.writeMem(0x98fd, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd913, gbc.sp());
        EXPECT(0x98fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x98fd));
        // BC 02AD
        gbc.setState(0x7538, 0x45ef, 0xd4c0, 0x3821, 0xf328, 0xda1a, 0x1, 0x1);
        gbc.writeMem(0x7538, { 0xbc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0x7539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02AE
        gbc.setState(0x3f6, 0x3dae, 0xb5d0, 0xfbf6, 0x2837, 0x2955, 0x0, 0x1);
        gbc.writeMem(0x3f6, { 0xbc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3dae, gbc.sp());
        EXPECT(0x3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02AF
        gbc.setState(0xa338, 0x5159, 0xa6a0, 0x845e, 0x3532, 0x5e6f, 0x0, 0x1);
        gbc.writeMem(0xa338, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa338));
        // BC 02B0
        gbc.setState(0x43c2, 0x1110, 0x76d0, 0xe097, 0xe18e, 0xfddf, 0x1, 0x0);
        gbc.writeMem(0x43c2, { 0xbc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1110, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02B1
        gbc.setState(0x91d5, 0x2536, 0x8a10, 0x2899, 0xb21c, 0x685a, 0x1, 0x0);
        gbc.writeMem(0x91d5, { 0xbc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2536, gbc.sp());
        EXPECT(0x91d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x91d5));
        // BC 02B2
        gbc.setState(0xbfc4, 0x75b5, 0xe2c0, 0x8788, 0x7c68, 0xf979, 0x1, 0x1);
        gbc.writeMem(0xbfc4, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbfc4));
        // BC 02B3
        gbc.setState(0xa606, 0x99f6, 0x7e10, 0x98aa, 0xff4c, 0xa6f9, 0x1, 0x0);
        gbc.writeMem(0xa606, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0xa607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa606));
        // BC 02B4
        gbc.setState(0x9359, 0xa964, 0xcb60, 0xd900, 0xf673, 0x43ee, 0x0, 0x0);
        gbc.writeMem(0x9359, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa964, gbc.sp());
        EXPECT(0x935a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9359));
        // BC 02B5
        gbc.setState(0x98bb, 0x5917, 0x7c80, 0x9a81, 0x2947, 0x63a9, 0x0, 0x0);
        gbc.writeMem(0x98bb, { 0xbc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5917, gbc.sp());
        EXPECT(0x98bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x98bb));
        // BC 02B6
        gbc.setState(0xcbc2, 0xac11, 0x6550, 0xfb1d, 0x285a, 0x5302, 0x0, 0x0);
        gbc.writeMem(0xcbc2, { 0xbc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac11, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcbc2));
        // BC 02B7
        gbc.setState(0xbe90, 0x1583, 0x12b0, 0x338a, 0xbaac, 0x9df0, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0xbc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbe90));
        // BC 02B8
        gbc.setState(0xbe1c, 0x35b, 0x9b70, 0xd6a8, 0x8f68, 0x329b, 0x1, 0x0);
        gbc.writeMem(0xbe1c, { 0xbc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0xbe1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbe1c));
        // BC 02B9
        gbc.setState(0xb636, 0x4262, 0x6770, 0xabbf, 0xa267, 0xeaad, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb636));
        // BC 02BA
        gbc.setState(0x9711, 0xdd3f, 0x7ff0, 0x7eea, 0x3a81, 0xd788, 0x0, 0x0);
        gbc.writeMem(0x9711, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9711));
        // BC 02BB
        gbc.setState(0x67a5, 0xafd8, 0x5dd0, 0x6026, 0xa7, 0xdc28, 0x1, 0x1);
        gbc.writeMem(0x67a5, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x67a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02BD
        gbc.setState(0xcce6, 0x6cfd, 0x2c0, 0xb1f2, 0xe6ae, 0x4def, 0x1, 0x0);
        gbc.writeMem(0xcce6, { 0xbc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6cfd, gbc.sp());
        EXPECT(0xcce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcce6));
        // BC 02BE
        gbc.setState(0xe3a7, 0xe015, 0xf080, 0xd607, 0xa999, 0x3430, 0x1, 0x0);
        gbc.writeMem(0xe3a7, { 0xbc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe015, gbc.sp());
        EXPECT(0xe3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe3a7));
        // BC 02BF
        gbc.setState(0x760e, 0x79c1, 0xf080, 0x5201, 0xf880, 0x37cf, 0x0, 0x1);
        gbc.writeMem(0x760e, { 0xbc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x79c1, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02C0
        gbc.setState(0x779e, 0x3f8d, 0x3a10, 0xd54d, 0xebe7, 0xf7ad, 0x1, 0x0);
        gbc.writeMem(0x779e, { 0xbc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f8d, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02C1
        gbc.setState(0x3e61, 0xbc22, 0xeff0, 0xa570, 0x968b, 0x234f, 0x1, 0x1);
        gbc.writeMem(0x3e61, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0x3e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02C2
        gbc.setState(0xe25c, 0x9b34, 0xcd50, 0x9049, 0x9c61, 0x9f55, 0x0, 0x1);
        gbc.writeMem(0xe25c, { 0xbc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0xe25d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe25c));
        // BC 02C3
        gbc.setState(0x3426, 0x6471, 0xe5c0, 0xe092, 0x5530, 0xe2f, 0x1, 0x1);
        gbc.writeMem(0x3426, { 0xbc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02C4
        gbc.setState(0x84e1, 0x2a5d, 0xe000, 0x79d8, 0x3e6, 0x7684, 0x1, 0x0);
        gbc.writeMem(0x84e1, { 0xbc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x84e1));
        // BC 02C5
        gbc.setState(0xa141, 0x9f09, 0x8ac0, 0x9092, 0x1084, 0x632b, 0x0, 0x1);
        gbc.writeMem(0xa141, { 0xbc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9f09, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa141));
        // BC 02C6
        gbc.setState(0x310, 0xaf52, 0x43c0, 0x8e20, 0xff7d, 0x2397, 0x0, 0x1);
        gbc.writeMem(0x310, { 0xbc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaf52, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02C7
        gbc.setState(0xac7b, 0xaa07, 0x66c0, 0x2082, 0x888a, 0xae41, 0x0, 0x0);
        gbc.writeMem(0xac7b, { 0xbc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaa07, gbc.sp());
        EXPECT(0xac7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xac7b));
        // BC 02C8
        gbc.setState(0xfb, 0x8bdd, 0x6f30, 0x1a3a, 0x80a8, 0x19a9, 0x1, 0x1);
        gbc.writeMem(0xfb, { 0xbc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8bdd, gbc.sp());
        EXPECT(0xfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02C9
        gbc.setState(0xb6aa, 0xbeb0, 0x27b0, 0x98fe, 0xbbaf, 0x132, 0x1, 0x1);
        gbc.writeMem(0xb6aa, { 0xbc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb6aa));
        // BC 02CA
        gbc.setState(0x9126, 0xd9f1, 0xbcc0, 0xeb8f, 0x594, 0x4e, 0x0, 0x0);
        gbc.writeMem(0x9126, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd9f1, gbc.sp());
        EXPECT(0x9127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9126));
        // BC 02CB
        gbc.setState(0xdf63, 0xbeac, 0xcb60, 0x5568, 0x815, 0x7d3c, 0x1, 0x1);
        gbc.writeMem(0xdf63, { 0xbc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbeac, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdf63));
        // BC 02CC
        gbc.setState(0xc9b2, 0x12ba, 0x6720, 0xcb2c, 0x7863, 0xbe7b, 0x0, 0x1);
        gbc.writeMem(0xc9b2, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x12ba, gbc.sp());
        EXPECT(0xc9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc9b2));
        // BC 02CD
        gbc.setState(0xa19d, 0x3e5c, 0x96c0, 0x3f5b, 0xa439, 0xcbd, 0x1, 0x0);
        gbc.writeMem(0xa19d, { 0xbc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3e5c, gbc.sp());
        EXPECT(0xa19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa19d));
        // BC 02CE
        gbc.setState(0x4a20, 0x1fed, 0x890, 0x9117, 0x5334, 0x8895, 0x0, 0x1);
        gbc.writeMem(0x4a20, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1fed, gbc.sp());
        EXPECT(0x4a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02CF
        gbc.setState(0x4a5, 0x8d1c, 0xdf20, 0xf9ed, 0xd53d, 0x91f2, 0x0, 0x1);
        gbc.writeMem(0x4a5, { 0xbc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02D0
        gbc.setState(0xedff, 0xb50d, 0xde50, 0xc818, 0xf394, 0x2d75, 0x0, 0x0);
        gbc.writeMem(0xedff, { 0xbc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xedff));
        // BC 02D1
        gbc.setState(0xcd75, 0x2f6d, 0xc10, 0x28b8, 0x13b5, 0x70c2, 0x0, 0x1);
        gbc.writeMem(0xcd75, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2f6d, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcd75));
        // BC 02D2
        gbc.setState(0x5a2f, 0xc765, 0x9a50, 0x35db, 0xa7d4, 0x2f3f, 0x0, 0x0);
        gbc.writeMem(0x5a2f, { 0xbc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc765, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02D5
        gbc.setState(0xec69, 0x8536, 0xf230, 0x74a8, 0x61ad, 0x3945, 0x0, 0x1);
        gbc.writeMem(0xec69, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8536, gbc.sp());
        EXPECT(0xec6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec69));
        // BC 02D6
        gbc.setState(0xa98a, 0x99e0, 0x310, 0x6d46, 0x86e4, 0x6aff, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x99e0, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa98a));
        // BC 02D7
        gbc.setState(0x700c, 0xf64e, 0xe650, 0xa3b2, 0x9cb3, 0x7719, 0x1, 0x1);
        gbc.writeMem(0x700c, { 0xbc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf64e, gbc.sp());
        EXPECT(0x700d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02D8
        gbc.setState(0x669b, 0xa5a4, 0x7c30, 0x8d1, 0xc417, 0xb645, 0x1, 0x0);
        gbc.writeMem(0x669b, { 0xbc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02D9
        gbc.setState(0x939c, 0x9a3b, 0xc820, 0xa076, 0x2480, 0xbd7a, 0x0, 0x1);
        gbc.writeMem(0x939c, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x939c));
        // BC 02DA
        gbc.setState(0x1415, 0x9773, 0x2d60, 0xbf52, 0xca3a, 0x6cdf, 0x1, 0x0);
        gbc.writeMem(0x1415, { 0xbc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02DB
        gbc.setState(0x63b8, 0x1be, 0xa000, 0x8164, 0x5eb3, 0x1acb, 0x1, 0x1);
        gbc.writeMem(0x63b8, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1be, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02DC
        gbc.setState(0x2aa, 0x46b, 0x4e70, 0xa422, 0x1d4b, 0xc0e0, 0x1, 0x0);
        gbc.writeMem(0x2aa, { 0xbc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x46b, gbc.sp());
        EXPECT(0x2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02DD
        gbc.setState(0xbd4c, 0xfb61, 0xe0, 0xa0a1, 0x3d69, 0xdeb1, 0x0, 0x1);
        gbc.writeMem(0xbd4c, { 0xbc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbd4c));
        // BC 02DE
        gbc.setState(0xb80b, 0x2ce0, 0x40f0, 0x60bc, 0xf940, 0x2318, 0x0, 0x1);
        gbc.writeMem(0xb80b, { 0xbc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2ce0, gbc.sp());
        EXPECT(0xb80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb80b));
        // BC 02DF
        gbc.setState(0x1ccc, 0x82d8, 0x78b0, 0x4e9, 0xb20d, 0x5c8e, 0x0, 0x1);
        gbc.writeMem(0x1ccc, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x82d8, gbc.sp());
        EXPECT(0x1ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02E0
        gbc.setState(0x41ce, 0x2c4b, 0x7390, 0x38a, 0xe225, 0x34bd, 0x0, 0x0);
        gbc.writeMem(0x41ce, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0x41cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02E1
        gbc.setState(0x21a8, 0xec33, 0x5f90, 0x22b7, 0xdfab, 0x232c, 0x0, 0x1);
        gbc.writeMem(0x21a8, { 0xbc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02E2
        gbc.setState(0xde87, 0x3034, 0x3a10, 0x5e27, 0xffd2, 0x232d, 0x1, 0x0);
        gbc.writeMem(0xde87, { 0xbc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0xde88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xde87));
        // BC 02E3
        gbc.setState(0x3531, 0x964c, 0xf30, 0xd893, 0xf593, 0x81fe, 0x1, 0x0);
        gbc.writeMem(0x3531, { 0xbc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x964c, gbc.sp());
        EXPECT(0x3532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02E5
        gbc.setState(0x912c, 0xfd2a, 0x3e0, 0x3ab, 0x8814, 0x8551, 0x1, 0x0);
        gbc.writeMem(0x912c, { 0xbc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0x912d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x912c));
        // BC 02E6
        gbc.setState(0xc888, 0x614, 0x2cb0, 0xdb47, 0x85b1, 0xfb30, 0x1, 0x0);
        gbc.writeMem(0xc888, { 0xbc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc888));
        // BC 02E7
        gbc.setState(0xbb17, 0xc22b, 0xb250, 0x7027, 0x70df, 0xaab6, 0x0, 0x0);
        gbc.writeMem(0xbb17, { 0xbc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0xbb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbb17));
        // BC 02E8
        gbc.setState(0x5b02, 0xd6, 0x3860, 0x3e60, 0x4b00, 0x4e11, 0x1, 0x0);
        gbc.writeMem(0x5b02, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd6, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02E9
        gbc.setState(0x1dd7, 0x112f, 0xd970, 0x379e, 0x7114, 0xd74a, 0x0, 0x0);
        gbc.writeMem(0x1dd7, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x112f, gbc.sp());
        EXPECT(0x1dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02EA
        gbc.setState(0xedf4, 0x8b1f, 0x4750, 0xa1c4, 0xc6e9, 0x6401, 0x0, 0x1);
        gbc.writeMem(0xedf4, { 0xbc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xedf4));
        // BC 02EB
        gbc.setState(0x5ebf, 0x2ab4, 0xeeb0, 0x168e, 0xaccf, 0x9ba4, 0x0, 0x0);
        gbc.writeMem(0x5ebf, { 0xbc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2ab4, gbc.sp());
        EXPECT(0x5ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02EC
        gbc.setState(0x790d, 0xd50, 0xc740, 0x62cc, 0xe765, 0x56f0, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02ED
        gbc.setState(0xc0a0, 0x1f0a, 0x8530, 0x6676, 0x46d3, 0x2820, 0x0, 0x0);
        gbc.writeMem(0xc0a0, { 0xbc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1f0a, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc0a0));
        // BC 02EE
        gbc.setState(0x64c8, 0xdd3, 0x23c0, 0x46ee, 0x8a38, 0x8969, 0x1, 0x0);
        gbc.writeMem(0x64c8, { 0xbc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0x64c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02EF
        gbc.setState(0x226b, 0x38a7, 0x5950, 0x993f, 0x55a8, 0x58c7, 0x1, 0x0);
        gbc.writeMem(0x226b, { 0xbc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x38a7, gbc.sp());
        EXPECT(0x226c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02F0
        gbc.setState(0xa746, 0xefd3, 0x1f90, 0x8df8, 0x50f6, 0xdfd6, 0x1, 0x0);
        gbc.writeMem(0xa746, { 0xbc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xa747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa746));
        // BC 02F1
        gbc.setState(0xd38c, 0x9817, 0x8690, 0x8c74, 0x4f20, 0x5c49, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd38c));
        // BC 02F2
        gbc.setState(0x892e, 0x756, 0xb8a0, 0x89ed, 0xbec2, 0x7860, 0x0, 0x0);
        gbc.writeMem(0x892e, { 0xbc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x892f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x892e));
        // BC 02F3
        gbc.setState(0x45ec, 0xaead, 0xdef0, 0xd229, 0x7457, 0xcb26, 0x1, 0x1);
        gbc.writeMem(0x45ec, { 0xbc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaead, gbc.sp());
        EXPECT(0x45ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 02F4
        gbc.setState(0x81f6, 0x1907, 0x9d40, 0x1fb2, 0xc7e7, 0xd412, 0x0, 0x0);
        gbc.writeMem(0x81f6, { 0xbc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x81f6));
        // BC 02F5
        gbc.setState(0x1433, 0xc312, 0x89c0, 0xa9e4, 0x1fff, 0xee75, 0x1, 0x0);
        gbc.writeMem(0x1433, { 0xbc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02F7
        gbc.setState(0x40e8, 0xb4df, 0xc010, 0x480, 0xaa40, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0x40e8, { 0xbc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0x40e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 02F8
        gbc.setState(0xa894, 0x8f0, 0x7410, 0x97f6, 0xf886, 0xa9f9, 0x1, 0x0);
        gbc.writeMem(0xa894, { 0xbc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8f0, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa894));
        // BC 02F9
        gbc.setState(0x861a, 0xd494, 0x8cb0, 0x9b3c, 0x849d, 0x794b, 0x0, 0x0);
        gbc.writeMem(0x861a, { 0xbc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd494, gbc.sp());
        EXPECT(0x861b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x861a));
        // BC 02FA
        gbc.setState(0xdd42, 0xadfc, 0xed80, 0x3804, 0xdaa9, 0x6672, 0x1, 0x1);
        gbc.writeMem(0xdd42, { 0xbc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xadfc, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdd42));
        // BC 02FC
        gbc.setState(0xe8c5, 0xaf69, 0xeba0, 0x4b07, 0xc6bb, 0x84f6, 0x0, 0x1);
        gbc.writeMem(0xe8c5, { 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe8c5));
        // BC 02FD
        gbc.setState(0xeafe, 0x1c8e, 0x20d0, 0xc832, 0x410c, 0xb588, 0x1, 0x1);
        gbc.writeMem(0xeafe, { 0xbc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c8e, gbc.sp());
        EXPECT(0xeaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeafe));
        // BC 02FE
        gbc.setState(0xb8d4, 0x2e17, 0xd0, 0xc1c9, 0x4356, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0xb8d4, { 0xbc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e17, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb8d4));
        // BC 02FF
        gbc.setState(0x9864, 0x426c, 0xc370, 0xd0b5, 0xc86f, 0xf755, 0x1, 0x0);
        gbc.writeMem(0x9864, { 0xbc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x426c, gbc.sp());
        EXPECT(0x9865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9864));
        // BC 0300
        gbc.setState(0x492d, 0x61df, 0xc750, 0x6e04, 0xf2bd, 0xffc7, 0x0, 0x1);
        gbc.writeMem(0x492d, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x61df, gbc.sp());
        EXPECT(0x492e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0301
        gbc.setState(0xc74f, 0x55a0, 0x2270, 0xd87e, 0x6476, 0xdb79, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0xbc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc74f));
        // BC 0302
        gbc.setState(0xeef9, 0xc521, 0x1320, 0x9a31, 0x32da, 0xb8f4, 0x1, 0x1);
        gbc.writeMem(0xeef9, { 0xbc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0xeefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeef9));
        // BC 0303
        gbc.setState(0xc42e, 0xec0f, 0xad80, 0x3b05, 0x3010, 0x4463, 0x1, 0x0);
        gbc.writeMem(0xc42e, { 0xbc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xec0f, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc42e));
        // BC 0304
        gbc.setState(0xdaad, 0x495a, 0xd4f0, 0x307f, 0xdd07, 0xe8b9, 0x1, 0x1);
        gbc.writeMem(0xdaad, { 0xbc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdaad));
        // BC 0306
        gbc.setState(0x9a27, 0x318c, 0x9e50, 0x14d0, 0xd3b7, 0x20ea, 0x1, 0x0);
        gbc.writeMem(0x9a27, { 0xbc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x318c, gbc.sp());
        EXPECT(0x9a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9a27));
        // BC 0307
        gbc.setState(0x38a9, 0x2ff7, 0x7150, 0x9bcf, 0xf792, 0x28b5, 0x1, 0x1);
        gbc.writeMem(0x38a9, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2ff7, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0308
        gbc.setState(0x714b, 0xf597, 0x12d0, 0xe8db, 0xdb35, 0x9727, 0x1, 0x0);
        gbc.writeMem(0x714b, { 0xbc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf597, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0309
        gbc.setState(0xaedf, 0x5a37, 0xab20, 0xfb6a, 0x6634, 0x39df, 0x1, 0x0);
        gbc.writeMem(0xaedf, { 0xbc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0xaee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaedf));
        // BC 030B
        gbc.setState(0x43e6, 0x2e5b, 0xfb80, 0x40e7, 0x537e, 0xcbd2, 0x1, 0x0);
        gbc.writeMem(0x43e6, { 0xbc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0x43e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 030C
        gbc.setState(0x132e, 0x47b8, 0x80e0, 0x61cd, 0x2b59, 0xc53b, 0x1, 0x1);
        gbc.writeMem(0x132e, { 0xbc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x47b8, gbc.sp());
        EXPECT(0x132f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 030D
        gbc.setState(0x7bd, 0x1dd1, 0xcad0, 0xa61d, 0x86fb, 0xaa87, 0x0, 0x0);
        gbc.writeMem(0x7bd, { 0xbc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1dd1, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 030E
        gbc.setState(0x5c59, 0xe9d3, 0x9930, 0xf33, 0x534f, 0xfbc4, 0x0, 0x0);
        gbc.writeMem(0x5c59, { 0xbc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe9d3, gbc.sp());
        EXPECT(0x5c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 030F
        gbc.setState(0xc8dc, 0x8f56, 0x4210, 0x106b, 0x1a9a, 0xd55d, 0x1, 0x1);
        gbc.writeMem(0xc8dc, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8f56, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc8dc));
        // BC 0310
        gbc.setState(0x4886, 0xbf9f, 0x4730, 0x1d9d, 0x8d99, 0x2af4, 0x1, 0x1);
        gbc.writeMem(0x4886, { 0xbc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0x4887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0311
        gbc.setState(0x5e3b, 0xf117, 0x5750, 0x637a, 0x1b80, 0x1416, 0x1, 0x1);
        gbc.writeMem(0x5e3b, { 0xbc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0312
        gbc.setState(0xad38, 0xcde8, 0x38a0, 0x6354, 0xccc, 0xf3c4, 0x1, 0x0);
        gbc.writeMem(0xad38, { 0xbc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcde8, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xad38));
        // BC 0313
        gbc.setState(0xa784, 0x3473, 0x8b80, 0x950c, 0xb4e6, 0x6fe3, 0x1, 0x1);
        gbc.writeMem(0xa784, { 0xbc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0xa785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa784));
        // BC 0314
        gbc.setState(0x10c7, 0x8773, 0xb120, 0x2c4, 0xd80b, 0x3e65, 0x1, 0x1);
        gbc.writeMem(0x10c7, { 0xbc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8773, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0315
        gbc.setState(0xb6cd, 0xbdfb, 0x13e0, 0x7dc1, 0x5844, 0x485a, 0x0, 0x1);
        gbc.writeMem(0xb6cd, { 0xbc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbdfb, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb6cd));
        // BC 0316
        gbc.setState(0x5210, 0xc649, 0xfb50, 0x375c, 0x2e0d, 0xe755, 0x1, 0x1);
        gbc.writeMem(0x5210, { 0xbc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x5211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0317
        gbc.setState(0x7843, 0x3a49, 0x93e0, 0xb1c7, 0xaedf, 0x764c, 0x0, 0x0);
        gbc.writeMem(0x7843, { 0xbc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3a49, gbc.sp());
        EXPECT(0x7844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0319
        gbc.setState(0x1770, 0x3613, 0x46d0, 0x1ec6, 0xe31c, 0xe169, 0x1, 0x0);
        gbc.writeMem(0x1770, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3613, gbc.sp());
        EXPECT(0x1771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 031A
        gbc.setState(0x61d7, 0xd5c7, 0xf280, 0xd0f2, 0x9aef, 0xbea5, 0x1, 0x1);
        gbc.writeMem(0x61d7, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd5c7, gbc.sp());
        EXPECT(0x61d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 031B
        gbc.setState(0xafb9, 0xfbd9, 0xc00, 0xbb12, 0x5155, 0x2a7d, 0x1, 0x0);
        gbc.writeMem(0xafb9, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfbd9, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xafb9));
        // BC 031C
        gbc.setState(0xb952, 0x9649, 0xa260, 0x7800, 0xce9b, 0xcf2d, 0x0, 0x0);
        gbc.writeMem(0xb952, { 0xbc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9649, gbc.sp());
        EXPECT(0xb953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb952));
        // BC 031D
        gbc.setState(0x4af3, 0xe22f, 0xfec0, 0x2bfc, 0x93ea, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0x4af3, { 0xbc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe22f, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 031E
        gbc.setState(0xc457, 0x999, 0xdfe0, 0xdfad, 0x22c0, 0xabd8, 0x1, 0x0);
        gbc.writeMem(0xc457, { 0xbc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x999, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc457));
        // BC 031F
        gbc.setState(0xcb5f, 0x2a9a, 0x71f0, 0xdc3c, 0x7b75, 0x6444, 0x0, 0x1);
        gbc.writeMem(0xcb5f, { 0xbc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0xcb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcb5f));
        // BC 0320
        gbc.setState(0x26b9, 0xb98, 0x2fb0, 0xd21, 0x3d11, 0xc166, 0x1, 0x0);
        gbc.writeMem(0x26b9, { 0xbc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0321
        gbc.setState(0xec34, 0x5d74, 0x5d40, 0xc810, 0xd731, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0xec34, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d74, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec34));
        // BC 0322
        gbc.setState(0x5334, 0xd7ad, 0x4130, 0x7796, 0xcec5, 0xdd7c, 0x1, 0x0);
        gbc.writeMem(0x5334, { 0xbc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd7ad, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0324
        gbc.setState(0x18e9, 0xe8b2, 0xb330, 0xb813, 0x72a5, 0xa8d0, 0x0, 0x0);
        gbc.writeMem(0x18e9, { 0xbc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe8b2, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0325
        gbc.setState(0xe6a9, 0x77aa, 0xa070, 0xfd69, 0xe1f9, 0x3c5f, 0x1, 0x1);
        gbc.writeMem(0xe6a9, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x77aa, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe6a9));
        // BC 0326
        gbc.setState(0x7e15, 0xad31, 0xabe0, 0xd1a2, 0x7da, 0x72f8, 0x0, 0x1);
        gbc.writeMem(0x7e15, { 0xbc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0327
        gbc.setState(0x64ff, 0x4333, 0xb210, 0x3558, 0xa27c, 0x8064, 0x1, 0x1);
        gbc.writeMem(0x64ff, { 0xbc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4333, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0328
        gbc.setState(0x3499, 0xd692, 0x1080, 0xdabd, 0xa0ea, 0xba9f, 0x1, 0x1);
        gbc.writeMem(0x3499, { 0xbc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0329
        gbc.setState(0x1e56, 0xbf83, 0x4590, 0xd47, 0x229d, 0x3e4e, 0x1, 0x0);
        gbc.writeMem(0x1e56, { 0xbc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbf83, gbc.sp());
        EXPECT(0x1e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 032B
        gbc.setState(0xcdf7, 0xbee0, 0xcac0, 0xa3a4, 0x2853, 0x8e4, 0x0, 0x0);
        gbc.writeMem(0xcdf7, { 0xbc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xcdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcdf7));
        // BC 032C
        gbc.setState(0x5229, 0x5318, 0x4e10, 0xad06, 0xa89e, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0x5229, { 0xbc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0x522a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 032D
        gbc.setState(0xd1b2, 0x5988, 0x5250, 0x88c7, 0xed7a, 0x29a8, 0x1, 0x1);
        gbc.writeMem(0xd1b2, { 0xbc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5988, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd1b2));
        // BC 032E
        gbc.setState(0x464d, 0xe7de, 0x5c20, 0x5b2, 0xa57a, 0x425b, 0x0, 0x1);
        gbc.writeMem(0x464d, { 0xbc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0x464e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 032F
        gbc.setState(0xca87, 0xf565, 0x85d0, 0x85c7, 0x536d, 0x56cd, 0x0, 0x1);
        gbc.writeMem(0xca87, { 0xbc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0xca88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xca87));
        // BC 0330
        gbc.setState(0x9895, 0x2fa8, 0x4210, 0xa217, 0x1250, 0xa529, 0x1, 0x1);
        gbc.writeMem(0x9895, { 0xbc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2fa8, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9895));
        // BC 0332
        gbc.setState(0x3460, 0x16f2, 0xb570, 0xe001, 0x2ce5, 0x3b6b, 0x0, 0x0);
        gbc.writeMem(0x3460, { 0xbc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x3461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0333
        gbc.setState(0x83df, 0xad6f, 0xa930, 0xa7bf, 0xf731, 0x32a9, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xbc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0x83e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x83df));
        // BC 0334
        gbc.setState(0x5c45, 0xde9c, 0x5d80, 0xc33a, 0xb4aa, 0x5045, 0x1, 0x0);
        gbc.writeMem(0x5c45, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x5c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0336
        gbc.setState(0xeb36, 0x1361, 0x68d0, 0x6150, 0x405e, 0x3941, 0x1, 0x1);
        gbc.writeMem(0xeb36, { 0xbc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1361, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeb36));
        // BC 0337
        gbc.setState(0xbf, 0x758, 0xc610, 0x42e5, 0xb763, 0x5ffb, 0x1, 0x0);
        gbc.writeMem(0xbf, { 0xbc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x758, gbc.sp());
        EXPECT(0xc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0338
        gbc.setState(0xe896, 0x8701, 0xd970, 0x7817, 0xbeb0, 0x59b8, 0x0, 0x1);
        gbc.writeMem(0xe896, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8701, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe896));
        // BC 0339
        gbc.setState(0xd2c2, 0x65dd, 0x20, 0x63d, 0xb94f, 0x72c7, 0x1, 0x0);
        gbc.writeMem(0xd2c2, { 0xbc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd2c2));
        // BC 033A
        gbc.setState(0x1e8a, 0x4c17, 0x7fe0, 0x1751, 0x73be, 0x10cf, 0x1, 0x1);
        gbc.writeMem(0x1e8a, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4c17, gbc.sp());
        EXPECT(0x1e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 033B
        gbc.setState(0x76aa, 0x2e2c, 0xe150, 0x3c9a, 0xfda6, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0x76aa, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2e2c, gbc.sp());
        EXPECT(0x76ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 033C
        gbc.setState(0xa4fe, 0xe631, 0x63c0, 0x5b4f, 0xedb3, 0x250e, 0x1, 0x1);
        gbc.writeMem(0xa4fe, { 0xbc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xa4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa4fe));
        // BC 033D
        gbc.setState(0x4846, 0xb13f, 0x31d0, 0xabc5, 0x615f, 0x2b6, 0x1, 0x0);
        gbc.writeMem(0x4846, { 0xbc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0x4847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 033E
        gbc.setState(0xe5e4, 0x2a38, 0xa120, 0x7e4c, 0x5109, 0x2551, 0x0, 0x1);
        gbc.writeMem(0xe5e4, { 0xbc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2a38, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe5e4));
        // BC 033F
        gbc.setState(0xdf0a, 0x9e49, 0xa7f0, 0xe206, 0xf505, 0x527, 0x0, 0x1);
        gbc.writeMem(0xdf0a, { 0xbc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0xdf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdf0a));
        // BC 0340
        gbc.setState(0xdccc, 0xb388, 0xd230, 0x70a7, 0xa7cc, 0xa1b8, 0x0, 0x0);
        gbc.writeMem(0xdccc, { 0xbc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb388, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdccc));
        // BC 0341
        gbc.setState(0x63b5, 0x7867, 0x78d0, 0x3bff, 0x7885, 0xc25d, 0x0, 0x0);
        gbc.writeMem(0x63b5, { 0xbc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0x63b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0342
        gbc.setState(0xa7fd, 0x77d1, 0xd340, 0x2da, 0xf502, 0x4d67, 0x1, 0x0);
        gbc.writeMem(0xa7fd, { 0xbc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0xa7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa7fd));
        // BC 0343
        gbc.setState(0xb1be, 0xea5f, 0x7fb0, 0xf67, 0xf33f, 0x241, 0x1, 0x1);
        gbc.writeMem(0xb1be, { 0xbc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0xb1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb1be));
        // BC 0344
        gbc.setState(0xe7ff, 0xbacd, 0xecb0, 0x80c, 0x47e0, 0x2ddc, 0x0, 0x1);
        gbc.writeMem(0xe7ff, { 0xbc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe7ff));
        // BC 0345
        gbc.setState(0x328c, 0x5fec, 0xa930, 0x8466, 0xd4db, 0x2609, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xbc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0x328d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0346
        gbc.setState(0x58aa, 0xe133, 0xf880, 0x26b3, 0x77a3, 0x838a, 0x1, 0x0);
        gbc.writeMem(0x58aa, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe133, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0347
        gbc.setState(0xefbc, 0xa68b, 0x2080, 0x44e6, 0xaaa7, 0xa458, 0x0, 0x0);
        gbc.writeMem(0xefbc, { 0xbc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa68b, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xefbc));
        // BC 0348
        gbc.setState(0x1aaa, 0x8ab1, 0xbf00, 0xb118, 0xdef, 0x3c2f, 0x0, 0x1);
        gbc.writeMem(0x1aaa, { 0xbc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8ab1, gbc.sp());
        EXPECT(0x1aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 034A
        gbc.setState(0x980, 0x764d, 0xb70, 0x7f85, 0xc1f3, 0x30d3, 0x0, 0x1);
        gbc.writeMem(0x980, { 0xbc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x764d, gbc.sp());
        EXPECT(0x981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 034B
        gbc.setState(0xce86, 0x8ca0, 0x8d20, 0xd7df, 0xca29, 0x5688, 0x0, 0x0);
        gbc.writeMem(0xce86, { 0xbc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8ca0, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xce86));
        // BC 034C
        gbc.setState(0xa379, 0x2488, 0xd350, 0x48f4, 0x358, 0x7d73, 0x0, 0x1);
        gbc.writeMem(0xa379, { 0xbc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0xa37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa379));
        // BC 034D
        gbc.setState(0x9c8f, 0xdc8d, 0x5000, 0x17ab, 0xfbf1, 0x9bcc, 0x1, 0x1);
        gbc.writeMem(0x9c8f, { 0xbc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdc8d, gbc.sp());
        EXPECT(0x9c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9c8f));
        // BC 034E
        gbc.setState(0x60ea, 0xe792, 0x9700, 0x9614, 0x25ef, 0x2bd7, 0x1, 0x1);
        gbc.writeMem(0x60ea, { 0xbc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe792, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 034F
        gbc.setState(0x8649, 0xac85, 0x4810, 0x87d7, 0xac4a, 0xca02, 0x0, 0x1);
        gbc.writeMem(0x8649, { 0xbc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8649));
        // BC 0351
        gbc.setState(0x8eb, 0xb25c, 0x3bc0, 0x2e95, 0xc37d, 0x236, 0x0, 0x1);
        gbc.writeMem(0x8eb, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb25c, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0352
        gbc.setState(0x6ee8, 0xff9e, 0x4690, 0xcfe7, 0x9253, 0x51a9, 0x0, 0x0);
        gbc.writeMem(0x6ee8, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xff9e, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0353
        gbc.setState(0xbdb8, 0x39af, 0xa0c0, 0x3c, 0x755a, 0x9edb, 0x0, 0x1);
        gbc.writeMem(0xbdb8, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x39af, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbdb8));
        // BC 0354
        gbc.setState(0xbe1a, 0xe668, 0x6470, 0x3ae5, 0xde1, 0x17b2, 0x1, 0x1);
        gbc.writeMem(0xbe1a, { 0xbc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe668, gbc.sp());
        EXPECT(0xbe1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbe1a));
        // BC 0355
        gbc.setState(0x6213, 0x6f07, 0x3be0, 0x781c, 0xc2d3, 0xd6d1, 0x0, 0x1);
        gbc.writeMem(0x6213, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6f07, gbc.sp());
        EXPECT(0x6214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0356
        gbc.setState(0x6184, 0x3530, 0x6720, 0xa177, 0xf562, 0x78ca, 0x1, 0x0);
        gbc.writeMem(0x6184, { 0xbc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3530, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0357
        gbc.setState(0xcdd, 0x7c4, 0x6ce0, 0xb4fd, 0xd635, 0x998f, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7c4, gbc.sp());
        EXPECT(0xcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0358
        gbc.setState(0x99e6, 0x6ed3, 0xc880, 0x937a, 0x3874, 0x5ab, 0x0, 0x1);
        gbc.writeMem(0x99e6, { 0xbc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0x99e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x99e6));
        // BC 0359
        gbc.setState(0x8606, 0xb039, 0x190, 0xd7ae, 0xe0bf, 0xd581, 0x1, 0x1);
        gbc.writeMem(0x8606, { 0xbc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb039, gbc.sp());
        EXPECT(0x8607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8606));
        // BC 035A
        gbc.setState(0x3175, 0x351c, 0xedf0, 0x1f0a, 0xcdc2, 0xce2a, 0x0, 0x0);
        gbc.writeMem(0x3175, { 0xbc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x351c, gbc.sp());
        EXPECT(0x3176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 035B
        gbc.setState(0x7c5e, 0xe910, 0xfed0, 0x4a1c, 0xe3f0, 0xe019, 0x1, 0x1);
        gbc.writeMem(0x7c5e, { 0xbc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe910, gbc.sp());
        EXPECT(0x7c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 035C
        gbc.setState(0x3457, 0x63cb, 0xcd60, 0x8383, 0xe330, 0xa408, 0x1, 0x0);
        gbc.writeMem(0x3457, { 0xbc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x63cb, gbc.sp());
        EXPECT(0x3458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 035D
        gbc.setState(0xd91, 0xe2a2, 0x9e0, 0x1382, 0xf50a, 0xcd01, 0x0, 0x0);
        gbc.writeMem(0xd91, { 0xbc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2a2, gbc.sp());
        EXPECT(0xd92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 035E
        gbc.setState(0x55a3, 0x7648, 0x700, 0xf4c9, 0xcfbc, 0xf7d5, 0x1, 0x1);
        gbc.writeMem(0x55a3, { 0xbc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7648, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 035F
        gbc.setState(0xe26, 0xb35f, 0xc6c0, 0x5b5e, 0xfe9f, 0x4647, 0x1, 0x1);
        gbc.writeMem(0xe26, { 0xbc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb35f, gbc.sp());
        EXPECT(0xe27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0360
        gbc.setState(0x5425, 0xa819, 0xaf70, 0x3935, 0x6293, 0x8a0e, 0x1, 0x0);
        gbc.writeMem(0x5425, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa819, gbc.sp());
        EXPECT(0x5426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0361
        gbc.setState(0x17ea, 0x917, 0xa610, 0x8433, 0xc684, 0xf6bc, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0xbc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0x17eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0362
        gbc.setState(0x688f, 0x680f, 0x2810, 0x32b0, 0x9686, 0x83e, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0xbc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x680f, gbc.sp());
        EXPECT(0x6890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0364
        gbc.setState(0x7d8, 0xeaad, 0x2d40, 0x6477, 0xfb8f, 0x8a63, 0x0, 0x0);
        gbc.writeMem(0x7d8, { 0xbc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0365
        gbc.setState(0x9acb, 0x9f9d, 0x3ca0, 0x212b, 0xceb1, 0x4ae1, 0x1, 0x1);
        gbc.writeMem(0x9acb, { 0xbc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9f9d, gbc.sp());
        EXPECT(0x9acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9acb));
        // BC 0366
        gbc.setState(0x2fb6, 0xf159, 0xc570, 0x333a, 0x65a5, 0x1623, 0x1, 0x1);
        gbc.writeMem(0x2fb6, { 0xbc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf159, gbc.sp());
        EXPECT(0x2fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0367
        gbc.setState(0x157f, 0xabb1, 0x98a0, 0x49ed, 0x7649, 0x32c2, 0x1, 0x0);
        gbc.writeMem(0x157f, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xabb1, gbc.sp());
        EXPECT(0x1580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0368
        gbc.setState(0x9ca0, 0x8584, 0xcf70, 0x91e0, 0xda50, 0xaf9e, 0x0, 0x0);
        gbc.writeMem(0x9ca0, { 0xbc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8584, gbc.sp());
        EXPECT(0x9ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9ca0));
        // BC 0369
        gbc.setState(0x1a22, 0xe49c, 0xae00, 0x4453, 0x2d29, 0x8693, 0x1, 0x0);
        gbc.writeMem(0x1a22, { 0xbc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 036A
        gbc.setState(0x3513, 0xeff8, 0xa5f0, 0x4e71, 0x724b, 0xc726, 0x0, 0x0);
        gbc.writeMem(0x3513, { 0xbc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 036B
        gbc.setState(0x8902, 0x981e, 0xc50, 0xca1e, 0x6358, 0xbe5d, 0x0, 0x0);
        gbc.writeMem(0x8902, { 0xbc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x981e, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8902));
        // BC 036C
        gbc.setState(0x9ce3, 0xc5a9, 0x620, 0xfba9, 0xbc96, 0x21b5, 0x0, 0x1);
        gbc.writeMem(0x9ce3, { 0xbc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x9ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9ce3));
        // BC 036D
        gbc.setState(0x9de, 0x4779, 0xd970, 0x7c86, 0xd109, 0x4b0a, 0x1, 0x1);
        gbc.writeMem(0x9de, { 0xbc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0x9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 036E
        gbc.setState(0x1f38, 0x9cf7, 0xed0, 0xc7c0, 0x70cc, 0xff3f, 0x1, 0x1);
        gbc.writeMem(0x1f38, { 0xbc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0x1f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 036F
        gbc.setState(0x668e, 0xf824, 0xfc80, 0x3eab, 0x9192, 0xf542, 0x1, 0x1);
        gbc.writeMem(0x668e, { 0xbc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0x668f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0371
        gbc.setState(0x889c, 0xf2c0, 0xe210, 0x4893, 0xf433, 0x8521, 0x1, 0x0);
        gbc.writeMem(0x889c, { 0xbc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf2c0, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x889c));
        // BC 0372
        gbc.setState(0xdbc3, 0x2c2f, 0xa390, 0x3de7, 0x616, 0x7cfe, 0x0, 0x0);
        gbc.writeMem(0xdbc3, { 0xbc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2c2f, gbc.sp());
        EXPECT(0xdbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdbc3));
        // BC 0373
        gbc.setState(0x4e8b, 0x13e6, 0x9c70, 0xfe45, 0x4fdf, 0xffb4, 0x0, 0x1);
        gbc.writeMem(0x4e8b, { 0xbc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x13e6, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0374
        gbc.setState(0x48fd, 0xfb05, 0x28e0, 0x6a52, 0x2d5c, 0x502b, 0x1, 0x1);
        gbc.writeMem(0x48fd, { 0xbc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0x48fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0375
        gbc.setState(0x7473, 0x64a4, 0xa470, 0xf6fb, 0x3bb4, 0x78f2, 0x0, 0x0);
        gbc.writeMem(0x7473, { 0xbc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0x7474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0376
        gbc.setState(0x9404, 0x8adb, 0x4ce0, 0xff13, 0x6c80, 0x9139, 0x1, 0x0);
        gbc.writeMem(0x9404, { 0xbc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8adb, gbc.sp());
        EXPECT(0x9405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9404));
        // BC 0377
        gbc.setState(0xcacf, 0xe1fb, 0x1c80, 0x5d27, 0x5194, 0x4d67, 0x0, 0x0);
        gbc.writeMem(0xcacf, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0xcad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcacf));
        // BC 0378
        gbc.setState(0x44d1, 0x138c, 0x6e40, 0xa119, 0x9d28, 0x635c, 0x1, 0x0);
        gbc.writeMem(0x44d1, { 0xbc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x138c, gbc.sp());
        EXPECT(0x44d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0379
        gbc.setState(0x3cf, 0x9c26, 0x46f0, 0xdc4f, 0x9eb, 0x38d5, 0x0, 0x0);
        gbc.writeMem(0x3cf, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 037A
        gbc.setState(0x5b1e, 0xa48d, 0x3c20, 0xbfed, 0x8090, 0x98cd, 0x0, 0x1);
        gbc.writeMem(0x5b1e, { 0xbc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa48d, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 037B
        gbc.setState(0x5412, 0x6597, 0x6050, 0x528b, 0xd3b1, 0xf0f8, 0x1, 0x1);
        gbc.writeMem(0x5412, { 0xbc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6597, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 037C
        gbc.setState(0xd0c7, 0x191d, 0xada0, 0x9e2f, 0xaff7, 0x6cf8, 0x0, 0x1);
        gbc.writeMem(0xd0c7, { 0xbc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x191d, gbc.sp());
        EXPECT(0xd0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd0c7));
        // BC 037D
        gbc.setState(0xa038, 0x93db, 0x8a70, 0x43c7, 0xc969, 0xa255, 0x1, 0x1);
        gbc.writeMem(0xa038, { 0xbc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa038));
        // BC 037E
        gbc.setState(0xd008, 0x5977, 0xafd0, 0x4585, 0xf566, 0x1601, 0x0, 0x1);
        gbc.writeMem(0xd008, { 0xbc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5977, gbc.sp());
        EXPECT(0xd009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd008));
        // BC 037F
        gbc.setState(0xc977, 0x8a82, 0x740, 0xc0d6, 0xf5f6, 0xde5b, 0x0, 0x0);
        gbc.writeMem(0xc977, { 0xbc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8a82, gbc.sp());
        EXPECT(0xc978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc977));
        // BC 0380
        gbc.setState(0x8b36, 0xb706, 0x69b0, 0x5d63, 0x6e23, 0xc375, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xbc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8b36));
        // BC 0381
        gbc.setState(0xeffb, 0x285e, 0x5e60, 0x42b4, 0x1fff, 0xbe9a, 0x1, 0x0);
        gbc.writeMem(0xeffb, { 0xbc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0xeffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeffb));
        // BC 0382
        gbc.setState(0x7d5c, 0x69e8, 0xc910, 0x211b, 0xfbdc, 0x5828, 0x0, 0x1);
        gbc.writeMem(0x7d5c, { 0xbc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x7d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0383
        gbc.setState(0x1e4d, 0x2573, 0xa270, 0x9845, 0xe055, 0x4794, 0x0, 0x1);
        gbc.writeMem(0x1e4d, { 0xbc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2573, gbc.sp());
        EXPECT(0x1e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0384
        gbc.setState(0x29f7, 0x8a4a, 0x10d0, 0x1f2, 0xfdbd, 0x622, 0x0, 0x1);
        gbc.writeMem(0x29f7, { 0xbc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a4a, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0385
        gbc.setState(0x6608, 0xe8ab, 0x3520, 0x6c6d, 0x3236, 0x5b8f, 0x0, 0x0);
        gbc.writeMem(0x6608, { 0xbc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0387
        gbc.setState(0x42c, 0x517d, 0x9120, 0xb5fa, 0x17cc, 0xf025, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xbc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x517d, gbc.sp());
        EXPECT(0x42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0388
        gbc.setState(0xc141, 0x9c2c, 0x2640, 0x61a2, 0x3893, 0xbc10, 0x1, 0x1);
        gbc.writeMem(0xc141, { 0xbc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc141));
        // BC 038A
        gbc.setState(0x9191, 0xaf29, 0x8640, 0x1db0, 0x3c28, 0x5dcc, 0x1, 0x1);
        gbc.writeMem(0x9191, { 0xbc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9191));
        // BC 038B
        gbc.setState(0x2fb1, 0x501, 0x11a0, 0x72b8, 0x93d2, 0x766, 0x1, 0x1);
        gbc.writeMem(0x2fb1, { 0xbc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0x2fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 038C
        gbc.setState(0xaedf, 0x44bb, 0x59e0, 0x290f, 0xdfaf, 0xcb27, 0x0, 0x1);
        gbc.writeMem(0xaedf, { 0xbc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0xaee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaedf));
        // BC 038D
        gbc.setState(0x9767, 0x905, 0x2340, 0x932e, 0xd4e, 0xa914, 0x0, 0x1);
        gbc.writeMem(0x9767, { 0xbc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9767));
        // BC 038E
        gbc.setState(0x6445, 0xf7f9, 0x64c0, 0x414a, 0x1c99, 0x4814, 0x0, 0x1);
        gbc.writeMem(0x6445, { 0xbc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf7f9, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 038F
        gbc.setState(0x43fe, 0x2879, 0x7cc0, 0xf79f, 0xbeee, 0x5350, 0x0, 0x1);
        gbc.writeMem(0x43fe, { 0xbc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2879, gbc.sp());
        EXPECT(0x43ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0390
        gbc.setState(0xc1a8, 0x13da, 0x14e0, 0x1df7, 0x8d45, 0x22f9, 0x0, 0x1);
        gbc.writeMem(0xc1a8, { 0xbc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0xc1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc1a8));
        // BC 0391
        gbc.setState(0xaeca, 0xe17f, 0x4b50, 0xc1cd, 0x241d, 0x1cb8, 0x0, 0x0);
        gbc.writeMem(0xaeca, { 0xbc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe17f, gbc.sp());
        EXPECT(0xaecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaeca));
        // BC 0392
        gbc.setState(0xd62d, 0xfef3, 0x6440, 0xa1b5, 0xe086, 0xa73c, 0x1, 0x1);
        gbc.writeMem(0xd62d, { 0xbc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfef3, gbc.sp());
        EXPECT(0xd62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd62d));
        // BC 0393
        gbc.setState(0x4afc, 0x8b87, 0x77f0, 0xe489, 0xcdd6, 0xb9f, 0x1, 0x0);
        gbc.writeMem(0x4afc, { 0xbc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8b87, gbc.sp());
        EXPECT(0x4afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0394
        gbc.setState(0x6443, 0xf54a, 0x8f0, 0xc1a9, 0xcada, 0x30d, 0x0, 0x1);
        gbc.writeMem(0x6443, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf54a, gbc.sp());
        EXPECT(0x6444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 0395
        gbc.setState(0x3e34, 0x699d, 0x36c0, 0xea36, 0x831d, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0xbc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x699d, gbc.sp());
        EXPECT(0x3e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 0396
        gbc.setState(0x9480, 0x74c5, 0xbe20, 0x3b1b, 0x350, 0xb7c4, 0x1, 0x1);
        gbc.writeMem(0x9480, { 0xbc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x74c5, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9480));
        // BC 0397
        gbc.setState(0xeca7, 0x3069, 0x23e0, 0xe0a1, 0xe6bc, 0x7593, 0x1, 0x1);
        gbc.writeMem(0xeca7, { 0xbc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3069, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeca7));
        // BC 0398
        gbc.setState(0x8bc3, 0x1290, 0x46c0, 0x2c81, 0xf16e, 0x480b, 0x0, 0x0);
        gbc.writeMem(0x8bc3, { 0xbc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8bc3));
        // BC 0399
        gbc.setState(0xa713, 0xf8ac, 0xaa00, 0x27ce, 0xbbdb, 0xc3ef, 0x1, 0x1);
        gbc.writeMem(0xa713, { 0xbc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf8ac, gbc.sp());
        EXPECT(0xa714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa713));
        // BC 039A
        gbc.setState(0xe1d0, 0xb291, 0xb920, 0x2e0c, 0x3545, 0xc743, 0x1, 0x1);
        gbc.writeMem(0xe1d0, { 0xbc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb291, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe1d0));
        // BC 039B
        gbc.setState(0xa01, 0x2349, 0xf1e0, 0xd69e, 0xdf4d, 0xc7b2, 0x1, 0x0);
        gbc.writeMem(0xa01, { 0xbc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2349, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 039C
        gbc.setState(0x9bd6, 0xb840, 0x7230, 0x9ab4, 0x77b8, 0x8ff8, 0x0, 0x1);
        gbc.writeMem(0x9bd6, { 0xbc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9bd6));
        // BC 039D
        gbc.setState(0xd27, 0x5d27, 0xebc0, 0xbe63, 0x72ea, 0xaefc, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xbc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 039E
        gbc.setState(0xe4c1, 0x933b, 0x49c0, 0xe34e, 0x6c40, 0xd2f4, 0x1, 0x1);
        gbc.writeMem(0xe4c1, { 0xbc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x933b, gbc.sp());
        EXPECT(0xe4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe4c1));
        // BC 039F
        gbc.setState(0x2d7d, 0xd755, 0xf8d0, 0x4233, 0x40de, 0xe328, 0x1, 0x0);
        gbc.writeMem(0x2d7d, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd755, gbc.sp());
        EXPECT(0x2d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03A0
        gbc.setState(0x4fc0, 0xc536, 0x6c70, 0x3a7a, 0x53bf, 0x4055, 0x0, 0x0);
        gbc.writeMem(0x4fc0, { 0xbc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0x4fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03A1
        gbc.setState(0xe7ec, 0x5092, 0xbb90, 0x6657, 0x4416, 0x85b5, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xbc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0xe7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe7ec));
        // BC 03A2
        gbc.setState(0x4d9b, 0xe20f, 0x3640, 0x292e, 0x89ec, 0x9365, 0x1, 0x0);
        gbc.writeMem(0x4d9b, { 0xbc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe20f, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03A4
        gbc.setState(0x48a1, 0xcdf9, 0xf780, 0x2781, 0x62bc, 0xb8ef, 0x0, 0x0);
        gbc.writeMem(0x48a1, { 0xbc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcdf9, gbc.sp());
        EXPECT(0x48a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03A5
        gbc.setState(0x66e7, 0x442e, 0x40e0, 0x5f9, 0xea3c, 0x195c, 0x0, 0x1);
        gbc.writeMem(0x66e7, { 0xbc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x442e, gbc.sp());
        EXPECT(0x66e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03A6
        gbc.setState(0x30b, 0x4072, 0xbba0, 0xc0b4, 0x839b, 0xd1e3, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0xbc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03A8
        gbc.setState(0xa9bb, 0x7d4d, 0x54a0, 0x766b, 0x6d7e, 0xe94, 0x0, 0x1);
        gbc.writeMem(0xa9bb, { 0xbc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0xa9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa9bb));
        // BC 03A9
        gbc.setState(0x7c2f, 0xcab, 0xa010, 0x887e, 0x7de1, 0xc93e, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xbc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0x7c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03AA
        gbc.setState(0xab7, 0xd0c7, 0xe100, 0x1e07, 0xf398, 0x16af, 0x1, 0x1);
        gbc.writeMem(0xab7, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd0c7, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03AB
        gbc.setState(0xd156, 0x196f, 0xc740, 0x72af, 0x7c6b, 0x7355, 0x0, 0x1);
        gbc.writeMem(0xd156, { 0xbc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x196f, gbc.sp());
        EXPECT(0xd157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd156));
        // BC 03AC
        gbc.setState(0x6505, 0x1899, 0x1620, 0xd141, 0x5f51, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x6505, { 0xbc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1899, gbc.sp());
        EXPECT(0x6506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03AD
        gbc.setState(0x425f, 0x52d2, 0x9890, 0x16a5, 0xe24d, 0xfce6, 0x0, 0x0);
        gbc.writeMem(0x425f, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03AE
        gbc.setState(0x8f7d, 0xc541, 0xdce0, 0xd3aa, 0x63a5, 0xf821, 0x1, 0x0);
        gbc.writeMem(0x8f7d, { 0xbc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8f7d));
        // BC 03AF
        gbc.setState(0xe24b, 0x677b, 0x1ac0, 0xc07a, 0x3aec, 0x88cb, 0x0, 0x0);
        gbc.writeMem(0xe24b, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0xe24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe24b));
        // BC 03B0
        gbc.setState(0x1f9e, 0x5d5b, 0xb4d0, 0xfd46, 0xac30, 0x387b, 0x0, 0x0);
        gbc.writeMem(0x1f9e, { 0xbc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03B1
        gbc.setState(0xc6c0, 0x19b0, 0x7ef0, 0x650b, 0x1784, 0x9c47, 0x1, 0x0);
        gbc.writeMem(0xc6c0, { 0xbc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x19b0, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc6c0));
        // BC 03B2
        gbc.setState(0x1332, 0x9dbf, 0x1b0, 0xf5c, 0xce80, 0x99d, 0x1, 0x0);
        gbc.writeMem(0x1332, { 0xbc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03B3
        gbc.setState(0x38a8, 0x2d06, 0x820, 0xbf60, 0xee78, 0x994c, 0x1, 0x0);
        gbc.writeMem(0x38a8, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2d06, gbc.sp());
        EXPECT(0x38a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03B4
        gbc.setState(0x9692, 0xd3e7, 0x3ba0, 0x9853, 0xe400, 0x5ed6, 0x1, 0x1);
        gbc.writeMem(0x9692, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9692));
        // BC 03B5
        gbc.setState(0x2bac, 0x6852, 0x66f0, 0xd188, 0xe68e, 0xa192, 0x0, 0x0);
        gbc.writeMem(0x2bac, { 0xbc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03B6
        gbc.setState(0xa3f0, 0xbd27, 0xe1e0, 0xf29c, 0x4e71, 0x2c24, 0x1, 0x1);
        gbc.writeMem(0xa3f0, { 0xbc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0xa3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa3f0));
        // BC 03B7
        gbc.setState(0x1c1, 0xa5dd, 0x8070, 0x24aa, 0x458f, 0x5291, 0x1, 0x0);
        gbc.writeMem(0x1c1, { 0xbc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03B8
        gbc.setState(0x36b6, 0x61d0, 0xf270, 0x1d0d, 0xe6b7, 0x914f, 0x0, 0x1);
        gbc.writeMem(0x36b6, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x36b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03B9
        gbc.setState(0x8ef5, 0xdb95, 0x8210, 0x1aa6, 0xa030, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x8ef5, { 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdb95, gbc.sp());
        EXPECT(0x8ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8ef5));
        // BC 03BA
        gbc.setState(0xaea, 0xc596, 0x270, 0x7655, 0x8d44, 0x8d6, 0x1, 0x0);
        gbc.writeMem(0xaea, { 0xbc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc596, gbc.sp());
        EXPECT(0xaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03BB
        gbc.setState(0xe068, 0x8b46, 0x73d0, 0x6dc3, 0xf4e0, 0x1e5a, 0x1, 0x1);
        gbc.writeMem(0xe068, { 0xbc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8b46, gbc.sp());
        EXPECT(0xe069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe068));
        // BC 03BC
        gbc.setState(0x407f, 0x5a50, 0x1a50, 0x233, 0xe922, 0x1aee, 0x1, 0x0);
        gbc.writeMem(0x407f, { 0xbc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5a50, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03BD
        gbc.setState(0x21c8, 0x2af7, 0xd4c0, 0x9b60, 0x896, 0xbd59, 0x0, 0x1);
        gbc.writeMem(0x21c8, { 0xbc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x21c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03BE
        gbc.setState(0x43c3, 0x343d, 0xcde0, 0xeddd, 0x7f1a, 0xe509, 0x1, 0x0);
        gbc.writeMem(0x43c3, { 0xbc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03BF
        gbc.setState(0xd91, 0x898d, 0x2840, 0x2282, 0xa9ba, 0x9b80, 0x0, 0x0);
        gbc.writeMem(0xd91, { 0xbc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0xd92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03C0
        gbc.setState(0xd0d0, 0xf724, 0x4030, 0xd46e, 0xc3e9, 0xda5d, 0x0, 0x0);
        gbc.writeMem(0xd0d0, { 0xbc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd0d0));
        // BC 03C1
        gbc.setState(0x250, 0xbb24, 0x9490, 0x5115, 0xffdb, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0x250, { 0xbc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbb24, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03C2
        gbc.setState(0xbafe, 0x5008, 0x3ea0, 0x7f1b, 0x6497, 0x878, 0x1, 0x0);
        gbc.writeMem(0xbafe, { 0xbc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5008, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbafe));
        // BC 03C3
        gbc.setState(0x5732, 0x46b7, 0x1520, 0x2223, 0x6a9d, 0x7417, 0x0, 0x1);
        gbc.writeMem(0x5732, { 0xbc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x46b7, gbc.sp());
        EXPECT(0x5733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03C6
        gbc.setState(0xc70c, 0xd226, 0xd800, 0x4c41, 0xa47d, 0x3a5a, 0x0, 0x0);
        gbc.writeMem(0xc70c, { 0xbc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd226, gbc.sp());
        EXPECT(0xc70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc70c));
        // BC 03C7
        gbc.setState(0xcda3, 0xd7f9, 0x2d00, 0xf009, 0xa6a4, 0x8569, 0x1, 0x0);
        gbc.writeMem(0xcda3, { 0xbc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd7f9, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcda3));
        // BC 03C8
        gbc.setState(0x5e87, 0x61d2, 0xa530, 0xada6, 0xf888, 0xa45d, 0x1, 0x0);
        gbc.writeMem(0x5e87, { 0xbc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x61d2, gbc.sp());
        EXPECT(0x5e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03C9
        gbc.setState(0xd4d5, 0x66de, 0x8820, 0xecd7, 0x268e, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0xd4d5, { 0xbc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x66de, gbc.sp());
        EXPECT(0xd4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd4d5));
        // BC 03CA
        gbc.setState(0x59b0, 0x72c5, 0xb2e0, 0xc60, 0x9d8a, 0x74e6, 0x0, 0x0);
        gbc.writeMem(0x59b0, { 0xbc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0x59b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03CB
        gbc.setState(0x7ee3, 0xfdae, 0x98b0, 0x6c57, 0xc520, 0x350d, 0x1, 0x0);
        gbc.writeMem(0x7ee3, { 0xbc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfdae, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03CC
        gbc.setState(0xba75, 0x4a8b, 0xd170, 0x892d, 0x7118, 0xf1ed, 0x1, 0x0);
        gbc.writeMem(0xba75, { 0xbc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xba75));
        // BC 03CD
        gbc.setState(0x6403, 0x3ed0, 0xacb0, 0xdbb3, 0xdfde, 0xa58d, 0x0, 0x1);
        gbc.writeMem(0x6403, { 0xbc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3ed0, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03CE
        gbc.setState(0xa949, 0xd345, 0xaf0, 0x1fde, 0x8c31, 0x756c, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0xbc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd345, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa949));
        // BC 03CF
        gbc.setState(0xc459, 0xdd34, 0x8b50, 0xad1a, 0x9815, 0x172f, 0x1, 0x1);
        gbc.writeMem(0xc459, { 0xbc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0xc45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc459));
        // BC 03D0
        gbc.setState(0x368a, 0xf7a0, 0x3380, 0x7b21, 0x3db3, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0x368a, { 0xbc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03D1
        gbc.setState(0xdc42, 0x100d, 0xc1d0, 0xc931, 0x99c6, 0xade6, 0x1, 0x0);
        gbc.writeMem(0xdc42, { 0xbc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x100d, gbc.sp());
        EXPECT(0xdc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xdc42));
        // BC 03D2
        gbc.setState(0xefdc, 0x435a, 0x92c0, 0x337f, 0x7a94, 0xa5a6, 0x1, 0x1);
        gbc.writeMem(0xefdc, { 0xbc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xefdc));
        // BC 03D3
        gbc.setState(0x7c1b, 0xf20c, 0x2f50, 0x863e, 0x9a2f, 0x606a, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xbc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf20c, gbc.sp());
        EXPECT(0x7c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03D4
        gbc.setState(0xe76c, 0x9bcc, 0x2a90, 0x9460, 0xd46, 0xe90, 0x0, 0x1);
        gbc.writeMem(0xe76c, { 0xbc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9bcc, gbc.sp());
        EXPECT(0xe76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe76c));
        // BC 03D5
        gbc.setState(0x2d57, 0xe15b, 0x4930, 0x3de6, 0x7226, 0x95c0, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0xbc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe15b, gbc.sp());
        EXPECT(0x2d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03D6
        gbc.setState(0xb91, 0xee89, 0xbd20, 0x87af, 0x871a, 0x311b, 0x1, 0x0);
        gbc.writeMem(0xb91, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0xb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03D7
        gbc.setState(0x1236, 0x8b20, 0xf440, 0x18ac, 0xbd2c, 0x1636, 0x0, 0x0);
        gbc.writeMem(0x1236, { 0xbc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8b20, gbc.sp());
        EXPECT(0x1237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03D8
        gbc.setState(0x3b80, 0xfca0, 0xecd0, 0xcd70, 0x7a7b, 0x9aff, 0x1, 0x0);
        gbc.writeMem(0x3b80, { 0xbc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfca0, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03DA
        gbc.setState(0x888e, 0x612f, 0xbbd0, 0xf4b6, 0xc03, 0x67ef, 0x1, 0x0);
        gbc.writeMem(0x888e, { 0xbc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x612f, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x888e));
        // BC 03DB
        gbc.setState(0xe311, 0x9305, 0xf310, 0x4d70, 0xa422, 0x3674, 0x1, 0x1);
        gbc.writeMem(0xe311, { 0xbc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9305, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe311));
        // BC 03DC
        gbc.setState(0xbb6c, 0xa97e, 0xf270, 0x91f3, 0xa72e, 0x3983, 0x0, 0x0);
        gbc.writeMem(0xbb6c, { 0xbc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa97e, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbb6c));
        // BC 03DD
        gbc.setState(0xe350, 0xeced, 0x3d60, 0x1e4f, 0xe530, 0xa8cd, 0x0, 0x1);
        gbc.writeMem(0xe350, { 0xbc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeced, gbc.sp());
        EXPECT(0xe351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe350));
        // BC 03DE
        gbc.setState(0x23b7, 0xed3a, 0x80f0, 0x3ac1, 0x7144, 0x3de, 0x0, 0x0);
        gbc.writeMem(0x23b7, { 0xbc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x23b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03DF
        gbc.setState(0x238d, 0xdbfd, 0xa8b0, 0x6e26, 0x2898, 0x52f0, 0x0, 0x0);
        gbc.writeMem(0x238d, { 0xbc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdbfd, gbc.sp());
        EXPECT(0x238e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E0
        gbc.setState(0x2c6a, 0x3118, 0x1cb0, 0xd9cd, 0xfafa, 0x12b0, 0x1, 0x0);
        gbc.writeMem(0x2c6a, { 0xbc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3118, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E1
        gbc.setState(0x5f86, 0xedf7, 0x5630, 0x1646, 0x7df6, 0x1dc0, 0x0, 0x0);
        gbc.writeMem(0x5f86, { 0xbc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x5f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E2
        gbc.setState(0x7ec2, 0x1e10, 0xef10, 0x1d3, 0x9715, 0x915, 0x0, 0x1);
        gbc.writeMem(0x7ec2, { 0xbc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e10, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E3
        gbc.setState(0x3547, 0xbde1, 0x30d0, 0x465a, 0xba24, 0x51e, 0x1, 0x0);
        gbc.writeMem(0x3547, { 0xbc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0x3548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E4
        gbc.setState(0xb2e, 0x5b72, 0x8d0, 0x9d96, 0xcca3, 0x759f, 0x1, 0x0);
        gbc.writeMem(0xb2e, { 0xbc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03E5
        gbc.setState(0x1d80, 0x3e8b, 0x5df0, 0xf2ad, 0x706e, 0xd89b, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0xbc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BC 03E6
        gbc.setState(0x1ef7, 0x305a, 0xf530, 0xd3e7, 0xf549, 0x5686, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xbc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x305a, gbc.sp());
        EXPECT(0x1ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BC 03E7
        gbc.setState(0x2269, 0xa7a1, 0xf850, 0x12d, 0xac01, 0x8a6f, 0x0, 0x0);
        gbc.writeMem(0x2269, { 0xbc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa7a1, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
