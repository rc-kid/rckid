    TEST(gbcemu, opcode_cb_46) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 46 0000
        gbc.setState(0x728, 0xd912, 0xb3e0, 0xf942, 0x2a84, 0xb3fd, 0x1, 0x0);
        gbc.writeMem(0x728, { 0xcb, 0x46 });
        gbc.writeMem(0xb3fd, { 0x38 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd912, gbc.sp());
        EXPECT(0x72a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb3fd));
        // CB 46 0001
        gbc.setState(0x96c2, 0xce14, 0x5fa0, 0xc7a4, 0x7c05, 0x730e, 0x0, 0x1);
        gbc.writeMem(0x730e, { 0xd6 });
        gbc.writeMem(0x96c2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xce14, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c2));
        EXPECT(0x46, gbc.readMem(0x96c3));
        // CB 46 0002
        gbc.setState(0x9c60, 0x2295, 0x47e0, 0xfb38, 0xac0b, 0xe703, 0x1, 0x1);
        gbc.writeMem(0x9c60, { 0xcb, 0x46 });
        gbc.writeMem(0xe703, { 0xbd });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2295, gbc.sp());
        EXPECT(0x9c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c60));
        EXPECT(0x46, gbc.readMem(0x9c61));
        EXPECT(0xbd, gbc.readMem(0xe703));
        // CB 46 0003
        gbc.setState(0xaaf7, 0xbc5b, 0x7340, 0xd92e, 0x4c98, 0x9865, 0x1, 0x0);
        gbc.writeMem(0x9865, { 0x47 });
        gbc.writeMem(0xaaf7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0xaaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x9865));
        EXPECT(0xcb, gbc.readMem(0xaaf7));
        EXPECT(0x46, gbc.readMem(0xaaf8));
        // CB 46 0004
        gbc.setState(0x1405, 0xf851, 0xba40, 0xa232, 0x5, 0x9603, 0x0, 0x0);
        gbc.writeMem(0x1405, { 0xcb, 0x46 });
        gbc.writeMem(0x9603, { 0x69 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0x1407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9603));
        // CB 46 0005
        gbc.setState(0x8923, 0x1609, 0xc580, 0x534c, 0x8801, 0xa8b, 0x0, 0x0);
        gbc.writeMem(0xa8b, { 0xfd });
        gbc.writeMem(0x8923, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1609, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8923));
        EXPECT(0x46, gbc.readMem(0x8924));
        // CB 46 0006
        gbc.setState(0xc858, 0xa2df, 0xc940, 0x5025, 0x232f, 0xb17, 0x0, 0x1);
        gbc.writeMem(0xb17, { 0x4b });
        gbc.writeMem(0xc858, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa2df, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc858));
        EXPECT(0x46, gbc.readMem(0xc859));
        // CB 46 0007
        gbc.setState(0xd383, 0xc314, 0xa7c0, 0x622c, 0x5f3a, 0xb6ce, 0x0, 0x1);
        gbc.writeMem(0xb6ce, { 0xd9 });
        gbc.writeMem(0xd383, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0xd385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb6ce));
        EXPECT(0xcb, gbc.readMem(0xd383));
        EXPECT(0x46, gbc.readMem(0xd384));
        // CB 46 0008
        gbc.setState(0x2d7f, 0x7166, 0xab00, 0xc2a4, 0x2006, 0xe3ed, 0x1, 0x0);
        gbc.writeMem(0x2d7f, { 0xcb, 0x46 });
        gbc.writeMem(0xe3ed, { 0x15 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7166, gbc.sp());
        EXPECT(0x2d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe3ed));
        // CB 46 000A
        gbc.setState(0xc67f, 0x92ad, 0x7980, 0x5255, 0x671c, 0xa0a3, 0x0, 0x0);
        gbc.writeMem(0xa0a3, { 0xb1 });
        gbc.writeMem(0xc67f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa0a3));
        EXPECT(0xcb, gbc.readMem(0xc67f));
        EXPECT(0x46, gbc.readMem(0xc680));
        // CB 46 000C
        gbc.setState(0x6035, 0xd810, 0x7d20, 0x3b7c, 0xed2d, 0xa367, 0x0, 0x1);
        gbc.writeMem(0x6035, { 0xcb, 0x46 });
        gbc.writeMem(0xa367, { 0xc1 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd810, gbc.sp());
        EXPECT(0x6037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa367));
        // CB 46 000D
        gbc.setState(0xe5e5, 0xf43b, 0xebf0, 0x64e2, 0xda5a, 0x4a46, 0x1, 0x0);
        gbc.writeMem(0x4a46, { 0x10 });
        gbc.writeMem(0xe5e5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf43b, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e5));
        EXPECT(0x46, gbc.readMem(0xe5e6));
        // CB 46 000E
        gbc.setState(0x16f, 0xcb23, 0xb810, 0x7582, 0x8a03, 0xd01e, 0x1, 0x0);
        gbc.writeMem(0x16f, { 0xcb, 0x46 });
        gbc.writeMem(0xd01e, { 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcb23, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd01e));
        // CB 46 000F
        gbc.setState(0x8b3a, 0xf7f4, 0xe9d0, 0xabe3, 0xc66c, 0x4922, 0x0, 0x1);
        gbc.writeMem(0x4922, { 0xfd });
        gbc.writeMem(0x8b3a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0x8b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3a));
        EXPECT(0x46, gbc.readMem(0x8b3b));
        // CB 46 0010
        gbc.setState(0x9bba, 0x5284, 0x2320, 0x4a30, 0x83ab, 0xf12d, 0x0, 0x0);
        gbc.writeMem(0x9bba, { 0xcb, 0x46 });
        gbc.writeMem(0xf12d, { 0x6a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5284, gbc.sp());
        EXPECT(0x9bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bba));
        EXPECT(0x46, gbc.readMem(0x9bbb));
        EXPECT(0x6a, gbc.readMem(0xf12d));
        // CB 46 0011
        gbc.setState(0x311c, 0x244c, 0xf8b0, 0x7c5e, 0x5b87, 0xcc3f, 0x0, 0x0);
        gbc.writeMem(0x311c, { 0xcb, 0x46 });
        gbc.writeMem(0xcc3f, { 0x5f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0x311e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcc3f));
        // CB 46 0012
        gbc.setState(0xb096, 0x3150, 0x2b70, 0xab05, 0xc23c, 0xc026, 0x0, 0x0);
        gbc.writeMem(0xb096, { 0xcb, 0x46 });
        gbc.writeMem(0xc026, { 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3150, gbc.sp());
        EXPECT(0xb098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb096));
        EXPECT(0x46, gbc.readMem(0xb097));
        EXPECT(0x72, gbc.readMem(0xc026));
        // CB 46 0013
        gbc.setState(0xe0db, 0x39f, 0x4920, 0xefcc, 0xc1e7, 0xc54e, 0x1, 0x1);
        gbc.writeMem(0xc54e, { 0x43 });
        gbc.writeMem(0xe0db, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x39f, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc54e));
        EXPECT(0xcb, gbc.readMem(0xe0db));
        EXPECT(0x46, gbc.readMem(0xe0dc));
        // CB 46 0014
        gbc.setState(0xdaa8, 0x44a1, 0xe0a0, 0x3079, 0x37fc, 0x2a34, 0x0, 0x0);
        gbc.writeMem(0x2a34, { 0x9e });
        gbc.writeMem(0xdaa8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa8));
        EXPECT(0x46, gbc.readMem(0xdaa9));
        // CB 46 0015
        gbc.setState(0xe773, 0xe199, 0x8240, 0x5a73, 0x6718, 0x77b6, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xac });
        gbc.writeMem(0xe773, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0xe775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe773));
        EXPECT(0x46, gbc.readMem(0xe774));
        // CB 46 0016
        gbc.setState(0xe5c6, 0xdef2, 0xcf10, 0xc52b, 0xd56c, 0xe98f, 0x1, 0x1);
        gbc.writeMem(0xe5c6, { 0xcb, 0x46 });
        gbc.writeMem(0xe98f, { 0xde });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdef2, gbc.sp());
        EXPECT(0xe5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c6));
        EXPECT(0x46, gbc.readMem(0xe5c7));
        EXPECT(0xde, gbc.readMem(0xe98f));
        // CB 46 0017
        gbc.setState(0x995c, 0x319, 0xf0, 0x3c23, 0xa9b0, 0x7d2a, 0x1, 0x0);
        gbc.writeMem(0x7d2a, { 0xd2 });
        gbc.writeMem(0x995c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x319, gbc.sp());
        EXPECT(0x995e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995c));
        EXPECT(0x46, gbc.readMem(0x995d));
        // CB 46 0018
        gbc.setState(0xac81, 0x810d, 0x7ae0, 0x1c0e, 0xb7ac, 0x5926, 0x1, 0x0);
        gbc.writeMem(0x5926, { 0xdf });
        gbc.writeMem(0xac81, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x810d, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac81));
        EXPECT(0x46, gbc.readMem(0xac82));
        // CB 46 0019
        gbc.setState(0xb967, 0xa043, 0x8910, 0xa17b, 0x5960, 0xb28d, 0x0, 0x0);
        gbc.writeMem(0xb28d, { 0xe1 });
        gbc.writeMem(0xb967, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa043, gbc.sp());
        EXPECT(0xb969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb28d));
        EXPECT(0xcb, gbc.readMem(0xb967));
        EXPECT(0x46, gbc.readMem(0xb968));
        // CB 46 001B
        gbc.setState(0x56f2, 0xbb7, 0x8e20, 0x5139, 0x3049, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x56f2, { 0xcb, 0x46 });
        gbc.writeMem(0xb834, { 0x33 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbb7, gbc.sp());
        EXPECT(0x56f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb834));
        // CB 46 001C
        gbc.setState(0xbc6c, 0x1691, 0x4e50, 0xc1e7, 0x4500, 0xa88f, 0x1, 0x1);
        gbc.writeMem(0xa88f, { 0x6c });
        gbc.writeMem(0xbc6c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1691, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa88f));
        EXPECT(0xcb, gbc.readMem(0xbc6c));
        EXPECT(0x46, gbc.readMem(0xbc6d));
        // CB 46 001D
        gbc.setState(0x75c0, 0x4bd7, 0xf080, 0x71a1, 0x3d7c, 0xcaf8, 0x1, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0x46 });
        gbc.writeMem(0xcaf8, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4bd7, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcaf8));
        // CB 46 001E
        gbc.setState(0x2e5d, 0x9b45, 0xaf0, 0x16fe, 0x8bd3, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0x46 });
        gbc.writeMem(0x7f47, { 0x8b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 001F
        gbc.setState(0x2d0, 0x9b9b, 0xab50, 0x9b76, 0xa3d6, 0x1777, 0x1, 0x0);
        gbc.writeMem(0x2d0, { 0xcb, 0x46 });
        gbc.writeMem(0x1777, { 0xb3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9b9b, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0020
        gbc.setState(0x4756, 0x752c, 0xd300, 0x9547, 0xbd1f, 0x9ed, 0x1, 0x1);
        gbc.writeMem(0x9ed, { 0x5d });
        gbc.writeMem(0x4756, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x752c, gbc.sp());
        EXPECT(0x4758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0021
        gbc.setState(0x1bd9, 0xf08b, 0xb3e0, 0x9fd, 0xdadc, 0x97db, 0x1, 0x1);
        gbc.writeMem(0x1bd9, { 0xcb, 0x46 });
        gbc.writeMem(0x97db, { 0x3a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf08b, gbc.sp());
        EXPECT(0x1bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x97db));
        // CB 46 0022
        gbc.setState(0x1638, 0xb25c, 0x8350, 0x18b3, 0x37e1, 0xf0b6, 0x0, 0x0);
        gbc.writeMem(0x1638, { 0xcb, 0x46 });
        gbc.writeMem(0xf0b6, { 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb25c, gbc.sp());
        EXPECT(0x163a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xf0b6));
        // CB 46 0023
        gbc.setState(0x5e7e, 0x50fd, 0xa2b0, 0x32a3, 0x8022, 0xcb8f, 0x1, 0x0);
        gbc.writeMem(0x5e7e, { 0xcb, 0x46 });
        gbc.writeMem(0xcb8f, { 0x74 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcb8f));
        // CB 46 0024
        gbc.setState(0x39af, 0xea5c, 0x2a10, 0x90f8, 0x29d6, 0x413f, 0x1, 0x1);
        gbc.writeMem(0x39af, { 0xcb, 0x46 });
        gbc.writeMem(0x413f, { 0xc2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xea5c, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0025
        gbc.setState(0x2e39, 0x15f, 0xbf40, 0xc5ac, 0xfa68, 0xe944, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0xcb, 0x46 });
        gbc.writeMem(0xe944, { 0x19 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x15f, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe944));
        // CB 46 0026
        gbc.setState(0x8e55, 0xabd6, 0x8010, 0x7655, 0x134e, 0x3038, 0x0, 0x1);
        gbc.writeMem(0x3038, { 0xcf });
        gbc.writeMem(0x8e55, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xabd6, gbc.sp());
        EXPECT(0x8e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e55));
        EXPECT(0x46, gbc.readMem(0x8e56));
        // CB 46 0027
        gbc.setState(0xae64, 0x930f, 0xf410, 0xa0d0, 0x8306, 0x9d25, 0x1, 0x0);
        gbc.writeMem(0x9d25, { 0x6b });
        gbc.writeMem(0xae64, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xae66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9d25));
        EXPECT(0xcb, gbc.readMem(0xae64));
        EXPECT(0x46, gbc.readMem(0xae65));
        // CB 46 0028
        gbc.setState(0xa44c, 0x4bcb, 0x5a10, 0x136b, 0x9ee, 0xeb78, 0x1, 0x1);
        gbc.writeMem(0xa44c, { 0xcb, 0x46 });
        gbc.writeMem(0xeb78, { 0x74 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4bcb, gbc.sp());
        EXPECT(0xa44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44c));
        EXPECT(0x46, gbc.readMem(0xa44d));
        EXPECT(0x74, gbc.readMem(0xeb78));
        // CB 46 0029
        gbc.setState(0xd4de, 0xaf24, 0x62d0, 0xf97f, 0xc2f8, 0xeee7, 0x1, 0x0);
        gbc.writeMem(0xd4de, { 0xcb, 0x46 });
        gbc.writeMem(0xeee7, { 0x4c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaf24, gbc.sp());
        EXPECT(0xd4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4de));
        EXPECT(0x46, gbc.readMem(0xd4df));
        EXPECT(0x4c, gbc.readMem(0xeee7));
        // CB 46 002A
        gbc.setState(0xd711, 0xfd06, 0x3ca0, 0xb22d, 0x302e, 0xf8bf, 0x1, 0x1);
        gbc.writeMem(0xd711, { 0xcb, 0x46 });
        gbc.writeMem(0xf8bf, { 0xdc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfd06, gbc.sp());
        EXPECT(0xd713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd711));
        EXPECT(0x46, gbc.readMem(0xd712));
        EXPECT(0xdc, gbc.readMem(0xf8bf));
        // CB 46 002B
        gbc.setState(0x5e79, 0x2065, 0xd7c0, 0x44f0, 0x8224, 0x2bf8, 0x1, 0x1);
        gbc.writeMem(0x2bf8, { 0x85 });
        gbc.writeMem(0x5e79, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2065, gbc.sp());
        EXPECT(0x5e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 002C
        gbc.setState(0x7da, 0x671a, 0x33e0, 0xd3cd, 0xa1ca, 0xe114, 0x1, 0x1);
        gbc.writeMem(0x7da, { 0xcb, 0x46 });
        gbc.writeMem(0xe114, { 0x3e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x671a, gbc.sp());
        EXPECT(0x7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xe114));
        // CB 46 002D
        gbc.setState(0x9036, 0x3c6a, 0x140, 0x5c9a, 0xc96a, 0x6adc, 0x1, 0x0);
        gbc.writeMem(0x6adc, { 0xfb });
        gbc.writeMem(0x9036, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3c6a, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9036));
        EXPECT(0x46, gbc.readMem(0x9037));
        // CB 46 002E
        gbc.setState(0x31e8, 0xcb8f, 0x3c20, 0xcb2b, 0x2e10, 0x17bf, 0x0, 0x1);
        gbc.writeMem(0x17bf, { 0x96 });
        gbc.writeMem(0x31e8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 002F
        gbc.setState(0xbcb3, 0xfa7f, 0x51f0, 0x82ba, 0xd696, 0xd037, 0x0, 0x1);
        gbc.writeMem(0xbcb3, { 0xcb, 0x46 });
        gbc.writeMem(0xd037, { 0x81 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb3));
        EXPECT(0x46, gbc.readMem(0xbcb4));
        EXPECT(0x81, gbc.readMem(0xd037));
        // CB 46 0030
        gbc.setState(0x39c0, 0x281f, 0xfd30, 0x7659, 0x4862, 0x176e, 0x0, 0x1);
        gbc.writeMem(0x176e, { 0x52 });
        gbc.writeMem(0x39c0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0031
        gbc.setState(0x1bd9, 0x597c, 0xa990, 0xae8f, 0x2fc0, 0x216b, 0x0, 0x1);
        gbc.writeMem(0x1bd9, { 0xcb, 0x46 });
        gbc.writeMem(0x216b, { 0x26 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0x1bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0032
        gbc.setState(0x84e7, 0x3e60, 0x6f90, 0xf659, 0x94d3, 0x4bb1, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0x49 });
        gbc.writeMem(0x84e7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e7));
        EXPECT(0x46, gbc.readMem(0x84e8));
        // CB 46 0033
        gbc.setState(0x1098, 0x691, 0x5830, 0x7064, 0x4d0, 0xd2fa, 0x1, 0x1);
        gbc.writeMem(0x1098, { 0xcb, 0x46 });
        gbc.writeMem(0xd2fa, { 0x29 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x691, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd2fa));
        // CB 46 0035
        gbc.setState(0x4ffe, 0xc485, 0x36e0, 0x26ba, 0x29c1, 0x2463, 0x1, 0x1);
        gbc.writeMem(0x2463, { 0xc });
        gbc.writeMem(0x4ffe, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc485, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0036
        gbc.setState(0xaf35, 0x4dcd, 0x94d0, 0xe133, 0xa9a8, 0xbb9, 0x1, 0x1);
        gbc.writeMem(0xbb9, { 0x87 });
        gbc.writeMem(0xaf35, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4dcd, gbc.sp());
        EXPECT(0xaf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf35));
        EXPECT(0x46, gbc.readMem(0xaf36));
        // CB 46 0037
        gbc.setState(0x7862, 0x96ea, 0x3960, 0x7159, 0xe76b, 0xe896, 0x1, 0x0);
        gbc.writeMem(0x7862, { 0xcb, 0x46 });
        gbc.writeMem(0xe896, { 0x5f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x7864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xe896));
        // CB 46 0038
        gbc.setState(0xce57, 0x842f, 0x58e0, 0xc3ab, 0x2f85, 0x565f, 0x1, 0x1);
        gbc.writeMem(0x565f, { 0xe2 });
        gbc.writeMem(0xce57, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x842f, gbc.sp());
        EXPECT(0xce59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce57));
        EXPECT(0x46, gbc.readMem(0xce58));
        // CB 46 0039
        gbc.setState(0xde32, 0xeb65, 0x72a0, 0xceac, 0xed47, 0xe530, 0x0, 0x0);
        gbc.writeMem(0xde32, { 0xcb, 0x46 });
        gbc.writeMem(0xe530, { 0x16 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xeb65, gbc.sp());
        EXPECT(0xde34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde32));
        EXPECT(0x46, gbc.readMem(0xde33));
        EXPECT(0x16, gbc.readMem(0xe530));
        // CB 46 003A
        gbc.setState(0xe193, 0xd8c8, 0x7bd0, 0xc0a7, 0xf7f2, 0xf33e, 0x1, 0x1);
        gbc.writeMem(0xe193, { 0xcb, 0x46 });
        gbc.writeMem(0xf33e, { 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd8c8, gbc.sp());
        EXPECT(0xe195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe193));
        EXPECT(0x46, gbc.readMem(0xe194));
        EXPECT(0x7a, gbc.readMem(0xf33e));
        // CB 46 003B
        gbc.setState(0x4fa3, 0x6f15, 0x1360, 0xeb18, 0x4d00, 0x13df, 0x1, 0x0);
        gbc.writeMem(0x13df, { 0xa3 });
        gbc.writeMem(0x4fa3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 003C
        gbc.setState(0xae5, 0x2da5, 0x2650, 0x34e5, 0x574f, 0x4108, 0x0, 0x1);
        gbc.writeMem(0xae5, { 0xcb, 0x46 });
        gbc.writeMem(0x4108, { 0x80 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0xae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 003D
        gbc.setState(0x2c7f, 0xf13b, 0x4280, 0xda9f, 0xbac9, 0x84df, 0x0, 0x1);
        gbc.writeMem(0x2c7f, { 0xcb, 0x46 });
        gbc.writeMem(0x84df, { 0x47 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf13b, gbc.sp());
        EXPECT(0x2c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x84df));
        // CB 46 003E
        gbc.setState(0x6937, 0x574b, 0x7b70, 0x6404, 0x5fc6, 0xfe78, 0x0, 0x0);
        gbc.writeMem(0x6937, { 0xcb, 0x46 });
        gbc.writeMem(0xfe78, { 0xda });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x574b, gbc.sp());
        EXPECT(0x6939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xfe78));
        // CB 46 003F
        gbc.setState(0x9f3, 0x1ef3, 0x70, 0x4bb3, 0xb145, 0xc467, 0x0, 0x1);
        gbc.writeMem(0x9f3, { 0xcb, 0x46 });
        gbc.writeMem(0xc467, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1ef3, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc467));
        // CB 46 0040
        gbc.setState(0x85b3, 0x71f1, 0x4040, 0x1931, 0x4e5b, 0x578, 0x1, 0x1);
        gbc.writeMem(0x578, { 0x93 });
        gbc.writeMem(0x85b3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x71f1, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b3));
        EXPECT(0x46, gbc.readMem(0x85b4));
        // CB 46 0041
        gbc.setState(0x667b, 0xfca1, 0xfbc0, 0x1e41, 0xd866, 0xff61, 0x1, 0x1);
        gbc.writeMem(0x667b, { 0xcb, 0x46 });
        gbc.writeMem(0xff61, { 0x20 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xff61));
        // CB 46 0043
        gbc.setState(0x22f4, 0x4042, 0xb500, 0xde0, 0x533d, 0x2e4b, 0x1, 0x1);
        gbc.writeMem(0x22f4, { 0xcb, 0x46 });
        gbc.writeMem(0x2e4b, { 0x25 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4042, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0044
        gbc.setState(0x27ba, 0xd6c, 0xdaf0, 0xe44b, 0x72a6, 0x5c2e, 0x1, 0x0);
        gbc.writeMem(0x27ba, { 0xcb, 0x46 });
        gbc.writeMem(0x5c2e, { 0xdd });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0045
        gbc.setState(0x9c7c, 0x45b6, 0x6750, 0x9401, 0xcedd, 0x73d, 0x0, 0x0);
        gbc.writeMem(0x73d, { 0x7d });
        gbc.writeMem(0x9c7c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x45b6, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7c));
        EXPECT(0x46, gbc.readMem(0x9c7d));
        // CB 46 0046
        gbc.setState(0x26fc, 0x8a58, 0x61d0, 0x460c, 0xd6ae, 0x8122, 0x1, 0x1);
        gbc.writeMem(0x26fc, { 0xcb, 0x46 });
        gbc.writeMem(0x8122, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a58, gbc.sp());
        EXPECT(0x26fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8122));
        // CB 46 0047
        gbc.setState(0xb2ae, 0x8f4c, 0x52c0, 0xa2d8, 0x31e2, 0xabc6, 0x0, 0x1);
        gbc.writeMem(0xabc6, { 0x9a });
        gbc.writeMem(0xb2ae, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8f4c, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xabc6));
        EXPECT(0xcb, gbc.readMem(0xb2ae));
        EXPECT(0x46, gbc.readMem(0xb2af));
        // CB 46 0048
        gbc.setState(0xe9b6, 0xf145, 0xf9c0, 0x61af, 0x5e7, 0x581d, 0x1, 0x0);
        gbc.writeMem(0x581d, { 0x3 });
        gbc.writeMem(0xe9b6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf145, gbc.sp());
        EXPECT(0xe9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b6));
        EXPECT(0x46, gbc.readMem(0xe9b7));
        // CB 46 0049
        gbc.setState(0xb0ad, 0x788, 0xc9a0, 0x33eb, 0xcf83, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x511a, { 0xb1 });
        gbc.writeMem(0xb0ad, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ad));
        EXPECT(0x46, gbc.readMem(0xb0ae));
        // CB 46 004A
        gbc.setState(0x63e4, 0xe554, 0x2b70, 0xf2f3, 0x4f2c, 0x60d2, 0x1, 0x0);
        gbc.writeMem(0x60d2, { 0x10 });
        gbc.writeMem(0x63e4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0x63e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 004B
        gbc.setState(0x2e41, 0xf3d7, 0x4db0, 0xf115, 0x843b, 0x60e1, 0x0, 0x0);
        gbc.writeMem(0x2e41, { 0xcb, 0x46 });
        gbc.writeMem(0x60e1, { 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf3d7, gbc.sp());
        EXPECT(0x2e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 004C
        gbc.setState(0xae5f, 0x84bb, 0xcaa0, 0xa4cb, 0x3cbd, 0xe023, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0xcb, 0x46 });
        gbc.writeMem(0xe023, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x84bb, gbc.sp());
        EXPECT(0xae61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5f));
        EXPECT(0x46, gbc.readMem(0xae60));
        EXPECT(0x55, gbc.readMem(0xe023));
        // CB 46 004D
        gbc.setState(0xe09a, 0xa655, 0xaed0, 0x29b4, 0xb7e2, 0xef6e, 0x0, 0x0);
        gbc.writeMem(0xe09a, { 0xcb, 0x46 });
        gbc.writeMem(0xef6e, { 0x97 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa655, gbc.sp());
        EXPECT(0xe09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09a));
        EXPECT(0x46, gbc.readMem(0xe09b));
        EXPECT(0x97, gbc.readMem(0xef6e));
        // CB 46 004E
        gbc.setState(0xf96, 0x67ee, 0x75f0, 0x34cc, 0xd044, 0x474e, 0x1, 0x0);
        gbc.writeMem(0xf96, { 0xcb, 0x46 });
        gbc.writeMem(0x474e, { 0x19 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0xf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 004F
        gbc.setState(0xc5bf, 0xe0a1, 0xaba0, 0xd64e, 0xc2f6, 0xe60, 0x0, 0x0);
        gbc.writeMem(0xe60, { 0x93 });
        gbc.writeMem(0xc5bf, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0xc5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5bf));
        EXPECT(0x46, gbc.readMem(0xc5c0));
        // CB 46 0050
        gbc.setState(0x219b, 0x93a7, 0x3410, 0xaeeb, 0x3fba, 0x77c2, 0x0, 0x1);
        gbc.writeMem(0x219b, { 0xcb, 0x46 });
        gbc.writeMem(0x77c2, { 0x56 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x93a7, gbc.sp());
        EXPECT(0x219d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0051
        gbc.setState(0xa327, 0x3a79, 0xcbc0, 0xac3b, 0xc423, 0x3b91, 0x0, 0x1);
        gbc.writeMem(0x3b91, { 0x4a });
        gbc.writeMem(0xa327, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0xa329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa327));
        EXPECT(0x46, gbc.readMem(0xa328));
        // CB 46 0052
        gbc.setState(0x9615, 0x6522, 0x6d20, 0xee5b, 0x90a4, 0x9d3, 0x1, 0x1);
        gbc.writeMem(0x9d3, { 0xba });
        gbc.writeMem(0x9615, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6522, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9615));
        EXPECT(0x46, gbc.readMem(0x9616));
        // CB 46 0053
        gbc.setState(0x3757, 0xf87a, 0xbbf0, 0xb3fa, 0xcf53, 0xd5a0, 0x1, 0x1);
        gbc.writeMem(0x3757, { 0xcb, 0x46 });
        gbc.writeMem(0xd5a0, { 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0x3759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd5a0));
        // CB 46 0054
        gbc.setState(0x1cf2, 0x1517, 0xdea0, 0x62a0, 0xc3b1, 0x14c1, 0x1, 0x0);
        gbc.writeMem(0x14c1, { 0xd8 });
        gbc.writeMem(0x1cf2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1517, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0055
        gbc.setState(0xbc7d, 0x4fc1, 0x36e0, 0xedcb, 0x6fd6, 0xfe32, 0x0, 0x0);
        gbc.writeMem(0xbc7d, { 0xcb, 0x46 });
        gbc.writeMem(0xfe32, { 0x6d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4fc1, gbc.sp());
        EXPECT(0xbc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7d));
        EXPECT(0x46, gbc.readMem(0xbc7e));
        EXPECT(0x6d, gbc.readMem(0xfe32));
        // CB 46 0056
        gbc.setState(0x7986, 0x54a8, 0x9b0, 0xf15f, 0x11c5, 0x3cc5, 0x1, 0x0);
        gbc.writeMem(0x3cc5, { 0x93 });
        gbc.writeMem(0x7986, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0057
        gbc.setState(0x7f1b, 0x8cb, 0x8f90, 0x1619, 0x75d1, 0x8f0c, 0x1, 0x0);
        gbc.writeMem(0x7f1b, { 0xcb, 0x46 });
        gbc.writeMem(0x8f0c, { 0xfd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0x7f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8f0c));
        // CB 46 0058
        gbc.setState(0x89c1, 0x2493, 0x6630, 0x5bb1, 0xc0c8, 0xe96a, 0x0, 0x0);
        gbc.writeMem(0x89c1, { 0xcb, 0x46 });
        gbc.writeMem(0xe96a, { 0x9a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2493, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c1));
        EXPECT(0x46, gbc.readMem(0x89c2));
        EXPECT(0x9a, gbc.readMem(0xe96a));
        // CB 46 0059
        gbc.setState(0xcb00, 0x620b, 0x6ff0, 0xa6f5, 0x1ebc, 0xa90, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0x3e });
        gbc.writeMem(0xcb00, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x620b, gbc.sp());
        EXPECT(0xcb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb00));
        EXPECT(0x46, gbc.readMem(0xcb01));
        // CB 46 005A
        gbc.setState(0x6144, 0x23be, 0x4460, 0xae63, 0x56c1, 0xb01, 0x1, 0x0);
        gbc.writeMem(0xb01, { 0xb5 });
        gbc.writeMem(0x6144, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 005B
        gbc.setState(0xce4e, 0xd68b, 0x77c0, 0xed5b, 0xb834, 0xe978, 0x1, 0x1);
        gbc.writeMem(0xce4e, { 0xcb, 0x46 });
        gbc.writeMem(0xe978, { 0xbf });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd68b, gbc.sp());
        EXPECT(0xce50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4e));
        EXPECT(0x46, gbc.readMem(0xce4f));
        EXPECT(0xbf, gbc.readMem(0xe978));
        // CB 46 005C
        gbc.setState(0xe941, 0x745d, 0x31e0, 0xdf50, 0xf20f, 0x5b81, 0x1, 0x0);
        gbc.writeMem(0x5b81, { 0x5 });
        gbc.writeMem(0xe941, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0xe943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe941));
        EXPECT(0x46, gbc.readMem(0xe942));
        // CB 46 005D
        gbc.setState(0x8cc1, 0xd4de, 0xe1e0, 0x67a9, 0x9db9, 0xe4f8, 0x0, 0x1);
        gbc.writeMem(0x8cc1, { 0xcb, 0x46 });
        gbc.writeMem(0xe4f8, { 0x65 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc1));
        EXPECT(0x46, gbc.readMem(0x8cc2));
        EXPECT(0x65, gbc.readMem(0xe4f8));
        // CB 46 005E
        gbc.setState(0xae43, 0xf74d, 0xd20, 0x24a4, 0x10ee, 0x42c2, 0x1, 0x1);
        gbc.writeMem(0x42c2, { 0x21 });
        gbc.writeMem(0xae43, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf74d, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae43));
        EXPECT(0x46, gbc.readMem(0xae44));
        // CB 46 005F
        gbc.setState(0x60dd, 0x30de, 0x9250, 0x59e7, 0x1418, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0x46 });
        gbc.writeMem(0x90a7, { 0x96 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x90a7));
        // CB 46 0060
        gbc.setState(0xd3fb, 0x1040, 0xf080, 0xb163, 0x87d8, 0x39bc, 0x1, 0x0);
        gbc.writeMem(0x39bc, { 0x3c });
        gbc.writeMem(0xd3fb, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1040, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fb));
        EXPECT(0x46, gbc.readMem(0xd3fc));
        // CB 46 0061
        gbc.setState(0xb567, 0x13fc, 0xf4e0, 0xb1ee, 0xa49e, 0x3c91, 0x1, 0x1);
        gbc.writeMem(0x3c91, { 0xbf });
        gbc.writeMem(0xb567, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x13fc, gbc.sp());
        EXPECT(0xb569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb567));
        EXPECT(0x46, gbc.readMem(0xb568));
        // CB 46 0062
        gbc.setState(0x38f5, 0x6894, 0x20e0, 0xaf70, 0x182f, 0xb01c, 0x0, 0x1);
        gbc.writeMem(0x38f5, { 0xcb, 0x46 });
        gbc.writeMem(0xb01c, { 0xfc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6894, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb01c));
        // CB 46 0063
        gbc.setState(0x3121, 0xd7d3, 0xbb80, 0x6578, 0xa5e7, 0xddf3, 0x1, 0x0);
        gbc.writeMem(0x3121, { 0xcb, 0x46 });
        gbc.writeMem(0xddf3, { 0x1f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd7d3, gbc.sp());
        EXPECT(0x3123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xddf3));
        // CB 46 0064
        gbc.setState(0xa5c1, 0x2e84, 0x310, 0x5317, 0x7c4f, 0x5ea, 0x1, 0x0);
        gbc.writeMem(0x5ea, { 0x7d });
        gbc.writeMem(0xa5c1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2e84, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c1));
        EXPECT(0x46, gbc.readMem(0xa5c2));
        // CB 46 0065
        gbc.setState(0xf9b, 0x8fcf, 0x8930, 0xae29, 0xd4fb, 0xed7f, 0x0, 0x1);
        gbc.writeMem(0xf9b, { 0xcb, 0x46 });
        gbc.writeMem(0xed7f, { 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8fcf, gbc.sp());
        EXPECT(0xf9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed7f));
        // CB 46 0066
        gbc.setState(0xb411, 0x616f, 0x3060, 0x4e1a, 0xa114, 0x3011, 0x0, 0x0);
        gbc.writeMem(0x3011, { 0xf6 });
        gbc.writeMem(0xb411, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0xb413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb411));
        EXPECT(0x46, gbc.readMem(0xb412));
        // CB 46 0067
        gbc.setState(0x1db8, 0x2aa2, 0xcd10, 0xca08, 0xcc34, 0x818a, 0x0, 0x1);
        gbc.writeMem(0x1db8, { 0xcb, 0x46 });
        gbc.writeMem(0x818a, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0x1dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x818a));
        // CB 46 0068
        gbc.setState(0x21a7, 0x6b87, 0x84a0, 0x6f1e, 0x4c38, 0xa1b7, 0x1, 0x0);
        gbc.writeMem(0x21a7, { 0xcb, 0x46 });
        gbc.writeMem(0xa1b7, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6b87, gbc.sp());
        EXPECT(0x21a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa1b7));
        // CB 46 006A
        gbc.setState(0x7c5c, 0xe6b9, 0x5cb0, 0x8d91, 0x660, 0x9d7b, 0x0, 0x0);
        gbc.writeMem(0x7c5c, { 0xcb, 0x46 });
        gbc.writeMem(0x9d7b, { 0x80 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe6b9, gbc.sp());
        EXPECT(0x7c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9d7b));
        // CB 46 006B
        gbc.setState(0xd2b4, 0x50c5, 0xdb20, 0xd9fb, 0x6db0, 0xf5b2, 0x1, 0x1);
        gbc.writeMem(0xd2b4, { 0xcb, 0x46 });
        gbc.writeMem(0xf5b2, { 0x7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x50c5, gbc.sp());
        EXPECT(0xd2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b4));
        EXPECT(0x46, gbc.readMem(0xd2b5));
        EXPECT(0x7, gbc.readMem(0xf5b2));
        // CB 46 006C
        gbc.setState(0x3751, 0x1963, 0xa0, 0xc7b4, 0xa7ee, 0x948a, 0x0, 0x0);
        gbc.writeMem(0x3751, { 0xcb, 0x46 });
        gbc.writeMem(0x948a, { 0x1c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1963, gbc.sp());
        EXPECT(0x3753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x948a));
        // CB 46 006D
        gbc.setState(0xbbf, 0x6a7f, 0x600, 0x3b0c, 0x29ff, 0x1a90, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0x46 });
        gbc.writeMem(0x1a90, { 0x4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6a7f, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 006E
        gbc.setState(0xe9bf, 0xf3ea, 0xb990, 0xa43d, 0xd423, 0x3c50, 0x0, 0x0);
        gbc.writeMem(0x3c50, { 0x7c });
        gbc.writeMem(0xe9bf, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf3ea, gbc.sp());
        EXPECT(0xe9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bf));
        EXPECT(0x46, gbc.readMem(0xe9c0));
        // CB 46 006F
        gbc.setState(0xd108, 0xe57f, 0xd2a0, 0x34f7, 0x52d0, 0x8b6c, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xa6 });
        gbc.writeMem(0xd108, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe57f, gbc.sp());
        EXPECT(0xd10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8b6c));
        EXPECT(0xcb, gbc.readMem(0xd108));
        EXPECT(0x46, gbc.readMem(0xd109));
        // CB 46 0071
        gbc.setState(0x2e2f, 0xfed2, 0xcee0, 0x3c4c, 0xc387, 0x8d47, 0x1, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0x46 });
        gbc.writeMem(0x8d47, { 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d47));
        // CB 46 0072
        gbc.setState(0xa8b7, 0x1f03, 0x50e0, 0xfd71, 0x473, 0x6d8e, 0x0, 0x0);
        gbc.writeMem(0x6d8e, { 0xf0 });
        gbc.writeMem(0xa8b7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1f03, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b7));
        EXPECT(0x46, gbc.readMem(0xa8b8));
        // CB 46 0073
        gbc.setState(0x8076, 0x100c, 0xb860, 0xc9ff, 0xd7a3, 0x6852, 0x1, 0x0);
        gbc.writeMem(0x6852, { 0xb3 });
        gbc.writeMem(0x8076, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x100c, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0x46, gbc.readMem(0x8077));
        // CB 46 0074
        gbc.setState(0x457b, 0x7fc8, 0x2380, 0x572b, 0xdc81, 0xa673, 0x0, 0x0);
        gbc.writeMem(0x457b, { 0xcb, 0x46 });
        gbc.writeMem(0xa673, { 0xda });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7fc8, gbc.sp());
        EXPECT(0x457d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa673));
        // CB 46 0075
        gbc.setState(0x1339, 0xd14e, 0xb0e0, 0xecb, 0x9910, 0x56b0, 0x1, 0x0);
        gbc.writeMem(0x1339, { 0xcb, 0x46 });
        gbc.writeMem(0x56b0, { 0xf3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x133b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0076
        gbc.setState(0x2f5e, 0x383e, 0xf520, 0x8f3e, 0x805b, 0xb79d, 0x1, 0x1);
        gbc.writeMem(0x2f5e, { 0xcb, 0x46 });
        gbc.writeMem(0xb79d, { 0xcf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x383e, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb79d));
        // CB 46 0077
        gbc.setState(0x4c49, 0x36a9, 0xc760, 0x4081, 0xe267, 0x8645, 0x0, 0x0);
        gbc.writeMem(0x4c49, { 0xcb, 0x46 });
        gbc.writeMem(0x8645, { 0x45 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x36a9, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8645));
        // CB 46 0078
        gbc.setState(0xab93, 0x2d45, 0x86d0, 0x4fc0, 0xf2a4, 0x800d, 0x0, 0x0);
        gbc.writeMem(0x800d, { 0xce });
        gbc.writeMem(0xab93, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d45, gbc.sp());
        EXPECT(0xab95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x800d));
        EXPECT(0xcb, gbc.readMem(0xab93));
        EXPECT(0x46, gbc.readMem(0xab94));
        // CB 46 0079
        gbc.setState(0x192a, 0x3b09, 0x5540, 0x9b97, 0xc321, 0x1324, 0x1, 0x0);
        gbc.writeMem(0x1324, { 0x18 });
        gbc.writeMem(0x192a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3b09, gbc.sp());
        EXPECT(0x192c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 007A
        gbc.setState(0x99f5, 0xb70b, 0xb120, 0xc873, 0x6461, 0x821c, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0x94 });
        gbc.writeMem(0x99f5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb70b, gbc.sp());
        EXPECT(0x99f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x821c));
        EXPECT(0xcb, gbc.readMem(0x99f5));
        EXPECT(0x46, gbc.readMem(0x99f6));
        // CB 46 007B
        gbc.setState(0x668, 0xf6de, 0x900, 0xb8c0, 0xe907, 0xbc57, 0x0, 0x0);
        gbc.writeMem(0x668, { 0xcb, 0x46 });
        gbc.writeMem(0xbc57, { 0x1e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf6de, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xbc57));
        // CB 46 007C
        gbc.setState(0x850c, 0x116c, 0x3bc0, 0x8390, 0xc68, 0xec12, 0x0, 0x0);
        gbc.writeMem(0x850c, { 0xcb, 0x46 });
        gbc.writeMem(0xec12, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0x46, gbc.readMem(0x850d));
        EXPECT(0x3b, gbc.readMem(0xec12));
        // CB 46 007D
        gbc.setState(0x7f0e, 0x4581, 0x3ef0, 0xdc27, 0x3177, 0xc69f, 0x1, 0x0);
        gbc.writeMem(0x7f0e, { 0xcb, 0x46 });
        gbc.writeMem(0xc69f, { 0x1d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0x7f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc69f));
        // CB 46 007E
        gbc.setState(0xd96d, 0xd132, 0x3b70, 0xb62d, 0x9671, 0x62e1, 0x0, 0x0);
        gbc.writeMem(0x62e1, { 0x20 });
        gbc.writeMem(0xd96d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96d));
        EXPECT(0x46, gbc.readMem(0xd96e));
        // CB 46 007F
        gbc.setState(0x4d4f, 0xf675, 0xe720, 0x5d5b, 0x5a2f, 0x7708, 0x0, 0x0);
        gbc.writeMem(0x4d4f, { 0xcb, 0x46 });
        gbc.writeMem(0x7708, { 0xfe });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf675, gbc.sp());
        EXPECT(0x4d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0080
        gbc.setState(0x705a, 0xa037, 0x23d0, 0x6a66, 0x4ec9, 0xab60, 0x0, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0x46 });
        gbc.writeMem(0xab60, { 0x5b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xab60));
        // CB 46 0081
        gbc.setState(0xa3b8, 0x82ca, 0xdea0, 0xc550, 0xe975, 0xc809, 0x0, 0x1);
        gbc.writeMem(0xa3b8, { 0xcb, 0x46 });
        gbc.writeMem(0xc809, { 0x66 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b8));
        EXPECT(0x46, gbc.readMem(0xa3b9));
        EXPECT(0x66, gbc.readMem(0xc809));
        // CB 46 0082
        gbc.setState(0xead2, 0xc86, 0x65b0, 0x2522, 0x27d4, 0x70d1, 0x1, 0x0);
        gbc.writeMem(0x70d1, { 0x72 });
        gbc.writeMem(0xead2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc86, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead2));
        EXPECT(0x46, gbc.readMem(0xead3));
        // CB 46 0083
        gbc.setState(0xd082, 0xd5de, 0x7f50, 0xa3e6, 0x1053, 0x6cad, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0x9a });
        gbc.writeMem(0xd082, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd5de, gbc.sp());
        EXPECT(0xd084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd082));
        EXPECT(0x46, gbc.readMem(0xd083));
        // CB 46 0084
        gbc.setState(0xd978, 0x41a3, 0x5b00, 0xfcc7, 0x72cc, 0xa171, 0x1, 0x0);
        gbc.writeMem(0xa171, { 0x75 });
        gbc.writeMem(0xd978, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x41a3, gbc.sp());
        EXPECT(0xd97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa171));
        EXPECT(0xcb, gbc.readMem(0xd978));
        EXPECT(0x46, gbc.readMem(0xd979));
        // CB 46 0085
        gbc.setState(0xac00, 0x4d6a, 0x5200, 0xa8f6, 0x7dc2, 0xeac3, 0x0, 0x0);
        gbc.writeMem(0xac00, { 0xcb, 0x46 });
        gbc.writeMem(0xeac3, { 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0xac02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac00));
        EXPECT(0x46, gbc.readMem(0xac01));
        EXPECT(0x72, gbc.readMem(0xeac3));
        // CB 46 0086
        gbc.setState(0x5736, 0x6915, 0xe850, 0x9549, 0xc03f, 0x598f, 0x1, 0x1);
        gbc.writeMem(0x5736, { 0xcb, 0x46 });
        gbc.writeMem(0x598f, { 0xc3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x5738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0087
        gbc.setState(0x4508, 0x288a, 0x3c30, 0x96de, 0xe557, 0xc95c, 0x0, 0x1);
        gbc.writeMem(0x4508, { 0xcb, 0x46 });
        gbc.writeMem(0xc95c, { 0x58 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x288a, gbc.sp());
        EXPECT(0x450a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc95c));
        // CB 46 0088
        gbc.setState(0xa713, 0xdf10, 0xe690, 0xd2b0, 0x5eaf, 0xd485, 0x1, 0x0);
        gbc.writeMem(0xa713, { 0xcb, 0x46 });
        gbc.writeMem(0xd485, { 0x89 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0xa715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa713));
        EXPECT(0x46, gbc.readMem(0xa714));
        EXPECT(0x89, gbc.readMem(0xd485));
        // CB 46 0089
        gbc.setState(0x2df0, 0x4128, 0x4d40, 0xf8cd, 0x8c29, 0xc83, 0x0, 0x0);
        gbc.writeMem(0xc83, { 0x66 });
        gbc.writeMem(0x2df0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4128, gbc.sp());
        EXPECT(0x2df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 008A
        gbc.setState(0xee9f, 0x2bb5, 0x4e10, 0x6e60, 0xdac5, 0x3f7d, 0x1, 0x0);
        gbc.writeMem(0x3f7d, { 0xd0 });
        gbc.writeMem(0xee9f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2bb5, gbc.sp());
        EXPECT(0xeea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9f));
        EXPECT(0x46, gbc.readMem(0xeea0));
        // CB 46 008C
        gbc.setState(0x4490, 0xab1c, 0xe1f0, 0xebd9, 0xffd5, 0x3a89, 0x0, 0x1);
        gbc.writeMem(0x3a89, { 0xf4 });
        gbc.writeMem(0x4490, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab1c, gbc.sp());
        EXPECT(0x4492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 008D
        gbc.setState(0x653b, 0x15eb, 0xead0, 0x66f7, 0x86ca, 0xaab, 0x1, 0x1);
        gbc.writeMem(0xaab, { 0xab });
        gbc.writeMem(0x653b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x15eb, gbc.sp());
        EXPECT(0x653d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 008E
        gbc.setState(0xb659, 0xceaf, 0x67d0, 0x17e9, 0x9fc2, 0xfd83, 0x1, 0x1);
        gbc.writeMem(0xb659, { 0xcb, 0x46 });
        gbc.writeMem(0xfd83, { 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xceaf, gbc.sp());
        EXPECT(0xb65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb659));
        EXPECT(0x46, gbc.readMem(0xb65a));
        EXPECT(0x10, gbc.readMem(0xfd83));
        // CB 46 008F
        gbc.setState(0x712c, 0x473d, 0xe690, 0x255f, 0x1d36, 0x5303, 0x0, 0x1);
        gbc.writeMem(0x5303, { 0xb7 });
        gbc.writeMem(0x712c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x473d, gbc.sp());
        EXPECT(0x712e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0090
        gbc.setState(0x6eda, 0xf446, 0xb6a0, 0x868b, 0x30f8, 0x5619, 0x0, 0x1);
        gbc.writeMem(0x5619, { 0x9e });
        gbc.writeMem(0x6eda, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf446, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0091
        gbc.setState(0xb07f, 0x350c, 0xce70, 0xbab4, 0x1282, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0x4d40, { 0x73 });
        gbc.writeMem(0xb07f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0xb081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07f));
        EXPECT(0x46, gbc.readMem(0xb080));
        // CB 46 0093
        gbc.setState(0x65a7, 0xcb32, 0xcf50, 0xdaf4, 0x85ea, 0xd886, 0x1, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0x46 });
        gbc.writeMem(0xd886, { 0xf5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd886));
        // CB 46 0094
        gbc.setState(0x3102, 0x3dd4, 0x19f0, 0x28a4, 0x844e, 0x25b6, 0x0, 0x1);
        gbc.writeMem(0x25b6, { 0xdd });
        gbc.writeMem(0x3102, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3dd4, gbc.sp());
        EXPECT(0x3104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0095
        gbc.setState(0xb238, 0x2d4e, 0xd90, 0x78cc, 0xa39a, 0xcca6, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0x46 });
        gbc.writeMem(0xcca6, { 0x9f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0x46, gbc.readMem(0xb239));
        EXPECT(0x9f, gbc.readMem(0xcca6));
        // CB 46 0096
        gbc.setState(0x7957, 0xc86c, 0x8a70, 0x7fdc, 0xb6ed, 0x6816, 0x1, 0x0);
        gbc.writeMem(0x6816, { 0xc3 });
        gbc.writeMem(0x7957, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc86c, gbc.sp());
        EXPECT(0x7959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0097
        gbc.setState(0x6f71, 0xb4a5, 0x8b10, 0x1b34, 0x96a1, 0xe617, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0xcb, 0x46 });
        gbc.writeMem(0xe617, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb4a5, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe617));
        // CB 46 0098
        gbc.setState(0x3a51, 0x596a, 0xbd90, 0xa181, 0xc1ad, 0x7e19, 0x0, 0x0);
        gbc.writeMem(0x3a51, { 0xcb, 0x46 });
        gbc.writeMem(0x7e19, { 0x1e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x596a, gbc.sp());
        EXPECT(0x3a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0099
        gbc.setState(0xa3a7, 0xbf7e, 0x3840, 0x7550, 0x8a6d, 0x10c2, 0x1, 0x0);
        gbc.writeMem(0x10c2, { 0x80 });
        gbc.writeMem(0xa3a7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbf7e, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a7));
        EXPECT(0x46, gbc.readMem(0xa3a8));
        // CB 46 009A
        gbc.setState(0x7a0, 0x41d0, 0x3ff0, 0x2f88, 0xe7ce, 0x7560, 0x0, 0x0);
        gbc.writeMem(0x7a0, { 0xcb, 0x46 });
        gbc.writeMem(0x7560, { 0x99 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x41d0, gbc.sp());
        EXPECT(0x7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 009B
        gbc.setState(0x73a5, 0xde71, 0x2aa0, 0x1915, 0xcd0, 0x2ef8, 0x1, 0x1);
        gbc.writeMem(0x2ef8, { 0x27 });
        gbc.writeMem(0x73a5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xde71, gbc.sp());
        EXPECT(0x73a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 009C
        gbc.setState(0x6e92, 0x1c00, 0x1c90, 0xa06a, 0x44f, 0xbc6b, 0x1, 0x1);
        gbc.writeMem(0x6e92, { 0xcb, 0x46 });
        gbc.writeMem(0xbc6b, { 0xa4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c00, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc6b));
        // CB 46 009D
        gbc.setState(0xd641, 0x2f96, 0xd180, 0xdad, 0x3ffc, 0xd0ba, 0x0, 0x0);
        gbc.writeMem(0xd0ba, { 0xdb });
        gbc.writeMem(0xd641, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2f96, gbc.sp());
        EXPECT(0xd643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd0ba));
        EXPECT(0xcb, gbc.readMem(0xd641));
        EXPECT(0x46, gbc.readMem(0xd642));
        // CB 46 009E
        gbc.setState(0x3775, 0xa510, 0xa9f0, 0xa4d2, 0x4562, 0x859d, 0x0, 0x1);
        gbc.writeMem(0x3775, { 0xcb, 0x46 });
        gbc.writeMem(0x859d, { 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa510, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x859d));
        // CB 46 009F
        gbc.setState(0x295d, 0xcec4, 0xd9b0, 0x5f, 0x87de, 0xaeff, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0xcb, 0x46 });
        gbc.writeMem(0xaeff, { 0xf8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcec4, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaeff));
        // CB 46 00A0
        gbc.setState(0x6e3e, 0x3da0, 0x4620, 0x7e60, 0x8d0d, 0xc432, 0x1, 0x0);
        gbc.writeMem(0x6e3e, { 0xcb, 0x46 });
        gbc.writeMem(0xc432, { 0x24 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0x6e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc432));
        // CB 46 00A2
        gbc.setState(0x2043, 0x5998, 0xa400, 0xb6ba, 0xf878, 0xbeee, 0x1, 0x0);
        gbc.writeMem(0x2043, { 0xcb, 0x46 });
        gbc.writeMem(0xbeee, { 0x3d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0x2045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xbeee));
        // CB 46 00A3
        gbc.setState(0xbc86, 0x1f6a, 0xa260, 0x100e, 0x7d2c, 0x88a1, 0x1, 0x1);
        gbc.writeMem(0x88a1, { 0xed });
        gbc.writeMem(0xbc86, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x88a1));
        EXPECT(0xcb, gbc.readMem(0xbc86));
        EXPECT(0x46, gbc.readMem(0xbc87));
        // CB 46 00A4
        gbc.setState(0x427, 0xbea9, 0x6430, 0xb021, 0xd745, 0xac6f, 0x0, 0x0);
        gbc.writeMem(0x427, { 0xcb, 0x46 });
        gbc.writeMem(0xac6f, { 0xeb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0x429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xac6f));
        // CB 46 00A5
        gbc.setState(0x32c5, 0x3859, 0x94e0, 0x8542, 0x1d83, 0x3795, 0x0, 0x1);
        gbc.writeMem(0x32c5, { 0xcb, 0x46 });
        gbc.writeMem(0x3795, { 0x91 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3859, gbc.sp());
        EXPECT(0x32c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00A6
        gbc.setState(0xee25, 0x28b0, 0xa870, 0x4a45, 0xb083, 0xbdec, 0x0, 0x0);
        gbc.writeMem(0xbdec, { 0x8d });
        gbc.writeMem(0xee25, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbdec));
        EXPECT(0xcb, gbc.readMem(0xee25));
        EXPECT(0x46, gbc.readMem(0xee26));
        // CB 46 00A7
        gbc.setState(0x1132, 0x9b46, 0xdba0, 0x376f, 0x9d8c, 0x7155, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0x46 });
        gbc.writeMem(0x7155, { 0x4c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9b46, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00A8
        gbc.setState(0xcd9b, 0x603a, 0x9490, 0xabe0, 0xe124, 0xc73f, 0x1, 0x0);
        gbc.writeMem(0xc73f, { 0x5c });
        gbc.writeMem(0xcd9b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc73f));
        EXPECT(0xcb, gbc.readMem(0xcd9b));
        EXPECT(0x46, gbc.readMem(0xcd9c));
        // CB 46 00AA
        gbc.setState(0x3543, 0xdcf6, 0xfca0, 0xd237, 0x9643, 0x8d14, 0x0, 0x0);
        gbc.writeMem(0x3543, { 0xcb, 0x46 });
        gbc.writeMem(0x8d14, { 0x93 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8d14));
        // CB 46 00AB
        gbc.setState(0xb76, 0xdcaa, 0x53b0, 0xf1aa, 0xb120, 0xd04b, 0x1, 0x0);
        gbc.writeMem(0xb76, { 0xcb, 0x46 });
        gbc.writeMem(0xd04b, { 0x6c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdcaa, gbc.sp());
        EXPECT(0xb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd04b));
        // CB 46 00AC
        gbc.setState(0x58f9, 0x4026, 0xb300, 0x2efa, 0x2054, 0x49ed, 0x1, 0x1);
        gbc.writeMem(0x49ed, { 0x6e });
        gbc.writeMem(0x58f9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4026, gbc.sp());
        EXPECT(0x58fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00AD
        gbc.setState(0x64ff, 0x9459, 0x78f0, 0x222c, 0xf98e, 0xf8af, 0x1, 0x0);
        gbc.writeMem(0x64ff, { 0xcb, 0x46 });
        gbc.writeMem(0xf8af, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf8af));
        // CB 46 00AE
        gbc.setState(0x723b, 0xd0d5, 0xfcc0, 0x632e, 0x1a00, 0xd02a, 0x1, 0x1);
        gbc.writeMem(0x723b, { 0xcb, 0x46 });
        gbc.writeMem(0xd02a, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd0d5, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd02a));
        // CB 46 00AF
        gbc.setState(0xb5e7, 0xe13c, 0x9940, 0xff0d, 0xb620, 0x6173, 0x0, 0x1);
        gbc.writeMem(0x6173, { 0x74 });
        gbc.writeMem(0xb5e7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe13c, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e7));
        EXPECT(0x46, gbc.readMem(0xb5e8));
        // CB 46 00B1
        gbc.setState(0x63a7, 0x9a05, 0xcb10, 0xd2e3, 0x5a53, 0x7a2d, 0x1, 0x0);
        gbc.writeMem(0x63a7, { 0xcb, 0x46 });
        gbc.writeMem(0x7a2d, { 0x82 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00B2
        gbc.setState(0xc3ec, 0x34d5, 0xdde0, 0x66a3, 0x6ff5, 0x67d6, 0x0, 0x0);
        gbc.writeMem(0x67d6, { 0x65 });
        gbc.writeMem(0xc3ec, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0x46, gbc.readMem(0xc3ed));
        // CB 46 00B3
        gbc.setState(0x42d5, 0xc7ed, 0xcdb0, 0x79e6, 0xdd30, 0xdd84, 0x1, 0x1);
        gbc.writeMem(0x42d5, { 0xcb, 0x46 });
        gbc.writeMem(0xdd84, { 0xa2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdd84));
        // CB 46 00B4
        gbc.setState(0x9524, 0xf97d, 0xa8f0, 0x9bec, 0x385e, 0xcd80, 0x1, 0x1);
        gbc.writeMem(0x9524, { 0xcb, 0x46 });
        gbc.writeMem(0xcd80, { 0x23 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf97d, gbc.sp());
        EXPECT(0x9526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9524));
        EXPECT(0x46, gbc.readMem(0x9525));
        EXPECT(0x23, gbc.readMem(0xcd80));
        // CB 46 00B5
        gbc.setState(0x3444, 0x29dc, 0x7370, 0xadde, 0x1cb6, 0x12ca, 0x0, 0x0);
        gbc.writeMem(0x12ca, { 0x87 });
        gbc.writeMem(0x3444, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29dc, gbc.sp());
        EXPECT(0x3446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00B6
        gbc.setState(0x612e, 0xfacf, 0x380, 0x8b4, 0x227c, 0xc92, 0x1, 0x0);
        gbc.writeMem(0xc92, { 0x1a });
        gbc.writeMem(0x612e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfacf, gbc.sp());
        EXPECT(0x6130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00B7
        gbc.setState(0x941a, 0x7ba1, 0xa700, 0x21e1, 0x22ea, 0xe341, 0x1, 0x0);
        gbc.writeMem(0x941a, { 0xcb, 0x46 });
        gbc.writeMem(0xe341, { 0x21 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941a));
        EXPECT(0x46, gbc.readMem(0x941b));
        EXPECT(0x21, gbc.readMem(0xe341));
        // CB 46 00B8
        gbc.setState(0xe9fb, 0x2024, 0xb0a0, 0x3ab0, 0x9d6, 0x4a80, 0x1, 0x1);
        gbc.writeMem(0x4a80, { 0xfb });
        gbc.writeMem(0xe9fb, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2024, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fb));
        EXPECT(0x46, gbc.readMem(0xe9fc));
        // CB 46 00B9
        gbc.setState(0x94eb, 0x7bc1, 0xe480, 0xd6e1, 0xc96e, 0xb7b8, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x46 });
        gbc.writeMem(0xb7b8, { 0xe8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94eb));
        EXPECT(0x46, gbc.readMem(0x94ec));
        EXPECT(0xe8, gbc.readMem(0xb7b8));
        // CB 46 00BA
        gbc.setState(0x666a, 0x9716, 0x6ed0, 0x63ba, 0x3afe, 0x5f7e, 0x0, 0x0);
        gbc.writeMem(0x5f7e, { 0xea });
        gbc.writeMem(0x666a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00BB
        gbc.setState(0xdb50, 0xe141, 0x3be0, 0x3dbf, 0xecb7, 0xbf08, 0x1, 0x1);
        gbc.writeMem(0xbf08, { 0xa6 });
        gbc.writeMem(0xdb50, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe141, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbf08));
        EXPECT(0xcb, gbc.readMem(0xdb50));
        EXPECT(0x46, gbc.readMem(0xdb51));
        // CB 46 00BC
        gbc.setState(0xc9de, 0x7354, 0xd110, 0x5e5, 0x3714, 0xd0db, 0x0, 0x1);
        gbc.writeMem(0xc9de, { 0xcb, 0x46 });
        gbc.writeMem(0xd0db, { 0x6d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0xc9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9de));
        EXPECT(0x46, gbc.readMem(0xc9df));
        EXPECT(0x6d, gbc.readMem(0xd0db));
        // CB 46 00BD
        gbc.setState(0xb233, 0x27ce, 0xfdd0, 0xc797, 0x51ee, 0xf6fd, 0x1, 0x0);
        gbc.writeMem(0xb233, { 0xcb, 0x46 });
        gbc.writeMem(0xf6fd, { 0x8c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb233));
        EXPECT(0x46, gbc.readMem(0xb234));
        EXPECT(0x8c, gbc.readMem(0xf6fd));
        // CB 46 00BE
        gbc.setState(0x8137, 0xc336, 0x65e0, 0x2770, 0xe797, 0x72a, 0x1, 0x0);
        gbc.writeMem(0x72a, { 0x54 });
        gbc.writeMem(0x8137, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc336, gbc.sp());
        EXPECT(0x8139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8137));
        EXPECT(0x46, gbc.readMem(0x8138));
        // CB 46 00BF
        gbc.setState(0x5084, 0xbce3, 0x3340, 0xb4c9, 0x3642, 0x74ac, 0x0, 0x0);
        gbc.writeMem(0x5084, { 0xcb, 0x46 });
        gbc.writeMem(0x74ac, { 0xdf });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbce3, gbc.sp());
        EXPECT(0x5086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00C0
        gbc.setState(0x602d, 0x9af3, 0xfb50, 0x68e2, 0x6d9d, 0x74d6, 0x1, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0x46 });
        gbc.writeMem(0x74d6, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9af3, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00C1
        gbc.setState(0xb4fb, 0x28fa, 0xbe50, 0x308b, 0xc06f, 0x816, 0x1, 0x0);
        gbc.writeMem(0x816, { 0x77 });
        gbc.writeMem(0xb4fb, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x28fa, gbc.sp());
        EXPECT(0xb4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fb));
        EXPECT(0x46, gbc.readMem(0xb4fc));
        // CB 46 00C2
        gbc.setState(0xd3e1, 0x34f1, 0xad40, 0xf235, 0xa75e, 0x9c64, 0x1, 0x0);
        gbc.writeMem(0x9c64, { 0x71 });
        gbc.writeMem(0xd3e1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x34f1, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9c64));
        EXPECT(0xcb, gbc.readMem(0xd3e1));
        EXPECT(0x46, gbc.readMem(0xd3e2));
        // CB 46 00C3
        gbc.setState(0xa526, 0xa31d, 0x7a60, 0xbb30, 0x3847, 0x14b7, 0x1, 0x1);
        gbc.writeMem(0x14b7, { 0xd7 });
        gbc.writeMem(0xa526, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa31d, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0x46, gbc.readMem(0xa527));
        // CB 46 00C4
        gbc.setState(0xe0ef, 0xff94, 0xe4c0, 0xd045, 0x3222, 0xc91a, 0x1, 0x1);
        gbc.writeMem(0xc91a, { 0xe2 });
        gbc.writeMem(0xe0ef, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0xe0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xc91a));
        EXPECT(0xcb, gbc.readMem(0xe0ef));
        EXPECT(0x46, gbc.readMem(0xe0f0));
        // CB 46 00C5
        gbc.setState(0x8c56, 0x3f2a, 0x6460, 0x79e2, 0x38f0, 0x12fb, 0x1, 0x0);
        gbc.writeMem(0x12fb, { 0xcd });
        gbc.writeMem(0x8c56, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3f2a, gbc.sp());
        EXPECT(0x8c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c56));
        EXPECT(0x46, gbc.readMem(0x8c57));
        // CB 46 00C6
        gbc.setState(0xa314, 0x71dd, 0x8530, 0x2320, 0xa350, 0x92e4, 0x1, 0x0);
        gbc.writeMem(0x92e4, { 0xd });
        gbc.writeMem(0xa314, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x71dd, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x92e4));
        EXPECT(0xcb, gbc.readMem(0xa314));
        EXPECT(0x46, gbc.readMem(0xa315));
        // CB 46 00C7
        gbc.setState(0x5eba, 0xfaed, 0x20, 0x8fa2, 0x96de, 0x7af5, 0x0, 0x0);
        gbc.writeMem(0x5eba, { 0xcb, 0x46 });
        gbc.writeMem(0x7af5, { 0x70 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfaed, gbc.sp());
        EXPECT(0x5ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00C8
        gbc.setState(0x643, 0x609a, 0xb340, 0xde76, 0x67e2, 0x7151, 0x1, 0x1);
        gbc.writeMem(0x643, { 0xcb, 0x46 });
        gbc.writeMem(0x7151, { 0x45 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00C9
        gbc.setState(0x8a72, 0x476f, 0xdd0, 0x2973, 0x9078, 0x503, 0x0, 0x1);
        gbc.writeMem(0x503, { 0x9e });
        gbc.writeMem(0x8a72, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x476f, gbc.sp());
        EXPECT(0x8a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a72));
        EXPECT(0x46, gbc.readMem(0x8a73));
        // CB 46 00CB
        gbc.setState(0x6f0e, 0x4f1c, 0x5300, 0x61e, 0x511a, 0xe61, 0x1, 0x0);
        gbc.writeMem(0xe61, { 0xbe });
        gbc.writeMem(0x6f0e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0x6f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00CC
        gbc.setState(0xb859, 0xe0ee, 0x5f0, 0xd8ad, 0xdb18, 0x9bdb, 0x0, 0x1);
        gbc.writeMem(0x9bdb, { 0x80 });
        gbc.writeMem(0xb859, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe0ee, gbc.sp());
        EXPECT(0xb85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9bdb));
        EXPECT(0xcb, gbc.readMem(0xb859));
        EXPECT(0x46, gbc.readMem(0xb85a));
        // CB 46 00CD
        gbc.setState(0x1d5f, 0x6617, 0x4600, 0xb847, 0x8cf3, 0x5af9, 0x0, 0x0);
        gbc.writeMem(0x1d5f, { 0xcb, 0x46 });
        gbc.writeMem(0x5af9, { 0xa3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0x1d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00CE
        gbc.setState(0x57ba, 0x6798, 0x3240, 0x3904, 0x19b7, 0x3866, 0x1, 0x0);
        gbc.writeMem(0x3866, { 0xe7 });
        gbc.writeMem(0x57ba, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6798, gbc.sp());
        EXPECT(0x57bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00CF
        gbc.setState(0x338b, 0x7795, 0xf050, 0x230b, 0xcc33, 0x44ae, 0x0, 0x0);
        gbc.writeMem(0x338b, { 0xcb, 0x46 });
        gbc.writeMem(0x44ae, { 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7795, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00D0
        gbc.setState(0x168a, 0xa965, 0x5320, 0xa20f, 0xa21f, 0xcbc4, 0x0, 0x0);
        gbc.writeMem(0x168a, { 0xcb, 0x46 });
        gbc.writeMem(0xcbc4, { 0xd3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa965, gbc.sp());
        EXPECT(0x168c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xcbc4));
        // CB 46 00D1
        gbc.setState(0x9191, 0x5dfb, 0xc440, 0x8f8f, 0xc790, 0xf05c, 0x0, 0x1);
        gbc.writeMem(0x9191, { 0xcb, 0x46 });
        gbc.writeMem(0xf05c, { 0x30 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9191));
        EXPECT(0x46, gbc.readMem(0x9192));
        EXPECT(0x30, gbc.readMem(0xf05c));
        // CB 46 00D2
        gbc.setState(0xa55f, 0x5a8d, 0x8700, 0xcd1e, 0x59aa, 0x10b6, 0x1, 0x0);
        gbc.writeMem(0x10b6, { 0xa7 });
        gbc.writeMem(0xa55f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0xa561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55f));
        EXPECT(0x46, gbc.readMem(0xa560));
        // CB 46 00D3
        gbc.setState(0x7897, 0xf7bb, 0xe8d0, 0xa89e, 0x6222, 0x9cd2, 0x0, 0x1);
        gbc.writeMem(0x7897, { 0xcb, 0x46 });
        gbc.writeMem(0x9cd2, { 0x3d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9cd2));
        // CB 46 00D4
        gbc.setState(0x5514, 0xd765, 0x91c0, 0x83f0, 0x46c7, 0xf5b4, 0x1, 0x0);
        gbc.writeMem(0x5514, { 0xcb, 0x46 });
        gbc.writeMem(0xf5b4, { 0xe6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xf5b4));
        // CB 46 00D5
        gbc.setState(0x5b93, 0x76b6, 0x7a20, 0x158, 0xc2a4, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0x5b93, { 0xcb, 0x46 });
        gbc.writeMem(0x99f7, { 0x45 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x76b6, gbc.sp());
        EXPECT(0x5b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x99f7));
        // CB 46 00D6
        gbc.setState(0xad2c, 0x3499, 0x2580, 0x75f, 0x94dc, 0x4967, 0x0, 0x1);
        gbc.writeMem(0x4967, { 0xa2 });
        gbc.writeMem(0xad2c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3499, gbc.sp());
        EXPECT(0xad2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2c));
        EXPECT(0x46, gbc.readMem(0xad2d));
        // CB 46 00D7
        gbc.setState(0xedb6, 0x6715, 0x2650, 0x8628, 0x4e08, 0xd6, 0x1, 0x1);
        gbc.writeMem(0xd6, { 0x1a });
        gbc.writeMem(0xedb6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6715, gbc.sp());
        EXPECT(0xedb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb6));
        EXPECT(0x46, gbc.readMem(0xedb7));
        // CB 46 00D8
        gbc.setState(0x52a4, 0xa943, 0xa990, 0x8578, 0xf9cc, 0x95d9, 0x0, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0x46 });
        gbc.writeMem(0x95d9, { 0x14 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa943, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x95d9));
        // CB 46 00D9
        gbc.setState(0x201c, 0xa9fd, 0x3200, 0xd9b, 0x48ab, 0x7e22, 0x1, 0x1);
        gbc.writeMem(0x201c, { 0xcb, 0x46 });
        gbc.writeMem(0x7e22, { 0xc3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa9fd, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00DA
        gbc.setState(0xed59, 0x51d1, 0x27d0, 0xdf1a, 0x4cb2, 0xe060, 0x1, 0x0);
        gbc.writeMem(0xe060, { 0xd8 });
        gbc.writeMem(0xed59, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x51d1, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe060));
        EXPECT(0xcb, gbc.readMem(0xed59));
        EXPECT(0x46, gbc.readMem(0xed5a));
        // CB 46 00DB
        gbc.setState(0x9cf3, 0x4da4, 0x7400, 0x77e4, 0x3469, 0xa55e, 0x1, 0x1);
        gbc.writeMem(0x9cf3, { 0xcb, 0x46 });
        gbc.writeMem(0xa55e, { 0xd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4da4, gbc.sp());
        EXPECT(0x9cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf3));
        EXPECT(0x46, gbc.readMem(0x9cf4));
        EXPECT(0xd, gbc.readMem(0xa55e));
        // CB 46 00DC
        gbc.setState(0x7866, 0x9ed2, 0x8420, 0xbde, 0x41e6, 0xea81, 0x0, 0x1);
        gbc.writeMem(0x7866, { 0xcb, 0x46 });
        gbc.writeMem(0xea81, { 0xd7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0x7868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xea81));
        // CB 46 00DD
        gbc.setState(0x9f0c, 0xb5c0, 0x8070, 0x9046, 0x127a, 0xdf97, 0x0, 0x0);
        gbc.writeMem(0x9f0c, { 0xcb, 0x46 });
        gbc.writeMem(0xdf97, { 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb5c0, gbc.sp());
        EXPECT(0x9f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0c));
        EXPECT(0x46, gbc.readMem(0x9f0d));
        EXPECT(0x97, gbc.readMem(0xdf97));
        // CB 46 00DE
        gbc.setState(0xf9d, 0xa3b0, 0xd990, 0xd4f9, 0x35cc, 0x2bc3, 0x0, 0x1);
        gbc.writeMem(0xf9d, { 0xcb, 0x46 });
        gbc.writeMem(0x2bc3, { 0x21 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00DF
        gbc.setState(0xdfca, 0x249f, 0xd00, 0xc2ca, 0x9b71, 0xbbff, 0x1, 0x0);
        gbc.writeMem(0xbbff, { 0x1c });
        gbc.writeMem(0xdfca, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x249f, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xbbff));
        EXPECT(0xcb, gbc.readMem(0xdfca));
        EXPECT(0x46, gbc.readMem(0xdfcb));
        // CB 46 00E0
        gbc.setState(0x29a1, 0xb8b8, 0x7910, 0xba3a, 0xcc91, 0x535, 0x0, 0x1);
        gbc.writeMem(0x535, { 0x72 });
        gbc.writeMem(0x29a1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00E2
        gbc.setState(0x858c, 0xbefe, 0xa60, 0xb91c, 0x6a65, 0x76d4, 0x1, 0x1);
        gbc.writeMem(0x76d4, { 0x3 });
        gbc.writeMem(0x858c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbefe, gbc.sp());
        EXPECT(0x858e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858c));
        EXPECT(0x46, gbc.readMem(0x858d));
        // CB 46 00E3
        gbc.setState(0x7c4e, 0x2e34, 0x2c70, 0x7efb, 0x84da, 0x4143, 0x1, 0x0);
        gbc.writeMem(0x4143, { 0x4c });
        gbc.writeMem(0x7c4e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e34, gbc.sp());
        EXPECT(0x7c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00E4
        gbc.setState(0xefb3, 0x7627, 0x67f0, 0xb813, 0x23c4, 0x8f37, 0x1, 0x1);
        gbc.writeMem(0x8f37, { 0x1d });
        gbc.writeMem(0xefb3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7627, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f37));
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0x46, gbc.readMem(0xefb4));
        // CB 46 00E5
        gbc.setState(0xd2a0, 0xe780, 0x6540, 0x5668, 0x442c, 0x2862, 0x1, 0x1);
        gbc.writeMem(0x2862, { 0xa0 });
        gbc.writeMem(0xd2a0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a0));
        EXPECT(0x46, gbc.readMem(0xd2a1));
        // CB 46 00E6
        gbc.setState(0x8aa9, 0x84e4, 0xadf0, 0xd773, 0x857b, 0x710c, 0x0, 0x0);
        gbc.writeMem(0x710c, { 0x7b });
        gbc.writeMem(0x8aa9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x84e4, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa9));
        EXPECT(0x46, gbc.readMem(0x8aaa));
        // CB 46 00E7
        gbc.setState(0xc776, 0x2233, 0x7960, 0xd874, 0x2e07, 0x958f, 0x1, 0x1);
        gbc.writeMem(0x958f, { 0x8b });
        gbc.writeMem(0xc776, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0xc778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x958f));
        EXPECT(0xcb, gbc.readMem(0xc776));
        EXPECT(0x46, gbc.readMem(0xc777));
        // CB 46 00E8
        gbc.setState(0x740d, 0xf3e0, 0xaa40, 0xb9ae, 0xd2bb, 0x8508, 0x0, 0x1);
        gbc.writeMem(0x740d, { 0xcb, 0x46 });
        gbc.writeMem(0x8508, { 0xa6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf3e0, gbc.sp());
        EXPECT(0x740f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8508));
        // CB 46 00E9
        gbc.setState(0x6331, 0xdb0, 0x3360, 0x9261, 0xcfb5, 0x9d67, 0x1, 0x0);
        gbc.writeMem(0x6331, { 0xcb, 0x46 });
        gbc.writeMem(0x9d67, { 0xed });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdb0, gbc.sp());
        EXPECT(0x6333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9d67));
        // CB 46 00EA
        gbc.setState(0x797e, 0x89a8, 0x4490, 0x37c, 0xd36d, 0x1cb2, 0x1, 0x0);
        gbc.writeMem(0x1cb2, { 0x74 });
        gbc.writeMem(0x797e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x89a8, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00EB
        gbc.setState(0xe632, 0xccc5, 0x77f0, 0xf045, 0x306e, 0xc155, 0x0, 0x1);
        gbc.writeMem(0xc155, { 0x3f });
        gbc.writeMem(0xe632, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0xe634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc155));
        EXPECT(0xcb, gbc.readMem(0xe632));
        EXPECT(0x46, gbc.readMem(0xe633));
        // CB 46 00EC
        gbc.setState(0x7610, 0x7a98, 0xe7e0, 0x87cb, 0x94b1, 0x1d63, 0x0, 0x1);
        gbc.writeMem(0x1d63, { 0x98 });
        gbc.writeMem(0x7610, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7a98, gbc.sp());
        EXPECT(0x7612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00ED
        gbc.setState(0x6303, 0xf5e, 0xcfc0, 0xf480, 0xb61, 0x3fef, 0x0, 0x1);
        gbc.writeMem(0x3fef, { 0x2e });
        gbc.writeMem(0x6303, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf5e, gbc.sp());
        EXPECT(0x6305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00EE
        gbc.setState(0x3a1f, 0xfa8, 0xab00, 0xf513, 0x72e1, 0x139c, 0x1, 0x0);
        gbc.writeMem(0x139c, { 0x7d });
        gbc.writeMem(0x3a1f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0x3a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00EF
        gbc.setState(0x5d45, 0x4f2f, 0xdda0, 0x975b, 0x3170, 0x6e96, 0x0, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0x46 });
        gbc.writeMem(0x6e96, { 0x86 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4f2f, gbc.sp());
        EXPECT(0x5d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00F0
        gbc.setState(0xd8df, 0xf480, 0x1630, 0x6d61, 0x353e, 0xe655, 0x1, 0x1);
        gbc.writeMem(0xd8df, { 0xcb, 0x46 });
        gbc.writeMem(0xe655, { 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0xd8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8df));
        EXPECT(0x46, gbc.readMem(0xd8e0));
        EXPECT(0x4b, gbc.readMem(0xe655));
        // CB 46 00F1
        gbc.setState(0x69ac, 0x10fb, 0xe130, 0x74bf, 0xd835, 0xa64a, 0x1, 0x0);
        gbc.writeMem(0x69ac, { 0xcb, 0x46 });
        gbc.writeMem(0xa64a, { 0xff });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x69ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa64a));
        // CB 46 00F2
        gbc.setState(0x10d3, 0x6930, 0x4e20, 0xc015, 0x690c, 0x82cf, 0x1, 0x0);
        gbc.writeMem(0x10d3, { 0xcb, 0x46 });
        gbc.writeMem(0x82cf, { 0x1f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x82cf));
        // CB 46 00F3
        gbc.setState(0xe840, 0x3739, 0x4640, 0x3910, 0x804c, 0x7ebe, 0x0, 0x0);
        gbc.writeMem(0x7ebe, { 0x79 });
        gbc.writeMem(0xe840, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0xe842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe840));
        EXPECT(0x46, gbc.readMem(0xe841));
        // CB 46 00F4
        gbc.setState(0x760e, 0x3142, 0xa040, 0x9326, 0xea77, 0x6323, 0x0, 0x0);
        gbc.writeMem(0x6323, { 0x3e });
        gbc.writeMem(0x760e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x7610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 00F6
        gbc.setState(0xa078, 0xe958, 0x84a0, 0x18e0, 0x1e8b, 0x8223, 0x0, 0x0);
        gbc.writeMem(0x8223, { 0x30 });
        gbc.writeMem(0xa078, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe958, gbc.sp());
        EXPECT(0xa07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8223));
        EXPECT(0xcb, gbc.readMem(0xa078));
        EXPECT(0x46, gbc.readMem(0xa079));
        // CB 46 00F7
        gbc.setState(0xa256, 0xe8b4, 0xe9e0, 0x21c6, 0x6dfa, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x9dc1, { 0x3d });
        gbc.writeMem(0xa256, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe8b4, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9dc1));
        EXPECT(0xcb, gbc.readMem(0xa256));
        EXPECT(0x46, gbc.readMem(0xa257));
        // CB 46 00F8
        gbc.setState(0xd40a, 0x5205, 0xc30, 0x6183, 0x471c, 0x4748, 0x1, 0x1);
        gbc.writeMem(0x4748, { 0x1f });
        gbc.writeMem(0xd40a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0x46, gbc.readMem(0xd40b));
        // CB 46 00F9
        gbc.setState(0xc606, 0xc1c6, 0x2860, 0xeeda, 0xc9d5, 0xfba4, 0x1, 0x0);
        gbc.writeMem(0xc606, { 0xcb, 0x46 });
        gbc.writeMem(0xfba4, { 0xf9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc1c6, gbc.sp());
        EXPECT(0xc608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc606));
        EXPECT(0x46, gbc.readMem(0xc607));
        EXPECT(0xf9, gbc.readMem(0xfba4));
        // CB 46 00FA
        gbc.setState(0x2ad7, 0x23b4, 0xd260, 0xca4, 0x673c, 0xbcc3, 0x0, 0x1);
        gbc.writeMem(0x2ad7, { 0xcb, 0x46 });
        gbc.writeMem(0xbcc3, { 0xbd });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x23b4, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbcc3));
        // CB 46 00FB
        gbc.setState(0xed3f, 0xdcc, 0xd5b0, 0x8cfb, 0x7073, 0x7fbd, 0x0, 0x1);
        gbc.writeMem(0x7fbd, { 0x11 });
        gbc.writeMem(0xed3f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdcc, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3f));
        EXPECT(0x46, gbc.readMem(0xed40));
        // CB 46 00FC
        gbc.setState(0x5c45, 0xbcf8, 0x97e0, 0x54c1, 0x3ec9, 0x8133, 0x1, 0x0);
        gbc.writeMem(0x5c45, { 0xcb, 0x46 });
        gbc.writeMem(0x8133, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbcf8, gbc.sp());
        EXPECT(0x5c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8133));
        // CB 46 00FD
        gbc.setState(0xa4a4, 0x7abd, 0xc3b0, 0xa56e, 0xc133, 0x6d5a, 0x1, 0x0);
        gbc.writeMem(0x6d5a, { 0x50 });
        gbc.writeMem(0xa4a4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7abd, gbc.sp());
        EXPECT(0xa4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a4));
        EXPECT(0x46, gbc.readMem(0xa4a5));
        // CB 46 00FE
        gbc.setState(0x6010, 0x67e4, 0xe050, 0xe93, 0xea33, 0x6303, 0x1, 0x0);
        gbc.writeMem(0x6010, { 0xcb, 0x46 });
        gbc.writeMem(0x6303, { 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x67e4, gbc.sp());
        EXPECT(0x6012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 00FF
        gbc.setState(0x2edf, 0xff9e, 0x8920, 0x9963, 0x70b8, 0xca58, 0x0, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0x46 });
        gbc.writeMem(0xca58, { 0xa1 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xff9e, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xca58));
        // CB 46 0100
        gbc.setState(0x280a, 0xd377, 0x1f90, 0x1019, 0xe316, 0x6d5a, 0x0, 0x1);
        gbc.writeMem(0x280a, { 0xcb, 0x46 });
        gbc.writeMem(0x6d5a, { 0x50 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x280c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0101
        gbc.setState(0x3777, 0x5e70, 0x6010, 0xbda4, 0xde6c, 0x90e9, 0x0, 0x1);
        gbc.writeMem(0x3777, { 0xcb, 0x46 });
        gbc.writeMem(0x90e9, { 0xc7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5e70, gbc.sp());
        EXPECT(0x3779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x90e9));
        // CB 46 0102
        gbc.setState(0x39d9, 0x3cf5, 0x6d20, 0xb56f, 0x2296, 0xbe61, 0x1, 0x0);
        gbc.writeMem(0x39d9, { 0xcb, 0x46 });
        gbc.writeMem(0xbe61, { 0xa6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbe61));
        // CB 46 0103
        gbc.setState(0x65e3, 0x763f, 0x92b0, 0xe35c, 0xf75d, 0x72e1, 0x1, 0x1);
        gbc.writeMem(0x65e3, { 0xcb, 0x46 });
        gbc.writeMem(0x72e1, { 0x96 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x763f, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0104
        gbc.setState(0xa1b8, 0xa715, 0x69f0, 0x1bc0, 0x3b9a, 0x3e5, 0x1, 0x1);
        gbc.writeMem(0x3e5, { 0x7d });
        gbc.writeMem(0xa1b8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa715, gbc.sp());
        EXPECT(0xa1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b8));
        EXPECT(0x46, gbc.readMem(0xa1b9));
        // CB 46 0105
        gbc.setState(0x3647, 0xd779, 0x9770, 0xd138, 0x9fbf, 0xcaee, 0x1, 0x1);
        gbc.writeMem(0x3647, { 0xcb, 0x46 });
        gbc.writeMem(0xcaee, { 0xfb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0x3649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xcaee));
        // CB 46 0106
        gbc.setState(0x7fcf, 0x56a5, 0xdd20, 0xfcf8, 0x77c8, 0x699d, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0xd2 });
        gbc.writeMem(0x7fcf, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x56a5, gbc.sp());
        EXPECT(0x7fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0107
        gbc.setState(0xeccd, 0x7152, 0xd630, 0xeaf5, 0xe3b3, 0xca20, 0x0, 0x0);
        gbc.writeMem(0xca20, { 0x65 });
        gbc.writeMem(0xeccd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xca20));
        EXPECT(0xcb, gbc.readMem(0xeccd));
        EXPECT(0x46, gbc.readMem(0xecce));
        // CB 46 0108
        gbc.setState(0x422d, 0xf94, 0x96e0, 0xb95e, 0xbc0e, 0x847d, 0x1, 0x1);
        gbc.writeMem(0x422d, { 0xcb, 0x46 });
        gbc.writeMem(0x847d, { 0x32 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x847d));
        // CB 46 0109
        gbc.setState(0x989b, 0xc364, 0x3b10, 0xabb5, 0x165d, 0xc338, 0x0, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0x46 });
        gbc.writeMem(0xc338, { 0xc7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989b));
        EXPECT(0x46, gbc.readMem(0x989c));
        EXPECT(0xc7, gbc.readMem(0xc338));
        // CB 46 010A
        gbc.setState(0x5a9d, 0xd978, 0xfa0, 0x7df, 0x2a55, 0xd967, 0x1, 0x1);
        gbc.writeMem(0x5a9d, { 0xcb, 0x46 });
        gbc.writeMem(0xd967, { 0xb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0x5a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd967));
        // CB 46 010B
        gbc.setState(0xd2c6, 0x68e4, 0xe70, 0x47d0, 0xfe22, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0x16cf, { 0x53 });
        gbc.writeMem(0xd2c6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0xd2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c6));
        EXPECT(0x46, gbc.readMem(0xd2c7));
        // CB 46 010D
        gbc.setState(0x59d7, 0x3796, 0xc640, 0x1207, 0xb065, 0xdf75, 0x0, 0x0);
        gbc.writeMem(0x59d7, { 0xcb, 0x46 });
        gbc.writeMem(0xdf75, { 0x87 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3796, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xdf75));
        // CB 46 010E
        gbc.setState(0x36e, 0x4be1, 0x75d0, 0xc8a1, 0x11b3, 0xbbb1, 0x1, 0x1);
        gbc.writeMem(0x36e, { 0xcb, 0x46 });
        gbc.writeMem(0xbbb1, { 0xb2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4be1, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbbb1));
        // CB 46 010F
        gbc.setState(0x6c62, 0x3f18, 0x48d0, 0xf94a, 0x5d6d, 0xc296, 0x0, 0x0);
        gbc.writeMem(0x6c62, { 0xcb, 0x46 });
        gbc.writeMem(0xc296, { 0x31 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0x6c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xc296));
        // CB 46 0110
        gbc.setState(0x2b4c, 0x5eee, 0x6640, 0xa5ed, 0xfa05, 0x71bd, 0x0, 0x1);
        gbc.writeMem(0x2b4c, { 0xcb, 0x46 });
        gbc.writeMem(0x71bd, { 0x5f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5eee, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0111
        gbc.setState(0x897a, 0xdfe8, 0x9db0, 0xd497, 0x86e1, 0x1f66, 0x0, 0x1);
        gbc.writeMem(0x1f66, { 0xf4 });
        gbc.writeMem(0x897a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x897c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897a));
        EXPECT(0x46, gbc.readMem(0x897b));
        // CB 46 0112
        gbc.setState(0x9af2, 0x542b, 0xbd30, 0xceb3, 0x6c24, 0xdaa1, 0x1, 0x1);
        gbc.writeMem(0x9af2, { 0xcb, 0x46 });
        gbc.writeMem(0xdaa1, { 0x68 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af2));
        EXPECT(0x46, gbc.readMem(0x9af3));
        EXPECT(0x68, gbc.readMem(0xdaa1));
        // CB 46 0113
        gbc.setState(0x922c, 0x1192, 0x1fc0, 0x73a8, 0xdcf9, 0x25a, 0x1, 0x0);
        gbc.writeMem(0x25a, { 0xfe });
        gbc.writeMem(0x922c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922c));
        EXPECT(0x46, gbc.readMem(0x922d));
        // CB 46 0114
        gbc.setState(0xe363, 0x115f, 0xba80, 0x5d88, 0x3265, 0x7340, 0x1, 0x1);
        gbc.writeMem(0x7340, { 0x5e });
        gbc.writeMem(0xe363, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0xe365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe363));
        EXPECT(0x46, gbc.readMem(0xe364));
        // CB 46 0115
        gbc.setState(0xb969, 0x2e9f, 0x4900, 0x5867, 0x1ab4, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0x4daf, { 0xbd });
        gbc.writeMem(0xb969, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2e9f, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb969));
        EXPECT(0x46, gbc.readMem(0xb96a));
        // CB 46 0116
        gbc.setState(0x3a4d, 0xa859, 0xdef0, 0xa59d, 0x96ad, 0x6cbe, 0x0, 0x0);
        gbc.writeMem(0x3a4d, { 0xcb, 0x46 });
        gbc.writeMem(0x6cbe, { 0x6a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0117
        gbc.setState(0xa21, 0x97cc, 0x7e80, 0x827d, 0x9a2e, 0x274e, 0x0, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0x46 });
        gbc.writeMem(0x274e, { 0x90 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x97cc, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0118
        gbc.setState(0x2d91, 0xacb2, 0x69d0, 0x80af, 0x588c, 0x8e37, 0x0, 0x0);
        gbc.writeMem(0x2d91, { 0xcb, 0x46 });
        gbc.writeMem(0x8e37, { 0x47 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0x2d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8e37));
        // CB 46 0119
        gbc.setState(0xb27b, 0xaeae, 0xd700, 0x1ff1, 0xe8b5, 0xaf12, 0x1, 0x0);
        gbc.writeMem(0xaf12, { 0x4 });
        gbc.writeMem(0xb27b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0xb27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xaf12));
        EXPECT(0xcb, gbc.readMem(0xb27b));
        EXPECT(0x46, gbc.readMem(0xb27c));
        // CB 46 011B
        gbc.setState(0xca57, 0x796d, 0xd230, 0xfbf2, 0xe817, 0x2466, 0x0, 0x0);
        gbc.writeMem(0x2466, { 0x53 });
        gbc.writeMem(0xca57, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x796d, gbc.sp());
        EXPECT(0xca59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca57));
        EXPECT(0x46, gbc.readMem(0xca58));
        // CB 46 011C
        gbc.setState(0x236e, 0x10e9, 0xadc0, 0x8be, 0x8d38, 0x8e73, 0x1, 0x0);
        gbc.writeMem(0x236e, { 0xcb, 0x46 });
        gbc.writeMem(0x8e73, { 0x7f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8e73));
        // CB 46 011D
        gbc.setState(0xd021, 0x6818, 0xcfa0, 0xe687, 0xd26f, 0xa9c6, 0x1, 0x1);
        gbc.writeMem(0xa9c6, { 0x16 });
        gbc.writeMem(0xd021, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6818, gbc.sp());
        EXPECT(0xd023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa9c6));
        EXPECT(0xcb, gbc.readMem(0xd021));
        EXPECT(0x46, gbc.readMem(0xd022));
        // CB 46 011E
        gbc.setState(0xb77a, 0x5f30, 0x4680, 0xd0, 0x6566, 0xd532, 0x0, 0x1);
        gbc.writeMem(0xb77a, { 0xcb, 0x46 });
        gbc.writeMem(0xd532, { 0x76 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0xb77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77a));
        EXPECT(0x46, gbc.readMem(0xb77b));
        EXPECT(0x76, gbc.readMem(0xd532));
        // CB 46 011F
        gbc.setState(0x80bc, 0x7632, 0x4f30, 0x182f, 0x6c4f, 0xa94c, 0x0, 0x1);
        gbc.writeMem(0x80bc, { 0xcb, 0x46 });
        gbc.writeMem(0xa94c, { 0x20 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7632, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bc));
        EXPECT(0x46, gbc.readMem(0x80bd));
        EXPECT(0x20, gbc.readMem(0xa94c));
        // CB 46 0120
        gbc.setState(0xb72f, 0x8abb, 0x3040, 0xa6d5, 0x939b, 0x9370, 0x1, 0x1);
        gbc.writeMem(0x9370, { 0xae });
        gbc.writeMem(0xb72f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0xb731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x9370));
        EXPECT(0xcb, gbc.readMem(0xb72f));
        EXPECT(0x46, gbc.readMem(0xb730));
        // CB 46 0121
        gbc.setState(0x269b, 0x9bdd, 0xf450, 0x5ec, 0x1a79, 0x860d, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xcb, 0x46 });
        gbc.writeMem(0x860d, { 0x4e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9bdd, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x860d));
        // CB 46 0122
        gbc.setState(0xeff1, 0xcec4, 0xbc20, 0x14d9, 0xcba8, 0xa3ae, 0x1, 0x1);
        gbc.writeMem(0xa3ae, { 0xa6 });
        gbc.writeMem(0xeff1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcec4, gbc.sp());
        EXPECT(0xeff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa3ae));
        EXPECT(0xcb, gbc.readMem(0xeff1));
        EXPECT(0x46, gbc.readMem(0xeff2));
        // CB 46 0123
        gbc.setState(0xcc49, 0x804b, 0xb3a0, 0x9cfb, 0x42a2, 0xa0a0, 0x1, 0x0);
        gbc.writeMem(0xa0a0, { 0xbc });
        gbc.writeMem(0xcc49, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa0a0));
        EXPECT(0xcb, gbc.readMem(0xcc49));
        EXPECT(0x46, gbc.readMem(0xcc4a));
        // CB 46 0124
        gbc.setState(0x5715, 0x6bb1, 0x63d0, 0xb30, 0xd238, 0xfff4, 0x1, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0x46 });
        gbc.writeMem(0xfff4, { 0xcf });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xfff4));
        // CB 46 0125
        gbc.setState(0xe3c, 0xdded, 0x9c80, 0x69ed, 0xa9ff, 0x49ed, 0x0, 0x1);
        gbc.writeMem(0xe3c, { 0xcb, 0x46 });
        gbc.writeMem(0x49ed, { 0x6e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdded, gbc.sp());
        EXPECT(0xe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0126
        gbc.setState(0x10ff, 0x4ca4, 0x1750, 0x589e, 0xe23c, 0xce7a, 0x1, 0x1);
        gbc.writeMem(0x10ff, { 0xcb, 0x46 });
        gbc.writeMem(0xce7a, { 0x62 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4ca4, gbc.sp());
        EXPECT(0x1101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xce7a));
        // CB 46 0127
        gbc.setState(0xa990, 0x547d, 0xe840, 0xdfe7, 0x1e41, 0x7490, 0x0, 0x0);
        gbc.writeMem(0x7490, { 0xe });
        gbc.writeMem(0xa990, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa990));
        EXPECT(0x46, gbc.readMem(0xa991));
        // CB 46 0128
        gbc.setState(0x53e1, 0x7632, 0x4450, 0x9b74, 0x14b, 0x9a6c, 0x0, 0x1);
        gbc.writeMem(0x53e1, { 0xcb, 0x46 });
        gbc.writeMem(0x9a6c, { 0x30 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7632, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9a6c));
        // CB 46 0129
        gbc.setState(0x60b2, 0xfc2c, 0xc050, 0x2532, 0x5585, 0xf589, 0x0, 0x0);
        gbc.writeMem(0x60b2, { 0xcb, 0x46 });
        gbc.writeMem(0xf589, { 0x79 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xf589));
        // CB 46 012A
        gbc.setState(0xc140, 0xaecf, 0xee20, 0xc084, 0xd7d3, 0xed96, 0x1, 0x0);
        gbc.writeMem(0xc140, { 0xcb, 0x46 });
        gbc.writeMem(0xed96, { 0x56 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaecf, gbc.sp());
        EXPECT(0xc142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc140));
        EXPECT(0x46, gbc.readMem(0xc141));
        EXPECT(0x56, gbc.readMem(0xed96));
        // CB 46 012B
        gbc.setState(0x1926, 0xcbe6, 0x68a0, 0xcd3c, 0xd404, 0xc4e2, 0x0, 0x0);
        gbc.writeMem(0x1926, { 0xcb, 0x46 });
        gbc.writeMem(0xc4e2, { 0x1d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcbe6, gbc.sp());
        EXPECT(0x1928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc4e2));
        // CB 46 012C
        gbc.setState(0xd10f, 0x586a, 0xe4d0, 0x6dac, 0x2c58, 0x4d4b, 0x0, 0x1);
        gbc.writeMem(0x4d4b, { 0xa1 });
        gbc.writeMem(0xd10f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x586a, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10f));
        EXPECT(0x46, gbc.readMem(0xd110));
        // CB 46 012D
        gbc.setState(0x6ea0, 0xf521, 0xc5f0, 0x5db0, 0xc377, 0xee2c, 0x0, 0x0);
        gbc.writeMem(0x6ea0, { 0xcb, 0x46 });
        gbc.writeMem(0xee2c, { 0x58 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0x6ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xee2c));
        // CB 46 012E
        gbc.setState(0x8a57, 0x3a4c, 0xce40, 0x7da1, 0x866d, 0x188, 0x1, 0x1);
        gbc.writeMem(0x188, { 0x6d });
        gbc.writeMem(0x8a57, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3a4c, gbc.sp());
        EXPECT(0x8a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a57));
        EXPECT(0x46, gbc.readMem(0x8a58));
        // CB 46 012F
        gbc.setState(0xd242, 0x6278, 0xc4b0, 0x4e29, 0x4c1f, 0x1c5a, 0x0, 0x0);
        gbc.writeMem(0x1c5a, { 0x9e });
        gbc.writeMem(0xd242, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6278, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd242));
        EXPECT(0x46, gbc.readMem(0xd243));
        // CB 46 0130
        gbc.setState(0x3b2e, 0xcb40, 0x910, 0x6cf4, 0xd445, 0xb88b, 0x0, 0x0);
        gbc.writeMem(0x3b2e, { 0xcb, 0x46 });
        gbc.writeMem(0xb88b, { 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcb40, gbc.sp());
        EXPECT(0x3b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb88b));
        // CB 46 0131
        gbc.setState(0xe977, 0xe266, 0x9830, 0xa441, 0xae8f, 0x9184, 0x1, 0x1);
        gbc.writeMem(0x9184, { 0xd6 });
        gbc.writeMem(0xe977, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9184));
        EXPECT(0xcb, gbc.readMem(0xe977));
        EXPECT(0x46, gbc.readMem(0xe978));
        // CB 46 0132
        gbc.setState(0xd2a0, 0x224f, 0xb8f0, 0xed89, 0xb8fe, 0x7bb8, 0x1, 0x0);
        gbc.writeMem(0x7bb8, { 0x15 });
        gbc.writeMem(0xd2a0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x224f, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a0));
        EXPECT(0x46, gbc.readMem(0xd2a1));
        // CB 46 0133
        gbc.setState(0x7268, 0x4c48, 0xb6e0, 0x9540, 0x4269, 0x3d26, 0x1, 0x0);
        gbc.writeMem(0x3d26, { 0x89 });
        gbc.writeMem(0x7268, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4c48, gbc.sp());
        EXPECT(0x726a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0134
        gbc.setState(0xbc52, 0x5033, 0x6d40, 0xb0fb, 0x3357, 0x3f13, 0x0, 0x0);
        gbc.writeMem(0x3f13, { 0xe5 });
        gbc.writeMem(0xbc52, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0xbc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc52));
        EXPECT(0x46, gbc.readMem(0xbc53));
        // CB 46 0135
        gbc.setState(0xaaf2, 0xb48a, 0x1840, 0xb257, 0x9866, 0xc007, 0x0, 0x0);
        gbc.writeMem(0xaaf2, { 0xcb, 0x46 });
        gbc.writeMem(0xc007, { 0x9e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0xaaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf2));
        EXPECT(0x46, gbc.readMem(0xaaf3));
        EXPECT(0x9e, gbc.readMem(0xc007));
        // CB 46 0136
        gbc.setState(0x37fa, 0x3d06, 0xa5e0, 0xe64c, 0xfd63, 0xda0, 0x0, 0x1);
        gbc.writeMem(0xda0, { 0x6c });
        gbc.writeMem(0x37fa, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d06, gbc.sp());
        EXPECT(0x37fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0137
        gbc.setState(0x10e7, 0xc427, 0x1eb0, 0xc403, 0x152f, 0xbcba, 0x0, 0x0);
        gbc.writeMem(0x10e7, { 0xcb, 0x46 });
        gbc.writeMem(0xbcba, { 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc427, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xbcba));
        // CB 46 0138
        gbc.setState(0x4bf2, 0xff4a, 0xc910, 0xc2a3, 0xb2d3, 0xcc65, 0x1, 0x0);
        gbc.writeMem(0x4bf2, { 0xcb, 0x46 });
        gbc.writeMem(0xcc65, { 0xc2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x4bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc65));
        // CB 46 0139
        gbc.setState(0x44d8, 0xbd64, 0xa000, 0xf8f1, 0x807, 0xe544, 0x0, 0x0);
        gbc.writeMem(0x44d8, { 0xcb, 0x46 });
        gbc.writeMem(0xe544, { 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe544));
        // CB 46 013B
        gbc.setState(0xb467, 0x51ba, 0x14c0, 0x70b6, 0x66c5, 0x7a08, 0x1, 0x1);
        gbc.writeMem(0x7a08, { 0xde });
        gbc.writeMem(0xb467, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x51ba, gbc.sp());
        EXPECT(0xb469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb467));
        EXPECT(0x46, gbc.readMem(0xb468));
        // CB 46 013C
        gbc.setState(0x6785, 0x6ff0, 0x540, 0x1d77, 0x3752, 0x9a4f, 0x0, 0x1);
        gbc.writeMem(0x6785, { 0xcb, 0x46 });
        gbc.writeMem(0x9a4f, { 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0x6787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a4f));
        // CB 46 013D
        gbc.setState(0x96ed, 0x5682, 0x81f0, 0x627f, 0xe93f, 0x5d43, 0x1, 0x0);
        gbc.writeMem(0x5d43, { 0xdb });
        gbc.writeMem(0x96ed, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5682, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ed));
        EXPECT(0x46, gbc.readMem(0x96ee));
        // CB 46 013E
        gbc.setState(0xeeb4, 0xee36, 0x33d0, 0xb8cf, 0x146a, 0xf60d, 0x1, 0x0);
        gbc.writeMem(0xeeb4, { 0xcb, 0x46 });
        gbc.writeMem(0xf60d, { 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xee36, gbc.sp());
        EXPECT(0xeeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb4));
        EXPECT(0x46, gbc.readMem(0xeeb5));
        EXPECT(0x4, gbc.readMem(0xf60d));
        // CB 46 013F
        gbc.setState(0x7a4b, 0x86d5, 0xfc50, 0xc0d3, 0xf29d, 0xebe9, 0x0, 0x1);
        gbc.writeMem(0x7a4b, { 0xcb, 0x46 });
        gbc.writeMem(0xebe9, { 0xb8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x86d5, gbc.sp());
        EXPECT(0x7a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xebe9));
        // CB 46 0140
        gbc.setState(0xeaf4, 0x8bc8, 0x470, 0x7c2c, 0x6f87, 0x5900, 0x0, 0x1);
        gbc.writeMem(0x5900, { 0xa6 });
        gbc.writeMem(0xeaf4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8bc8, gbc.sp());
        EXPECT(0xeaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf4));
        EXPECT(0x46, gbc.readMem(0xeaf5));
        // CB 46 0141
        gbc.setState(0x4b5b, 0x20a3, 0x4910, 0xbb7f, 0x20ff, 0x1336, 0x1, 0x0);
        gbc.writeMem(0x1336, { 0x1a });
        gbc.writeMem(0x4b5b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x20a3, gbc.sp());
        EXPECT(0x4b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0142
        gbc.setState(0x1156, 0x5f7, 0x2bd0, 0x16aa, 0x8b17, 0xc9e3, 0x1, 0x1);
        gbc.writeMem(0x1156, { 0xcb, 0x46 });
        gbc.writeMem(0xc9e3, { 0x54 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5f7, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc9e3));
        // CB 46 0143
        gbc.setState(0xd7b, 0x34ed, 0xb120, 0x8d78, 0x2803, 0x5bf5, 0x0, 0x1);
        gbc.writeMem(0xd7b, { 0xcb, 0x46 });
        gbc.writeMem(0x5bf5, { 0x19 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x34ed, gbc.sp());
        EXPECT(0xd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0144
        gbc.setState(0x37a0, 0x2466, 0x8190, 0xe540, 0x4ba4, 0xa5ab, 0x1, 0x1);
        gbc.writeMem(0x37a0, { 0xcb, 0x46 });
        gbc.writeMem(0xa5ab, { 0xa2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa5ab));
        // CB 46 0145
        gbc.setState(0x98be, 0x52a8, 0x2a20, 0x1ee6, 0x151c, 0xe8a7, 0x1, 0x0);
        gbc.writeMem(0x98be, { 0xcb, 0x46 });
        gbc.writeMem(0xe8a7, { 0x8d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98be));
        EXPECT(0x46, gbc.readMem(0x98bf));
        EXPECT(0x8d, gbc.readMem(0xe8a7));
        // CB 46 0146
        gbc.setState(0x1e2e, 0x25ec, 0xe80, 0xdd72, 0xef89, 0x1f1a, 0x1, 0x0);
        gbc.writeMem(0x1e2e, { 0xcb, 0x46 });
        gbc.writeMem(0x1f1a, { 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x25ec, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0147
        gbc.setState(0x8b3d, 0x59a2, 0xc3b0, 0x3db0, 0x2a75, 0x8a86, 0x1, 0x0);
        gbc.writeMem(0x8a86, { 0x43 });
        gbc.writeMem(0x8b3d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a86));
        EXPECT(0xcb, gbc.readMem(0x8b3d));
        EXPECT(0x46, gbc.readMem(0x8b3e));
        // CB 46 0148
        gbc.setState(0xb35d, 0x78f6, 0xd9d0, 0xa37f, 0x78e8, 0x9f76, 0x0, 0x0);
        gbc.writeMem(0x9f76, { 0x7c });
        gbc.writeMem(0xb35d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0xb35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9f76));
        EXPECT(0xcb, gbc.readMem(0xb35d));
        EXPECT(0x46, gbc.readMem(0xb35e));
        // CB 46 0149
        gbc.setState(0xec52, 0xe624, 0xb6b0, 0x6924, 0x311b, 0xd4d7, 0x0, 0x0);
        gbc.writeMem(0xd4d7, { 0xfe });
        gbc.writeMem(0xec52, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe624, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd4d7));
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0x46, gbc.readMem(0xec53));
        // CB 46 014A
        gbc.setState(0x488, 0x9370, 0xdbb0, 0x9509, 0x254e, 0x7c76, 0x1, 0x1);
        gbc.writeMem(0x488, { 0xcb, 0x46 });
        gbc.writeMem(0x7c76, { 0x75 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 014B
        gbc.setState(0x454f, 0x6fbb, 0x48b0, 0x1512, 0x67cc, 0xa9ed, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0x46 });
        gbc.writeMem(0xa9ed, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa9ed));
        // CB 46 014C
        gbc.setState(0xa037, 0x7521, 0x8050, 0x3491, 0x7a44, 0x356, 0x0, 0x0);
        gbc.writeMem(0x356, { 0x93 });
        gbc.writeMem(0xa037, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7521, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa037));
        EXPECT(0x46, gbc.readMem(0xa038));
        // CB 46 014D
        gbc.setState(0xc4d, 0xabc2, 0x7c30, 0x2d2b, 0x1a5e, 0x5356, 0x0, 0x0);
        gbc.writeMem(0xc4d, { 0xcb, 0x46 });
        gbc.writeMem(0x5356, { 0x31 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 014E
        gbc.setState(0xb74c, 0x9ddc, 0x7e30, 0xca0d, 0xde8, 0x80cc, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0x29 });
        gbc.writeMem(0xb74c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0xb74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x80cc));
        EXPECT(0xcb, gbc.readMem(0xb74c));
        EXPECT(0x46, gbc.readMem(0xb74d));
        // CB 46 014F
        gbc.setState(0x54d0, 0xf0a0, 0xd7b0, 0x74c1, 0x1669, 0xba18, 0x0, 0x0);
        gbc.writeMem(0x54d0, { 0xcb, 0x46 });
        gbc.writeMem(0xba18, { 0x6f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf0a0, gbc.sp());
        EXPECT(0x54d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xba18));
        // CB 46 0150
        gbc.setState(0xc9cf, 0x343a, 0x28e0, 0xf9e6, 0xf11f, 0x5e5e, 0x0, 0x1);
        gbc.writeMem(0x5e5e, { 0x58 });
        gbc.writeMem(0xc9cf, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x343a, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cf));
        EXPECT(0x46, gbc.readMem(0xc9d0));
        // CB 46 0151
        gbc.setState(0x70b8, 0xa04, 0x99f0, 0x3cf4, 0x5e3d, 0xf3be, 0x1, 0x0);
        gbc.writeMem(0x70b8, { 0xcb, 0x46 });
        gbc.writeMem(0xf3be, { 0xdb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa04, gbc.sp());
        EXPECT(0x70ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf3be));
        // CB 46 0152
        gbc.setState(0x17cf, 0xea7b, 0x9d80, 0x653b, 0x9381, 0x4dd5, 0x1, 0x0);
        gbc.writeMem(0x17cf, { 0xcb, 0x46 });
        gbc.writeMem(0x4dd5, { 0xce });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0153
        gbc.setState(0x2153, 0xddc6, 0xed00, 0x73f5, 0x43ca, 0xfdd, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0x3a });
        gbc.writeMem(0x2153, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xddc6, gbc.sp());
        EXPECT(0x2155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0154
        gbc.setState(0x4517, 0xef94, 0x7c60, 0xb2d2, 0xbb41, 0x97b0, 0x0, 0x1);
        gbc.writeMem(0x4517, { 0xcb, 0x46 });
        gbc.writeMem(0x97b0, { 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xef94, gbc.sp());
        EXPECT(0x4519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x97b0));
        // CB 46 0155
        gbc.setState(0x9103, 0x46fa, 0x3450, 0xe558, 0xb8ef, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0x9103, { 0xcb, 0x46 });
        gbc.writeMem(0xbfb0, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x46fa, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9103));
        EXPECT(0x46, gbc.readMem(0x9104));
        EXPECT(0xc, gbc.readMem(0xbfb0));
        // CB 46 0156
        gbc.setState(0x3c53, 0x6b99, 0x930, 0x36a5, 0x46c3, 0x3137, 0x1, 0x1);
        gbc.writeMem(0x3137, { 0x65 });
        gbc.writeMem(0x3c53, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6b99, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0157
        gbc.setState(0xa01, 0x6fe0, 0x7990, 0x63c7, 0x8610, 0xf6a9, 0x0, 0x1);
        gbc.writeMem(0xa01, { 0xcb, 0x46 });
        gbc.writeMem(0xf6a9, { 0xb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6fe0, gbc.sp());
        EXPECT(0xa03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xf6a9));
        // CB 46 0158
        gbc.setState(0x5274, 0x8180, 0x580, 0xe6d3, 0x89b, 0xcc05, 0x0, 0x1);
        gbc.writeMem(0x5274, { 0xcb, 0x46 });
        gbc.writeMem(0xcc05, { 0x62 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0x5276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xcc05));
        // CB 46 0159
        gbc.setState(0xc32f, 0xf21c, 0xd350, 0x3348, 0xe99e, 0x775b, 0x1, 0x0);
        gbc.writeMem(0x775b, { 0xe9 });
        gbc.writeMem(0xc32f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32f));
        EXPECT(0x46, gbc.readMem(0xc330));
        // CB 46 015A
        gbc.setState(0xd555, 0xccc6, 0x1330, 0x27df, 0x30b, 0x6df9, 0x0, 0x1);
        gbc.writeMem(0x6df9, { 0x1c });
        gbc.writeMem(0xd555, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0xd557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd555));
        EXPECT(0x46, gbc.readMem(0xd556));
        // CB 46 015B
        gbc.setState(0x9643, 0x1159, 0x3530, 0x7043, 0xd22e, 0x8f9b, 0x1, 0x1);
        gbc.writeMem(0x8f9b, { 0x31 });
        gbc.writeMem(0x9643, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1159, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8f9b));
        EXPECT(0xcb, gbc.readMem(0x9643));
        EXPECT(0x46, gbc.readMem(0x9644));
        // CB 46 015C
        gbc.setState(0x3bde, 0x8a59, 0x89b0, 0x3642, 0x1a67, 0x2f6e, 0x1, 0x1);
        gbc.writeMem(0x2f6e, { 0xcf });
        gbc.writeMem(0x3bde, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8a59, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 015D
        gbc.setState(0xa00f, 0x6447, 0x2380, 0x3859, 0xf138, 0x9bec, 0x1, 0x1);
        gbc.writeMem(0x9bec, { 0x8f });
        gbc.writeMem(0xa00f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6447, gbc.sp());
        EXPECT(0xa011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bec));
        EXPECT(0xcb, gbc.readMem(0xa00f));
        EXPECT(0x46, gbc.readMem(0xa010));
        // CB 46 015E
        gbc.setState(0x7640, 0xd66e, 0x3cf0, 0x85, 0x61c8, 0x3a7b, 0x0, 0x0);
        gbc.writeMem(0x3a7b, { 0xc3 });
        gbc.writeMem(0x7640, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0160
        gbc.setState(0x695b, 0xdc7f, 0xb040, 0x1ee2, 0xe6e0, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0x695b, { 0xcb, 0x46 });
        gbc.writeMem(0x6c59, { 0xd1 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x695d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0161
        gbc.setState(0xe178, 0x5ea0, 0x2e50, 0x2dd8, 0x43d3, 0x998d, 0x0, 0x0);
        gbc.writeMem(0x998d, { 0x5d });
        gbc.writeMem(0xe178, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5ea0, gbc.sp());
        EXPECT(0xe17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x998d));
        EXPECT(0xcb, gbc.readMem(0xe178));
        EXPECT(0x46, gbc.readMem(0xe179));
        // CB 46 0162
        gbc.setState(0x3419, 0xedb2, 0x2580, 0xc6e5, 0x8194, 0x19ee, 0x0, 0x0);
        gbc.writeMem(0x19ee, { 0x0 });
        gbc.writeMem(0x3419, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xedb2, gbc.sp());
        EXPECT(0x341b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0163
        gbc.setState(0x5664, 0x4d40, 0x1540, 0xe35b, 0x19b3, 0xc7a9, 0x0, 0x0);
        gbc.writeMem(0x5664, { 0xcb, 0x46 });
        gbc.writeMem(0xc7a9, { 0x6d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4d40, gbc.sp());
        EXPECT(0x5666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc7a9));
        // CB 46 0164
        gbc.setState(0x4341, 0x7327, 0x4d60, 0x6cad, 0xde9e, 0x1ef7, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xc6 });
        gbc.writeMem(0x4341, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7327, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0165
        gbc.setState(0xd3a, 0x252a, 0xbe00, 0x4cc5, 0x1c1a, 0x75d6, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0x46 });
        gbc.writeMem(0x75d6, { 0xe1 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x252a, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0166
        gbc.setState(0x160c, 0xbb28, 0x98b0, 0xba0e, 0x9038, 0xf8f8, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0xcb, 0x46 });
        gbc.writeMem(0xf8f8, { 0xed });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xf8f8));
        // CB 46 0167
        gbc.setState(0x8806, 0x84f3, 0x3420, 0x85b6, 0x6fe0, 0xd20c, 0x0, 0x0);
        gbc.writeMem(0x8806, { 0xcb, 0x46 });
        gbc.writeMem(0xd20c, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8806));
        EXPECT(0x46, gbc.readMem(0x8807));
        EXPECT(0xc, gbc.readMem(0xd20c));
        // CB 46 0168
        gbc.setState(0x9814, 0x541, 0xe900, 0x9dbb, 0x9129, 0xdddc, 0x0, 0x1);
        gbc.writeMem(0x9814, { 0xcb, 0x46 });
        gbc.writeMem(0xdddc, { 0x39 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x541, gbc.sp());
        EXPECT(0x9816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9814));
        EXPECT(0x46, gbc.readMem(0x9815));
        EXPECT(0x39, gbc.readMem(0xdddc));
        // CB 46 0169
        gbc.setState(0xd98b, 0x6e22, 0x14e0, 0xb298, 0x509e, 0xa272, 0x0, 0x0);
        gbc.writeMem(0xa272, { 0x6 });
        gbc.writeMem(0xd98b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0xd98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa272));
        EXPECT(0xcb, gbc.readMem(0xd98b));
        EXPECT(0x46, gbc.readMem(0xd98c));
        // CB 46 016A
        gbc.setState(0x6cbe, 0x9c05, 0xa610, 0x947d, 0xeaf2, 0x2c35, 0x1, 0x1);
        gbc.writeMem(0x2c35, { 0x6f });
        gbc.writeMem(0x6cbe, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 016B
        gbc.setState(0xbc5a, 0xff43, 0xf380, 0xfb88, 0x3feb, 0x6417, 0x0, 0x1);
        gbc.writeMem(0x6417, { 0x27 });
        gbc.writeMem(0xbc5a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xff43, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5a));
        EXPECT(0x46, gbc.readMem(0xbc5b));
        // CB 46 016C
        gbc.setState(0xefa4, 0x1a27, 0xd590, 0x9c1, 0x657, 0x8bbb, 0x1, 0x1);
        gbc.writeMem(0x8bbb, { 0xf1 });
        gbc.writeMem(0xefa4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0xefa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8bbb));
        EXPECT(0xcb, gbc.readMem(0xefa4));
        EXPECT(0x46, gbc.readMem(0xefa5));
        // CB 46 016D
        gbc.setState(0xb227, 0xd95, 0xe590, 0xf5f7, 0xe47, 0x5763, 0x1, 0x1);
        gbc.writeMem(0x5763, { 0xc2 });
        gbc.writeMem(0xb227, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd95, gbc.sp());
        EXPECT(0xb229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb227));
        EXPECT(0x46, gbc.readMem(0xb228));
        // CB 46 016E
        gbc.setState(0x6fc1, 0xad26, 0x2810, 0xb368, 0x1ff7, 0x72e2, 0x0, 0x1);
        gbc.writeMem(0x6fc1, { 0xcb, 0x46 });
        gbc.writeMem(0x72e2, { 0x38 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xad26, gbc.sp());
        EXPECT(0x6fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 016F
        gbc.setState(0x26e1, 0xc85e, 0xf910, 0xa4bf, 0x9eed, 0x9e59, 0x1, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x46 });
        gbc.writeMem(0x9e59, { 0x87 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc85e, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x9e59));
        // CB 46 0170
        gbc.setState(0x4797, 0xe1c3, 0xc9f0, 0x1039, 0xce7f, 0x1cbd, 0x1, 0x1);
        gbc.writeMem(0x1cbd, { 0xc6 });
        gbc.writeMem(0x4797, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe1c3, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0172
        gbc.setState(0x53f3, 0x272d, 0x8640, 0x2b86, 0x4447, 0x21de, 0x0, 0x0);
        gbc.writeMem(0x21de, { 0xc7 });
        gbc.writeMem(0x53f3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x272d, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0173
        gbc.setState(0x8c86, 0xcf62, 0xb160, 0x9196, 0xfde1, 0x8ec9, 0x1, 0x1);
        gbc.writeMem(0x8c86, { 0xcb, 0x46 });
        gbc.writeMem(0x8ec9, { 0x13 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0x8c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c86));
        EXPECT(0x46, gbc.readMem(0x8c87));
        EXPECT(0x13, gbc.readMem(0x8ec9));
        // CB 46 0174
        gbc.setState(0x9954, 0x3279, 0x6900, 0xa5d8, 0x6729, 0x10a2, 0x1, 0x1);
        gbc.writeMem(0x10a2, { 0x32 });
        gbc.writeMem(0x9954, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3279, gbc.sp());
        EXPECT(0x9956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9954));
        EXPECT(0x46, gbc.readMem(0x9955));
        // CB 46 0175
        gbc.setState(0xe289, 0x6804, 0x8f40, 0x8ded, 0xebdb, 0x2052, 0x1, 0x0);
        gbc.writeMem(0x2052, { 0xbf });
        gbc.writeMem(0xe289, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6804, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe289));
        EXPECT(0x46, gbc.readMem(0xe28a));
        // CB 46 0176
        gbc.setState(0x463a, 0x59a6, 0x8b20, 0xf12b, 0x8535, 0x1751, 0x0, 0x1);
        gbc.writeMem(0x1751, { 0xb });
        gbc.writeMem(0x463a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x59a6, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0177
        gbc.setState(0xe3dd, 0x5b9e, 0x8e60, 0xa196, 0x729c, 0xb22a, 0x1, 0x1);
        gbc.writeMem(0xb22a, { 0x50 });
        gbc.writeMem(0xe3dd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5b9e, gbc.sp());
        EXPECT(0xe3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb22a));
        EXPECT(0xcb, gbc.readMem(0xe3dd));
        EXPECT(0x46, gbc.readMem(0xe3de));
        // CB 46 0178
        gbc.setState(0xfc0, 0x1d8c, 0xbc00, 0x6338, 0xacb4, 0xf540, 0x0, 0x0);
        gbc.writeMem(0xfc0, { 0xcb, 0x46 });
        gbc.writeMem(0xf540, { 0xbf });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1d8c, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xf540));
        // CB 46 0179
        gbc.setState(0x1de7, 0x68dd, 0xc300, 0xd970, 0xdd16, 0xa71b, 0x1, 0x1);
        gbc.writeMem(0x1de7, { 0xcb, 0x46 });
        gbc.writeMem(0xa71b, { 0x7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x68dd, gbc.sp());
        EXPECT(0x1de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa71b));
        // CB 46 017A
        gbc.setState(0x9a2d, 0x59d5, 0x3750, 0xe687, 0xc79b, 0x88b7, 0x0, 0x1);
        gbc.writeMem(0x88b7, { 0x66 });
        gbc.writeMem(0x9a2d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x59d5, gbc.sp());
        EXPECT(0x9a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x88b7));
        EXPECT(0xcb, gbc.readMem(0x9a2d));
        EXPECT(0x46, gbc.readMem(0x9a2e));
        // CB 46 017B
        gbc.setState(0x8c9e, 0xe891, 0x6590, 0x33a9, 0x2d0d, 0x6643, 0x1, 0x1);
        gbc.writeMem(0x6643, { 0x4 });
        gbc.writeMem(0x8c9e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe891, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9e));
        EXPECT(0x46, gbc.readMem(0x8c9f));
        // CB 46 017C
        gbc.setState(0xc527, 0x2bae, 0xe140, 0x676b, 0x3788, 0xe71, 0x1, 0x1);
        gbc.writeMem(0xe71, { 0x3c });
        gbc.writeMem(0xc527, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc527));
        EXPECT(0x46, gbc.readMem(0xc528));
        // CB 46 017D
        gbc.setState(0x3b71, 0x702a, 0x6a0, 0x54dc, 0x5ce4, 0x4090, 0x1, 0x1);
        gbc.writeMem(0x3b71, { 0xcb, 0x46 });
        gbc.writeMem(0x4090, { 0x19 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x702a, gbc.sp());
        EXPECT(0x3b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 017E
        gbc.setState(0x81a0, 0xf798, 0xbab0, 0x4fc8, 0x27d1, 0x239a, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0xef });
        gbc.writeMem(0x81a0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x81a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a0));
        EXPECT(0x46, gbc.readMem(0x81a1));
        // CB 46 017F
        gbc.setState(0x3961, 0xcfe7, 0x23a0, 0xfc4c, 0xfcde, 0x884e, 0x1, 0x0);
        gbc.writeMem(0x3961, { 0xcb, 0x46 });
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcfe7, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x884e));
        // CB 46 0180
        gbc.setState(0x7d0, 0x4990, 0x1220, 0xcb0a, 0xeee4, 0x878d, 0x1, 0x0);
        gbc.writeMem(0x7d0, { 0xcb, 0x46 });
        gbc.writeMem(0x878d, { 0x7c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x878d));
        // CB 46 0181
        gbc.setState(0xda7b, 0x4465, 0x8680, 0xbe2e, 0x6a8f, 0x4c76, 0x0, 0x0);
        gbc.writeMem(0x4c76, { 0xa9 });
        gbc.writeMem(0xda7b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7b));
        EXPECT(0x46, gbc.readMem(0xda7c));
        // CB 46 0182
        gbc.setState(0x1bb2, 0xa640, 0x38c0, 0xd792, 0x4f69, 0x3caa, 0x1, 0x1);
        gbc.writeMem(0x1bb2, { 0xcb, 0x46 });
        gbc.writeMem(0x3caa, { 0x13 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0x1bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0183
        gbc.setState(0xb624, 0xb914, 0x4490, 0x85a9, 0x24b5, 0x8cc7, 0x1, 0x1);
        gbc.writeMem(0x8cc7, { 0xb8 });
        gbc.writeMem(0xb624, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb914, gbc.sp());
        EXPECT(0xb626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8cc7));
        EXPECT(0xcb, gbc.readMem(0xb624));
        EXPECT(0x46, gbc.readMem(0xb625));
        // CB 46 0184
        gbc.setState(0x8579, 0xb3dd, 0xfd90, 0xf1cb, 0x7009, 0x6124, 0x1, 0x0);
        gbc.writeMem(0x6124, { 0x97 });
        gbc.writeMem(0x8579, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb3dd, gbc.sp());
        EXPECT(0x857b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8579));
        EXPECT(0x46, gbc.readMem(0x857a));
        // CB 46 0185
        gbc.setState(0x27a6, 0xec18, 0x1850, 0xec49, 0x68af, 0x7ea2, 0x1, 0x1);
        gbc.writeMem(0x27a6, { 0xcb, 0x46 });
        gbc.writeMem(0x7ea2, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xec18, gbc.sp());
        EXPECT(0x27a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0186
        gbc.setState(0xd22b, 0x3503, 0x9970, 0x9fdc, 0xfaf6, 0x2c34, 0x1, 0x1);
        gbc.writeMem(0x2c34, { 0x27 });
        gbc.writeMem(0xd22b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22b));
        EXPECT(0x46, gbc.readMem(0xd22c));
        // CB 46 0187
        gbc.setState(0x72, 0xae50, 0x9430, 0xe1a3, 0x9478, 0x33a, 0x1, 0x0);
        gbc.writeMem(0x72, { 0xcb, 0x46 });
        gbc.writeMem(0x33a, { 0x6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0x74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0188
        gbc.setState(0x948d, 0x292d, 0x960, 0x56e6, 0x3e42, 0x3dad, 0x0, 0x1);
        gbc.writeMem(0x3dad, { 0x34 });
        gbc.writeMem(0x948d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0x948f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948d));
        EXPECT(0x46, gbc.readMem(0x948e));
        // CB 46 018A
        gbc.setState(0xe1d7, 0x1e96, 0x5b70, 0x9044, 0x89b2, 0xfcb3, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0x46 });
        gbc.writeMem(0xfcb3, { 0x84 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1e96, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d7));
        EXPECT(0x46, gbc.readMem(0xe1d8));
        EXPECT(0x84, gbc.readMem(0xfcb3));
        // CB 46 018B
        gbc.setState(0x9d5b, 0x7068, 0x88c0, 0x85a7, 0xfeb3, 0x25f6, 0x1, 0x0);
        gbc.writeMem(0x25f6, { 0x1 });
        gbc.writeMem(0x9d5b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7068, gbc.sp());
        EXPECT(0x9d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5b));
        EXPECT(0x46, gbc.readMem(0x9d5c));
        // CB 46 018C
        gbc.setState(0x7c2, 0xdcc6, 0x5900, 0x290f, 0x10fe, 0xe980, 0x0, 0x1);
        gbc.writeMem(0x7c2, { 0xcb, 0x46 });
        gbc.writeMem(0xe980, { 0x28 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdcc6, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xe980));
        // CB 46 018D
        gbc.setState(0x2943, 0x6033, 0xb2f0, 0x303c, 0x5a97, 0xeb9, 0x0, 0x1);
        gbc.writeMem(0xeb9, { 0x71 });
        gbc.writeMem(0x2943, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 018F
        gbc.setState(0xe62c, 0x4e43, 0x3880, 0x1db, 0x6122, 0x3398, 0x0, 0x1);
        gbc.writeMem(0x3398, { 0xb9 });
        gbc.writeMem(0xe62c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62c));
        EXPECT(0x46, gbc.readMem(0xe62d));
        // CB 46 0190
        gbc.setState(0xbb1a, 0x1185, 0xb3d0, 0x89ad, 0xe7e, 0xa77a, 0x0, 0x0);
        gbc.writeMem(0xa77a, { 0x81 });
        gbc.writeMem(0xbb1a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1185, gbc.sp());
        EXPECT(0xbb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xa77a));
        EXPECT(0xcb, gbc.readMem(0xbb1a));
        EXPECT(0x46, gbc.readMem(0xbb1b));
        // CB 46 0191
        gbc.setState(0x88a1, 0xc9e4, 0xe60, 0x2471, 0xb658, 0x907d, 0x1, 0x0);
        gbc.writeMem(0x88a1, { 0xcb, 0x46 });
        gbc.writeMem(0x907d, { 0x1f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc9e4, gbc.sp());
        EXPECT(0x88a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a1));
        EXPECT(0x46, gbc.readMem(0x88a2));
        EXPECT(0x1f, gbc.readMem(0x907d));
        // CB 46 0192
        gbc.setState(0x75d4, 0x3598, 0x9580, 0x1248, 0xef0, 0xacd5, 0x1, 0x0);
        gbc.writeMem(0x75d4, { 0xcb, 0x46 });
        gbc.writeMem(0xacd5, { 0x4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0x75d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xacd5));
        // CB 46 0193
        gbc.setState(0x529b, 0xcb7f, 0xe580, 0x6598, 0x3763, 0xf003, 0x0, 0x0);
        gbc.writeMem(0x529b, { 0xcb, 0x46 });
        gbc.writeMem(0xf003, { 0x4e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0x529d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf003));
        // CB 46 0194
        gbc.setState(0xb7a6, 0xf65c, 0xea60, 0xd1d5, 0x2ff4, 0xddf5, 0x1, 0x0);
        gbc.writeMem(0xb7a6, { 0xcb, 0x46 });
        gbc.writeMem(0xddf5, { 0x21 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf65c, gbc.sp());
        EXPECT(0xb7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a6));
        EXPECT(0x46, gbc.readMem(0xb7a7));
        EXPECT(0x21, gbc.readMem(0xddf5));
        // CB 46 0195
        gbc.setState(0x44af, 0x84cc, 0xd9b0, 0xfa22, 0xf093, 0xc90f, 0x0, 0x0);
        gbc.writeMem(0x44af, { 0xcb, 0x46 });
        gbc.writeMem(0xc90f, { 0xc2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x84cc, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc90f));
        // CB 46 0196
        gbc.setState(0x68cd, 0x2cbe, 0x5490, 0x664a, 0x2677, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0x46 });
        gbc.writeMem(0x8a46, { 0xa5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8a46));
        // CB 46 0197
        gbc.setState(0xe50e, 0x7334, 0xcc00, 0x22cd, 0xbbaa, 0x9409, 0x1, 0x0);
        gbc.writeMem(0x9409, { 0x99 });
        gbc.writeMem(0xe50e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0xe510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9409));
        EXPECT(0xcb, gbc.readMem(0xe50e));
        EXPECT(0x46, gbc.readMem(0xe50f));
        // CB 46 0198
        gbc.setState(0xb448, 0x1202, 0x6cc0, 0x66f0, 0x6b95, 0x12f, 0x0, 0x1);
        gbc.writeMem(0x12f, { 0x47 });
        gbc.writeMem(0xb448, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1202, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb448));
        EXPECT(0x46, gbc.readMem(0xb449));
        // CB 46 0199
        gbc.setState(0xb24f, 0x7aa8, 0x5730, 0x98a2, 0x1679, 0x8f64, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0xce });
        gbc.writeMem(0xb24f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8f64));
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0x46, gbc.readMem(0xb250));
        // CB 46 019A
        gbc.setState(0xd875, 0xee71, 0x260, 0xe2c7, 0x5ff7, 0xc679, 0x1, 0x0);
        gbc.writeMem(0xc679, { 0xd9 });
        gbc.writeMem(0xd875, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc679));
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0x46, gbc.readMem(0xd876));
        // CB 46 019B
        gbc.setState(0x5cd5, 0x9c55, 0xc4f0, 0x9e51, 0xfaeb, 0xa5d0, 0x0, 0x1);
        gbc.writeMem(0x5cd5, { 0xcb, 0x46 });
        gbc.writeMem(0xa5d0, { 0x4e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9c55, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5d0));
        // CB 46 019C
        gbc.setState(0xa131, 0x4a0f, 0xb6a0, 0xbbbf, 0x7bcf, 0xbc38, 0x0, 0x1);
        gbc.writeMem(0xa131, { 0xcb, 0x46 });
        gbc.writeMem(0xbc38, { 0x22 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4a0f, gbc.sp());
        EXPECT(0xa133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa131));
        EXPECT(0x46, gbc.readMem(0xa132));
        EXPECT(0x22, gbc.readMem(0xbc38));
        // CB 46 019D
        gbc.setState(0x5f65, 0x1979, 0x2380, 0xcde5, 0x2e94, 0x62e5, 0x0, 0x0);
        gbc.writeMem(0x5f65, { 0xcb, 0x46 });
        gbc.writeMem(0x62e5, { 0x77 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 019E
        gbc.setState(0x2e0b, 0xfe9c, 0xa190, 0xb307, 0x5f89, 0x6f8, 0x1, 0x1);
        gbc.writeMem(0x6f8, { 0x2c });
        gbc.writeMem(0x2e0b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 019F
        gbc.setState(0x98a9, 0x4fd9, 0xe3f0, 0x5712, 0xfc5, 0xf586, 0x0, 0x1);
        gbc.writeMem(0x98a9, { 0xcb, 0x46 });
        gbc.writeMem(0xf586, { 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4fd9, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a9));
        EXPECT(0x46, gbc.readMem(0x98aa));
        EXPECT(0x59, gbc.readMem(0xf586));
        // CB 46 01A0
        gbc.setState(0xb889, 0xf02f, 0x460, 0x2755, 0x7646, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0xb889, { 0xcb, 0x46 });
        gbc.writeMem(0xd6c1, { 0x82 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf02f, gbc.sp());
        EXPECT(0xb88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb889));
        EXPECT(0x46, gbc.readMem(0xb88a));
        EXPECT(0x82, gbc.readMem(0xd6c1));
        // CB 46 01A1
        gbc.setState(0x6cb3, 0x2091, 0xab60, 0x112, 0x1369, 0x569d, 0x1, 0x1);
        gbc.writeMem(0x569d, { 0xe7 });
        gbc.writeMem(0x6cb3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2091, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01A2
        gbc.setState(0x87f3, 0x904c, 0xa520, 0x9c1d, 0x17e7, 0x7617, 0x0, 0x1);
        gbc.writeMem(0x7617, { 0xc7 });
        gbc.writeMem(0x87f3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x904c, gbc.sp());
        EXPECT(0x87f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f3));
        EXPECT(0x46, gbc.readMem(0x87f4));
        // CB 46 01A3
        gbc.setState(0x23c1, 0xb64, 0xcb10, 0xe591, 0x5fe, 0x4431, 0x0, 0x0);
        gbc.writeMem(0x23c1, { 0xcb, 0x46 });
        gbc.writeMem(0x4431, { 0x99 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb64, gbc.sp());
        EXPECT(0x23c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01A5
        gbc.setState(0x60ec, 0x4eb8, 0xda90, 0x82ee, 0x30b2, 0x9b68, 0x0, 0x1);
        gbc.writeMem(0x60ec, { 0xcb, 0x46 });
        gbc.writeMem(0x9b68, { 0xe });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x60ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9b68));
        // CB 46 01A6
        gbc.setState(0x2672, 0x72ba, 0x8580, 0x1cdd, 0x7326, 0x2ff5, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xcb, 0x46 });
        gbc.writeMem(0x2ff5, { 0x36 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x72ba, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01A7
        gbc.setState(0xab5e, 0xcc8c, 0x86c0, 0x6076, 0xd63e, 0x76a3, 0x0, 0x1);
        gbc.writeMem(0x76a3, { 0xcd });
        gbc.writeMem(0xab5e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcc8c, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5e));
        EXPECT(0x46, gbc.readMem(0xab5f));
        // CB 46 01A8
        gbc.setState(0xeee2, 0x1869, 0x140, 0xad81, 0xfec5, 0x3782, 0x0, 0x1);
        gbc.writeMem(0x3782, { 0x88 });
        gbc.writeMem(0xeee2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1869, gbc.sp());
        EXPECT(0xeee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee2));
        EXPECT(0x46, gbc.readMem(0xeee3));
        // CB 46 01A9
        gbc.setState(0xab2b, 0x9524, 0x1e20, 0xe1fa, 0x3ab5, 0xc2c2, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0x46 });
        gbc.writeMem(0xc2c2, { 0x3d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0x46, gbc.readMem(0xab2c));
        EXPECT(0x3d, gbc.readMem(0xc2c2));
        // CB 46 01AA
        gbc.setState(0x7be4, 0x22a9, 0xdd40, 0x2cb4, 0xbf5, 0x9f75, 0x1, 0x1);
        gbc.writeMem(0x7be4, { 0xcb, 0x46 });
        gbc.writeMem(0x9f75, { 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0x7be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f75));
        // CB 46 01AB
        gbc.setState(0x3ce1, 0xec89, 0x7460, 0x2211, 0x5a1b, 0x1a27, 0x0, 0x1);
        gbc.writeMem(0x1a27, { 0x8f });
        gbc.writeMem(0x3ce1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0x3ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01AC
        gbc.setState(0x55df, 0x517f, 0x17f0, 0x90a4, 0xce08, 0x81b2, 0x1, 0x0);
        gbc.writeMem(0x55df, { 0xcb, 0x46 });
        gbc.writeMem(0x81b2, { 0x3b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x81b2));
        // CB 46 01AD
        gbc.setState(0x76ef, 0xcf8e, 0xeab0, 0xb071, 0xce62, 0x5c06, 0x1, 0x1);
        gbc.writeMem(0x5c06, { 0xe2 });
        gbc.writeMem(0x76ef, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcf8e, gbc.sp());
        EXPECT(0x76f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01AE
        gbc.setState(0x933d, 0x5c1d, 0xc230, 0xe709, 0x5d42, 0x1802, 0x0, 0x1);
        gbc.writeMem(0x1802, { 0x1c });
        gbc.writeMem(0x933d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5c1d, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933d));
        EXPECT(0x46, gbc.readMem(0x933e));
        // CB 46 01AF
        gbc.setState(0x8af2, 0x2135, 0xf830, 0xbb53, 0x3341, 0x85ca, 0x1, 0x0);
        gbc.writeMem(0x85ca, { 0x1c });
        gbc.writeMem(0x8af2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2135, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x85ca));
        EXPECT(0xcb, gbc.readMem(0x8af2));
        EXPECT(0x46, gbc.readMem(0x8af3));
        // CB 46 01B0
        gbc.setState(0x9bd5, 0xac51, 0x4da0, 0x9a10, 0xda3e, 0x4195, 0x0, 0x1);
        gbc.writeMem(0x4195, { 0xff });
        gbc.writeMem(0x9bd5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd5));
        EXPECT(0x46, gbc.readMem(0x9bd6));
        // CB 46 01B1
        gbc.setState(0xa1f3, 0xdd37, 0x22d0, 0x36d5, 0x79b7, 0x66ad, 0x0, 0x1);
        gbc.writeMem(0x66ad, { 0xd2 });
        gbc.writeMem(0xa1f3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdd37, gbc.sp());
        EXPECT(0xa1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f3));
        EXPECT(0x46, gbc.readMem(0xa1f4));
        // CB 46 01B2
        gbc.setState(0xaa10, 0xeeab, 0x8790, 0x245, 0x9558, 0xb67c, 0x1, 0x1);
        gbc.writeMem(0xaa10, { 0xcb, 0x46 });
        gbc.writeMem(0xb67c, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeeab, gbc.sp());
        EXPECT(0xaa12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa10));
        EXPECT(0x46, gbc.readMem(0xaa11));
        EXPECT(0xa7, gbc.readMem(0xb67c));
        // CB 46 01B3
        gbc.setState(0x68c7, 0x1559, 0xae90, 0x2eb9, 0xaa5b, 0x8fee, 0x1, 0x1);
        gbc.writeMem(0x68c7, { 0xcb, 0x46 });
        gbc.writeMem(0x8fee, { 0x71 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1559, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8fee));
        // CB 46 01B4
        gbc.setState(0x3e8f, 0xc305, 0x5210, 0x89a6, 0xb262, 0x2f08, 0x1, 0x0);
        gbc.writeMem(0x2f08, { 0x60 });
        gbc.writeMem(0x3e8f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc305, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01B5
        gbc.setState(0x6685, 0xa0be, 0xf8c0, 0x2fa5, 0x2f33, 0x111b, 0x1, 0x1);
        gbc.writeMem(0x111b, { 0x6e });
        gbc.writeMem(0x6685, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa0be, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01B6
        gbc.setState(0xbcf9, 0xfc70, 0x1d10, 0x6b1b, 0xddbc, 0xa10d, 0x1, 0x1);
        gbc.writeMem(0xa10d, { 0x3 });
        gbc.writeMem(0xbcf9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfc70, gbc.sp());
        EXPECT(0xbcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa10d));
        EXPECT(0xcb, gbc.readMem(0xbcf9));
        EXPECT(0x46, gbc.readMem(0xbcfa));
        // CB 46 01B7
        gbc.setState(0xd83b, 0xebc5, 0x4320, 0x46a, 0x9648, 0x435b, 0x0, 0x0);
        gbc.writeMem(0x435b, { 0x4b });
        gbc.writeMem(0xd83b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83b));
        EXPECT(0x46, gbc.readMem(0xd83c));
        // CB 46 01B8
        gbc.setState(0x767c, 0x764e, 0x3ea0, 0x4fd9, 0x94ab, 0x4f9f, 0x1, 0x0);
        gbc.writeMem(0x4f9f, { 0xab });
        gbc.writeMem(0x767c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01B9
        gbc.setState(0xa64c, 0x5fac, 0xcf70, 0x4509, 0xb629, 0xf286, 0x0, 0x0);
        gbc.writeMem(0xa64c, { 0xcb, 0x46 });
        gbc.writeMem(0xf286, { 0xd4 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5fac, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64c));
        EXPECT(0x46, gbc.readMem(0xa64d));
        EXPECT(0xd4, gbc.readMem(0xf286));
        // CB 46 01BA
        gbc.setState(0x7510, 0xa66d, 0x2240, 0xcb5d, 0xa81a, 0xf904, 0x1, 0x1);
        gbc.writeMem(0x7510, { 0xcb, 0x46 });
        gbc.writeMem(0xf904, { 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa66d, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xf904));
        // CB 46 01BB
        gbc.setState(0x6bc9, 0xc80b, 0x4980, 0x37d, 0x950e, 0x6eb, 0x1, 0x0);
        gbc.writeMem(0x6eb, { 0x21 });
        gbc.writeMem(0x6bc9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc80b, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01BC
        gbc.setState(0xd822, 0xd1dd, 0x1850, 0xdb81, 0x6632, 0x6c63, 0x0, 0x1);
        gbc.writeMem(0x6c63, { 0xf1 });
        gbc.writeMem(0xd822, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0xd824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd822));
        EXPECT(0x46, gbc.readMem(0xd823));
        // CB 46 01BD
        gbc.setState(0xbe74, 0x579b, 0x3830, 0x7bea, 0x2570, 0x287b, 0x1, 0x0);
        gbc.writeMem(0x287b, { 0x4b });
        gbc.writeMem(0xbe74, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0xbe76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe74));
        EXPECT(0x46, gbc.readMem(0xbe75));
        // CB 46 01BE
        gbc.setState(0xca79, 0xcb39, 0x9af0, 0x2264, 0xce5a, 0x212c, 0x1, 0x1);
        gbc.writeMem(0x212c, { 0x47 });
        gbc.writeMem(0xca79, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0xca7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca79));
        EXPECT(0x46, gbc.readMem(0xca7a));
        // CB 46 01BF
        gbc.setState(0x4a98, 0x8149, 0xc790, 0x3341, 0xda3d, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x451e, { 0x3f });
        gbc.writeMem(0x4a98, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x4a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01C2
        gbc.setState(0x7e40, 0x1909, 0x1340, 0xc3e0, 0x7cdc, 0x25a2, 0x1, 0x0);
        gbc.writeMem(0x25a2, { 0x96 });
        gbc.writeMem(0x7e40, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1909, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01C3
        gbc.setState(0xd9a1, 0x361b, 0xfa60, 0x260c, 0x417e, 0xc437, 0x1, 0x1);
        gbc.writeMem(0xc437, { 0xc3 });
        gbc.writeMem(0xd9a1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0xd9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc437));
        EXPECT(0xcb, gbc.readMem(0xd9a1));
        EXPECT(0x46, gbc.readMem(0xd9a2));
        // CB 46 01C4
        gbc.setState(0x706f, 0x7f0a, 0xa870, 0x4987, 0x52de, 0x5f73, 0x1, 0x0);
        gbc.writeMem(0x5f73, { 0x68 });
        gbc.writeMem(0x706f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0x7071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01C5
        gbc.setState(0x3092, 0xe29, 0x4f0, 0x2903, 0xe7ae, 0x9219, 0x0, 0x1);
        gbc.writeMem(0x3092, { 0xcb, 0x46 });
        gbc.writeMem(0x9219, { 0xf9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe29, gbc.sp());
        EXPECT(0x3094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9219));
        // CB 46 01C7
        gbc.setState(0xc035, 0xc8ed, 0x9b20, 0x2cef, 0x8817, 0x4028, 0x1, 0x0);
        gbc.writeMem(0x4028, { 0x11 });
        gbc.writeMem(0xc035, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc8ed, gbc.sp());
        EXPECT(0xc037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc035));
        EXPECT(0x46, gbc.readMem(0xc036));
        // CB 46 01C8
        gbc.setState(0x322b, 0x69d8, 0x6450, 0xb570, 0xb92, 0x2f97, 0x1, 0x0);
        gbc.writeMem(0x2f97, { 0x3 });
        gbc.writeMem(0x322b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x69d8, gbc.sp());
        EXPECT(0x322d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01C9
        gbc.setState(0x9c57, 0xef64, 0xcd80, 0x889c, 0xcb8b, 0x13f2, 0x0, 0x1);
        gbc.writeMem(0x13f2, { 0xa0 });
        gbc.writeMem(0x9c57, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c57));
        EXPECT(0x46, gbc.readMem(0x9c58));
        // CB 46 01CA
        gbc.setState(0x7bc0, 0x9141, 0xdc50, 0x4035, 0x8f79, 0xa32b, 0x1, 0x0);
        gbc.writeMem(0x7bc0, { 0xcb, 0x46 });
        gbc.writeMem(0xa32b, { 0x23 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x7bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa32b));
        // CB 46 01CB
        gbc.setState(0x675b, 0xab1f, 0xd6a0, 0x280, 0xa43e, 0x80ea, 0x0, 0x1);
        gbc.writeMem(0x675b, { 0xcb, 0x46 });
        gbc.writeMem(0x80ea, { 0x3b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x675d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x80ea));
        // CB 46 01CD
        gbc.setState(0x112f, 0x4647, 0x6690, 0x179f, 0xc001, 0xe390, 0x0, 0x0);
        gbc.writeMem(0x112f, { 0xcb, 0x46 });
        gbc.writeMem(0xe390, { 0x3b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4647, gbc.sp());
        EXPECT(0x1131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xe390));
        // CB 46 01CE
        gbc.setState(0x45a4, 0x9701, 0xf310, 0xf179, 0xe84d, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x45a4, { 0xcb, 0x46 });
        gbc.writeMem(0x7ee9, { 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9701, gbc.sp());
        EXPECT(0x45a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01D0
        gbc.setState(0x8402, 0xa08b, 0x990, 0x4b2c, 0x6085, 0xb9b1, 0x0, 0x0);
        gbc.writeMem(0x8402, { 0xcb, 0x46 });
        gbc.writeMem(0xb9b1, { 0xed });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x8404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8402));
        EXPECT(0x46, gbc.readMem(0x8403));
        EXPECT(0xed, gbc.readMem(0xb9b1));
        // CB 46 01D1
        gbc.setState(0x3f63, 0xee5, 0x4910, 0xb487, 0xf9c7, 0xac23, 0x1, 0x0);
        gbc.writeMem(0x3f63, { 0xcb, 0x46 });
        gbc.writeMem(0xac23, { 0xbd });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0x3f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xac23));
        // CB 46 01D2
        gbc.setState(0x8705, 0xa10f, 0x3ac0, 0xb3b2, 0x5bf5, 0x1e1f, 0x0, 0x0);
        gbc.writeMem(0x1e1f, { 0x3f });
        gbc.writeMem(0x8705, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa10f, gbc.sp());
        EXPECT(0x8707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8705));
        EXPECT(0x46, gbc.readMem(0x8706));
        // CB 46 01D3
        gbc.setState(0x52b9, 0x7ea8, 0x3ee0, 0x15a8, 0x1c05, 0x630c, 0x0, 0x0);
        gbc.writeMem(0x52b9, { 0xcb, 0x46 });
        gbc.writeMem(0x630c, { 0xf5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7ea8, gbc.sp());
        EXPECT(0x52bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01D4
        gbc.setState(0x3a3c, 0xb14d, 0xc90, 0x37b0, 0xb652, 0x3fae, 0x0, 0x0);
        gbc.writeMem(0x3a3c, { 0xcb, 0x46 });
        gbc.writeMem(0x3fae, { 0x64 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb14d, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01D5
        gbc.setState(0xb70b, 0x990d, 0x1230, 0x755e, 0xf76, 0x58b8, 0x0, 0x1);
        gbc.writeMem(0x58b8, { 0x54 });
        gbc.writeMem(0xb70b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x990d, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0x46, gbc.readMem(0xb70c));
        // CB 46 01D6
        gbc.setState(0x6d39, 0x8679, 0x55e0, 0x1bd0, 0x53d8, 0xb0be, 0x0, 0x0);
        gbc.writeMem(0x6d39, { 0xcb, 0x46 });
        gbc.writeMem(0xb0be, { 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb0be));
        // CB 46 01D7
        gbc.setState(0xd5d5, 0x636a, 0xcd80, 0xed1d, 0x15a6, 0x2a79, 0x0, 0x1);
        gbc.writeMem(0x2a79, { 0xd7 });
        gbc.writeMem(0xd5d5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x636a, gbc.sp());
        EXPECT(0xd5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d5));
        EXPECT(0x46, gbc.readMem(0xd5d6));
        // CB 46 01D8
        gbc.setState(0xa272, 0xd65a, 0x9870, 0x91a8, 0xc27e, 0x3f49, 0x1, 0x1);
        gbc.writeMem(0x3f49, { 0x40 });
        gbc.writeMem(0xa272, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd65a, gbc.sp());
        EXPECT(0xa274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa272));
        EXPECT(0x46, gbc.readMem(0xa273));
        // CB 46 01D9
        gbc.setState(0x9693, 0xada5, 0xa390, 0x37dd, 0x13bb, 0xb3e8, 0x1, 0x0);
        gbc.writeMem(0x9693, { 0xcb, 0x46 });
        gbc.writeMem(0xb3e8, { 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xada5, gbc.sp());
        EXPECT(0x9695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9693));
        EXPECT(0x46, gbc.readMem(0x9694));
        EXPECT(0x17, gbc.readMem(0xb3e8));
        // CB 46 01DA
        gbc.setState(0x6d5a, 0xca72, 0x37f0, 0x827, 0x2828, 0xe7fe, 0x0, 0x0);
        gbc.writeMem(0x6d5a, { 0xcb, 0x46 });
        gbc.writeMem(0xe7fe, { 0xd });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0x6d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xe7fe));
        // CB 46 01DB
        gbc.setState(0xe240, 0x40d0, 0x3870, 0x228a, 0xd49a, 0xb1c1, 0x0, 0x0);
        gbc.writeMem(0xb1c1, { 0x68 });
        gbc.writeMem(0xe240, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x40d0, gbc.sp());
        EXPECT(0xe242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb1c1));
        EXPECT(0xcb, gbc.readMem(0xe240));
        EXPECT(0x46, gbc.readMem(0xe241));
        // CB 46 01DC
        gbc.setState(0x2d6f, 0x40c3, 0x8950, 0xb981, 0xfaf, 0x1078, 0x0, 0x1);
        gbc.writeMem(0x1078, { 0x0 });
        gbc.writeMem(0x2d6f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x40c3, gbc.sp());
        EXPECT(0x2d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01DD
        gbc.setState(0x6cc4, 0xd540, 0x2ad0, 0xc611, 0x646d, 0xecf4, 0x0, 0x0);
        gbc.writeMem(0x6cc4, { 0xcb, 0x46 });
        gbc.writeMem(0xecf4, { 0x59 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd540, gbc.sp());
        EXPECT(0x6cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xecf4));
        // CB 46 01DE
        gbc.setState(0x7f7e, 0x553, 0x8f50, 0x174e, 0x690a, 0xf34f, 0x1, 0x0);
        gbc.writeMem(0x7f7e, { 0xcb, 0x46 });
        gbc.writeMem(0xf34f, { 0x3b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0x7f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xf34f));
        // CB 46 01DF
        gbc.setState(0xafb5, 0x3c95, 0xa950, 0x160b, 0xaa5e, 0x35bb, 0x1, 0x1);
        gbc.writeMem(0x35bb, { 0xfa });
        gbc.writeMem(0xafb5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb5));
        EXPECT(0x46, gbc.readMem(0xafb6));
        // CB 46 01E0
        gbc.setState(0x4f82, 0xd01b, 0x6470, 0x99b2, 0xa59f, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0x4f82, { 0xcb, 0x46 });
        gbc.writeMem(0xd3a5, { 0x15 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0x4f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd3a5));
        // CB 46 01E1
        gbc.setState(0xd008, 0x8e06, 0x2f0, 0xd55b, 0x124a, 0x62ee, 0x1, 0x0);
        gbc.writeMem(0x62ee, { 0xbc });
        gbc.writeMem(0xd008, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8e06, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x46, gbc.readMem(0xd009));
        // CB 46 01E2
        gbc.setState(0xcc72, 0xefbe, 0xc730, 0x5b1, 0xef27, 0x568b, 0x1, 0x1);
        gbc.writeMem(0x568b, { 0x91 });
        gbc.writeMem(0xcc72, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0x46, gbc.readMem(0xcc73));
        // CB 46 01E3
        gbc.setState(0x9f00, 0xf39b, 0x3210, 0x5e6f, 0xfe7e, 0xbedc, 0x1, 0x1);
        gbc.writeMem(0x9f00, { 0xcb, 0x46 });
        gbc.writeMem(0xbedc, { 0x3b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf39b, gbc.sp());
        EXPECT(0x9f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f00));
        EXPECT(0x46, gbc.readMem(0x9f01));
        EXPECT(0x3b, gbc.readMem(0xbedc));
        // CB 46 01E4
        gbc.setState(0xab47, 0x8ab7, 0xead0, 0xa8e1, 0x45b4, 0x2ce2, 0x1, 0x1);
        gbc.writeMem(0x2ce2, { 0x90 });
        gbc.writeMem(0xab47, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ab7, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab47));
        EXPECT(0x46, gbc.readMem(0xab48));
        // CB 46 01E5
        gbc.setState(0x1368, 0xc46d, 0x4a20, 0x11e8, 0x5d2e, 0x3daf, 0x1, 0x1);
        gbc.writeMem(0x1368, { 0xcb, 0x46 });
        gbc.writeMem(0x3daf, { 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0x136a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01E7
        gbc.setState(0x7ce, 0xa210, 0x4f50, 0x3c3e, 0x2fc4, 0x33a3, 0x0, 0x1);
        gbc.writeMem(0x7ce, { 0xcb, 0x46 });
        gbc.writeMem(0x33a3, { 0x44 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa210, gbc.sp());
        EXPECT(0x7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01E8
        gbc.setState(0x4257, 0x4f54, 0x5420, 0x51af, 0xc64f, 0x5741, 0x0, 0x1);
        gbc.writeMem(0x4257, { 0xcb, 0x46 });
        gbc.writeMem(0x5741, { 0x12 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x4259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01E9
        gbc.setState(0xed5d, 0x98b0, 0xe5a0, 0x8df4, 0x2c4b, 0x7cf6, 0x1, 0x0);
        gbc.writeMem(0x7cf6, { 0xce });
        gbc.writeMem(0xed5d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0xed5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5d));
        EXPECT(0x46, gbc.readMem(0xed5e));
        // CB 46 01EA
        gbc.setState(0x8c2a, 0x85c9, 0x12d0, 0x370b, 0xe655, 0xe3bb, 0x1, 0x0);
        gbc.writeMem(0x8c2a, { 0xcb, 0x46 });
        gbc.writeMem(0xe3bb, { 0xeb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0x8c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2a));
        EXPECT(0x46, gbc.readMem(0x8c2b));
        EXPECT(0xeb, gbc.readMem(0xe3bb));
        // CB 46 01EB
        gbc.setState(0xd2e6, 0xb0f1, 0x9450, 0xa9ef, 0x62be, 0x536d, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0xdd });
        gbc.writeMem(0xd2e6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e6));
        EXPECT(0x46, gbc.readMem(0xd2e7));
        // CB 46 01EC
        gbc.setState(0x4831, 0xe36f, 0xfe10, 0x2e5d, 0x7d6f, 0xa49, 0x0, 0x0);
        gbc.writeMem(0xa49, { 0x2c });
        gbc.writeMem(0x4831, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe36f, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01ED
        gbc.setState(0x94e1, 0x1667, 0xa00, 0x3bea, 0x800, 0xf81e, 0x0, 0x0);
        gbc.writeMem(0x94e1, { 0xcb, 0x46 });
        gbc.writeMem(0xf81e, { 0x51 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0x94e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e1));
        EXPECT(0x46, gbc.readMem(0x94e2));
        EXPECT(0x51, gbc.readMem(0xf81e));
        // CB 46 01EE
        gbc.setState(0x9697, 0xea90, 0xd2d0, 0xd35a, 0x6a84, 0x75a3, 0x0, 0x1);
        gbc.writeMem(0x75a3, { 0x53 });
        gbc.writeMem(0x9697, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xea90, gbc.sp());
        EXPECT(0x9699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9697));
        EXPECT(0x46, gbc.readMem(0x9698));
        // CB 46 01EF
        gbc.setState(0xa7c, 0x2ada, 0x8260, 0x3919, 0xca23, 0x3f75, 0x1, 0x1);
        gbc.writeMem(0xa7c, { 0xcb, 0x46 });
        gbc.writeMem(0x3f75, { 0xe });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2ada, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 01F1
        gbc.setState(0xd47b, 0x8c61, 0xf4d0, 0x6035, 0xf5c7, 0xaf4f, 0x1, 0x1);
        gbc.writeMem(0xaf4f, { 0x49 });
        gbc.writeMem(0xd47b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8c61, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xaf4f));
        EXPECT(0xcb, gbc.readMem(0xd47b));
        EXPECT(0x46, gbc.readMem(0xd47c));
        // CB 46 01F2
        gbc.setState(0x346d, 0x3e4d, 0xc810, 0xa5a2, 0x6122, 0x97db, 0x0, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x46 });
        gbc.writeMem(0x97db, { 0x3a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3e4d, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x97db));
        // CB 46 01F3
        gbc.setState(0xd229, 0xafa5, 0x7340, 0x1e3a, 0xbb39, 0x2c80, 0x1, 0x0);
        gbc.writeMem(0x2c80, { 0x6d });
        gbc.writeMem(0xd229, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xafa5, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd229));
        EXPECT(0x46, gbc.readMem(0xd22a));
        // CB 46 01F4
        gbc.setState(0xb422, 0xe8b3, 0x7090, 0xcb3, 0xf2f3, 0xdafe, 0x1, 0x0);
        gbc.writeMem(0xb422, { 0xcb, 0x46 });
        gbc.writeMem(0xdafe, { 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe8b3, gbc.sp());
        EXPECT(0xb424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb422));
        EXPECT(0x46, gbc.readMem(0xb423));
        EXPECT(0xf8, gbc.readMem(0xdafe));
        // CB 46 01F5
        gbc.setState(0x6bc, 0xa0b0, 0x4ef0, 0x2c26, 0x4ad3, 0xddb9, 0x1, 0x0);
        gbc.writeMem(0x6bc, { 0xcb, 0x46 });
        gbc.writeMem(0xddb9, { 0xd9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa0b0, gbc.sp());
        EXPECT(0x6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xddb9));
        // CB 46 01F6
        gbc.setState(0x4133, 0x6d03, 0x2bd0, 0xb053, 0xb145, 0x1d86, 0x1, 0x0);
        gbc.writeMem(0x1d86, { 0x8a });
        gbc.writeMem(0x4133, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6d03, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01F7
        gbc.setState(0xd42a, 0x4551, 0xcab0, 0xb5b6, 0xbab, 0x735b, 0x0, 0x1);
        gbc.writeMem(0x735b, { 0x58 });
        gbc.writeMem(0xd42a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4551, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42a));
        EXPECT(0x46, gbc.readMem(0xd42b));
        // CB 46 01F8
        gbc.setState(0x7a03, 0xb1b0, 0x7b30, 0xfba6, 0xadf0, 0x494b, 0x1, 0x0);
        gbc.writeMem(0x494b, { 0xf8 });
        gbc.writeMem(0x7a03, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb1b0, gbc.sp());
        EXPECT(0x7a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 01F9
        gbc.setState(0x709, 0xedae, 0xdd40, 0xf162, 0x360, 0xc8e6, 0x1, 0x1);
        gbc.writeMem(0x709, { 0xcb, 0x46 });
        gbc.writeMem(0xc8e6, { 0xab });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xedae, gbc.sp());
        EXPECT(0x70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc8e6));
        // CB 46 01FA
        gbc.setState(0x9f6d, 0x8665, 0x5990, 0xafb8, 0x683f, 0x9bde, 0x0, 0x1);
        gbc.writeMem(0x9bde, { 0xba });
        gbc.writeMem(0x9f6d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0x9f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9bde));
        EXPECT(0xcb, gbc.readMem(0x9f6d));
        EXPECT(0x46, gbc.readMem(0x9f6e));
        // CB 46 01FB
        gbc.setState(0x5f54, 0xe0b3, 0xea30, 0x1c5a, 0x3bb9, 0xa1eb, 0x1, 0x0);
        gbc.writeMem(0x5f54, { 0xcb, 0x46 });
        gbc.writeMem(0xa1eb, { 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa1eb));
        // CB 46 01FC
        gbc.setState(0xd866, 0xfe20, 0x71a0, 0xc0c7, 0x9ec5, 0xab21, 0x0, 0x0);
        gbc.writeMem(0xab21, { 0xf7 });
        gbc.writeMem(0xd866, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfe20, gbc.sp());
        EXPECT(0xd868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xab21));
        EXPECT(0xcb, gbc.readMem(0xd866));
        EXPECT(0x46, gbc.readMem(0xd867));
        // CB 46 01FD
        gbc.setState(0xcf7a, 0x282, 0x100, 0x3647, 0xb901, 0xb09e, 0x0, 0x0);
        gbc.writeMem(0xb09e, { 0x60 });
        gbc.writeMem(0xcf7a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb09e));
        EXPECT(0xcb, gbc.readMem(0xcf7a));
        EXPECT(0x46, gbc.readMem(0xcf7b));
        // CB 46 01FE
        gbc.setState(0x36d4, 0x1453, 0x7480, 0xe962, 0x90be, 0xab27, 0x1, 0x0);
        gbc.writeMem(0x36d4, { 0xcb, 0x46 });
        gbc.writeMem(0xab27, { 0xd8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1453, gbc.sp());
        EXPECT(0x36d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xab27));
        // CB 46 01FF
        gbc.setState(0x586f, 0xdf40, 0x24a0, 0x8255, 0x3526, 0x8de2, 0x1, 0x0);
        gbc.writeMem(0x586f, { 0xcb, 0x46 });
        gbc.writeMem(0x8de2, { 0x2a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdf40, gbc.sp());
        EXPECT(0x5871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x8de2));
        // CB 46 0202
        gbc.setState(0x6544, 0x72ab, 0x30e0, 0x80c1, 0x8504, 0xaf6a, 0x1, 0x0);
        gbc.writeMem(0x6544, { 0xcb, 0x46 });
        gbc.writeMem(0xaf6a, { 0x3f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x72ab, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaf6a));
        // CB 46 0203
        gbc.setState(0x2bf4, 0x8165, 0x4630, 0x927d, 0x1fd9, 0x127, 0x0, 0x1);
        gbc.writeMem(0x127, { 0x5c });
        gbc.writeMem(0x2bf4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8165, gbc.sp());
        EXPECT(0x2bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0204
        gbc.setState(0x2764, 0xc696, 0xa190, 0x3b7f, 0x764d, 0x21da, 0x0, 0x0);
        gbc.writeMem(0x21da, { 0x88 });
        gbc.writeMem(0x2764, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc696, gbc.sp());
        EXPECT(0x2766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0205
        gbc.setState(0x98d3, 0xaf5d, 0x21f0, 0x5a40, 0x56ed, 0x3af2, 0x0, 0x0);
        gbc.writeMem(0x3af2, { 0x11 });
        gbc.writeMem(0x98d3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d3));
        EXPECT(0x46, gbc.readMem(0x98d4));
        // CB 46 0206
        gbc.setState(0x54b2, 0x6b93, 0xa1f0, 0x1107, 0xe1c0, 0xebd2, 0x0, 0x1);
        gbc.writeMem(0x54b2, { 0xcb, 0x46 });
        gbc.writeMem(0xebd2, { 0x5b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xebd2));
        // CB 46 0207
        gbc.setState(0xdbeb, 0x9ae5, 0xb1c0, 0xa27b, 0xe39d, 0x20af, 0x1, 0x0);
        gbc.writeMem(0x20af, { 0xc });
        gbc.writeMem(0xdbeb, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ae5, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbeb));
        EXPECT(0x46, gbc.readMem(0xdbec));
        // CB 46 0208
        gbc.setState(0x6e8e, 0x2ba9, 0xa430, 0x90e1, 0x72f7, 0xb4d9, 0x1, 0x1);
        gbc.writeMem(0x6e8e, { 0xcb, 0x46 });
        gbc.writeMem(0xb4d9, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2ba9, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4d9));
        // CB 46 0209
        gbc.setState(0x1393, 0x84ac, 0x80a0, 0x7e4, 0xc2c6, 0xc912, 0x1, 0x1);
        gbc.writeMem(0x1393, { 0xcb, 0x46 });
        gbc.writeMem(0xc912, { 0xd7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x1395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc912));
        // CB 46 020B
        gbc.setState(0x13c2, 0x731a, 0x9f40, 0x18d5, 0xfd59, 0x6a08, 0x0, 0x0);
        gbc.writeMem(0x13c2, { 0xcb, 0x46 });
        gbc.writeMem(0x6a08, { 0xb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x731a, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 020C
        gbc.setState(0x504d, 0x5bbb, 0x4be0, 0x33da, 0x9121, 0xc2dc, 0x1, 0x0);
        gbc.writeMem(0x504d, { 0xcb, 0x46 });
        gbc.writeMem(0xc2dc, { 0x6a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0x504f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc2dc));
        // CB 46 020D
        gbc.setState(0xb178, 0x9602, 0xdc30, 0x66ae, 0x7f3f, 0x9298, 0x1, 0x1);
        gbc.writeMem(0x9298, { 0xa });
        gbc.writeMem(0xb178, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9298));
        EXPECT(0xcb, gbc.readMem(0xb178));
        EXPECT(0x46, gbc.readMem(0xb179));
        // CB 46 020E
        gbc.setState(0x60f3, 0x1991, 0xbdd0, 0x708d, 0x580b, 0x1092, 0x0, 0x0);
        gbc.writeMem(0x1092, { 0x84 });
        gbc.writeMem(0x60f3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1991, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 020F
        gbc.setState(0x3536, 0x52e0, 0xece0, 0xa000, 0x4bff, 0x729f, 0x1, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0x46 });
        gbc.writeMem(0x729f, { 0x98 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0211
        gbc.setState(0xda86, 0x27f4, 0xaed0, 0xea3a, 0xc19, 0x115d, 0x0, 0x1);
        gbc.writeMem(0x115d, { 0xdf });
        gbc.writeMem(0xda86, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x27f4, gbc.sp());
        EXPECT(0xda88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda86));
        EXPECT(0x46, gbc.readMem(0xda87));
        // CB 46 0212
        gbc.setState(0x9c55, 0x606f, 0xad40, 0xa15a, 0xc8c4, 0x60f2, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0xaf });
        gbc.writeMem(0x9c55, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c55));
        EXPECT(0x46, gbc.readMem(0x9c56));
        // CB 46 0213
        gbc.setState(0xbce, 0x8442, 0xd30, 0x98f3, 0x3dbc, 0x4dc0, 0x1, 0x1);
        gbc.writeMem(0xbce, { 0xcb, 0x46 });
        gbc.writeMem(0x4dc0, { 0x70 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0xbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0214
        gbc.setState(0xeb0b, 0x8f98, 0x7af0, 0x4128, 0x11ce, 0xf767, 0x1, 0x0);
        gbc.writeMem(0xeb0b, { 0xcb, 0x46 });
        gbc.writeMem(0xf767, { 0x3c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8f98, gbc.sp());
        EXPECT(0xeb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0b));
        EXPECT(0x46, gbc.readMem(0xeb0c));
        EXPECT(0x3c, gbc.readMem(0xf767));
        // CB 46 0215
        gbc.setState(0x5531, 0xe848, 0xb6f0, 0xb287, 0x8640, 0x5b61, 0x0, 0x0);
        gbc.writeMem(0x5531, { 0xcb, 0x46 });
        gbc.writeMem(0x5b61, { 0xeb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe848, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0216
        gbc.setState(0x96b7, 0x7f81, 0x77b0, 0x6159, 0x3be1, 0xfb3c, 0x0, 0x1);
        gbc.writeMem(0x96b7, { 0xcb, 0x46 });
        gbc.writeMem(0xfb3c, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7f81, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b7));
        EXPECT(0x46, gbc.readMem(0x96b8));
        EXPECT(0x15, gbc.readMem(0xfb3c));
        // CB 46 0217
        gbc.setState(0x6148, 0x650e, 0xf00, 0x4d26, 0xc1cd, 0x9ca4, 0x0, 0x0);
        gbc.writeMem(0x6148, { 0xcb, 0x46 });
        gbc.writeMem(0x9ca4, { 0x54 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0x614a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9ca4));
        // CB 46 0218
        gbc.setState(0x8afc, 0xbece, 0xc390, 0x43e2, 0xf2d5, 0xda04, 0x0, 0x0);
        gbc.writeMem(0x8afc, { 0xcb, 0x46 });
        gbc.writeMem(0xda04, { 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0x46, gbc.readMem(0x8afd));
        EXPECT(0xe2, gbc.readMem(0xda04));
        // CB 46 0219
        gbc.setState(0x198, 0x14dd, 0x9bb0, 0x56a9, 0xcb45, 0xb62f, 0x0, 0x0);
        gbc.writeMem(0x198, { 0xcb, 0x46 });
        gbc.writeMem(0xb62f, { 0x79 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x14dd, gbc.sp());
        EXPECT(0x19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb62f));
        // CB 46 021A
        gbc.setState(0x6660, 0xa8fa, 0xb650, 0xbe9f, 0xd557, 0x8950, 0x1, 0x1);
        gbc.writeMem(0x6660, { 0xcb, 0x46 });
        gbc.writeMem(0x8950, { 0x91 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8950));
        // CB 46 021B
        gbc.setState(0xc47e, 0x8ff0, 0x390, 0xaae7, 0x40d0, 0xe444, 0x1, 0x0);
        gbc.writeMem(0xc47e, { 0xcb, 0x46 });
        gbc.writeMem(0xe444, { 0x41 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8ff0, gbc.sp());
        EXPECT(0xc480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47e));
        EXPECT(0x46, gbc.readMem(0xc47f));
        EXPECT(0x41, gbc.readMem(0xe444));
        // CB 46 021C
        gbc.setState(0x4164, 0xc160, 0x4100, 0xf4bd, 0x501c, 0x8b5b, 0x0, 0x0);
        gbc.writeMem(0x4164, { 0xcb, 0x46 });
        gbc.writeMem(0x8b5b, { 0xd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc160, gbc.sp());
        EXPECT(0x4166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x8b5b));
        // CB 46 021D
        gbc.setState(0x2f99, 0x2b66, 0x9860, 0x4b0a, 0x3fb6, 0x723d, 0x1, 0x1);
        gbc.writeMem(0x2f99, { 0xcb, 0x46 });
        gbc.writeMem(0x723d, { 0xe6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2b66, gbc.sp());
        EXPECT(0x2f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 021E
        gbc.setState(0xb1e9, 0xae5, 0xad30, 0x59c4, 0x1b4c, 0x9efb, 0x1, 0x1);
        gbc.writeMem(0x9efb, { 0xea });
        gbc.writeMem(0xb1e9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xae5, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9efb));
        EXPECT(0xcb, gbc.readMem(0xb1e9));
        EXPECT(0x46, gbc.readMem(0xb1ea));
        // CB 46 021F
        gbc.setState(0xa67e, 0xe0c9, 0x68f0, 0x50b9, 0xd270, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x5b4b, { 0x78 });
        gbc.writeMem(0xa67e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe0c9, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67e));
        EXPECT(0x46, gbc.readMem(0xa67f));
        // CB 46 0220
        gbc.setState(0x1239, 0xc2d7, 0xf190, 0xa862, 0x65a2, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x1239, { 0xcb, 0x46 });
        gbc.writeMem(0xb77e, { 0x24 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc2d7, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xb77e));
        // CB 46 0221
        gbc.setState(0xed38, 0xce2, 0x21d0, 0x599a, 0x8f35, 0xde8e, 0x1, 0x0);
        gbc.writeMem(0xde8e, { 0x99 });
        gbc.writeMem(0xed38, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xce2, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xde8e));
        EXPECT(0xcb, gbc.readMem(0xed38));
        EXPECT(0x46, gbc.readMem(0xed39));
        // CB 46 0223
        gbc.setState(0xb510, 0x4fc4, 0x990, 0x9e71, 0x8315, 0x4008, 0x0, 0x1);
        gbc.writeMem(0x4008, { 0xe3 });
        gbc.writeMem(0xb510, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0xb512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb510));
        EXPECT(0x46, gbc.readMem(0xb511));
        // CB 46 0224
        gbc.setState(0x2efd, 0x344c, 0x9340, 0x341e, 0xf753, 0xcc3d, 0x0, 0x1);
        gbc.writeMem(0x2efd, { 0xcb, 0x46 });
        gbc.writeMem(0xcc3d, { 0x6f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x344c, gbc.sp());
        EXPECT(0x2eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xcc3d));
        // CB 46 0225
        gbc.setState(0xcb3c, 0x7749, 0x52c0, 0xae96, 0x5317, 0xc698, 0x1, 0x1);
        gbc.writeMem(0xc698, { 0x8d });
        gbc.writeMem(0xcb3c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0xcb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc698));
        EXPECT(0xcb, gbc.readMem(0xcb3c));
        EXPECT(0x46, gbc.readMem(0xcb3d));
        // CB 46 0226
        gbc.setState(0xe1f6, 0xba36, 0xfa50, 0x58c9, 0x38dd, 0x9907, 0x0, 0x0);
        gbc.writeMem(0x9907, { 0x28 });
        gbc.writeMem(0xe1f6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0xe1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9907));
        EXPECT(0xcb, gbc.readMem(0xe1f6));
        EXPECT(0x46, gbc.readMem(0xe1f7));
        // CB 46 0227
        gbc.setState(0x770d, 0xf0be, 0xeb30, 0x62fe, 0xccac, 0x2bd9, 0x0, 0x0);
        gbc.writeMem(0x2bd9, { 0x16 });
        gbc.writeMem(0x770d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf0be, gbc.sp());
        EXPECT(0x770f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0228
        gbc.setState(0xe4db, 0xb72f, 0x740, 0xc785, 0x513a, 0xdc0d, 0x0, 0x1);
        gbc.writeMem(0xdc0d, { 0xbb });
        gbc.writeMem(0xe4db, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0xe4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdc0d));
        EXPECT(0xcb, gbc.readMem(0xe4db));
        EXPECT(0x46, gbc.readMem(0xe4dc));
        // CB 46 0229
        gbc.setState(0x21bf, 0x7616, 0xb5b0, 0xa1b9, 0xf5d5, 0xbe9d, 0x0, 0x1);
        gbc.writeMem(0x21bf, { 0xcb, 0x46 });
        gbc.writeMem(0xbe9d, { 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0x21c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbe9d));
        // CB 46 022A
        gbc.setState(0xbbc2, 0xbd5e, 0xee20, 0xac49, 0x435d, 0xf09b, 0x0, 0x1);
        gbc.writeMem(0xbbc2, { 0xcb, 0x46 });
        gbc.writeMem(0xf09b, { 0xf1 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbd5e, gbc.sp());
        EXPECT(0xbbc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc2));
        EXPECT(0x46, gbc.readMem(0xbbc3));
        EXPECT(0xf1, gbc.readMem(0xf09b));
        // CB 46 022B
        gbc.setState(0x4ac0, 0x257b, 0x260, 0xd17d, 0x98a0, 0x55de, 0x1, 0x0);
        gbc.writeMem(0x4ac0, { 0xcb, 0x46 });
        gbc.writeMem(0x55de, { 0xbd });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x257b, gbc.sp());
        EXPECT(0x4ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 022C
        gbc.setState(0x89c6, 0x80e9, 0x7d00, 0xf4c0, 0x96c1, 0xd059, 0x0, 0x0);
        gbc.writeMem(0x89c6, { 0xcb, 0x46 });
        gbc.writeMem(0xd059, { 0x77 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x80e9, gbc.sp());
        EXPECT(0x89c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c6));
        EXPECT(0x46, gbc.readMem(0x89c7));
        EXPECT(0x77, gbc.readMem(0xd059));
        // CB 46 022D
        gbc.setState(0x59ff, 0x5071, 0xf740, 0xb793, 0x53, 0x80e3, 0x0, 0x0);
        gbc.writeMem(0x59ff, { 0xcb, 0x46 });
        gbc.writeMem(0x80e3, { 0xb3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5071, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x80e3));
        // CB 46 022E
        gbc.setState(0xe586, 0xa6d9, 0x7af0, 0x472f, 0x7faa, 0x3609, 0x1, 0x0);
        gbc.writeMem(0x3609, { 0xb1 });
        gbc.writeMem(0xe586, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa6d9, gbc.sp());
        EXPECT(0xe588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe586));
        EXPECT(0x46, gbc.readMem(0xe587));
        // CB 46 022F
        gbc.setState(0xde7e, 0x25dc, 0x41c0, 0x166e, 0x76fb, 0x7264, 0x0, 0x0);
        gbc.writeMem(0x7264, { 0x33 });
        gbc.writeMem(0xde7e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0x46, gbc.readMem(0xde7f));
        // CB 46 0230
        gbc.setState(0xeaaa, 0x150, 0x8f50, 0x725d, 0xb3d0, 0x9e24, 0x1, 0x0);
        gbc.writeMem(0x9e24, { 0xf3 });
        gbc.writeMem(0xeaaa, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x150, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x9e24));
        EXPECT(0xcb, gbc.readMem(0xeaaa));
        EXPECT(0x46, gbc.readMem(0xeaab));
        // CB 46 0231
        gbc.setState(0xed44, 0x9003, 0xa7a0, 0x9e8e, 0xf901, 0xb3a, 0x1, 0x0);
        gbc.writeMem(0xb3a, { 0x12 });
        gbc.writeMem(0xed44, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9003, gbc.sp());
        EXPECT(0xed46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed44));
        EXPECT(0x46, gbc.readMem(0xed45));
        // CB 46 0232
        gbc.setState(0xa38e, 0xa7df, 0x6750, 0x9707, 0xaa9d, 0xb762, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x46 });
        gbc.writeMem(0xb762, { 0x6a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x46, gbc.readMem(0xa38f));
        EXPECT(0x6a, gbc.readMem(0xb762));
        // CB 46 0233
        gbc.setState(0x9a87, 0x322c, 0x1210, 0x703d, 0xcf88, 0xcca5, 0x0, 0x1);
        gbc.writeMem(0x9a87, { 0xcb, 0x46 });
        gbc.writeMem(0xcca5, { 0xbd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x322c, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a87));
        EXPECT(0x46, gbc.readMem(0x9a88));
        EXPECT(0xbd, gbc.readMem(0xcca5));
        // CB 46 0234
        gbc.setState(0x2b9f, 0x3fd, 0x8750, 0xe6d9, 0xc200, 0xcb4e, 0x0, 0x0);
        gbc.writeMem(0x2b9f, { 0xcb, 0x46 });
        gbc.writeMem(0xcb4e, { 0x43 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3fd, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcb4e));
        // CB 46 0235
        gbc.setState(0x79c0, 0x2fbb, 0xcd80, 0x2dd6, 0x64fa, 0x3854, 0x0, 0x1);
        gbc.writeMem(0x3854, { 0x62 });
        gbc.writeMem(0x79c0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2fbb, gbc.sp());
        EXPECT(0x79c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0236
        gbc.setState(0x8a24, 0xf7bd, 0x10, 0xd4ca, 0xb17b, 0xcb7b, 0x0, 0x1);
        gbc.writeMem(0x8a24, { 0xcb, 0x46 });
        gbc.writeMem(0xcb7b, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0x8a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a24));
        EXPECT(0x46, gbc.readMem(0x8a25));
        EXPECT(0x49, gbc.readMem(0xcb7b));
        // CB 46 0237
        gbc.setState(0xbac, 0xeb84, 0xd1a0, 0xe888, 0xf80, 0x8e5c, 0x1, 0x0);
        gbc.writeMem(0xbac, { 0xcb, 0x46 });
        gbc.writeMem(0x8e5c, { 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeb84, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e5c));
        // CB 46 0238
        gbc.setState(0xccc, 0xd360, 0xeb20, 0xbdf2, 0xb75f, 0x34ad, 0x1, 0x0);
        gbc.writeMem(0xccc, { 0xcb, 0x46 });
        gbc.writeMem(0x34ad, { 0x36 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd360, gbc.sp());
        EXPECT(0xcce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0239
        gbc.setState(0xe26, 0x2c0, 0xe1a0, 0xe323, 0xed45, 0x8cdd, 0x0, 0x1);
        gbc.writeMem(0xe26, { 0xcb, 0x46 });
        gbc.writeMem(0x8cdd, { 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2c0, gbc.sp());
        EXPECT(0xe28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8cdd));
        // CB 46 023A
        gbc.setState(0xebcc, 0x5f61, 0x8170, 0x63d8, 0x86cd, 0xe23e, 0x1, 0x0);
        gbc.writeMem(0xe23e, { 0x4c });
        gbc.writeMem(0xebcc, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5f61, gbc.sp());
        EXPECT(0xebce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe23e));
        EXPECT(0xcb, gbc.readMem(0xebcc));
        EXPECT(0x46, gbc.readMem(0xebcd));
        // CB 46 023B
        gbc.setState(0x9929, 0xedbb, 0x3520, 0xa82e, 0xde94, 0xc595, 0x0, 0x0);
        gbc.writeMem(0x9929, { 0xcb, 0x46 });
        gbc.writeMem(0xc595, { 0xf4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9929));
        EXPECT(0x46, gbc.readMem(0x992a));
        EXPECT(0xf4, gbc.readMem(0xc595));
        // CB 46 023C
        gbc.setState(0xe3df, 0x1660, 0x8960, 0xbf2b, 0x956, 0x43ae, 0x0, 0x1);
        gbc.writeMem(0x43ae, { 0xf9 });
        gbc.writeMem(0xe3df, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3df));
        EXPECT(0x46, gbc.readMem(0xe3e0));
        // CB 46 023D
        gbc.setState(0x8c5b, 0xf26e, 0x4640, 0x1847, 0xacd1, 0x5cc4, 0x0, 0x1);
        gbc.writeMem(0x5cc4, { 0x72 });
        gbc.writeMem(0x8c5b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf26e, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5b));
        EXPECT(0x46, gbc.readMem(0x8c5c));
        // CB 46 023E
        gbc.setState(0x678d, 0x90dc, 0x20c0, 0x3372, 0xef25, 0xbf04, 0x1, 0x0);
        gbc.writeMem(0x678d, { 0xcb, 0x46 });
        gbc.writeMem(0xbf04, { 0x82 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x90dc, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf04));
        // CB 46 023F
        gbc.setState(0x41d0, 0x5ce8, 0xb040, 0x7a2b, 0x3bae, 0x2c1d, 0x0, 0x0);
        gbc.writeMem(0x2c1d, { 0x11 });
        gbc.writeMem(0x41d0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5ce8, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0240
        gbc.setState(0x2f7d, 0x8cc3, 0x650, 0xb89d, 0xda2c, 0xe0d6, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0xcb, 0x46 });
        gbc.writeMem(0xe0d6, { 0xa5 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe0d6));
        // CB 46 0241
        gbc.setState(0x4d84, 0xa94e, 0xacc0, 0xa2e0, 0x7f0b, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0x1ebf, { 0xf7 });
        gbc.writeMem(0x4d84, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa94e, gbc.sp());
        EXPECT(0x4d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0242
        gbc.setState(0x479c, 0x1f64, 0x82e0, 0x4d5f, 0xc090, 0x7e1a, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0xcb, 0x46 });
        gbc.writeMem(0x7e1a, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0x479e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0243
        gbc.setState(0x7a91, 0xee7d, 0xb850, 0xf973, 0x461, 0x26d, 0x0, 0x0);
        gbc.writeMem(0x26d, { 0xa4 });
        gbc.writeMem(0x7a91, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0x7a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0244
        gbc.setState(0x4f6f, 0xf3d6, 0xc7b0, 0x31f, 0x90ce, 0xd6f5, 0x1, 0x0);
        gbc.writeMem(0x4f6f, { 0xcb, 0x46 });
        gbc.writeMem(0xd6f5, { 0x6a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x4f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd6f5));
        // CB 46 0245
        gbc.setState(0x4076, 0xc4ae, 0xbd30, 0x12a2, 0x338c, 0x50b5, 0x0, 0x0);
        gbc.writeMem(0x4076, { 0xcb, 0x46 });
        gbc.writeMem(0x50b5, { 0x86 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc4ae, gbc.sp());
        EXPECT(0x4078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0247
        gbc.setState(0xcd3f, 0x9add, 0x7170, 0xa6ba, 0x1041, 0x4a62, 0x1, 0x1);
        gbc.writeMem(0x4a62, { 0x17 });
        gbc.writeMem(0xcd3f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3f));
        EXPECT(0x46, gbc.readMem(0xcd40));
        // CB 46 0248
        gbc.setState(0x20a2, 0x20d8, 0x88e0, 0x76a1, 0x6616, 0xd564, 0x0, 0x1);
        gbc.writeMem(0x20a2, { 0xcb, 0x46 });
        gbc.writeMem(0xd564, { 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd564));
        // CB 46 0249
        gbc.setState(0xdb3, 0xa1b9, 0x5440, 0x8c8a, 0x7272, 0xda78, 0x0, 0x1);
        gbc.writeMem(0xdb3, { 0xcb, 0x46 });
        gbc.writeMem(0xda78, { 0xeb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa1b9, gbc.sp());
        EXPECT(0xdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xda78));
        // CB 46 024A
        gbc.setState(0x4981, 0x1574, 0x46b0, 0xf3a9, 0x4736, 0x6526, 0x0, 0x1);
        gbc.writeMem(0x4981, { 0xcb, 0x46 });
        gbc.writeMem(0x6526, { 0xda });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0x4983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 024B
        gbc.setState(0x9cc6, 0xac37, 0x7740, 0x53e9, 0xf8e3, 0x1c11, 0x1, 0x0);
        gbc.writeMem(0x1c11, { 0x35 });
        gbc.writeMem(0x9cc6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0x9cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc6));
        EXPECT(0x46, gbc.readMem(0x9cc7));
        // CB 46 024C
        gbc.setState(0x3b75, 0x96e1, 0xe170, 0x9b1, 0x9771, 0xb640, 0x0, 0x1);
        gbc.writeMem(0x3b75, { 0xcb, 0x46 });
        gbc.writeMem(0xb640, { 0xc6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x96e1, gbc.sp());
        EXPECT(0x3b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb640));
        // CB 46 024D
        gbc.setState(0xe256, 0x1eea, 0xa900, 0x8925, 0xb60b, 0x1b07, 0x1, 0x0);
        gbc.writeMem(0x1b07, { 0xa });
        gbc.writeMem(0xe256, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe256));
        EXPECT(0x46, gbc.readMem(0xe257));
        // CB 46 024F
        gbc.setState(0x20e1, 0x7978, 0x9200, 0x50, 0x8d0e, 0xa3e0, 0x0, 0x0);
        gbc.writeMem(0x20e1, { 0xcb, 0x46 });
        gbc.writeMem(0xa3e0, { 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7978, gbc.sp());
        EXPECT(0x20e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa3e0));
        // CB 46 0250
        gbc.setState(0x8ab5, 0xb480, 0x100, 0xd4ed, 0x150, 0xf635, 0x0, 0x0);
        gbc.writeMem(0x8ab5, { 0xcb, 0x46 });
        gbc.writeMem(0xf635, { 0xec });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab5));
        EXPECT(0x46, gbc.readMem(0x8ab6));
        EXPECT(0xec, gbc.readMem(0xf635));
        // CB 46 0251
        gbc.setState(0x821, 0xa96b, 0xba20, 0x103f, 0xf382, 0x8251, 0x1, 0x0);
        gbc.writeMem(0x821, { 0xcb, 0x46 });
        gbc.writeMem(0x8251, { 0xa9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa96b, gbc.sp());
        EXPECT(0x823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8251));
        // CB 46 0252
        gbc.setState(0x7827, 0x3551, 0x5060, 0xd049, 0xe1d7, 0x5c0c, 0x1, 0x1);
        gbc.writeMem(0x5c0c, { 0xcb });
        gbc.writeMem(0x7827, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3551, gbc.sp());
        EXPECT(0x7829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0253
        gbc.setState(0xb868, 0xfc06, 0x72c0, 0x524a, 0x5486, 0xa56b, 0x1, 0x1);
        gbc.writeMem(0xa56b, { 0x39 });
        gbc.writeMem(0xb868, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfc06, gbc.sp());
        EXPECT(0xb86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa56b));
        EXPECT(0xcb, gbc.readMem(0xb868));
        EXPECT(0x46, gbc.readMem(0xb869));
        // CB 46 0254
        gbc.setState(0xc42f, 0xc408, 0x3ec0, 0x8666, 0xbf53, 0xf7a3, 0x0, 0x0);
        gbc.writeMem(0xc42f, { 0xcb, 0x46 });
        gbc.writeMem(0xf7a3, { 0x9a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc408, gbc.sp());
        EXPECT(0xc431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42f));
        EXPECT(0x46, gbc.readMem(0xc430));
        EXPECT(0x9a, gbc.readMem(0xf7a3));
        // CB 46 0255
        gbc.setState(0x11cd, 0x5415, 0xd9c0, 0xa5d9, 0xa52b, 0x9c67, 0x1, 0x1);
        gbc.writeMem(0x11cd, { 0xcb, 0x46 });
        gbc.writeMem(0x9c67, { 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5415, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9c67));
        // CB 46 0256
        gbc.setState(0xb819, 0xbe28, 0xa1f0, 0xbeed, 0xfc0a, 0xa8be, 0x1, 0x1);
        gbc.writeMem(0xa8be, { 0x39 });
        gbc.writeMem(0xb819, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0xb81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa8be));
        EXPECT(0xcb, gbc.readMem(0xb819));
        EXPECT(0x46, gbc.readMem(0xb81a));
        // CB 46 0257
        gbc.setState(0x1921, 0xe50f, 0x16f0, 0xee8d, 0x9e3a, 0xa970, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0x46 });
        gbc.writeMem(0xa970, { 0x26 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa970));
        // CB 46 0258
        gbc.setState(0x59fa, 0xb6eb, 0x1250, 0x93bc, 0x12c, 0x9fe6, 0x1, 0x0);
        gbc.writeMem(0x59fa, { 0xcb, 0x46 });
        gbc.writeMem(0x9fe6, { 0x74 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb6eb, gbc.sp());
        EXPECT(0x59fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9fe6));
        // CB 46 0259
        gbc.setState(0x47a2, 0x1b2f, 0xb20, 0x46d8, 0x18c7, 0x800f, 0x1, 0x1);
        gbc.writeMem(0x47a2, { 0xcb, 0x46 });
        gbc.writeMem(0x800f, { 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1b2f, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x800f));
        // CB 46 025A
        gbc.setState(0x1fe7, 0xb0a0, 0x6340, 0xb134, 0x1420, 0x94f7, 0x1, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0x46 });
        gbc.writeMem(0x94f7, { 0xd1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb0a0, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x94f7));
        // CB 46 025B
        gbc.setState(0xe151, 0x2bc4, 0x7680, 0xe4a6, 0xfa9d, 0xcb80, 0x1, 0x0);
        gbc.writeMem(0xcb80, { 0x30 });
        gbc.writeMem(0xe151, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2bc4, gbc.sp());
        EXPECT(0xe153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xcb80));
        EXPECT(0xcb, gbc.readMem(0xe151));
        EXPECT(0x46, gbc.readMem(0xe152));
        // CB 46 025C
        gbc.setState(0xc25f, 0x8e3d, 0x9c10, 0xcc5, 0x43ee, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xb687, { 0x34 });
        gbc.writeMem(0xc25f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8e3d, gbc.sp());
        EXPECT(0xc261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb687));
        EXPECT(0xcb, gbc.readMem(0xc25f));
        EXPECT(0x46, gbc.readMem(0xc260));
        // CB 46 025D
        gbc.setState(0x5fd1, 0xe203, 0x930, 0xa1ef, 0x895a, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0xcb, 0x46 });
        gbc.writeMem(0xe65f, { 0x39 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe65f));
        // CB 46 025E
        gbc.setState(0xb99f, 0x211b, 0x7390, 0x9c99, 0xe021, 0xba1d, 0x1, 0x1);
        gbc.writeMem(0xb99f, { 0xcb, 0x46 });
        gbc.writeMem(0xba1d, { 0x93 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0xb9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99f));
        EXPECT(0x46, gbc.readMem(0xb9a0));
        EXPECT(0x93, gbc.readMem(0xba1d));
        // CB 46 025F
        gbc.setState(0xb220, 0x3e93, 0xccf0, 0xef6d, 0x4dfc, 0xd614, 0x1, 0x0);
        gbc.writeMem(0xb220, { 0xcb, 0x46 });
        gbc.writeMem(0xd614, { 0x7e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0xb222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb220));
        EXPECT(0x46, gbc.readMem(0xb221));
        EXPECT(0x7e, gbc.readMem(0xd614));
        // CB 46 0260
        gbc.setState(0xa74d, 0x11d8, 0xf40, 0x65a2, 0xf1a4, 0xb31e, 0x0, 0x0);
        gbc.writeMem(0xa74d, { 0xcb, 0x46 });
        gbc.writeMem(0xb31e, { 0xda });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x11d8, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0x46, gbc.readMem(0xa74e));
        EXPECT(0xda, gbc.readMem(0xb31e));
        // CB 46 0261
        gbc.setState(0x41f1, 0x4ecb, 0x9460, 0xb48e, 0xa450, 0x1087, 0x0, 0x0);
        gbc.writeMem(0x1087, { 0xa });
        gbc.writeMem(0x41f1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4ecb, gbc.sp());
        EXPECT(0x41f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0262
        gbc.setState(0xa80e, 0xd9dd, 0xa6d0, 0xc12e, 0xe656, 0xfa52, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0xcb, 0x46 });
        gbc.writeMem(0xfa52, { 0x3e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9dd, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80e));
        EXPECT(0x46, gbc.readMem(0xa80f));
        EXPECT(0x3e, gbc.readMem(0xfa52));
        // CB 46 0263
        gbc.setState(0x2c50, 0x929e, 0x15e0, 0x5e9a, 0x850a, 0x5b5f, 0x1, 0x0);
        gbc.writeMem(0x2c50, { 0xcb, 0x46 });
        gbc.writeMem(0x5b5f, { 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x929e, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0266
        gbc.setState(0x17ab, 0xbc7b, 0x1970, 0xbbe4, 0xf06c, 0x5f22, 0x0, 0x1);
        gbc.writeMem(0x17ab, { 0xcb, 0x46 });
        gbc.writeMem(0x5f22, { 0xb1 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbc7b, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0267
        gbc.setState(0x99f0, 0xe1a2, 0x1000, 0x1a1f, 0x85d9, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x59ce, { 0xc9 });
        gbc.writeMem(0x99f0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0x99f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f0));
        EXPECT(0x46, gbc.readMem(0x99f1));
        // CB 46 0268
        gbc.setState(0x419a, 0xa2ac, 0x23f0, 0x1427, 0xe3b6, 0x362b, 0x1, 0x1);
        gbc.writeMem(0x362b, { 0x8b });
        gbc.writeMem(0x419a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa2ac, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0269
        gbc.setState(0xb2f3, 0x6cc9, 0x81c0, 0x867a, 0xa768, 0xc2de, 0x0, 0x1);
        gbc.writeMem(0xb2f3, { 0xcb, 0x46 });
        gbc.writeMem(0xc2de, { 0x92 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0xb2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f3));
        EXPECT(0x46, gbc.readMem(0xb2f4));
        EXPECT(0x92, gbc.readMem(0xc2de));
        // CB 46 026A
        gbc.setState(0x3cb1, 0x19ac, 0x7c70, 0x98aa, 0x1cb2, 0xb58f, 0x0, 0x0);
        gbc.writeMem(0x3cb1, { 0xcb, 0x46 });
        gbc.writeMem(0xb58f, { 0x56 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x19ac, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb58f));
        // CB 46 026B
        gbc.setState(0x125c, 0x39a6, 0xea30, 0x84fd, 0x791d, 0x4800, 0x1, 0x1);
        gbc.writeMem(0x125c, { 0xcb, 0x46 });
        gbc.writeMem(0x4800, { 0x78 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39a6, gbc.sp());
        EXPECT(0x125e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 026D
        gbc.setState(0xb999, 0xb2a4, 0x2840, 0x7710, 0x595c, 0x9eac, 0x1, 0x1);
        gbc.writeMem(0x9eac, { 0x71 });
        gbc.writeMem(0xb999, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb2a4, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9eac));
        EXPECT(0xcb, gbc.readMem(0xb999));
        EXPECT(0x46, gbc.readMem(0xb99a));
        // CB 46 026E
        gbc.setState(0x9e0, 0xf9ff, 0x4780, 0x253c, 0x8640, 0x8ecc, 0x0, 0x1);
        gbc.writeMem(0x9e0, { 0xcb, 0x46 });
        gbc.writeMem(0x8ecc, { 0x3d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x8ecc));
        // CB 46 026F
        gbc.setState(0xb768, 0x628d, 0xade0, 0x4999, 0xf88c, 0xa114, 0x0, 0x1);
        gbc.writeMem(0xa114, { 0x82 });
        gbc.writeMem(0xb768, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x628d, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa114));
        EXPECT(0xcb, gbc.readMem(0xb768));
        EXPECT(0x46, gbc.readMem(0xb769));
        // CB 46 0271
        gbc.setState(0x28a, 0xa6f, 0x9f0, 0x308c, 0x6080, 0xf879, 0x1, 0x0);
        gbc.writeMem(0x28a, { 0xcb, 0x46 });
        gbc.writeMem(0xf879, { 0xe7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf879));
        // CB 46 0272
        gbc.setState(0x6821, 0xfa7a, 0x6ea0, 0x14ba, 0x9cb7, 0xa59, 0x0, 0x0);
        gbc.writeMem(0xa59, { 0x31 });
        gbc.writeMem(0x6821, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0273
        gbc.setState(0x9df5, 0x897f, 0x1df0, 0x574b, 0x2c4, 0x4b51, 0x0, 0x1);
        gbc.writeMem(0x4b51, { 0x87 });
        gbc.writeMem(0x9df5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x897f, gbc.sp());
        EXPECT(0x9df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df5));
        EXPECT(0x46, gbc.readMem(0x9df6));
        // CB 46 0274
        gbc.setState(0x4ad4, 0x1977, 0x85b0, 0xe026, 0x77e9, 0xafb5, 0x1, 0x0);
        gbc.writeMem(0x4ad4, { 0xcb, 0x46 });
        gbc.writeMem(0xafb5, { 0xb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1977, gbc.sp());
        EXPECT(0x4ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xafb5));
        // CB 46 0275
        gbc.setState(0xf02, 0xedb1, 0x9770, 0x3a08, 0x18f8, 0xa7c4, 0x1, 0x1);
        gbc.writeMem(0xf02, { 0xcb, 0x46 });
        gbc.writeMem(0xa7c4, { 0x7e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xedb1, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa7c4));
        // CB 46 0276
        gbc.setState(0x7e7f, 0x106b, 0x9c30, 0xacc0, 0x722d, 0x5c8d, 0x0, 0x1);
        gbc.writeMem(0x5c8d, { 0x6b });
        gbc.writeMem(0x7e7f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x106b, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0277
        gbc.setState(0x72dd, 0xed66, 0x6200, 0xaa0a, 0x36f0, 0xe7b1, 0x1, 0x0);
        gbc.writeMem(0x72dd, { 0xcb, 0x46 });
        gbc.writeMem(0xe7b1, { 0x19 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed66, gbc.sp());
        EXPECT(0x72df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe7b1));
        // CB 46 0278
        gbc.setState(0x66f0, 0x155b, 0xa2c0, 0x9a97, 0x708e, 0xc663, 0x0, 0x1);
        gbc.writeMem(0x66f0, { 0xcb, 0x46 });
        gbc.writeMem(0xc663, { 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0x66f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc663));
        // CB 46 0279
        gbc.setState(0x971b, 0x30b2, 0x3520, 0x6a46, 0x4685, 0xf873, 0x1, 0x0);
        gbc.writeMem(0x971b, { 0xcb, 0x46 });
        gbc.writeMem(0xf873, { 0xec });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x30b2, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971b));
        EXPECT(0x46, gbc.readMem(0x971c));
        EXPECT(0xec, gbc.readMem(0xf873));
        // CB 46 027A
        gbc.setState(0x8e86, 0x33f6, 0x8a10, 0x39fd, 0x8508, 0x6b15, 0x0, 0x0);
        gbc.writeMem(0x6b15, { 0x43 });
        gbc.writeMem(0x8e86, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e86));
        EXPECT(0x46, gbc.readMem(0x8e87));
        // CB 46 027B
        gbc.setState(0xe907, 0x3274, 0x6080, 0x3494, 0x8863, 0xb117, 0x1, 0x0);
        gbc.writeMem(0xb117, { 0x40 });
        gbc.writeMem(0xe907, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3274, gbc.sp());
        EXPECT(0xe909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb117));
        EXPECT(0xcb, gbc.readMem(0xe907));
        EXPECT(0x46, gbc.readMem(0xe908));
        // CB 46 027C
        gbc.setState(0x6cb3, 0xd1c2, 0xbde0, 0xb78a, 0x477, 0x75cd, 0x0, 0x1);
        gbc.writeMem(0x6cb3, { 0xcb, 0x46 });
        gbc.writeMem(0x75cd, { 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd1c2, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 027D
        gbc.setState(0x1780, 0x206, 0xece0, 0x9d16, 0x378c, 0x5c66, 0x1, 0x0);
        gbc.writeMem(0x1780, { 0xcb, 0x46 });
        gbc.writeMem(0x5c66, { 0xe4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x206, gbc.sp());
        EXPECT(0x1782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 027E
        gbc.setState(0x27a9, 0x977d, 0x67e0, 0x9af3, 0x84dd, 0xf64f, 0x0, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0x46 });
        gbc.writeMem(0xf64f, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x977d, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf64f));
        // CB 46 0280
        gbc.setState(0xa27b, 0x79d8, 0xe990, 0xbccd, 0xa987, 0x2cfd, 0x1, 0x1);
        gbc.writeMem(0x2cfd, { 0xe1 });
        gbc.writeMem(0xa27b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x79d8, gbc.sp());
        EXPECT(0xa27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27b));
        EXPECT(0x46, gbc.readMem(0xa27c));
        // CB 46 0281
        gbc.setState(0x77ca, 0xc14b, 0xed40, 0x3698, 0xc94e, 0x1439, 0x1, 0x0);
        gbc.writeMem(0x1439, { 0x64 });
        gbc.writeMem(0x77ca, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0x77cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0282
        gbc.setState(0xd3a0, 0x1900, 0x9850, 0xa81, 0x26fc, 0xa125, 0x1, 0x1);
        gbc.writeMem(0xa125, { 0x26 });
        gbc.writeMem(0xd3a0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0xd3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xa125));
        EXPECT(0xcb, gbc.readMem(0xd3a0));
        EXPECT(0x46, gbc.readMem(0xd3a1));
        // CB 46 0283
        gbc.setState(0x8c9f, 0x2d8c, 0x7ae0, 0xff4, 0xf6c0, 0xe65, 0x1, 0x0);
        gbc.writeMem(0xe65, { 0x1e });
        gbc.writeMem(0x8c9f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d8c, gbc.sp());
        EXPECT(0x8ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9f));
        EXPECT(0x46, gbc.readMem(0x8ca0));
        // CB 46 0284
        gbc.setState(0x9780, 0x64e8, 0x4710, 0xe33, 0xc0b2, 0xed8, 0x1, 0x1);
        gbc.writeMem(0xed8, { 0x1 });
        gbc.writeMem(0x9780, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64e8, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9780));
        EXPECT(0x46, gbc.readMem(0x9781));
        // CB 46 0285
        gbc.setState(0xbfa1, 0x4060, 0xf380, 0x20e8, 0x72f4, 0x4dc6, 0x1, 0x0);
        gbc.writeMem(0x4dc6, { 0x10 });
        gbc.writeMem(0xbfa1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa1));
        EXPECT(0x46, gbc.readMem(0xbfa2));
        // CB 46 0286
        gbc.setState(0x54b7, 0x1fb9, 0x2270, 0x9dea, 0x87b3, 0x902a, 0x0, 0x0);
        gbc.writeMem(0x54b7, { 0xcb, 0x46 });
        gbc.writeMem(0x902a, { 0x8a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1fb9, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x902a));
        // CB 46 0287
        gbc.setState(0x6408, 0x1859, 0xb7d0, 0x2e08, 0xad1, 0x3d48, 0x1, 0x0);
        gbc.writeMem(0x3d48, { 0xca });
        gbc.writeMem(0x6408, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1859, gbc.sp());
        EXPECT(0x640a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0288
        gbc.setState(0xba01, 0x14f8, 0x3680, 0xc4bf, 0x7335, 0xe3bd, 0x1, 0x1);
        gbc.writeMem(0xba01, { 0xcb, 0x46 });
        gbc.writeMem(0xe3bd, { 0x33 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x14f8, gbc.sp());
        EXPECT(0xba03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba01));
        EXPECT(0x46, gbc.readMem(0xba02));
        EXPECT(0x33, gbc.readMem(0xe3bd));
        // CB 46 0289
        gbc.setState(0x7f82, 0x4b35, 0x6390, 0x5e81, 0xae6c, 0xdf15, 0x0, 0x1);
        gbc.writeMem(0x7f82, { 0xcb, 0x46 });
        gbc.writeMem(0xdf15, { 0x58 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4b35, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xdf15));
        // CB 46 028A
        gbc.setState(0xbee2, 0xc4c5, 0x38e0, 0x4e32, 0x5262, 0xcfb9, 0x0, 0x1);
        gbc.writeMem(0xbee2, { 0xcb, 0x46 });
        gbc.writeMem(0xcfb9, { 0x1d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc4c5, gbc.sp());
        EXPECT(0xbee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee2));
        EXPECT(0x46, gbc.readMem(0xbee3));
        EXPECT(0x1d, gbc.readMem(0xcfb9));
        // CB 46 028B
        gbc.setState(0xd768, 0xb849, 0xf3e0, 0x9cf5, 0x8673, 0xb4ce, 0x1, 0x0);
        gbc.writeMem(0xb4ce, { 0xe6 });
        gbc.writeMem(0xd768, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0xd76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb4ce));
        EXPECT(0xcb, gbc.readMem(0xd768));
        EXPECT(0x46, gbc.readMem(0xd769));
        // CB 46 028C
        gbc.setState(0xa7c7, 0x3fef, 0x8700, 0xc46d, 0x9824, 0x21c4, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0x31 });
        gbc.writeMem(0xa7c7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3fef, gbc.sp());
        EXPECT(0xa7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c7));
        EXPECT(0x46, gbc.readMem(0xa7c8));
        // CB 46 028D
        gbc.setState(0x713d, 0xddf6, 0x2b0, 0xb93, 0x64af, 0xc419, 0x1, 0x0);
        gbc.writeMem(0x713d, { 0xcb, 0x46 });
        gbc.writeMem(0xc419, { 0x4c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc419));
        // CB 46 028E
        gbc.setState(0x9955, 0x74bf, 0x3b70, 0x7c0b, 0x5675, 0x2c93, 0x0, 0x1);
        gbc.writeMem(0x2c93, { 0xf0 });
        gbc.writeMem(0x9955, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x74bf, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0x46, gbc.readMem(0x9956));
        // CB 46 0290
        gbc.setState(0x2849, 0x87bf, 0x3f10, 0x3328, 0x2a08, 0x20e7, 0x1, 0x1);
        gbc.writeMem(0x20e7, { 0x32 });
        gbc.writeMem(0x2849, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x87bf, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0291
        gbc.setState(0xae77, 0xccf2, 0x6ac0, 0x7e3b, 0x60a8, 0x9b21, 0x1, 0x0);
        gbc.writeMem(0x9b21, { 0xcc });
        gbc.writeMem(0xae77, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xccf2, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9b21));
        EXPECT(0xcb, gbc.readMem(0xae77));
        EXPECT(0x46, gbc.readMem(0xae78));
        // CB 46 0292
        gbc.setState(0xecb7, 0xf0ee, 0x7b0, 0x6d3c, 0xac67, 0xa8ab, 0x1, 0x1);
        gbc.writeMem(0xa8ab, { 0xbc });
        gbc.writeMem(0xecb7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf0ee, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa8ab));
        EXPECT(0xcb, gbc.readMem(0xecb7));
        EXPECT(0x46, gbc.readMem(0xecb8));
        // CB 46 0293
        gbc.setState(0xe156, 0x4318, 0xc8a0, 0x5700, 0x9444, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0x4ff, { 0x89 });
        gbc.writeMem(0xe156, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0x46, gbc.readMem(0xe157));
        // CB 46 0294
        gbc.setState(0x1552, 0x463e, 0x9d90, 0xdd3, 0x86dc, 0x5499, 0x1, 0x0);
        gbc.writeMem(0x1552, { 0xcb, 0x46 });
        gbc.writeMem(0x5499, { 0xcd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0295
        gbc.setState(0xce, 0xb799, 0x9ea0, 0x6b1, 0x4411, 0x3c4f, 0x0, 0x0);
        gbc.writeMem(0xce, { 0xcb, 0x46 });
        gbc.writeMem(0x3c4f, { 0x1d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb799, gbc.sp());
        EXPECT(0xd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0296
        gbc.setState(0x93f9, 0xaea6, 0x5110, 0xc702, 0xd27c, 0x6846, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xc0 });
        gbc.writeMem(0x93f9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaea6, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0x46, gbc.readMem(0x93fa));
        // CB 46 0297
        gbc.setState(0x141d, 0x935c, 0xf660, 0xf8ec, 0x8655, 0xde4, 0x1, 0x0);
        gbc.writeMem(0xde4, { 0x97 });
        gbc.writeMem(0x141d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x935c, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0298
        gbc.setState(0x9166, 0xcba9, 0x6d00, 0x561, 0xf366, 0xec95, 0x1, 0x1);
        gbc.writeMem(0x9166, { 0xcb, 0x46 });
        gbc.writeMem(0xec95, { 0xdf });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9166));
        EXPECT(0x46, gbc.readMem(0x9167));
        EXPECT(0xdf, gbc.readMem(0xec95));
        // CB 46 0299
        gbc.setState(0x4019, 0x2fc2, 0xb900, 0xe53b, 0x45b4, 0xe77f, 0x0, 0x0);
        gbc.writeMem(0x4019, { 0xcb, 0x46 });
        gbc.writeMem(0xe77f, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2fc2, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe77f));
        // CB 46 029B
        gbc.setState(0x55a3, 0xfc6e, 0xc170, 0x8530, 0x365f, 0xf7a6, 0x0, 0x1);
        gbc.writeMem(0x55a3, { 0xcb, 0x46 });
        gbc.writeMem(0xf7a6, { 0xf3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0x55a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf7a6));
        // CB 46 029C
        gbc.setState(0xaf3c, 0x447f, 0x3e0, 0xf797, 0x25b9, 0xcba0, 0x1, 0x1);
        gbc.writeMem(0xaf3c, { 0xcb, 0x46 });
        gbc.writeMem(0xcba0, { 0xc2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x447f, gbc.sp());
        EXPECT(0xaf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3c));
        EXPECT(0x46, gbc.readMem(0xaf3d));
        EXPECT(0xc2, gbc.readMem(0xcba0));
        // CB 46 029E
        gbc.setState(0x211a, 0x1647, 0x3e50, 0x20ab, 0xefa2, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0x211a, { 0xcb, 0x46 });
        gbc.writeMem(0x6c54, { 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1647, gbc.sp());
        EXPECT(0x211c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 029F
        gbc.setState(0x1942, 0xbd77, 0x4ca0, 0x82dc, 0x1a9e, 0xcd26, 0x1, 0x0);
        gbc.writeMem(0x1942, { 0xcb, 0x46 });
        gbc.writeMem(0xcd26, { 0x84 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd77, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcd26));
        // CB 46 02A0
        gbc.setState(0x89bc, 0xba12, 0xd10, 0x79a, 0x2345, 0xdcbd, 0x1, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0x46 });
        gbc.writeMem(0xdcbd, { 0x3f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0x46, gbc.readMem(0x89bd));
        EXPECT(0x3f, gbc.readMem(0xdcbd));
        // CB 46 02A1
        gbc.setState(0x796, 0x6267, 0xf900, 0xd1bd, 0x3b4f, 0xac19, 0x0, 0x1);
        gbc.writeMem(0x796, { 0xcb, 0x46 });
        gbc.writeMem(0xac19, { 0x45 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6267, gbc.sp());
        EXPECT(0x798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xac19));
        // CB 46 02A2
        gbc.setState(0x1f73, 0x449d, 0xc090, 0x5981, 0x3a4e, 0xe3e6, 0x1, 0x1);
        gbc.writeMem(0x1f73, { 0xcb, 0x46 });
        gbc.writeMem(0xe3e6, { 0x53 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x449d, gbc.sp());
        EXPECT(0x1f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe3e6));
        // CB 46 02A3
        gbc.setState(0x5f3d, 0xbc62, 0xe600, 0x9331, 0x8a0c, 0xba7b, 0x0, 0x1);
        gbc.writeMem(0x5f3d, { 0xcb, 0x46 });
        gbc.writeMem(0xba7b, { 0xdd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc62, gbc.sp());
        EXPECT(0x5f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xba7b));
        // CB 46 02A4
        gbc.setState(0x17d0, 0x1349, 0xbe20, 0x8aae, 0xf03a, 0x9faf, 0x1, 0x1);
        gbc.writeMem(0x17d0, { 0xcb, 0x46 });
        gbc.writeMem(0x9faf, { 0x83 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x9faf));
        // CB 46 02A5
        gbc.setState(0x2c79, 0xc161, 0x3190, 0xbc54, 0xe4c0, 0x6517, 0x0, 0x1);
        gbc.writeMem(0x2c79, { 0xcb, 0x46 });
        gbc.writeMem(0x6517, { 0xbc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc161, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02A6
        gbc.setState(0x9c4d, 0x6024, 0x1d60, 0xaf7e, 0x210c, 0x5c73, 0x1, 0x1);
        gbc.writeMem(0x5c73, { 0xd5 });
        gbc.writeMem(0x9c4d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6024, gbc.sp());
        EXPECT(0x9c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4d));
        EXPECT(0x46, gbc.readMem(0x9c4e));
        // CB 46 02A7
        gbc.setState(0x413c, 0x48a8, 0x7e20, 0x4e26, 0xf8ae, 0xc622, 0x1, 0x1);
        gbc.writeMem(0x413c, { 0xcb, 0x46 });
        gbc.writeMem(0xc622, { 0x6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x48a8, gbc.sp());
        EXPECT(0x413e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc622));
        // CB 46 02A8
        gbc.setState(0x1f5d, 0xe24a, 0x4db0, 0xae4f, 0x4fea, 0xecd5, 0x1, 0x0);
        gbc.writeMem(0x1f5d, { 0xcb, 0x46 });
        gbc.writeMem(0xecd5, { 0x90 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe24a, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xecd5));
        // CB 46 02A9
        gbc.setState(0xbe03, 0x10a0, 0x8da0, 0x8ba8, 0x2615, 0x25b3, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0x5c });
        gbc.writeMem(0xbe03, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x10a0, gbc.sp());
        EXPECT(0xbe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe03));
        EXPECT(0x46, gbc.readMem(0xbe04));
        // CB 46 02AA
        gbc.setState(0xc18f, 0x4fe1, 0x5280, 0xcef3, 0x531e, 0x8271, 0x0, 0x1);
        gbc.writeMem(0x8271, { 0xbb });
        gbc.writeMem(0xc18f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4fe1, gbc.sp());
        EXPECT(0xc191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8271));
        EXPECT(0xcb, gbc.readMem(0xc18f));
        EXPECT(0x46, gbc.readMem(0xc190));
        // CB 46 02AB
        gbc.setState(0xa14d, 0x8608, 0xf460, 0x459e, 0x4c3c, 0x5005, 0x1, 0x0);
        gbc.writeMem(0x5005, { 0xe5 });
        gbc.writeMem(0xa14d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0xa14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14d));
        EXPECT(0x46, gbc.readMem(0xa14e));
        // CB 46 02AC
        gbc.setState(0x9c17, 0xde6d, 0x4cd0, 0x1fbf, 0x2548, 0x562b, 0x0, 0x1);
        gbc.writeMem(0x562b, { 0xf3 });
        gbc.writeMem(0x9c17, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xde6d, gbc.sp());
        EXPECT(0x9c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c17));
        EXPECT(0x46, gbc.readMem(0x9c18));
        // CB 46 02AD
        gbc.setState(0xd5fd, 0x46be, 0xb1d0, 0x7963, 0xa44f, 0xc258, 0x0, 0x0);
        gbc.writeMem(0xc258, { 0x97 });
        gbc.writeMem(0xd5fd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc258));
        EXPECT(0xcb, gbc.readMem(0xd5fd));
        EXPECT(0x46, gbc.readMem(0xd5fe));
        // CB 46 02AE
        gbc.setState(0xea43, 0x413c, 0xb120, 0xeda8, 0x1fa1, 0xdb81, 0x1, 0x1);
        gbc.writeMem(0xdb81, { 0x1e });
        gbc.writeMem(0xea43, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x413c, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xdb81));
        EXPECT(0xcb, gbc.readMem(0xea43));
        EXPECT(0x46, gbc.readMem(0xea44));
        // CB 46 02AF
        gbc.setState(0x2443, 0x9131, 0xfc40, 0xf0fc, 0xc417, 0x7a54, 0x1, 0x0);
        gbc.writeMem(0x2443, { 0xcb, 0x46 });
        gbc.writeMem(0x7a54, { 0x97 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0x2445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02B0
        gbc.setState(0xa8d4, 0xdbfa, 0xbba0, 0x78e4, 0x4a20, 0xf283, 0x0, 0x0);
        gbc.writeMem(0xa8d4, { 0xcb, 0x46 });
        gbc.writeMem(0xf283, { 0x62 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdbfa, gbc.sp());
        EXPECT(0xa8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d4));
        EXPECT(0x46, gbc.readMem(0xa8d5));
        EXPECT(0x62, gbc.readMem(0xf283));
        // CB 46 02B1
        gbc.setState(0xeacc, 0x28b5, 0xa9b0, 0xb56f, 0x438e, 0x51dc, 0x0, 0x1);
        gbc.writeMem(0x51dc, { 0xcb });
        gbc.writeMem(0xeacc, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x28b5, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x46, gbc.readMem(0xeacd));
        // CB 46 02B2
        gbc.setState(0xbcad, 0x76cf, 0x9a70, 0x2037, 0xe55c, 0xc6f3, 0x0, 0x1);
        gbc.writeMem(0xbcad, { 0xcb, 0x46 });
        gbc.writeMem(0xc6f3, { 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x76cf, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0x46, gbc.readMem(0xbcae));
        EXPECT(0xb4, gbc.readMem(0xc6f3));
        // CB 46 02B3
        gbc.setState(0x8232, 0x6cbc, 0x4730, 0x9ffc, 0x7712, 0x3aa1, 0x0, 0x1);
        gbc.writeMem(0x3aa1, { 0x9f });
        gbc.writeMem(0x8232, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0x8234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8232));
        EXPECT(0x46, gbc.readMem(0x8233));
        // CB 46 02B4
        gbc.setState(0x8fca, 0xbfe6, 0x3090, 0x463, 0xd3bd, 0xfbcf, 0x1, 0x0);
        gbc.writeMem(0x8fca, { 0xcb, 0x46 });
        gbc.writeMem(0xfbcf, { 0xcd });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbfe6, gbc.sp());
        EXPECT(0x8fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fca));
        EXPECT(0x46, gbc.readMem(0x8fcb));
        EXPECT(0xcd, gbc.readMem(0xfbcf));
        // CB 46 02B5
        gbc.setState(0x787, 0x2046, 0xfc50, 0x9535, 0x3e3c, 0x2ae1, 0x0, 0x1);
        gbc.writeMem(0x787, { 0xcb, 0x46 });
        gbc.writeMem(0x2ae1, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0x789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02B6
        gbc.setState(0xa16a, 0x254f, 0xa060, 0x8872, 0x67e2, 0x45e5, 0x1, 0x1);
        gbc.writeMem(0x45e5, { 0xba });
        gbc.writeMem(0xa16a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x254f, gbc.sp());
        EXPECT(0xa16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16a));
        EXPECT(0x46, gbc.readMem(0xa16b));
        // CB 46 02B7
        gbc.setState(0xd6da, 0xbb44, 0x4450, 0x335e, 0x9151, 0xb720, 0x1, 0x0);
        gbc.writeMem(0xb720, { 0xd4 });
        gbc.writeMem(0xd6da, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbb44, gbc.sp());
        EXPECT(0xd6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb720));
        EXPECT(0xcb, gbc.readMem(0xd6da));
        EXPECT(0x46, gbc.readMem(0xd6db));
        // CB 46 02B9
        gbc.setState(0xdf2d, 0x642f, 0x4900, 0xbee1, 0x7563, 0xcd8e, 0x0, 0x0);
        gbc.writeMem(0xcd8e, { 0xfd });
        gbc.writeMem(0xdf2d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0xdf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xcd8e));
        EXPECT(0xcb, gbc.readMem(0xdf2d));
        EXPECT(0x46, gbc.readMem(0xdf2e));
        // CB 46 02BA
        gbc.setState(0x3e5a, 0xaf66, 0x5dd0, 0xfc01, 0x11f3, 0xbbc8, 0x0, 0x0);
        gbc.writeMem(0x3e5a, { 0xcb, 0x46 });
        gbc.writeMem(0xbbc8, { 0x1b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaf66, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xbbc8));
        // CB 46 02BB
        gbc.setState(0xafab, 0xbcb4, 0x4b20, 0x7bee, 0xc785, 0xcd04, 0x1, 0x0);
        gbc.writeMem(0xafab, { 0xcb, 0x46 });
        gbc.writeMem(0xcd04, { 0x3a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbcb4, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafab));
        EXPECT(0x46, gbc.readMem(0xafac));
        EXPECT(0x3a, gbc.readMem(0xcd04));
        // CB 46 02BC
        gbc.setState(0x9fc0, 0x84d8, 0xa470, 0xea60, 0x7c16, 0x65f8, 0x1, 0x0);
        gbc.writeMem(0x65f8, { 0x5b });
        gbc.writeMem(0x9fc0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x84d8, gbc.sp());
        EXPECT(0x9fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc0));
        EXPECT(0x46, gbc.readMem(0x9fc1));
        // CB 46 02BD
        gbc.setState(0x90be, 0x7ac2, 0x75b0, 0x4e0b, 0xf987, 0xaa39, 0x1, 0x1);
        gbc.writeMem(0x90be, { 0xcb, 0x46 });
        gbc.writeMem(0xaa39, { 0xf6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7ac2, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90be));
        EXPECT(0x46, gbc.readMem(0x90bf));
        EXPECT(0xf6, gbc.readMem(0xaa39));
        // CB 46 02BE
        gbc.setState(0xde97, 0x4c3e, 0x990, 0xb389, 0xf1ce, 0x89f4, 0x0, 0x0);
        gbc.writeMem(0x89f4, { 0xa7 });
        gbc.writeMem(0xde97, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c3e, gbc.sp());
        EXPECT(0xde99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x89f4));
        EXPECT(0xcb, gbc.readMem(0xde97));
        EXPECT(0x46, gbc.readMem(0xde98));
        // CB 46 02BF
        gbc.setState(0x7fe8, 0xdac9, 0x9e60, 0xc0ab, 0x62b5, 0xf321, 0x1, 0x1);
        gbc.writeMem(0x7fe8, { 0xcb, 0x46 });
        gbc.writeMem(0xf321, { 0x84 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdac9, gbc.sp());
        EXPECT(0x7fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xf321));
        // CB 46 02C0
        gbc.setState(0x4c3b, 0x19b7, 0x4df0, 0xeb95, 0x2c07, 0x34d9, 0x0, 0x1);
        gbc.writeMem(0x34d9, { 0x42 });
        gbc.writeMem(0x4c3b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x19b7, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02C1
        gbc.setState(0x9026, 0x86a6, 0x6040, 0x71b6, 0xa038, 0x8b8e, 0x1, 0x1);
        gbc.writeMem(0x8b8e, { 0xe });
        gbc.writeMem(0x9026, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x9028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8b8e));
        EXPECT(0xcb, gbc.readMem(0x9026));
        EXPECT(0x46, gbc.readMem(0x9027));
        // CB 46 02C2
        gbc.setState(0xc2f6, 0x5969, 0x3350, 0x8d8d, 0xe16d, 0xcb79, 0x0, 0x1);
        gbc.writeMem(0xc2f6, { 0xcb, 0x46 });
        gbc.writeMem(0xcb79, { 0x97 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5969, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f6));
        EXPECT(0x46, gbc.readMem(0xc2f7));
        EXPECT(0x97, gbc.readMem(0xcb79));
        // CB 46 02C3
        gbc.setState(0x70e2, 0xa81c, 0xdd90, 0x36de, 0x5289, 0xa192, 0x0, 0x0);
        gbc.writeMem(0x70e2, { 0xcb, 0x46 });
        gbc.writeMem(0xa192, { 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0x70e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa192));
        // CB 46 02C4
        gbc.setState(0x8dbc, 0x3cbe, 0x4e90, 0x105d, 0x4363, 0x13ee, 0x0, 0x1);
        gbc.writeMem(0x13ee, { 0x10 });
        gbc.writeMem(0x8dbc, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3cbe, gbc.sp());
        EXPECT(0x8dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbc));
        EXPECT(0x46, gbc.readMem(0x8dbd));
        // CB 46 02C5
        gbc.setState(0x595f, 0x51af, 0x7eb0, 0x6fda, 0xb1a4, 0xd1a3, 0x1, 0x1);
        gbc.writeMem(0x595f, { 0xcb, 0x46 });
        gbc.writeMem(0xd1a3, { 0x78 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xd1a3));
        // CB 46 02C6
        gbc.setState(0x129b, 0x2f19, 0x99e0, 0x56a6, 0x9922, 0x226f, 0x1, 0x1);
        gbc.writeMem(0x129b, { 0xcb, 0x46 });
        gbc.writeMem(0x226f, { 0x28 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0x129d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02C7
        gbc.setState(0x422d, 0x641, 0xa410, 0xbd14, 0x3a76, 0x8542, 0x1, 0x1);
        gbc.writeMem(0x422d, { 0xcb, 0x46 });
        gbc.writeMem(0x8542, { 0xe4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x641, gbc.sp());
        EXPECT(0x422f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8542));
        // CB 46 02C8
        gbc.setState(0x54ac, 0xe32d, 0x4960, 0xe292, 0xbe0a, 0xb3cf, 0x0, 0x0);
        gbc.writeMem(0x54ac, { 0xcb, 0x46 });
        gbc.writeMem(0xb3cf, { 0x6d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe32d, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb3cf));
        // CB 46 02C9
        gbc.setState(0xe57e, 0xe9d8, 0x3500, 0x4f24, 0x6c4a, 0x360b, 0x1, 0x0);
        gbc.writeMem(0x360b, { 0xca });
        gbc.writeMem(0xe57e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57e));
        EXPECT(0x46, gbc.readMem(0xe57f));
        // CB 46 02CA
        gbc.setState(0x8180, 0x17ef, 0xf190, 0xc43f, 0x9cd2, 0xb708, 0x0, 0x0);
        gbc.writeMem(0x8180, { 0xcb, 0x46 });
        gbc.writeMem(0xb708, { 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x17ef, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8180));
        EXPECT(0x46, gbc.readMem(0x8181));
        EXPECT(0x2d, gbc.readMem(0xb708));
        // CB 46 02CC
        gbc.setState(0xaa16, 0x3283, 0xedd0, 0xf4ad, 0x60d5, 0x53f, 0x0, 0x1);
        gbc.writeMem(0x53f, { 0xb3 });
        gbc.writeMem(0xaa16, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0xaa18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa16));
        EXPECT(0x46, gbc.readMem(0xaa17));
        // CB 46 02CD
        gbc.setState(0x8518, 0x3c97, 0xd0, 0x15b0, 0xeec5, 0xea17, 0x1, 0x1);
        gbc.writeMem(0x8518, { 0xcb, 0x46 });
        gbc.writeMem(0xea17, { 0x64 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8518));
        EXPECT(0x46, gbc.readMem(0x8519));
        EXPECT(0x64, gbc.readMem(0xea17));
        // CB 46 02CE
        gbc.setState(0xa16, 0x94ce, 0x7300, 0x71df, 0xd333, 0x7120, 0x0, 0x0);
        gbc.writeMem(0xa16, { 0xcb, 0x46 });
        gbc.writeMem(0x7120, { 0xd2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0xa18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02CF
        gbc.setState(0xcd11, 0x357b, 0x9310, 0xf2bb, 0x7172, 0x6fdc, 0x1, 0x1);
        gbc.writeMem(0x6fdc, { 0xd4 });
        gbc.writeMem(0xcd11, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x357b, gbc.sp());
        EXPECT(0xcd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd11));
        EXPECT(0x46, gbc.readMem(0xcd12));
        // CB 46 02D0
        gbc.setState(0x5eb6, 0x363b, 0x80b0, 0x5337, 0x25bb, 0x1d16, 0x1, 0x1);
        gbc.writeMem(0x1d16, { 0xf1 });
        gbc.writeMem(0x5eb6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x363b, gbc.sp());
        EXPECT(0x5eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02D2
        gbc.setState(0x6359, 0x3a8f, 0xe260, 0x6417, 0x8658, 0xf737, 0x0, 0x0);
        gbc.writeMem(0x6359, { 0xcb, 0x46 });
        gbc.writeMem(0xf737, { 0xde });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3a8f, gbc.sp());
        EXPECT(0x635b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf737));
        // CB 46 02D3
        gbc.setState(0x103b, 0x97ed, 0x550, 0x8f5a, 0x1d60, 0x3361, 0x1, 0x1);
        gbc.writeMem(0x103b, { 0xcb, 0x46 });
        gbc.writeMem(0x3361, { 0xb5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x97ed, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02D4
        gbc.setState(0x1810, 0x6f08, 0x7cc0, 0xc005, 0x9186, 0x4b33, 0x1, 0x1);
        gbc.writeMem(0x1810, { 0xcb, 0x46 });
        gbc.writeMem(0x4b33, { 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x1812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02D5
        gbc.setState(0xadf, 0x3e55, 0x4180, 0x28f2, 0x438d, 0x9186, 0x1, 0x1);
        gbc.writeMem(0xadf, { 0xcb, 0x46 });
        gbc.writeMem(0x9186, { 0x82 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0xae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9186));
        // CB 46 02D6
        gbc.setState(0x8e2c, 0xc19, 0x6380, 0x918f, 0xe4cc, 0x3d24, 0x0, 0x0);
        gbc.writeMem(0x3d24, { 0x87 });
        gbc.writeMem(0x8e2c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc19, gbc.sp());
        EXPECT(0x8e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2c));
        EXPECT(0x46, gbc.readMem(0x8e2d));
        // CB 46 02D7
        gbc.setState(0x993a, 0xe98, 0xdde0, 0xdfae, 0x7dc4, 0xb76f, 0x1, 0x1);
        gbc.writeMem(0x993a, { 0xcb, 0x46 });
        gbc.writeMem(0xb76f, { 0x5c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993a));
        EXPECT(0x46, gbc.readMem(0x993b));
        EXPECT(0x5c, gbc.readMem(0xb76f));
        // CB 46 02D8
        gbc.setState(0x23ca, 0x673c, 0x2450, 0x9262, 0x70ad, 0xb452, 0x1, 0x0);
        gbc.writeMem(0x23ca, { 0xcb, 0x46 });
        gbc.writeMem(0xb452, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x673c, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb452));
        // CB 46 02D9
        gbc.setState(0x3dc, 0x7cd, 0xef50, 0x283, 0x513b, 0xaa76, 0x1, 0x0);
        gbc.writeMem(0x3dc, { 0xcb, 0x46 });
        gbc.writeMem(0xaa76, { 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0x3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xaa76));
        // CB 46 02DA
        gbc.setState(0x6663, 0x4fe7, 0x7d10, 0x2c31, 0x43b7, 0xa5b6, 0x1, 0x0);
        gbc.writeMem(0x6663, { 0xcb, 0x46 });
        gbc.writeMem(0xa5b6, { 0xbf });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4fe7, gbc.sp());
        EXPECT(0x6665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa5b6));
        // CB 46 02DB
        gbc.setState(0xc5d4, 0xd352, 0x3e90, 0x8024, 0xaa42, 0x87d3, 0x1, 0x0);
        gbc.writeMem(0x87d3, { 0xd });
        gbc.writeMem(0xc5d4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd352, gbc.sp());
        EXPECT(0xc5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x87d3));
        EXPECT(0xcb, gbc.readMem(0xc5d4));
        EXPECT(0x46, gbc.readMem(0xc5d5));
        // CB 46 02DC
        gbc.setState(0xb2f5, 0x3fd8, 0xe8b0, 0x3a17, 0x930, 0xebcb, 0x1, 0x0);
        gbc.writeMem(0xb2f5, { 0xcb, 0x46 });
        gbc.writeMem(0xebcb, { 0x90 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0x46, gbc.readMem(0xb2f6));
        EXPECT(0x90, gbc.readMem(0xebcb));
        // CB 46 02DD
        gbc.setState(0x384c, 0x1834, 0x5bc0, 0x71d8, 0xda14, 0xabe7, 0x0, 0x0);
        gbc.writeMem(0x384c, { 0xcb, 0x46 });
        gbc.writeMem(0xabe7, { 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1834, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xabe7));
        // CB 46 02DE
        gbc.setState(0x9b4e, 0x777f, 0x9ff0, 0x2682, 0x8f32, 0xdc7, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0xf2 });
        gbc.writeMem(0x9b4e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x777f, gbc.sp());
        EXPECT(0x9b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4e));
        EXPECT(0x46, gbc.readMem(0x9b4f));
        // CB 46 02DF
        gbc.setState(0x6281, 0xfc06, 0x9060, 0xe488, 0x58d2, 0xa3aa, 0x0, 0x1);
        gbc.writeMem(0x6281, { 0xcb, 0x46 });
        gbc.writeMem(0xa3aa, { 0x7c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfc06, gbc.sp());
        EXPECT(0x6283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa3aa));
        // CB 46 02E1
        gbc.setState(0x4644, 0x5933, 0x26e0, 0xa77f, 0xb254, 0xd992, 0x1, 0x1);
        gbc.writeMem(0x4644, { 0xcb, 0x46 });
        gbc.writeMem(0xd992, { 0x62 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5933, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd992));
        // CB 46 02E3
        gbc.setState(0xa6f7, 0x87aa, 0xabc0, 0xe26a, 0x40e0, 0x18c8, 0x0, 0x1);
        gbc.writeMem(0x18c8, { 0xed });
        gbc.writeMem(0xa6f7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x87aa, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f7));
        EXPECT(0x46, gbc.readMem(0xa6f8));
        // CB 46 02E4
        gbc.setState(0xea2e, 0xd2a5, 0x1cf0, 0xcd81, 0xd03e, 0x8658, 0x0, 0x1);
        gbc.writeMem(0x8658, { 0x81 });
        gbc.writeMem(0xea2e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8658));
        EXPECT(0xcb, gbc.readMem(0xea2e));
        EXPECT(0x46, gbc.readMem(0xea2f));
        // CB 46 02E5
        gbc.setState(0x7572, 0xa542, 0xd640, 0xe8b1, 0x4d18, 0xe9bf, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0xcb, 0x46 });
        gbc.writeMem(0xe9bf, { 0x53 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe9bf));
        // CB 46 02E6
        gbc.setState(0x86c3, 0x6e36, 0x85c0, 0xf6ce, 0xd493, 0x2d82, 0x1, 0x0);
        gbc.writeMem(0x2d82, { 0x3d });
        gbc.writeMem(0x86c3, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c3));
        EXPECT(0x46, gbc.readMem(0x86c4));
        // CB 46 02E7
        gbc.setState(0x62d7, 0xce37, 0xb1d0, 0xbf03, 0x1b0c, 0x442d, 0x1, 0x1);
        gbc.writeMem(0x442d, { 0x20 });
        gbc.writeMem(0x62d7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xce37, gbc.sp());
        EXPECT(0x62d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02E8
        gbc.setState(0x3fb0, 0x5286, 0xe0a0, 0x55a9, 0xbe1d, 0x4d83, 0x0, 0x1);
        gbc.writeMem(0x3fb0, { 0xcb, 0x46 });
        gbc.writeMem(0x4d83, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02E9
        gbc.setState(0x25d2, 0xeaca, 0x3830, 0xaf38, 0xc1cc, 0x17bd, 0x0, 0x0);
        gbc.writeMem(0x17bd, { 0x18 });
        gbc.writeMem(0x25d2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeaca, gbc.sp());
        EXPECT(0x25d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02EA
        gbc.setState(0xe910, 0x41c1, 0xc5f0, 0xaa9a, 0xae7e, 0xf40a, 0x0, 0x1);
        gbc.writeMem(0xe910, { 0xcb, 0x46 });
        gbc.writeMem(0xf40a, { 0xf9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x41c1, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe910));
        EXPECT(0x46, gbc.readMem(0xe911));
        EXPECT(0xf9, gbc.readMem(0xf40a));
        // CB 46 02EB
        gbc.setState(0xa53e, 0xbc82, 0xf5d0, 0x7199, 0x8ef0, 0x990b, 0x1, 0x0);
        gbc.writeMem(0x990b, { 0xac });
        gbc.writeMem(0xa53e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0xa540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x990b));
        EXPECT(0xcb, gbc.readMem(0xa53e));
        EXPECT(0x46, gbc.readMem(0xa53f));
        // CB 46 02EC
        gbc.setState(0x2ca4, 0x165f, 0x5630, 0x134c, 0x9068, 0x940b, 0x0, 0x0);
        gbc.writeMem(0x2ca4, { 0xcb, 0x46 });
        gbc.writeMem(0x940b, { 0x67 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0x2ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x940b));
        // CB 46 02ED
        gbc.setState(0xdc26, 0x18ef, 0x830, 0xec48, 0x6360, 0xc4af, 0x1, 0x1);
        gbc.writeMem(0xc4af, { 0x1 });
        gbc.writeMem(0xdc26, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x18ef, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc4af));
        EXPECT(0xcb, gbc.readMem(0xdc26));
        EXPECT(0x46, gbc.readMem(0xdc27));
        // CB 46 02EF
        gbc.setState(0xc29, 0xae85, 0x7b80, 0x6e42, 0x46f3, 0xe6a2, 0x1, 0x1);
        gbc.writeMem(0xc29, { 0xcb, 0x46 });
        gbc.writeMem(0xe6a2, { 0xce });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae85, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xe6a2));
        // CB 46 02F0
        gbc.setState(0x5361, 0xad09, 0xbcd0, 0x6bb6, 0x92d7, 0x3fab, 0x0, 0x1);
        gbc.writeMem(0x3fab, { 0xfd });
        gbc.writeMem(0x5361, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02F1
        gbc.setState(0x155a, 0x4679, 0x8490, 0xa034, 0x3683, 0xd8, 0x0, 0x0);
        gbc.writeMem(0xd8, { 0x84 });
        gbc.writeMem(0x155a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0x155c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02F2
        gbc.setState(0xdf3, 0x491, 0x9f60, 0x9853, 0x3cf1, 0x7fbd, 0x0, 0x0);
        gbc.writeMem(0xdf3, { 0xcb, 0x46 });
        gbc.writeMem(0x7fbd, { 0x11 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x491, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02F3
        gbc.setState(0x6098, 0xa272, 0xcfe0, 0x435f, 0x658e, 0x906, 0x0, 0x0);
        gbc.writeMem(0x906, { 0xe9 });
        gbc.writeMem(0x6098, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa272, gbc.sp());
        EXPECT(0x609a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02F4
        gbc.setState(0x61a8, 0x70b1, 0x9c80, 0x4d64, 0x4710, 0x377f, 0x1, 0x0);
        gbc.writeMem(0x377f, { 0xa0 });
        gbc.writeMem(0x61a8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x70b1, gbc.sp());
        EXPECT(0x61aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02F5
        gbc.setState(0xe72a, 0x1931, 0xb530, 0xf118, 0xe102, 0x51a, 0x1, 0x0);
        gbc.writeMem(0x51a, { 0x42 });
        gbc.writeMem(0xe72a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1931, gbc.sp());
        EXPECT(0xe72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72a));
        EXPECT(0x46, gbc.readMem(0xe72b));
        // CB 46 02F6
        gbc.setState(0x5cbf, 0xf751, 0xa730, 0x84ea, 0x7ad0, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x5190, { 0xf6 });
        gbc.writeMem(0x5cbf, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf751, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02F7
        gbc.setState(0xbcc, 0x5c30, 0xf630, 0x31cb, 0xd242, 0x10db, 0x0, 0x1);
        gbc.writeMem(0xbcc, { 0xcb, 0x46 });
        gbc.writeMem(0x10db, { 0x86 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5c30, gbc.sp());
        EXPECT(0xbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 02F8
        gbc.setState(0x691, 0xbe05, 0x3da0, 0x7fcf, 0x2f7c, 0x9640, 0x0, 0x0);
        gbc.writeMem(0x691, { 0xcb, 0x46 });
        gbc.writeMem(0x9640, { 0x62 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbe05, gbc.sp());
        EXPECT(0x693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9640));
        // CB 46 02F9
        gbc.setState(0x191b, 0xa89d, 0x69a0, 0x8a1d, 0x31f6, 0xf4a6, 0x1, 0x1);
        gbc.writeMem(0x191b, { 0xcb, 0x46 });
        gbc.writeMem(0xf4a6, { 0x2b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x191d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf4a6));
        // CB 46 02FB
        gbc.setState(0x89b1, 0x7f4c, 0x6c30, 0xd12, 0x9602, 0x5d39, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xbc });
        gbc.writeMem(0x89b1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7f4c, gbc.sp());
        EXPECT(0x89b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b1));
        EXPECT(0x46, gbc.readMem(0x89b2));
        // CB 46 02FC
        gbc.setState(0x47d0, 0x9f03, 0x860, 0x97d9, 0x7fd8, 0x7a73, 0x1, 0x0);
        gbc.writeMem(0x47d0, { 0xcb, 0x46 });
        gbc.writeMem(0x7a73, { 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f03, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 02FD
        gbc.setState(0xe972, 0x5464, 0x75d0, 0x7a83, 0xbb2c, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0x5a59, { 0xb });
        gbc.writeMem(0xe972, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0xe974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe972));
        EXPECT(0x46, gbc.readMem(0xe973));
        // CB 46 02FE
        gbc.setState(0x521f, 0x1d89, 0x8b50, 0xb227, 0xed6c, 0x80fa, 0x1, 0x0);
        gbc.writeMem(0x521f, { 0xcb, 0x46 });
        gbc.writeMem(0x80fa, { 0xe3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1d89, gbc.sp());
        EXPECT(0x5221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x80fa));
        // CB 46 02FF
        gbc.setState(0xbf30, 0xd171, 0x56b0, 0x18ba, 0xda25, 0xe2c1, 0x0, 0x1);
        gbc.writeMem(0xbf30, { 0xcb, 0x46 });
        gbc.writeMem(0xe2c1, { 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0xbf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf30));
        EXPECT(0x46, gbc.readMem(0xbf31));
        EXPECT(0xf7, gbc.readMem(0xe2c1));
        // CB 46 0300
        gbc.setState(0x6645, 0x3bfa, 0x8100, 0x19b1, 0x5259, 0x2b7a, 0x0, 0x0);
        gbc.writeMem(0x2b7a, { 0x4f });
        gbc.writeMem(0x6645, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3bfa, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0301
        gbc.setState(0x9d0f, 0xb3d5, 0x2610, 0x7ed1, 0xd99c, 0x42b8, 0x1, 0x1);
        gbc.writeMem(0x42b8, { 0x96 });
        gbc.writeMem(0x9d0f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0x9d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0f));
        EXPECT(0x46, gbc.readMem(0x9d10));
        // CB 46 0302
        gbc.setState(0xd879, 0xf18f, 0x8e40, 0x29f3, 0x63d, 0x1aa3, 0x0, 0x1);
        gbc.writeMem(0x1aa3, { 0xf3 });
        gbc.writeMem(0xd879, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0xd87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd879));
        EXPECT(0x46, gbc.readMem(0xd87a));
        // CB 46 0303
        gbc.setState(0xc473, 0xd02a, 0x7010, 0x9b09, 0xf73a, 0x3a57, 0x0, 0x1);
        gbc.writeMem(0x3a57, { 0x7c });
        gbc.writeMem(0xc473, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc473));
        EXPECT(0x46, gbc.readMem(0xc474));
        // CB 46 0304
        gbc.setState(0x9448, 0xf51f, 0x76e0, 0x20d5, 0x8e67, 0xbc8b, 0x0, 0x1);
        gbc.writeMem(0x9448, { 0xcb, 0x46 });
        gbc.writeMem(0xbc8b, { 0xf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9448));
        EXPECT(0x46, gbc.readMem(0x9449));
        EXPECT(0xf, gbc.readMem(0xbc8b));
        // CB 46 0305
        gbc.setState(0x2003, 0x610c, 0xdd0, 0x54ff, 0x201a, 0x7e97, 0x1, 0x0);
        gbc.writeMem(0x2003, { 0xcb, 0x46 });
        gbc.writeMem(0x7e97, { 0x31 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0306
        gbc.setState(0x6beb, 0x78b4, 0x6c70, 0xf704, 0x6b3b, 0x7373, 0x0, 0x1);
        gbc.writeMem(0x6beb, { 0xcb, 0x46 });
        gbc.writeMem(0x7373, { 0xa0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x78b4, gbc.sp());
        EXPECT(0x6bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0308
        gbc.setState(0x4f2d, 0x885f, 0xdd10, 0xcdc7, 0xf419, 0x9b, 0x0, 0x1);
        gbc.writeMem(0x9b, { 0x61 });
        gbc.writeMem(0x4f2d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x885f, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0309
        gbc.setState(0xafdb, 0xc01, 0xd2f0, 0x8aed, 0x7f1b, 0x83e9, 0x0, 0x0);
        gbc.writeMem(0x83e9, { 0x12 });
        gbc.writeMem(0xafdb, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0xafdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x83e9));
        EXPECT(0xcb, gbc.readMem(0xafdb));
        EXPECT(0x46, gbc.readMem(0xafdc));
        // CB 46 030A
        gbc.setState(0xc2e, 0xf552, 0x4700, 0x1bf5, 0xc3d6, 0xccac, 0x0, 0x1);
        gbc.writeMem(0xc2e, { 0xcb, 0x46 });
        gbc.writeMem(0xccac, { 0x6b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf552, gbc.sp());
        EXPECT(0xc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xccac));
        // CB 46 030B
        gbc.setState(0x8e83, 0x66c7, 0x19b0, 0x1bce, 0xf6b4, 0xb0b0, 0x1, 0x1);
        gbc.writeMem(0x8e83, { 0xcb, 0x46 });
        gbc.writeMem(0xb0b0, { 0xa3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e83));
        EXPECT(0x46, gbc.readMem(0x8e84));
        EXPECT(0xa3, gbc.readMem(0xb0b0));
        // CB 46 030C
        gbc.setState(0x7a6c, 0x72bd, 0xe4a0, 0xefa5, 0x48dd, 0x16da, 0x0, 0x0);
        gbc.writeMem(0x16da, { 0x6f });
        gbc.writeMem(0x7a6c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x72bd, gbc.sp());
        EXPECT(0x7a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 030D
        gbc.setState(0xcf8c, 0xddb4, 0x3150, 0xc2e4, 0x2083, 0xaf38, 0x0, 0x1);
        gbc.writeMem(0xaf38, { 0x1 });
        gbc.writeMem(0xcf8c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xddb4, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xaf38));
        EXPECT(0xcb, gbc.readMem(0xcf8c));
        EXPECT(0x46, gbc.readMem(0xcf8d));
        // CB 46 030E
        gbc.setState(0x9fa5, 0xe500, 0x22b0, 0x5e87, 0xf032, 0xd5, 0x0, 0x0);
        gbc.writeMem(0xd5, { 0x94 });
        gbc.writeMem(0x9fa5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe500, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa5));
        EXPECT(0x46, gbc.readMem(0x9fa6));
        // CB 46 030F
        gbc.setState(0x62ad, 0x5e6b, 0x4730, 0x9a48, 0xab36, 0x572d, 0x1, 0x1);
        gbc.writeMem(0x572d, { 0x52 });
        gbc.writeMem(0x62ad, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5e6b, gbc.sp());
        EXPECT(0x62af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0310
        gbc.setState(0x1d7c, 0x3b86, 0xf0b0, 0x10fb, 0x31e4, 0x3811, 0x0, 0x1);
        gbc.writeMem(0x1d7c, { 0xcb, 0x46 });
        gbc.writeMem(0x3811, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0x1d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0311
        gbc.setState(0x8fb4, 0x802e, 0xc060, 0xf6f7, 0x9ebe, 0x87ac, 0x1, 0x1);
        gbc.writeMem(0x87ac, { 0xb });
        gbc.writeMem(0x8fb4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x802e, gbc.sp());
        EXPECT(0x8fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x87ac));
        EXPECT(0xcb, gbc.readMem(0x8fb4));
        EXPECT(0x46, gbc.readMem(0x8fb5));
        // CB 46 0312
        gbc.setState(0xac42, 0x8392, 0x60a0, 0x5d3e, 0x8db2, 0x9587, 0x0, 0x1);
        gbc.writeMem(0x9587, { 0x46 });
        gbc.writeMem(0xac42, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8392, gbc.sp());
        EXPECT(0xac44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9587));
        EXPECT(0xcb, gbc.readMem(0xac42));
        EXPECT(0x46, gbc.readMem(0xac43));
        // CB 46 0313
        gbc.setState(0x5a3, 0x6bd1, 0xfc20, 0xfd6b, 0x9429, 0xb563, 0x1, 0x1);
        gbc.writeMem(0x5a3, { 0xcb, 0x46 });
        gbc.writeMem(0xb563, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6bd1, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb563));
        // CB 46 0314
        gbc.setState(0x24ca, 0x7a7a, 0x9200, 0x5117, 0xeae4, 0xd033, 0x1, 0x0);
        gbc.writeMem(0x24ca, { 0xcb, 0x46 });
        gbc.writeMem(0xd033, { 0x68 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a7a, gbc.sp());
        EXPECT(0x24cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd033));
        // CB 46 0315
        gbc.setState(0x38c6, 0x64f5, 0xad40, 0xcc, 0x7723, 0xe8a4, 0x0, 0x1);
        gbc.writeMem(0x38c6, { 0xcb, 0x46 });
        gbc.writeMem(0xe8a4, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64f5, gbc.sp());
        EXPECT(0x38c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe8a4));
        // CB 46 0317
        gbc.setState(0xb373, 0x3bcc, 0xf5d0, 0x382d, 0x1136, 0x143a, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0x46 });
        gbc.writeMem(0xb373, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb373));
        EXPECT(0x46, gbc.readMem(0xb374));
        // CB 46 0318
        gbc.setState(0x603, 0x176, 0x3d10, 0x662b, 0x2aa1, 0x2b99, 0x0, 0x1);
        gbc.writeMem(0x603, { 0xcb, 0x46 });
        gbc.writeMem(0x2b99, { 0x84 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x176, gbc.sp());
        EXPECT(0x605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0319
        gbc.setState(0xeb16, 0x650d, 0x5940, 0x8f50, 0xbe00, 0x132a, 0x1, 0x1);
        gbc.writeMem(0x132a, { 0x54 });
        gbc.writeMem(0xeb16, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0xeb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb16));
        EXPECT(0x46, gbc.readMem(0xeb17));
        // CB 46 031A
        gbc.setState(0xeafa, 0x2ee8, 0x9580, 0x17a, 0xfc16, 0x98bc, 0x1, 0x1);
        gbc.writeMem(0x98bc, { 0x90 });
        gbc.writeMem(0xeafa, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2ee8, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x98bc));
        EXPECT(0xcb, gbc.readMem(0xeafa));
        EXPECT(0x46, gbc.readMem(0xeafb));
        // CB 46 031B
        gbc.setState(0x439a, 0xf131, 0x2e10, 0xa258, 0x29ad, 0xe47f, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x46 });
        gbc.writeMem(0xe47f, { 0x84 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0x439c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe47f));
        // CB 46 031C
        gbc.setState(0x172c, 0x5fd8, 0xd340, 0xce9b, 0xc651, 0xfdbc, 0x0, 0x0);
        gbc.writeMem(0x172c, { 0xcb, 0x46 });
        gbc.writeMem(0xfdbc, { 0x1e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5fd8, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xfdbc));
        // CB 46 031D
        gbc.setState(0xcd3a, 0x48be, 0xdba0, 0xf0ba, 0xd2dd, 0x4c86, 0x1, 0x0);
        gbc.writeMem(0x4c86, { 0x53 });
        gbc.writeMem(0xcd3a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x48be, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3a));
        EXPECT(0x46, gbc.readMem(0xcd3b));
        // CB 46 031E
        gbc.setState(0xa695, 0xe53a, 0x1c30, 0xf3e6, 0x2e8a, 0xdf18, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0xcb, 0x46 });
        gbc.writeMem(0xdf18, { 0x11 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe53a, gbc.sp());
        EXPECT(0xa697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa695));
        EXPECT(0x46, gbc.readMem(0xa696));
        EXPECT(0x11, gbc.readMem(0xdf18));
        // CB 46 031F
        gbc.setState(0x71ec, 0xf0c2, 0x2b90, 0x7d9e, 0xd2d4, 0x269c, 0x0, 0x1);
        gbc.writeMem(0x269c, { 0x8d });
        gbc.writeMem(0x71ec, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0x71ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0320
        gbc.setState(0x346d, 0x5609, 0xa340, 0xc5cf, 0xf55c, 0xbb4a, 0x0, 0x1);
        gbc.writeMem(0x346d, { 0xcb, 0x46 });
        gbc.writeMem(0xbb4a, { 0x3f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5609, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xbb4a));
        // CB 46 0321
        gbc.setState(0xae3d, 0x5cca, 0x54c0, 0xb71e, 0x417a, 0x874e, 0x1, 0x0);
        gbc.writeMem(0x874e, { 0x9b });
        gbc.writeMem(0xae3d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5cca, gbc.sp());
        EXPECT(0xae3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x874e));
        EXPECT(0xcb, gbc.readMem(0xae3d));
        EXPECT(0x46, gbc.readMem(0xae3e));
        // CB 46 0322
        gbc.setState(0x57a, 0x2b01, 0x1c20, 0xde9f, 0x664, 0x81a, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0x46 });
        gbc.writeMem(0x81a, { 0xe1 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2b01, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0323
        gbc.setState(0x638d, 0x290f, 0xe080, 0x5dce, 0x973a, 0x5302, 0x1, 0x0);
        gbc.writeMem(0x5302, { 0x3a });
        gbc.writeMem(0x638d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x290f, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0324
        gbc.setState(0xe435, 0xf705, 0xcc10, 0x2d05, 0xe66c, 0x8212, 0x1, 0x0);
        gbc.writeMem(0x8212, { 0x71 });
        gbc.writeMem(0xe435, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8212));
        EXPECT(0xcb, gbc.readMem(0xe435));
        EXPECT(0x46, gbc.readMem(0xe436));
        // CB 46 0325
        gbc.setState(0x5e9a, 0xdc9a, 0x9a70, 0x1660, 0xc1eb, 0x4601, 0x0, 0x0);
        gbc.writeMem(0x4601, { 0xd3 });
        gbc.writeMem(0x5e9a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0326
        gbc.setState(0xbfec, 0x987d, 0xf280, 0x5208, 0xe346, 0x6fb2, 0x0, 0x1);
        gbc.writeMem(0x6fb2, { 0x50 });
        gbc.writeMem(0xbfec, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x987d, gbc.sp());
        EXPECT(0xbfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfec));
        EXPECT(0x46, gbc.readMem(0xbfed));
        // CB 46 0328
        gbc.setState(0x983d, 0xfb6b, 0x5fc0, 0x24f6, 0x6b9c, 0x9f30, 0x1, 0x0);
        gbc.writeMem(0x983d, { 0xcb, 0x46 });
        gbc.writeMem(0x9f30, { 0x71 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb6b, gbc.sp());
        EXPECT(0x983f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983d));
        EXPECT(0x46, gbc.readMem(0x983e));
        EXPECT(0x71, gbc.readMem(0x9f30));
        // CB 46 0329
        gbc.setState(0x91cd, 0xec00, 0xe750, 0xb85d, 0x4636, 0xce60, 0x1, 0x1);
        gbc.writeMem(0x91cd, { 0xcb, 0x46 });
        gbc.writeMem(0xce60, { 0x19 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec00, gbc.sp());
        EXPECT(0x91cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cd));
        EXPECT(0x46, gbc.readMem(0x91ce));
        EXPECT(0x19, gbc.readMem(0xce60));
        // CB 46 032A
        gbc.setState(0xc1e6, 0x77cf, 0x6dd0, 0x8263, 0xe3ed, 0xf867, 0x1, 0x0);
        gbc.writeMem(0xc1e6, { 0xcb, 0x46 });
        gbc.writeMem(0xf867, { 0x87 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x77cf, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e6));
        EXPECT(0x46, gbc.readMem(0xc1e7));
        EXPECT(0x87, gbc.readMem(0xf867));
        // CB 46 032B
        gbc.setState(0x90e7, 0x77a9, 0xa4c0, 0xd571, 0x366e, 0x9a2b, 0x1, 0x1);
        gbc.writeMem(0x90e7, { 0xcb, 0x46 });
        gbc.writeMem(0x9a2b, { 0x88 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e7));
        EXPECT(0x46, gbc.readMem(0x90e8));
        EXPECT(0x88, gbc.readMem(0x9a2b));
        // CB 46 032C
        gbc.setState(0x6fd0, 0x3452, 0xbf40, 0x25e5, 0xc6b2, 0x50b6, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0xad });
        gbc.writeMem(0x6fd0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0x6fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 032D
        gbc.setState(0xdc69, 0x5b08, 0xf830, 0xf715, 0x5b74, 0x5830, 0x1, 0x1);
        gbc.writeMem(0x5830, { 0xa1 });
        gbc.writeMem(0xdc69, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0xdc6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc69));
        EXPECT(0x46, gbc.readMem(0xdc6a));
        // CB 46 032E
        gbc.setState(0x986b, 0xa52a, 0xcf0, 0xdd6c, 0xc219, 0xa1c, 0x1, 0x0);
        gbc.writeMem(0xa1c, { 0xfc });
        gbc.writeMem(0x986b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa52a, gbc.sp());
        EXPECT(0x986d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986b));
        EXPECT(0x46, gbc.readMem(0x986c));
        // CB 46 032F
        gbc.setState(0x33a, 0x1c9d, 0x6eb0, 0x269d, 0xce85, 0x2b22, 0x1, 0x1);
        gbc.writeMem(0x33a, { 0xcb, 0x46 });
        gbc.writeMem(0x2b22, { 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0330
        gbc.setState(0xda24, 0xaec, 0x3fe0, 0xd62f, 0x529a, 0xee6e, 0x1, 0x0);
        gbc.writeMem(0xda24, { 0xcb, 0x46 });
        gbc.writeMem(0xee6e, { 0x7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaec, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda24));
        EXPECT(0x46, gbc.readMem(0xda25));
        EXPECT(0x7, gbc.readMem(0xee6e));
        // CB 46 0331
        gbc.setState(0x2c0d, 0x68ee, 0xec10, 0xe68d, 0xb63b, 0x66b5, 0x1, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0x46 });
        gbc.writeMem(0x66b5, { 0xc0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0332
        gbc.setState(0xa80d, 0xfc08, 0xc0a0, 0x1b5, 0xf24d, 0xf7fb, 0x0, 0x0);
        gbc.writeMem(0xa80d, { 0xcb, 0x46 });
        gbc.writeMem(0xf7fb, { 0xf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0x46, gbc.readMem(0xa80e));
        EXPECT(0xf, gbc.readMem(0xf7fb));
        // CB 46 0333
        gbc.setState(0xa654, 0xc132, 0xccb0, 0x2cfc, 0x2a42, 0x1591, 0x0, 0x0);
        gbc.writeMem(0x1591, { 0x9c });
        gbc.writeMem(0xa654, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc132, gbc.sp());
        EXPECT(0xa656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa654));
        EXPECT(0x46, gbc.readMem(0xa655));
        // CB 46 0334
        gbc.setState(0x686f, 0x2a7e, 0xec20, 0xe3bb, 0x3224, 0xa06c, 0x0, 0x0);
        gbc.writeMem(0x686f, { 0xcb, 0x46 });
        gbc.writeMem(0xa06c, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0x6871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa06c));
        // CB 46 0335
        gbc.setState(0xd17c, 0x760d, 0xa7b0, 0x2e43, 0x730c, 0x9398, 0x0, 0x0);
        gbc.writeMem(0x9398, { 0x13 });
        gbc.writeMem(0xd17c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9398));
        EXPECT(0xcb, gbc.readMem(0xd17c));
        EXPECT(0x46, gbc.readMem(0xd17d));
        // CB 46 0336
        gbc.setState(0xe90, 0xc504, 0x4d30, 0x507a, 0xec7f, 0xd87f, 0x1, 0x0);
        gbc.writeMem(0xe90, { 0xcb, 0x46 });
        gbc.writeMem(0xd87f, { 0xa6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc504, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd87f));
        // CB 46 0337
        gbc.setState(0x2fd8, 0xbb1b, 0xd3f0, 0x486e, 0xc62, 0xf412, 0x1, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0x46 });
        gbc.writeMem(0xf412, { 0xc0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0x2fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf412));
        // CB 46 0338
        gbc.setState(0x329e, 0x10c3, 0x7210, 0xd0b4, 0xad7c, 0xd189, 0x1, 0x0);
        gbc.writeMem(0x329e, { 0xcb, 0x46 });
        gbc.writeMem(0xd189, { 0x95 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0x32a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd189));
        // CB 46 0339
        gbc.setState(0x7329, 0x840, 0xc6e0, 0xc035, 0x228f, 0x477f, 0x1, 0x1);
        gbc.writeMem(0x477f, { 0x9e });
        gbc.writeMem(0x7329, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x840, gbc.sp());
        EXPECT(0x732b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 033A
        gbc.setState(0x85be, 0xc1be, 0xe980, 0x28e8, 0xfc08, 0x167e, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0x80 });
        gbc.writeMem(0x85be, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc1be, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85be));
        EXPECT(0x46, gbc.readMem(0x85bf));
        // CB 46 033B
        gbc.setState(0x8cb8, 0x960a, 0xa070, 0x5045, 0xab43, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x8cb8, { 0xcb, 0x46 });
        gbc.writeMem(0xb427, { 0x2e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb8));
        EXPECT(0x46, gbc.readMem(0x8cb9));
        EXPECT(0x2e, gbc.readMem(0xb427));
        // CB 46 033C
        gbc.setState(0x2cde, 0x4e18, 0xe4f0, 0x2df8, 0x95b5, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0x2cde, { 0xcb, 0x46 });
        gbc.writeMem(0xdc62, { 0x6e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0x2ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdc62));
        // CB 46 033D
        gbc.setState(0x2415, 0x8a54, 0xc50, 0x5859, 0x7d5c, 0x79a3, 0x0, 0x0);
        gbc.writeMem(0x2415, { 0xcb, 0x46 });
        gbc.writeMem(0x79a3, { 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8a54, gbc.sp());
        EXPECT(0x2417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 033E
        gbc.setState(0x2f5b, 0x6da1, 0x2880, 0xbe8b, 0xe5e7, 0xf278, 0x0, 0x1);
        gbc.writeMem(0x2f5b, { 0xcb, 0x46 });
        gbc.writeMem(0xf278, { 0xdd });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x2f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf278));
        // CB 46 033F
        gbc.setState(0x4574, 0x13b7, 0x14a0, 0xa501, 0x1be, 0x5bd0, 0x0, 0x0);
        gbc.writeMem(0x4574, { 0xcb, 0x46 });
        gbc.writeMem(0x5bd0, { 0x62 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x13b7, gbc.sp());
        EXPECT(0x4576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0340
        gbc.setState(0xb012, 0x891f, 0xe0b0, 0xacaf, 0x7a93, 0x1e3f, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0xc9 });
        gbc.writeMem(0xb012, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xb014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb012));
        EXPECT(0x46, gbc.readMem(0xb013));
        // CB 46 0341
        gbc.setState(0xab72, 0x70ae, 0x54c0, 0x81cb, 0x8259, 0x751d, 0x1, 0x0);
        gbc.writeMem(0x751d, { 0xb7 });
        gbc.writeMem(0xab72, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x70ae, gbc.sp());
        EXPECT(0xab74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab72));
        EXPECT(0x46, gbc.readMem(0xab73));
        // CB 46 0342
        gbc.setState(0x1bac, 0x5fde, 0xfb20, 0x24d3, 0x222a, 0xec8a, 0x0, 0x0);
        gbc.writeMem(0x1bac, { 0xcb, 0x46 });
        gbc.writeMem(0xec8a, { 0x18 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xec8a));
        // CB 46 0343
        gbc.setState(0x9d0e, 0xa184, 0x91a0, 0xbf1c, 0xc7d7, 0x4b81, 0x1, 0x0);
        gbc.writeMem(0x4b81, { 0x75 });
        gbc.writeMem(0x9d0e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa184, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0e));
        EXPECT(0x46, gbc.readMem(0x9d0f));
        // CB 46 0344
        gbc.setState(0x3975, 0x45e5, 0xdeb0, 0x2473, 0x5cf2, 0x4b4e, 0x0, 0x0);
        gbc.writeMem(0x3975, { 0xcb, 0x46 });
        gbc.writeMem(0x4b4e, { 0x86 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x45e5, gbc.sp());
        EXPECT(0x3977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0345
        gbc.setState(0x4a30, 0xfe25, 0xa000, 0xa40f, 0x3ec3, 0x83d0, 0x0, 0x0);
        gbc.writeMem(0x4a30, { 0xcb, 0x46 });
        gbc.writeMem(0x83d0, { 0x78 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfe25, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x83d0));
        // CB 46 0346
        gbc.setState(0x852f, 0xa310, 0x4450, 0x787c, 0x67f1, 0xf804, 0x1, 0x1);
        gbc.writeMem(0x852f, { 0xcb, 0x46 });
        gbc.writeMem(0xf804, { 0xaf });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa310, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852f));
        EXPECT(0x46, gbc.readMem(0x8530));
        EXPECT(0xaf, gbc.readMem(0xf804));
        // CB 46 0347
        gbc.setState(0xcba1, 0xd017, 0x4670, 0xbcc2, 0x56c5, 0xc7c, 0x1, 0x0);
        gbc.writeMem(0xc7c, { 0xa5 });
        gbc.writeMem(0xcba1, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd017, gbc.sp());
        EXPECT(0xcba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba1));
        EXPECT(0x46, gbc.readMem(0xcba2));
        // CB 46 0348
        gbc.setState(0xd9d7, 0x248b, 0x8020, 0xd0d9, 0xed77, 0x8ad3, 0x0, 0x0);
        gbc.writeMem(0x8ad3, { 0xde });
        gbc.writeMem(0xd9d7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0xd9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8ad3));
        EXPECT(0xcb, gbc.readMem(0xd9d7));
        EXPECT(0x46, gbc.readMem(0xd9d8));
        // CB 46 0349
        gbc.setState(0xc3c8, 0x5b77, 0x6bd0, 0x4228, 0x78da, 0xe5e1, 0x0, 0x0);
        gbc.writeMem(0xc3c8, { 0xcb, 0x46 });
        gbc.writeMem(0xe5e1, { 0x29 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b77, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c8));
        EXPECT(0x46, gbc.readMem(0xc3c9));
        EXPECT(0x29, gbc.readMem(0xe5e1));
        // CB 46 034A
        gbc.setState(0x460f, 0x5042, 0x4190, 0xdcee, 0x50f8, 0x4bfa, 0x1, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0x46 });
        gbc.writeMem(0x4bfa, { 0x1d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5042, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 034B
        gbc.setState(0xa1d8, 0x7f8b, 0x51b0, 0x9e83, 0xfbf1, 0x5ffe, 0x0, 0x0);
        gbc.writeMem(0x5ffe, { 0x62 });
        gbc.writeMem(0xa1d8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7f8b, gbc.sp());
        EXPECT(0xa1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d8));
        EXPECT(0x46, gbc.readMem(0xa1d9));
        // CB 46 034C
        gbc.setState(0x610a, 0x81ae, 0x4900, 0xdd20, 0x7082, 0xb5f5, 0x1, 0x0);
        gbc.writeMem(0x610a, { 0xcb, 0x46 });
        gbc.writeMem(0xb5f5, { 0x61 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x81ae, gbc.sp());
        EXPECT(0x610c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb5f5));
        // CB 46 034D
        gbc.setState(0x6c10, 0x3d55, 0xcaf0, 0x176f, 0x6ca1, 0xc25a, 0x1, 0x1);
        gbc.writeMem(0x6c10, { 0xcb, 0x46 });
        gbc.writeMem(0xc25a, { 0x5b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3d55, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc25a));
        // CB 46 034E
        gbc.setState(0xdc1f, 0x2c86, 0xf370, 0x5447, 0x6646, 0x22b, 0x1, 0x1);
        gbc.writeMem(0x22b, { 0x1e });
        gbc.writeMem(0xdc1f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0xdc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1f));
        EXPECT(0x46, gbc.readMem(0xdc20));
        // CB 46 0350
        gbc.setState(0xffe, 0x5d6a, 0x4470, 0x8ee8, 0x88e0, 0x4fe2, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x46 });
        gbc.writeMem(0x4fe2, { 0x63 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0351
        gbc.setState(0xd0c6, 0x128d, 0x88b0, 0x8f2, 0x1e49, 0x588a, 0x1, 0x0);
        gbc.writeMem(0x588a, { 0xf1 });
        gbc.writeMem(0xd0c6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x128d, gbc.sp());
        EXPECT(0xd0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c6));
        EXPECT(0x46, gbc.readMem(0xd0c7));
        // CB 46 0352
        gbc.setState(0x17c7, 0x9168, 0x54e0, 0xb299, 0x64ae, 0x90e, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0x3e });
        gbc.writeMem(0x17c7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9168, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0354
        gbc.setState(0xb170, 0x8a21, 0x7600, 0xd41, 0x98de, 0xe9d8, 0x0, 0x1);
        gbc.writeMem(0xb170, { 0xcb, 0x46 });
        gbc.writeMem(0xe9d8, { 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb170));
        EXPECT(0x46, gbc.readMem(0xb171));
        EXPECT(0x7e, gbc.readMem(0xe9d8));
        // CB 46 0355
        gbc.setState(0x471e, 0x95c, 0xfc40, 0xad8e, 0xe764, 0x130b, 0x1, 0x0);
        gbc.writeMem(0x130b, { 0x12 });
        gbc.writeMem(0x471e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0356
        gbc.setState(0x19b4, 0x6b71, 0x9980, 0xe415, 0xe3ac, 0x2df6, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0xcb, 0x46 });
        gbc.writeMem(0x2df6, { 0x31 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6b71, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0357
        gbc.setState(0x7ecd, 0xfec8, 0x7750, 0xa874, 0xe9fe, 0x37c0, 0x0, 0x0);
        gbc.writeMem(0x37c0, { 0x90 });
        gbc.writeMem(0x7ecd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfec8, gbc.sp());
        EXPECT(0x7ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0358
        gbc.setState(0xbc17, 0x1885, 0xc730, 0xf0b1, 0x3d28, 0x3193, 0x1, 0x1);
        gbc.writeMem(0x3193, { 0x86 });
        gbc.writeMem(0xbc17, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1885, gbc.sp());
        EXPECT(0xbc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc17));
        EXPECT(0x46, gbc.readMem(0xbc18));
        // CB 46 0359
        gbc.setState(0x2e7b, 0xb25d, 0x5f60, 0x2377, 0xc1b0, 0x2e36, 0x0, 0x0);
        gbc.writeMem(0x2e36, { 0x1b });
        gbc.writeMem(0x2e7b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb25d, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 035A
        gbc.setState(0x35c7, 0xa934, 0x35d0, 0x26e, 0x364, 0xc4ec, 0x1, 0x1);
        gbc.writeMem(0x35c7, { 0xcb, 0x46 });
        gbc.writeMem(0xc4ec, { 0x81 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa934, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc4ec));
        // CB 46 035B
        gbc.setState(0xad2e, 0xc9ec, 0x8c10, 0x4e8b, 0x67c6, 0x5b01, 0x0, 0x0);
        gbc.writeMem(0x5b01, { 0x2 });
        gbc.writeMem(0xad2e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc9ec, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0x46, gbc.readMem(0xad2f));
        // CB 46 035C
        gbc.setState(0x2a3f, 0x5a89, 0x7670, 0xa0b6, 0xe7fb, 0x4935, 0x1, 0x0);
        gbc.writeMem(0x2a3f, { 0xcb, 0x46 });
        gbc.writeMem(0x4935, { 0x70 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0x2a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 035D
        gbc.setState(0x4347, 0x14bc, 0x4c30, 0x46f5, 0xc827, 0xcb3d, 0x1, 0x0);
        gbc.writeMem(0x4347, { 0xcb, 0x46 });
        gbc.writeMem(0xcb3d, { 0xee });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x14bc, gbc.sp());
        EXPECT(0x4349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcb3d));
        // CB 46 035E
        gbc.setState(0x3ff9, 0xfe37, 0xce0, 0xe52e, 0xa965, 0x498d, 0x0, 0x0);
        gbc.writeMem(0x3ff9, { 0xcb, 0x46 });
        gbc.writeMem(0x498d, { 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x3ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 035F
        gbc.setState(0xc100, 0xf58f, 0xa390, 0xb5be, 0x2362, 0x4f0c, 0x0, 0x1);
        gbc.writeMem(0x4f0c, { 0x83 });
        gbc.writeMem(0xc100, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf58f, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc100));
        EXPECT(0x46, gbc.readMem(0xc101));
        // CB 46 0360
        gbc.setState(0x1d86, 0x5f2a, 0x1f90, 0xb336, 0x4826, 0x81ad, 0x0, 0x1);
        gbc.writeMem(0x1d86, { 0xcb, 0x46 });
        gbc.writeMem(0x81ad, { 0xe1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0x1d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x81ad));
        // CB 46 0361
        gbc.setState(0xe866, 0xdfa0, 0x1060, 0xca35, 0xff21, 0xc14, 0x1, 0x0);
        gbc.writeMem(0xc14, { 0xe9 });
        gbc.writeMem(0xe866, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xe868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe866));
        EXPECT(0x46, gbc.readMem(0xe867));
        // CB 46 0362
        gbc.setState(0x681, 0x19b9, 0x68d0, 0xfcc7, 0xc98b, 0x1afc, 0x0, 0x0);
        gbc.writeMem(0x681, { 0xcb, 0x46 });
        gbc.writeMem(0x1afc, { 0x8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x19b9, gbc.sp());
        EXPECT(0x683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0363
        gbc.setState(0x29c7, 0xee00, 0xbd50, 0x1975, 0x2a4f, 0xfd29, 0x0, 0x1);
        gbc.writeMem(0x29c7, { 0xcb, 0x46 });
        gbc.writeMem(0xfd29, { 0x93 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xee00, gbc.sp());
        EXPECT(0x29c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xfd29));
        // CB 46 0364
        gbc.setState(0x16a7, 0x841, 0xd8f0, 0x968, 0xa4c8, 0x5c5a, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0xcb, 0x46 });
        gbc.writeMem(0x5c5a, { 0xdd });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x841, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0365
        gbc.setState(0x8e6f, 0x9914, 0x5dd0, 0x175b, 0x1e12, 0x4807, 0x0, 0x0);
        gbc.writeMem(0x4807, { 0xfd });
        gbc.writeMem(0x8e6f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9914, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6f));
        EXPECT(0x46, gbc.readMem(0x8e70));
        // CB 46 0366
        gbc.setState(0xa09f, 0x2f19, 0x3820, 0xc412, 0x49d1, 0xa307, 0x1, 0x0);
        gbc.writeMem(0xa09f, { 0xcb, 0x46 });
        gbc.writeMem(0xa307, { 0x90 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09f));
        EXPECT(0x46, gbc.readMem(0xa0a0));
        EXPECT(0x90, gbc.readMem(0xa307));
        // CB 46 0367
        gbc.setState(0xce3e, 0x7d22, 0x2f0, 0xee91, 0xd4d8, 0x42a5, 0x0, 0x0);
        gbc.writeMem(0x42a5, { 0xa6 });
        gbc.writeMem(0xce3e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7d22, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3e));
        EXPECT(0x46, gbc.readMem(0xce3f));
        // CB 46 0368
        gbc.setState(0x3c76, 0x713a, 0xc160, 0x70b8, 0xc8e3, 0x283c, 0x1, 0x1);
        gbc.writeMem(0x283c, { 0x9 });
        gbc.writeMem(0x3c76, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x713a, gbc.sp());
        EXPECT(0x3c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0369
        gbc.setState(0x670b, 0x4ee7, 0x7190, 0x7071, 0x9e10, 0x3c31, 0x0, 0x0);
        gbc.writeMem(0x3c31, { 0x8c });
        gbc.writeMem(0x670b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4ee7, gbc.sp());
        EXPECT(0x670d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 036A
        gbc.setState(0x9a20, 0xf88, 0x9610, 0xb25c, 0x7944, 0xab8c, 0x0, 0x0);
        gbc.writeMem(0x9a20, { 0xcb, 0x46 });
        gbc.writeMem(0xab8c, { 0x71 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a20));
        EXPECT(0x46, gbc.readMem(0x9a21));
        EXPECT(0x71, gbc.readMem(0xab8c));
        // CB 46 036B
        gbc.setState(0x5194, 0x17ee, 0x5b40, 0x8f55, 0x8ef, 0x846b, 0x1, 0x0);
        gbc.writeMem(0x5194, { 0xcb, 0x46 });
        gbc.writeMem(0x846b, { 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x17ee, gbc.sp());
        EXPECT(0x5196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x846b));
        // CB 46 036C
        gbc.setState(0x4eec, 0xbbc5, 0xa440, 0xe186, 0x5b8a, 0xc297, 0x1, 0x1);
        gbc.writeMem(0x4eec, { 0xcb, 0x46 });
        gbc.writeMem(0xc297, { 0xd1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0x4eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc297));
        // CB 46 036D
        gbc.setState(0x9a8f, 0x696d, 0xb7f0, 0xbbfc, 0xb864, 0x32bb, 0x1, 0x1);
        gbc.writeMem(0x32bb, { 0xc9 });
        gbc.writeMem(0x9a8f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x696d, gbc.sp());
        EXPECT(0x9a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8f));
        EXPECT(0x46, gbc.readMem(0x9a90));
        // CB 46 036E
        gbc.setState(0x124, 0xb3dc, 0x3130, 0xce89, 0xc684, 0x2a2c, 0x0, 0x1);
        gbc.writeMem(0x124, { 0xcb, 0x46 });
        gbc.writeMem(0x2a2c, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0x126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 036F
        gbc.setState(0xd1f4, 0x94b6, 0x7730, 0x6ec6, 0xe6ad, 0xb06a, 0x1, 0x1);
        gbc.writeMem(0xb06a, { 0xc8 });
        gbc.writeMem(0xd1f4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0xd1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb06a));
        EXPECT(0xcb, gbc.readMem(0xd1f4));
        EXPECT(0x46, gbc.readMem(0xd1f5));
        // CB 46 0370
        gbc.setState(0xb93c, 0xca66, 0xfd30, 0x213b, 0x93f0, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x5796, { 0xcf });
        gbc.writeMem(0xb93c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93c));
        EXPECT(0x46, gbc.readMem(0xb93d));
        // CB 46 0371
        gbc.setState(0xeb99, 0xa59c, 0x6930, 0xfc02, 0xccfd, 0x318d, 0x0, 0x1);
        gbc.writeMem(0x318d, { 0xd1 });
        gbc.writeMem(0xeb99, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0xeb9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb99));
        EXPECT(0x46, gbc.readMem(0xeb9a));
        // CB 46 0372
        gbc.setState(0xb784, 0x908b, 0x3ef0, 0xe872, 0x895f, 0x9061, 0x0, 0x1);
        gbc.writeMem(0x9061, { 0x27 });
        gbc.writeMem(0xb784, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9061));
        EXPECT(0xcb, gbc.readMem(0xb784));
        EXPECT(0x46, gbc.readMem(0xb785));
        // CB 46 0373
        gbc.setState(0x38d6, 0xfc14, 0x5770, 0x3b40, 0x6e82, 0x7d42, 0x0, 0x0);
        gbc.writeMem(0x38d6, { 0xcb, 0x46 });
        gbc.writeMem(0x7d42, { 0x3a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfc14, gbc.sp());
        EXPECT(0x38d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0374
        gbc.setState(0x27b0, 0x90b4, 0xef40, 0xa46a, 0xf078, 0xeb2c, 0x1, 0x0);
        gbc.writeMem(0x27b0, { 0xcb, 0x46 });
        gbc.writeMem(0xeb2c, { 0x32 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0x27b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xeb2c));
        // CB 46 0375
        gbc.setState(0x53f9, 0xa22e, 0x9430, 0x3f8e, 0x7845, 0xc38a, 0x1, 0x0);
        gbc.writeMem(0x53f9, { 0xcb, 0x46 });
        gbc.writeMem(0xc38a, { 0xd8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc38a));
        // CB 46 0376
        gbc.setState(0x4854, 0x298d, 0x7e70, 0x2369, 0x4588, 0xe313, 0x1, 0x0);
        gbc.writeMem(0x4854, { 0xcb, 0x46 });
        gbc.writeMem(0xe313, { 0xc2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x298d, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe313));
        // CB 46 0377
        gbc.setState(0x725d, 0xf73f, 0xab20, 0x56f4, 0xa69c, 0x8533, 0x0, 0x1);
        gbc.writeMem(0x725d, { 0xcb, 0x46 });
        gbc.writeMem(0x8533, { 0x23 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0x725f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8533));
        // CB 46 0378
        gbc.setState(0x671b, 0x7f60, 0x4c80, 0xdc56, 0x6fb2, 0x1ec1, 0x0, 0x0);
        gbc.writeMem(0x1ec1, { 0x73 });
        gbc.writeMem(0x671b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0x671d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0379
        gbc.setState(0xd940, 0x9d74, 0x7ec0, 0xacfa, 0xd1c4, 0x3ee1, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0x7e });
        gbc.writeMem(0xd940, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0xd942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd940));
        EXPECT(0x46, gbc.readMem(0xd941));
        // CB 46 037A
        gbc.setState(0x70ae, 0x4411, 0xe7a0, 0xc8cc, 0xf0ff, 0x65f8, 0x1, 0x0);
        gbc.writeMem(0x65f8, { 0x5b });
        gbc.writeMem(0x70ae, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0x70b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 037B
        gbc.setState(0x64d3, 0x392f, 0xa080, 0xe13b, 0x618, 0xd743, 0x0, 0x1);
        gbc.writeMem(0x64d3, { 0xcb, 0x46 });
        gbc.writeMem(0xd743, { 0x36 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0x64d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd743));
        // CB 46 037C
        gbc.setState(0x9a3a, 0xc7af, 0x8f80, 0xf773, 0x4bc1, 0xa5cb, 0x1, 0x0);
        gbc.writeMem(0x9a3a, { 0xcb, 0x46 });
        gbc.writeMem(0xa5cb, { 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc7af, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3a));
        EXPECT(0x46, gbc.readMem(0x9a3b));
        EXPECT(0xc, gbc.readMem(0xa5cb));
        // CB 46 037D
        gbc.setState(0x8049, 0x9fed, 0xe4d0, 0x2635, 0x2daf, 0x924d, 0x0, 0x1);
        gbc.writeMem(0x8049, { 0xcb, 0x46 });
        gbc.writeMem(0x924d, { 0xfa });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9fed, gbc.sp());
        EXPECT(0x804b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8049));
        EXPECT(0x46, gbc.readMem(0x804a));
        EXPECT(0xfa, gbc.readMem(0x924d));
        // CB 46 037E
        gbc.setState(0xd7a2, 0xe8e9, 0x16d0, 0x51a3, 0x43fc, 0x30fa, 0x0, 0x1);
        gbc.writeMem(0x30fa, { 0x77 });
        gbc.writeMem(0xd7a2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a2));
        EXPECT(0x46, gbc.readMem(0xd7a3));
        // CB 46 037F
        gbc.setState(0x99, 0xafa2, 0x30f0, 0x5e37, 0x6354, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0x99, { 0xcb, 0x46 });
        gbc.writeMem(0xcbb6, { 0x3d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0x9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xcbb6));
        // CB 46 0380
        gbc.setState(0x52e7, 0x92ca, 0xe8c0, 0x1e76, 0x2f06, 0xe00a, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0xcb, 0x46 });
        gbc.writeMem(0xe00a, { 0x77 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x92ca, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xe00a));
        // CB 46 0381
        gbc.setState(0xc560, 0xe242, 0x28d0, 0xe233, 0x30e7, 0x6747, 0x1, 0x0);
        gbc.writeMem(0x6747, { 0x6c });
        gbc.writeMem(0xc560, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe242, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc560));
        EXPECT(0x46, gbc.readMem(0xc561));
        // CB 46 0382
        gbc.setState(0x6a10, 0xbd79, 0x4cb0, 0xe79d, 0xde3a, 0xbee0, 0x1, 0x1);
        gbc.writeMem(0x6a10, { 0xcb, 0x46 });
        gbc.writeMem(0xbee0, { 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbd79, gbc.sp());
        EXPECT(0x6a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbee0));
        // CB 46 0383
        gbc.setState(0x2626, 0xc2e3, 0xfe40, 0xc0fd, 0x847b, 0xa5f0, 0x1, 0x1);
        gbc.writeMem(0x2626, { 0xcb, 0x46 });
        gbc.writeMem(0xa5f0, { 0xeb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc2e3, gbc.sp());
        EXPECT(0x2628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa5f0));
        // CB 46 0384
        gbc.setState(0x96ca, 0xd3a0, 0xb760, 0x6da0, 0x62b2, 0x39fd, 0x0, 0x1);
        gbc.writeMem(0x39fd, { 0xe2 });
        gbc.writeMem(0x96ca, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd3a0, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ca));
        EXPECT(0x46, gbc.readMem(0x96cb));
        // CB 46 0385
        gbc.setState(0x5997, 0x28af, 0x9ee0, 0x940f, 0x4f76, 0xab23, 0x0, 0x0);
        gbc.writeMem(0x5997, { 0xcb, 0x46 });
        gbc.writeMem(0xab23, { 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0x5999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xab23));
        // CB 46 0386
        gbc.setState(0xdcfd, 0xa427, 0x1110, 0x5677, 0xa524, 0x34c7, 0x1, 0x0);
        gbc.writeMem(0x34c7, { 0x3d });
        gbc.writeMem(0xdcfd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0xdcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfd));
        EXPECT(0x46, gbc.readMem(0xdcfe));
        // CB 46 0387
        gbc.setState(0xee74, 0xd294, 0xf770, 0x2665, 0xa614, 0x38ee, 0x0, 0x1);
        gbc.writeMem(0x38ee, { 0xd0 });
        gbc.writeMem(0xee74, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd294, gbc.sp());
        EXPECT(0xee76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee74));
        EXPECT(0x46, gbc.readMem(0xee75));
        // CB 46 0388
        gbc.setState(0xe79f, 0xd27c, 0xbce0, 0x4e4, 0x6f54, 0x427b, 0x1, 0x1);
        gbc.writeMem(0x427b, { 0xf8 });
        gbc.writeMem(0xe79f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79f));
        EXPECT(0x46, gbc.readMem(0xe7a0));
        // CB 46 0389
        gbc.setState(0x799d, 0x7b71, 0xfe40, 0x3df5, 0x8cf4, 0x5930, 0x1, 0x0);
        gbc.writeMem(0x5930, { 0xd9 });
        gbc.writeMem(0x799d, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 038A
        gbc.setState(0x3bd, 0xb96f, 0xb580, 0x5173, 0x1bdb, 0x527c, 0x0, 0x1);
        gbc.writeMem(0x3bd, { 0xcb, 0x46 });
        gbc.writeMem(0x527c, { 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb96f, gbc.sp());
        EXPECT(0x3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 038C
        gbc.setState(0x9de0, 0x3536, 0x33c0, 0x46c4, 0xd3d7, 0x65d1, 0x0, 0x1);
        gbc.writeMem(0x65d1, { 0x9c });
        gbc.writeMem(0x9de0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de0));
        EXPECT(0x46, gbc.readMem(0x9de1));
        // CB 46 038D
        gbc.setState(0xd64, 0xab1e, 0x8110, 0x7a1a, 0x3c0c, 0x9cb4, 0x1, 0x0);
        gbc.writeMem(0xd64, { 0xcb, 0x46 });
        gbc.writeMem(0x9cb4, { 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xab1e, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9cb4));
        // CB 46 038E
        gbc.setState(0xdb84, 0x1e14, 0x12c0, 0xb39e, 0x1eac, 0x5402, 0x0, 0x0);
        gbc.writeMem(0x5402, { 0xec });
        gbc.writeMem(0xdb84, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb84));
        EXPECT(0x46, gbc.readMem(0xdb85));
        // CB 46 038F
        gbc.setState(0xe4c7, 0x27e9, 0x2ff0, 0x72a0, 0x2563, 0x65c, 0x1, 0x0);
        gbc.writeMem(0x65c, { 0x84 });
        gbc.writeMem(0xe4c7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x27e9, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c7));
        EXPECT(0x46, gbc.readMem(0xe4c8));
        // CB 46 0390
        gbc.setState(0x5575, 0xad96, 0x7de0, 0x1a7a, 0x72eb, 0xf9ae, 0x1, 0x0);
        gbc.writeMem(0x5575, { 0xcb, 0x46 });
        gbc.writeMem(0xf9ae, { 0x9f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0x5577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xf9ae));
        // CB 46 0391
        gbc.setState(0xead, 0x541a, 0x9c10, 0x7b13, 0xb774, 0x65eb, 0x0, 0x0);
        gbc.writeMem(0xead, { 0xcb, 0x46 });
        gbc.writeMem(0x65eb, { 0xc8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x541a, gbc.sp());
        EXPECT(0xeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0392
        gbc.setState(0x8cc9, 0xb014, 0x1c50, 0xdbee, 0x8c13, 0x619, 0x1, 0x0);
        gbc.writeMem(0x619, { 0xcb });
        gbc.writeMem(0x8cc9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb014, gbc.sp());
        EXPECT(0x8ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc9));
        EXPECT(0x46, gbc.readMem(0x8cca));
        // CB 46 0393
        gbc.setState(0x82ee, 0x1469, 0x73b0, 0x75ee, 0xd423, 0x362b, 0x0, 0x1);
        gbc.writeMem(0x362b, { 0x8b });
        gbc.writeMem(0x82ee, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x82f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ee));
        EXPECT(0x46, gbc.readMem(0x82ef));
        // CB 46 0394
        gbc.setState(0x731b, 0x197, 0x14b0, 0x79e4, 0x70e5, 0x6e0b, 0x0, 0x0);
        gbc.writeMem(0x6e0b, { 0x1c });
        gbc.writeMem(0x731b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0395
        gbc.setState(0x27b8, 0x73a7, 0xc750, 0x406, 0xa1d2, 0x197a, 0x1, 0x0);
        gbc.writeMem(0x197a, { 0xf0 });
        gbc.writeMem(0x27b8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0396
        gbc.setState(0x3b44, 0xb53, 0x6290, 0x6bc0, 0x63cf, 0x6c44, 0x1, 0x0);
        gbc.writeMem(0x3b44, { 0xcb, 0x46 });
        gbc.writeMem(0x6c44, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x3b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 0397
        gbc.setState(0x7fca, 0xc8c0, 0x4ac0, 0x90a0, 0xca94, 0x3cbb, 0x1, 0x1);
        gbc.writeMem(0x3cbb, { 0xeb });
        gbc.writeMem(0x7fca, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc8c0, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 0398
        gbc.setState(0x4b5e, 0x9967, 0x41d0, 0x704a, 0x7a36, 0x8c7b, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0xcb, 0x46 });
        gbc.writeMem(0x8c7b, { 0x70 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8c7b));
        // CB 46 0399
        gbc.setState(0xbfe9, 0x4f3c, 0x3410, 0x9145, 0x3df, 0x8e31, 0x0, 0x0);
        gbc.writeMem(0x8e31, { 0x22 });
        gbc.writeMem(0xbfe9, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8e31));
        EXPECT(0xcb, gbc.readMem(0xbfe9));
        EXPECT(0x46, gbc.readMem(0xbfea));
        // CB 46 039A
        gbc.setState(0xc7b8, 0x70a, 0xc50, 0x426b, 0xd5a2, 0xa90f, 0x0, 0x0);
        gbc.writeMem(0xa90f, { 0x7a });
        gbc.writeMem(0xc7b8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x70a, gbc.sp());
        EXPECT(0xc7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa90f));
        EXPECT(0xcb, gbc.readMem(0xc7b8));
        EXPECT(0x46, gbc.readMem(0xc7b9));
        // CB 46 039B
        gbc.setState(0xcb4b, 0xc64b, 0x10a0, 0x533e, 0x5f9a, 0xc297, 0x0, 0x0);
        gbc.writeMem(0xc297, { 0xd1 });
        gbc.writeMem(0xcb4b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc64b, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc297));
        EXPECT(0xcb, gbc.readMem(0xcb4b));
        EXPECT(0x46, gbc.readMem(0xcb4c));
        // CB 46 039C
        gbc.setState(0x9dd0, 0x4104, 0xbfa0, 0x176, 0x7615, 0x651b, 0x1, 0x1);
        gbc.writeMem(0x651b, { 0xab });
        gbc.writeMem(0x9dd0, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4104, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd0));
        EXPECT(0x46, gbc.readMem(0x9dd1));
        // CB 46 039D
        gbc.setState(0x7ff8, 0xad75, 0xc8b0, 0x88f0, 0x6fcf, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0x1e4d, { 0x97 });
        gbc.writeMem(0x7ff8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x7ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 039F
        gbc.setState(0x5b57, 0x8302, 0xfad0, 0x4473, 0x6e10, 0x2447, 0x0, 0x0);
        gbc.writeMem(0x2447, { 0xf5 });
        gbc.writeMem(0x5b57, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8302, gbc.sp());
        EXPECT(0x5b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 03A0
        gbc.setState(0x2b36, 0x3cb0, 0x1a00, 0x6f14, 0x1e0b, 0x4783, 0x0, 0x1);
        gbc.writeMem(0x2b36, { 0xcb, 0x46 });
        gbc.writeMem(0x4783, { 0xdd });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03A1
        gbc.setState(0x4e3a, 0xc561, 0x13e0, 0x5236, 0xebea, 0xcff5, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0xcb, 0x46 });
        gbc.writeMem(0xcff5, { 0x90 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc561, gbc.sp());
        EXPECT(0x4e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xcff5));
        // CB 46 03A2
        gbc.setState(0xe080, 0xd4b0, 0xee50, 0xe4cd, 0x165, 0x16d1, 0x1, 0x0);
        gbc.writeMem(0x16d1, { 0x0 });
        gbc.writeMem(0xe080, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0xe082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe080));
        EXPECT(0x46, gbc.readMem(0xe081));
        // CB 46 03A4
        gbc.setState(0x1a56, 0x9989, 0x4710, 0xa6b8, 0x88ce, 0xe886, 0x0, 0x1);
        gbc.writeMem(0x1a56, { 0xcb, 0x46 });
        gbc.writeMem(0xe886, { 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x1a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe886));
        // CB 46 03A5
        gbc.setState(0x813, 0xe7c8, 0x77a0, 0x296c, 0xd4a4, 0xbae0, 0x0, 0x0);
        gbc.writeMem(0x813, { 0xcb, 0x46 });
        gbc.writeMem(0xbae0, { 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe7c8, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbae0));
        // CB 46 03A6
        gbc.setState(0x9b1a, 0xec8b, 0x47c0, 0xc5fe, 0x4301, 0xa349, 0x1, 0x1);
        gbc.writeMem(0x9b1a, { 0xcb, 0x46 });
        gbc.writeMem(0xa349, { 0x6d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x9b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1a));
        EXPECT(0x46, gbc.readMem(0x9b1b));
        EXPECT(0x6d, gbc.readMem(0xa349));
        // CB 46 03A7
        gbc.setState(0x87e0, 0x4805, 0xfd60, 0x554e, 0xf06a, 0xe3f4, 0x1, 0x0);
        gbc.writeMem(0x87e0, { 0xcb, 0x46 });
        gbc.writeMem(0xe3f4, { 0x62 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4805, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e0));
        EXPECT(0x46, gbc.readMem(0x87e1));
        EXPECT(0x62, gbc.readMem(0xe3f4));
        // CB 46 03A8
        gbc.setState(0xc344, 0x2046, 0xf490, 0x4a27, 0x337f, 0x3dbf, 0x0, 0x0);
        gbc.writeMem(0x3dbf, { 0xa6 });
        gbc.writeMem(0xc344, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0xc346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc344));
        EXPECT(0x46, gbc.readMem(0xc345));
        // CB 46 03A9
        gbc.setState(0x176d, 0x8c6, 0xf710, 0x4f33, 0xcb1b, 0xc131, 0x0, 0x0);
        gbc.writeMem(0x176d, { 0xcb, 0x46 });
        gbc.writeMem(0xc131, { 0x57 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c6, gbc.sp());
        EXPECT(0x176f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc131));
        // CB 46 03AA
        gbc.setState(0xb2f5, 0xc097, 0x4fa0, 0xd27c, 0x601, 0x3ca7, 0x0, 0x0);
        gbc.writeMem(0x3ca7, { 0xca });
        gbc.writeMem(0xb2f5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc097, gbc.sp());
        EXPECT(0xb2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f5));
        EXPECT(0x46, gbc.readMem(0xb2f6));
        // CB 46 03AB
        gbc.setState(0x4ae3, 0xe4, 0xbf20, 0x6fb8, 0x11cd, 0xc32c, 0x1, 0x0);
        gbc.writeMem(0x4ae3, { 0xcb, 0x46 });
        gbc.writeMem(0xc32c, { 0x57 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc32c));
        // CB 46 03AC
        gbc.setState(0xe3a8, 0x2958, 0x3140, 0xe4e9, 0xb86f, 0x1bcc, 0x0, 0x1);
        gbc.writeMem(0x1bcc, { 0xf3 });
        gbc.writeMem(0xe3a8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0xe3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a8));
        EXPECT(0x46, gbc.readMem(0xe3a9));
        // CB 46 03AD
        gbc.setState(0x8587, 0xf4ba, 0x6e20, 0x1e55, 0x9cf3, 0x595a, 0x0, 0x0);
        gbc.writeMem(0x595a, { 0xd5 });
        gbc.writeMem(0x8587, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x8589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8587));
        EXPECT(0x46, gbc.readMem(0x8588));
        // CB 46 03AE
        gbc.setState(0x2bc2, 0xa8c7, 0xae00, 0x66b5, 0x13a9, 0x43d, 0x1, 0x0);
        gbc.writeMem(0x43d, { 0x3d });
        gbc.writeMem(0x2bc2, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03AF
        gbc.setState(0x4b9c, 0x3b21, 0x3920, 0x5433, 0x51f, 0x7690, 0x1, 0x1);
        gbc.writeMem(0x4b9c, { 0xcb, 0x46 });
        gbc.writeMem(0x7690, { 0xdd });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x4b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03B0
        gbc.setState(0x9961, 0xc2aa, 0x6b60, 0xaf2f, 0xd2ae, 0x3f2e, 0x1, 0x1);
        gbc.writeMem(0x3f2e, { 0x79 });
        gbc.writeMem(0x9961, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc2aa, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9961));
        EXPECT(0x46, gbc.readMem(0x9962));
        // CB 46 03B1
        gbc.setState(0xcd1, 0x2343, 0x7e60, 0x2688, 0xdbba, 0xa469, 0x0, 0x1);
        gbc.writeMem(0xcd1, { 0xcb, 0x46 });
        gbc.writeMem(0xa469, { 0x18 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2343, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa469));
        // CB 46 03B2
        gbc.setState(0xbd64, 0xe818, 0xd3a0, 0x4d5d, 0xa3a0, 0x2d2a, 0x0, 0x1);
        gbc.writeMem(0x2d2a, { 0xfe });
        gbc.writeMem(0xbd64, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe818, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd64));
        EXPECT(0x46, gbc.readMem(0xbd65));
        // CB 46 03B3
        gbc.setState(0x3060, 0x2ef9, 0x6900, 0x2f7f, 0x4ff6, 0x82b6, 0x0, 0x1);
        gbc.writeMem(0x3060, { 0xcb, 0x46 });
        gbc.writeMem(0x82b6, { 0x55 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2ef9, gbc.sp());
        EXPECT(0x3062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x82b6));
        // CB 46 03B4
        gbc.setState(0x91c8, 0xdc3c, 0xe30, 0xd8f8, 0x1314, 0xed0, 0x1, 0x1);
        gbc.writeMem(0xed0, { 0x17 });
        gbc.writeMem(0x91c8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c8));
        EXPECT(0x46, gbc.readMem(0x91c9));
        // CB 46 03B5
        gbc.setState(0xdade, 0x5593, 0x6ef0, 0x6ed5, 0x22bf, 0xa1b1, 0x1, 0x0);
        gbc.writeMem(0xa1b1, { 0x6a });
        gbc.writeMem(0xdade, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5593, gbc.sp());
        EXPECT(0xdae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa1b1));
        EXPECT(0xcb, gbc.readMem(0xdade));
        EXPECT(0x46, gbc.readMem(0xdadf));
        // CB 46 03B6
        gbc.setState(0x67b5, 0x525b, 0xf3a0, 0xea9d, 0xaa7e, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x4a89, { 0x4d });
        gbc.writeMem(0x67b5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03B7
        gbc.setState(0x2cbd, 0x91bd, 0xf690, 0x623, 0x9bca, 0x51ad, 0x0, 0x1);
        gbc.writeMem(0x2cbd, { 0xcb, 0x46 });
        gbc.writeMem(0x51ad, { 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x91bd, gbc.sp());
        EXPECT(0x2cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 03B8
        gbc.setState(0x3220, 0x91e, 0xeac0, 0x30c7, 0x8511, 0xda25, 0x1, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0x46 });
        gbc.writeMem(0xda25, { 0xda });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x91e, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xda25));
        // CB 46 03B9
        gbc.setState(0x9630, 0x4489, 0xc4e0, 0xffc9, 0xcb77, 0xc927, 0x0, 0x1);
        gbc.writeMem(0x9630, { 0xcb, 0x46 });
        gbc.writeMem(0xc927, { 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4489, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9630));
        EXPECT(0x46, gbc.readMem(0x9631));
        EXPECT(0x8f, gbc.readMem(0xc927));
        // CB 46 03BA
        gbc.setState(0xe1ea, 0x7809, 0x8400, 0x1cd9, 0xb26f, 0x9d83, 0x0, 0x0);
        gbc.writeMem(0x9d83, { 0x37 });
        gbc.writeMem(0xe1ea, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9d83));
        EXPECT(0xcb, gbc.readMem(0xe1ea));
        EXPECT(0x46, gbc.readMem(0xe1eb));
        // CB 46 03BC
        gbc.setState(0xbff6, 0x9862, 0x9dd0, 0x5379, 0xfa64, 0xed2a, 0x0, 0x1);
        gbc.writeMem(0xbff6, { 0xcb, 0x46 });
        gbc.writeMem(0xed2a, { 0x48 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9862, gbc.sp());
        EXPECT(0xbff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff6));
        EXPECT(0x46, gbc.readMem(0xbff7));
        EXPECT(0x48, gbc.readMem(0xed2a));
        // CB 46 03BD
        gbc.setState(0x2daa, 0x6c86, 0x8b0, 0x3109, 0xce56, 0xfe0f, 0x1, 0x1);
        gbc.writeMem(0x2daa, { 0xcb, 0x46 });
        gbc.writeMem(0xfe0f, { 0x92 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6c86, gbc.sp());
        EXPECT(0x2dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xfe0f));
        // CB 46 03BE
        gbc.setState(0x7362, 0xbec1, 0xb3f0, 0xd344, 0xa609, 0xc517, 0x1, 0x1);
        gbc.writeMem(0x7362, { 0xcb, 0x46 });
        gbc.writeMem(0xc517, { 0xf2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbec1, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xc517));
        // CB 46 03BF
        gbc.setState(0xc3b, 0x93aa, 0xc0c0, 0x789e, 0xf1ad, 0xa37, 0x1, 0x0);
        gbc.writeMem(0xa37, { 0x6d });
        gbc.writeMem(0xc3b, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x93aa, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03C0
        gbc.setState(0x75d7, 0x6f3c, 0xda20, 0x1ae9, 0x7277, 0x1da5, 0x1, 0x1);
        gbc.writeMem(0x1da5, { 0xaa });
        gbc.writeMem(0x75d7, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6f3c, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03C1
        gbc.setState(0x8e74, 0x5b08, 0x22f0, 0xa5ef, 0xa50b, 0x5b7, 0x1, 0x1);
        gbc.writeMem(0x5b7, { 0x3 });
        gbc.writeMem(0x8e74, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0x8e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e74));
        EXPECT(0x46, gbc.readMem(0x8e75));
        // CB 46 03C2
        gbc.setState(0xa2a4, 0xa60a, 0xed50, 0xc478, 0xdce, 0x897a, 0x0, 0x1);
        gbc.writeMem(0x897a, { 0xda });
        gbc.writeMem(0xa2a4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x897a));
        EXPECT(0xcb, gbc.readMem(0xa2a4));
        EXPECT(0x46, gbc.readMem(0xa2a5));
        // CB 46 03C4
        gbc.setState(0xbec4, 0x7824, 0x1940, 0xc88d, 0x731b, 0x4e4, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0x69 });
        gbc.writeMem(0xbec4, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0xbec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec4));
        EXPECT(0x46, gbc.readMem(0xbec5));
        // CB 46 03C5
        gbc.setState(0x76d5, 0xd606, 0xb9c0, 0x7e19, 0xadd6, 0x68bd, 0x0, 0x0);
        gbc.writeMem(0x68bd, { 0x7a });
        gbc.writeMem(0x76d5, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd606, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03C6
        gbc.setState(0xce79, 0x830b, 0x4110, 0xb2b0, 0x7831, 0xd361, 0x1, 0x1);
        gbc.writeMem(0xce79, { 0xcb, 0x46 });
        gbc.writeMem(0xd361, { 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x830b, gbc.sp());
        EXPECT(0xce7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce79));
        EXPECT(0x46, gbc.readMem(0xce7a));
        EXPECT(0xd0, gbc.readMem(0xd361));
        // CB 46 03C7
        gbc.setState(0x983c, 0x2ea3, 0x43b0, 0x7c54, 0x6d1d, 0x57c5, 0x1, 0x1);
        gbc.writeMem(0x57c5, { 0xff });
        gbc.writeMem(0x983c, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2ea3, gbc.sp());
        EXPECT(0x983e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983c));
        EXPECT(0x46, gbc.readMem(0x983d));
        // CB 46 03C8
        gbc.setState(0x547a, 0x9693, 0x3dd0, 0xfa3f, 0x8124, 0xce0, 0x1, 0x1);
        gbc.writeMem(0xce0, { 0x42 });
        gbc.writeMem(0x547a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9693, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 03C9
        gbc.setState(0x4fe6, 0xc808, 0xe3b0, 0x8f44, 0xc310, 0x14a6, 0x0, 0x1);
        gbc.writeMem(0x14a6, { 0x51 });
        gbc.writeMem(0x4fe6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc808, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 03CA
        gbc.setState(0x4f70, 0x5500, 0xa8e0, 0x39d8, 0x33f7, 0x70b, 0x0, 0x0);
        gbc.writeMem(0x70b, { 0x4 });
        gbc.writeMem(0x4f70, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03CB
        gbc.setState(0x8004, 0x4eb5, 0xd240, 0xbb15, 0x4580, 0x2ef3, 0x1, 0x0);
        gbc.writeMem(0x2ef3, { 0x99 });
        gbc.writeMem(0x8004, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0x46, gbc.readMem(0x8005));
        // CB 46 03CC
        gbc.setState(0x459b, 0x572a, 0x7660, 0x7ed6, 0xc709, 0x689a, 0x0, 0x0);
        gbc.writeMem(0x459b, { 0xcb, 0x46 });
        gbc.writeMem(0x689a, { 0xee });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x572a, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03CD
        gbc.setState(0x8852, 0x950c, 0x7100, 0x4eda, 0xcf37, 0xbf94, 0x0, 0x1);
        gbc.writeMem(0x8852, { 0xcb, 0x46 });
        gbc.writeMem(0xbf94, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x950c, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8852));
        EXPECT(0x46, gbc.readMem(0x8853));
        EXPECT(0xb9, gbc.readMem(0xbf94));
        // CB 46 03CE
        gbc.setState(0xb7a8, 0xd705, 0x8a50, 0x6bb4, 0xbce3, 0x816b, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0xeb });
        gbc.writeMem(0xb7a8, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd705, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x816b));
        EXPECT(0xcb, gbc.readMem(0xb7a8));
        EXPECT(0x46, gbc.readMem(0xb7a9));
        // CB 46 03CF
        gbc.setState(0x5382, 0x109c, 0x4d20, 0xc50a, 0x9174, 0xe364, 0x0, 0x0);
        gbc.writeMem(0x5382, { 0xcb, 0x46 });
        gbc.writeMem(0xe364, { 0x8c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x109c, gbc.sp());
        EXPECT(0x5384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe364));
        // CB 46 03D0
        gbc.setState(0xd451, 0x6d20, 0x43a0, 0xe874, 0x69d8, 0x5661, 0x1, 0x0);
        gbc.writeMem(0x5661, { 0x7f });
        gbc.writeMem(0xd451, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6d20, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd451));
        EXPECT(0x46, gbc.readMem(0xd452));
        // CB 46 03D1
        gbc.setState(0x4b9e, 0x524d, 0xd0b0, 0xfcf0, 0xe9df, 0x178d, 0x0, 0x0);
        gbc.writeMem(0x178d, { 0xa0 });
        gbc.writeMem(0x4b9e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x524d, gbc.sp());
        EXPECT(0x4ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 46 03D2
        gbc.setState(0x9c23, 0x1147, 0xc6b0, 0x5304, 0x7f9d, 0xed03, 0x1, 0x0);
        gbc.writeMem(0x9c23, { 0xcb, 0x46 });
        gbc.writeMem(0xed03, { 0x7c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1147, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c23));
        EXPECT(0x46, gbc.readMem(0x9c24));
        EXPECT(0x7c, gbc.readMem(0xed03));
        // CB 46 03D3
        gbc.setState(0xa7bd, 0x2208, 0xe390, 0xb257, 0x93e7, 0x5481, 0x1, 0x1);
        gbc.writeMem(0x5481, { 0xe7 });
        gbc.writeMem(0xa7bd, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bd));
        EXPECT(0x46, gbc.readMem(0xa7be));
        // CB 46 03D4
        gbc.setState(0x8fc6, 0xd386, 0x7050, 0xe47a, 0xf7e0, 0x2891, 0x0, 0x0);
        gbc.writeMem(0x2891, { 0xe5 });
        gbc.writeMem(0x8fc6, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd386, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0x46, gbc.readMem(0x8fc7));
        // CB 46 03D6
        gbc.setState(0x1b4e, 0x96fb, 0xb400, 0x8a3f, 0xbfab, 0x3b92, 0x0, 0x0);
        gbc.writeMem(0x1b4e, { 0xcb, 0x46 });
        gbc.writeMem(0x3b92, { 0x7e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0x1b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 46 03D7
        gbc.setState(0x921a, 0xfa9e, 0xc570, 0x65a9, 0x79ea, 0x178, 0x0, 0x0);
        gbc.writeMem(0x178, { 0x36 });
        gbc.writeMem(0x921a, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfa9e, gbc.sp());
        EXPECT(0x921c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921a));
        EXPECT(0x46, gbc.readMem(0x921b));
        // CB 46 03D8
        gbc.setState(0x7ea6, 0x4eaf, 0xa10, 0x22ae, 0xb69b, 0xa310, 0x0, 0x0);
        gbc.writeMem(0x7ea6, { 0xcb, 0x46 });
        gbc.writeMem(0xa310, { 0xda });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa310));
        // CB 46 03D9
        gbc.setState(0x1f95, 0x2681, 0x41b0, 0x9ba4, 0xd175, 0xac7f, 0x1, 0x0);
        gbc.writeMem(0x1f95, { 0xcb, 0x46 });
        gbc.writeMem(0xac7f, { 0x51 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x1f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xac7f));
        // CB 46 03DA
        gbc.setState(0x7e33, 0xa0b8, 0x76f0, 0x54db, 0x23ad, 0xec62, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0xcb, 0x46 });
        gbc.writeMem(0xec62, { 0x2a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xec62));
        // CB 46 03DB
        gbc.setState(0x8552, 0xaf80, 0x110, 0x49f, 0x8909, 0x493b, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xb8 });
        gbc.writeMem(0x8552, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x8554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8552));
        EXPECT(0x46, gbc.readMem(0x8553));
        // CB 46 03DC
        gbc.setState(0x369, 0x3bd7, 0xe590, 0x322c, 0xe82f, 0xedde, 0x1, 0x0);
        gbc.writeMem(0x369, { 0xcb, 0x46 });
        gbc.writeMem(0xedde, { 0x1e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xedde));
        // CB 46 03DD
        gbc.setState(0x471d, 0x1d14, 0xec50, 0xd6ed, 0x152c, 0xc272, 0x0, 0x1);
        gbc.writeMem(0x471d, { 0xcb, 0x46 });
        gbc.writeMem(0xc272, { 0x19 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1d14, gbc.sp());
        EXPECT(0x471f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc272));
        // CB 46 03DE
        gbc.setState(0xa102, 0xa2ec, 0x86c0, 0xd3f9, 0x67a4, 0xf90b, 0x0, 0x0);
        gbc.writeMem(0xa102, { 0xcb, 0x46 });
        gbc.writeMem(0xf90b, { 0xae });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa2ec, gbc.sp());
        EXPECT(0xa104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa102));
        EXPECT(0x46, gbc.readMem(0xa103));
        EXPECT(0xae, gbc.readMem(0xf90b));
        // CB 46 03DF
        gbc.setState(0x6802, 0x6d6d, 0xb4e0, 0x7c3c, 0xe8ec, 0xb5f0, 0x1, 0x1);
        gbc.writeMem(0x6802, { 0xcb, 0x46 });
        gbc.writeMem(0xb5f0, { 0xd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6d6d, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xb5f0));
        // CB 46 03E0
        gbc.setState(0xb02e, 0x229c, 0x4cd0, 0x5e1b, 0x226, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0x53b2, { 0xac });
        gbc.writeMem(0xb02e, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x229c, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02e));
        EXPECT(0x46, gbc.readMem(0xb02f));
        // CB 46 03E1
        gbc.setState(0x801c, 0x6124, 0xfe20, 0x54e6, 0x1e31, 0xa707, 0x1, 0x1);
        gbc.writeMem(0x801c, { 0xcb, 0x46 });
        gbc.writeMem(0xa707, { 0x8e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801c));
        EXPECT(0x46, gbc.readMem(0x801d));
        EXPECT(0x8e, gbc.readMem(0xa707));
        // CB 46 03E2
        gbc.setState(0x5a74, 0xddc9, 0x9120, 0x819f, 0xab3e, 0x835b, 0x0, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0x46 });
        gbc.writeMem(0x835b, { 0x47 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xddc9, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x835b));
        // CB 46 03E3
        gbc.setState(0x727, 0x992e, 0x64b0, 0x6232, 0xb93b, 0xf6ec, 0x1, 0x0);
        gbc.writeMem(0x727, { 0xcb, 0x46 });
        gbc.writeMem(0xf6ec, { 0xf });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0x729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xf6ec));
        // CB 46 03E4
        gbc.setState(0xab1f, 0x3834, 0x6840, 0x2b83, 0x1fed, 0x9396, 0x0, 0x0);
        gbc.writeMem(0x9396, { 0xa1 });
        gbc.writeMem(0xab1f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3834, gbc.sp());
        EXPECT(0xab21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9396));
        EXPECT(0xcb, gbc.readMem(0xab1f));
        EXPECT(0x46, gbc.readMem(0xab20));
        // CB 46 03E5
        gbc.setState(0x768e, 0x87ae, 0x4f0, 0x6e4, 0xce52, 0x9bbe, 0x0, 0x0);
        gbc.writeMem(0x768e, { 0xcb, 0x46 });
        gbc.writeMem(0x9bbe, { 0x3f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x87ae, gbc.sp());
        EXPECT(0x7690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9bbe));
        // CB 46 03E6
        gbc.setState(0x28ff, 0xfb4d, 0xbc40, 0x5180, 0xad0f, 0xcf97, 0x0, 0x0);
        gbc.writeMem(0x28ff, { 0xcb, 0x46 });
        gbc.writeMem(0xcf97, { 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfb4d, gbc.sp());
        EXPECT(0x2901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf97));
        // CB 46 03E7
        gbc.setState(0xc84f, 0x9c71, 0x7e50, 0xb9fd, 0x1bc8, 0x8536, 0x1, 0x1);
        gbc.writeMem(0x8536, { 0x71 });
        gbc.writeMem(0xc84f, { 0xcb, 0x46 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9c71, gbc.sp());
        EXPECT(0xc851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8536));
        EXPECT(0xcb, gbc.readMem(0xc84f));
        EXPECT(0x46, gbc.readMem(0xc850));
    }
