    TEST(gbcemu, opcode_85) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 85 0000
        gbc.setState(0xc913, 0x8ff, 0x1dd0, 0x56d1, 0xafc7, 0x89d3, 0x0, 0x1);
        gbc.writeMem(0xc913, { 0x85 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8ff, gbc.sp());
        EXPECT(0xc914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc913));
        // 85 0001
        gbc.setState(0x5b50, 0xffac, 0x94b0, 0x69ac, 0x9f4, 0xf3b6, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0002
        gbc.setState(0xa4b9, 0xf649, 0x15b0, 0x8cbe, 0xb3a4, 0x561c, 0x1, 0x0);
        gbc.writeMem(0xa4b9, { 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf649, gbc.sp());
        EXPECT(0xa4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa4b9));
        // 85 0003
        gbc.setState(0x4810, 0xf135, 0x8c10, 0x810, 0xf25b, 0x9458, 0x1, 0x0);
        gbc.writeMem(0x4810, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf135, gbc.sp());
        EXPECT(0x4811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0004
        gbc.setState(0x35e1, 0xfe29, 0x52c0, 0xc26f, 0x2651, 0xbd0b, 0x0, 0x1);
        gbc.writeMem(0x35e1, { 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0x35e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0005
        gbc.setState(0x252c, 0x8fda, 0xfa70, 0x6eb9, 0x81f7, 0x7986, 0x0, 0x0);
        gbc.writeMem(0x252c, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8fda, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0006
        gbc.setState(0x2bdb, 0x3c99, 0x8340, 0xc0fa, 0x9fdd, 0xdece, 0x0, 0x0);
        gbc.writeMem(0x2bdb, { 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0x2bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0007
        gbc.setState(0x4c0c, 0x1a79, 0x7070, 0x34b5, 0xe9ba, 0x5130, 0x1, 0x1);
        gbc.writeMem(0x4c0c, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0x4c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0008
        gbc.setState(0x25d5, 0x9a9a, 0xbca0, 0x6fdb, 0x7a7f, 0xcc48, 0x0, 0x0);
        gbc.writeMem(0x25d5, { 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9a9a, gbc.sp());
        EXPECT(0x25d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0009
        gbc.setState(0xb864, 0xe5fa, 0x3570, 0xd43b, 0x7a08, 0x5af2, 0x1, 0x1);
        gbc.writeMem(0xb864, { 0x85 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb864));
        // 85 000A
        gbc.setState(0x6469, 0xe2e1, 0x9390, 0x6c2, 0xbd40, 0x6035, 0x0, 0x1);
        gbc.writeMem(0x6469, { 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe2e1, gbc.sp());
        EXPECT(0x646a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 000B
        gbc.setState(0x16b3, 0x2fee, 0x4b40, 0xb73b, 0x41b8, 0x60ff, 0x0, 0x0);
        gbc.writeMem(0x16b3, { 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2fee, gbc.sp());
        EXPECT(0x16b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 000C
        gbc.setState(0xd21f, 0x492e, 0xdec0, 0xe332, 0x6e1c, 0x5a71, 0x0, 0x1);
        gbc.writeMem(0xd21f, { 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0xd220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd21f));
        // 85 000D
        gbc.setState(0x37db, 0xc6a2, 0x6590, 0x8652, 0xdccc, 0xfe33, 0x0, 0x0);
        gbc.writeMem(0x37db, { 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 000E
        gbc.setState(0x6ed2, 0x3848, 0x76d0, 0x9dd6, 0xd115, 0xef1e, 0x1, 0x1);
        gbc.writeMem(0x6ed2, { 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3848, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 000F
        gbc.setState(0xea1b, 0x83e3, 0x48f0, 0x7d85, 0x62da, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xea1b, { 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x83e3, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xea1b));
        // 85 0010
        gbc.setState(0x8596, 0x2d6f, 0xa510, 0x4414, 0x5419, 0xaaf0, 0x0, 0x1);
        gbc.writeMem(0x8596, { 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d6f, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8596));
        // 85 0011
        gbc.setState(0xa9f9, 0xa981, 0x4a50, 0x21bf, 0xcb06, 0xa895, 0x1, 0x0);
        gbc.writeMem(0xa9f9, { 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa9f9));
        // 85 0012
        gbc.setState(0x54e5, 0x52b9, 0x8940, 0xee, 0xc54b, 0x5f36, 0x1, 0x0);
        gbc.writeMem(0x54e5, { 0x85 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0013
        gbc.setState(0x515c, 0xf82b, 0xa170, 0xe48f, 0x3fbe, 0x7ad3, 0x1, 0x1);
        gbc.writeMem(0x515c, { 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf82b, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0014
        gbc.setState(0x5619, 0x3c45, 0x87a0, 0x38af, 0xadf5, 0x628e, 0x0, 0x1);
        gbc.writeMem(0x5619, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0015
        gbc.setState(0x57a0, 0xad22, 0x5460, 0x7cc, 0x6ef2, 0xa7fc, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xad22, gbc.sp());
        EXPECT(0x57a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0017
        gbc.setState(0x520f, 0xdfcd, 0x950, 0x6a4c, 0x6a2d, 0x6e3b, 0x0, 0x0);
        gbc.writeMem(0x520f, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdfcd, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0018
        gbc.setState(0x553f, 0x574f, 0xc170, 0x8c43, 0x3b6a, 0xbf63, 0x1, 0x0);
        gbc.writeMem(0x553f, { 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x574f, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0019
        gbc.setState(0xebac, 0x965e, 0x4020, 0x4912, 0xf078, 0xffa7, 0x1, 0x0);
        gbc.writeMem(0xebac, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xebac));
        // 85 001A
        gbc.setState(0x97b8, 0xe25, 0x9800, 0xbecb, 0xda68, 0x2c7a, 0x0, 0x0);
        gbc.writeMem(0x97b8, { 0x85 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0x97b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97b8));
        // 85 001B
        gbc.setState(0x4d65, 0x71bc, 0x7930, 0x88be, 0x7cd5, 0x5b68, 0x1, 0x1);
        gbc.writeMem(0x4d65, { 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0x4d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 001C
        gbc.setState(0x202f, 0x4f5e, 0xb9d0, 0xe58, 0xc0fa, 0x631d, 0x1, 0x1);
        gbc.writeMem(0x202f, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 001D
        gbc.setState(0x8aab, 0x5f78, 0x9410, 0xdd41, 0x2b2f, 0xe4a8, 0x1, 0x1);
        gbc.writeMem(0x8aab, { 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f78, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8aab));
        // 85 001E
        gbc.setState(0x26d9, 0xf196, 0x23f0, 0x8065, 0xd4bd, 0x15d2, 0x1, 0x1);
        gbc.writeMem(0x26d9, { 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 001F
        gbc.setState(0x8383, 0x70ed, 0xdd70, 0x19b, 0x4837, 0xa4fc, 0x1, 0x1);
        gbc.writeMem(0x8383, { 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8383));
        // 85 0020
        gbc.setState(0x5c27, 0xe293, 0xda90, 0xcbf9, 0xe608, 0xe963, 0x0, 0x0);
        gbc.writeMem(0x5c27, { 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0022
        gbc.setState(0x99f6, 0xcc2d, 0x5e90, 0x1d26, 0x819e, 0x7c45, 0x1, 0x0);
        gbc.writeMem(0x99f6, { 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcc2d, gbc.sp());
        EXPECT(0x99f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x99f6));
        // 85 0023
        gbc.setState(0x6e05, 0x67cd, 0xbb90, 0xe723, 0xc2f2, 0xa449, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x67cd, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0024
        gbc.setState(0x349, 0xf5db, 0x20e0, 0xd102, 0x8912, 0x3755, 0x1, 0x1);
        gbc.writeMem(0x349, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0025
        gbc.setState(0x5988, 0xbb29, 0xad0, 0x5c7c, 0xe83e, 0xc648, 0x1, 0x1);
        gbc.writeMem(0x5988, { 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb29, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0026
        gbc.setState(0x281d, 0xf367, 0x61a0, 0xe64d, 0xa272, 0x991f, 0x0, 0x1);
        gbc.writeMem(0x281d, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf367, gbc.sp());
        EXPECT(0x281e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0027
        gbc.setState(0xb6bd, 0x4271, 0x21e0, 0x1b91, 0x138a, 0xa45f, 0x1, 0x0);
        gbc.writeMem(0xb6bd, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4271, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb6bd));
        // 85 0028
        gbc.setState(0xc946, 0xebce, 0xe8e0, 0x7a26, 0x9742, 0xe3e1, 0x1, 0x0);
        gbc.writeMem(0xc946, { 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0xc947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc946));
        // 85 0029
        gbc.setState(0x9415, 0x8cd5, 0xb180, 0x7862, 0x4116, 0x5678, 0x1, 0x0);
        gbc.writeMem(0x9415, { 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8cd5, gbc.sp());
        EXPECT(0x9416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9415));
        // 85 002A
        gbc.setState(0x5744, 0x95d6, 0xdf20, 0x7738, 0xc4c7, 0x7a9, 0x0, 0x1);
        gbc.writeMem(0x5744, { 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x95d6, gbc.sp());
        EXPECT(0x5745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 002B
        gbc.setState(0xcac2, 0x58cb, 0x8480, 0x6441, 0x4fc8, 0x94dd, 0x1, 0x0);
        gbc.writeMem(0xcac2, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x58cb, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcac2));
        // 85 002C
        gbc.setState(0x3b39, 0x4d8f, 0x1740, 0x3196, 0x28e7, 0xe28e, 0x0, 0x1);
        gbc.writeMem(0x3b39, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d8f, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 002D
        gbc.setState(0xafb5, 0x8778, 0xabd0, 0x3407, 0x853d, 0x4018, 0x1, 0x0);
        gbc.writeMem(0xafb5, { 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8778, gbc.sp());
        EXPECT(0xafb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xafb5));
        // 85 002E
        gbc.setState(0x93a, 0xf9e9, 0xb90, 0x9484, 0x8c57, 0x413, 0x0, 0x1);
        gbc.writeMem(0x93a, { 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf9e9, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 002F
        gbc.setState(0x7381, 0x243f, 0x1510, 0xc2d7, 0x6aee, 0x719f, 0x0, 0x1);
        gbc.writeMem(0x7381, { 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x243f, gbc.sp());
        EXPECT(0x7382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0030
        gbc.setState(0x6496, 0x2572, 0x5030, 0x6c5b, 0xd3e4, 0x8e79, 0x0, 0x0);
        gbc.writeMem(0x6496, { 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2572, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0031
        gbc.setState(0xc779, 0xe3e3, 0x7850, 0x994d, 0x8042, 0x62f2, 0x0, 0x1);
        gbc.writeMem(0xc779, { 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe3e3, gbc.sp());
        EXPECT(0xc77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc779));
        // 85 0032
        gbc.setState(0x6de4, 0xbf70, 0xc500, 0x9df2, 0xe74f, 0x216e, 0x0, 0x0);
        gbc.writeMem(0x6de4, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbf70, gbc.sp());
        EXPECT(0x6de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0033
        gbc.setState(0x3479, 0x855f, 0x85a0, 0xcfa5, 0x1c11, 0x57cb, 0x1, 0x0);
        gbc.writeMem(0x3479, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x855f, gbc.sp());
        EXPECT(0x347a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0034
        gbc.setState(0xda46, 0x9707, 0x7a70, 0xc67, 0x5e82, 0x94d5, 0x0, 0x0);
        gbc.writeMem(0xda46, { 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9707, gbc.sp());
        EXPECT(0xda47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xda46));
        // 85 0035
        gbc.setState(0xe8cf, 0x5b0, 0x6f0, 0x2191, 0xad16, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0xe8cf, { 0x85 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0xe8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe8cf));
        // 85 0036
        gbc.setState(0xb826, 0xdf32, 0x9ba0, 0x482d, 0xd0e, 0xb304, 0x0, 0x1);
        gbc.writeMem(0xb826, { 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdf32, gbc.sp());
        EXPECT(0xb827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb826));
        // 85 0037
        gbc.setState(0xd3ca, 0xf453, 0xc100, 0xada, 0x6b38, 0xd93a, 0x0, 0x0);
        gbc.writeMem(0xd3ca, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd3ca));
        // 85 0038
        gbc.setState(0x6bdf, 0xe8c4, 0xd0f0, 0xee9c, 0x3a42, 0xee3e, 0x0, 0x0);
        gbc.writeMem(0x6bdf, { 0x85 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe8c4, gbc.sp());
        EXPECT(0x6be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0039
        gbc.setState(0x6529, 0x86af, 0x23f0, 0x4d69, 0x3b68, 0xae73, 0x0, 0x0);
        gbc.writeMem(0x6529, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x86af, gbc.sp());
        EXPECT(0x652a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 003B
        gbc.setState(0x595b, 0xe470, 0x1af0, 0x1bd, 0xf06, 0x41c0, 0x1, 0x0);
        gbc.writeMem(0x595b, { 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0x595c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 003C
        gbc.setState(0x5ec5, 0xcdbf, 0x21b0, 0xec5c, 0x125c, 0xcb9c, 0x1, 0x0);
        gbc.writeMem(0x5ec5, { 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0x5ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 003D
        gbc.setState(0x99fb, 0x69c, 0xd3c0, 0x53c3, 0x7355, 0xad79, 0x1, 0x1);
        gbc.writeMem(0x99fb, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x69c, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x99fb));
        // 85 003E
        gbc.setState(0x3760, 0xc575, 0x94d0, 0xec41, 0x26fc, 0x4c26, 0x1, 0x0);
        gbc.writeMem(0x3760, { 0x85 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc575, gbc.sp());
        EXPECT(0x3761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 003F
        gbc.setState(0x747b, 0xf643, 0xf390, 0x35b9, 0xa384, 0xfe7e, 0x1, 0x1);
        gbc.writeMem(0x747b, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf643, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0040
        gbc.setState(0xc05e, 0xb724, 0xfaf0, 0xbd15, 0x341e, 0x38c6, 0x0, 0x0);
        gbc.writeMem(0xc05e, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb724, gbc.sp());
        EXPECT(0xc05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc05e));
        // 85 0042
        gbc.setState(0x80d7, 0x98, 0x5300, 0x3ac7, 0x6fd2, 0x3a9b, 0x1, 0x1);
        gbc.writeMem(0x80d7, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x98, gbc.sp());
        EXPECT(0x80d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x80d7));
        // 85 0043
        gbc.setState(0x529d, 0x8f1, 0xb530, 0x12b3, 0x1d7c, 0x402f, 0x1, 0x1);
        gbc.writeMem(0x529d, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8f1, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0045
        gbc.setState(0x3019, 0xd992, 0x6340, 0x1649, 0x87a3, 0x13cd, 0x0, 0x1);
        gbc.writeMem(0x3019, { 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd992, gbc.sp());
        EXPECT(0x301a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0046
        gbc.setState(0x7c66, 0xe8d0, 0x4280, 0x254, 0xb78e, 0xb772, 0x1, 0x1);
        gbc.writeMem(0x7c66, { 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe8d0, gbc.sp());
        EXPECT(0x7c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0047
        gbc.setState(0x8a6f, 0x2721, 0xc4b0, 0x561d, 0x4e28, 0x5ab6, 0x0, 0x1);
        gbc.writeMem(0x8a6f, { 0x85 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8a6f));
        // 85 0048
        gbc.setState(0xb7ee, 0xe631, 0xbf80, 0x7a42, 0x8c68, 0xc408, 0x0, 0x0);
        gbc.writeMem(0xb7ee, { 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xb7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb7ee));
        // 85 0049
        gbc.setState(0x660b, 0x7307, 0xb0b0, 0xb7eb, 0x13d2, 0x1b07, 0x1, 0x0);
        gbc.writeMem(0x660b, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7307, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 004A
        gbc.setState(0x772c, 0x5668, 0xfcb0, 0x8cfb, 0x24f0, 0xf263, 0x0, 0x1);
        gbc.writeMem(0x772c, { 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5668, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 004B
        gbc.setState(0xa5f2, 0x98ed, 0x23c0, 0x27f9, 0xa342, 0x6ef9, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa5f2));
        // 85 004C
        gbc.setState(0xa12f, 0x1e48, 0xb40, 0x67e1, 0xbbd, 0xbf6e, 0x1, 0x0);
        gbc.writeMem(0xa12f, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0xa130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa12f));
        // 85 004D
        gbc.setState(0xd076, 0xec3d, 0x3900, 0xc4e0, 0x381b, 0xa49d, 0x1, 0x0);
        gbc.writeMem(0xd076, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xec3d, gbc.sp());
        EXPECT(0xd077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd076));
        // 85 004E
        gbc.setState(0x54b, 0x69c8, 0xaee0, 0x3b7e, 0xc52a, 0xca8c, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 004F
        gbc.setState(0x8f8e, 0x65d2, 0x5c60, 0xc4c3, 0x8329, 0x19fa, 0x1, 0x0);
        gbc.writeMem(0x8f8e, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x65d2, gbc.sp());
        EXPECT(0x8f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8f8e));
        // 85 0050
        gbc.setState(0x42cc, 0x1b98, 0xed10, 0x94d, 0x1b6a, 0xb723, 0x0, 0x0);
        gbc.writeMem(0x42cc, { 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x42cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0051
        gbc.setState(0x7270, 0xffa4, 0x9490, 0x1794, 0xec45, 0x5bb6, 0x0, 0x0);
        gbc.writeMem(0x7270, { 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xffa4, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0052
        gbc.setState(0x4546, 0xac07, 0x84e0, 0x85e, 0x9435, 0x2c01, 0x1, 0x1);
        gbc.writeMem(0x4546, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xac07, gbc.sp());
        EXPECT(0x4547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0053
        gbc.setState(0x5363, 0x86ab, 0x8d10, 0x6af9, 0x360e, 0xc074, 0x1, 0x0);
        gbc.writeMem(0x5363, { 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0054
        gbc.setState(0x2967, 0xc12f, 0x9150, 0xe8be, 0xb5, 0x3ad6, 0x1, 0x0);
        gbc.writeMem(0x2967, { 0x85 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc12f, gbc.sp());
        EXPECT(0x2968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0055
        gbc.setState(0x4123, 0xd2d7, 0x1eb0, 0x843, 0xea4a, 0xa053, 0x0, 0x0);
        gbc.writeMem(0x4123, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0x4124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0056
        gbc.setState(0x769, 0xe229, 0x1ba0, 0xb2ac, 0x8399, 0x7069, 0x0, 0x0);
        gbc.writeMem(0x769, { 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe229, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0057
        gbc.setState(0x7285, 0x95e3, 0x5fb0, 0x2de0, 0x4120, 0xdad0, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x95e3, gbc.sp());
        EXPECT(0x7286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0058
        gbc.setState(0xd57b, 0x10d4, 0x66a0, 0xb1d4, 0xeb92, 0xbbba, 0x0, 0x1);
        gbc.writeMem(0xd57b, { 0x85 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0xd57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd57b));
        // 85 0059
        gbc.setState(0x1da8, 0xd3fe, 0xe110, 0xf1f7, 0x5f3, 0xa9c6, 0x0, 0x1);
        gbc.writeMem(0x1da8, { 0x85 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd3fe, gbc.sp());
        EXPECT(0x1da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 005B
        gbc.setState(0x649c, 0x4f9f, 0x17f0, 0xa342, 0x776f, 0x215, 0x0, 0x0);
        gbc.writeMem(0x649c, { 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4f9f, gbc.sp());
        EXPECT(0x649d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 005D
        gbc.setState(0x5730, 0x6b3b, 0x7180, 0x2633, 0xc5d3, 0x668b, 0x1, 0x0);
        gbc.writeMem(0x5730, { 0x85 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x5731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 005E
        gbc.setState(0x1a4c, 0xee3c, 0x4ad0, 0x99de, 0x25d9, 0xb235, 0x1, 0x0);
        gbc.writeMem(0x1a4c, { 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xee3c, gbc.sp());
        EXPECT(0x1a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0060
        gbc.setState(0x8120, 0x2943, 0xd240, 0xe903, 0x4c65, 0xc7eb, 0x1, 0x1);
        gbc.writeMem(0x8120, { 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2943, gbc.sp());
        EXPECT(0x8121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8120));
        // 85 0061
        gbc.setState(0x1ea0, 0x56d9, 0x5ae0, 0xb90a, 0x35dd, 0xf507, 0x0, 0x1);
        gbc.writeMem(0x1ea0, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x56d9, gbc.sp());
        EXPECT(0x1ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0062
        gbc.setState(0xe968, 0x3851, 0x140, 0xcfe9, 0xbc66, 0xb2ca, 0x0, 0x0);
        gbc.writeMem(0xe968, { 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3851, gbc.sp());
        EXPECT(0xe969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe968));
        // 85 0063
        gbc.setState(0xb9f4, 0x31e7, 0x8760, 0x346e, 0xf63e, 0xe0fb, 0x0, 0x1);
        gbc.writeMem(0xb9f4, { 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0xb9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb9f4));
        // 85 0064
        gbc.setState(0x949d, 0x29b6, 0x18b0, 0xaa7f, 0x358d, 0x4f3c, 0x0, 0x1);
        gbc.writeMem(0x949d, { 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x29b6, gbc.sp());
        EXPECT(0x949e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x949d));
        // 85 0065
        gbc.setState(0x98ab, 0x9224, 0x6c90, 0x7256, 0x69a3, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0x98ab, { 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9224, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x98ab));
        // 85 0067
        gbc.setState(0x7c48, 0x70ff, 0x23c0, 0xa007, 0x2c02, 0x3887, 0x1, 0x1);
        gbc.writeMem(0x7c48, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0x7c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0068
        gbc.setState(0x219b, 0xcc85, 0xd5c0, 0x25df, 0xe294, 0xfe8a, 0x1, 0x1);
        gbc.writeMem(0x219b, { 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0069
        gbc.setState(0x5d43, 0xec5b, 0x78b0, 0x5e02, 0x5dc0, 0xb65d, 0x0, 0x1);
        gbc.writeMem(0x5d43, { 0x85 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 006B
        gbc.setState(0x89e0, 0x3705, 0xd060, 0xbb25, 0xfbb6, 0x91db, 0x0, 0x1);
        gbc.writeMem(0x89e0, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x89e0));
        // 85 006D
        gbc.setState(0x30bf, 0x6054, 0x5fe0, 0x8ed8, 0x673, 0x88f5, 0x1, 0x0);
        gbc.writeMem(0x30bf, { 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6054, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 006E
        gbc.setState(0x660, 0x4c7f, 0x3fa0, 0x5a0f, 0xcdf, 0x9c5b, 0x0, 0x0);
        gbc.writeMem(0x660, { 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 006F
        gbc.setState(0xaa59, 0x5d16, 0xce30, 0x6dc8, 0x78a3, 0x7d90, 0x1, 0x0);
        gbc.writeMem(0xaa59, { 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5d16, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa59));
        // 85 0070
        gbc.setState(0x8008, 0x9ea1, 0x2820, 0x9178, 0x246, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0x8008, { 0x85 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x8009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8008));
        // 85 0072
        gbc.setState(0xc7bb, 0x211c, 0x41e0, 0x5b31, 0xf87e, 0xb999, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x211c, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc7bb));
        // 85 0073
        gbc.setState(0x954d, 0xfcfc, 0xe220, 0x21d7, 0xfa3, 0x6235, 0x0, 0x0);
        gbc.writeMem(0x954d, { 0x85 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x954e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x954d));
        // 85 0074
        gbc.setState(0x9129, 0x412a, 0x33b0, 0x8306, 0xa8dd, 0xa65a, 0x0, 0x1);
        gbc.writeMem(0x9129, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x412a, gbc.sp());
        EXPECT(0x912a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9129));
        // 85 0075
        gbc.setState(0x8efe, 0x528f, 0x5e70, 0xe677, 0x8ca3, 0x313a, 0x0, 0x0);
        gbc.writeMem(0x8efe, { 0x85 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x528f, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8efe));
        // 85 0076
        gbc.setState(0xae44, 0xc910, 0xb000, 0xe87e, 0x37f0, 0x7d8a, 0x0, 0x1);
        gbc.writeMem(0xae44, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc910, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae44));
        // 85 0077
        gbc.setState(0x4e1e, 0x56d0, 0x4e50, 0x75ff, 0x8a0d, 0xf841, 0x0, 0x1);
        gbc.writeMem(0x4e1e, { 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x56d0, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0078
        gbc.setState(0x7f2e, 0x6cf2, 0x8980, 0xd848, 0xd0a9, 0x1642, 0x0, 0x0);
        gbc.writeMem(0x7f2e, { 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0079
        gbc.setState(0x1974, 0x2207, 0xdf90, 0x1681, 0x77fe, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x1974, { 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 007A
        gbc.setState(0xbf52, 0x10f5, 0x1be0, 0x4c8f, 0xa22b, 0x5cea, 0x0, 0x0);
        gbc.writeMem(0xbf52, { 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x10f5, gbc.sp());
        EXPECT(0xbf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbf52));
        // 85 007B
        gbc.setState(0x66cd, 0xfcf7, 0x6360, 0x7419, 0xddd1, 0xdcd7, 0x0, 0x0);
        gbc.writeMem(0x66cd, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x66ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 007C
        gbc.setState(0x5a13, 0xe80f, 0x4830, 0x62fe, 0xd735, 0x34fe, 0x0, 0x1);
        gbc.writeMem(0x5a13, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x5a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 007D
        gbc.setState(0x6226, 0xd651, 0x6a50, 0xc3a6, 0x68c0, 0x84cc, 0x1, 0x0);
        gbc.writeMem(0x6226, { 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd651, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 007E
        gbc.setState(0xd788, 0xbf6d, 0x53e0, 0x765d, 0x7968, 0xe006, 0x0, 0x0);
        gbc.writeMem(0xd788, { 0x85 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbf6d, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd788));
        // 85 0081
        gbc.setState(0x602b, 0xd27c, 0xe500, 0x8ec1, 0xccb6, 0xb3b4, 0x1, 0x1);
        gbc.writeMem(0x602b, { 0x85 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0082
        gbc.setState(0x46a7, 0x4c19, 0xb030, 0xd73d, 0x5b9a, 0x7127, 0x1, 0x1);
        gbc.writeMem(0x46a7, { 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4c19, gbc.sp());
        EXPECT(0x46a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0083
        gbc.setState(0x43d6, 0xfee2, 0x7a30, 0x14cb, 0xe0be, 0x6ee2, 0x1, 0x1);
        gbc.writeMem(0x43d6, { 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfee2, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0084
        gbc.setState(0x7fea, 0xfd14, 0x5b90, 0x15a, 0xa688, 0x6ec7, 0x1, 0x1);
        gbc.writeMem(0x7fea, { 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfd14, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0085
        gbc.setState(0xbc26, 0xb201, 0x8b70, 0xb26a, 0x5e91, 0xf93b, 0x0, 0x0);
        gbc.writeMem(0xbc26, { 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb201, gbc.sp());
        EXPECT(0xbc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbc26));
        // 85 0086
        gbc.setState(0xcd9a, 0xb8b, 0xc740, 0x390c, 0x79d7, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0x85 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcd9a));
        // 85 0087
        gbc.setState(0x9c3c, 0xce8d, 0x29e0, 0xd55, 0xc1a9, 0xfc21, 0x0, 0x1);
        gbc.writeMem(0x9c3c, { 0x85 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xce8d, gbc.sp());
        EXPECT(0x9c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9c3c));
        // 85 0089
        gbc.setState(0x440, 0xc828, 0xbb00, 0x33e9, 0xb18b, 0xe1b2, 0x1, 0x0);
        gbc.writeMem(0x440, { 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 008A
        gbc.setState(0xb12b, 0x536d, 0x3150, 0x3162, 0xc42, 0x3080, 0x0, 0x1);
        gbc.writeMem(0xb12b, { 0x85 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x536d, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb12b));
        // 85 008B
        gbc.setState(0x3622, 0x2e7c, 0xc700, 0xa4, 0xf1e3, 0xcae4, 0x0, 0x0);
        gbc.writeMem(0x3622, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x3623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 008C
        gbc.setState(0xae02, 0x3044, 0x8280, 0xebfa, 0xcf28, 0xf41a, 0x1, 0x1);
        gbc.writeMem(0xae02, { 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3044, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae02));
        // 85 008E
        gbc.setState(0x7578, 0x8a08, 0xf2e0, 0x7310, 0x18e3, 0x532c, 0x0, 0x1);
        gbc.writeMem(0x7578, { 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 008F
        gbc.setState(0xa9f4, 0x2421, 0xacd0, 0x92de, 0x8e32, 0x955e, 0x1, 0x0);
        gbc.writeMem(0xa9f4, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2421, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa9f4));
        // 85 0091
        gbc.setState(0x3a4e, 0x4883, 0xf110, 0xdb08, 0xde75, 0xec73, 0x0, 0x1);
        gbc.writeMem(0x3a4e, { 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0092
        gbc.setState(0x28a2, 0x400, 0x5df0, 0x4c28, 0x3c8e, 0xe495, 0x1, 0x1);
        gbc.writeMem(0x28a2, { 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x400, gbc.sp());
        EXPECT(0x28a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0093
        gbc.setState(0x214c, 0x30d2, 0x4600, 0xee39, 0xddb1, 0x291d, 0x1, 0x1);
        gbc.writeMem(0x214c, { 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x214d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0094
        gbc.setState(0x4490, 0x4a64, 0xf800, 0x11c4, 0x4d1d, 0xdfad, 0x1, 0x1);
        gbc.writeMem(0x4490, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0095
        gbc.setState(0x7b3e, 0x80ed, 0xa1b0, 0xce70, 0xbe8b, 0xfc0d, 0x1, 0x0);
        gbc.writeMem(0x7b3e, { 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0096
        gbc.setState(0x5621, 0xf2e, 0xbe20, 0xdecd, 0xb667, 0xd7f7, 0x1, 0x0);
        gbc.writeMem(0x5621, { 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0097
        gbc.setState(0x8383, 0x5764, 0xc3f0, 0xbf57, 0x41af, 0x2752, 0x0, 0x0);
        gbc.writeMem(0x8383, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5764, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8383));
        // 85 0098
        gbc.setState(0xe16, 0xf551, 0x5680, 0xcd9f, 0xfee9, 0x17c2, 0x1, 0x0);
        gbc.writeMem(0xe16, { 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0099
        gbc.setState(0x396a, 0x6873, 0x6190, 0x4fec, 0xc8fc, 0x9468, 0x0, 0x1);
        gbc.writeMem(0x396a, { 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6873, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 009A
        gbc.setState(0xcd10, 0xdc46, 0xdcc0, 0x9948, 0xe2cb, 0x60a9, 0x1, 0x1);
        gbc.writeMem(0xcd10, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0xcd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcd10));
        // 85 009B
        gbc.setState(0xc5dc, 0xb6bf, 0xc180, 0x25c2, 0x55fd, 0x17, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc5dc));
        // 85 009C
        gbc.setState(0x58c0, 0x732, 0x65d0, 0xcccc, 0xdcb4, 0x75e4, 0x1, 0x1);
        gbc.writeMem(0x58c0, { 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x732, gbc.sp());
        EXPECT(0x58c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 009D
        gbc.setState(0xddea, 0xb629, 0xb290, 0xdd62, 0xe6cb, 0xab49, 0x1, 0x1);
        gbc.writeMem(0xddea, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb629, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xddea));
        // 85 009E
        gbc.setState(0xecf4, 0x7f2c, 0xe6e0, 0x837e, 0x6ce, 0x490, 0x0, 0x1);
        gbc.writeMem(0xecf4, { 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7f2c, gbc.sp());
        EXPECT(0xecf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xecf4));
        // 85 009F
        gbc.setState(0x20da, 0x2365, 0x5e20, 0xc71b, 0xd5ef, 0xbc4b, 0x1, 0x0);
        gbc.writeMem(0x20da, { 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x20db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00A0
        gbc.setState(0xeb7, 0x6ea2, 0x2790, 0x5caf, 0xf318, 0xd687, 0x0, 0x1);
        gbc.writeMem(0xeb7, { 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6ea2, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00A1
        gbc.setState(0x8d43, 0x2a42, 0xb010, 0x6c77, 0x21fc, 0x4c03, 0x0, 0x0);
        gbc.writeMem(0x8d43, { 0x85 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0x8d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8d43));
        // 85 00A2
        gbc.setState(0xf20, 0x92eb, 0xc1e0, 0x46eb, 0x6e5f, 0x3fd3, 0x1, 0x1);
        gbc.writeMem(0xf20, { 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0xf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00A3
        gbc.setState(0x5962, 0x8079, 0xc570, 0xbd56, 0x2540, 0x36f6, 0x0, 0x1);
        gbc.writeMem(0x5962, { 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8079, gbc.sp());
        EXPECT(0x5963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00A4
        gbc.setState(0xabd6, 0x67ca, 0x1360, 0xf156, 0x58de, 0xe201, 0x1, 0x0);
        gbc.writeMem(0xabd6, { 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0xabd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xabd6));
        // 85 00A5
        gbc.setState(0x1ce3, 0xf06e, 0x4c40, 0xd9d0, 0x8685, 0x4029, 0x1, 0x0);
        gbc.writeMem(0x1ce3, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x1ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00A6
        gbc.setState(0x8d8f, 0x8054, 0xb820, 0xb79b, 0x5713, 0xdc58, 0x0, 0x0);
        gbc.writeMem(0x8d8f, { 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8054, gbc.sp());
        EXPECT(0x8d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8d8f));
        // 85 00A7
        gbc.setState(0x5629, 0xca25, 0xc0f0, 0x8301, 0x9c60, 0x467a, 0x0, 0x0);
        gbc.writeMem(0x5629, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00A8
        gbc.setState(0x7a74, 0xacdb, 0x9400, 0x1421, 0xd8e6, 0x3eec, 0x1, 0x0);
        gbc.writeMem(0x7a74, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xacdb, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00A9
        gbc.setState(0x25c2, 0x5c66, 0xa620, 0xa90c, 0x61e2, 0xa71f, 0x1, 0x1);
        gbc.writeMem(0x25c2, { 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5c66, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00AA
        gbc.setState(0x4da2, 0x676b, 0xe360, 0x5040, 0x7c94, 0x7445, 0x0, 0x0);
        gbc.writeMem(0x4da2, { 0x85 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x676b, gbc.sp());
        EXPECT(0x4da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00AB
        gbc.setState(0x9827, 0x7e6f, 0x5420, 0xb111, 0xc636, 0x8892, 0x1, 0x0);
        gbc.writeMem(0x9827, { 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7e6f, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9827));
        // 85 00AC
        gbc.setState(0x6948, 0x396b, 0x58e0, 0xbfa6, 0x7e9d, 0xab39, 0x0, 0x0);
        gbc.writeMem(0x6948, { 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x396b, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00AD
        gbc.setState(0xacf0, 0x3cff, 0x5e10, 0xf80c, 0x1070, 0x5fce, 0x0, 0x1);
        gbc.writeMem(0xacf0, { 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0xacf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xacf0));
        // 85 00AE
        gbc.setState(0x1d2a, 0xa7c8, 0x89c0, 0xd5a8, 0x21b7, 0x2916, 0x1, 0x0);
        gbc.writeMem(0x1d2a, { 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0x1d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00AF
        gbc.setState(0xd7cf, 0x49d6, 0x4b60, 0x338a, 0xde2d, 0x74e5, 0x0, 0x0);
        gbc.writeMem(0xd7cf, { 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x49d6, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd7cf));
        // 85 00B0
        gbc.setState(0x589c, 0x4173, 0xc090, 0x891d, 0x8022, 0xe688, 0x1, 0x1);
        gbc.writeMem(0x589c, { 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4173, gbc.sp());
        EXPECT(0x589d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00B1
        gbc.setState(0x4f40, 0x9589, 0xef00, 0x8198, 0x85ed, 0xf5ba, 0x0, 0x1);
        gbc.writeMem(0x4f40, { 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x4f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00B2
        gbc.setState(0x988c, 0x50d, 0x6650, 0xfb03, 0xe934, 0x13af, 0x1, 0x0);
        gbc.writeMem(0x988c, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0x988d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x988c));
        // 85 00B5
        gbc.setState(0x33c5, 0xc608, 0x41b0, 0x74b4, 0x9232, 0xb9f, 0x0, 0x0);
        gbc.writeMem(0x33c5, { 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc608, gbc.sp());
        EXPECT(0x33c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00B6
        gbc.setState(0x1a98, 0xdf3f, 0x900, 0x902f, 0x498e, 0xcd8d, 0x1, 0x1);
        gbc.writeMem(0x1a98, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x1a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00B7
        gbc.setState(0x2c26, 0xc371, 0xe560, 0xf19a, 0x2e73, 0xce02, 0x1, 0x0);
        gbc.writeMem(0x2c26, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc371, gbc.sp());
        EXPECT(0x2c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00B8
        gbc.setState(0x4815, 0xc2e9, 0xd4f0, 0x55b2, 0xd0b, 0x219c, 0x1, 0x1);
        gbc.writeMem(0x4815, { 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc2e9, gbc.sp());
        EXPECT(0x4816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00B9
        gbc.setState(0x4214, 0xab0c, 0xfdd0, 0x33f0, 0xdc20, 0x6747, 0x0, 0x1);
        gbc.writeMem(0x4214, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0x4215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00BA
        gbc.setState(0xb4fa, 0x6781, 0x3730, 0xbb9a, 0xd277, 0xde35, 0x0, 0x0);
        gbc.writeMem(0xb4fa, { 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0xb4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb4fa));
        // 85 00BB
        gbc.setState(0xefc3, 0x94ec, 0xc130, 0x7698, 0xa77b, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0xefc3, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x94ec, gbc.sp());
        EXPECT(0xefc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xefc3));
        // 85 00BD
        gbc.setState(0x6f06, 0x31ef, 0xc470, 0xb499, 0xf7b8, 0xa609, 0x0, 0x0);
        gbc.writeMem(0x6f06, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0x6f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00BE
        gbc.setState(0xacc3, 0x6c73, 0x1e50, 0x7389, 0x4188, 0xa332, 0x1, 0x1);
        gbc.writeMem(0xacc3, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6c73, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xacc3));
        // 85 00BF
        gbc.setState(0xc655, 0xb818, 0x28a0, 0x7699, 0x7d15, 0xbad2, 0x0, 0x0);
        gbc.writeMem(0xc655, { 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb818, gbc.sp());
        EXPECT(0xc656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc655));
        // 85 00C0
        gbc.setState(0x9ab, 0x1bef, 0x7500, 0x5366, 0x4f32, 0xf07, 0x0, 0x0);
        gbc.writeMem(0x9ab, { 0x85 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00C2
        gbc.setState(0xa13c, 0x47fc, 0xcb80, 0xd5ca, 0x1ffa, 0x2139, 0x0, 0x1);
        gbc.writeMem(0xa13c, { 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x47fc, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa13c));
        // 85 00C3
        gbc.setState(0x85df, 0xe1c1, 0xc670, 0xdf73, 0x684f, 0x1726, 0x1, 0x1);
        gbc.writeMem(0x85df, { 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe1c1, gbc.sp());
        EXPECT(0x85e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x85df));
        // 85 00C5
        gbc.setState(0x63ed, 0x6268, 0x89b0, 0xdf58, 0x26a6, 0x3494, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6268, gbc.sp());
        EXPECT(0x63ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00C7
        gbc.setState(0x1b52, 0xeae6, 0x4260, 0xe00f, 0x4d55, 0xc3eb, 0x1, 0x1);
        gbc.writeMem(0x1b52, { 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0x1b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00C8
        gbc.setState(0x4073, 0xc02f, 0xaa80, 0xb1da, 0x4388, 0x2fd7, 0x1, 0x1);
        gbc.writeMem(0x4073, { 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc02f, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00C9
        gbc.setState(0x9c91, 0x5d78, 0xa6c0, 0xeac2, 0x27f0, 0xf7db, 0x1, 0x1);
        gbc.writeMem(0x9c91, { 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5d78, gbc.sp());
        EXPECT(0x9c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9c91));
        // 85 00CA
        gbc.setState(0x4435, 0x11fa, 0x9810, 0x447c, 0xd122, 0xa156, 0x1, 0x0);
        gbc.writeMem(0x4435, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x11fa, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00CB
        gbc.setState(0xa5d9, 0xc4f6, 0x5c60, 0xc828, 0x3fe5, 0xd473, 0x0, 0x1);
        gbc.writeMem(0xa5d9, { 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0xa5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa5d9));
        // 85 00CC
        gbc.setState(0x7401, 0x9c7f, 0x3ca0, 0xd373, 0x44cd, 0x523d, 0x1, 0x0);
        gbc.writeMem(0x7401, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9c7f, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00CF
        gbc.setState(0x721b, 0xc47f, 0xa730, 0x9f71, 0xabe5, 0xdaf, 0x1, 0x1);
        gbc.writeMem(0x721b, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0x721c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00D0
        gbc.setState(0x5538, 0xb2f9, 0x4110, 0x8b90, 0xfbe, 0x9633, 0x0, 0x1);
        gbc.writeMem(0x5538, { 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb2f9, gbc.sp());
        EXPECT(0x5539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00D1
        gbc.setState(0xbfb2, 0xe10d, 0x7940, 0xd556, 0x4cff, 0x5a82, 0x0, 0x1);
        gbc.writeMem(0xbfb2, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbfb2));
        // 85 00D2
        gbc.setState(0xae6a, 0xfbb0, 0x9ef0, 0x797, 0xee5e, 0x6b53, 0x1, 0x1);
        gbc.writeMem(0xae6a, { 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfbb0, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae6a));
        // 85 00D3
        gbc.setState(0x69d9, 0x1c22, 0x44d0, 0x9cdb, 0xffbe, 0x1cf0, 0x1, 0x1);
        gbc.writeMem(0x69d9, { 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00D4
        gbc.setState(0x36cb, 0xb937, 0x2820, 0x93d8, 0xffe7, 0xe8c6, 0x1, 0x1);
        gbc.writeMem(0x36cb, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00D5
        gbc.setState(0x53aa, 0x5d2b, 0xbcb0, 0xe222, 0x8aeb, 0x5ce0, 0x1, 0x0);
        gbc.writeMem(0x53aa, { 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00D6
        gbc.setState(0x9757, 0x2534, 0x6ab0, 0x8c69, 0xd5a0, 0x5847, 0x0, 0x1);
        gbc.writeMem(0x9757, { 0x85 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2534, gbc.sp());
        EXPECT(0x9758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9757));
        // 85 00D7
        gbc.setState(0xea2c, 0xcd73, 0x3e00, 0xd2ae, 0x8493, 0x8d77, 0x0, 0x1);
        gbc.writeMem(0xea2c, { 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcd73, gbc.sp());
        EXPECT(0xea2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xea2c));
        // 85 00D8
        gbc.setState(0xb22b, 0x3744, 0xe590, 0x85b4, 0xd4e0, 0xe92, 0x0, 0x1);
        gbc.writeMem(0xb22b, { 0x85 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3744, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb22b));
        // 85 00D9
        gbc.setState(0x5acb, 0xcb9b, 0xda50, 0x6eab, 0xa9e3, 0x53c6, 0x1, 0x1);
        gbc.writeMem(0x5acb, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x5acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00DA
        gbc.setState(0x7d4a, 0x925, 0x2610, 0x1c15, 0x3b34, 0xeace, 0x0, 0x0);
        gbc.writeMem(0x7d4a, { 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x925, gbc.sp());
        EXPECT(0x7d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00DB
        gbc.setState(0x2252, 0xbc51, 0x5d40, 0xbea8, 0xed34, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x2252, { 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00DC
        gbc.setState(0x1876, 0xb96f, 0xa130, 0x2ac0, 0xfcc4, 0x7ecc, 0x0, 0x0);
        gbc.writeMem(0x1876, { 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb96f, gbc.sp());
        EXPECT(0x1877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00DD
        gbc.setState(0x7fc7, 0xeb96, 0x4c0, 0xf6f7, 0x9804, 0x641f, 0x1, 0x0);
        gbc.writeMem(0x7fc7, { 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0x7fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00DE
        gbc.setState(0xeefe, 0xab37, 0x6800, 0x4a0d, 0xd185, 0x236d, 0x1, 0x0);
        gbc.writeMem(0xeefe, { 0x85 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeefe));
        // 85 00DF
        gbc.setState(0xb667, 0xe6f1, 0xf3c0, 0x9b12, 0x8b76, 0x162e, 0x0, 0x1);
        gbc.writeMem(0xb667, { 0x85 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe6f1, gbc.sp());
        EXPECT(0xb668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb667));
        // 85 00E0
        gbc.setState(0x99b6, 0x6762, 0xe600, 0xaf7a, 0x801f, 0x805f, 0x1, 0x1);
        gbc.writeMem(0x99b6, { 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6762, gbc.sp());
        EXPECT(0x99b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x99b6));
        // 85 00E2
        gbc.setState(0xa7a4, 0xd5c9, 0xfaa0, 0x77da, 0x1081, 0xb3a9, 0x0, 0x0);
        gbc.writeMem(0xa7a4, { 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd5c9, gbc.sp());
        EXPECT(0xa7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa7a4));
        // 85 00E3
        gbc.setState(0xcc49, 0xd53e, 0x76e0, 0xd35b, 0xb95d, 0x9904, 0x0, 0x0);
        gbc.writeMem(0xcc49, { 0x85 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0xcc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcc49));
        // 85 00E4
        gbc.setState(0xf07, 0xa970, 0xcde0, 0x4134, 0xa160, 0x286d, 0x0, 0x0);
        gbc.writeMem(0xf07, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa970, gbc.sp());
        EXPECT(0xf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00E6
        gbc.setState(0xad, 0xca2f, 0xa160, 0xade9, 0xe5d0, 0x9bc0, 0x0, 0x0);
        gbc.writeMem(0xad, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xca2f, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00E7
        gbc.setState(0x2a6b, 0xe865, 0xc4a0, 0xf162, 0x3679, 0x1458, 0x1, 0x1);
        gbc.writeMem(0x2a6b, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe865, gbc.sp());
        EXPECT(0x2a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00E8
        gbc.setState(0xe509, 0x8968, 0xf080, 0x6696, 0x6729, 0xb94c, 0x1, 0x1);
        gbc.writeMem(0xe509, { 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe509));
        // 85 00E9
        gbc.setState(0x32e9, 0x3341, 0x3fc0, 0x8205, 0xbf5b, 0xf76d, 0x1, 0x0);
        gbc.writeMem(0x32e9, { 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00EA
        gbc.setState(0x364f, 0x32d0, 0xb30, 0x35dc, 0x78ef, 0x75f4, 0x1, 0x1);
        gbc.writeMem(0x364f, { 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00EB
        gbc.setState(0x11f5, 0x648f, 0xb870, 0x6949, 0x990b, 0x4fd2, 0x0, 0x0);
        gbc.writeMem(0x11f5, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x648f, gbc.sp());
        EXPECT(0x11f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00EC
        gbc.setState(0x11f6, 0x92ad, 0xc4e0, 0x1b50, 0xbd36, 0x78a, 0x0, 0x1);
        gbc.writeMem(0x11f6, { 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x92ad, gbc.sp());
        EXPECT(0x11f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00ED
        gbc.setState(0x335b, 0x5903, 0x1e30, 0x1081, 0x7cb1, 0xb5bf, 0x0, 0x0);
        gbc.writeMem(0x335b, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5903, gbc.sp());
        EXPECT(0x335c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00EE
        gbc.setState(0xa5b6, 0x7dce, 0x9e10, 0x7487, 0x83a1, 0x7b2d, 0x1, 0x0);
        gbc.writeMem(0xa5b6, { 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7dce, gbc.sp());
        EXPECT(0xa5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa5b6));
        // 85 00EF
        gbc.setState(0x189, 0xbafb, 0x7ed0, 0xb448, 0x3cf6, 0xe45a, 0x1, 0x0);
        gbc.writeMem(0x189, { 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbafb, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00F0
        gbc.setState(0x5e17, 0xd094, 0x23f0, 0x8ab8, 0xbbde, 0x8de3, 0x0, 0x0);
        gbc.writeMem(0x5e17, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0x5e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00F1
        gbc.setState(0x33c1, 0xd912, 0xb3f0, 0xc371, 0x567a, 0x9d8b, 0x1, 0x0);
        gbc.writeMem(0x33c1, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd912, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00F2
        gbc.setState(0x96c3, 0x7c62, 0xb460, 0x516c, 0x9272, 0x48ff, 0x0, 0x1);
        gbc.writeMem(0x96c3, { 0x85 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x96c3));
        // 85 00F3
        gbc.setState(0xef25, 0x21e5, 0x5030, 0x3264, 0xb1f1, 0x4807, 0x0, 0x1);
        gbc.writeMem(0xef25, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x21e5, gbc.sp());
        EXPECT(0xef26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xef25));
        // 85 00F4
        gbc.setState(0x6f9, 0x4dee, 0xb5a0, 0xb7da, 0x54ab, 0xfe88, 0x0, 0x0);
        gbc.writeMem(0x6f9, { 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4dee, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00F5
        gbc.setState(0x82df, 0xb990, 0x28b0, 0x3f94, 0xc96, 0xf555, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0x82e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x82df));
        // 85 00F6
        gbc.setState(0x90b5, 0xee2c, 0x3010, 0x592, 0xc74d, 0x2245, 0x1, 0x1);
        gbc.writeMem(0x90b5, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee2c, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x90b5));
        // 85 00F7
        gbc.setState(0xcaef, 0x4f51, 0x14d0, 0xd48, 0x69b9, 0xc97e, 0x1, 0x0);
        gbc.writeMem(0xcaef, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4f51, gbc.sp());
        EXPECT(0xcaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcaef));
        // 85 00F8
        gbc.setState(0xc14, 0x77b9, 0xb680, 0x8c9a, 0xa740, 0xcf0f, 0x0, 0x0);
        gbc.writeMem(0xc14, { 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0xc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00F9
        gbc.setState(0xebd3, 0xc5f2, 0xe290, 0xf725, 0x58d3, 0xd75e, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0x85 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc5f2, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xebd3));
        // 85 00FA
        gbc.setState(0x138d, 0xc5c7, 0x7530, 0xe8b0, 0x387a, 0xfa81, 0x0, 0x0);
        gbc.writeMem(0x138d, { 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc5c7, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00FB
        gbc.setState(0xcf26, 0x2e2d, 0x4120, 0x6725, 0x9973, 0x2bb8, 0x1, 0x0);
        gbc.writeMem(0xcf26, { 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0xcf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcf26));
        // 85 00FC
        gbc.setState(0x5867, 0x5587, 0x68f0, 0x3757, 0xffff, 0xb32a, 0x0, 0x0);
        gbc.writeMem(0x5867, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5587, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 00FD
        gbc.setState(0xb73c, 0x17b8, 0xc90, 0x698f, 0x9fa5, 0xacf, 0x0, 0x1);
        gbc.writeMem(0xb73c, { 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x17b8, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb73c));
        // 85 00FE
        gbc.setState(0x795d, 0xeffb, 0x8210, 0xeac7, 0x9b07, 0x5d83, 0x1, 0x1);
        gbc.writeMem(0x795d, { 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeffb, gbc.sp());
        EXPECT(0x795e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 00FF
        gbc.setState(0xefba, 0x4071, 0x5fb0, 0xa963, 0xf9ce, 0xf41e, 0x0, 0x0);
        gbc.writeMem(0xefba, { 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xefba));
        // 85 0100
        gbc.setState(0xd20c, 0x3944, 0x3430, 0xb730, 0x69ff, 0x23b2, 0x0, 0x0);
        gbc.writeMem(0xd20c, { 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3944, gbc.sp());
        EXPECT(0xd20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd20c));
        // 85 0101
        gbc.setState(0x6280, 0x8107, 0xf470, 0xebbe, 0xe7ee, 0x188f, 0x0, 0x0);
        gbc.writeMem(0x6280, { 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8107, gbc.sp());
        EXPECT(0x6281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0102
        gbc.setState(0x2639, 0x2f8d, 0xa040, 0xb3a3, 0xee8b, 0x9da5, 0x1, 0x0);
        gbc.writeMem(0x2639, { 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0x263a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0103
        gbc.setState(0xef3f, 0xc8d5, 0xf8c0, 0xd7cd, 0xf6ac, 0xc38f, 0x0, 0x0);
        gbc.writeMem(0xef3f, { 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xef3f));
        // 85 0104
        gbc.setState(0x684a, 0x642a, 0x89c0, 0xc44d, 0xfdac, 0xefc2, 0x0, 0x0);
        gbc.writeMem(0x684a, { 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x684b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0105
        gbc.setState(0xc5d0, 0x2cce, 0x9420, 0x2f7f, 0x5a7d, 0x6b79, 0x1, 0x1);
        gbc.writeMem(0xc5d0, { 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc5d0));
        // 85 0106
        gbc.setState(0xb8dc, 0x6c3f, 0x2be0, 0x242c, 0x1c21, 0x9fae, 0x1, 0x0);
        gbc.writeMem(0xb8dc, { 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6c3f, gbc.sp());
        EXPECT(0xb8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb8dc));
        // 85 0107
        gbc.setState(0xe539, 0x5bc9, 0x58d0, 0x14f2, 0xecd4, 0x6f52, 0x0, 0x0);
        gbc.writeMem(0xe539, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5bc9, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe539));
        // 85 0108
        gbc.setState(0xbb1, 0xffb, 0xf5f0, 0x346a, 0xfacc, 0x5d1b, 0x0, 0x1);
        gbc.writeMem(0xbb1, { 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 010A
        gbc.setState(0x4082, 0xb4b4, 0x8250, 0xd196, 0x599e, 0xa480, 0x1, 0x0);
        gbc.writeMem(0x4082, { 0x85 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x4083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 010B
        gbc.setState(0x61f5, 0x9c64, 0x8240, 0xda75, 0xc5f5, 0x3ec7, 0x1, 0x0);
        gbc.writeMem(0x61f5, { 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9c64, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 010C
        gbc.setState(0xbbb2, 0x2175, 0xbfc0, 0x601e, 0x5bb1, 0xc966, 0x1, 0x0);
        gbc.writeMem(0xbbb2, { 0x85 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbbb2));
        // 85 010D
        gbc.setState(0x3f65, 0x5539, 0x7980, 0xe483, 0x825, 0x37e2, 0x1, 0x0);
        gbc.writeMem(0x3f65, { 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5539, gbc.sp());
        EXPECT(0x3f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 010E
        gbc.setState(0x126c, 0xccd3, 0x47b0, 0x4c68, 0x1cdc, 0xc65f, 0x1, 0x1);
        gbc.writeMem(0x126c, { 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xccd3, gbc.sp());
        EXPECT(0x126d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 010F
        gbc.setState(0x383d, 0x4e6d, 0xc930, 0x51ee, 0x6c9c, 0x5b84, 0x0, 0x0);
        gbc.writeMem(0x383d, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4e6d, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0110
        gbc.setState(0xe1f1, 0xef12, 0x8ef0, 0x8915, 0xef07, 0xe173, 0x1, 0x0);
        gbc.writeMem(0xe1f1, { 0x85 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xef12, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe1f1));
        // 85 0112
        gbc.setState(0x3cf, 0x1f26, 0xd6a0, 0x717d, 0xa404, 0x648, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1f26, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0113
        gbc.setState(0xe223, 0xa9dc, 0x7410, 0x5a32, 0x6c71, 0xbb0e, 0x1, 0x1);
        gbc.writeMem(0xe223, { 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa9dc, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe223));
        // 85 0114
        gbc.setState(0xd28a, 0xddd1, 0x230, 0x57d9, 0x33a6, 0xf0d4, 0x1, 0x1);
        gbc.writeMem(0xd28a, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xddd1, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd28a));
        // 85 0115
        gbc.setState(0x6d3c, 0x73e2, 0x1b40, 0x8d3c, 0x5b20, 0x4885, 0x0, 0x1);
        gbc.writeMem(0x6d3c, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x73e2, gbc.sp());
        EXPECT(0x6d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0116
        gbc.setState(0xa28c, 0x1426, 0x3920, 0x6c35, 0x4065, 0xe76f, 0x1, 0x1);
        gbc.writeMem(0xa28c, { 0x85 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa28c));
        // 85 0117
        gbc.setState(0x9500, 0xe9fd, 0xdce0, 0xf610, 0x350f, 0xe201, 0x0, 0x1);
        gbc.writeMem(0x9500, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe9fd, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9500));
        // 85 0118
        gbc.setState(0xc236, 0x274b, 0xc4f0, 0x87a1, 0x2736, 0x620, 0x0, 0x0);
        gbc.writeMem(0xc236, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0xc237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc236));
        // 85 0119
        gbc.setState(0xa21a, 0xb85e, 0x4320, 0x5273, 0x7e2d, 0xa78f, 0x1, 0x1);
        gbc.writeMem(0xa21a, { 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb85e, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa21a));
        // 85 011A
        gbc.setState(0x2457, 0x1e44, 0xc8d0, 0x7f6e, 0xd8fd, 0xc429, 0x0, 0x0);
        gbc.writeMem(0x2457, { 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1e44, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 011B
        gbc.setState(0x50b4, 0x8735, 0xa4b0, 0xa48b, 0xd990, 0xe708, 0x1, 0x1);
        gbc.writeMem(0x50b4, { 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8735, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 011C
        gbc.setState(0x8b5, 0x92e6, 0xb640, 0x3789, 0xccda, 0xf2b9, 0x0, 0x0);
        gbc.writeMem(0x8b5, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x92e6, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 011D
        gbc.setState(0xd874, 0x976c, 0x2710, 0xffd2, 0x51b0, 0xcd67, 0x0, 0x0);
        gbc.writeMem(0xd874, { 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x976c, gbc.sp());
        EXPECT(0xd875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd874));
        // 85 011E
        gbc.setState(0xcee6, 0xd0b5, 0x590, 0xfc67, 0x27c, 0x67e7, 0x0, 0x0);
        gbc.writeMem(0xcee6, { 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd0b5, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcee6));
        // 85 011F
        gbc.setState(0xdc3b, 0xa41b, 0x2bb0, 0x96da, 0x544c, 0x8a1e, 0x0, 0x0);
        gbc.writeMem(0xdc3b, { 0x85 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa41b, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdc3b));
        // 85 0120
        gbc.setState(0x4e05, 0xe757, 0x3210, 0xbacc, 0xab5a, 0xe36d, 0x0, 0x1);
        gbc.writeMem(0x4e05, { 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0x4e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0122
        gbc.setState(0x9d58, 0x3b37, 0x72b0, 0x102c, 0xb939, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0x9d58, { 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b37, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d58));
        // 85 0123
        gbc.setState(0x2bda, 0xdd8f, 0x15d0, 0x3885, 0xcb3d, 0x588a, 0x1, 0x1);
        gbc.writeMem(0x2bda, { 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdd8f, gbc.sp());
        EXPECT(0x2bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0124
        gbc.setState(0x4ac4, 0xfdc1, 0x5de0, 0x7bc6, 0x5f65, 0x4b85, 0x0, 0x0);
        gbc.writeMem(0x4ac4, { 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0125
        gbc.setState(0xcd66, 0xe275, 0x1780, 0x5b26, 0x8989, 0xae3d, 0x0, 0x0);
        gbc.writeMem(0xcd66, { 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcd66));
        // 85 0126
        gbc.setState(0xef47, 0x43f5, 0xae60, 0x5068, 0x29c5, 0xdf75, 0x0, 0x1);
        gbc.writeMem(0xef47, { 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x43f5, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xef47));
        // 85 0127
        gbc.setState(0xdc6d, 0xe533, 0x2100, 0x447, 0xf181, 0x99ac, 0x1, 0x1);
        gbc.writeMem(0xdc6d, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe533, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdc6d));
        // 85 0128
        gbc.setState(0x5898, 0xb1c, 0x9410, 0xda35, 0x86bb, 0x50fa, 0x0, 0x1);
        gbc.writeMem(0x5898, { 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb1c, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0129
        gbc.setState(0xee0a, 0x76e1, 0x8ef0, 0x337, 0x376f, 0x37e2, 0x1, 0x0);
        gbc.writeMem(0xee0a, { 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x76e1, gbc.sp());
        EXPECT(0xee0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xee0a));
        // 85 012A
        gbc.setState(0xa090, 0x773, 0xde40, 0xc239, 0x5ebf, 0x3779, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x773, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa090));
        // 85 012B
        gbc.setState(0xae95, 0x8f99, 0x77a0, 0xd991, 0x8075, 0x3aed, 0x0, 0x1);
        gbc.writeMem(0xae95, { 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8f99, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae95));
        // 85 012C
        gbc.setState(0xe36b, 0xe801, 0x3480, 0xfd1c, 0x45ee, 0x4ab2, 0x0, 0x0);
        gbc.writeMem(0xe36b, { 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe801, gbc.sp());
        EXPECT(0xe36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe36b));
        // 85 012D
        gbc.setState(0xaf61, 0xd31, 0xc190, 0xfbf8, 0x81e1, 0xe2a8, 0x0, 0x1);
        gbc.writeMem(0xaf61, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0xaf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaf61));
        // 85 012E
        gbc.setState(0xab2e, 0x8008, 0x7040, 0xcd9a, 0xbe, 0x8430, 0x1, 0x1);
        gbc.writeMem(0xab2e, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8008, gbc.sp());
        EXPECT(0xab2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xab2e));
        // 85 012F
        gbc.setState(0x65df, 0xabff, 0xb580, 0x9173, 0x94da, 0x36f9, 0x0, 0x0);
        gbc.writeMem(0x65df, { 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0130
        gbc.setState(0x5f9, 0x77ce, 0xc4f0, 0x57cc, 0xfc78, 0x6ea9, 0x1, 0x0);
        gbc.writeMem(0x5f9, { 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x77ce, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0131
        gbc.setState(0x5fbd, 0x3706, 0x40e0, 0x5257, 0x3cda, 0xb62d, 0x0, 0x0);
        gbc.writeMem(0x5fbd, { 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3706, gbc.sp());
        EXPECT(0x5fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0132
        gbc.setState(0x7cfb, 0x3812, 0xe420, 0xdc40, 0xf233, 0xf9b1, 0x1, 0x0);
        gbc.writeMem(0x7cfb, { 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0x7cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0133
        gbc.setState(0xe7e3, 0xcbd3, 0xba60, 0x91f3, 0x14ed, 0xe2b5, 0x1, 0x1);
        gbc.writeMem(0xe7e3, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcbd3, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe7e3));
        // 85 0134
        gbc.setState(0x54b9, 0xf99d, 0xc120, 0xdff3, 0xab31, 0x1de9, 0x0, 0x1);
        gbc.writeMem(0x54b9, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf99d, gbc.sp());
        EXPECT(0x54ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0135
        gbc.setState(0x331d, 0x810, 0x5020, 0x3cd6, 0xe04, 0x6d12, 0x0, 0x1);
        gbc.writeMem(0x331d, { 0x85 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x810, gbc.sp());
        EXPECT(0x331e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0136
        gbc.setState(0x37e2, 0xbec3, 0xa020, 0x567b, 0x3f9a, 0x3000, 0x1, 0x1);
        gbc.writeMem(0x37e2, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0137
        gbc.setState(0xa5d, 0xbfe1, 0x8660, 0xec70, 0x7129, 0x1d59, 0x0, 0x0);
        gbc.writeMem(0xa5d, { 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbfe1, gbc.sp());
        EXPECT(0xa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0139
        gbc.setState(0xdf7d, 0xabe2, 0x3d20, 0x3b07, 0x9257, 0xfb6f, 0x1, 0x1);
        gbc.writeMem(0xdf7d, { 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdf7d));
        // 85 013B
        gbc.setState(0x6438, 0x2890, 0x5ac0, 0xc259, 0xea0d, 0x6b2c, 0x0, 0x0);
        gbc.writeMem(0x6438, { 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2890, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 013C
        gbc.setState(0xaee2, 0xd80, 0x3f10, 0x8b2b, 0x19df, 0xc718, 0x0, 0x1);
        gbc.writeMem(0xaee2, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0xaee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaee2));
        // 85 013D
        gbc.setState(0x3707, 0x1167, 0x80d0, 0xf7c, 0xa83c, 0xe37, 0x0, 0x1);
        gbc.writeMem(0x3707, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1167, gbc.sp());
        EXPECT(0x3708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 013E
        gbc.setState(0x49b3, 0xff5e, 0xc580, 0x475c, 0x7959, 0x5bfd, 0x1, 0x1);
        gbc.writeMem(0x49b3, { 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0140
        gbc.setState(0xa8f2, 0xd978, 0xaf00, 0xb47a, 0xd25a, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0xa8f2, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd978, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa8f2));
        // 85 0141
        gbc.setState(0xd1d6, 0x1e40, 0x72e0, 0x86d1, 0x5524, 0xe3fd, 0x0, 0x0);
        gbc.writeMem(0xd1d6, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd1d6));
        // 85 0142
        gbc.setState(0x6b6a, 0xfe13, 0xf8b0, 0xb3bd, 0x8e0d, 0xe8ea, 0x0, 0x0);
        gbc.writeMem(0x6b6a, { 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfe13, gbc.sp());
        EXPECT(0x6b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0143
        gbc.setState(0x1688, 0x290f, 0xd910, 0xf5f3, 0x9fbd, 0x753b, 0x0, 0x0);
        gbc.writeMem(0x1688, { 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x290f, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0144
        gbc.setState(0xe1c7, 0x2373, 0xf330, 0xae79, 0x4541, 0x419d, 0x1, 0x0);
        gbc.writeMem(0xe1c7, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xe1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe1c7));
        // 85 0145
        gbc.setState(0x7fc1, 0x4eae, 0xd8c0, 0x11ea, 0xc060, 0x8a42, 0x0, 0x0);
        gbc.writeMem(0x7fc1, { 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0146
        gbc.setState(0xa0de, 0xba29, 0xc160, 0xdc34, 0xf331, 0x4e00, 0x1, 0x0);
        gbc.writeMem(0xa0de, { 0x85 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa0de));
        // 85 0147
        gbc.setState(0xa379, 0xc023, 0x4c90, 0x5f8b, 0x8887, 0xe6be, 0x1, 0x1);
        gbc.writeMem(0xa379, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0xa37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa379));
        // 85 0148
        gbc.setState(0xd657, 0x756, 0x5500, 0x4ab4, 0xec87, 0x5494, 0x1, 0x0);
        gbc.writeMem(0xd657, { 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd657));
        // 85 0149
        gbc.setState(0xc605, 0xab75, 0xdae0, 0xb49f, 0x42ff, 0xf499, 0x0, 0x1);
        gbc.writeMem(0xc605, { 0x85 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xab75, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc605));
        // 85 014A
        gbc.setState(0xba57, 0xbc19, 0xa150, 0x3d6e, 0x4e9b, 0xf27b, 0x1, 0x1);
        gbc.writeMem(0xba57, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc19, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xba57));
        // 85 014B
        gbc.setState(0x6eb5, 0xbb26, 0xe350, 0x3b9, 0x168b, 0xba6a, 0x0, 0x0);
        gbc.writeMem(0x6eb5, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbb26, gbc.sp());
        EXPECT(0x6eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 014C
        gbc.setState(0x963d, 0x56ee, 0xadc0, 0x8e7e, 0x6757, 0xca26, 0x0, 0x1);
        gbc.writeMem(0x963d, { 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56ee, gbc.sp());
        EXPECT(0x963e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x963d));
        // 85 014D
        gbc.setState(0xcfee, 0xd3b1, 0x7070, 0xcca0, 0x6a50, 0x74a5, 0x1, 0x0);
        gbc.writeMem(0xcfee, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd3b1, gbc.sp());
        EXPECT(0xcfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcfee));
        // 85 014E
        gbc.setState(0x6c0c, 0x84ca, 0x9bf0, 0xfda9, 0x4e9f, 0x709a, 0x1, 0x1);
        gbc.writeMem(0x6c0c, { 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x84ca, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 014F
        gbc.setState(0xb0ad, 0x2185, 0x7050, 0x74cd, 0x4ac4, 0xea3d, 0x0, 0x0);
        gbc.writeMem(0xb0ad, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2185, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb0ad));
        // 85 0150
        gbc.setState(0xa3f9, 0x2d5a, 0xd630, 0xa3dd, 0x7d1, 0x8098, 0x0, 0x0);
        gbc.writeMem(0xa3f9, { 0x85 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa3f9));
        // 85 0151
        gbc.setState(0xc8ed, 0xdc79, 0xb860, 0xd4f2, 0x3be6, 0xa9f8, 0x0, 0x0);
        gbc.writeMem(0xc8ed, { 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdc79, gbc.sp());
        EXPECT(0xc8ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc8ed));
        // 85 0152
        gbc.setState(0x20b4, 0xf2da, 0x2d70, 0xcf0d, 0xae6b, 0xc75a, 0x1, 0x1);
        gbc.writeMem(0x20b4, { 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0x20b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0153
        gbc.setState(0xdac6, 0x1943, 0xdd0, 0x214, 0xe111, 0x85b3, 0x0, 0x1);
        gbc.writeMem(0xdac6, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdac6));
        // 85 0154
        gbc.setState(0xc2be, 0xaba4, 0xbc40, 0xf378, 0xe5ff, 0xa444, 0x1, 0x1);
        gbc.writeMem(0xc2be, { 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0xc2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc2be));
        // 85 0156
        gbc.setState(0x66c9, 0x108f, 0xa070, 0x61e0, 0x8ab4, 0xb273, 0x1, 0x0);
        gbc.writeMem(0x66c9, { 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0157
        gbc.setState(0x3b18, 0xb747, 0xa50, 0xd9a0, 0x3c2f, 0xb993, 0x1, 0x1);
        gbc.writeMem(0x3b18, { 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0158
        gbc.setState(0x55c3, 0x654b, 0x4b80, 0x932d, 0x4c88, 0x93f6, 0x1, 0x1);
        gbc.writeMem(0x55c3, { 0x85 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x654b, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0159
        gbc.setState(0x5d32, 0xd15d, 0x7240, 0xf670, 0xd118, 0xc81c, 0x0, 0x1);
        gbc.writeMem(0x5d32, { 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd15d, gbc.sp());
        EXPECT(0x5d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 015A
        gbc.setState(0xc029, 0x7050, 0x9cf0, 0x50df, 0xaf60, 0x8a9d, 0x1, 0x1);
        gbc.writeMem(0xc029, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7050, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc029));
        // 85 015B
        gbc.setState(0x608, 0xbd59, 0xb290, 0xd7a0, 0xde68, 0x261c, 0x0, 0x1);
        gbc.writeMem(0x608, { 0x85 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbd59, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 015C
        gbc.setState(0x1917, 0x65bf, 0xce80, 0x883e, 0xcae, 0x407f, 0x0, 0x0);
        gbc.writeMem(0x1917, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x65bf, gbc.sp());
        EXPECT(0x1918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 015D
        gbc.setState(0xdc5d, 0x37b9, 0x1120, 0x9d9f, 0xd228, 0x93bc, 0x0, 0x1);
        gbc.writeMem(0xdc5d, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdc5d));
        // 85 015E
        gbc.setState(0xb69c, 0x5a73, 0x9bf0, 0x4127, 0xe388, 0xeba9, 0x1, 0x0);
        gbc.writeMem(0xb69c, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5a73, gbc.sp());
        EXPECT(0xb69d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb69c));
        // 85 015F
        gbc.setState(0x2fd7, 0x46f1, 0x25c0, 0x5d32, 0x308b, 0x3f44, 0x1, 0x1);
        gbc.writeMem(0x2fd7, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0160
        gbc.setState(0x959d, 0xdf30, 0x6ea0, 0xbd11, 0xc35c, 0x1710, 0x1, 0x0);
        gbc.writeMem(0x959d, { 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x959e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x959d));
        // 85 0162
        gbc.setState(0x5321, 0xae59, 0xc110, 0xd034, 0xd7f9, 0x34e3, 0x1, 0x0);
        gbc.writeMem(0x5321, { 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0163
        gbc.setState(0xc088, 0x54c7, 0x7730, 0xf55a, 0xecf5, 0x78f2, 0x1, 0x0);
        gbc.writeMem(0xc088, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x54c7, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc088));
        // 85 0164
        gbc.setState(0x5a7, 0xf913, 0x8fc0, 0x533, 0x9f39, 0xfaae, 0x0, 0x0);
        gbc.writeMem(0x5a7, { 0x85 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf913, gbc.sp());
        EXPECT(0x5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0165
        gbc.setState(0xe72c, 0xaacf, 0x74f0, 0x3d63, 0x3815, 0x369c, 0x1, 0x0);
        gbc.writeMem(0xe72c, { 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaacf, gbc.sp());
        EXPECT(0xe72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe72c));
        // 85 0166
        gbc.setState(0x5b5a, 0xba92, 0xe3b0, 0x4366, 0x608e, 0x17c8, 0x0, 0x1);
        gbc.writeMem(0x5b5a, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xba92, gbc.sp());
        EXPECT(0x5b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0168
        gbc.setState(0xa3a6, 0xd78, 0xfb40, 0x450f, 0x6e7, 0xbecd, 0x0, 0x0);
        gbc.writeMem(0xa3a6, { 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd78, gbc.sp());
        EXPECT(0xa3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa3a6));
        // 85 0169
        gbc.setState(0x7ecc, 0xa623, 0xf110, 0xa4cf, 0xc5a4, 0xc8d1, 0x1, 0x0);
        gbc.writeMem(0x7ecc, { 0x85 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa623, gbc.sp());
        EXPECT(0x7ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 016A
        gbc.setState(0x375, 0xe21e, 0x7020, 0xde1e, 0x2a72, 0x9360, 0x1, 0x1);
        gbc.writeMem(0x375, { 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe21e, gbc.sp());
        EXPECT(0x376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 016C
        gbc.setState(0x465c, 0x7c62, 0xfcc0, 0x3f67, 0x6832, 0x48a2, 0x1, 0x0);
        gbc.writeMem(0x465c, { 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x465d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 016D
        gbc.setState(0x81d4, 0xef53, 0xc5c0, 0xd057, 0x349d, 0x1d4d, 0x0, 0x1);
        gbc.writeMem(0x81d4, { 0x85 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef53, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x81d4));
        // 85 016E
        gbc.setState(0x62d9, 0x889e, 0xcf90, 0xd452, 0xb7cf, 0xbb78, 0x1, 0x0);
        gbc.writeMem(0x62d9, { 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0170
        gbc.setState(0xd45d, 0x612f, 0x800, 0xb75d, 0xfccf, 0x8e56, 0x0, 0x0);
        gbc.writeMem(0xd45d, { 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x612f, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd45d));
        // 85 0171
        gbc.setState(0x86c, 0x9e10, 0x3a40, 0xc6a4, 0xd949, 0x9625, 0x1, 0x1);
        gbc.writeMem(0x86c, { 0x85 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9e10, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0172
        gbc.setState(0xafca, 0x69d5, 0x190, 0x3678, 0xb25f, 0xbb44, 0x0, 0x1);
        gbc.writeMem(0xafca, { 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x69d5, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xafca));
        // 85 0173
        gbc.setState(0x3457, 0x7b1e, 0xde70, 0xc48e, 0x43dd, 0xfd0d, 0x1, 0x0);
        gbc.writeMem(0x3457, { 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7b1e, gbc.sp());
        EXPECT(0x3458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0174
        gbc.setState(0xcdf6, 0x9dc7, 0x7400, 0xdec1, 0xf5c6, 0x1, 0x1, 0x1);
        gbc.writeMem(0xcdf6, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcdf6));
        // 85 0175
        gbc.setState(0x6b2e, 0xbb3e, 0xfac0, 0x2bc2, 0xa2fe, 0xca2a, 0x1, 0x1);
        gbc.writeMem(0x6b2e, { 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbb3e, gbc.sp());
        EXPECT(0x6b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0176
        gbc.setState(0xb96b, 0x2da0, 0xaaf0, 0xfec, 0x1d4a, 0xb603, 0x0, 0x0);
        gbc.writeMem(0xb96b, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0xb96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb96b));
        // 85 0177
        gbc.setState(0x5c37, 0xbab7, 0x3360, 0xf07b, 0x11ba, 0x65d6, 0x1, 0x1);
        gbc.writeMem(0x5c37, { 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbab7, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0178
        gbc.setState(0x95d, 0xd5fa, 0xbec0, 0xbf0c, 0x76b0, 0x5ead, 0x1, 0x1);
        gbc.writeMem(0x95d, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0179
        gbc.setState(0x61d, 0x189a, 0x6680, 0x6a1c, 0x6d19, 0x46a6, 0x1, 0x1);
        gbc.writeMem(0x61d, { 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x189a, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 017A
        gbc.setState(0xb193, 0x9698, 0xf890, 0xb428, 0xe3f1, 0x1077, 0x1, 0x0);
        gbc.writeMem(0xb193, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9698, gbc.sp());
        EXPECT(0xb194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb193));
        // 85 017B
        gbc.setState(0x1d9f, 0x986e, 0x5920, 0x3234, 0x6fbf, 0x85bd, 0x1, 0x1);
        gbc.writeMem(0x1d9f, { 0x85 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x986e, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 017C
        gbc.setState(0x1921, 0xda, 0x3a60, 0xdffc, 0x9e32, 0xa0a5, 0x0, 0x0);
        gbc.writeMem(0x1921, { 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0x1922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 017D
        gbc.setState(0xe30e, 0x6ad6, 0xdb90, 0x2c07, 0x115b, 0xccf8, 0x1, 0x0);
        gbc.writeMem(0xe30e, { 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe30e));
        // 85 017E
        gbc.setState(0x5fd7, 0x6972, 0x75c0, 0x1d50, 0xbec1, 0x5735, 0x1, 0x1);
        gbc.writeMem(0x5fd7, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6972, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 017F
        gbc.setState(0xd350, 0xb375, 0xf630, 0x3425, 0x65b1, 0xd243, 0x0, 0x1);
        gbc.writeMem(0xd350, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb375, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd350));
        // 85 0180
        gbc.setState(0x2707, 0x298d, 0x4fb0, 0x828b, 0x8dec, 0xacef, 0x1, 0x1);
        gbc.writeMem(0x2707, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x298d, gbc.sp());
        EXPECT(0x2708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0181
        gbc.setState(0xbd2e, 0x273b, 0xa400, 0x8fab, 0x205b, 0x6698, 0x0, 0x1);
        gbc.writeMem(0xbd2e, { 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0xbd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbd2e));
        // 85 0182
        gbc.setState(0x1316, 0xa874, 0x8e10, 0x3c85, 0xd0c1, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x1316, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0183
        gbc.setState(0x759a, 0xa2e5, 0x5ca0, 0xe1f2, 0x7a7d, 0x92ea, 0x0, 0x1);
        gbc.writeMem(0x759a, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa2e5, gbc.sp());
        EXPECT(0x759b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0184
        gbc.setState(0x7687, 0x99ab, 0x4ad0, 0x556c, 0x8ff1, 0xfde5, 0x1, 0x0);
        gbc.writeMem(0x7687, { 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0185
        gbc.setState(0xdf62, 0xcd7, 0x2e50, 0xdb15, 0xb0fd, 0xca35, 0x1, 0x0);
        gbc.writeMem(0xdf62, { 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0xdf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdf62));
        // 85 0186
        gbc.setState(0x47e1, 0x67c3, 0x77e0, 0xfb77, 0x6a69, 0x585f, 0x0, 0x0);
        gbc.writeMem(0x47e1, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x67c3, gbc.sp());
        EXPECT(0x47e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0187
        gbc.setState(0xd187, 0x238a, 0xf6d0, 0x3b47, 0xda91, 0x2374, 0x0, 0x1);
        gbc.writeMem(0xd187, { 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x238a, gbc.sp());
        EXPECT(0xd188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd187));
        // 85 0188
        gbc.setState(0xa0c3, 0xa9d7, 0x74c0, 0xf00c, 0x84c, 0x1a02, 0x1, 0x1);
        gbc.writeMem(0xa0c3, { 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0xa0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa0c3));
        // 85 0189
        gbc.setState(0xae87, 0xb574, 0x67d0, 0xfc3f, 0x5792, 0x371, 0x1, 0x0);
        gbc.writeMem(0xae87, { 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb574, gbc.sp());
        EXPECT(0xae88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae87));
        // 85 018B
        gbc.setState(0x3e74, 0xef36, 0x2340, 0xc6c3, 0x1f69, 0xfc10, 0x1, 0x0);
        gbc.writeMem(0x3e74, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef36, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 018D
        gbc.setState(0xb580, 0x9cb4, 0xa860, 0xaf06, 0x8e3a, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0xb580, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb580));
        // 85 018E
        gbc.setState(0xc225, 0x5756, 0xd040, 0x9c8, 0x51e1, 0x9a9f, 0x0, 0x1);
        gbc.writeMem(0xc225, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5756, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc225));
        // 85 018F
        gbc.setState(0x6c4, 0xcf24, 0x3fc0, 0xc3d5, 0xbd6b, 0xde6a, 0x1, 0x1);
        gbc.writeMem(0x6c4, { 0x85 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0191
        gbc.setState(0x474a, 0xd6b2, 0xbae0, 0xe658, 0x85b2, 0x4a93, 0x0, 0x0);
        gbc.writeMem(0x474a, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd6b2, gbc.sp());
        EXPECT(0x474b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0192
        gbc.setState(0x3727, 0x4c1c, 0xafd0, 0xa5bc, 0x54a4, 0x2bf6, 0x1, 0x0);
        gbc.writeMem(0x3727, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0193
        gbc.setState(0x71c4, 0x47bd, 0x8570, 0xa073, 0x6c33, 0xe54c, 0x1, 0x1);
        gbc.writeMem(0x71c4, { 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0x71c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0195
        gbc.setState(0xa7c, 0x9300, 0x45b0, 0xaf4a, 0x75aa, 0x6f60, 0x1, 0x0);
        gbc.writeMem(0xa7c, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0196
        gbc.setState(0x30f9, 0x24e, 0xe820, 0x401a, 0xca8f, 0x533c, 0x1, 0x0);
        gbc.writeMem(0x30f9, { 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x24e, gbc.sp());
        EXPECT(0x30fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0197
        gbc.setState(0x1cdf, 0x292d, 0x23b0, 0x8828, 0x3324, 0x10e0, 0x0, 0x0);
        gbc.writeMem(0x1cdf, { 0x85 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0x1ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0198
        gbc.setState(0xeca, 0x1a5c, 0x51c0, 0x23bc, 0xef07, 0x363e, 0x0, 0x1);
        gbc.writeMem(0xeca, { 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0xecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 019A
        gbc.setState(0x4476, 0xb20c, 0x1f70, 0xc7dc, 0x7847, 0x816b, 0x1, 0x0);
        gbc.writeMem(0x4476, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb20c, gbc.sp());
        EXPECT(0x4477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 019B
        gbc.setState(0x1803, 0x5a67, 0xe840, 0xe4ad, 0x811e, 0xdafd, 0x1, 0x1);
        gbc.writeMem(0x1803, { 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 019C
        gbc.setState(0x8b6d, 0x486d, 0xc00, 0xd6bc, 0x9b6, 0xed5f, 0x0, 0x1);
        gbc.writeMem(0x8b6d, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x8b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8b6d));
        // 85 019D
        gbc.setState(0xc04f, 0x48d9, 0x33b0, 0xf575, 0x9f0f, 0xfd3, 0x0, 0x0);
        gbc.writeMem(0xc04f, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x48d9, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc04f));
        // 85 019E
        gbc.setState(0xbf88, 0x619e, 0xa4e0, 0x8f8f, 0xf81a, 0xb8ac, 0x1, 0x1);
        gbc.writeMem(0xbf88, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0xbf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbf88));
        // 85 019F
        gbc.setState(0xcae1, 0x5ad5, 0xdb50, 0x72f7, 0xbfe, 0xdae5, 0x0, 0x0);
        gbc.writeMem(0xcae1, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5ad5, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcae1));
        // 85 01A0
        gbc.setState(0xde59, 0x99d4, 0xf030, 0xd35b, 0x230b, 0x340f, 0x1, 0x0);
        gbc.writeMem(0xde59, { 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xde59));
        // 85 01A1
        gbc.setState(0x3018, 0xe5bc, 0xd020, 0xdd8a, 0x338, 0x961a, 0x0, 0x1);
        gbc.writeMem(0x3018, { 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe5bc, gbc.sp());
        EXPECT(0x3019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A2
        gbc.setState(0x68b1, 0xa124, 0x2a80, 0x9c7d, 0xc470, 0x6e74, 0x0, 0x0);
        gbc.writeMem(0x68b1, { 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa124, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A3
        gbc.setState(0x50f1, 0xe609, 0x360, 0x36c, 0xee8b, 0xc101, 0x0, 0x0);
        gbc.writeMem(0x50f1, { 0x85 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0x50f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A4
        gbc.setState(0xb7d0, 0xf876, 0x2280, 0x8d82, 0xce99, 0x72cb, 0x0, 0x0);
        gbc.writeMem(0xb7d0, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf876, gbc.sp());
        EXPECT(0xb7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb7d0));
        // 85 01A5
        gbc.setState(0x1207, 0x31ac, 0x2840, 0x1df5, 0xdf8e, 0x8517, 0x0, 0x1);
        gbc.writeMem(0x1207, { 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x31ac, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A6
        gbc.setState(0x3cf3, 0xfb7, 0x5f90, 0x48c5, 0x7957, 0x5374, 0x0, 0x1);
        gbc.writeMem(0x3cf3, { 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A7
        gbc.setState(0x64a1, 0x5e9f, 0x1980, 0x2eb7, 0x2aed, 0x24ae, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x64a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01A8
        gbc.setState(0x1cfd, 0x5d32, 0x4b10, 0xf363, 0x9e5, 0x98ef, 0x1, 0x1);
        gbc.writeMem(0x1cfd, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5d32, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01A9
        gbc.setState(0x6fc7, 0x95ca, 0xb520, 0xeac, 0xec68, 0x71cb, 0x0, 0x1);
        gbc.writeMem(0x6fc7, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0x6fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01AA
        gbc.setState(0x2846, 0x88c4, 0x4fb0, 0x74fa, 0xc160, 0x210c, 0x1, 0x0);
        gbc.writeMem(0x2846, { 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x88c4, gbc.sp());
        EXPECT(0x2847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01AB
        gbc.setState(0x553c, 0xfb0, 0x7d20, 0x708c, 0x3e9e, 0x2398, 0x0, 0x0);
        gbc.writeMem(0x553c, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfb0, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01AC
        gbc.setState(0xe0a7, 0x5bdd, 0xa2c0, 0xffff, 0x7faf, 0xaac8, 0x0, 0x0);
        gbc.writeMem(0xe0a7, { 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0xe0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe0a7));
        // 85 01AD
        gbc.setState(0x1b9c, 0xd32a, 0x9e80, 0xa64a, 0x8160, 0x2e55, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd32a, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01AE
        gbc.setState(0xc432, 0x1941, 0xc6c0, 0x3c53, 0xd824, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0xc432, { 0x85 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0xc433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc432));
        // 85 01AF
        gbc.setState(0x3abb, 0x6ce6, 0xc090, 0x7d65, 0xb684, 0x9b84, 0x1, 0x1);
        gbc.writeMem(0x3abb, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6ce6, gbc.sp());
        EXPECT(0x3abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01B0
        gbc.setState(0xbafe, 0x9e1f, 0xa20, 0xfac4, 0xe3bd, 0x7a62, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e1f, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbafe));
        // 85 01B1
        gbc.setState(0x2148, 0xd8e5, 0xf400, 0xf43, 0xf738, 0x7d81, 0x0, 0x0);
        gbc.writeMem(0x2148, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd8e5, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01B2
        gbc.setState(0xa803, 0xf74a, 0x53a0, 0x17c6, 0xf4ae, 0xb50b, 0x0, 0x1);
        gbc.writeMem(0xa803, { 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf74a, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa803));
        // 85 01B3
        gbc.setState(0xe3d, 0xbd, 0x5a40, 0x74a2, 0x937b, 0xc878, 0x0, 0x1);
        gbc.writeMem(0xe3d, { 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0xe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01B4
        gbc.setState(0x1a59, 0xe224, 0x1940, 0xf3a9, 0xaff1, 0xa19e, 0x0, 0x0);
        gbc.writeMem(0x1a59, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe224, gbc.sp());
        EXPECT(0x1a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01B5
        gbc.setState(0x91fd, 0xd55d, 0xde90, 0x27e6, 0x3982, 0x9ad4, 0x0, 0x0);
        gbc.writeMem(0x91fd, { 0x85 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x91fd));
        // 85 01B6
        gbc.setState(0x18ca, 0x93d3, 0x7600, 0x47da, 0xd0a2, 0xb02d, 0x0, 0x0);
        gbc.writeMem(0x18ca, { 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x93d3, gbc.sp());
        EXPECT(0x18cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01B7
        gbc.setState(0x42ae, 0x1dac, 0x9cd0, 0x2e55, 0xcaf5, 0x79e2, 0x1, 0x0);
        gbc.writeMem(0x42ae, { 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1dac, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01B8
        gbc.setState(0xd0c7, 0x5e39, 0xe580, 0x75f4, 0x2ea8, 0xa77, 0x1, 0x0);
        gbc.writeMem(0xd0c7, { 0x85 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e39, gbc.sp());
        EXPECT(0xd0c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd0c7));
        // 85 01B9
        gbc.setState(0x6401, 0xe78f, 0xec20, 0xe628, 0x2306, 0x4129, 0x0, 0x1);
        gbc.writeMem(0x6401, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0x6402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01BA
        gbc.setState(0xc147, 0x68e0, 0x9540, 0xae4a, 0x416f, 0xfced, 0x1, 0x1);
        gbc.writeMem(0xc147, { 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x68e0, gbc.sp());
        EXPECT(0xc148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc147));
        // 85 01BB
        gbc.setState(0x3df8, 0x9b15, 0x4e60, 0xea7, 0xaad1, 0xa1f6, 0x1, 0x1);
        gbc.writeMem(0x3df8, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01BC
        gbc.setState(0x638f, 0x2f60, 0x94d0, 0x6fb5, 0x2417, 0x2b71, 0x1, 0x0);
        gbc.writeMem(0x638f, { 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x6390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01BD
        gbc.setState(0x4659, 0x342d, 0x5880, 0xe64f, 0x8cff, 0x4c9e, 0x1, 0x0);
        gbc.writeMem(0x4659, { 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x465a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01BE
        gbc.setState(0x3e80, 0xb199, 0xb920, 0x93db, 0x8bcb, 0x5ff8, 0x1, 0x0);
        gbc.writeMem(0x3e80, { 0x85 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01BF
        gbc.setState(0x1d46, 0xcf55, 0x4750, 0xa4ca, 0x6410, 0x54d6, 0x0, 0x1);
        gbc.writeMem(0x1d46, { 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01C0
        gbc.setState(0x7f38, 0x3f92, 0xb990, 0xba43, 0xf468, 0xb904, 0x1, 0x0);
        gbc.writeMem(0x7f38, { 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3f92, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01C1
        gbc.setState(0x690a, 0x4553, 0x3580, 0x5f4f, 0x4476, 0xc6be, 0x0, 0x0);
        gbc.writeMem(0x690a, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01C2
        gbc.setState(0x13c, 0x73e4, 0xe1e0, 0x6aed, 0x2373, 0xdecc, 0x1, 0x0);
        gbc.writeMem(0x13c, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0x13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01C3
        gbc.setState(0x6acc, 0x6dd7, 0x67b0, 0x1727, 0x4631, 0xaca8, 0x1, 0x0);
        gbc.writeMem(0x6acc, { 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0x6acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01C4
        gbc.setState(0x6353, 0x98fb, 0xe430, 0x3e7d, 0xa805, 0x493a, 0x1, 0x1);
        gbc.writeMem(0x6353, { 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0x6354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01C6
        gbc.setState(0x3d5c, 0xffe2, 0xf400, 0x6c9d, 0x371b, 0xcd75, 0x0, 0x0);
        gbc.writeMem(0x3d5c, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xffe2, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01C7
        gbc.setState(0x2048, 0xfefa, 0x2b90, 0x6c58, 0x5eb3, 0xa086, 0x0, 0x1);
        gbc.writeMem(0x2048, { 0x85 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfefa, gbc.sp());
        EXPECT(0x2049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01C8
        gbc.setState(0x9964, 0x20ee, 0xee40, 0x311f, 0xe19b, 0x1364, 0x1, 0x0);
        gbc.writeMem(0x9964, { 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x20ee, gbc.sp());
        EXPECT(0x9965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9964));
        // 85 01C9
        gbc.setState(0x3db, 0x4ffb, 0x3c80, 0xd1b2, 0xe22c, 0xe397, 0x0, 0x0);
        gbc.writeMem(0x3db, { 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ffb, gbc.sp());
        EXPECT(0x3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01CA
        gbc.setState(0xa3b3, 0x1b15, 0xf4a0, 0xc51, 0xef4f, 0xf799, 0x0, 0x1);
        gbc.writeMem(0xa3b3, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1b15, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa3b3));
        // 85 01CB
        gbc.setState(0x3a7c, 0x2e4c, 0x71e0, 0x6de2, 0x66eb, 0x7488, 0x0, 0x1);
        gbc.writeMem(0x3a7c, { 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0x3a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01CC
        gbc.setState(0x7554, 0x91eb, 0xa1e0, 0x98d2, 0xd00d, 0x4d07, 0x1, 0x1);
        gbc.writeMem(0x7554, { 0x85 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x91eb, gbc.sp());
        EXPECT(0x7555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01CD
        gbc.setState(0x168, 0x4fc4, 0x45a0, 0x2c7f, 0x2cd5, 0x620c, 0x0, 0x1);
        gbc.writeMem(0x168, { 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0x169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01CE
        gbc.setState(0xc4f6, 0x6105, 0xb9d0, 0x998, 0xb64d, 0x1294, 0x1, 0x1);
        gbc.writeMem(0xc4f6, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6105, gbc.sp());
        EXPECT(0xc4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc4f6));
        // 85 01CF
        gbc.setState(0x8c8e, 0xff68, 0xa210, 0xa4f0, 0x79d9, 0x165d, 0x1, 0x1);
        gbc.writeMem(0x8c8e, { 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xff68, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8c8e));
        // 85 01D0
        gbc.setState(0xe960, 0x1db0, 0xd300, 0x9132, 0x3324, 0x3014, 0x0, 0x0);
        gbc.writeMem(0xe960, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1db0, gbc.sp());
        EXPECT(0xe961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe960));
        // 85 01D1
        gbc.setState(0x11c9, 0xb59a, 0x96f0, 0xe79a, 0x4b80, 0xf48d, 0x1, 0x1);
        gbc.writeMem(0x11c9, { 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01D2
        gbc.setState(0x4ad9, 0xd586, 0x4f10, 0x8eae, 0x1588, 0x3ddd, 0x1, 0x1);
        gbc.writeMem(0x4ad9, { 0x85 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd586, gbc.sp());
        EXPECT(0x4ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01D3
        gbc.setState(0xe1ca, 0x5f1c, 0x3210, 0xb4a0, 0x9fb5, 0x13e3, 0x1, 0x1);
        gbc.writeMem(0xe1ca, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5f1c, gbc.sp());
        EXPECT(0xe1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe1ca));
        // 85 01D4
        gbc.setState(0x96f9, 0xd6c5, 0x9210, 0x840, 0x3dfe, 0x325c, 0x0, 0x0);
        gbc.writeMem(0x96f9, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0x96fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x96f9));
        // 85 01D5
        gbc.setState(0x244d, 0xb6c, 0x990, 0x454c, 0xfdeb, 0xb707, 0x0, 0x1);
        gbc.writeMem(0x244d, { 0x85 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01D6
        gbc.setState(0x76b, 0xfcee, 0xf7a0, 0xab0, 0x8884, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x76b, { 0x85 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfcee, gbc.sp());
        EXPECT(0x76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01D7
        gbc.setState(0x3cec, 0x3422, 0xc940, 0x37b4, 0x782, 0xc9d1, 0x0, 0x1);
        gbc.writeMem(0x3cec, { 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3422, gbc.sp());
        EXPECT(0x3ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01D8
        gbc.setState(0x2901, 0x18ee, 0xc4c0, 0x25bd, 0x80b4, 0xeac0, 0x0, 0x1);
        gbc.writeMem(0x2901, { 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x18ee, gbc.sp());
        EXPECT(0x2902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01D9
        gbc.setState(0x8d0f, 0x8566, 0x35a0, 0xc726, 0x1576, 0x796b, 0x1, 0x1);
        gbc.writeMem(0x8d0f, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8566, gbc.sp());
        EXPECT(0x8d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8d0f));
        // 85 01DA
        gbc.setState(0xe661, 0x7178, 0xb690, 0x6703, 0xaa70, 0xfdbb, 0x0, 0x1);
        gbc.writeMem(0xe661, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7178, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe661));
        // 85 01DB
        gbc.setState(0x417a, 0x7f52, 0xd870, 0xea0e, 0xe7e0, 0xf567, 0x0, 0x0);
        gbc.writeMem(0x417a, { 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01DC
        gbc.setState(0x4c71, 0x7b06, 0x6630, 0x1e27, 0xda2f, 0x366d, 0x1, 0x0);
        gbc.writeMem(0x4c71, { 0x85 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7b06, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01DD
        gbc.setState(0x78f0, 0xb118, 0x5b10, 0xd462, 0x8772, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0x78f0, { 0x85 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb118, gbc.sp());
        EXPECT(0x78f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01DE
        gbc.setState(0x1ee5, 0x48de, 0x31d0, 0x5de8, 0x2851, 0xd273, 0x0, 0x0);
        gbc.writeMem(0x1ee5, { 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01DF
        gbc.setState(0x29d1, 0xf67d, 0xb570, 0x94e8, 0xeda, 0x627e, 0x0, 0x1);
        gbc.writeMem(0x29d1, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0x29d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01E0
        gbc.setState(0xc7c3, 0x9f93, 0x9620, 0x9f4d, 0x5d36, 0xbf2d, 0x1, 0x0);
        gbc.writeMem(0xc7c3, { 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f93, gbc.sp());
        EXPECT(0xc7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc7c3));
        // 85 01E1
        gbc.setState(0x9bf5, 0x7f4f, 0x5940, 0xd430, 0x8f11, 0x528c, 0x1, 0x0);
        gbc.writeMem(0x9bf5, { 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7f4f, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9bf5));
        // 85 01E2
        gbc.setState(0x8c7c, 0x7821, 0x69f0, 0xa8c3, 0xba83, 0xac20, 0x1, 0x1);
        gbc.writeMem(0x8c7c, { 0x85 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0x8c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8c7c));
        // 85 01E3
        gbc.setState(0xb268, 0x6301, 0x6d60, 0x39e9, 0xbef7, 0x4b39, 0x1, 0x1);
        gbc.writeMem(0xb268, { 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6301, gbc.sp());
        EXPECT(0xb269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb268));
        // 85 01E4
        gbc.setState(0x1de2, 0x8369, 0x5370, 0xbf2f, 0x804b, 0xaf9b, 0x1, 0x0);
        gbc.writeMem(0x1de2, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8369, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01E5
        gbc.setState(0x27e7, 0x6f1f, 0xf6f0, 0x1c54, 0xc077, 0xcdb8, 0x0, 0x0);
        gbc.writeMem(0x27e7, { 0x85 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6f1f, gbc.sp());
        EXPECT(0x27e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01E6
        gbc.setState(0xda2, 0x9edd, 0x1370, 0xc97e, 0xe1ee, 0x973, 0x1, 0x0);
        gbc.writeMem(0xda2, { 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0xda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01E7
        gbc.setState(0xca44, 0x8ac5, 0x3e30, 0x1e45, 0x4e3c, 0x12b, 0x0, 0x1);
        gbc.writeMem(0xca44, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0xca45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xca44));
        // 85 01E8
        gbc.setState(0xe7c1, 0xb480, 0x9bb0, 0x5249, 0x2396, 0xc1b, 0x1, 0x1);
        gbc.writeMem(0xe7c1, { 0x85 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb480, gbc.sp());
        EXPECT(0xe7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe7c1));
        // 85 01E9
        gbc.setState(0x2896, 0xc0b0, 0xac00, 0x384a, 0x898f, 0x448, 0x1, 0x0);
        gbc.writeMem(0x2896, { 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x2897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01EA
        gbc.setState(0x67d0, 0x7b7f, 0x5b30, 0xef17, 0xe123, 0x9a6b, 0x0, 0x0);
        gbc.writeMem(0x67d0, { 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7b7f, gbc.sp());
        EXPECT(0x67d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01EB
        gbc.setState(0xc77b, 0xafe1, 0xdf40, 0x59a6, 0xc634, 0xaf3c, 0x0, 0x0);
        gbc.writeMem(0xc77b, { 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xafe1, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc77b));
        // 85 01EC
        gbc.setState(0x828, 0x1b61, 0xefb0, 0xe0ff, 0xd7c2, 0xa1d5, 0x0, 0x1);
        gbc.writeMem(0x828, { 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0x829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01ED
        gbc.setState(0x377b, 0x21ae, 0x6330, 0xc19e, 0x6e4b, 0xdd1, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x21ae, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01EE
        gbc.setState(0x6dc6, 0xba34, 0x5620, 0xfcf7, 0x543e, 0xefd8, 0x1, 0x0);
        gbc.writeMem(0x6dc6, { 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xba34, gbc.sp());
        EXPECT(0x6dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01EF
        gbc.setState(0x3499, 0xa4ca, 0x2290, 0xffe, 0xfe03, 0xc5ab, 0x0, 0x0);
        gbc.writeMem(0x3499, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa4ca, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01F1
        gbc.setState(0x391c, 0x7787, 0xf080, 0x5b2a, 0x82cd, 0x120b, 0x1, 0x1);
        gbc.writeMem(0x391c, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7787, gbc.sp());
        EXPECT(0x391d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01F2
        gbc.setState(0x97a2, 0x63a8, 0x5e00, 0xea97, 0xf365, 0x8df3, 0x0, 0x1);
        gbc.writeMem(0x97a2, { 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x63a8, gbc.sp());
        EXPECT(0x97a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97a2));
        // 85 01F3
        gbc.setState(0x4b6b, 0xcdec, 0xebd0, 0x1913, 0x821c, 0xf9bd, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0x85 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcdec, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01F4
        gbc.setState(0xb54a, 0x1b85, 0x6dd0, 0x977a, 0x4bb6, 0xc525, 0x1, 0x1);
        gbc.writeMem(0xb54a, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1b85, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb54a));
        // 85 01F5
        gbc.setState(0xa351, 0x7ef2, 0x3bd0, 0xab09, 0x4294, 0x22d8, 0x1, 0x1);
        gbc.writeMem(0xa351, { 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7ef2, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa351));
        // 85 01F6
        gbc.setState(0x2215, 0x61fd, 0x3830, 0xa099, 0x994b, 0x195d, 0x1, 0x1);
        gbc.writeMem(0x2215, { 0x85 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01F7
        gbc.setState(0x382a, 0xd144, 0x3c70, 0x3662, 0x9259, 0x7551, 0x0, 0x1);
        gbc.writeMem(0x382a, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01F8
        gbc.setState(0xbea2, 0x89d6, 0xc5c0, 0xf981, 0xec40, 0x1ad8, 0x0, 0x1);
        gbc.writeMem(0xbea2, { 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0xbea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbea2));
        // 85 01F9
        gbc.setState(0x82c5, 0xded6, 0xa990, 0xfe4a, 0x34ea, 0xc8cd, 0x0, 0x0);
        gbc.writeMem(0x82c5, { 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xded6, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x82c5));
        // 85 01FA
        gbc.setState(0x7fd8, 0xd3aa, 0xad30, 0x9df2, 0xe4fe, 0xc164, 0x0, 0x0);
        gbc.writeMem(0x7fd8, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd3aa, gbc.sp());
        EXPECT(0x7fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 01FB
        gbc.setState(0x523b, 0xfa7, 0x2770, 0x4bd6, 0xcbf6, 0x3421, 0x0, 0x0);
        gbc.writeMem(0x523b, { 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfa7, gbc.sp());
        EXPECT(0x523c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01FC
        gbc.setState(0xdea3, 0xcd64, 0x4b60, 0x3192, 0xb0bf, 0xfdbf, 0x0, 0x1);
        gbc.writeMem(0xdea3, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0xdea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdea3));
        // 85 01FD
        gbc.setState(0xbc4f, 0x581a, 0x96a0, 0x3d6f, 0xb411, 0x2952, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbc4f));
        // 85 01FE
        gbc.setState(0x5313, 0xee85, 0x42e0, 0x2bb3, 0xded5, 0x251b, 0x1, 0x0);
        gbc.writeMem(0x5313, { 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x5314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 01FF
        gbc.setState(0x8f21, 0xe390, 0x9a50, 0xf8be, 0x8530, 0x7675, 0x0, 0x1);
        gbc.writeMem(0x8f21, { 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe390, gbc.sp());
        EXPECT(0x8f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8f21));
        // 85 0200
        gbc.setState(0x9078, 0xcd89, 0xbc50, 0x5c91, 0x9dce, 0xe7a4, 0x0, 0x0);
        gbc.writeMem(0x9078, { 0x85 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcd89, gbc.sp());
        EXPECT(0x9079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9078));
        // 85 0201
        gbc.setState(0xae2e, 0x48b2, 0xed50, 0xbaaa, 0x85f2, 0x14ca, 0x1, 0x0);
        gbc.writeMem(0xae2e, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae2e));
        // 85 0202
        gbc.setState(0x3154, 0xffd1, 0x6c90, 0x3a79, 0x6374, 0xea51, 0x0, 0x0);
        gbc.writeMem(0x3154, { 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0203
        gbc.setState(0x2cd1, 0xc3b5, 0x9a80, 0x79ee, 0x492a, 0x95db, 0x0, 0x1);
        gbc.writeMem(0x2cd1, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc3b5, gbc.sp());
        EXPECT(0x2cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0204
        gbc.setState(0xb09a, 0xd19f, 0xafd0, 0x10bb, 0x4e29, 0xa850, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0x85 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb09a));
        // 85 0205
        gbc.setState(0xc1f1, 0x36a5, 0x7990, 0x2e59, 0xc56f, 0x861d, 0x1, 0x0);
        gbc.writeMem(0xc1f1, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x36a5, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc1f1));
        // 85 0206
        gbc.setState(0x5255, 0x3d2, 0x5ac0, 0x6a16, 0x7de0, 0xf172, 0x0, 0x1);
        gbc.writeMem(0x5255, { 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3d2, gbc.sp());
        EXPECT(0x5256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0207
        gbc.setState(0x74de, 0xe089, 0xc840, 0xe651, 0x5f6c, 0x35c2, 0x1, 0x0);
        gbc.writeMem(0x74de, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe089, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0208
        gbc.setState(0x2570, 0xaa23, 0x2080, 0x30fa, 0x4523, 0xd2ac, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaa23, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0209
        gbc.setState(0x221, 0x9573, 0xad20, 0x7138, 0xe7d3, 0xa579, 0x0, 0x0);
        gbc.writeMem(0x221, { 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9573, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 020A
        gbc.setState(0x4855, 0xe5fd, 0x8fd0, 0xee73, 0x566a, 0x21c7, 0x1, 0x0);
        gbc.writeMem(0x4855, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0x4856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 020B
        gbc.setState(0xa12d, 0x4c74, 0xc9d0, 0x3d74, 0x1773, 0xc5b4, 0x0, 0x1);
        gbc.writeMem(0xa12d, { 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4c74, gbc.sp());
        EXPECT(0xa12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa12d));
        // 85 020C
        gbc.setState(0xb8c4, 0xdbfe, 0xbbd0, 0x85c0, 0xe124, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0xb8c4, { 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb8c4));
        // 85 020E
        gbc.setState(0xd428, 0xaa7f, 0xc6c0, 0x4298, 0xbd8c, 0x17c2, 0x1, 0x0);
        gbc.writeMem(0xd428, { 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0xd429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd428));
        // 85 020F
        gbc.setState(0x7702, 0xb84b, 0x8010, 0x9511, 0x45c8, 0x9f79, 0x0, 0x1);
        gbc.writeMem(0x7702, { 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb84b, gbc.sp());
        EXPECT(0x7703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0211
        gbc.setState(0x3050, 0xec38, 0x10f0, 0xc972, 0x891d, 0xb38a, 0x1, 0x1);
        gbc.writeMem(0x3050, { 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x3051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0212
        gbc.setState(0x4198, 0xd97b, 0xa820, 0x1315, 0x6faf, 0x1648, 0x1, 0x1);
        gbc.writeMem(0x4198, { 0x85 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd97b, gbc.sp());
        EXPECT(0x4199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0213
        gbc.setState(0x5b45, 0xc89e, 0x34c0, 0x80d3, 0x78ec, 0x4be0, 0x1, 0x0);
        gbc.writeMem(0x5b45, { 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0214
        gbc.setState(0xde48, 0x7648, 0xc300, 0x6808, 0x99b1, 0xab3f, 0x0, 0x0);
        gbc.writeMem(0xde48, { 0x85 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7648, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xde48));
        // 85 0215
        gbc.setState(0x5f49, 0x626d, 0x8030, 0x9d26, 0x1066, 0x86be, 0x1, 0x1);
        gbc.writeMem(0x5f49, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0216
        gbc.setState(0x500d, 0xd706, 0x40d0, 0x7f61, 0x62f3, 0xe662, 0x1, 0x1);
        gbc.writeMem(0x500d, { 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0217
        gbc.setState(0x1954, 0x5f0b, 0x2a70, 0x9516, 0x30fb, 0x82c3, 0x1, 0x0);
        gbc.writeMem(0x1954, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5f0b, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0218
        gbc.setState(0x5fb5, 0xd087, 0xc7e0, 0x2d01, 0xe4cc, 0xb623, 0x1, 0x0);
        gbc.writeMem(0x5fb5, { 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd087, gbc.sp());
        EXPECT(0x5fb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0219
        gbc.setState(0x71eb, 0x8c7d, 0x3fd0, 0xfc2, 0x3827, 0x4f91, 0x0, 0x1);
        gbc.writeMem(0x71eb, { 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 021A
        gbc.setState(0x8189, 0x9bad, 0xf8f0, 0xff9d, 0x42c7, 0xf944, 0x1, 0x1);
        gbc.writeMem(0x8189, { 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9bad, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8189));
        // 85 021B
        gbc.setState(0x13e0, 0xacb, 0xeac0, 0x9943, 0x81f5, 0x6aac, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xacb, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 021C
        gbc.setState(0x7631, 0x4fc7, 0x3180, 0xbb06, 0x9df1, 0xc0f9, 0x1, 0x0);
        gbc.writeMem(0x7631, { 0x85 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4fc7, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 021D
        gbc.setState(0xa275, 0x9851, 0x4f30, 0xc91d, 0xd65d, 0x5a65, 0x0, 0x0);
        gbc.writeMem(0xa275, { 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9851, gbc.sp());
        EXPECT(0xa276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa275));
        // 85 021E
        gbc.setState(0xa084, 0xa61e, 0xcfc0, 0x5e6a, 0xf1fa, 0x34ac, 0x0, 0x0);
        gbc.writeMem(0xa084, { 0x85 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa61e, gbc.sp());
        EXPECT(0xa085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa084));
        // 85 021F
        gbc.setState(0xc201, 0xd4c8, 0x34f0, 0xb643, 0x2a36, 0x703d, 0x1, 0x1);
        gbc.writeMem(0xc201, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4c8, gbc.sp());
        EXPECT(0xc202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc201));
        // 85 0220
        gbc.setState(0x6195, 0x1434, 0xa030, 0xe9f2, 0xd8b, 0x196d, 0x1, 0x1);
        gbc.writeMem(0x6195, { 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x6196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0221
        gbc.setState(0x8054, 0x4d7a, 0x57e0, 0xc070, 0xf1e7, 0xfc96, 0x0, 0x1);
        gbc.writeMem(0x8054, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4d7a, gbc.sp());
        EXPECT(0x8055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8054));
        // 85 0222
        gbc.setState(0x5d9f, 0x86a2, 0xa8d0, 0x6522, 0xe08e, 0x535, 0x0, 0x1);
        gbc.writeMem(0x5d9f, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0224
        gbc.setState(0xbd5b, 0x64c4, 0xd950, 0x4e1e, 0x65ac, 0x1016, 0x1, 0x0);
        gbc.writeMem(0xbd5b, { 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbd5b));
        // 85 0225
        gbc.setState(0x95ea, 0xcd3f, 0xecc0, 0xed79, 0x3827, 0x72fb, 0x0, 0x0);
        gbc.writeMem(0x95ea, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcd3f, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x95ea));
        // 85 0226
        gbc.setState(0xc52e, 0xabc5, 0x4d80, 0x218, 0xf73e, 0xbb1c, 0x1, 0x1);
        gbc.writeMem(0xc52e, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xabc5, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc52e));
        // 85 0227
        gbc.setState(0x23f5, 0x4882, 0x4be0, 0xd32c, 0x6087, 0xf2a7, 0x0, 0x0);
        gbc.writeMem(0x23f5, { 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4882, gbc.sp());
        EXPECT(0x23f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0228
        gbc.setState(0xc20e, 0x54fb, 0x7800, 0xdd42, 0x981a, 0x14b0, 0x0, 0x0);
        gbc.writeMem(0xc20e, { 0x85 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x54fb, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc20e));
        // 85 0229
        gbc.setState(0x2390, 0xd4bd, 0x4f90, 0x559e, 0xf113, 0x76ea, 0x1, 0x1);
        gbc.writeMem(0x2390, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 022A
        gbc.setState(0xbe2, 0xaba5, 0x2d70, 0x12c9, 0x39de, 0x90dc, 0x1, 0x1);
        gbc.writeMem(0xbe2, { 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaba5, gbc.sp());
        EXPECT(0xbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 022B
        gbc.setState(0x8bc1, 0x25f5, 0x15e0, 0x9402, 0xe5e8, 0x201e, 0x1, 0x1);
        gbc.writeMem(0x8bc1, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0x8bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8bc1));
        // 85 022C
        gbc.setState(0xd2a1, 0xe0e9, 0x2a80, 0x112c, 0x38d0, 0x5617, 0x1, 0x0);
        gbc.writeMem(0xd2a1, { 0x85 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe0e9, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd2a1));
        // 85 022D
        gbc.setState(0xb193, 0xdcd6, 0x8a40, 0x5ec0, 0x24e3, 0xebcd, 0x0, 0x1);
        gbc.writeMem(0xb193, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdcd6, gbc.sp());
        EXPECT(0xb194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb193));
        // 85 022E
        gbc.setState(0xbddf, 0x8296, 0xcb80, 0xcca9, 0xdcf2, 0xff46, 0x0, 0x0);
        gbc.writeMem(0xbddf, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbddf));
        // 85 022F
        gbc.setState(0x52b6, 0x923, 0xfa0, 0xcdf, 0x6830, 0x8454, 0x1, 0x1);
        gbc.writeMem(0x52b6, { 0x85 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0x52b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0230
        gbc.setState(0x3754, 0x432d, 0x74b0, 0x3f12, 0x236e, 0x3d99, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x432d, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0231
        gbc.setState(0x48ac, 0x37f4, 0x5320, 0x8e5b, 0x2c6f, 0xd796, 0x0, 0x1);
        gbc.writeMem(0x48ac, { 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x37f4, gbc.sp());
        EXPECT(0x48ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0232
        gbc.setState(0x2942, 0xd067, 0x1760, 0xe29, 0xe481, 0xab4, 0x1, 0x0);
        gbc.writeMem(0x2942, { 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd067, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0233
        gbc.setState(0x2d24, 0x57d6, 0xf0a0, 0xf2c4, 0x465, 0x492e, 0x0, 0x1);
        gbc.writeMem(0x2d24, { 0x85 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x57d6, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0234
        gbc.setState(0xde25, 0xea29, 0xade0, 0x341, 0xefbf, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0xde25, { 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0xde26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xde25));
        // 85 0236
        gbc.setState(0x142, 0x63f0, 0x5240, 0x86b4, 0x8896, 0x5a8c, 0x0, 0x1);
        gbc.writeMem(0x142, { 0x85 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x63f0, gbc.sp());
        EXPECT(0x143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0237
        gbc.setState(0xea02, 0x30de, 0x1b50, 0x29d1, 0x8980, 0xaf30, 0x0, 0x0);
        gbc.writeMem(0xea02, { 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xea02));
        // 85 0238
        gbc.setState(0xb12b, 0x1e19, 0x3fa0, 0x2b4d, 0xe54b, 0x4cdd, 0x0, 0x0);
        gbc.writeMem(0xb12b, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e19, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb12b));
        // 85 0239
        gbc.setState(0x3656, 0x689, 0x7b10, 0xc2ed, 0x85ab, 0xfd18, 0x0, 0x1);
        gbc.writeMem(0x3656, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x689, gbc.sp());
        EXPECT(0x3657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 023B
        gbc.setState(0x4f5e, 0x1707, 0x9ec0, 0x1b5f, 0x82c9, 0xa1e3, 0x0, 0x0);
        gbc.writeMem(0x4f5e, { 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1707, gbc.sp());
        EXPECT(0x4f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 023C
        gbc.setState(0xa887, 0x5239, 0xd6f0, 0x3bad, 0x19a3, 0x92f4, 0x1, 0x1);
        gbc.writeMem(0xa887, { 0x85 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa887));
        // 85 023D
        gbc.setState(0xa454, 0xc311, 0x4530, 0x4f82, 0x1ddd, 0x9e88, 0x1, 0x0);
        gbc.writeMem(0xa454, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc311, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa454));
        // 85 023E
        gbc.setState(0x66a0, 0x297a, 0xce90, 0x34aa, 0x28a0, 0xf062, 0x1, 0x1);
        gbc.writeMem(0x66a0, { 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x66a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 023F
        gbc.setState(0x769c, 0x690c, 0x8d0, 0x12eb, 0xe9ce, 0x4632, 0x0, 0x0);
        gbc.writeMem(0x769c, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0240
        gbc.setState(0xd8ee, 0x3d57, 0x4a30, 0x635a, 0x2e3e, 0x1d2f, 0x0, 0x1);
        gbc.writeMem(0xd8ee, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3d57, gbc.sp());
        EXPECT(0xd8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd8ee));
        // 85 0241
        gbc.setState(0x5ed8, 0xebb2, 0xe9b0, 0x4cc5, 0x3887, 0x4d00, 0x0, 0x0);
        gbc.writeMem(0x5ed8, { 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0242
        gbc.setState(0xb3c6, 0x83d3, 0xd780, 0x5a3d, 0x64fc, 0x347f, 0x0, 0x1);
        gbc.writeMem(0xb3c6, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb3c6));
        // 85 0243
        gbc.setState(0x45ca, 0x1d94, 0xe090, 0x6115, 0xb7e1, 0xce00, 0x1, 0x0);
        gbc.writeMem(0x45ca, { 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0x45cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0244
        gbc.setState(0xe72d, 0xb94b, 0xb270, 0xe83a, 0xaebc, 0x9bcc, 0x0, 0x1);
        gbc.writeMem(0xe72d, { 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe72d));
        // 85 0246
        gbc.setState(0x25a9, 0x4621, 0x2960, 0xd61f, 0x6c59, 0x5258, 0x0, 0x1);
        gbc.writeMem(0x25a9, { 0x85 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4621, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0247
        gbc.setState(0xeedc, 0x44c6, 0x7ce0, 0x2800, 0xd950, 0x82a3, 0x1, 0x0);
        gbc.writeMem(0xeedc, { 0x85 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeedc));
        // 85 0248
        gbc.setState(0xa1f1, 0xcfff, 0x70c0, 0x20f4, 0x4064, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0xa1f1, { 0x85 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcfff, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa1f1));
        // 85 0249
        gbc.setState(0x8b08, 0x8bc1, 0xea10, 0x213e, 0xe992, 0x30d5, 0x1, 0x0);
        gbc.writeMem(0x8b08, { 0x85 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0x8b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8b08));
        // 85 024A
        gbc.setState(0x36ca, 0x8a9b, 0x47d0, 0x9c6d, 0xb56c, 0x3ebe, 0x0, 0x0);
        gbc.writeMem(0x36ca, { 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0x36cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 024B
        gbc.setState(0xb7d8, 0x7d83, 0x4e70, 0x5517, 0xfbe4, 0xf372, 0x1, 0x1);
        gbc.writeMem(0xb7d8, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb7d8));
        // 85 024C
        gbc.setState(0xb0e4, 0x24a8, 0x5c00, 0xbbb5, 0xb4fe, 0x21b3, 0x1, 0x0);
        gbc.writeMem(0xb0e4, { 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x24a8, gbc.sp());
        EXPECT(0xb0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb0e4));
        // 85 024D
        gbc.setState(0x1d6, 0x5ef7, 0x45b0, 0x6f5c, 0x4754, 0x2151, 0x1, 0x0);
        gbc.writeMem(0x1d6, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5ef7, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 024E
        gbc.setState(0x59a0, 0x2464, 0xc1b0, 0xe761, 0x3fa, 0xa7bd, 0x1, 0x0);
        gbc.writeMem(0x59a0, { 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2464, gbc.sp());
        EXPECT(0x59a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 024F
        gbc.setState(0x35ce, 0xe922, 0x23c0, 0x73ff, 0x4147, 0x74cc, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0250
        gbc.setState(0x9d9c, 0x465d, 0x10a0, 0x2f16, 0xf7ee, 0x8c0a, 0x0, 0x1);
        gbc.writeMem(0x9d9c, { 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0x9d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d9c));
        // 85 0251
        gbc.setState(0x8a91, 0x6637, 0x6fc0, 0xb0bd, 0xa597, 0x4870, 0x1, 0x1);
        gbc.writeMem(0x8a91, { 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8a91));
        // 85 0253
        gbc.setState(0x81b6, 0x6721, 0xee60, 0xc3b9, 0x15b3, 0xc9cd, 0x0, 0x0);
        gbc.writeMem(0x81b6, { 0x85 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x81b6));
        // 85 0254
        gbc.setState(0x8999, 0x1cac, 0x92e0, 0x14e, 0x40af, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x8999, { 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1cac, gbc.sp());
        EXPECT(0x899a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8999));
        // 85 0255
        gbc.setState(0x656b, 0xa3a2, 0x1a70, 0xc3c9, 0x2934, 0x2ebd, 0x0, 0x0);
        gbc.writeMem(0x656b, { 0x85 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0x656c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0256
        gbc.setState(0x1a50, 0x17fd, 0xb460, 0xd5b1, 0x8e6c, 0xa3de, 0x1, 0x1);
        gbc.writeMem(0x1a50, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0257
        gbc.setState(0x3d41, 0xc30b, 0x4460, 0x309b, 0x345c, 0x7efa, 0x0, 0x1);
        gbc.writeMem(0x3d41, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc30b, gbc.sp());
        EXPECT(0x3d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0258
        gbc.setState(0xdb82, 0xd50a, 0xefa0, 0xa26b, 0xe084, 0xf75f, 0x0, 0x0);
        gbc.writeMem(0xdb82, { 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd50a, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdb82));
        // 85 0259
        gbc.setState(0x2d0e, 0xf03, 0xff30, 0xf0ef, 0x73d7, 0xed3b, 0x1, 0x0);
        gbc.writeMem(0x2d0e, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf03, gbc.sp());
        EXPECT(0x2d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 025A
        gbc.setState(0x6962, 0xae51, 0xdef0, 0xd6ec, 0x48a4, 0xd8ae, 0x1, 0x1);
        gbc.writeMem(0x6962, { 0x85 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 025B
        gbc.setState(0x52c3, 0x9181, 0xd20, 0x709e, 0xc22d, 0x421e, 0x0, 0x0);
        gbc.writeMem(0x52c3, { 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9181, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 025C
        gbc.setState(0xd6f2, 0xbb6c, 0x7240, 0x1317, 0x1a09, 0x10a, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0x85 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbb6c, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd6f2));
        // 85 025E
        gbc.setState(0xb41d, 0x44f7, 0xc8f0, 0x6b75, 0x45ac, 0x1476, 0x0, 0x1);
        gbc.writeMem(0xb41d, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb41d));
        // 85 025F
        gbc.setState(0xc515, 0x303a, 0xa770, 0xfb41, 0xbc60, 0xf0e9, 0x1, 0x0);
        gbc.writeMem(0xc515, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0xc516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc515));
        // 85 0260
        gbc.setState(0xb358, 0xe38d, 0xf6a0, 0xc377, 0x5652, 0xc123, 0x1, 0x1);
        gbc.writeMem(0xb358, { 0x85 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe38d, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb358));
        // 85 0261
        gbc.setState(0x2df7, 0x9699, 0x9d0, 0x2fba, 0x2b5, 0x5881, 0x0, 0x0);
        gbc.writeMem(0x2df7, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0x2df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0262
        gbc.setState(0xd693, 0xf342, 0x8ea0, 0x7cbd, 0x2afb, 0x8f00, 0x1, 0x0);
        gbc.writeMem(0xd693, { 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf342, gbc.sp());
        EXPECT(0xd694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd693));
        // 85 0263
        gbc.setState(0x1592, 0x5648, 0x7710, 0xd09d, 0x3aa8, 0xff80, 0x1, 0x0);
        gbc.writeMem(0x1592, { 0x85 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0x1593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0264
        gbc.setState(0xbb7b, 0xd23, 0xa6d0, 0x53d3, 0xc784, 0xb167, 0x1, 0x1);
        gbc.writeMem(0xbb7b, { 0x85 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd23, gbc.sp());
        EXPECT(0xbb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbb7b));
        // 85 0265
        gbc.setState(0x8423, 0xeef5, 0x51e0, 0x7576, 0x5206, 0x2cd5, 0x1, 0x1);
        gbc.writeMem(0x8423, { 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xeef5, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8423));
        // 85 0266
        gbc.setState(0x2b94, 0x871e, 0xb690, 0x585d, 0x833f, 0x2788, 0x1, 0x1);
        gbc.writeMem(0x2b94, { 0x85 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x871e, gbc.sp());
        EXPECT(0x2b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0267
        gbc.setState(0xceb9, 0x1ad1, 0xcec0, 0xb5bd, 0x325, 0xe8c5, 0x0, 0x1);
        gbc.writeMem(0xceb9, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1ad1, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xceb9));
        // 85 0268
        gbc.setState(0x2e10, 0x8980, 0xf150, 0x9a04, 0x8f35, 0x56b1, 0x1, 0x0);
        gbc.writeMem(0x2e10, { 0x85 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8980, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0269
        gbc.setState(0x505d, 0xe01d, 0x49a0, 0xf3d3, 0xa832, 0x34cb, 0x0, 0x0);
        gbc.writeMem(0x505d, { 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe01d, gbc.sp());
        EXPECT(0x505e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 026B
        gbc.setState(0xda4, 0x27db, 0xd8e0, 0x74a3, 0x8185, 0xf3dd, 0x0, 0x1);
        gbc.writeMem(0xda4, { 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x27db, gbc.sp());
        EXPECT(0xda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 026C
        gbc.setState(0x753a, 0xa9fe, 0x2670, 0x96ec, 0xc881, 0x5721, 0x1, 0x1);
        gbc.writeMem(0x753a, { 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa9fe, gbc.sp());
        EXPECT(0x753b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 026D
        gbc.setState(0x5fcc, 0x8c0, 0xa680, 0x9032, 0x87c0, 0xc755, 0x0, 0x0);
        gbc.writeMem(0x5fcc, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8c0, gbc.sp());
        EXPECT(0x5fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 026E
        gbc.setState(0x992c, 0xe129, 0xb9c0, 0x3b8e, 0x22af, 0xfa72, 0x0, 0x1);
        gbc.writeMem(0x992c, { 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x992c));
        // 85 026F
        gbc.setState(0xeb61, 0x2dfd, 0xc6d0, 0xa623, 0xea30, 0xf244, 0x1, 0x1);
        gbc.writeMem(0xeb61, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2dfd, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeb61));
        // 85 0271
        gbc.setState(0x561f, 0xa411, 0x5d80, 0x8ed3, 0x870c, 0x492f, 0x0, 0x1);
        gbc.writeMem(0x561f, { 0x85 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa411, gbc.sp());
        EXPECT(0x5620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0272
        gbc.setState(0xcbc8, 0xf746, 0x6370, 0xd565, 0xeb18, 0xf83a, 0x0, 0x0);
        gbc.writeMem(0xcbc8, { 0x85 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf746, gbc.sp());
        EXPECT(0xcbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcbc8));
        // 85 0273
        gbc.setState(0x3742, 0xb15d, 0x5b00, 0xec8e, 0xeda4, 0x5fb4, 0x0, 0x0);
        gbc.writeMem(0x3742, { 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb15d, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0274
        gbc.setState(0xdd86, 0xf441, 0xb680, 0x3092, 0x5e38, 0x94f0, 0x1, 0x1);
        gbc.writeMem(0xdd86, { 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf441, gbc.sp());
        EXPECT(0xdd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdd86));
        // 85 0275
        gbc.setState(0xd522, 0x6a54, 0xd070, 0x13a0, 0x1386, 0x1f2d, 0x0, 0x0);
        gbc.writeMem(0xd522, { 0x85 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6a54, gbc.sp());
        EXPECT(0xd523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd522));
        // 85 0276
        gbc.setState(0x84f5, 0x9c15, 0xbcf0, 0x3334, 0x291, 0x6a0b, 0x1, 0x1);
        gbc.writeMem(0x84f5, { 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9c15, gbc.sp());
        EXPECT(0x84f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x84f5));
        // 85 0277
        gbc.setState(0xd455, 0x1710, 0x6380, 0xc238, 0x2e67, 0xabba, 0x0, 0x0);
        gbc.writeMem(0xd455, { 0x85 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1710, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd455));
        // 85 0278
        gbc.setState(0xc9c0, 0x1336, 0x8140, 0xe565, 0x6ac3, 0x5567, 0x1, 0x1);
        gbc.writeMem(0xc9c0, { 0x85 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1336, gbc.sp());
        EXPECT(0xc9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc9c0));
        // 85 0279
        gbc.setState(0x97a1, 0x31be, 0x6e10, 0xa9b2, 0x1adc, 0x9655, 0x1, 0x1);
        gbc.writeMem(0x97a1, { 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x31be, gbc.sp());
        EXPECT(0x97a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97a1));
        // 85 027A
        gbc.setState(0x5671, 0xbef2, 0xdd20, 0xb1df, 0x8390, 0x3caa, 0x0, 0x0);
        gbc.writeMem(0x5671, { 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbef2, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 027B
        gbc.setState(0x523, 0xd59b, 0x9970, 0xa0ca, 0xfc32, 0x2f37, 0x1, 0x0);
        gbc.writeMem(0x523, { 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd59b, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 027C
        gbc.setState(0x5fe, 0x57f9, 0x3420, 0x1e7c, 0x5b99, 0xcc17, 0x0, 0x1);
        gbc.writeMem(0x5fe, { 0x85 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x57f9, gbc.sp());
        EXPECT(0x5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 027D
        gbc.setState(0x2227, 0xd418, 0xf0, 0xf520, 0xba02, 0xa839, 0x0, 0x1);
        gbc.writeMem(0x2227, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd418, gbc.sp());
        EXPECT(0x2228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 027E
        gbc.setState(0x30f9, 0xb751, 0xe400, 0xd5cc, 0xb00a, 0x9927, 0x1, 0x0);
        gbc.writeMem(0x30f9, { 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb751, gbc.sp());
        EXPECT(0x30fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 027F
        gbc.setState(0x4c67, 0x7f5f, 0x2f0, 0x2a50, 0x702e, 0xde0a, 0x1, 0x0);
        gbc.writeMem(0x4c67, { 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7f5f, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0280
        gbc.setState(0x86b7, 0xc8ae, 0x4170, 0xaa15, 0x6698, 0x86c1, 0x0, 0x1);
        gbc.writeMem(0x86b7, { 0x85 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc8ae, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x86b7));
        // 85 0281
        gbc.setState(0x9f31, 0xaf9c, 0x13a0, 0xec04, 0xa278, 0xb03b, 0x0, 0x0);
        gbc.writeMem(0x9f31, { 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaf9c, gbc.sp());
        EXPECT(0x9f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9f31));
        // 85 0282
        gbc.setState(0xb9e4, 0x434b, 0xf490, 0x31aa, 0x2fe6, 0xeeb6, 0x1, 0x1);
        gbc.writeMem(0xb9e4, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb9e4));
        // 85 0283
        gbc.setState(0x8ce6, 0x395b, 0xdc70, 0xb37c, 0xe6f4, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0x8ce6, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x395b, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8ce6));
        // 85 0285
        gbc.setState(0xccb8, 0x82c9, 0x54c0, 0xa79a, 0x8d8f, 0x2729, 0x1, 0x0);
        gbc.writeMem(0xccb8, { 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x82c9, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xccb8));
        // 85 0286
        gbc.setState(0x664, 0xd814, 0x4220, 0x6be3, 0xa4a7, 0xa72f, 0x1, 0x0);
        gbc.writeMem(0x664, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd814, gbc.sp());
        EXPECT(0x665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0287
        gbc.setState(0xc8e1, 0x8406, 0x4e30, 0x47d0, 0x92d3, 0xbaca, 0x1, 0x1);
        gbc.writeMem(0xc8e1, { 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8406, gbc.sp());
        EXPECT(0xc8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc8e1));
        // 85 0288
        gbc.setState(0xec6f, 0xc0ec, 0x6dd0, 0x2b80, 0x4f29, 0x1999, 0x0, 0x0);
        gbc.writeMem(0xec6f, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc0ec, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xec6f));
        // 85 0289
        gbc.setState(0x6449, 0xad, 0x4320, 0x5835, 0xf084, 0xe5f2, 0x1, 0x1);
        gbc.writeMem(0x6449, { 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xad, gbc.sp());
        EXPECT(0x644a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 028A
        gbc.setState(0x6aea, 0x11ee, 0xe2e0, 0x9273, 0x326a, 0xc424, 0x0, 0x0);
        gbc.writeMem(0x6aea, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x11ee, gbc.sp());
        EXPECT(0x6aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 028B
        gbc.setState(0xdce8, 0xc8a1, 0xac90, 0xa6df, 0x7588, 0xdfa4, 0x1, 0x1);
        gbc.writeMem(0xdce8, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0xdce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdce8));
        // 85 028C
        gbc.setState(0x3271, 0xe121, 0x4690, 0xa858, 0x976f, 0xf2e8, 0x1, 0x1);
        gbc.writeMem(0x3271, { 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe121, gbc.sp());
        EXPECT(0x3272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 028D
        gbc.setState(0x951b, 0xb494, 0x1690, 0xf0a5, 0xdde3, 0x4719, 0x0, 0x1);
        gbc.writeMem(0x951b, { 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb494, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x951b));
        // 85 028E
        gbc.setState(0x3e39, 0x1b8e, 0xfe40, 0xc21d, 0xdcd4, 0xa3eb, 0x0, 0x0);
        gbc.writeMem(0x3e39, { 0x85 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 028F
        gbc.setState(0x1df2, 0x9a08, 0xb390, 0xabaa, 0x88cc, 0x1f15, 0x0, 0x1);
        gbc.writeMem(0x1df2, { 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9a08, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0290
        gbc.setState(0x6f4b, 0x79df, 0xc130, 0x734d, 0xd124, 0x6aa6, 0x0, 0x0);
        gbc.writeMem(0x6f4b, { 0x85 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x79df, gbc.sp());
        EXPECT(0x6f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0291
        gbc.setState(0x9a1c, 0xc12e, 0x5760, 0xf0c9, 0x6992, 0xadc1, 0x1, 0x0);
        gbc.writeMem(0x9a1c, { 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc12e, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9a1c));
        // 85 0292
        gbc.setState(0xb39a, 0x3921, 0x9720, 0xdbb5, 0x4379, 0xdf73, 0x0, 0x1);
        gbc.writeMem(0xb39a, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3921, gbc.sp());
        EXPECT(0xb39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb39a));
        // 85 0293
        gbc.setState(0x889b, 0xc074, 0x2d80, 0x3601, 0x250, 0x5072, 0x0, 0x1);
        gbc.writeMem(0x889b, { 0x85 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0x889c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x889b));
        // 85 0294
        gbc.setState(0xd872, 0x52fd, 0xe6a0, 0x3f66, 0xd2c7, 0x7642, 0x0, 0x0);
        gbc.writeMem(0xd872, { 0x85 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0xd873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd872));
        // 85 0295
        gbc.setState(0xa7c5, 0xb1d5, 0xe680, 0xb45a, 0x331d, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0xa7c5, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb1d5, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa7c5));
        // 85 0297
        gbc.setState(0x864c, 0xb997, 0x6480, 0x2dec, 0x797, 0x7bee, 0x1, 0x0);
        gbc.writeMem(0x864c, { 0x85 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb997, gbc.sp());
        EXPECT(0x864d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x864c));
        // 85 0298
        gbc.setState(0x8302, 0xd5e, 0x8f80, 0xe7df, 0x63be, 0x9ea2, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0x8303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8302));
        // 85 0299
        gbc.setState(0x8f5a, 0x5e26, 0x17a0, 0xc33a, 0x8653, 0x8784, 0x1, 0x1);
        gbc.writeMem(0x8f5a, { 0x85 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0x8f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8f5a));
        // 85 029A
        gbc.setState(0xbd9b, 0xb79f, 0x6090, 0xbd70, 0x8bb3, 0x947d, 0x1, 0x1);
        gbc.writeMem(0xbd9b, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb79f, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbd9b));
        // 85 029B
        gbc.setState(0x8fc5, 0x4c18, 0xb4c0, 0x23e6, 0x8aae, 0xebe5, 0x1, 0x1);
        gbc.writeMem(0x8fc5, { 0x85 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x8fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8fc5));
        // 85 029C
        gbc.setState(0x1380, 0x9ffe, 0xcf30, 0xf61b, 0x2f3a, 0x8e1b, 0x1, 0x0);
        gbc.writeMem(0x1380, { 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0x1381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 029D
        gbc.setState(0xacbe, 0x3b02, 0xa490, 0xb160, 0x159a, 0x9275, 0x0, 0x0);
        gbc.writeMem(0xacbe, { 0x85 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xacbe));
        // 85 029E
        gbc.setState(0x5a37, 0x3450, 0xbfa0, 0x5024, 0x7634, 0x67aa, 0x0, 0x0);
        gbc.writeMem(0x5a37, { 0x85 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3450, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 029F
        gbc.setState(0x102e, 0x3b1b, 0x48d0, 0xf199, 0x9bd8, 0x5ba9, 0x0, 0x1);
        gbc.writeMem(0x102e, { 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02A0
        gbc.setState(0xdbdb, 0xea4c, 0x8910, 0xb4b9, 0xb7, 0x1f38, 0x0, 0x0);
        gbc.writeMem(0xdbdb, { 0x85 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0xdbdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdbdb));
        // 85 02A1
        gbc.setState(0x94fa, 0xb5d3, 0xed60, 0xb322, 0xf2c6, 0x1c07, 0x1, 0x1);
        gbc.writeMem(0x94fa, { 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb5d3, gbc.sp());
        EXPECT(0x94fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x94fa));
        // 85 02A2
        gbc.setState(0x293b, 0x39bc, 0xbab0, 0x63fa, 0x3036, 0x37cc, 0x0, 0x0);
        gbc.writeMem(0x293b, { 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x39bc, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02A3
        gbc.setState(0xadcc, 0x827d, 0xe210, 0xe371, 0xfdb, 0xaf02, 0x1, 0x1);
        gbc.writeMem(0xadcc, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x827d, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xadcc));
        // 85 02A4
        gbc.setState(0x362b, 0xd31e, 0x2450, 0xa177, 0x8741, 0xe1ce, 0x0, 0x0);
        gbc.writeMem(0x362b, { 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02A5
        gbc.setState(0x7781, 0x83ac, 0xb890, 0x2ef4, 0x8dbe, 0xa4b9, 0x1, 0x1);
        gbc.writeMem(0x7781, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02A6
        gbc.setState(0x347a, 0xdc3c, 0x130, 0xf9da, 0xb9fd, 0x7c3a, 0x0, 0x0);
        gbc.writeMem(0x347a, { 0x85 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0x347b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02A7
        gbc.setState(0xdfcf, 0x4ec8, 0x5b70, 0xb9a0, 0xcead, 0xfe80, 0x0, 0x0);
        gbc.writeMem(0xdfcf, { 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0xdfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdfcf));
        // 85 02A8
        gbc.setState(0x1e26, 0x501b, 0x51b0, 0x8caa, 0xb858, 0x3ea0, 0x0, 0x1);
        gbc.writeMem(0x1e26, { 0x85 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0x1e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02A9
        gbc.setState(0x92a2, 0xa62a, 0x6130, 0xd9a7, 0xf6d1, 0xcfbb, 0x1, 0x0);
        gbc.writeMem(0x92a2, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0x92a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x92a2));
        // 85 02AA
        gbc.setState(0x8767, 0xedd9, 0x12c0, 0x50d9, 0x8024, 0xd4d9, 0x0, 0x0);
        gbc.writeMem(0x8767, { 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xedd9, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8767));
        // 85 02AC
        gbc.setState(0x8844, 0x4a21, 0x2150, 0xb6b9, 0xf692, 0x2d43, 0x1, 0x0);
        gbc.writeMem(0x8844, { 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4a21, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8844));
        // 85 02AD
        gbc.setState(0x730b, 0x8000, 0x4760, 0xb428, 0x9eb5, 0x94a8, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8000, gbc.sp());
        EXPECT(0x730c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02AE
        gbc.setState(0x3b96, 0x8729, 0x1090, 0xfb, 0x39fd, 0xf323, 0x0, 0x1);
        gbc.writeMem(0x3b96, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8729, gbc.sp());
        EXPECT(0x3b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02AF
        gbc.setState(0xa0a0, 0x22b6, 0x6c80, 0x1987, 0x9db5, 0x446a, 0x1, 0x0);
        gbc.writeMem(0xa0a0, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa0a0));
        // 85 02B0
        gbc.setState(0x67a, 0xa5c2, 0xe8f0, 0x5964, 0xe0ea, 0xd20b, 0x1, 0x1);
        gbc.writeMem(0x67a, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02B1
        gbc.setState(0xddff, 0xfdba, 0xe2f0, 0xb52d, 0x6675, 0x186, 0x1, 0x1);
        gbc.writeMem(0xddff, { 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfdba, gbc.sp());
        EXPECT(0xde00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xddff));
        // 85 02B2
        gbc.setState(0xd446, 0x1e2f, 0x5bc0, 0x1c04, 0xf7c2, 0x8a1c, 0x1, 0x1);
        gbc.writeMem(0xd446, { 0x85 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd446));
        // 85 02B3
        gbc.setState(0x1ab1, 0xa056, 0x9090, 0x2d09, 0xc30d, 0x6d63, 0x0, 0x0);
        gbc.writeMem(0x1ab1, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02B4
        gbc.setState(0xee78, 0x8869, 0x4e30, 0x4f66, 0x6d89, 0xa145, 0x1, 0x1);
        gbc.writeMem(0xee78, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8869, gbc.sp());
        EXPECT(0xee79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xee78));
        // 85 02B5
        gbc.setState(0xd74f, 0x2cfc, 0x3050, 0xd458, 0x210, 0x91c3, 0x0, 0x0);
        gbc.writeMem(0xd74f, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0xd750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd74f));
        // 85 02B6
        gbc.setState(0x675, 0x5206, 0xf0f0, 0xe2cf, 0x26e6, 0x7343, 0x1, 0x0);
        gbc.writeMem(0x675, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0x676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02B7
        gbc.setState(0x393e, 0x1a27, 0xfe00, 0x84d4, 0x8778, 0xa509, 0x1, 0x1);
        gbc.writeMem(0x393e, { 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02B8
        gbc.setState(0x94a6, 0xba2f, 0xa130, 0xb3b3, 0x5586, 0x97ef, 0x0, 0x0);
        gbc.writeMem(0x94a6, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xba2f, gbc.sp());
        EXPECT(0x94a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x94a6));
        // 85 02B9
        gbc.setState(0x76b1, 0x2d6a, 0x5f20, 0x9da2, 0x2e62, 0x498f, 0x1, 0x0);
        gbc.writeMem(0x76b1, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2d6a, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02BA
        gbc.setState(0x8a4c, 0xf836, 0xbab0, 0xba83, 0x4e04, 0xfbe7, 0x0, 0x1);
        gbc.writeMem(0x8a4c, { 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf836, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8a4c));
        // 85 02BC
        gbc.setState(0x6373, 0xef1e, 0x8550, 0x1db6, 0xaa40, 0x362b, 0x0, 0x0);
        gbc.writeMem(0x6373, { 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xef1e, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02BD
        gbc.setState(0xc8aa, 0x89f3, 0xc090, 0x26e1, 0x1095, 0xab4b, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc8aa));
        // 85 02BE
        gbc.setState(0xa870, 0x1900, 0x76a0, 0x4f36, 0xc8a2, 0xa5, 0x1, 0x1);
        gbc.writeMem(0xa870, { 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa870));
        // 85 02BF
        gbc.setState(0x56f6, 0xc687, 0x1200, 0x2293, 0x85bd, 0xf6c0, 0x0, 0x1);
        gbc.writeMem(0x56f6, { 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02C0
        gbc.setState(0x9e1a, 0xb5b5, 0x5870, 0xf864, 0x4353, 0x235b, 0x0, 0x0);
        gbc.writeMem(0x9e1a, { 0x85 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb5b5, gbc.sp());
        EXPECT(0x9e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9e1a));
        // 85 02C1
        gbc.setState(0x437b, 0x26ba, 0xcf70, 0x6462, 0x9b2f, 0xc877, 0x0, 0x1);
        gbc.writeMem(0x437b, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x26ba, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02C2
        gbc.setState(0xc2d0, 0xb415, 0x440, 0x80ac, 0x4249, 0x8f7, 0x1, 0x0);
        gbc.writeMem(0xc2d0, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0xc2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc2d0));
        // 85 02C3
        gbc.setState(0xd809, 0xedf3, 0x6490, 0x62c, 0x1a59, 0xf083, 0x0, 0x1);
        gbc.writeMem(0xd809, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xedf3, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd809));
        // 85 02C4
        gbc.setState(0x52c7, 0x5a2b, 0xc1b0, 0xd1d6, 0xdba9, 0x93da, 0x0, 0x0);
        gbc.writeMem(0x52c7, { 0x85 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a2b, gbc.sp());
        EXPECT(0x52c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02C5
        gbc.setState(0x2a83, 0xaec4, 0x7f00, 0xa303, 0xc213, 0x14bd, 0x0, 0x0);
        gbc.writeMem(0x2a83, { 0x85 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0x2a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02C6
        gbc.setState(0x37b6, 0xc0a5, 0x33c0, 0xe57, 0x4793, 0x710e, 0x1, 0x0);
        gbc.writeMem(0x37b6, { 0x85 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc0a5, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02C7
        gbc.setState(0x9d4c, 0x68c8, 0x4420, 0xc65f, 0x39d, 0x883, 0x0, 0x1);
        gbc.writeMem(0x9d4c, { 0x85 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0x9d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d4c));
        // 85 02C8
        gbc.setState(0x45af, 0xcefc, 0xbc80, 0xd5e7, 0x8b1d, 0xa639, 0x0, 0x1);
        gbc.writeMem(0x45af, { 0x85 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcefc, gbc.sp());
        EXPECT(0x45b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02C9
        gbc.setState(0x10cc, 0xcf0a, 0x40c0, 0x269b, 0x81be, 0x80b3, 0x1, 0x1);
        gbc.writeMem(0x10cc, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcf0a, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02CA
        gbc.setState(0xc77f, 0xe5f8, 0xa7a0, 0xf44e, 0xb50c, 0x888e, 0x1, 0x1);
        gbc.writeMem(0xc77f, { 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe5f8, gbc.sp());
        EXPECT(0xc780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc77f));
        // 85 02CB
        gbc.setState(0x4e82, 0x3262, 0x67b0, 0x63f3, 0xfd50, 0xd875, 0x0, 0x1);
        gbc.writeMem(0x4e82, { 0x85 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3262, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02CD
        gbc.setState(0x46dc, 0x998d, 0xf8a0, 0xdc2d, 0x28, 0x822e, 0x0, 0x1);
        gbc.writeMem(0x46dc, { 0x85 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x998d, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02CE
        gbc.setState(0x1eea, 0xce11, 0xa7a0, 0xd0ee, 0x1400, 0xeb6, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0x85 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0x1eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02CF
        gbc.setState(0xbcf4, 0xfcf9, 0x5330, 0x6b4d, 0xf76b, 0xc8fd, 0x0, 0x1);
        gbc.writeMem(0xbcf4, { 0x85 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfcf9, gbc.sp());
        EXPECT(0xbcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbcf4));
        // 85 02D0
        gbc.setState(0xe985, 0xe399, 0x4430, 0x2670, 0xba46, 0xe699, 0x0, 0x1);
        gbc.writeMem(0xe985, { 0x85 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe399, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe985));
        // 85 02D1
        gbc.setState(0xeca4, 0x6792, 0xbe90, 0xa688, 0x8022, 0x28e7, 0x0, 0x1);
        gbc.writeMem(0xeca4, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6792, gbc.sp());
        EXPECT(0xeca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeca4));
        // 85 02D2
        gbc.setState(0x3801, 0x3624, 0x7620, 0xd934, 0x9fd9, 0x861e, 0x0, 0x0);
        gbc.writeMem(0x3801, { 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02D3
        gbc.setState(0xbaf2, 0xc4f4, 0xf4a0, 0x744b, 0xa9e3, 0x8620, 0x1, 0x0);
        gbc.writeMem(0xbaf2, { 0x85 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4f4, gbc.sp());
        EXPECT(0xbaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbaf2));
        // 85 02D4
        gbc.setState(0xdd64, 0x66f4, 0xd650, 0x7498, 0xfe73, 0xa118, 0x1, 0x0);
        gbc.writeMem(0xdd64, { 0x85 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0xdd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdd64));
        // 85 02D6
        gbc.setState(0x5ec2, 0xf5b3, 0x6dc0, 0x2c65, 0x300b, 0xd21d, 0x0, 0x1);
        gbc.writeMem(0x5ec2, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x5ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02D8
        gbc.setState(0x177d, 0xaf19, 0x5bd0, 0xfa02, 0x9c53, 0x637e, 0x1, 0x0);
        gbc.writeMem(0x177d, { 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xaf19, gbc.sp());
        EXPECT(0x177e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02D9
        gbc.setState(0x81af, 0x316a, 0x1140, 0xb4fa, 0xd432, 0xc082, 0x1, 0x1);
        gbc.writeMem(0x81af, { 0x85 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x81b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x81af));
        // 85 02DA
        gbc.setState(0xbd8c, 0x37f6, 0x9400, 0xe74, 0x9b5c, 0x8c59, 0x0, 0x1);
        gbc.writeMem(0xbd8c, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x37f6, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbd8c));
        // 85 02DB
        gbc.setState(0x7ba6, 0x5e07, 0x1320, 0x292, 0xa5b1, 0x672f, 0x1, 0x0);
        gbc.writeMem(0x7ba6, { 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e07, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02DC
        gbc.setState(0xaa3a, 0x3413, 0x2960, 0x7188, 0x9c79, 0xa832, 0x0, 0x0);
        gbc.writeMem(0xaa3a, { 0x85 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3413, gbc.sp());
        EXPECT(0xaa3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa3a));
        // 85 02DD
        gbc.setState(0x97ad, 0x78b9, 0x21d0, 0x7fb2, 0xde23, 0x3310, 0x0, 0x1);
        gbc.writeMem(0x97ad, { 0x85 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0x97ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97ad));
        // 85 02DE
        gbc.setState(0x6ca6, 0x635f, 0xf300, 0x4c51, 0x4fbb, 0x1555, 0x1, 0x0);
        gbc.writeMem(0x6ca6, { 0x85 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x635f, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02DF
        gbc.setState(0x15e0, 0x4354, 0xc530, 0xdfab, 0xd522, 0x4ab8, 0x0, 0x1);
        gbc.writeMem(0x15e0, { 0x85 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0x15e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02E0
        gbc.setState(0xe82b, 0xa983, 0xc130, 0xcf57, 0xf86b, 0x4d08, 0x0, 0x0);
        gbc.writeMem(0xe82b, { 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa983, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe82b));
        // 85 02E1
        gbc.setState(0x6a1e, 0xce7e, 0x1dc0, 0x39, 0x39e, 0xc606, 0x1, 0x1);
        gbc.writeMem(0x6a1e, { 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xce7e, gbc.sp());
        EXPECT(0x6a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02E2
        gbc.setState(0x9ab4, 0x397d, 0x6740, 0xfe74, 0x5f55, 0x2926, 0x0, 0x0);
        gbc.writeMem(0x9ab4, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9ab4));
        // 85 02E3
        gbc.setState(0x1039, 0x4962, 0x7e50, 0x5dc9, 0x1f72, 0xdbe0, 0x0, 0x0);
        gbc.writeMem(0x1039, { 0x85 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x103a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02E5
        gbc.setState(0x6b80, 0xf954, 0xeed0, 0xc324, 0x72c6, 0xab2b, 0x1, 0x0);
        gbc.writeMem(0x6b80, { 0x85 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0x6b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02E6
        gbc.setState(0x756c, 0xc253, 0x2a10, 0xfbf5, 0x699, 0x6415, 0x0, 0x0);
        gbc.writeMem(0x756c, { 0x85 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc253, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02E7
        gbc.setState(0x8eaa, 0x9895, 0x4920, 0x541a, 0x5251, 0x6f57, 0x0, 0x1);
        gbc.writeMem(0x8eaa, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9895, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8eaa));
        // 85 02E8
        gbc.setState(0xdaed, 0x327e, 0x3c00, 0x885, 0x69bb, 0x83af, 0x0, 0x0);
        gbc.writeMem(0xdaed, { 0x85 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x327e, gbc.sp());
        EXPECT(0xdaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdaed));
        // 85 02E9
        gbc.setState(0xcbfa, 0x2943, 0xe320, 0x7937, 0x4789, 0xb9fc, 0x1, 0x1);
        gbc.writeMem(0xcbfa, { 0x85 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2943, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcbfa));
        // 85 02EB
        gbc.setState(0x5a95, 0x55be, 0xd8b0, 0x1b9e, 0xeee7, 0x4731, 0x1, 0x1);
        gbc.writeMem(0x5a95, { 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0x5a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02EC
        gbc.setState(0x759e, 0x8e42, 0x54c0, 0xe74a, 0xf988, 0xf27d, 0x1, 0x0);
        gbc.writeMem(0x759e, { 0x85 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x759f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02ED
        gbc.setState(0x218a, 0xdd3e, 0x5a50, 0x7953, 0x6705, 0x4caf, 0x0, 0x1);
        gbc.writeMem(0x218a, { 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdd3e, gbc.sp());
        EXPECT(0x218b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02EE
        gbc.setState(0x3c71, 0x2473, 0xc900, 0x1252, 0x94df, 0x2651, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02EF
        gbc.setState(0x891, 0x5bbf, 0x1780, 0x564f, 0x6db1, 0x5038, 0x1, 0x0);
        gbc.writeMem(0x891, { 0x85 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02F0
        gbc.setState(0xd198, 0xbf36, 0xacd0, 0xa22d, 0x7ea8, 0xcb8, 0x1, 0x0);
        gbc.writeMem(0xd198, { 0x85 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd198));
        // 85 02F1
        gbc.setState(0xe4e3, 0xa929, 0x5ec0, 0xeb92, 0x77e, 0x158c, 0x0, 0x0);
        gbc.writeMem(0xe4e3, { 0x85 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa929, gbc.sp());
        EXPECT(0xe4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe4e3));
        // 85 02F2
        gbc.setState(0x90ac, 0xa351, 0x6710, 0xfe98, 0x9512, 0x321d, 0x0, 0x0);
        gbc.writeMem(0x90ac, { 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa351, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x90ac));
        // 85 02F3
        gbc.setState(0x5522, 0x8ac1, 0x2a0, 0x7c53, 0x7e74, 0x7cf9, 0x0, 0x0);
        gbc.writeMem(0x5522, { 0x85 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0x5523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02F4
        gbc.setState(0x78bb, 0x41b8, 0x42c0, 0x8381, 0x7909, 0xb487, 0x0, 0x0);
        gbc.writeMem(0x78bb, { 0x85 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02F5
        gbc.setState(0x7074, 0xfcf7, 0xdd0, 0xd257, 0x77f7, 0xe539, 0x0, 0x1);
        gbc.writeMem(0x7074, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02F6
        gbc.setState(0x3c9d, 0xa1f1, 0x1280, 0x8077, 0xf743, 0xada3, 0x0, 0x0);
        gbc.writeMem(0x3c9d, { 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0x3c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 02F7
        gbc.setState(0xadeb, 0x32e7, 0xb4d0, 0x3a12, 0xf3b4, 0x5b3f, 0x1, 0x0);
        gbc.writeMem(0xadeb, { 0x85 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x32e7, gbc.sp());
        EXPECT(0xadec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xadeb));
        // 85 02F8
        gbc.setState(0xd020, 0x2599, 0xa960, 0x89bd, 0xb3cf, 0x553e, 0x1, 0x0);
        gbc.writeMem(0xd020, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0xd021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd020));
        // 85 02F9
        gbc.setState(0x4986, 0x2055, 0xb5a0, 0xdf66, 0xb7e, 0xd5f8, 0x0, 0x0);
        gbc.writeMem(0x4986, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2055, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02FA
        gbc.setState(0x6521, 0xd6f0, 0xe200, 0x2bd9, 0xa820, 0x2f97, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0x6522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02FB
        gbc.setState(0x4c90, 0x4919, 0xef30, 0xce88, 0x43d7, 0xbee0, 0x1, 0x1);
        gbc.writeMem(0x4c90, { 0x85 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4919, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02FC
        gbc.setState(0x23b8, 0x1c9f, 0xd7e0, 0xe68f, 0x37e9, 0x1dd9, 0x1, 0x0);
        gbc.writeMem(0x23b8, { 0x85 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 02FE
        gbc.setState(0xe249, 0x63ce, 0x1f70, 0x1392, 0xdcbd, 0x97bd, 0x0, 0x0);
        gbc.writeMem(0xe249, { 0x85 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63ce, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe249));
        // 85 02FF
        gbc.setState(0x92f1, 0x55e5, 0x7aa0, 0x58cd, 0x6977, 0x7799, 0x0, 0x1);
        gbc.writeMem(0x92f1, { 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x92f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x92f1));
        // 85 0301
        gbc.setState(0x7123, 0xa90c, 0x8c30, 0x6116, 0x5392, 0xdd4, 0x0, 0x1);
        gbc.writeMem(0x7123, { 0x85 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0x7124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0302
        gbc.setState(0x782e, 0x29a9, 0xbdd0, 0xa11a, 0x6d1b, 0x1a06, 0x0, 0x1);
        gbc.writeMem(0x782e, { 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0x782f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0303
        gbc.setState(0x7619, 0xc582, 0x73b0, 0x9036, 0x85aa, 0x95e0, 0x0, 0x1);
        gbc.writeMem(0x7619, { 0x85 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc582, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0304
        gbc.setState(0xedf2, 0x6456, 0xc4c0, 0xaf6a, 0xd2c9, 0x7ef1, 0x1, 0x1);
        gbc.writeMem(0xedf2, { 0x85 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6456, gbc.sp());
        EXPECT(0xedf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xedf2));
        // 85 0305
        gbc.setState(0x92c1, 0x9b95, 0x2a20, 0x1962, 0x6501, 0xd9bc, 0x0, 0x1);
        gbc.writeMem(0x92c1, { 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9b95, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x92c1));
        // 85 0306
        gbc.setState(0xc98, 0xe9fe, 0x26d0, 0xd08b, 0x2822, 0xe09a, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0307
        gbc.setState(0x528b, 0x65e9, 0xb630, 0xa9de, 0x4263, 0x88a0, 0x0, 0x0);
        gbc.writeMem(0x528b, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0308
        gbc.setState(0xca28, 0xda85, 0xd760, 0xf01, 0x2210, 0x33d4, 0x0, 0x1);
        gbc.writeMem(0xca28, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda85, gbc.sp());
        EXPECT(0xca29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xca28));
        // 85 0309
        gbc.setState(0x7d03, 0xcaea, 0x20e0, 0x8b9c, 0xe573, 0xf35f, 0x1, 0x1);
        gbc.writeMem(0x7d03, { 0x85 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcaea, gbc.sp());
        EXPECT(0x7d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 030B
        gbc.setState(0x9884, 0x62b8, 0xc390, 0x8a39, 0x23bc, 0xe0b5, 0x0, 0x1);
        gbc.writeMem(0x9884, { 0x85 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x62b8, gbc.sp());
        EXPECT(0x9885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9884));
        // 85 030C
        gbc.setState(0x299a, 0x4829, 0xcfe0, 0x6597, 0xfe0a, 0xfd77, 0x0, 0x1);
        gbc.writeMem(0x299a, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4829, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 030D
        gbc.setState(0x501, 0xf184, 0x6900, 0xa060, 0x75cc, 0xc8dd, 0x1, 0x0);
        gbc.writeMem(0x501, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf184, gbc.sp());
        EXPECT(0x502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 030E
        gbc.setState(0x2f4f, 0xc810, 0x96c0, 0xf6fe, 0x167, 0x53fc, 0x1, 0x0);
        gbc.writeMem(0x2f4f, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc810, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 030F
        gbc.setState(0xb266, 0x733a, 0x75b0, 0x267, 0xdbcc, 0xde3a, 0x0, 0x0);
        gbc.writeMem(0xb266, { 0x85 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x733a, gbc.sp());
        EXPECT(0xb267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb266));
        // 85 0310
        gbc.setState(0x4fe7, 0x3f0a, 0xa750, 0x2987, 0x7592, 0x54d4, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0x85 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3f0a, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0311
        gbc.setState(0x112, 0xf76b, 0xe4e0, 0x7a23, 0x24c9, 0xdcec, 0x1, 0x1);
        gbc.writeMem(0x112, { 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf76b, gbc.sp());
        EXPECT(0x113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0312
        gbc.setState(0xe863, 0xc3e7, 0xf500, 0xebb, 0x64c7, 0x4c9c, 0x0, 0x1);
        gbc.writeMem(0xe863, { 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc3e7, gbc.sp());
        EXPECT(0xe864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe863));
        // 85 0313
        gbc.setState(0x443c, 0x4be2, 0xaee0, 0x24f2, 0x36e1, 0xfd61, 0x0, 0x1);
        gbc.writeMem(0x443c, { 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4be2, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0314
        gbc.setState(0xd25, 0xb28e, 0x200, 0x6d0, 0x630b, 0x4bab, 0x0, 0x1);
        gbc.writeMem(0xd25, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0315
        gbc.setState(0x1ad, 0xf71f, 0xc460, 0x78d5, 0x573b, 0x52a7, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf71f, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0316
        gbc.setState(0xae43, 0x803c, 0xf600, 0x4384, 0x7a45, 0x28ef, 0x1, 0x0);
        gbc.writeMem(0xae43, { 0x85 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xae43));
        // 85 0317
        gbc.setState(0x7afc, 0x39ef, 0x1ad0, 0xc290, 0x93e8, 0x44bf, 0x1, 0x0);
        gbc.writeMem(0x7afc, { 0x85 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x39ef, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0318
        gbc.setState(0x7698, 0x5eed, 0x1970, 0x3e5d, 0x78fb, 0xe51, 0x0, 0x1);
        gbc.writeMem(0x7698, { 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5eed, gbc.sp());
        EXPECT(0x7699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0319
        gbc.setState(0x1f8, 0x8851, 0xf4d0, 0x2fd6, 0xd1f5, 0x87a8, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x85 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8851, gbc.sp());
        EXPECT(0x1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 031A
        gbc.setState(0x7f54, 0x2d57, 0x9eb0, 0xb1df, 0x9a2c, 0x389, 0x1, 0x1);
        gbc.writeMem(0x7f54, { 0x85 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 031B
        gbc.setState(0xb4d6, 0xd29c, 0xf400, 0xfefd, 0xbf4c, 0x493a, 0x1, 0x1);
        gbc.writeMem(0xb4d6, { 0x85 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd29c, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb4d6));
        // 85 031C
        gbc.setState(0x69dc, 0xcf8f, 0x79d0, 0xba6a, 0xe1bb, 0x1fbb, 0x0, 0x1);
        gbc.writeMem(0x69dc, { 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcf8f, gbc.sp());
        EXPECT(0x69dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 031D
        gbc.setState(0x905b, 0x6348, 0xcb60, 0x7c55, 0x429d, 0x8583, 0x0, 0x1);
        gbc.writeMem(0x905b, { 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6348, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x905b));
        // 85 031E
        gbc.setState(0x5f55, 0x9a79, 0x5400, 0xbd72, 0x6ac4, 0x6651, 0x1, 0x0);
        gbc.writeMem(0x5f55, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 031F
        gbc.setState(0x5cd6, 0xc7b2, 0xd3b0, 0x3f3e, 0x70d, 0xb942, 0x1, 0x0);
        gbc.writeMem(0x5cd6, { 0x85 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc7b2, gbc.sp());
        EXPECT(0x5cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0320
        gbc.setState(0x67fe, 0x2920, 0x9ee0, 0x107b, 0x44e6, 0xcf7d, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0x85 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0321
        gbc.setState(0x2436, 0xcfa7, 0x9320, 0xeee9, 0x23d7, 0xec0b, 0x0, 0x0);
        gbc.writeMem(0x2436, { 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcfa7, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0322
        gbc.setState(0x4884, 0xf5fc, 0x6620, 0xfc98, 0x3a3, 0x8d5f, 0x1, 0x1);
        gbc.writeMem(0x4884, { 0x85 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf5fc, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0323
        gbc.setState(0x9bdb, 0x579b, 0x9620, 0x4e36, 0xfaf2, 0x7366, 0x0, 0x1);
        gbc.writeMem(0x9bdb, { 0x85 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9bdb));
        // 85 0324
        gbc.setState(0x825b, 0x9f5a, 0x8030, 0xc9c5, 0x1f79, 0x8f82, 0x1, 0x0);
        gbc.writeMem(0x825b, { 0x85 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x825b));
        // 85 0325
        gbc.setState(0xbd47, 0xd0e2, 0xfa40, 0x1e4e, 0x5bba, 0xe73f, 0x0, 0x1);
        gbc.writeMem(0xbd47, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0xbd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbd47));
        // 85 0327
        gbc.setState(0xe442, 0x7b66, 0x9380, 0xc2aa, 0x91e4, 0x88d8, 0x1, 0x1);
        gbc.writeMem(0xe442, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b66, gbc.sp());
        EXPECT(0xe443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe442));
        // 85 0328
        gbc.setState(0x4f2e, 0x4e43, 0xe0e0, 0x1448, 0x3fe5, 0xab3c, 0x1, 0x0);
        gbc.writeMem(0x4f2e, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0329
        gbc.setState(0xa9a9, 0x2e5d, 0x91b0, 0x108a, 0x65e, 0x5556, 0x0, 0x0);
        gbc.writeMem(0xa9a9, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0xa9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa9a9));
        // 85 032A
        gbc.setState(0xf01, 0x1051, 0xab70, 0xccae, 0xefb2, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0xf01, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1051, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 032B
        gbc.setState(0x553f, 0xdc7c, 0x5690, 0x1ab7, 0x4ead, 0x1551, 0x1, 0x0);
        gbc.writeMem(0x553f, { 0x85 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdc7c, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 032C
        gbc.setState(0x715b, 0x9e41, 0x9a0, 0x53, 0xc9b0, 0x4719, 0x1, 0x1);
        gbc.writeMem(0x715b, { 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9e41, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 032D
        gbc.setState(0xd3c9, 0x32c1, 0x5ab0, 0xf14b, 0x8dcd, 0xa4b1, 0x1, 0x1);
        gbc.writeMem(0xd3c9, { 0x85 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd3c9));
        // 85 032E
        gbc.setState(0x39cf, 0x19a4, 0xec80, 0xb0a3, 0x8b20, 0x85a4, 0x0, 0x1);
        gbc.writeMem(0x39cf, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x19a4, gbc.sp());
        EXPECT(0x39d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0330
        gbc.setState(0xd231, 0xc6, 0x7120, 0x1c5, 0x6046, 0xb457, 0x0, 0x1);
        gbc.writeMem(0xd231, { 0x85 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc6, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd231));
        // 85 0331
        gbc.setState(0x1199, 0x655d, 0xf600, 0x29cc, 0x4fc5, 0x62d7, 0x0, 0x0);
        gbc.writeMem(0x1199, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0x119a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0332
        gbc.setState(0x78b4, 0xb8a7, 0x8900, 0xad04, 0xb076, 0xd664, 0x0, 0x0);
        gbc.writeMem(0x78b4, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0333
        gbc.setState(0xb855, 0x6a3d, 0xd120, 0xff04, 0x726c, 0x3212, 0x0, 0x0);
        gbc.writeMem(0xb855, { 0x85 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb855));
        // 85 0334
        gbc.setState(0x192e, 0xded1, 0x9930, 0xcb88, 0x8961, 0x3fa0, 0x1, 0x0);
        gbc.writeMem(0x192e, { 0x85 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xded1, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0335
        gbc.setState(0x822a, 0xf883, 0xdf60, 0x73b7, 0x9b3, 0x99bb, 0x1, 0x0);
        gbc.writeMem(0x822a, { 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf883, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x822a));
        // 85 0336
        gbc.setState(0xa908, 0xb119, 0x5170, 0x825d, 0x5dbe, 0x18af, 0x0, 0x0);
        gbc.writeMem(0xa908, { 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa908));
        // 85 0337
        gbc.setState(0x6efd, 0x912e, 0x2d00, 0x72e, 0x2d6b, 0x89a3, 0x0, 0x1);
        gbc.writeMem(0x6efd, { 0x85 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x912e, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0338
        gbc.setState(0xbaa, 0x9456, 0xdb70, 0x19cb, 0x7615, 0x2dfb, 0x1, 0x1);
        gbc.writeMem(0xbaa, { 0x85 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9456, gbc.sp());
        EXPECT(0xbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0339
        gbc.setState(0x61b, 0x3af, 0xbcd0, 0x5784, 0x3eda, 0x56fd, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3af, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 033A
        gbc.setState(0xb347, 0xa38f, 0xebe0, 0x6d, 0x8e29, 0xbbef, 0x0, 0x0);
        gbc.writeMem(0xb347, { 0x85 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa38f, gbc.sp());
        EXPECT(0xb348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb347));
        // 85 033C
        gbc.setState(0x677d, 0x2d59, 0x9300, 0xde06, 0x661c, 0xdede, 0x0, 0x0);
        gbc.writeMem(0x677d, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0x677e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 033D
        gbc.setState(0x164b, 0xcd17, 0x5df0, 0x66ef, 0x267b, 0x9527, 0x0, 0x0);
        gbc.writeMem(0x164b, { 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0x164c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 033E
        gbc.setState(0x86c0, 0x83e, 0xe260, 0xa6f9, 0x931a, 0x8263, 0x1, 0x1);
        gbc.writeMem(0x86c0, { 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x83e, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x86c0));
        // 85 033F
        gbc.setState(0x2a87, 0xb285, 0x3a0, 0x5df6, 0x983e, 0x524b, 0x0, 0x0);
        gbc.writeMem(0x2a87, { 0x85 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0x2a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0340
        gbc.setState(0x907b, 0xdf17, 0xedb0, 0x6793, 0x93c4, 0x3643, 0x1, 0x1);
        gbc.writeMem(0x907b, { 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x907c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x907b));
        // 85 0341
        gbc.setState(0xeb26, 0x6d2f, 0xdab0, 0x1814, 0x6088, 0x41e2, 0x1, 0x1);
        gbc.writeMem(0xeb26, { 0x85 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d2f, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeb26));
        // 85 0343
        gbc.setState(0xee78, 0x6bcf, 0x4340, 0xa90c, 0x26ea, 0xceb5, 0x0, 0x0);
        gbc.writeMem(0xee78, { 0x85 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0xee79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xee78));
        // 85 0345
        gbc.setState(0xb76f, 0x879b, 0x58f0, 0xaef5, 0x8e94, 0x5110, 0x0, 0x1);
        gbc.writeMem(0xb76f, { 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x879b, gbc.sp());
        EXPECT(0xb770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb76f));
        // 85 0346
        gbc.setState(0xc319, 0x76cb, 0x5b70, 0xddcc, 0x868b, 0x424a, 0x0, 0x1);
        gbc.writeMem(0xc319, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x76cb, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc319));
        // 85 0347
        gbc.setState(0xe899, 0x1ad1, 0x1a0, 0xabbe, 0xdc21, 0xad8f, 0x0, 0x1);
        gbc.writeMem(0xe899, { 0x85 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1ad1, gbc.sp());
        EXPECT(0xe89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe899));
        // 85 0349
        gbc.setState(0xde22, 0x9d83, 0xf840, 0xeaec, 0x59ba, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0xde22, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9d83, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xde22));
        // 85 034A
        gbc.setState(0x9392, 0x9e48, 0x8470, 0x1ad7, 0xb5ea, 0x5a76, 0x1, 0x1);
        gbc.writeMem(0x9392, { 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9e48, gbc.sp());
        EXPECT(0x9393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9392));
        // 85 034B
        gbc.setState(0x96d4, 0x9636, 0x9670, 0xdb97, 0x6902, 0xd21b, 0x1, 0x0);
        gbc.writeMem(0x96d4, { 0x85 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x96d4));
        // 85 034C
        gbc.setState(0xb494, 0x3a35, 0xca00, 0x85b8, 0x86e, 0xd778, 0x1, 0x1);
        gbc.writeMem(0xb494, { 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0xb495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb494));
        // 85 034D
        gbc.setState(0x9b0b, 0x2a5b, 0x9100, 0xb1ce, 0x7bbb, 0x587, 0x1, 0x0);
        gbc.writeMem(0x9b0b, { 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2a5b, gbc.sp());
        EXPECT(0x9b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9b0b));
        // 85 034E
        gbc.setState(0x483a, 0xd410, 0x43a0, 0x58eb, 0x1063, 0x5483, 0x0, 0x0);
        gbc.writeMem(0x483a, { 0x85 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd410, gbc.sp());
        EXPECT(0x483b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 034F
        gbc.setState(0x6a8, 0x6c92, 0xc910, 0x2cdb, 0x5a9e, 0x10b0, 0x1, 0x0);
        gbc.writeMem(0x6a8, { 0x85 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6c92, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0350
        gbc.setState(0x1c61, 0x7b7c, 0x5bf0, 0x6f95, 0xe81e, 0xca0d, 0x1, 0x1);
        gbc.writeMem(0x1c61, { 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0x1c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0352
        gbc.setState(0xc82e, 0x7dc9, 0x5bb0, 0xb795, 0xfac6, 0x5af6, 0x1, 0x0);
        gbc.writeMem(0xc82e, { 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc82e));
        // 85 0353
        gbc.setState(0x119d, 0xfb53, 0x5650, 0x39a1, 0x33ee, 0x9d17, 0x1, 0x0);
        gbc.writeMem(0x119d, { 0x85 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0355
        gbc.setState(0x3c0e, 0xf19e, 0xc5d0, 0xbfc, 0xb5d3, 0xbd09, 0x1, 0x0);
        gbc.writeMem(0x3c0e, { 0x85 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf19e, gbc.sp());
        EXPECT(0x3c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0356
        gbc.setState(0xc876, 0xc4b4, 0xcb40, 0xffb5, 0xfe10, 0x1bf2, 0x1, 0x0);
        gbc.writeMem(0xc876, { 0x85 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc4b4, gbc.sp());
        EXPECT(0xc877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc876));
        // 85 0357
        gbc.setState(0x907d, 0xc205, 0x8110, 0x698c, 0x9713, 0xc4e9, 0x0, 0x1);
        gbc.writeMem(0x907d, { 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc205, gbc.sp());
        EXPECT(0x907e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x907d));
        // 85 0358
        gbc.setState(0x9c23, 0xe73e, 0x71a0, 0xb2ae, 0x713a, 0xa7e6, 0x1, 0x0);
        gbc.writeMem(0x9c23, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe73e, gbc.sp());
        EXPECT(0x9c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9c23));
        // 85 0359
        gbc.setState(0x149f, 0x7c7d, 0xe150, 0xffb9, 0xf072, 0x304a, 0x0, 0x1);
        gbc.writeMem(0x149f, { 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x14a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 035A
        gbc.setState(0xee5b, 0x98fe, 0x7870, 0x537a, 0xd7e1, 0x11a2, 0x0, 0x0);
        gbc.writeMem(0xee5b, { 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x98fe, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xee5b));
        // 85 035B
        gbc.setState(0xb8b0, 0x7a63, 0x76a0, 0x9c39, 0x410c, 0x5e0, 0x1, 0x1);
        gbc.writeMem(0xb8b0, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7a63, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb8b0));
        // 85 035C
        gbc.setState(0x4d6b, 0xa2ce, 0x9840, 0x282, 0xfac7, 0x526f, 0x0, 0x0);
        gbc.writeMem(0x4d6b, { 0x85 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2ce, gbc.sp());
        EXPECT(0x4d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 035D
        gbc.setState(0xd384, 0x21df, 0x4e00, 0xae41, 0xfd46, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0xd384, { 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x21df, gbc.sp());
        EXPECT(0xd385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd384));
        // 85 035E
        gbc.setState(0xf1, 0x3ff3, 0x30f0, 0xf8ac, 0x26e, 0x936a, 0x0, 0x0);
        gbc.writeMem(0xf1, { 0x85 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 035F
        gbc.setState(0x43c9, 0x4654, 0xfae0, 0xaf50, 0xdecf, 0x2217, 0x1, 0x1);
        gbc.writeMem(0x43c9, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0x43ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0360
        gbc.setState(0xdab1, 0x99f7, 0xc1f0, 0x4af1, 0x6b3a, 0x6759, 0x0, 0x0);
        gbc.writeMem(0xdab1, { 0x85 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x99f7, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdab1));
        // 85 0361
        gbc.setState(0x6b5d, 0x541d, 0x7f60, 0xd636, 0x53ce, 0xdd2e, 0x0, 0x0);
        gbc.writeMem(0x6b5d, { 0x85 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x541d, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0363
        gbc.setState(0x5358, 0x39e2, 0x56d0, 0x665c, 0xd650, 0xed4e, 0x0, 0x0);
        gbc.writeMem(0x5358, { 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x39e2, gbc.sp());
        EXPECT(0x5359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0364
        gbc.setState(0xa048, 0xfb89, 0x7ad0, 0x713a, 0x7035, 0x4694, 0x1, 0x0);
        gbc.writeMem(0xa048, { 0x85 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0xa049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa048));
        // 85 0365
        gbc.setState(0xc74e, 0x686c, 0xdbc0, 0x75ef, 0x1d5e, 0xed19, 0x1, 0x1);
        gbc.writeMem(0xc74e, { 0x85 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x686c, gbc.sp());
        EXPECT(0xc74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc74e));
        // 85 0366
        gbc.setState(0x44e9, 0x1e48, 0x56a0, 0x51ce, 0x6731, 0xf3fe, 0x0, 0x0);
        gbc.writeMem(0x44e9, { 0x85 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x44ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0368
        gbc.setState(0xbddc, 0xf1cd, 0x640, 0x303, 0xaa0e, 0x9c87, 0x1, 0x1);
        gbc.writeMem(0xbddc, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf1cd, gbc.sp());
        EXPECT(0xbddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbddc));
        // 85 0369
        gbc.setState(0x1249, 0x6c2c, 0xa780, 0x4dd, 0x9e7f, 0x783b, 0x1, 0x0);
        gbc.writeMem(0x1249, { 0x85 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c2c, gbc.sp());
        EXPECT(0x124a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 036A
        gbc.setState(0xde, 0x9542, 0x4390, 0x36eb, 0x54dd, 0x3660, 0x1, 0x0);
        gbc.writeMem(0xde, { 0x85 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0xdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 036B
        gbc.setState(0x8e6, 0x9296, 0xa320, 0xf9b1, 0xb187, 0xc428, 0x1, 0x1);
        gbc.writeMem(0x8e6, { 0x85 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9296, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 036C
        gbc.setState(0x4179, 0x6a0e, 0xae20, 0x8d13, 0x23a4, 0x6174, 0x0, 0x1);
        gbc.writeMem(0x4179, { 0x85 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a0e, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 036D
        gbc.setState(0xbbdc, 0x1960, 0x2ab0, 0x3e58, 0x7dc1, 0xa1c6, 0x1, 0x1);
        gbc.writeMem(0xbbdc, { 0x85 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1960, gbc.sp());
        EXPECT(0xbbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbbdc));
        // 85 036E
        gbc.setState(0x7d26, 0x171b, 0x2ba0, 0xc114, 0x5531, 0x34a, 0x1, 0x0);
        gbc.writeMem(0x7d26, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0x7d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 036F
        gbc.setState(0x8137, 0x20ef, 0x3650, 0xb754, 0x5cc7, 0x28d4, 0x0, 0x1);
        gbc.writeMem(0x8137, { 0x85 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8137));
        // 85 0370
        gbc.setState(0x1de2, 0x994, 0x7c90, 0xc7c7, 0x1096, 0xcaab, 0x0, 0x0);
        gbc.writeMem(0x1de2, { 0x85 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x994, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0371
        gbc.setState(0xda79, 0x4cbe, 0x4a00, 0x7408, 0x723f, 0x9017, 0x1, 0x1);
        gbc.writeMem(0xda79, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4cbe, gbc.sp());
        EXPECT(0xda7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xda79));
        // 85 0372
        gbc.setState(0xc59d, 0xa89a, 0x8160, 0x9b6c, 0xd112, 0x7081, 0x0, 0x0);
        gbc.writeMem(0xc59d, { 0x85 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa89a, gbc.sp());
        EXPECT(0xc59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc59d));
        // 85 0373
        gbc.setState(0x6dca, 0xf7d3, 0x38b0, 0x9a36, 0xd5af, 0x4e4a, 0x0, 0x1);
        gbc.writeMem(0x6dca, { 0x85 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf7d3, gbc.sp());
        EXPECT(0x6dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0374
        gbc.setState(0x702c, 0xc5ce, 0xaec0, 0x459, 0x19e1, 0xb196, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0x85 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc5ce, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0375
        gbc.setState(0x4d16, 0x5cda, 0x2aa0, 0xe91a, 0xef5d, 0xc647, 0x1, 0x0);
        gbc.writeMem(0x4d16, { 0x85 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0376
        gbc.setState(0x4f71, 0xf183, 0x1140, 0xa3f9, 0x409e, 0xf6d6, 0x1, 0x1);
        gbc.writeMem(0x4f71, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0x4f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0377
        gbc.setState(0x7910, 0xabe2, 0xcb20, 0x9730, 0xd15c, 0x1a07, 0x1, 0x1);
        gbc.writeMem(0x7910, { 0x85 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x7911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0378
        gbc.setState(0xde9, 0xb743, 0x8630, 0x8238, 0x83ec, 0xdc6, 0x0, 0x0);
        gbc.writeMem(0xde9, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb743, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0379
        gbc.setState(0xd308, 0x5b08, 0x6a00, 0x5bf3, 0x27d2, 0x788c, 0x0, 0x1);
        gbc.writeMem(0xd308, { 0x85 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5b08, gbc.sp());
        EXPECT(0xd309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd308));
        // 85 037A
        gbc.setState(0x6582, 0xaf9, 0x8b80, 0x4f2b, 0x200e, 0x4761, 0x0, 0x1);
        gbc.writeMem(0x6582, { 0x85 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaf9, gbc.sp());
        EXPECT(0x6583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 037B
        gbc.setState(0x50a1, 0x7158, 0xff80, 0xd37e, 0xcedc, 0xf248, 0x0, 0x1);
        gbc.writeMem(0x50a1, { 0x85 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0x50a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 037C
        gbc.setState(0x2d74, 0xc39f, 0xef20, 0x9be1, 0xcf82, 0x6380, 0x1, 0x1);
        gbc.writeMem(0x2d74, { 0x85 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 037D
        gbc.setState(0x5f67, 0x9917, 0xe180, 0x1c36, 0x928e, 0x1a27, 0x1, 0x0);
        gbc.writeMem(0x5f67, { 0x85 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9917, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 037E
        gbc.setState(0x2164, 0x3492, 0x75a0, 0x3800, 0x578d, 0xe118, 0x1, 0x1);
        gbc.writeMem(0x2164, { 0x85 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 037F
        gbc.setState(0x56e3, 0x18ed, 0xbfc0, 0xe873, 0xbe5b, 0xc3cf, 0x1, 0x1);
        gbc.writeMem(0x56e3, { 0x85 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0380
        gbc.setState(0x482e, 0x268d, 0x28b0, 0x29d3, 0x5674, 0xa678, 0x0, 0x1);
        gbc.writeMem(0x482e, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0x482f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0381
        gbc.setState(0x347, 0xdbf0, 0xa750, 0x36d5, 0x57d1, 0x1cf7, 0x0, 0x0);
        gbc.writeMem(0x347, { 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0382
        gbc.setState(0x284c, 0x2d98, 0x9b50, 0xc624, 0x9be, 0x25f9, 0x1, 0x0);
        gbc.writeMem(0x284c, { 0x85 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2d98, gbc.sp());
        EXPECT(0x284d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0383
        gbc.setState(0x515b, 0xf7e8, 0xb400, 0xf62b, 0xa114, 0xf2a2, 0x1, 0x0);
        gbc.writeMem(0x515b, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0384
        gbc.setState(0x9d56, 0xb5d, 0x46f0, 0x5eaf, 0x2fc3, 0xbe45, 0x0, 0x1);
        gbc.writeMem(0x9d56, { 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x9d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d56));
        // 85 0385
        gbc.setState(0x931, 0xabfd, 0xc010, 0x51db, 0xda6e, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0x931, { 0x85 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xabfd, gbc.sp());
        EXPECT(0x932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0386
        gbc.setState(0xe5e8, 0xbe44, 0x12b0, 0x7455, 0x5a1b, 0x2a4f, 0x0, 0x1);
        gbc.writeMem(0xe5e8, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe5e8));
        // 85 0388
        gbc.setState(0x4764, 0x91c1, 0xc2c0, 0xc5b1, 0xe84e, 0x8b6d, 0x1, 0x0);
        gbc.writeMem(0x4764, { 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x91c1, gbc.sp());
        EXPECT(0x4765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0389
        gbc.setState(0xdbd, 0xcaa5, 0xfb10, 0xf231, 0x5172, 0x7c51, 0x1, 0x1);
        gbc.writeMem(0xdbd, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0xdbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 038A
        gbc.setState(0x60dd, 0x9c89, 0xd660, 0x280b, 0x5f5b, 0xf5f6, 0x1, 0x0);
        gbc.writeMem(0x60dd, { 0x85 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 038B
        gbc.setState(0x658b, 0x5e35, 0x3400, 0xa483, 0x6fb2, 0x7c2c, 0x1, 0x0);
        gbc.writeMem(0x658b, { 0x85 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5e35, gbc.sp());
        EXPECT(0x658c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 038C
        gbc.setState(0x54d, 0xb919, 0xcb80, 0x7153, 0xc3c4, 0xca6d, 0x0, 0x0);
        gbc.writeMem(0x54d, { 0x85 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb919, gbc.sp());
        EXPECT(0x54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 038D
        gbc.setState(0x1d42, 0xe7f5, 0x9760, 0xf680, 0x8d0d, 0x800a, 0x1, 0x0);
        gbc.writeMem(0x1d42, { 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 038E
        gbc.setState(0xe217, 0xbfe0, 0x3300, 0x42e0, 0xbfd4, 0xeb48, 0x0, 0x0);
        gbc.writeMem(0xe217, { 0x85 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0xe218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe217));
        // 85 038F
        gbc.setState(0x81bb, 0xc009, 0xc3a0, 0xc8ea, 0xe363, 0x9db2, 0x0, 0x0);
        gbc.writeMem(0x81bb, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc009, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x81bb));
        // 85 0390
        gbc.setState(0x4ffd, 0x5ecc, 0x9930, 0xcf14, 0xd686, 0xf19c, 0x1, 0x1);
        gbc.writeMem(0x4ffd, { 0x85 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5ecc, gbc.sp());
        EXPECT(0x4ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0391
        gbc.setState(0xaa33, 0x6b75, 0xa3f0, 0xfcf2, 0xfb01, 0xe739, 0x0, 0x1);
        gbc.writeMem(0xaa33, { 0x85 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6b75, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa33));
        // 85 0392
        gbc.setState(0x214d, 0xc62f, 0x8700, 0x85da, 0xc059, 0xcf03, 0x0, 0x0);
        gbc.writeMem(0x214d, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc62f, gbc.sp());
        EXPECT(0x214e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0393
        gbc.setState(0x3aac, 0xf185, 0xebc0, 0x1dc4, 0x5888, 0x4c6c, 0x1, 0x1);
        gbc.writeMem(0x3aac, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 0394
        gbc.setState(0x7629, 0xa975, 0x13f0, 0x8e71, 0xef80, 0xc3d3, 0x1, 0x1);
        gbc.writeMem(0x7629, { 0x85 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0x762a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0395
        gbc.setState(0x3b30, 0xa1a, 0xe0a0, 0xd244, 0x8617, 0x6a07, 0x1, 0x1);
        gbc.writeMem(0x3b30, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa1a, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 0396
        gbc.setState(0xcae5, 0x4ed0, 0x6550, 0x6474, 0x5233, 0xb12a, 0x1, 0x0);
        gbc.writeMem(0xcae5, { 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcae5));
        // 85 0397
        gbc.setState(0x9972, 0xaf36, 0x3a90, 0xe69a, 0x93b7, 0x6087, 0x0, 0x1);
        gbc.writeMem(0x9972, { 0x85 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaf36, gbc.sp());
        EXPECT(0x9973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9972));
        // 85 0398
        gbc.setState(0xaa21, 0xd015, 0x2780, 0xb9eb, 0xd8d7, 0x7ad9, 0x0, 0x1);
        gbc.writeMem(0xaa21, { 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0xaa22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa21));
        // 85 0399
        gbc.setState(0xaa81, 0xbde7, 0xd360, 0xf072, 0x4b5f, 0xa905, 0x0, 0x0);
        gbc.writeMem(0xaa81, { 0x85 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa81));
        // 85 039A
        gbc.setState(0x1a0c, 0x1aa9, 0x5890, 0xcad3, 0x7953, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0x1a0c, { 0x85 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1aa9, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 039B
        gbc.setState(0x3729, 0x6253, 0x1870, 0x8035, 0x751f, 0x6670, 0x1, 0x0);
        gbc.writeMem(0x3729, { 0x85 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6253, gbc.sp());
        EXPECT(0x372a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 039C
        gbc.setState(0xd2fe, 0xe943, 0xd9d0, 0x9542, 0x4e5c, 0xaed1, 0x0, 0x1);
        gbc.writeMem(0xd2fe, { 0x85 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0xd2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd2fe));
        // 85 039D
        gbc.setState(0x6a5f, 0x98ea, 0x5530, 0xfbed, 0xe40a, 0x5ae5, 0x1, 0x0);
        gbc.writeMem(0x6a5f, { 0x85 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 039F
        gbc.setState(0x9f7b, 0x6cdb, 0x9cd0, 0x4775, 0x151f, 0xcfd4, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0x85 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0x9f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9f7b));
        // 85 03A0
        gbc.setState(0x3fae, 0x5c11, 0x98e0, 0x2fab, 0x6c42, 0x40f7, 0x0, 0x1);
        gbc.writeMem(0x3fae, { 0x85 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5c11, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03A1
        gbc.setState(0x808, 0x2f0f, 0x5650, 0x1938, 0x22a7, 0xa42d, 0x0, 0x1);
        gbc.writeMem(0x808, { 0x85 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2f0f, gbc.sp());
        EXPECT(0x809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03A2
        gbc.setState(0x483d, 0x1162, 0xf230, 0x188, 0xaec5, 0xade9, 0x1, 0x1);
        gbc.writeMem(0x483d, { 0x85 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1162, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03A3
        gbc.setState(0x3e01, 0x7945, 0x9100, 0x9cd5, 0xbb4a, 0xa3f4, 0x0, 0x1);
        gbc.writeMem(0x3e01, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7945, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03A4
        gbc.setState(0x1429, 0x89a2, 0xe100, 0xc274, 0xa525, 0x6cec, 0x1, 0x0);
        gbc.writeMem(0x1429, { 0x85 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0x142a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03A5
        gbc.setState(0x4758, 0x42b7, 0x5570, 0x42cd, 0xc8f4, 0x3d9a, 0x1, 0x1);
        gbc.writeMem(0x4758, { 0x85 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0x4759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03A6
        gbc.setState(0x1992, 0x2cab, 0x4000, 0x6d20, 0x5a4b, 0x526c, 0x0, 0x0);
        gbc.writeMem(0x1992, { 0x85 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03A7
        gbc.setState(0x9ee5, 0xbde6, 0x8d60, 0xebc, 0x8d35, 0x2f37, 0x0, 0x1);
        gbc.writeMem(0x9ee5, { 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbde6, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9ee5));
        // 85 03A8
        gbc.setState(0xd92a, 0xc0a3, 0x4360, 0x49bb, 0xd9f5, 0xe941, 0x0, 0x1);
        gbc.writeMem(0xd92a, { 0x85 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc0a3, gbc.sp());
        EXPECT(0xd92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd92a));
        // 85 03A9
        gbc.setState(0xc63, 0xe371, 0x4a60, 0x9093, 0x87c6, 0x2e47, 0x1, 0x0);
        gbc.writeMem(0xc63, { 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0xc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03AA
        gbc.setState(0x60bb, 0x1c27, 0x64b0, 0xad88, 0x5a06, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x60bb, { 0x85 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1c27, gbc.sp());
        EXPECT(0x60bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03AB
        gbc.setState(0x3ccb, 0x5493, 0x4180, 0xa7ac, 0x34fc, 0xb405, 0x0, 0x1);
        gbc.writeMem(0x3ccb, { 0x85 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5493, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03AC
        gbc.setState(0xe9bd, 0x4aca, 0x48e0, 0xf39d, 0xc0c, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0xe9bd, { 0x85 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe9bd));
        // 85 03AD
        gbc.setState(0x2b2, 0x3c3e, 0x2fc0, 0x69f5, 0x1484, 0xe39, 0x1, 0x0);
        gbc.writeMem(0x2b2, { 0x85 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c3e, gbc.sp());
        EXPECT(0x2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03AE
        gbc.setState(0xec88, 0xd37b, 0x5220, 0xf59f, 0x7adb, 0xe4bc, 0x0, 0x1);
        gbc.writeMem(0xec88, { 0x85 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd37b, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xec88));
        // 85 03B0
        gbc.setState(0x6c93, 0xe7c5, 0xfda0, 0x9b7e, 0x8338, 0x55f5, 0x0, 0x0);
        gbc.writeMem(0x6c93, { 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe7c5, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03B1
        gbc.setState(0xdb8d, 0x881c, 0x9820, 0x721e, 0x40cc, 0x2284, 0x0, 0x0);
        gbc.writeMem(0xdb8d, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x881c, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdb8d));
        // 85 03B2
        gbc.setState(0x847d, 0x28eb, 0xcdc0, 0x39eb, 0xf88b, 0xf49e, 0x1, 0x1);
        gbc.writeMem(0x847d, { 0x85 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x847d));
        // 85 03B3
        gbc.setState(0x413b, 0x189e, 0x8280, 0xd888, 0x20ca, 0x8e70, 0x0, 0x1);
        gbc.writeMem(0x413b, { 0x85 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x189e, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03B4
        gbc.setState(0xa6bc, 0xa559, 0xdf60, 0xb5aa, 0xe077, 0x97c9, 0x0, 0x1);
        gbc.writeMem(0xa6bc, { 0x85 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa559, gbc.sp());
        EXPECT(0xa6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa6bc));
        // 85 03B5
        gbc.setState(0x97d, 0x42ba, 0xfac0, 0xedc8, 0x391b, 0xfed, 0x0, 0x0);
        gbc.writeMem(0x97d, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x42ba, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03B6
        gbc.setState(0xa0f1, 0x696b, 0x80a0, 0x3c95, 0x2ded, 0x8139, 0x1, 0x0);
        gbc.writeMem(0xa0f1, { 0x85 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x696b, gbc.sp());
        EXPECT(0xa0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa0f1));
        // 85 03B7
        gbc.setState(0xc3af, 0x9361, 0x3200, 0x3342, 0x9024, 0xc373, 0x0, 0x1);
        gbc.writeMem(0xc3af, { 0x85 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9361, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc3af));
        // 85 03B8
        gbc.setState(0x6985, 0x1533, 0xc6e0, 0x1473, 0x1a27, 0x38c1, 0x1, 0x0);
        gbc.writeMem(0x6985, { 0x85 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1533, gbc.sp());
        EXPECT(0x6986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03B9
        gbc.setState(0x2836, 0xc2d8, 0x9f80, 0xbce1, 0x71d0, 0x960c, 0x0, 0x0);
        gbc.writeMem(0x2836, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc2d8, gbc.sp());
        EXPECT(0x2837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03BA
        gbc.setState(0x462, 0x812c, 0x9720, 0xa6e5, 0x831a, 0x492c, 0x0, 0x1);
        gbc.writeMem(0x462, { 0x85 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x812c, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03BB
        gbc.setState(0x6b3, 0x161b, 0x44f0, 0x7b3f, 0x239f, 0x19df, 0x1, 0x0);
        gbc.writeMem(0x6b3, { 0x85 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x161b, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03BC
        gbc.setState(0xc241, 0x6797, 0xb240, 0x74ce, 0x23d1, 0x66d9, 0x0, 0x1);
        gbc.writeMem(0xc241, { 0x85 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6797, gbc.sp());
        EXPECT(0xc242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc241));
        // 85 03BD
        gbc.setState(0xe167, 0xf121, 0xca60, 0xd4b2, 0x7b8e, 0x2bdc, 0x0, 0x1);
        gbc.writeMem(0xe167, { 0x85 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe167));
        // 85 03BE
        gbc.setState(0x8d4a, 0xdcfa, 0xb2c0, 0x44d9, 0x1e66, 0x71ef, 0x1, 0x1);
        gbc.writeMem(0x8d4a, { 0x85 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0x8d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8d4a));
        // 85 03C0
        gbc.setState(0x5b5, 0x15a3, 0x2530, 0x414b, 0x48a7, 0xdc1d, 0x1, 0x0);
        gbc.writeMem(0x5b5, { 0x85 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03C1
        gbc.setState(0x1770, 0xa21f, 0x2d30, 0xeff9, 0x2a0b, 0xd4c0, 0x0, 0x1);
        gbc.writeMem(0x1770, { 0x85 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0x1771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03C3
        gbc.setState(0xeac7, 0x7b42, 0xa270, 0xe99b, 0xd406, 0x68de, 0x0, 0x1);
        gbc.writeMem(0xeac7, { 0x85 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7b42, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xeac7));
        // 85 03C4
        gbc.setState(0x4014, 0x5b56, 0x4380, 0xafcf, 0xf223, 0x1a1e, 0x1, 0x0);
        gbc.writeMem(0x4014, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5b56, gbc.sp());
        EXPECT(0x4015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03C5
        gbc.setState(0xbfec, 0x16c0, 0x5d30, 0x322, 0x7a8b, 0x8a0f, 0x1, 0x0);
        gbc.writeMem(0xbfec, { 0x85 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbfec));
        // 85 03C7
        gbc.setState(0x3ba1, 0xdbe1, 0xd9b0, 0xf410, 0xefd6, 0x3e9c, 0x1, 0x0);
        gbc.writeMem(0x3ba1, { 0x85 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0x3ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03C8
        gbc.setState(0xc531, 0x4dda, 0xbcf0, 0x1ad7, 0xc4dc, 0xd1d5, 0x0, 0x0);
        gbc.writeMem(0xc531, { 0x85 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4dda, gbc.sp());
        EXPECT(0xc532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc531));
        // 85 03C9
        gbc.setState(0x7d80, 0xa86f, 0xc1c0, 0xbbc7, 0x96e8, 0xaf8b, 0x0, 0x1);
        gbc.writeMem(0x7d80, { 0x85 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa86f, gbc.sp());
        EXPECT(0x7d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03CA
        gbc.setState(0xca7, 0x12df, 0x2680, 0xe9a1, 0x9e1a, 0xe6df, 0x1, 0x1);
        gbc.writeMem(0xca7, { 0x85 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x12df, gbc.sp());
        EXPECT(0xca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03CB
        gbc.setState(0x6cf3, 0xdf3b, 0xb30, 0xa92f, 0xc3ca, 0x1011, 0x0, 0x0);
        gbc.writeMem(0x6cf3, { 0x85 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03CC
        gbc.setState(0xe04b, 0x8d5, 0x9a90, 0x108f, 0xa2ff, 0xd926, 0x1, 0x0);
        gbc.writeMem(0xe04b, { 0x85 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8d5, gbc.sp());
        EXPECT(0xe04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe04b));
        // 85 03CD
        gbc.setState(0x319, 0x1fe9, 0x9ad0, 0xc6ec, 0x309c, 0xc244, 0x1, 0x0);
        gbc.writeMem(0x319, { 0x85 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1fe9, gbc.sp());
        EXPECT(0x31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03CE
        gbc.setState(0x9621, 0x4bcd, 0x54b0, 0x7953, 0xf9d5, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0x9621, { 0x85 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4bcd, gbc.sp());
        EXPECT(0x9622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9621));
        // 85 03CF
        gbc.setState(0xcbb2, 0x3163, 0x90e0, 0x42da, 0x4df8, 0xee81, 0x1, 0x0);
        gbc.writeMem(0xcbb2, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3163, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xcbb2));
        // 85 03D0
        gbc.setState(0x2bf6, 0xbd63, 0x4ff0, 0x2bc8, 0x6333, 0xd12, 0x1, 0x0);
        gbc.writeMem(0x2bf6, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03D1
        gbc.setState(0x6ab3, 0x6459, 0x3030, 0x5624, 0xe35c, 0x7f87, 0x0, 0x0);
        gbc.writeMem(0x6ab3, { 0x85 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03D2
        gbc.setState(0xdad5, 0xd8c9, 0xe920, 0xc9c7, 0xe3ed, 0xfdf7, 0x1, 0x1);
        gbc.writeMem(0xdad5, { 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0xdad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdad5));
        // 85 03D3
        gbc.setState(0x5332, 0x707e, 0x3b20, 0xe99, 0xc31b, 0x81dc, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0x85 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x707e, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03D4
        gbc.setState(0xaaef, 0xd4ae, 0xa010, 0x9bdd, 0x8730, 0x7604, 0x0, 0x1);
        gbc.writeMem(0xaaef, { 0x85 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaaef));
        // 85 03D5
        gbc.setState(0x158d, 0x562b, 0xabc0, 0x5e28, 0x5b16, 0x9ab, 0x0, 0x1);
        gbc.writeMem(0x158d, { 0x85 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x562b, gbc.sp());
        EXPECT(0x158e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03D7
        gbc.setState(0xd1f2, 0xb567, 0x5fe0, 0xa863, 0x795e, 0x86f8, 0x1, 0x1);
        gbc.writeMem(0xd1f2, { 0x85 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0xd1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd1f2));
        // 85 03D8
        gbc.setState(0xca89, 0xa448, 0xa220, 0x9217, 0xa905, 0xb33a, 0x1, 0x1);
        gbc.writeMem(0xca89, { 0x85 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa448, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xca89));
        // 85 03D9
        gbc.setState(0x9746, 0xb917, 0xe260, 0x8124, 0x39cb, 0x5827, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0x85 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0x9747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9746));
        // 85 03DA
        gbc.setState(0xa751, 0xa236, 0x54d0, 0x8728, 0x6fe9, 0x14df, 0x0, 0x1);
        gbc.writeMem(0xa751, { 0x85 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa236, gbc.sp());
        EXPECT(0xa752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa751));
        // 85 03DB
        gbc.setState(0x74b3, 0x47ce, 0xb290, 0x180, 0xd78b, 0x2561, 0x0, 0x1);
        gbc.writeMem(0x74b3, { 0x85 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x47ce, gbc.sp());
        EXPECT(0x74b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03DC
        gbc.setState(0xa9bd, 0xcce4, 0xc360, 0xd47, 0x7ab1, 0x3d6d, 0x1, 0x1);
        gbc.writeMem(0xa9bd, { 0x85 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcce4, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa9bd));
        // 85 03DD
        gbc.setState(0x3e16, 0x61c0, 0x9c10, 0xc717, 0x1f69, 0x5c28, 0x0, 0x1);
        gbc.writeMem(0x3e16, { 0x85 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03DE
        gbc.setState(0x6651, 0xda22, 0xfab0, 0xd0c0, 0xb720, 0x7f06, 0x0, 0x0);
        gbc.writeMem(0x6651, { 0x85 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03DF
        gbc.setState(0x6989, 0xffb3, 0x2240, 0xa26e, 0x2933, 0x1868, 0x1, 0x0);
        gbc.writeMem(0x6989, { 0x85 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0x698a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03E0
        gbc.setState(0xe13f, 0x567a, 0x7630, 0xad5d, 0x88e5, 0x5fc0, 0x0, 0x0);
        gbc.writeMem(0xe13f, { 0x85 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x567a, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe13f));
        // 85 03E1
        gbc.setState(0x69c7, 0xc331, 0x250, 0x9db9, 0x827, 0x8390, 0x1, 0x0);
        gbc.writeMem(0x69c7, { 0x85 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc331, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03E2
        gbc.setState(0x7db4, 0x9b1d, 0xb70, 0xa13e, 0xa949, 0x2b3a, 0x0, 0x0);
        gbc.writeMem(0x7db4, { 0x85 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9b1d, gbc.sp());
        EXPECT(0x7db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 85 03E3
        gbc.setState(0x1b2f, 0xf770, 0xed20, 0x9a9a, 0x267f, 0xded4, 0x0, 0x1);
        gbc.writeMem(0x1b2f, { 0x85 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf770, gbc.sp());
        EXPECT(0x1b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 85 03E4
        gbc.setState(0x8843, 0xc181, 0xd5c0, 0x91f4, 0xccb, 0x408c, 0x1, 0x1);
        gbc.writeMem(0x8843, { 0x85 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x8844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8843));
        // 85 03E5
        gbc.setState(0xd1b1, 0x9368, 0xc570, 0xb27, 0xa4d4, 0x8b4c, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0x85 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd1b1));
        // 85 03E6
        gbc.setState(0x917d, 0x5b1b, 0xa980, 0x90f1, 0x35e0, 0xf16f, 0x0, 0x0);
        gbc.writeMem(0x917d, { 0x85 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x917d));
        // 85 03E7
        gbc.setState(0x1deb, 0x56a3, 0x6090, 0x5a57, 0x9b57, 0x3914, 0x0, 0x0);
        gbc.writeMem(0x1deb, { 0x85 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x56a3, gbc.sp());
        EXPECT(0x1dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
