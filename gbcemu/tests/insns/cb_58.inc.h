    TEST(gbcemu, opcode_cb_58) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 58 0000
        gbc.setState(0x8c04, 0xc19d, 0x2d30, 0xea8f, 0x6b21, 0xa50a, 0x1, 0x0);
        gbc.writeMem(0x8c04, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc19d);
        EXPECT(gbc.pc(), 0x8c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c04), 0xcb);
        EXPECT(gbc.readMem(0x8c05), 0x58);
        // CB 58 0001
        gbc.setState(0x6533, 0xea74, 0x8940, 0x8212, 0xb489, 0x9b2b, 0x1, 0x0);
        gbc.writeMem(0x6533, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xea74);
        EXPECT(gbc.pc(), 0x6535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0002
        gbc.setState(0xbf04, 0x27c1, 0x4100, 0x233b, 0xca5e, 0xeb2, 0x0, 0x0);
        gbc.writeMem(0xbf04, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x27c1);
        EXPECT(gbc.pc(), 0xbf06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf04), 0xcb);
        EXPECT(gbc.readMem(0xbf05), 0x58);
        // CB 58 0003
        gbc.setState(0x2a2b, 0xf256, 0x9e20, 0xe58c, 0x7064, 0xc3ef, 0x1, 0x0);
        gbc.writeMem(0x2a2b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf256);
        EXPECT(gbc.pc(), 0x2a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0004
        gbc.setState(0x9f8f, 0x2d3, 0x1f10, 0xd4d1, 0x46ec, 0x9eda, 0x1, 0x0);
        gbc.writeMem(0x9f8f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2d3);
        EXPECT(gbc.pc(), 0x9f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8f), 0xcb);
        EXPECT(gbc.readMem(0x9f90), 0x58);
        // CB 58 0005
        gbc.setState(0xca17, 0x9229, 0x5b70, 0xdbc, 0x70e7, 0xe5ca, 0x1, 0x1);
        gbc.writeMem(0xca17, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9229);
        EXPECT(gbc.pc(), 0xca19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca17), 0xcb);
        EXPECT(gbc.readMem(0xca18), 0x58);
        // CB 58 0006
        gbc.setState(0x287d, 0x8d76, 0xf700, 0x81dc, 0x82c3, 0x44a6, 0x1, 0x0);
        gbc.writeMem(0x287d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8d76);
        EXPECT(gbc.pc(), 0x287f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0007
        gbc.setState(0x6e73, 0x76bd, 0xf5b0, 0x9894, 0x550e, 0xa42d, 0x0, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x76bd);
        EXPECT(gbc.pc(), 0x6e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0008
        gbc.setState(0x5079, 0x2565, 0x9b0, 0xc48f, 0xfe98, 0x6e37, 0x1, 0x0);
        gbc.writeMem(0x5079, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2565);
        EXPECT(gbc.pc(), 0x507b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0009
        gbc.setState(0x5b38, 0x71e, 0xbf80, 0x3ed6, 0xd994, 0xdaf6, 0x1, 0x0);
        gbc.writeMem(0x5b38, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x71e);
        EXPECT(gbc.pc(), 0x5b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 000A
        gbc.setState(0xa023, 0xa2ed, 0x6850, 0x6409, 0x9646, 0xe655, 0x1, 0x0);
        gbc.writeMem(0xa023, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa2ed);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0x58);
        // CB 58 000B
        gbc.setState(0x6d2, 0x1627, 0x48e0, 0xe883, 0x1b16, 0x4d84, 0x1, 0x1);
        gbc.writeMem(0x6d2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1627);
        EXPECT(gbc.pc(), 0x6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 000C
        gbc.setState(0x87c9, 0xd118, 0x8b80, 0xe600, 0x161e, 0x99ff, 0x1, 0x1);
        gbc.writeMem(0x87c9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd118);
        EXPECT(gbc.pc(), 0x87cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c9), 0xcb);
        EXPECT(gbc.readMem(0x87ca), 0x58);
        // CB 58 000D
        gbc.setState(0x268, 0xdc4a, 0x3d0, 0xfcd8, 0xad2a, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0x268, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdc4a);
        EXPECT(gbc.pc(), 0x26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 000E
        gbc.setState(0x6485, 0xde7a, 0x560, 0x1f10, 0xe35f, 0x32a5, 0x1, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xde7a);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 000F
        gbc.setState(0x552e, 0x767d, 0xd9b0, 0xc5a9, 0x741a, 0x3925, 0x1, 0x0);
        gbc.writeMem(0x552e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x767d);
        EXPECT(gbc.pc(), 0x5530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0010
        gbc.setState(0x5370, 0x20e1, 0xeda0, 0xcbc9, 0xebaf, 0x9098, 0x0, 0x0);
        gbc.writeMem(0x5370, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0x5372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0011
        gbc.setState(0x83ab, 0xa109, 0x3e20, 0x8cff, 0x9413, 0x1307, 0x1, 0x0);
        gbc.writeMem(0x83ab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa109);
        EXPECT(gbc.pc(), 0x83ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ab), 0xcb);
        EXPECT(gbc.readMem(0x83ac), 0x58);
        // CB 58 0012
        gbc.setState(0x735f, 0xb8c4, 0xf520, 0xcbb2, 0x4b4, 0xa57d, 0x1, 0x1);
        gbc.writeMem(0x735f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb8c4);
        EXPECT(gbc.pc(), 0x7361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0013
        gbc.setState(0xb9, 0xc29e, 0x58b0, 0x724b, 0xeaaa, 0x4c5f, 0x1, 0x0);
        gbc.writeMem(0xb9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0xbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0014
        gbc.setState(0x207c, 0xcc69, 0xd700, 0xa247, 0x7a2b, 0x98f4, 0x0, 0x1);
        gbc.writeMem(0x207c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcc69);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0015
        gbc.setState(0x10da, 0xfd65, 0xce20, 0x59c9, 0xaea1, 0xc847, 0x0, 0x0);
        gbc.writeMem(0x10da, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfd65);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0016
        gbc.setState(0x5cec, 0x722f, 0xa200, 0xbe55, 0xa81, 0x7733, 0x1, 0x0);
        gbc.writeMem(0x5cec, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x722f);
        EXPECT(gbc.pc(), 0x5cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0017
        gbc.setState(0x222, 0x91bd, 0x8540, 0x4df7, 0x3733, 0x2793, 0x1, 0x1);
        gbc.writeMem(0x222, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x91bd);
        EXPECT(gbc.pc(), 0x224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0018
        gbc.setState(0x59ad, 0xd61c, 0x8b90, 0x89d7, 0xace5, 0x79f5, 0x0, 0x0);
        gbc.writeMem(0x59ad, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd61c);
        EXPECT(gbc.pc(), 0x59af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0019
        gbc.setState(0x93ce, 0xc0f0, 0x6f20, 0x467b, 0x362c, 0x92c3, 0x1, 0x0);
        gbc.writeMem(0x93ce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc0f0);
        EXPECT(gbc.pc(), 0x93d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ce), 0xcb);
        EXPECT(gbc.readMem(0x93cf), 0x58);
        // CB 58 001A
        gbc.setState(0x7cc2, 0x34ed, 0xbb00, 0x8df5, 0x69df, 0x5530, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x34ed);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 001B
        gbc.setState(0x6a5e, 0xaf94, 0xa010, 0x19b3, 0x8037, 0x60e9, 0x1, 0x0);
        gbc.writeMem(0x6a5e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xaf94);
        EXPECT(gbc.pc(), 0x6a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 001C
        gbc.setState(0x1e88, 0x2edc, 0x1080, 0xa009, 0x4b80, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x1e88, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2edc);
        EXPECT(gbc.pc(), 0x1e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 001D
        gbc.setState(0x8e05, 0x28d7, 0xe7a0, 0xae0, 0xa1fe, 0x84bf, 0x0, 0x1);
        gbc.writeMem(0x8e05, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x28d7);
        EXPECT(gbc.pc(), 0x8e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e05), 0xcb);
        EXPECT(gbc.readMem(0x8e06), 0x58);
        // CB 58 001E
        gbc.setState(0xa0c1, 0xfe6f, 0x6310, 0x7bd5, 0xdba5, 0x19f4, 0x0, 0x1);
        gbc.writeMem(0xa0c1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfe6f);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c1), 0xcb);
        EXPECT(gbc.readMem(0xa0c2), 0x58);
        // CB 58 001F
        gbc.setState(0x860f, 0xc6be, 0x8b20, 0x4f23, 0x3f2, 0x36ac, 0x0, 0x0);
        gbc.writeMem(0x860f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc6be);
        EXPECT(gbc.pc(), 0x8611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860f), 0xcb);
        EXPECT(gbc.readMem(0x8610), 0x58);
        // CB 58 0020
        gbc.setState(0xd9b6, 0xfec1, 0x3f20, 0x8f01, 0xf460, 0x8e2f, 0x0, 0x1);
        gbc.writeMem(0xd9b6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfec1);
        EXPECT(gbc.pc(), 0xd9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b6), 0xcb);
        EXPECT(gbc.readMem(0xd9b7), 0x58);
        // CB 58 0021
        gbc.setState(0xbda8, 0x6b0e, 0x3a60, 0xc13e, 0x345d, 0x8d2d, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6b0e);
        EXPECT(gbc.pc(), 0xbdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda8), 0xcb);
        EXPECT(gbc.readMem(0xbda9), 0x58);
        // CB 58 0022
        gbc.setState(0x187c, 0xb019, 0xf6e0, 0x455a, 0x8617, 0x4392, 0x1, 0x0);
        gbc.writeMem(0x187c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb019);
        EXPECT(gbc.pc(), 0x187e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0023
        gbc.setState(0x2dc, 0xf6dc, 0x90b0, 0xb9bf, 0x9c5d, 0x214d, 0x0, 0x0);
        gbc.writeMem(0x2dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf6dc);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0024
        gbc.setState(0x3ce0, 0x1501, 0xbb40, 0xc584, 0xab2c, 0x311b, 0x0, 0x0);
        gbc.writeMem(0x3ce0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1501);
        EXPECT(gbc.pc(), 0x3ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0025
        gbc.setState(0x1de9, 0xddad, 0xa70, 0xb7c, 0x17ed, 0xb0d, 0x0, 0x1);
        gbc.writeMem(0x1de9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xddad);
        EXPECT(gbc.pc(), 0x1deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0026
        gbc.setState(0xeef7, 0x36c5, 0xdb90, 0xc8d, 0x2d3e, 0x2a9b, 0x1, 0x0);
        gbc.writeMem(0xeef7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x36c5);
        EXPECT(gbc.pc(), 0xeef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef7), 0xcb);
        EXPECT(gbc.readMem(0xeef8), 0x58);
        // CB 58 0027
        gbc.setState(0x823e, 0x92b0, 0x76c0, 0x29db, 0xae18, 0x6fc4, 0x1, 0x1);
        gbc.writeMem(0x823e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x92b0);
        EXPECT(gbc.pc(), 0x8240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823e), 0xcb);
        EXPECT(gbc.readMem(0x823f), 0x58);
        // CB 58 0028
        gbc.setState(0xb41, 0x9786, 0x8d80, 0xd7ab, 0xea2b, 0x327a, 0x1, 0x0);
        gbc.writeMem(0xb41, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9786);
        EXPECT(gbc.pc(), 0xb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0029
        gbc.setState(0x5a62, 0x3690, 0xd920, 0x9baa, 0x2647, 0x3bd8, 0x1, 0x1);
        gbc.writeMem(0x5a62, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3690);
        EXPECT(gbc.pc(), 0x5a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 002A
        gbc.setState(0x3116, 0xd462, 0x44f0, 0x1e7b, 0x7601, 0xd480, 0x0, 0x0);
        gbc.writeMem(0x3116, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd462);
        EXPECT(gbc.pc(), 0x3118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 002B
        gbc.setState(0x6d38, 0xa45b, 0x3be0, 0xc2ef, 0x8527, 0xef5d, 0x0, 0x1);
        gbc.writeMem(0x6d38, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa45b);
        EXPECT(gbc.pc(), 0x6d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 002C
        gbc.setState(0xbd58, 0xaa9c, 0xf3f0, 0x89d4, 0x76a0, 0xb55d, 0x0, 0x1);
        gbc.writeMem(0xbd58, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xaa9c);
        EXPECT(gbc.pc(), 0xbd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd58), 0xcb);
        EXPECT(gbc.readMem(0xbd59), 0x58);
        // CB 58 002D
        gbc.setState(0xd7b1, 0x29b0, 0x9a0, 0xe301, 0x6915, 0x2003, 0x1, 0x0);
        gbc.writeMem(0xd7b1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0xd7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b1), 0xcb);
        EXPECT(gbc.readMem(0xd7b2), 0x58);
        // CB 58 002E
        gbc.setState(0x2b75, 0x2f9, 0x2fe0, 0xc93a, 0xc692, 0xc800, 0x0, 0x0);
        gbc.writeMem(0x2b75, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2f9);
        EXPECT(gbc.pc(), 0x2b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 002F
        gbc.setState(0x3f41, 0x3f60, 0x5a50, 0x5fbc, 0xcd45, 0xd5e4, 0x1, 0x1);
        gbc.writeMem(0x3f41, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3f60);
        EXPECT(gbc.pc(), 0x3f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0030
        gbc.setState(0x4aee, 0xd1ad, 0xc570, 0x49ad, 0xf512, 0x70e9, 0x0, 0x0);
        gbc.writeMem(0x4aee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd1ad);
        EXPECT(gbc.pc(), 0x4af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0031
        gbc.setState(0xd026, 0xace5, 0x5dc0, 0x4c8b, 0x6a83, 0xb07, 0x1, 0x0);
        gbc.writeMem(0xd026, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xace5);
        EXPECT(gbc.pc(), 0xd028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd026), 0xcb);
        EXPECT(gbc.readMem(0xd027), 0x58);
        // CB 58 0032
        gbc.setState(0x1076, 0x7a92, 0x4480, 0xb5fd, 0x93b4, 0x6726, 0x1, 0x1);
        gbc.writeMem(0x1076, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7a92);
        EXPECT(gbc.pc(), 0x1078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0035
        gbc.setState(0xd261, 0x5e9a, 0xffc0, 0x745c, 0x1dd8, 0xdfe2, 0x0, 0x1);
        gbc.writeMem(0xd261, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5e9a);
        EXPECT(gbc.pc(), 0xd263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd261), 0xcb);
        EXPECT(gbc.readMem(0xd262), 0x58);
        // CB 58 0036
        gbc.setState(0x46a4, 0xd7b7, 0xfa60, 0x5587, 0x57f4, 0x8f18, 0x0, 0x1);
        gbc.writeMem(0x46a4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd7b7);
        EXPECT(gbc.pc(), 0x46a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0038
        gbc.setState(0xeb0c, 0xf2cf, 0xf4e0, 0xdb50, 0xe13b, 0x5961, 0x0, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf2cf);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0x58);
        // CB 58 0039
        gbc.setState(0x46e3, 0xb1bb, 0xf8f0, 0x2df9, 0x563e, 0x9274, 0x1, 0x1);
        gbc.writeMem(0x46e3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb1bb);
        EXPECT(gbc.pc(), 0x46e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 003A
        gbc.setState(0xc657, 0xebeb, 0x7ed0, 0x272f, 0xbce3, 0xcd26, 0x0, 0x0);
        gbc.writeMem(0xc657, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc657), 0xcb);
        EXPECT(gbc.readMem(0xc658), 0x58);
        // CB 58 003B
        gbc.setState(0x1be7, 0x2dac, 0x7810, 0x4720, 0x63dc, 0xc0cf, 0x1, 0x1);
        gbc.writeMem(0x1be7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2dac);
        EXPECT(gbc.pc(), 0x1be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 003C
        gbc.setState(0x8384, 0x7e18, 0xb180, 0x5d51, 0x7d02, 0x6a45, 0x1, 0x1);
        gbc.writeMem(0x8384, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7e18);
        EXPECT(gbc.pc(), 0x8386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8384), 0xcb);
        EXPECT(gbc.readMem(0x8385), 0x58);
        // CB 58 003D
        gbc.setState(0xb0fe, 0xbf67, 0x7960, 0xf6db, 0xc01a, 0x85e8, 0x0, 0x0);
        gbc.writeMem(0xb0fe, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbf67);
        EXPECT(gbc.pc(), 0xb100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fe), 0xcb);
        EXPECT(gbc.readMem(0xb0ff), 0x58);
        // CB 58 003E
        gbc.setState(0x5f04, 0xcb31, 0x6630, 0xa502, 0x7fe5, 0x7d13, 0x0, 0x1);
        gbc.writeMem(0x5f04, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 003F
        gbc.setState(0x195e, 0xbfc7, 0x5190, 0x18ac, 0x61e4, 0xc495, 0x0, 0x0);
        gbc.writeMem(0x195e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbfc7);
        EXPECT(gbc.pc(), 0x1960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0040
        gbc.setState(0xb5b7, 0x3ca3, 0x4570, 0xac07, 0x2523, 0xc2d7, 0x0, 0x0);
        gbc.writeMem(0xb5b7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3ca3);
        EXPECT(gbc.pc(), 0xb5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b7), 0xcb);
        EXPECT(gbc.readMem(0xb5b8), 0x58);
        // CB 58 0041
        gbc.setState(0xb6a0, 0xc637, 0x4e20, 0x48b7, 0x165c, 0xf633, 0x1, 0x1);
        gbc.writeMem(0xb6a0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc637);
        EXPECT(gbc.pc(), 0xb6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a0), 0xcb);
        EXPECT(gbc.readMem(0xb6a1), 0x58);
        // CB 58 0042
        gbc.setState(0x5f02, 0x9364, 0x81b0, 0xd851, 0x7ca5, 0xb5d4, 0x1, 0x0);
        gbc.writeMem(0x5f02, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0x5f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0043
        gbc.setState(0x4551, 0xd088, 0x4c40, 0x40b4, 0x42b7, 0xc938, 0x0, 0x1);
        gbc.writeMem(0x4551, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x4553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0045
        gbc.setState(0x7ee0, 0x81ec, 0x6a10, 0xb6e5, 0x1a85, 0xfc6e, 0x1, 0x0);
        gbc.writeMem(0x7ee0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x81ec);
        EXPECT(gbc.pc(), 0x7ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0046
        gbc.setState(0x4a85, 0xe98c, 0x1eb0, 0x5042, 0x4f01, 0x66b7, 0x0, 0x0);
        gbc.writeMem(0x4a85, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe98c);
        EXPECT(gbc.pc(), 0x4a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0047
        gbc.setState(0x430f, 0x8a69, 0xb570, 0x181e, 0x4b82, 0xcb5d, 0x0, 0x1);
        gbc.writeMem(0x430f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0x4311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0048
        gbc.setState(0x814c, 0xac1f, 0xbd60, 0xd6b3, 0x6ab5, 0x3225, 0x0, 0x0);
        gbc.writeMem(0x814c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xac1f);
        EXPECT(gbc.pc(), 0x814e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814c), 0xcb);
        EXPECT(gbc.readMem(0x814d), 0x58);
        // CB 58 0049
        gbc.setState(0xe0ce, 0x8987, 0x5f60, 0xe7d6, 0xac17, 0xf8bf, 0x0, 0x1);
        gbc.writeMem(0xe0ce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8987);
        EXPECT(gbc.pc(), 0xe0d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ce), 0xcb);
        EXPECT(gbc.readMem(0xe0cf), 0x58);
        // CB 58 004A
        gbc.setState(0x322, 0xb7b4, 0xacc0, 0x6ab4, 0x35f, 0x3eea, 0x1, 0x1);
        gbc.writeMem(0x322, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0x324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 004B
        gbc.setState(0x592c, 0xaa6e, 0xf30, 0x7634, 0xefcd, 0xb314, 0x0, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaa6e);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 004C
        gbc.setState(0xe0fd, 0xce88, 0xfdd0, 0x54d3, 0x5bfa, 0xc917, 0x1, 0x1);
        gbc.writeMem(0xe0fd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xce88);
        EXPECT(gbc.pc(), 0xe0ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0fd), 0xcb);
        EXPECT(gbc.readMem(0xe0fe), 0x58);
        // CB 58 004D
        gbc.setState(0x1d8e, 0x73f3, 0x2c20, 0x4281, 0x4a1c, 0xcfc6, 0x0, 0x1);
        gbc.writeMem(0x1d8e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x73f3);
        EXPECT(gbc.pc(), 0x1d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 004E
        gbc.setState(0xdf81, 0x1dfe, 0x5f30, 0x1040, 0x4c76, 0xef6b, 0x1, 0x1);
        gbc.writeMem(0xdf81, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1dfe);
        EXPECT(gbc.pc(), 0xdf83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf81), 0xcb);
        EXPECT(gbc.readMem(0xdf82), 0x58);
        // CB 58 004F
        gbc.setState(0xc541, 0xe159, 0x1a40, 0xd4ef, 0x59e1, 0x46be, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe159);
        EXPECT(gbc.pc(), 0xc543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc541), 0xcb);
        EXPECT(gbc.readMem(0xc542), 0x58);
        // CB 58 0050
        gbc.setState(0x298, 0x601a, 0x8430, 0xa046, 0x6055, 0x108c, 0x0, 0x0);
        gbc.writeMem(0x298, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x601a);
        EXPECT(gbc.pc(), 0x29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0051
        gbc.setState(0x9bc5, 0x2f15, 0xf400, 0x6b19, 0x2dc8, 0x34ed, 0x0, 0x0);
        gbc.writeMem(0x9bc5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2f15);
        EXPECT(gbc.pc(), 0x9bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc5), 0xcb);
        EXPECT(gbc.readMem(0x9bc6), 0x58);
        // CB 58 0052
        gbc.setState(0xd94b, 0xae25, 0x3c70, 0x6f77, 0x817a, 0xe7bb, 0x1, 0x1);
        gbc.writeMem(0xd94b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xae25);
        EXPECT(gbc.pc(), 0xd94d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94b), 0xcb);
        EXPECT(gbc.readMem(0xd94c), 0x58);
        // CB 58 0053
        gbc.setState(0x94eb, 0xc738, 0xfed0, 0x6759, 0xb055, 0x1eee, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc738);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0x58);
        // CB 58 0054
        gbc.setState(0xd6b3, 0x7405, 0xf3a0, 0x4e93, 0xc665, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0xd6b3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7405);
        EXPECT(gbc.pc(), 0xd6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b3), 0xcb);
        EXPECT(gbc.readMem(0xd6b4), 0x58);
        // CB 58 0055
        gbc.setState(0x8761, 0x6c9c, 0x6e90, 0x6eb4, 0x4ba6, 0x24dc, 0x1, 0x1);
        gbc.writeMem(0x8761, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6c9c);
        EXPECT(gbc.pc(), 0x8763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8761), 0xcb);
        EXPECT(gbc.readMem(0x8762), 0x58);
        // CB 58 0056
        gbc.setState(0x9aa3, 0xb737, 0xd6a0, 0x4c32, 0x2c8c, 0xf5ba, 0x1, 0x0);
        gbc.writeMem(0x9aa3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb737);
        EXPECT(gbc.pc(), 0x9aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa3), 0xcb);
        EXPECT(gbc.readMem(0x9aa4), 0x58);
        // CB 58 0057
        gbc.setState(0xd77a, 0xe7e0, 0x6bf0, 0x27de, 0x50ff, 0x43ee, 0x1, 0x0);
        gbc.writeMem(0xd77a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe7e0);
        EXPECT(gbc.pc(), 0xd77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77a), 0xcb);
        EXPECT(gbc.readMem(0xd77b), 0x58);
        // CB 58 0058
        gbc.setState(0x881e, 0xf4be, 0x35a0, 0xdbf0, 0xd418, 0xa92c, 0x0, 0x0);
        gbc.writeMem(0x881e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0x8820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881e), 0xcb);
        EXPECT(gbc.readMem(0x881f), 0x58);
        // CB 58 0059
        gbc.setState(0xc0cc, 0xb96e, 0x64c0, 0x62bf, 0xc17d, 0x8de4, 0x1, 0x0);
        gbc.writeMem(0xc0cc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb96e);
        EXPECT(gbc.pc(), 0xc0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cc), 0xcb);
        EXPECT(gbc.readMem(0xc0cd), 0x58);
        // CB 58 005A
        gbc.setState(0xb36f, 0x43cf, 0xe850, 0x875b, 0x1981, 0x9bde, 0x1, 0x0);
        gbc.writeMem(0xb36f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x43cf);
        EXPECT(gbc.pc(), 0xb371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36f), 0xcb);
        EXPECT(gbc.readMem(0xb370), 0x58);
        // CB 58 005B
        gbc.setState(0xe17e, 0x404e, 0xbc40, 0x4c67, 0xd24a, 0x717e, 0x1, 0x1);
        gbc.writeMem(0xe17e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x404e);
        EXPECT(gbc.pc(), 0xe180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe17e), 0xcb);
        EXPECT(gbc.readMem(0xe17f), 0x58);
        // CB 58 005C
        gbc.setState(0xb6aa, 0x5a6c, 0x9ca0, 0x3367, 0xdc28, 0x6337, 0x0, 0x1);
        gbc.writeMem(0xb6aa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5a6c);
        EXPECT(gbc.pc(), 0xb6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6aa), 0xcb);
        EXPECT(gbc.readMem(0xb6ab), 0x58);
        // CB 58 005D
        gbc.setState(0xa267, 0x27a9, 0x9170, 0x8036, 0x1c1b, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0xa267, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x27a9);
        EXPECT(gbc.pc(), 0xa269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa267), 0xcb);
        EXPECT(gbc.readMem(0xa268), 0x58);
        // CB 58 005E
        gbc.setState(0x566a, 0x9dd0, 0x3a00, 0x58ab, 0xda2d, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9dd0);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 005F
        gbc.setState(0x638e, 0xcc24, 0x12c0, 0x20b1, 0x1517, 0xe905, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcc24);
        EXPECT(gbc.pc(), 0x6390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0060
        gbc.setState(0x6f69, 0xbf0c, 0xcaa0, 0x30fc, 0x3647, 0xb60, 0x1, 0x1);
        gbc.writeMem(0x6f69, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x6f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0061
        gbc.setState(0x4986, 0xd008, 0x33a0, 0xd0ae, 0xc8bc, 0xfb82, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd008);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0062
        gbc.setState(0x95f5, 0x6772, 0x5730, 0xd61c, 0x8d01, 0x32f9, 0x0, 0x0);
        gbc.writeMem(0x95f5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6772);
        EXPECT(gbc.pc(), 0x95f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f5), 0xcb);
        EXPECT(gbc.readMem(0x95f6), 0x58);
        // CB 58 0063
        gbc.setState(0xd0a7, 0xf3eb, 0x3dd0, 0x1bec, 0x6d78, 0x4e87, 0x1, 0x1);
        gbc.writeMem(0xd0a7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf3eb);
        EXPECT(gbc.pc(), 0xd0a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a7), 0xcb);
        EXPECT(gbc.readMem(0xd0a8), 0x58);
        // CB 58 0064
        gbc.setState(0xcab8, 0x3332, 0xb30, 0xac7f, 0x9590, 0x29be, 0x1, 0x1);
        gbc.writeMem(0xcab8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3332);
        EXPECT(gbc.pc(), 0xcaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab8), 0xcb);
        EXPECT(gbc.readMem(0xcab9), 0x58);
        // CB 58 0065
        gbc.setState(0x536f, 0xa67c, 0x1960, 0x2920, 0x3c4b, 0x4ff9, 0x0, 0x1);
        gbc.writeMem(0x536f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa67c);
        EXPECT(gbc.pc(), 0x5371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0066
        gbc.setState(0x51c3, 0xf29f, 0xea00, 0x8f40, 0x580e, 0x7027, 0x1, 0x0);
        gbc.writeMem(0x51c3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf29f);
        EXPECT(gbc.pc(), 0x51c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0067
        gbc.setState(0x5556, 0x5d23, 0xae10, 0xd65e, 0x9b02, 0x960, 0x1, 0x0);
        gbc.writeMem(0x5556, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5d23);
        EXPECT(gbc.pc(), 0x5558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0068
        gbc.setState(0xad08, 0xafee, 0x2270, 0xc4ed, 0xd42e, 0x2f84, 0x1, 0x0);
        gbc.writeMem(0xad08, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xafee);
        EXPECT(gbc.pc(), 0xad0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad08), 0xcb);
        EXPECT(gbc.readMem(0xad09), 0x58);
        // CB 58 0069
        gbc.setState(0xb6a5, 0x84c5, 0xa650, 0x412c, 0xf4ea, 0xdd93, 0x0, 0x1);
        gbc.writeMem(0xb6a5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x84c5);
        EXPECT(gbc.pc(), 0xb6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a5), 0xcb);
        EXPECT(gbc.readMem(0xb6a6), 0x58);
        // CB 58 006A
        gbc.setState(0x1890, 0x75f6, 0x6ce0, 0x802, 0x2f29, 0xc10c, 0x0, 0x1);
        gbc.writeMem(0x1890, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x1892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 006B
        gbc.setState(0xdd2e, 0x20a8, 0x4ac0, 0x3207, 0xd912, 0x8395, 0x0, 0x1);
        gbc.writeMem(0xdd2e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0xdd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd2e), 0xcb);
        EXPECT(gbc.readMem(0xdd2f), 0x58);
        // CB 58 006C
        gbc.setState(0x8ab, 0x5928, 0x4560, 0x3df2, 0x2763, 0x391c, 0x0, 0x0);
        gbc.writeMem(0x8ab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5928);
        EXPECT(gbc.pc(), 0x8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 006D
        gbc.setState(0xed7e, 0x66bf, 0xce40, 0x60e3, 0x9952, 0x3922, 0x1, 0x0);
        gbc.writeMem(0xed7e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x66bf);
        EXPECT(gbc.pc(), 0xed80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7e), 0xcb);
        EXPECT(gbc.readMem(0xed7f), 0x58);
        // CB 58 006E
        gbc.setState(0x464d, 0x1659, 0x8da0, 0x29ff, 0x4ff4, 0x3a8, 0x0, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1659);
        EXPECT(gbc.pc(), 0x464f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0070
        gbc.setState(0x5358, 0xf30, 0x580, 0x8391, 0x183d, 0xcfaf, 0x1, 0x1);
        gbc.writeMem(0x5358, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf30);
        EXPECT(gbc.pc(), 0x535a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0071
        gbc.setState(0x71f5, 0x7878, 0x7f20, 0xacb9, 0xd0c5, 0x57ba, 0x0, 0x1);
        gbc.writeMem(0x71f5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7878);
        EXPECT(gbc.pc(), 0x71f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0072
        gbc.setState(0x2960, 0xd3d1, 0x3fb0, 0xfd, 0x7f65, 0x333, 0x0, 0x0);
        gbc.writeMem(0x2960, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd3d1);
        EXPECT(gbc.pc(), 0x2962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0073
        gbc.setState(0xa63, 0xd4a2, 0x7a80, 0x3b9a, 0x3e40, 0xf0ff, 0x1, 0x1);
        gbc.writeMem(0xa63, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0xa65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0074
        gbc.setState(0xb47d, 0x7918, 0x1290, 0xb154, 0x2902, 0x430f, 0x1, 0x0);
        gbc.writeMem(0xb47d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7918);
        EXPECT(gbc.pc(), 0xb47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47d), 0xcb);
        EXPECT(gbc.readMem(0xb47e), 0x58);
        // CB 58 0075
        gbc.setState(0xb871, 0x6b4d, 0x6610, 0xd8e7, 0xa6b9, 0x8f50, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6b4d);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb871), 0xcb);
        EXPECT(gbc.readMem(0xb872), 0x58);
        // CB 58 0076
        gbc.setState(0xe514, 0x9b0b, 0x4fb0, 0xdae2, 0x78cc, 0x53e, 0x0, 0x0);
        gbc.writeMem(0xe514, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9b0b);
        EXPECT(gbc.pc(), 0xe516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe514), 0xcb);
        EXPECT(gbc.readMem(0xe515), 0x58);
        // CB 58 0077
        gbc.setState(0x1214, 0xd342, 0x89f0, 0xed14, 0xb240, 0xc8ed, 0x1, 0x1);
        gbc.writeMem(0x1214, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd342);
        EXPECT(gbc.pc(), 0x1216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0078
        gbc.setState(0xc3e7, 0x3a02, 0xfe40, 0x4844, 0x94bf, 0x5075, 0x1, 0x0);
        gbc.writeMem(0xc3e7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3a02);
        EXPECT(gbc.pc(), 0xc3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e7), 0xcb);
        EXPECT(gbc.readMem(0xc3e8), 0x58);
        // CB 58 0079
        gbc.setState(0x5ada, 0x9aba, 0x1c10, 0x395a, 0x3f8d, 0xab6d, 0x1, 0x0);
        gbc.writeMem(0x5ada, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9aba);
        EXPECT(gbc.pc(), 0x5adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 007A
        gbc.setState(0x39f3, 0xafd5, 0x6ba0, 0x492e, 0xfa6f, 0x8034, 0x0, 0x1);
        gbc.writeMem(0x39f3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xafd5);
        EXPECT(gbc.pc(), 0x39f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 007B
        gbc.setState(0xa458, 0x30ac, 0x9960, 0xed0a, 0xfa82, 0x679d, 0x0, 0x0);
        gbc.writeMem(0xa458, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x30ac);
        EXPECT(gbc.pc(), 0xa45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa458), 0xcb);
        EXPECT(gbc.readMem(0xa459), 0x58);
        // CB 58 007C
        gbc.setState(0x2ed1, 0x4517, 0x8770, 0xd3a3, 0x5896, 0x5300, 0x0, 0x0);
        gbc.writeMem(0x2ed1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4517);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 007D
        gbc.setState(0x2b3c, 0xf472, 0x5220, 0x65c9, 0x4a76, 0x906b, 0x0, 0x0);
        gbc.writeMem(0x2b3c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x2b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 007E
        gbc.setState(0x46f6, 0xbba0, 0x4af0, 0x1de3, 0x486a, 0xa37a, 0x0, 0x0);
        gbc.writeMem(0x46f6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbba0);
        EXPECT(gbc.pc(), 0x46f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 007F
        gbc.setState(0x9a4b, 0x76c9, 0xf6a0, 0x661d, 0x3f7a, 0x6bac, 0x0, 0x1);
        gbc.writeMem(0x9a4b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x76c9);
        EXPECT(gbc.pc(), 0x9a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4b), 0xcb);
        EXPECT(gbc.readMem(0x9a4c), 0x58);
        // CB 58 0080
        gbc.setState(0x1b44, 0x6fae, 0xcf70, 0xa762, 0xae62, 0xf529, 0x0, 0x1);
        gbc.writeMem(0x1b44, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6fae);
        EXPECT(gbc.pc(), 0x1b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0081
        gbc.setState(0x3de7, 0xed93, 0xd730, 0xcd43, 0xd996, 0x5366, 0x1, 0x1);
        gbc.writeMem(0x3de7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xed93);
        EXPECT(gbc.pc(), 0x3de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0082
        gbc.setState(0xb502, 0x7ef9, 0x6f60, 0x30de, 0x5cbc, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0xb502, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7ef9);
        EXPECT(gbc.pc(), 0xb504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb502), 0xcb);
        EXPECT(gbc.readMem(0xb503), 0x58);
        // CB 58 0083
        gbc.setState(0xe8c6, 0x234b, 0xe950, 0xe54a, 0x74c, 0x321d, 0x1, 0x1);
        gbc.writeMem(0xe8c6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x234b);
        EXPECT(gbc.pc(), 0xe8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c6), 0xcb);
        EXPECT(gbc.readMem(0xe8c7), 0x58);
        // CB 58 0084
        gbc.setState(0xcc19, 0x9137, 0x78f0, 0x5980, 0x276a, 0x9ef1, 0x1, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9137);
        EXPECT(gbc.pc(), 0xcc1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc19), 0xcb);
        EXPECT(gbc.readMem(0xcc1a), 0x58);
        // CB 58 0085
        gbc.setState(0x9bf6, 0xcd49, 0x7a20, 0x53b6, 0xafb2, 0x7bb9, 0x0, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcd49);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x58);
        // CB 58 0086
        gbc.setState(0x75d9, 0x8f08, 0x8310, 0x855b, 0x13f5, 0xd62, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8f08);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0087
        gbc.setState(0x16e0, 0xeb99, 0xf8c0, 0x5edc, 0x780d, 0xbc7c, 0x0, 0x0);
        gbc.writeMem(0x16e0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xeb99);
        EXPECT(gbc.pc(), 0x16e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0088
        gbc.setState(0xbc05, 0x477f, 0xaaa0, 0x63dc, 0xb42d, 0x26dd, 0x0, 0x0);
        gbc.writeMem(0xbc05, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x477f);
        EXPECT(gbc.pc(), 0xbc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc05), 0xcb);
        EXPECT(gbc.readMem(0xbc06), 0x58);
        // CB 58 008A
        gbc.setState(0x550b, 0xc201, 0x5840, 0x3cd, 0x25c6, 0x964d, 0x0, 0x1);
        gbc.writeMem(0x550b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc201);
        EXPECT(gbc.pc(), 0x550d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 008B
        gbc.setState(0xbe95, 0xf6e9, 0xc400, 0x423e, 0x971c, 0xcbf, 0x1, 0x0);
        gbc.writeMem(0xbe95, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf6e9);
        EXPECT(gbc.pc(), 0xbe97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe95), 0xcb);
        EXPECT(gbc.readMem(0xbe96), 0x58);
        // CB 58 008C
        gbc.setState(0x575, 0x7fdd, 0x5f10, 0x84bb, 0x88e2, 0xbcb3, 0x0, 0x1);
        gbc.writeMem(0x575, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7fdd);
        EXPECT(gbc.pc(), 0x577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 008D
        gbc.setState(0x393e, 0x958d, 0x84b0, 0x412b, 0xeda7, 0x80d7, 0x0, 0x1);
        gbc.writeMem(0x393e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x958d);
        EXPECT(gbc.pc(), 0x3940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 008E
        gbc.setState(0x270c, 0xf619, 0xfd20, 0x2972, 0x7c1b, 0x8a11, 0x0, 0x0);
        gbc.writeMem(0x270c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf619);
        EXPECT(gbc.pc(), 0x270e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 008F
        gbc.setState(0x983f, 0x5a3d, 0x1fd0, 0xdca4, 0x9c45, 0xbf6d, 0x1, 0x0);
        gbc.writeMem(0x983f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0x9841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983f), 0xcb);
        EXPECT(gbc.readMem(0x9840), 0x58);
        // CB 58 0091
        gbc.setState(0x13a9, 0x810e, 0xfeb0, 0xb6c9, 0x787d, 0x83f5, 0x0, 0x0);
        gbc.writeMem(0x13a9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x810e);
        EXPECT(gbc.pc(), 0x13ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0092
        gbc.setState(0x41da, 0xf690, 0xb670, 0x110c, 0x3493, 0xe95, 0x0, 0x1);
        gbc.writeMem(0x41da, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf690);
        EXPECT(gbc.pc(), 0x41dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0093
        gbc.setState(0xe9dc, 0x7832, 0xcd00, 0x8192, 0x4380, 0x70c0, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7832);
        EXPECT(gbc.pc(), 0xe9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9dc), 0xcb);
        EXPECT(gbc.readMem(0xe9dd), 0x58);
        // CB 58 0094
        gbc.setState(0x5ccc, 0x487b, 0x730, 0xe253, 0xf3c7, 0x225d, 0x1, 0x0);
        gbc.writeMem(0x5ccc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x487b);
        EXPECT(gbc.pc(), 0x5cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0095
        gbc.setState(0xd6b1, 0xaa1c, 0x2510, 0xf19c, 0x90f2, 0x369, 0x1, 0x0);
        gbc.writeMem(0xd6b1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0xd6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b1), 0xcb);
        EXPECT(gbc.readMem(0xd6b2), 0x58);
        // CB 58 0096
        gbc.setState(0xf9c, 0x7e67, 0xae0, 0x59a3, 0x335e, 0x6bfa, 0x1, 0x1);
        gbc.writeMem(0xf9c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7e67);
        EXPECT(gbc.pc(), 0xf9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0097
        gbc.setState(0x5b54, 0x8f1b, 0x2080, 0x65d4, 0x6e7a, 0x696c, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8f1b);
        EXPECT(gbc.pc(), 0x5b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0098
        gbc.setState(0x2319, 0x273e, 0x53f0, 0x310b, 0xa77, 0x43c2, 0x0, 0x1);
        gbc.writeMem(0x2319, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x273e);
        EXPECT(gbc.pc(), 0x231b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0099
        gbc.setState(0x969a, 0x29f2, 0x24c0, 0x9245, 0x4c5f, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x969a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x29f2);
        EXPECT(gbc.pc(), 0x969c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969a), 0xcb);
        EXPECT(gbc.readMem(0x969b), 0x58);
        // CB 58 009A
        gbc.setState(0xa16a, 0x16dd, 0xd370, 0xb2c1, 0xc859, 0xb06f, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x16dd);
        EXPECT(gbc.pc(), 0xa16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16a), 0xcb);
        EXPECT(gbc.readMem(0xa16b), 0x58);
        // CB 58 009B
        gbc.setState(0xdee2, 0xfbec, 0x98c0, 0x86c7, 0x4fa3, 0xd3cf, 0x1, 0x0);
        gbc.writeMem(0xdee2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfbec);
        EXPECT(gbc.pc(), 0xdee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee2), 0xcb);
        EXPECT(gbc.readMem(0xdee3), 0x58);
        // CB 58 009C
        gbc.setState(0xa41f, 0x933f, 0xf0e0, 0xfa1c, 0x852c, 0x306a, 0x0, 0x0);
        gbc.writeMem(0xa41f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x933f);
        EXPECT(gbc.pc(), 0xa421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41f), 0xcb);
        EXPECT(gbc.readMem(0xa420), 0x58);
        // CB 58 009D
        gbc.setState(0x2262, 0xf8d3, 0x8b00, 0x45e0, 0xdf57, 0x4117, 0x0, 0x0);
        gbc.writeMem(0x2262, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf8d3);
        EXPECT(gbc.pc(), 0x2264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 009E
        gbc.setState(0x29e8, 0x7a24, 0x20f0, 0x618d, 0xded1, 0x6121, 0x0, 0x1);
        gbc.writeMem(0x29e8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7a24);
        EXPECT(gbc.pc(), 0x29ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 009F
        gbc.setState(0x270a, 0x6159, 0xa8c0, 0x453d, 0x441e, 0x1f31, 0x1, 0x0);
        gbc.writeMem(0x270a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6159);
        EXPECT(gbc.pc(), 0x270c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00A0
        gbc.setState(0x78d9, 0xaca6, 0xa7e0, 0xfffe, 0xe906, 0x1a8, 0x1, 0x1);
        gbc.writeMem(0x78d9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaca6);
        EXPECT(gbc.pc(), 0x78db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00A1
        gbc.setState(0xcf2d, 0x806, 0x5a80, 0x3eb2, 0x62a1, 0x91a9, 0x1, 0x1);
        gbc.writeMem(0xcf2d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0xcf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2d), 0xcb);
        EXPECT(gbc.readMem(0xcf2e), 0x58);
        // CB 58 00A2
        gbc.setState(0x89bc, 0x44e, 0x44c0, 0xfb0b, 0x8d28, 0x885, 0x1, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x44e);
        EXPECT(gbc.pc(), 0x89be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bc), 0xcb);
        EXPECT(gbc.readMem(0x89bd), 0x58);
        // CB 58 00A3
        gbc.setState(0x32ed, 0x473a, 0x7780, 0xa07, 0x3cee, 0xae4b, 0x1, 0x0);
        gbc.writeMem(0x32ed, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x473a);
        EXPECT(gbc.pc(), 0x32ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00A4
        gbc.setState(0xb2df, 0x4504, 0xaee0, 0x1cca, 0xbb4, 0x3399, 0x1, 0x0);
        gbc.writeMem(0xb2df, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4504);
        EXPECT(gbc.pc(), 0xb2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2df), 0xcb);
        EXPECT(gbc.readMem(0xb2e0), 0x58);
        // CB 58 00A5
        gbc.setState(0x617f, 0xe86d, 0xc080, 0x3700, 0x24a8, 0x17fb, 0x1, 0x0);
        gbc.writeMem(0x617f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe86d);
        EXPECT(gbc.pc(), 0x6181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00A7
        gbc.setState(0x66ed, 0x54e0, 0x3240, 0xf494, 0xc0d8, 0xd33c, 0x0, 0x0);
        gbc.writeMem(0x66ed, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x54e0);
        EXPECT(gbc.pc(), 0x66ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00A8
        gbc.setState(0xdb00, 0xe27f, 0x5260, 0x398e, 0x9e07, 0x6c68, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe27f);
        EXPECT(gbc.pc(), 0xdb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb00), 0xcb);
        EXPECT(gbc.readMem(0xdb01), 0x58);
        // CB 58 00A9
        gbc.setState(0x9a8c, 0xe472, 0x7a60, 0x2d00, 0x45a2, 0x9417, 0x0, 0x1);
        gbc.writeMem(0x9a8c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe472);
        EXPECT(gbc.pc(), 0x9a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a8c), 0xcb);
        EXPECT(gbc.readMem(0x9a8d), 0x58);
        // CB 58 00AA
        gbc.setState(0x9778, 0x7cb8, 0xdb70, 0xa570, 0xb99f, 0x89ed, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7cb8);
        EXPECT(gbc.pc(), 0x977a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9778), 0xcb);
        EXPECT(gbc.readMem(0x9779), 0x58);
        // CB 58 00AB
        gbc.setState(0x6e3a, 0x7fea, 0xe1f0, 0x2ec6, 0x3e4b, 0x109, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7fea);
        EXPECT(gbc.pc(), 0x6e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00AC
        gbc.setState(0x6f65, 0x20ef, 0xc690, 0x74d3, 0xcaf2, 0xd509, 0x1, 0x1);
        gbc.writeMem(0x6f65, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x20ef);
        EXPECT(gbc.pc(), 0x6f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00AD
        gbc.setState(0x2a8a, 0xb5c4, 0x21c0, 0x1c71, 0x7b77, 0x26f4, 0x0, 0x0);
        gbc.writeMem(0x2a8a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb5c4);
        EXPECT(gbc.pc(), 0x2a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00AE
        gbc.setState(0xbb8f, 0x81bb, 0xa540, 0x4bd0, 0xed53, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0xbb8f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x81bb);
        EXPECT(gbc.pc(), 0xbb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8f), 0xcb);
        EXPECT(gbc.readMem(0xbb90), 0x58);
        // CB 58 00AF
        gbc.setState(0xd663, 0x55d9, 0xdb60, 0x1db7, 0xb102, 0xa652, 0x1, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x55d9);
        EXPECT(gbc.pc(), 0xd665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd663), 0xcb);
        EXPECT(gbc.readMem(0xd664), 0x58);
        // CB 58 00B0
        gbc.setState(0xa296, 0xfadd, 0x5700, 0x32f0, 0x1496, 0x987c, 0x1, 0x1);
        gbc.writeMem(0xa296, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfadd);
        EXPECT(gbc.pc(), 0xa298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa296), 0xcb);
        EXPECT(gbc.readMem(0xa297), 0x58);
        // CB 58 00B1
        gbc.setState(0x51c, 0x5439, 0x3650, 0xe090, 0x8767, 0xc1a2, 0x1, 0x1);
        gbc.writeMem(0x51c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5439);
        EXPECT(gbc.pc(), 0x51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00B2
        gbc.setState(0xafe7, 0x4246, 0x3b30, 0x708a, 0x4f38, 0xe883, 0x1, 0x1);
        gbc.writeMem(0xafe7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4246);
        EXPECT(gbc.pc(), 0xafe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe7), 0xcb);
        EXPECT(gbc.readMem(0xafe8), 0x58);
        // CB 58 00B3
        gbc.setState(0x13a7, 0x6994, 0xa390, 0x4d28, 0x153c, 0x2a8, 0x0, 0x0);
        gbc.writeMem(0x13a7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6994);
        EXPECT(gbc.pc(), 0x13a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00B4
        gbc.setState(0x15b1, 0x2c3f, 0x86c0, 0x4f38, 0x4c83, 0xbc00, 0x0, 0x0);
        gbc.writeMem(0x15b1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2c3f);
        EXPECT(gbc.pc(), 0x15b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00B5
        gbc.setState(0xe627, 0xd05d, 0x1e60, 0xe66e, 0x17ee, 0xa022, 0x1, 0x1);
        gbc.writeMem(0xe627, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd05d);
        EXPECT(gbc.pc(), 0xe629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe627), 0xcb);
        EXPECT(gbc.readMem(0xe628), 0x58);
        // CB 58 00B6
        gbc.setState(0x8800, 0x39d6, 0x2d20, 0x3344, 0xb124, 0xa301, 0x1, 0x1);
        gbc.writeMem(0x8800, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x39d6);
        EXPECT(gbc.pc(), 0x8802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8800), 0xcb);
        EXPECT(gbc.readMem(0x8801), 0x58);
        // CB 58 00B7
        gbc.setState(0x2e8a, 0x5c50, 0xf4a0, 0x2148, 0x476, 0xf4fb, 0x0, 0x1);
        gbc.writeMem(0x2e8a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5c50);
        EXPECT(gbc.pc(), 0x2e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00B8
        gbc.setState(0x9ed0, 0x12f, 0x46b0, 0x6a1d, 0xc502, 0x4ae1, 0x0, 0x0);
        gbc.writeMem(0x9ed0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x12f);
        EXPECT(gbc.pc(), 0x9ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed0), 0xcb);
        EXPECT(gbc.readMem(0x9ed1), 0x58);
        // CB 58 00B9
        gbc.setState(0xd9a1, 0xc905, 0x5ff0, 0xfcd8, 0x52dc, 0xa2fe, 0x1, 0x1);
        gbc.writeMem(0xd9a1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc905);
        EXPECT(gbc.pc(), 0xd9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a1), 0xcb);
        EXPECT(gbc.readMem(0xd9a2), 0x58);
        // CB 58 00BA
        gbc.setState(0x7e13, 0xc4ea, 0xb310, 0xaee8, 0xe363, 0xa0aa, 0x0, 0x1);
        gbc.writeMem(0x7e13, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc4ea);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00BB
        gbc.setState(0x7744, 0x11d6, 0xfcb0, 0xebcd, 0x3f34, 0xed2b, 0x1, 0x1);
        gbc.writeMem(0x7744, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x11d6);
        EXPECT(gbc.pc(), 0x7746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00BC
        gbc.setState(0x1aca, 0x507b, 0xe390, 0x982a, 0x8e4e, 0xfe58, 0x0, 0x1);
        gbc.writeMem(0x1aca, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x507b);
        EXPECT(gbc.pc(), 0x1acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00BD
        gbc.setState(0xaed8, 0x9a2b, 0x4440, 0x3e54, 0xb13d, 0x8eac, 0x1, 0x1);
        gbc.writeMem(0xaed8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9a2b);
        EXPECT(gbc.pc(), 0xaeda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed8), 0xcb);
        EXPECT(gbc.readMem(0xaed9), 0x58);
        // CB 58 00BE
        gbc.setState(0x6656, 0x3918, 0x7690, 0xee34, 0x42b1, 0x86f, 0x1, 0x0);
        gbc.writeMem(0x6656, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3918);
        EXPECT(gbc.pc(), 0x6658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00BF
        gbc.setState(0x68e3, 0x55b2, 0x45e0, 0xa2ac, 0x544d, 0x8a76, 0x0, 0x0);
        gbc.writeMem(0x68e3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x55b2);
        EXPECT(gbc.pc(), 0x68e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00C0
        gbc.setState(0xdb52, 0x80f6, 0x6570, 0x58e, 0xf6b, 0xa9fe, 0x1, 0x1);
        gbc.writeMem(0xdb52, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x80f6);
        EXPECT(gbc.pc(), 0xdb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb52), 0xcb);
        EXPECT(gbc.readMem(0xdb53), 0x58);
        // CB 58 00C2
        gbc.setState(0x1621, 0xf6bd, 0x2bd0, 0x7b8, 0x6b45, 0xa30d, 0x1, 0x1);
        gbc.writeMem(0x1621, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf6bd);
        EXPECT(gbc.pc(), 0x1623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00C3
        gbc.setState(0x7fe3, 0x8693, 0xd160, 0x5cd8, 0x8059, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8693);
        EXPECT(gbc.pc(), 0x7fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00C4
        gbc.setState(0xb7f, 0x1ee5, 0x1d60, 0x3569, 0x9627, 0x9a1e, 0x0, 0x1);
        gbc.writeMem(0xb7f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0xb81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00C5
        gbc.setState(0xd7b1, 0x1814, 0x4600, 0xa60d, 0x2bcc, 0xfd09, 0x1, 0x0);
        gbc.writeMem(0xd7b1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1814);
        EXPECT(gbc.pc(), 0xd7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b1), 0xcb);
        EXPECT(gbc.readMem(0xd7b2), 0x58);
        // CB 58 00C6
        gbc.setState(0x20ab, 0xac6d, 0xd780, 0x884e, 0x710e, 0x9ec8, 0x1, 0x0);
        gbc.writeMem(0x20ab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0x20ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00C7
        gbc.setState(0x74a5, 0x68ee, 0xbad0, 0x832a, 0x4eb3, 0x4267, 0x0, 0x0);
        gbc.writeMem(0x74a5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x68ee);
        EXPECT(gbc.pc(), 0x74a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00C9
        gbc.setState(0x1c24, 0x70fb, 0x33f0, 0x1adc, 0xeab8, 0xc97, 0x0, 0x0);
        gbc.writeMem(0x1c24, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0x1c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00CA
        gbc.setState(0x6d21, 0x8711, 0xd330, 0x6cff, 0xe51d, 0xf9ff, 0x1, 0x1);
        gbc.writeMem(0x6d21, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8711);
        EXPECT(gbc.pc(), 0x6d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00CB
        gbc.setState(0x49f5, 0x63b3, 0xf6f0, 0xc40d, 0x727a, 0x237e, 0x0, 0x1);
        gbc.writeMem(0x49f5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x63b3);
        EXPECT(gbc.pc(), 0x49f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00CC
        gbc.setState(0xd9b6, 0x272, 0xf160, 0x98e4, 0xa673, 0xce1, 0x1, 0x0);
        gbc.writeMem(0xd9b6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x272);
        EXPECT(gbc.pc(), 0xd9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b6), 0xcb);
        EXPECT(gbc.readMem(0xd9b7), 0x58);
        // CB 58 00CD
        gbc.setState(0x9aa3, 0x80ae, 0xe20, 0xe1b7, 0x7acc, 0x840b, 0x0, 0x0);
        gbc.writeMem(0x9aa3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x80ae);
        EXPECT(gbc.pc(), 0x9aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa3), 0xcb);
        EXPECT(gbc.readMem(0x9aa4), 0x58);
        // CB 58 00CE
        gbc.setState(0x4b5d, 0x51ee, 0x4e30, 0x535e, 0x8210, 0x83c3, 0x1, 0x0);
        gbc.writeMem(0x4b5d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x51ee);
        EXPECT(gbc.pc(), 0x4b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00CF
        gbc.setState(0x8af4, 0x715, 0x4aa0, 0x842a, 0xf91e, 0x33d7, 0x1, 0x1);
        gbc.writeMem(0x8af4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x715);
        EXPECT(gbc.pc(), 0x8af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af4), 0xcb);
        EXPECT(gbc.readMem(0x8af5), 0x58);
        // CB 58 00D0
        gbc.setState(0xd95a, 0xa707, 0xcf30, 0x9d31, 0x1aa7, 0xd807, 0x1, 0x0);
        gbc.writeMem(0xd95a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa707);
        EXPECT(gbc.pc(), 0xd95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd95a), 0xcb);
        EXPECT(gbc.readMem(0xd95b), 0x58);
        // CB 58 00D1
        gbc.setState(0xa125, 0x64c2, 0xbc50, 0x35eb, 0x426c, 0x3a6c, 0x0, 0x1);
        gbc.writeMem(0xa125, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x64c2);
        EXPECT(gbc.pc(), 0xa127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa125), 0xcb);
        EXPECT(gbc.readMem(0xa126), 0x58);
        // CB 58 00D2
        gbc.setState(0x9bbc, 0xaf29, 0x8260, 0x63c7, 0x9283, 0xe8f3, 0x1, 0x1);
        gbc.writeMem(0x9bbc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaf29);
        EXPECT(gbc.pc(), 0x9bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbc), 0xcb);
        EXPECT(gbc.readMem(0x9bbd), 0x58);
        // CB 58 00D4
        gbc.setState(0xef5f, 0x2642, 0x9770, 0x2031, 0x18c3, 0x7d58, 0x0, 0x0);
        gbc.writeMem(0xef5f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2642);
        EXPECT(gbc.pc(), 0xef61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5f), 0xcb);
        EXPECT(gbc.readMem(0xef60), 0x58);
        // CB 58 00D5
        gbc.setState(0x3450, 0x24b4, 0x13c0, 0xe172, 0x6754, 0xf07, 0x1, 0x0);
        gbc.writeMem(0x3450, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x24b4);
        EXPECT(gbc.pc(), 0x3452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00D6
        gbc.setState(0xd437, 0x2ea2, 0xb030, 0x1372, 0x77d2, 0xa259, 0x0, 0x1);
        gbc.writeMem(0xd437, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2ea2);
        EXPECT(gbc.pc(), 0xd439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd437), 0xcb);
        EXPECT(gbc.readMem(0xd438), 0x58);
        // CB 58 00D7
        gbc.setState(0x7a91, 0x6fbd, 0x6bd0, 0xbf5d, 0x55b7, 0xae6e, 0x1, 0x0);
        gbc.writeMem(0x7a91, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6fbd);
        EXPECT(gbc.pc(), 0x7a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00D8
        gbc.setState(0x259f, 0x4c4d, 0x7100, 0xc93b, 0x29d4, 0x920, 0x1, 0x1);
        gbc.writeMem(0x259f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4c4d);
        EXPECT(gbc.pc(), 0x25a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00D9
        gbc.setState(0xca45, 0x8f55, 0xee70, 0xcafb, 0x93f2, 0xc7b6, 0x1, 0x1);
        gbc.writeMem(0xca45, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8f55);
        EXPECT(gbc.pc(), 0xca47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca45), 0xcb);
        EXPECT(gbc.readMem(0xca46), 0x58);
        // CB 58 00DA
        gbc.setState(0xb205, 0x5095, 0xb9d0, 0x7db7, 0x728a, 0xac0a, 0x0, 0x0);
        gbc.writeMem(0xb205, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5095);
        EXPECT(gbc.pc(), 0xb207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb205), 0xcb);
        EXPECT(gbc.readMem(0xb206), 0x58);
        // CB 58 00DB
        gbc.setState(0x5bce, 0xf8c9, 0x5250, 0x4c16, 0xdd, 0x5a36, 0x1, 0x1);
        gbc.writeMem(0x5bce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf8c9);
        EXPECT(gbc.pc(), 0x5bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00DC
        gbc.setState(0x5d97, 0x89ec, 0xb270, 0xb630, 0x1c57, 0xb880, 0x0, 0x0);
        gbc.writeMem(0x5d97, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x89ec);
        EXPECT(gbc.pc(), 0x5d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00DD
        gbc.setState(0x18ff, 0x71c5, 0x9940, 0x9d8a, 0xdee4, 0x6860, 0x0, 0x0);
        gbc.writeMem(0x18ff, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x71c5);
        EXPECT(gbc.pc(), 0x1901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00DE
        gbc.setState(0x54fa, 0x2675, 0x79b0, 0x5d54, 0x8d05, 0x3e3b, 0x1, 0x0);
        gbc.writeMem(0x54fa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2675);
        EXPECT(gbc.pc(), 0x54fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00DF
        gbc.setState(0x81db, 0x5d85, 0x68f0, 0x709f, 0x886c, 0x73bc, 0x0, 0x0);
        gbc.writeMem(0x81db, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5d85);
        EXPECT(gbc.pc(), 0x81dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81db), 0xcb);
        EXPECT(gbc.readMem(0x81dc), 0x58);
        // CB 58 00E0
        gbc.setState(0x8c9, 0x9bb0, 0x3780, 0x4809, 0x9ff7, 0xd1fc, 0x1, 0x0);
        gbc.writeMem(0x8c9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9bb0);
        EXPECT(gbc.pc(), 0x8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00E1
        gbc.setState(0x3508, 0xf2d5, 0x5e40, 0xb0a3, 0xec8d, 0xad7a, 0x0, 0x1);
        gbc.writeMem(0x3508, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf2d5);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00E2
        gbc.setState(0xdb75, 0x997e, 0x5ae0, 0xd057, 0x9ad3, 0xb98f, 0x1, 0x0);
        gbc.writeMem(0xdb75, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x997e);
        EXPECT(gbc.pc(), 0xdb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb75), 0xcb);
        EXPECT(gbc.readMem(0xdb76), 0x58);
        // CB 58 00E3
        gbc.setState(0x9ffd, 0xc0c1, 0x3750, 0xe095, 0xc585, 0x6e0b, 0x0, 0x1);
        gbc.writeMem(0x9ffd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc0c1);
        EXPECT(gbc.pc(), 0x9fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffd), 0xcb);
        EXPECT(gbc.readMem(0x9ffe), 0x58);
        // CB 58 00E4
        gbc.setState(0x2429, 0x6a6b, 0x3fd0, 0xe904, 0x5f5d, 0x6367, 0x0, 0x1);
        gbc.writeMem(0x2429, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6a6b);
        EXPECT(gbc.pc(), 0x242b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00E5
        gbc.setState(0x4b47, 0x3bf3, 0x4330, 0x6eb1, 0x423e, 0x5d93, 0x0, 0x1);
        gbc.writeMem(0x4b47, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3bf3);
        EXPECT(gbc.pc(), 0x4b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00E6
        gbc.setState(0xe307, 0x9113, 0x7e50, 0x1536, 0x339, 0x7f12, 0x1, 0x0);
        gbc.writeMem(0xe307, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9113);
        EXPECT(gbc.pc(), 0xe309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe307), 0xcb);
        EXPECT(gbc.readMem(0xe308), 0x58);
        // CB 58 00E7
        gbc.setState(0x5a64, 0x48f3, 0xa030, 0x5257, 0xbe91, 0x8d5d, 0x0, 0x1);
        gbc.writeMem(0x5a64, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x48f3);
        EXPECT(gbc.pc(), 0x5a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00E8
        gbc.setState(0x4090, 0xdc0b, 0xc210, 0x3824, 0x5d58, 0x40ce, 0x0, 0x1);
        gbc.writeMem(0x4090, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdc0b);
        EXPECT(gbc.pc(), 0x4092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00E9
        gbc.setState(0xe33a, 0xb5af, 0x1630, 0x1c25, 0xbceb, 0x6792, 0x0, 0x0);
        gbc.writeMem(0xe33a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb5af);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0xcb);
        EXPECT(gbc.readMem(0xe33b), 0x58);
        // CB 58 00EA
        gbc.setState(0x2d78, 0xfae3, 0x4b00, 0x38ff, 0x21a4, 0x80e0, 0x1, 0x1);
        gbc.writeMem(0x2d78, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfae3);
        EXPECT(gbc.pc(), 0x2d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00EB
        gbc.setState(0x54ac, 0x7e15, 0x9880, 0x2751, 0x6f15, 0xd802, 0x0, 0x1);
        gbc.writeMem(0x54ac, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7e15);
        EXPECT(gbc.pc(), 0x54ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00EC
        gbc.setState(0xbdf8, 0x661c, 0x7c40, 0x31f6, 0xffd4, 0xd613, 0x0, 0x1);
        gbc.writeMem(0xbdf8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x661c);
        EXPECT(gbc.pc(), 0xbdfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf8), 0xcb);
        EXPECT(gbc.readMem(0xbdf9), 0x58);
        // CB 58 00ED
        gbc.setState(0xc8f1, 0xee80, 0x79e0, 0x7b20, 0x30fd, 0xa767, 0x0, 0x0);
        gbc.writeMem(0xc8f1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xee80);
        EXPECT(gbc.pc(), 0xc8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f1), 0xcb);
        EXPECT(gbc.readMem(0xc8f2), 0x58);
        // CB 58 00EE
        gbc.setState(0x4be5, 0x658c, 0x7240, 0x9cb9, 0x8a20, 0xd8f3, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x658c);
        EXPECT(gbc.pc(), 0x4be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00EF
        gbc.setState(0x2357, 0x306b, 0xdbd0, 0x39b2, 0x2262, 0x4bd, 0x1, 0x0);
        gbc.writeMem(0x2357, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x306b);
        EXPECT(gbc.pc(), 0x2359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00F0
        gbc.setState(0xb3db, 0x4100, 0xb580, 0x9a5e, 0xc6a2, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0xb3db, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4100);
        EXPECT(gbc.pc(), 0xb3dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3db), 0xcb);
        EXPECT(gbc.readMem(0xb3dc), 0x58);
        // CB 58 00F1
        gbc.setState(0x4e2a, 0x688b, 0xbc0, 0x8e18, 0x1fa5, 0x42bb, 0x0, 0x1);
        gbc.writeMem(0x4e2a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x688b);
        EXPECT(gbc.pc(), 0x4e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00F2
        gbc.setState(0x4815, 0x24a3, 0x5c00, 0xf8ca, 0xd887, 0x12ae, 0x0, 0x1);
        gbc.writeMem(0x4815, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x24a3);
        EXPECT(gbc.pc(), 0x4817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00F3
        gbc.setState(0x46cd, 0x9081, 0x63b0, 0x4647, 0xc2e6, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9081);
        EXPECT(gbc.pc(), 0x46cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00F4
        gbc.setState(0x9e9b, 0x1f5b, 0x3ce0, 0x4ce8, 0xf102, 0x4013, 0x1, 0x1);
        gbc.writeMem(0x9e9b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1f5b);
        EXPECT(gbc.pc(), 0x9e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9b), 0xcb);
        EXPECT(gbc.readMem(0x9e9c), 0x58);
        // CB 58 00F5
        gbc.setState(0x5f0, 0x67eb, 0xfb20, 0x81b7, 0x94cc, 0xfc5e, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x67eb);
        EXPECT(gbc.pc(), 0x5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00F6
        gbc.setState(0x642a, 0x30f7, 0x52a0, 0x205c, 0x7d1f, 0x5001, 0x0, 0x0);
        gbc.writeMem(0x642a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x30f7);
        EXPECT(gbc.pc(), 0x642c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00F7
        gbc.setState(0x5cf6, 0x8026, 0xdae0, 0xa13c, 0x2328, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0x5cf6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8026);
        EXPECT(gbc.pc(), 0x5cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00F8
        gbc.setState(0xa526, 0xf0cc, 0xd800, 0xa55c, 0xdbfb, 0x4a70, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf0cc);
        EXPECT(gbc.pc(), 0xa528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa526), 0xcb);
        EXPECT(gbc.readMem(0xa527), 0x58);
        // CB 58 00F9
        gbc.setState(0xa563, 0x4040, 0xf480, 0xdaf3, 0x68a1, 0x5ade, 0x0, 0x1);
        gbc.writeMem(0xa563, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4040);
        EXPECT(gbc.pc(), 0xa565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa563), 0xcb);
        EXPECT(gbc.readMem(0xa564), 0x58);
        // CB 58 00FA
        gbc.setState(0xc9b9, 0xb0b2, 0x6820, 0x5d3c, 0x79ca, 0x912b, 0x0, 0x1);
        gbc.writeMem(0xc9b9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb0b2);
        EXPECT(gbc.pc(), 0xc9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b9), 0xcb);
        EXPECT(gbc.readMem(0xc9ba), 0x58);
        // CB 58 00FB
        gbc.setState(0x712f, 0xbac6, 0xf8b0, 0xe559, 0x57c1, 0xea83, 0x1, 0x0);
        gbc.writeMem(0x712f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbac6);
        EXPECT(gbc.pc(), 0x7131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 00FC
        gbc.setState(0x1061, 0xc239, 0x8960, 0xeff7, 0xbdc1, 0xa9f8, 0x0, 0x1);
        gbc.writeMem(0x1061, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0x1063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 00FF
        gbc.setState(0xc90a, 0x2338, 0xe180, 0x4e9d, 0xaedc, 0xb670, 0x0, 0x1);
        gbc.writeMem(0xc90a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2338);
        EXPECT(gbc.pc(), 0xc90c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90a), 0xcb);
        EXPECT(gbc.readMem(0xc90b), 0x58);
        // CB 58 0100
        gbc.setState(0x6d00, 0x27a0, 0x7730, 0x9f69, 0xa7f5, 0x90b5, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x27a0);
        EXPECT(gbc.pc(), 0x6d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0101
        gbc.setState(0x94eb, 0x5cd1, 0x9c40, 0x2df5, 0xa86b, 0xd8b2, 0x1, 0x0);
        gbc.writeMem(0x94eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5cd1);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0x58);
        // CB 58 0102
        gbc.setState(0x199a, 0x9ba0, 0x6db0, 0x8b41, 0x45c3, 0x9a46, 0x0, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9ba0);
        EXPECT(gbc.pc(), 0x199c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0103
        gbc.setState(0x32d3, 0x8bad, 0x37e0, 0xc861, 0x7dbb, 0xb400, 0x0, 0x0);
        gbc.writeMem(0x32d3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8bad);
        EXPECT(gbc.pc(), 0x32d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0104
        gbc.setState(0x34e0, 0x8337, 0x3650, 0x2c3, 0x8084, 0x185b, 0x1, 0x1);
        gbc.writeMem(0x34e0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8337);
        EXPECT(gbc.pc(), 0x34e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0105
        gbc.setState(0xb4d0, 0x7fe3, 0x9ac0, 0x421e, 0x5549, 0x4a19, 0x1, 0x0);
        gbc.writeMem(0xb4d0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7fe3);
        EXPECT(gbc.pc(), 0xb4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d0), 0xcb);
        EXPECT(gbc.readMem(0xb4d1), 0x58);
        // CB 58 0106
        gbc.setState(0xc889, 0x1e13, 0xdcc0, 0xbdab, 0xf694, 0x649, 0x1, 0x1);
        gbc.writeMem(0xc889, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1e13);
        EXPECT(gbc.pc(), 0xc88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc889), 0xcb);
        EXPECT(gbc.readMem(0xc88a), 0x58);
        // CB 58 0107
        gbc.setState(0x1cb8, 0xae8e, 0x3810, 0x3cd6, 0x5ab3, 0x38f6, 0x1, 0x0);
        gbc.writeMem(0x1cb8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xae8e);
        EXPECT(gbc.pc(), 0x1cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0108
        gbc.setState(0x9631, 0xf937, 0x82f0, 0xeb14, 0xffe, 0xee7b, 0x1, 0x0);
        gbc.writeMem(0x9631, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf937);
        EXPECT(gbc.pc(), 0x9633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9631), 0xcb);
        EXPECT(gbc.readMem(0x9632), 0x58);
        // CB 58 0109
        gbc.setState(0x5193, 0x771b, 0x6660, 0x63ba, 0x85d8, 0x8146, 0x1, 0x0);
        gbc.writeMem(0x5193, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0x5195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 010A
        gbc.setState(0x84b2, 0x365f, 0xb9b0, 0x1b14, 0x4dc0, 0xe782, 0x1, 0x1);
        gbc.writeMem(0x84b2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x365f);
        EXPECT(gbc.pc(), 0x84b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b2), 0xcb);
        EXPECT(gbc.readMem(0x84b3), 0x58);
        // CB 58 010B
        gbc.setState(0x57be, 0xebd7, 0x1310, 0x775, 0x2321, 0x3382, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xebd7);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 010C
        gbc.setState(0xe6f8, 0x4a64, 0x13d0, 0x1014, 0x5ab6, 0x9cda, 0x0, 0x1);
        gbc.writeMem(0xe6f8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4a64);
        EXPECT(gbc.pc(), 0xe6fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f8), 0xcb);
        EXPECT(gbc.readMem(0xe6f9), 0x58);
        // CB 58 010D
        gbc.setState(0x3664, 0xfd89, 0xef60, 0xb112, 0x5f90, 0xc420, 0x0, 0x1);
        gbc.writeMem(0x3664, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfd89);
        EXPECT(gbc.pc(), 0x3666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 010E
        gbc.setState(0x3bbe, 0x44cd, 0x4590, 0x3f5a, 0xadd4, 0x172f, 0x0, 0x1);
        gbc.writeMem(0x3bbe, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0x3bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 010F
        gbc.setState(0x6b99, 0x9426, 0xa480, 0xdc0b, 0x2b7b, 0x4c09, 0x0, 0x0);
        gbc.writeMem(0x6b99, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9426);
        EXPECT(gbc.pc(), 0x6b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0110
        gbc.setState(0x1b1d, 0x87c0, 0x6380, 0x8bd0, 0x11ff, 0x593d, 0x0, 0x1);
        gbc.writeMem(0x1b1d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x87c0);
        EXPECT(gbc.pc(), 0x1b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0111
        gbc.setState(0x401e, 0xbb83, 0x67a0, 0xa35c, 0x8153, 0x3ed7, 0x1, 0x0);
        gbc.writeMem(0x401e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbb83);
        EXPECT(gbc.pc(), 0x4020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0112
        gbc.setState(0x6285, 0xa896, 0xab70, 0x58b1, 0x2584, 0x44b4, 0x0, 0x0);
        gbc.writeMem(0x6285, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0x6287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0113
        gbc.setState(0xefe2, 0xec2f, 0xa5a0, 0xe3d0, 0x7a90, 0x915e, 0x0, 0x0);
        gbc.writeMem(0xefe2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xec2f);
        EXPECT(gbc.pc(), 0xefe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe2), 0xcb);
        EXPECT(gbc.readMem(0xefe3), 0x58);
        // CB 58 0114
        gbc.setState(0x2bc1, 0x133b, 0xb10, 0xbd89, 0x69be, 0xcb48, 0x0, 0x0);
        gbc.writeMem(0x2bc1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x133b);
        EXPECT(gbc.pc(), 0x2bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0115
        gbc.setState(0xeba3, 0xe1cd, 0xf8e0, 0xb7e1, 0xdbf6, 0xb11, 0x0, 0x1);
        gbc.writeMem(0xeba3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe1cd);
        EXPECT(gbc.pc(), 0xeba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba3), 0xcb);
        EXPECT(gbc.readMem(0xeba4), 0x58);
        // CB 58 0116
        gbc.setState(0x2c58, 0x1cbe, 0x2f60, 0x466d, 0xa84c, 0x8eb9, 0x0, 0x0);
        gbc.writeMem(0x2c58, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1cbe);
        EXPECT(gbc.pc(), 0x2c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0118
        gbc.setState(0x6d74, 0x3d74, 0x310, 0x584c, 0xc7fa, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x6d74, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3d74);
        EXPECT(gbc.pc(), 0x6d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0119
        gbc.setState(0xd3c7, 0x2e52, 0x4fa0, 0x59c5, 0x230d, 0xedb5, 0x0, 0x0);
        gbc.writeMem(0xd3c7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2e52);
        EXPECT(gbc.pc(), 0xd3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c7), 0xcb);
        EXPECT(gbc.readMem(0xd3c8), 0x58);
        // CB 58 011A
        gbc.setState(0xe547, 0x4b8, 0xa040, 0xfc6b, 0xd116, 0xd81c, 0x0, 0x0);
        gbc.writeMem(0xe547, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4b8);
        EXPECT(gbc.pc(), 0xe549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe547), 0xcb);
        EXPECT(gbc.readMem(0xe548), 0x58);
        // CB 58 011B
        gbc.setState(0x847f, 0x293b, 0xcdb0, 0xde51, 0xf891, 0x3d26, 0x0, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0x8481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x847f), 0xcb);
        EXPECT(gbc.readMem(0x8480), 0x58);
        // CB 58 011C
        gbc.setState(0x1a95, 0x7847, 0x6e00, 0x2f30, 0xd6f9, 0x2eb2, 0x1, 0x0);
        gbc.writeMem(0x1a95, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7847);
        EXPECT(gbc.pc(), 0x1a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 011D
        gbc.setState(0x25e6, 0x79b8, 0xde70, 0x8b2, 0x65cb, 0xeeff, 0x0, 0x0);
        gbc.writeMem(0x25e6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0x25e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 011E
        gbc.setState(0xb664, 0x677a, 0x6650, 0xe090, 0x5438, 0xce68, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0xb666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb664), 0xcb);
        EXPECT(gbc.readMem(0xb665), 0x58);
        // CB 58 011F
        gbc.setState(0x9e5d, 0xd0a5, 0x7930, 0x850, 0xbe97, 0x9709, 0x0, 0x1);
        gbc.writeMem(0x9e5d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd0a5);
        EXPECT(gbc.pc(), 0x9e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5d), 0xcb);
        EXPECT(gbc.readMem(0x9e5e), 0x58);
        // CB 58 0120
        gbc.setState(0x4c9d, 0x44e4, 0xc0e0, 0xb6e8, 0xf2e7, 0xc302, 0x0, 0x1);
        gbc.writeMem(0x4c9d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x44e4);
        EXPECT(gbc.pc(), 0x4c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0121
        gbc.setState(0x436c, 0xf542, 0xa7d0, 0xa2b9, 0xaede, 0xdc21, 0x1, 0x1);
        gbc.writeMem(0x436c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0x436e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0122
        gbc.setState(0x9dac, 0x45a8, 0x25c0, 0x215b, 0x7a98, 0xfea3, 0x0, 0x1);
        gbc.writeMem(0x9dac, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x45a8);
        EXPECT(gbc.pc(), 0x9dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dac), 0xcb);
        EXPECT(gbc.readMem(0x9dad), 0x58);
        // CB 58 0123
        gbc.setState(0x553d, 0x1b55, 0xcc50, 0xf7cf, 0x49a8, 0x62fe, 0x0, 0x1);
        gbc.writeMem(0x553d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1b55);
        EXPECT(gbc.pc(), 0x553f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0124
        gbc.setState(0xada4, 0x4ced, 0xd50, 0x11bd, 0x2c66, 0x81b4, 0x0, 0x0);
        gbc.writeMem(0xada4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4ced);
        EXPECT(gbc.pc(), 0xada6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada4), 0xcb);
        EXPECT(gbc.readMem(0xada5), 0x58);
        // CB 58 0125
        gbc.setState(0x69c6, 0x9c3c, 0xc2e0, 0x9fbf, 0xd5a, 0x8334, 0x1, 0x1);
        gbc.writeMem(0x69c6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9c3c);
        EXPECT(gbc.pc(), 0x69c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0126
        gbc.setState(0x557d, 0x432, 0x9f0, 0xb39e, 0x24b4, 0xf36a, 0x1, 0x1);
        gbc.writeMem(0x557d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x432);
        EXPECT(gbc.pc(), 0x557f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0127
        gbc.setState(0x47c, 0x6af9, 0x57e0, 0x7e71, 0x5b27, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x47c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6af9);
        EXPECT(gbc.pc(), 0x47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0128
        gbc.setState(0xec7a, 0x78d2, 0x5fa0, 0x1242, 0xaebb, 0xd42b, 0x0, 0x0);
        gbc.writeMem(0xec7a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x78d2);
        EXPECT(gbc.pc(), 0xec7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7a), 0xcb);
        EXPECT(gbc.readMem(0xec7b), 0x58);
        // CB 58 0129
        gbc.setState(0xd3c8, 0x1391, 0xdf40, 0x58db, 0x8af9, 0xb20b, 0x1, 0x0);
        gbc.writeMem(0xd3c8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1391);
        EXPECT(gbc.pc(), 0xd3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c8), 0xcb);
        EXPECT(gbc.readMem(0xd3c9), 0x58);
        // CB 58 012A
        gbc.setState(0x378e, 0x4917, 0x64b0, 0x38a, 0xfde, 0x7959, 0x1, 0x1);
        gbc.writeMem(0x378e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4917);
        EXPECT(gbc.pc(), 0x3790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 012B
        gbc.setState(0x7b28, 0x497d, 0x6630, 0x4df6, 0x4fce, 0x4eab, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x497d);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 012C
        gbc.setState(0x414e, 0x4f2f, 0x17a0, 0xc982, 0xeb4a, 0xae70, 0x0, 0x0);
        gbc.writeMem(0x414e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4f2f);
        EXPECT(gbc.pc(), 0x4150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 012D
        gbc.setState(0x31ea, 0x6432, 0xf4e0, 0x9295, 0xcf58, 0x568a, 0x0, 0x1);
        gbc.writeMem(0x31ea, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6432);
        EXPECT(gbc.pc(), 0x31ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 012F
        gbc.setState(0x32ee, 0xb1e2, 0xaf80, 0xe66d, 0xe038, 0xd49, 0x1, 0x1);
        gbc.writeMem(0x32ee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb1e2);
        EXPECT(gbc.pc(), 0x32f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0130
        gbc.setState(0x668a, 0x18b7, 0x1e10, 0xfae4, 0xab54, 0x9c63, 0x1, 0x1);
        gbc.writeMem(0x668a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0x668c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0132
        gbc.setState(0x534a, 0x7611, 0x4d80, 0xfbce, 0xad8a, 0xb8df, 0x0, 0x1);
        gbc.writeMem(0x534a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7611);
        EXPECT(gbc.pc(), 0x534c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0134
        gbc.setState(0x8e4e, 0xcf06, 0x8810, 0x3b04, 0x6894, 0x7406, 0x0, 0x0);
        gbc.writeMem(0x8e4e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcf06);
        EXPECT(gbc.pc(), 0x8e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4e), 0xcb);
        EXPECT(gbc.readMem(0x8e4f), 0x58);
        // CB 58 0135
        gbc.setState(0xe877, 0x160f, 0x44d0, 0x2f84, 0xe794, 0xec21, 0x1, 0x1);
        gbc.writeMem(0xe877, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x160f);
        EXPECT(gbc.pc(), 0xe879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe877), 0xcb);
        EXPECT(gbc.readMem(0xe878), 0x58);
        // CB 58 0136
        gbc.setState(0x1a6f, 0x64a1, 0x9be0, 0x537c, 0x425e, 0x916a, 0x0, 0x0);
        gbc.writeMem(0x1a6f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x64a1);
        EXPECT(gbc.pc(), 0x1a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0137
        gbc.setState(0xe02c, 0x4f69, 0x8140, 0x49ec, 0xf671, 0x293a, 0x1, 0x0);
        gbc.writeMem(0xe02c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4f69);
        EXPECT(gbc.pc(), 0xe02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02c), 0xcb);
        EXPECT(gbc.readMem(0xe02d), 0x58);
        // CB 58 0138
        gbc.setState(0x6e66, 0xada2, 0x7ac0, 0xa2b1, 0x55ac, 0xa35e, 0x1, 0x0);
        gbc.writeMem(0x6e66, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xada2);
        EXPECT(gbc.pc(), 0x6e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0139
        gbc.setState(0xdcdc, 0x8839, 0x83b0, 0xd3ca, 0x3078, 0xba73, 0x1, 0x0);
        gbc.writeMem(0xdcdc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8839);
        EXPECT(gbc.pc(), 0xdcde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcdc), 0xcb);
        EXPECT(gbc.readMem(0xdcdd), 0x58);
        // CB 58 013A
        gbc.setState(0x6f04, 0xef2a, 0xe5c0, 0x83f3, 0x2a15, 0x8fe3, 0x1, 0x1);
        gbc.writeMem(0x6f04, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xef2a);
        EXPECT(gbc.pc(), 0x6f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 013B
        gbc.setState(0x7cb6, 0x2d47, 0x30, 0x492c, 0x9b70, 0xf778, 0x1, 0x1);
        gbc.writeMem(0x7cb6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0x7cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 013C
        gbc.setState(0x2e18, 0xd35f, 0x630, 0x63d2, 0xcf19, 0x7521, 0x1, 0x1);
        gbc.writeMem(0x2e18, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd35f);
        EXPECT(gbc.pc(), 0x2e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 013D
        gbc.setState(0x82b4, 0xa279, 0xc7f0, 0x3023, 0xea38, 0x8b31, 0x0, 0x1);
        gbc.writeMem(0x82b4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa279);
        EXPECT(gbc.pc(), 0x82b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b4), 0xcb);
        EXPECT(gbc.readMem(0x82b5), 0x58);
        // CB 58 013F
        gbc.setState(0x92b2, 0xdf3d, 0xdb00, 0x4fb2, 0xe82b, 0x947b, 0x1, 0x0);
        gbc.writeMem(0x92b2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdf3d);
        EXPECT(gbc.pc(), 0x92b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b2), 0xcb);
        EXPECT(gbc.readMem(0x92b3), 0x58);
        // CB 58 0140
        gbc.setState(0x9cea, 0x7a13, 0x7950, 0x6f1f, 0x2576, 0x640c, 0x0, 0x0);
        gbc.writeMem(0x9cea, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7a13);
        EXPECT(gbc.pc(), 0x9cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cea), 0xcb);
        EXPECT(gbc.readMem(0x9ceb), 0x58);
        // CB 58 0141
        gbc.setState(0xb33f, 0x840c, 0x43d0, 0xbf08, 0x85b2, 0x7dac, 0x0, 0x0);
        gbc.writeMem(0xb33f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x840c);
        EXPECT(gbc.pc(), 0xb341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33f), 0xcb);
        EXPECT(gbc.readMem(0xb340), 0x58);
        // CB 58 0142
        gbc.setState(0x453a, 0x52b9, 0xb260, 0x6c19, 0xdbd, 0xc2ca, 0x0, 0x1);
        gbc.writeMem(0x453a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x52b9);
        EXPECT(gbc.pc(), 0x453c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0143
        gbc.setState(0x7dfc, 0xfb43, 0x100, 0xe19d, 0xea47, 0x760d, 0x0, 0x1);
        gbc.writeMem(0x7dfc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfb43);
        EXPECT(gbc.pc(), 0x7dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0145
        gbc.setState(0xe5d3, 0x5086, 0x5c10, 0x51f0, 0x6685, 0xee9d, 0x0, 0x0);
        gbc.writeMem(0xe5d3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5086);
        EXPECT(gbc.pc(), 0xe5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d3), 0xcb);
        EXPECT(gbc.readMem(0xe5d4), 0x58);
        // CB 58 0146
        gbc.setState(0xc0c9, 0xdf4, 0x7d20, 0x9c30, 0xa659, 0xe53, 0x0, 0x0);
        gbc.writeMem(0xc0c9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdf4);
        EXPECT(gbc.pc(), 0xc0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c9), 0xcb);
        EXPECT(gbc.readMem(0xc0ca), 0x58);
        // CB 58 0147
        gbc.setState(0x508b, 0xfbb9, 0x5790, 0xab40, 0x2c3d, 0xce5a, 0x1, 0x0);
        gbc.writeMem(0x508b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfbb9);
        EXPECT(gbc.pc(), 0x508d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0148
        gbc.setState(0xd536, 0xe3c8, 0xaee0, 0x9cf3, 0x143d, 0xeb96, 0x0, 0x0);
        gbc.writeMem(0xd536, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe3c8);
        EXPECT(gbc.pc(), 0xd538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd536), 0xcb);
        EXPECT(gbc.readMem(0xd537), 0x58);
        // CB 58 0149
        gbc.setState(0xe7f5, 0x3c0f, 0x4ab0, 0x244c, 0x3b2, 0x2d42, 0x1, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3c0f);
        EXPECT(gbc.pc(), 0xe7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f5), 0xcb);
        EXPECT(gbc.readMem(0xe7f6), 0x58);
        // CB 58 014B
        gbc.setState(0x4bb0, 0xd28f, 0x7e10, 0x2692, 0x7443, 0x133, 0x1, 0x0);
        gbc.writeMem(0x4bb0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd28f);
        EXPECT(gbc.pc(), 0x4bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 014C
        gbc.setState(0x2fbb, 0x2e05, 0x2be0, 0x41d7, 0xc3f7, 0x29b4, 0x1, 0x0);
        gbc.writeMem(0x2fbb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2e05);
        EXPECT(gbc.pc(), 0x2fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 014F
        gbc.setState(0x9f5c, 0xeb15, 0x210, 0xe982, 0x2f10, 0x8a55, 0x0, 0x0);
        gbc.writeMem(0x9f5c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeb15);
        EXPECT(gbc.pc(), 0x9f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5c), 0xcb);
        EXPECT(gbc.readMem(0x9f5d), 0x58);
        // CB 58 0150
        gbc.setState(0x782c, 0xde4b, 0x4680, 0x7698, 0x4c58, 0x3f75, 0x1, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xde4b);
        EXPECT(gbc.pc(), 0x782e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0151
        gbc.setState(0xd57b, 0xa67e, 0x6140, 0x29e8, 0x7d28, 0xd8e5, 0x0, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa67e);
        EXPECT(gbc.pc(), 0xd57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57b), 0xcb);
        EXPECT(gbc.readMem(0xd57c), 0x58);
        // CB 58 0152
        gbc.setState(0x3d66, 0xd9e0, 0xe140, 0xeaab, 0x5d2d, 0xc9b1, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd9e0);
        EXPECT(gbc.pc(), 0x3d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0153
        gbc.setState(0x7f5c, 0xc964, 0x13a0, 0x2a03, 0x6229, 0x1536, 0x0, 0x0);
        gbc.writeMem(0x7f5c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc964);
        EXPECT(gbc.pc(), 0x7f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0154
        gbc.setState(0x4659, 0x73ba, 0xf040, 0x8c3f, 0x1f6e, 0x82bf, 0x1, 0x1);
        gbc.writeMem(0x4659, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x73ba);
        EXPECT(gbc.pc(), 0x465b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0155
        gbc.setState(0x655c, 0xa4c4, 0x5fe0, 0xd2d9, 0x446b, 0x9890, 0x0, 0x0);
        gbc.writeMem(0x655c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa4c4);
        EXPECT(gbc.pc(), 0x655e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0156
        gbc.setState(0xb945, 0x5e36, 0x1d20, 0xfd60, 0x860, 0xd42f, 0x1, 0x0);
        gbc.writeMem(0xb945, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5e36);
        EXPECT(gbc.pc(), 0xb947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb945), 0xcb);
        EXPECT(gbc.readMem(0xb946), 0x58);
        // CB 58 0157
        gbc.setState(0xc802, 0x7723, 0x1990, 0x1cbb, 0x566a, 0x71a4, 0x1, 0x1);
        gbc.writeMem(0xc802, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7723);
        EXPECT(gbc.pc(), 0xc804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc802), 0xcb);
        EXPECT(gbc.readMem(0xc803), 0x58);
        // CB 58 0158
        gbc.setState(0x87a9, 0x36f8, 0xe470, 0x544d, 0xbb6a, 0xeee7, 0x0, 0x0);
        gbc.writeMem(0x87a9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x36f8);
        EXPECT(gbc.pc(), 0x87ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a9), 0xcb);
        EXPECT(gbc.readMem(0x87aa), 0x58);
        // CB 58 0159
        gbc.setState(0xcc19, 0xb220, 0x96f0, 0xe450, 0xc4d1, 0x8b23, 0x1, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb220);
        EXPECT(gbc.pc(), 0xcc1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc19), 0xcb);
        EXPECT(gbc.readMem(0xcc1a), 0x58);
        // CB 58 015A
        gbc.setState(0x27b6, 0xc7a, 0x1e40, 0x53b4, 0x1987, 0x43bd, 0x0, 0x1);
        gbc.writeMem(0x27b6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc7a);
        EXPECT(gbc.pc(), 0x27b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 015C
        gbc.setState(0x9080, 0xcd03, 0xaab0, 0x62cf, 0x923, 0xe74c, 0x1, 0x1);
        gbc.writeMem(0x9080, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcd03);
        EXPECT(gbc.pc(), 0x9082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9080), 0xcb);
        EXPECT(gbc.readMem(0x9081), 0x58);
        // CB 58 015D
        gbc.setState(0xbf6, 0xee99, 0xd30, 0x9789, 0x9ddb, 0xbf7f, 0x1, 0x1);
        gbc.writeMem(0xbf6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xee99);
        EXPECT(gbc.pc(), 0xbf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 015E
        gbc.setState(0x737, 0xbecf, 0xdcd0, 0x6a7b, 0xeaec, 0x3cff, 0x0, 0x1);
        gbc.writeMem(0x737, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbecf);
        EXPECT(gbc.pc(), 0x739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 015F
        gbc.setState(0xd453, 0xffbe, 0x67d0, 0x6a2d, 0x5b19, 0x2472, 0x1, 0x0);
        gbc.writeMem(0xd453, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xffbe);
        EXPECT(gbc.pc(), 0xd455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd453), 0xcb);
        EXPECT(gbc.readMem(0xd454), 0x58);
        // CB 58 0160
        gbc.setState(0x831f, 0xb680, 0xb8e0, 0xe3ad, 0xa526, 0x647a, 0x0, 0x1);
        gbc.writeMem(0x831f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb680);
        EXPECT(gbc.pc(), 0x8321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831f), 0xcb);
        EXPECT(gbc.readMem(0x8320), 0x58);
        // CB 58 0161
        gbc.setState(0x5f78, 0x31ae, 0x2f10, 0xd853, 0x1771, 0x28a9, 0x0, 0x0);
        gbc.writeMem(0x5f78, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x31ae);
        EXPECT(gbc.pc(), 0x5f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0162
        gbc.setState(0x62ea, 0x969, 0xd6b0, 0x7d41, 0xa630, 0x6adc, 0x1, 0x1);
        gbc.writeMem(0x62ea, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x969);
        EXPECT(gbc.pc(), 0x62ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0163
        gbc.setState(0x6da, 0xbc04, 0x16d0, 0xc54c, 0x68bc, 0x5c2b, 0x0, 0x0);
        gbc.writeMem(0x6da, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbc04);
        EXPECT(gbc.pc(), 0x6dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0164
        gbc.setState(0xe3bf, 0x1f52, 0x2dd0, 0x8ddb, 0x7a3b, 0xbf0b, 0x1, 0x0);
        gbc.writeMem(0xe3bf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1f52);
        EXPECT(gbc.pc(), 0xe3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bf), 0xcb);
        EXPECT(gbc.readMem(0xe3c0), 0x58);
        // CB 58 0165
        gbc.setState(0xba6d, 0x8ec1, 0xea40, 0xf961, 0xdb6, 0xf685, 0x0, 0x0);
        gbc.writeMem(0xba6d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8ec1);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6d), 0xcb);
        EXPECT(gbc.readMem(0xba6e), 0x58);
        // CB 58 0166
        gbc.setState(0x2029, 0xe5ce, 0x4560, 0xcb58, 0x8379, 0x32fb, 0x1, 0x1);
        gbc.writeMem(0x2029, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe5ce);
        EXPECT(gbc.pc(), 0x202b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0167
        gbc.setState(0xd4ff, 0x1007, 0xf430, 0xf73, 0x63e9, 0xbc76, 0x1, 0x1);
        gbc.writeMem(0xd4ff, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1007);
        EXPECT(gbc.pc(), 0xd501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ff), 0xcb);
        EXPECT(gbc.readMem(0xd500), 0x58);
        // CB 58 0168
        gbc.setState(0x52e9, 0xd70e, 0x8010, 0x112e, 0x5f74, 0x39ef, 0x0, 0x0);
        gbc.writeMem(0x52e9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd70e);
        EXPECT(gbc.pc(), 0x52eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0169
        gbc.setState(0x506b, 0x8e13, 0x6280, 0xc1e, 0x47fb, 0x2208, 0x0, 0x1);
        gbc.writeMem(0x506b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8e13);
        EXPECT(gbc.pc(), 0x506d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 016A
        gbc.setState(0xb721, 0xee7e, 0xbe20, 0x946e, 0x4ae2, 0x345c, 0x0, 0x0);
        gbc.writeMem(0xb721, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xee7e);
        EXPECT(gbc.pc(), 0xb723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb721), 0xcb);
        EXPECT(gbc.readMem(0xb722), 0x58);
        // CB 58 016B
        gbc.setState(0xe350, 0x7fac, 0xb330, 0x3969, 0x6284, 0xf099, 0x1, 0x0);
        gbc.writeMem(0xe350, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7fac);
        EXPECT(gbc.pc(), 0xe352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe350), 0xcb);
        EXPECT(gbc.readMem(0xe351), 0x58);
        // CB 58 016C
        gbc.setState(0x2ee0, 0x3901, 0x2ac0, 0x5f0a, 0xbf3c, 0x794d, 0x0, 0x1);
        gbc.writeMem(0x2ee0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3901);
        EXPECT(gbc.pc(), 0x2ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 016D
        gbc.setState(0xda2f, 0xd926, 0xece0, 0x173f, 0xf4e2, 0x420e, 0x1, 0x0);
        gbc.writeMem(0xda2f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd926);
        EXPECT(gbc.pc(), 0xda31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2f), 0xcb);
        EXPECT(gbc.readMem(0xda30), 0x58);
        // CB 58 016E
        gbc.setState(0x43b9, 0x4cd1, 0x70a0, 0x9611, 0x2a36, 0x4579, 0x1, 0x0);
        gbc.writeMem(0x43b9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4cd1);
        EXPECT(gbc.pc(), 0x43bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 016F
        gbc.setState(0x7ce2, 0x228c, 0xf290, 0x723a, 0x1627, 0x277b, 0x1, 0x0);
        gbc.writeMem(0x7ce2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x228c);
        EXPECT(gbc.pc(), 0x7ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0170
        gbc.setState(0x49f2, 0x2202, 0x14c0, 0x65a6, 0x843f, 0xf619, 0x0, 0x1);
        gbc.writeMem(0x49f2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2202);
        EXPECT(gbc.pc(), 0x49f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0171
        gbc.setState(0x5b52, 0x2d77, 0x7450, 0x56ae, 0x92a9, 0xe89f, 0x0, 0x0);
        gbc.writeMem(0x5b52, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2d77);
        EXPECT(gbc.pc(), 0x5b54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0172
        gbc.setState(0x5996, 0x4d81, 0x2850, 0x3a07, 0xa65d, 0xb71d, 0x1, 0x0);
        gbc.writeMem(0x5996, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4d81);
        EXPECT(gbc.pc(), 0x5998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0174
        gbc.setState(0xd90d, 0xa657, 0xbd60, 0x71f8, 0xcfa7, 0x741f, 0x1, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa657);
        EXPECT(gbc.pc(), 0xd90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd90d), 0xcb);
        EXPECT(gbc.readMem(0xd90e), 0x58);
        // CB 58 0175
        gbc.setState(0x29de, 0xc3bd, 0xa820, 0xa760, 0x9d0f, 0x5090, 0x0, 0x0);
        gbc.writeMem(0x29de, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc3bd);
        EXPECT(gbc.pc(), 0x29e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0176
        gbc.setState(0x1970, 0x409, 0x3770, 0xfc6b, 0xb066, 0x610a, 0x0, 0x1);
        gbc.writeMem(0x1970, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x409);
        EXPECT(gbc.pc(), 0x1972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0177
        gbc.setState(0x58dc, 0xe249, 0xa970, 0x7d92, 0x3f0c, 0x7c69, 0x0, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe249);
        EXPECT(gbc.pc(), 0x58de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0178
        gbc.setState(0xa3d9, 0xaa7d, 0xad80, 0x85eb, 0x2e94, 0xf47b, 0x0, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaa7d);
        EXPECT(gbc.pc(), 0xa3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d9), 0xcb);
        EXPECT(gbc.readMem(0xa3da), 0x58);
        // CB 58 0179
        gbc.setState(0x5b32, 0x7134, 0x30b0, 0x20fc, 0xd130, 0x975a, 0x0, 0x0);
        gbc.writeMem(0x5b32, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7134);
        EXPECT(gbc.pc(), 0x5b34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 017A
        gbc.setState(0x5ff4, 0x19b5, 0xff90, 0x7625, 0xeefe, 0x1648, 0x0, 0x0);
        gbc.writeMem(0x5ff4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x19b5);
        EXPECT(gbc.pc(), 0x5ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 017B
        gbc.setState(0x3ca6, 0xfdc2, 0x2740, 0x131b, 0x81a5, 0x16d4, 0x0, 0x0);
        gbc.writeMem(0x3ca6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfdc2);
        EXPECT(gbc.pc(), 0x3ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 017C
        gbc.setState(0x70c9, 0x2dfe, 0xe9e0, 0x920d, 0xb50e, 0xe8ed, 0x0, 0x0);
        gbc.writeMem(0x70c9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2dfe);
        EXPECT(gbc.pc(), 0x70cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 017D
        gbc.setState(0x8bb7, 0xe79d, 0xbcb0, 0xa996, 0xad4, 0x1fed, 0x0, 0x0);
        gbc.writeMem(0x8bb7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe79d);
        EXPECT(gbc.pc(), 0x8bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb7), 0xcb);
        EXPECT(gbc.readMem(0x8bb8), 0x58);
        // CB 58 017E
        gbc.setState(0xc7ff, 0xe8dc, 0xdeb0, 0x127c, 0xebf0, 0xa248, 0x1, 0x0);
        gbc.writeMem(0xc7ff, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe8dc);
        EXPECT(gbc.pc(), 0xc801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ff), 0xcb);
        EXPECT(gbc.readMem(0xc800), 0x58);
        // CB 58 017F
        gbc.setState(0xcb73, 0x6756, 0xba60, 0x226c, 0x24c3, 0x61db, 0x1, 0x0);
        gbc.writeMem(0xcb73, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6756);
        EXPECT(gbc.pc(), 0xcb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb73), 0xcb);
        EXPECT(gbc.readMem(0xcb74), 0x58);
        // CB 58 0180
        gbc.setState(0xc121, 0x61ed, 0x6ae0, 0x9e70, 0xbb1e, 0x198b, 0x0, 0x0);
        gbc.writeMem(0xc121, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x61ed);
        EXPECT(gbc.pc(), 0xc123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc121), 0xcb);
        EXPECT(gbc.readMem(0xc122), 0x58);
        // CB 58 0181
        gbc.setState(0x97eb, 0x24f3, 0x7ed0, 0x334c, 0x3d01, 0x33ba, 0x1, 0x1);
        gbc.writeMem(0x97eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x24f3);
        EXPECT(gbc.pc(), 0x97ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97eb), 0xcb);
        EXPECT(gbc.readMem(0x97ec), 0x58);
        // CB 58 0182
        gbc.setState(0x5463, 0x44fd, 0xaa90, 0xf645, 0xb2da, 0x5d0c, 0x0, 0x0);
        gbc.writeMem(0x5463, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x44fd);
        EXPECT(gbc.pc(), 0x5465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0183
        gbc.setState(0x805a, 0xdad9, 0xd8a0, 0xaccc, 0x1747, 0xc383, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdad9);
        EXPECT(gbc.pc(), 0x805c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805a), 0xcb);
        EXPECT(gbc.readMem(0x805b), 0x58);
        // CB 58 0184
        gbc.setState(0x9dcd, 0xe24, 0x8cf0, 0xa3, 0x8ff9, 0x7456, 0x1, 0x1);
        gbc.writeMem(0x9dcd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0x9dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcd), 0xcb);
        EXPECT(gbc.readMem(0x9dce), 0x58);
        // CB 58 0185
        gbc.setState(0xc941, 0x3c89, 0x6c0, 0x5735, 0xe0ac, 0xb134, 0x1, 0x0);
        gbc.writeMem(0xc941, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c89);
        EXPECT(gbc.pc(), 0xc943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc941), 0xcb);
        EXPECT(gbc.readMem(0xc942), 0x58);
        // CB 58 0186
        gbc.setState(0xa43b, 0x8afe, 0x500, 0x3bdf, 0xb697, 0x5db0, 0x1, 0x1);
        gbc.writeMem(0xa43b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8afe);
        EXPECT(gbc.pc(), 0xa43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43b), 0xcb);
        EXPECT(gbc.readMem(0xa43c), 0x58);
        // CB 58 0187
        gbc.setState(0x731c, 0xf15b, 0xccb0, 0xc08, 0x11df, 0x613d, 0x0, 0x0);
        gbc.writeMem(0x731c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf15b);
        EXPECT(gbc.pc(), 0x731e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0188
        gbc.setState(0x9a6a, 0xc8f, 0xd760, 0xbf42, 0xb874, 0x7cc2, 0x1, 0x0);
        gbc.writeMem(0x9a6a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc8f);
        EXPECT(gbc.pc(), 0x9a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6a), 0xcb);
        EXPECT(gbc.readMem(0x9a6b), 0x58);
        // CB 58 0189
        gbc.setState(0x7cf9, 0xcfee, 0xd3e0, 0xcb9, 0xff87, 0xd7cc, 0x0, 0x0);
        gbc.writeMem(0x7cf9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcfee);
        EXPECT(gbc.pc(), 0x7cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 018A
        gbc.setState(0x821, 0x8bb7, 0x6850, 0x30e5, 0x3f84, 0x26d1, 0x1, 0x1);
        gbc.writeMem(0x821, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8bb7);
        EXPECT(gbc.pc(), 0x823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 018B
        gbc.setState(0x8d45, 0x1c21, 0x35a0, 0x5275, 0x9dbb, 0xd97c, 0x1, 0x0);
        gbc.writeMem(0x8d45, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1c21);
        EXPECT(gbc.pc(), 0x8d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d45), 0xcb);
        EXPECT(gbc.readMem(0x8d46), 0x58);
        // CB 58 018C
        gbc.setState(0x9a1c, 0x7a29, 0x700, 0x8be5, 0xef4, 0x305, 0x0, 0x0);
        gbc.writeMem(0x9a1c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7a29);
        EXPECT(gbc.pc(), 0x9a1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1c), 0xcb);
        EXPECT(gbc.readMem(0x9a1d), 0x58);
        // CB 58 018D
        gbc.setState(0xc972, 0x23c0, 0x1880, 0xf73c, 0xacad, 0x5d38, 0x0, 0x1);
        gbc.writeMem(0xc972, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x23c0);
        EXPECT(gbc.pc(), 0xc974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc972), 0xcb);
        EXPECT(gbc.readMem(0xc973), 0x58);
        // CB 58 018F
        gbc.setState(0x7f29, 0x8363, 0x65e0, 0x7fa8, 0xf2f4, 0x63fe, 0x0, 0x0);
        gbc.writeMem(0x7f29, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8363);
        EXPECT(gbc.pc(), 0x7f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0190
        gbc.setState(0x39e, 0x5fdf, 0x7a80, 0xef50, 0x2ee3, 0x3e3b, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5fdf);
        EXPECT(gbc.pc(), 0x3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0191
        gbc.setState(0x759e, 0xf732, 0x6250, 0xaab1, 0x31e5, 0x24dd, 0x0, 0x1);
        gbc.writeMem(0x759e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf732);
        EXPECT(gbc.pc(), 0x75a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0192
        gbc.setState(0x81e4, 0x9125, 0x9770, 0x2609, 0x2088, 0xf5a4, 0x1, 0x0);
        gbc.writeMem(0x81e4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9125);
        EXPECT(gbc.pc(), 0x81e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e4), 0xcb);
        EXPECT(gbc.readMem(0x81e5), 0x58);
        // CB 58 0193
        gbc.setState(0x7a74, 0x9730, 0xc6a0, 0x93e, 0xef07, 0x2457, 0x0, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9730);
        EXPECT(gbc.pc(), 0x7a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0194
        gbc.setState(0xc6fb, 0x525, 0xb9e0, 0xd569, 0x30d9, 0xf51d, 0x0, 0x0);
        gbc.writeMem(0xc6fb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x525);
        EXPECT(gbc.pc(), 0xc6fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fb), 0xcb);
        EXPECT(gbc.readMem(0xc6fc), 0x58);
        // CB 58 0195
        gbc.setState(0x8503, 0xbba4, 0xf7f0, 0x996c, 0xf608, 0x4040, 0x0, 0x0);
        gbc.writeMem(0x8503, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbba4);
        EXPECT(gbc.pc(), 0x8505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8503), 0xcb);
        EXPECT(gbc.readMem(0x8504), 0x58);
        // CB 58 0196
        gbc.setState(0xddd8, 0xb80, 0xac20, 0x1421, 0x5c13, 0xf244, 0x1, 0x0);
        gbc.writeMem(0xddd8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb80);
        EXPECT(gbc.pc(), 0xddda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd8), 0xcb);
        EXPECT(gbc.readMem(0xddd9), 0x58);
        // CB 58 0197
        gbc.setState(0x1d36, 0x8123, 0x15b0, 0xc3f1, 0x888c, 0xa89c, 0x0, 0x0);
        gbc.writeMem(0x1d36, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0198
        gbc.setState(0x4cd9, 0xbb6f, 0x68e0, 0x92a1, 0x889e, 0xd9f0, 0x1, 0x1);
        gbc.writeMem(0x4cd9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbb6f);
        EXPECT(gbc.pc(), 0x4cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0199
        gbc.setState(0xef51, 0x8121, 0xff50, 0xd99, 0x6c37, 0xbabc, 0x0, 0x1);
        gbc.writeMem(0xef51, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0xef53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef51), 0xcb);
        EXPECT(gbc.readMem(0xef52), 0x58);
        // CB 58 019A
        gbc.setState(0x682d, 0x7d43, 0x17e0, 0x1155, 0x1114, 0x1407, 0x1, 0x1);
        gbc.writeMem(0x682d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7d43);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 019B
        gbc.setState(0xb871, 0x649c, 0x5940, 0xbb5e, 0x822f, 0xa11d, 0x0, 0x1);
        gbc.writeMem(0xb871, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x649c);
        EXPECT(gbc.pc(), 0xb873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb871), 0xcb);
        EXPECT(gbc.readMem(0xb872), 0x58);
        // CB 58 019C
        gbc.setState(0x851e, 0x590e, 0xefa0, 0x645c, 0xdda8, 0x1f6e, 0x0, 0x0);
        gbc.writeMem(0x851e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x590e);
        EXPECT(gbc.pc(), 0x8520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851e), 0xcb);
        EXPECT(gbc.readMem(0x851f), 0x58);
        // CB 58 019D
        gbc.setState(0x54e3, 0x3bdd, 0xb1c0, 0xf3d3, 0x551f, 0x1135, 0x1, 0x1);
        gbc.writeMem(0x54e3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3bdd);
        EXPECT(gbc.pc(), 0x54e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 019E
        gbc.setState(0xd968, 0x77d6, 0x52c0, 0xdad1, 0x75e0, 0xa514, 0x0, 0x0);
        gbc.writeMem(0xd968, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x77d6);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd968), 0xcb);
        EXPECT(gbc.readMem(0xd969), 0x58);
        // CB 58 019F
        gbc.setState(0xb2ad, 0xd9ea, 0xb2c0, 0xf078, 0x924d, 0xe316, 0x0, 0x1);
        gbc.writeMem(0xb2ad, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd9ea);
        EXPECT(gbc.pc(), 0xb2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ad), 0xcb);
        EXPECT(gbc.readMem(0xb2ae), 0x58);
        // CB 58 01A0
        gbc.setState(0x2fcd, 0x30d9, 0xc220, 0x69e9, 0x7b39, 0xbbfe, 0x0, 0x1);
        gbc.writeMem(0x2fcd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x30d9);
        EXPECT(gbc.pc(), 0x2fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01A1
        gbc.setState(0xd4ef, 0xf0ae, 0xf40, 0x48f7, 0xf217, 0x94ed, 0x1, 0x1);
        gbc.writeMem(0xd4ef, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf0ae);
        EXPECT(gbc.pc(), 0xd4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ef), 0xcb);
        EXPECT(gbc.readMem(0xd4f0), 0x58);
        // CB 58 01A3
        gbc.setState(0x7182, 0x260e, 0x3040, 0x2ae0, 0x54da, 0xec58, 0x0, 0x1);
        gbc.writeMem(0x7182, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x260e);
        EXPECT(gbc.pc(), 0x7184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01A4
        gbc.setState(0x8bab, 0xea1c, 0x2b20, 0xd00a, 0xcb02, 0x62a3, 0x1, 0x1);
        gbc.writeMem(0x8bab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xea1c);
        EXPECT(gbc.pc(), 0x8bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bab), 0xcb);
        EXPECT(gbc.readMem(0x8bac), 0x58);
        // CB 58 01A5
        gbc.setState(0xe277, 0xa8e, 0x7120, 0x96f1, 0xe363, 0x3a52, 0x0, 0x1);
        gbc.writeMem(0xe277, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa8e);
        EXPECT(gbc.pc(), 0xe279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe277), 0xcb);
        EXPECT(gbc.readMem(0xe278), 0x58);
        // CB 58 01A6
        gbc.setState(0x1c3e, 0xfd81, 0xd3c0, 0x619c, 0x46e7, 0x6d00, 0x0, 0x0);
        gbc.writeMem(0x1c3e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0x1c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01A7
        gbc.setState(0xd718, 0x578c, 0xdf50, 0x2e12, 0x2989, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0xd718, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x578c);
        EXPECT(gbc.pc(), 0xd71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd718), 0xcb);
        EXPECT(gbc.readMem(0xd719), 0x58);
        // CB 58 01A8
        gbc.setState(0xea05, 0x8666, 0x4fc0, 0x6c88, 0x19bd, 0xf386, 0x1, 0x1);
        gbc.writeMem(0xea05, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8666);
        EXPECT(gbc.pc(), 0xea07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea05), 0xcb);
        EXPECT(gbc.readMem(0xea06), 0x58);
        // CB 58 01A9
        gbc.setState(0x1d2f, 0x66e9, 0xe220, 0x75d0, 0xd6d2, 0x588d, 0x0, 0x1);
        gbc.writeMem(0x1d2f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x66e9);
        EXPECT(gbc.pc(), 0x1d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01AA
        gbc.setState(0x2b5d, 0xf154, 0x9470, 0xde03, 0x92ef, 0x82d2, 0x0, 0x1);
        gbc.writeMem(0x2b5d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf154);
        EXPECT(gbc.pc(), 0x2b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01AB
        gbc.setState(0x1485, 0x2077, 0x7210, 0x7635, 0x6e1d, 0x3092, 0x0, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2077);
        EXPECT(gbc.pc(), 0x1487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01AC
        gbc.setState(0x192e, 0xa27b, 0x1110, 0x6bcb, 0xfaf6, 0xc095, 0x0, 0x0);
        gbc.writeMem(0x192e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa27b);
        EXPECT(gbc.pc(), 0x1930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01AD
        gbc.setState(0x4dee, 0x13ca, 0xc710, 0x7802, 0x9293, 0x113, 0x0, 0x0);
        gbc.writeMem(0x4dee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x13ca);
        EXPECT(gbc.pc(), 0x4df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01AE
        gbc.setState(0xd984, 0xe674, 0xee60, 0xa16d, 0x5bf2, 0xaeb6, 0x0, 0x0);
        gbc.writeMem(0xd984, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe674);
        EXPECT(gbc.pc(), 0xd986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd984), 0xcb);
        EXPECT(gbc.readMem(0xd985), 0x58);
        // CB 58 01AF
        gbc.setState(0x9304, 0x7786, 0x8e60, 0x173f, 0x9256, 0x32cc, 0x1, 0x1);
        gbc.writeMem(0x9304, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7786);
        EXPECT(gbc.pc(), 0x9306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9304), 0xcb);
        EXPECT(gbc.readMem(0x9305), 0x58);
        // CB 58 01B0
        gbc.setState(0x31d1, 0x4a91, 0xd6b0, 0x663b, 0x2317, 0x2f4f, 0x0, 0x0);
        gbc.writeMem(0x31d1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4a91);
        EXPECT(gbc.pc(), 0x31d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01B2
        gbc.setState(0x5662, 0xc21d, 0x4ed0, 0xd769, 0xcdef, 0xe42, 0x0, 0x0);
        gbc.writeMem(0x5662, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc21d);
        EXPECT(gbc.pc(), 0x5664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01B3
        gbc.setState(0x28e8, 0x28bf, 0x50b0, 0x99c2, 0xdb4f, 0x56b1, 0x1, 0x1);
        gbc.writeMem(0x28e8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0x28ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01B4
        gbc.setState(0x5187, 0xfefc, 0x9710, 0xcf9b, 0x71da, 0xd28a, 0x0, 0x0);
        gbc.writeMem(0x5187, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfefc);
        EXPECT(gbc.pc(), 0x5189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01B5
        gbc.setState(0x7468, 0xe7cc, 0xb8c0, 0x1b88, 0x9d82, 0xa0b0, 0x0, 0x1);
        gbc.writeMem(0x7468, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe7cc);
        EXPECT(gbc.pc(), 0x746a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01B6
        gbc.setState(0xd615, 0xc6a6, 0x9910, 0xc2a4, 0xcda1, 0x16d4, 0x1, 0x0);
        gbc.writeMem(0xd615, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc6a6);
        EXPECT(gbc.pc(), 0xd617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd615), 0xcb);
        EXPECT(gbc.readMem(0xd616), 0x58);
        // CB 58 01B7
        gbc.setState(0x47d9, 0x7395, 0x94e0, 0xf422, 0x79f1, 0xf229, 0x0, 0x1);
        gbc.writeMem(0x47d9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0x47db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01B8
        gbc.setState(0x62e6, 0x4c75, 0x4e10, 0xdda5, 0x9223, 0xfa0f, 0x1, 0x1);
        gbc.writeMem(0x62e6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4c75);
        EXPECT(gbc.pc(), 0x62e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01B9
        gbc.setState(0xa115, 0x4311, 0xfe30, 0xcc53, 0xbc06, 0xd360, 0x0, 0x1);
        gbc.writeMem(0xa115, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4311);
        EXPECT(gbc.pc(), 0xa117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa115), 0xcb);
        EXPECT(gbc.readMem(0xa116), 0x58);
        // CB 58 01BA
        gbc.setState(0xdfde, 0x49af, 0xbb90, 0xf375, 0x3312, 0xb19c, 0x1, 0x1);
        gbc.writeMem(0xdfde, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0xdfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfde), 0xcb);
        EXPECT(gbc.readMem(0xdfdf), 0x58);
        // CB 58 01BB
        gbc.setState(0x908b, 0xd28f, 0x2760, 0x17b9, 0x97e8, 0xb47f, 0x1, 0x0);
        gbc.writeMem(0x908b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd28f);
        EXPECT(gbc.pc(), 0x908d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908b), 0xcb);
        EXPECT(gbc.readMem(0x908c), 0x58);
        // CB 58 01BC
        gbc.setState(0x153, 0x9493, 0x5810, 0x57bc, 0xc9d6, 0xe2f8, 0x0, 0x0);
        gbc.writeMem(0x153, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9493);
        EXPECT(gbc.pc(), 0x155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01BE
        gbc.setState(0xdc1d, 0x845e, 0x1a00, 0x30bc, 0x171, 0xc1d2, 0x1, 0x0);
        gbc.writeMem(0xdc1d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x845e);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1d), 0xcb);
        EXPECT(gbc.readMem(0xdc1e), 0x58);
        // CB 58 01BF
        gbc.setState(0x964a, 0x366c, 0xf10, 0x7b6c, 0x469e, 0x91cf, 0x0, 0x1);
        gbc.writeMem(0x964a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0x964c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964a), 0xcb);
        EXPECT(gbc.readMem(0x964b), 0x58);
        // CB 58 01C0
        gbc.setState(0x2ae9, 0x6f78, 0x2fb0, 0x3317, 0xee99, 0xeaa2, 0x1, 0x1);
        gbc.writeMem(0x2ae9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6f78);
        EXPECT(gbc.pc(), 0x2aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01C1
        gbc.setState(0xe777, 0xe2cd, 0x6050, 0xa2c5, 0x8f19, 0xd1a0, 0x0, 0x1);
        gbc.writeMem(0xe777, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe2cd);
        EXPECT(gbc.pc(), 0xe779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe777), 0xcb);
        EXPECT(gbc.readMem(0xe778), 0x58);
        // CB 58 01C2
        gbc.setState(0x6b4b, 0xdf5a, 0x1bc0, 0x6d5, 0x843a, 0x35aa, 0x1, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xdf5a);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01C3
        gbc.setState(0x13b5, 0xe702, 0x9780, 0x8578, 0x1c6c, 0x9542, 0x1, 0x0);
        gbc.writeMem(0x13b5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe702);
        EXPECT(gbc.pc(), 0x13b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01C4
        gbc.setState(0xb560, 0x6843, 0xc540, 0xcfb8, 0xac80, 0x2533, 0x0, 0x0);
        gbc.writeMem(0xb560, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6843);
        EXPECT(gbc.pc(), 0xb562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb560), 0xcb);
        EXPECT(gbc.readMem(0xb561), 0x58);
        // CB 58 01C6
        gbc.setState(0x7d54, 0x6898, 0xa360, 0xeb85, 0xdcf, 0x5f16, 0x0, 0x0);
        gbc.writeMem(0x7d54, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0x7d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01C7
        gbc.setState(0xe323, 0x289f, 0x6a10, 0x2a68, 0x2990, 0xc480, 0x0, 0x0);
        gbc.writeMem(0xe323, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x289f);
        EXPECT(gbc.pc(), 0xe325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe323), 0xcb);
        EXPECT(gbc.readMem(0xe324), 0x58);
        // CB 58 01C8
        gbc.setState(0x1b3b, 0x7db, 0x4650, 0x4fd6, 0xda09, 0x4e10, 0x1, 0x1);
        gbc.writeMem(0x1b3b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7db);
        EXPECT(gbc.pc(), 0x1b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01C9
        gbc.setState(0x64b8, 0x3672, 0x4270, 0x4b14, 0xf719, 0x87c6, 0x0, 0x0);
        gbc.writeMem(0x64b8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3672);
        EXPECT(gbc.pc(), 0x64ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01CA
        gbc.setState(0x9684, 0x29c3, 0x6720, 0xb857, 0xf150, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0x9684, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x29c3);
        EXPECT(gbc.pc(), 0x9686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9684), 0xcb);
        EXPECT(gbc.readMem(0x9685), 0x58);
        // CB 58 01CB
        gbc.setState(0xb0b9, 0x5675, 0x8fc0, 0xaebd, 0x3e29, 0xa4a1, 0x0, 0x1);
        gbc.writeMem(0xb0b9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0xb0bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b9), 0xcb);
        EXPECT(gbc.readMem(0xb0ba), 0x58);
        // CB 58 01CC
        gbc.setState(0xab68, 0x5fd8, 0xffb0, 0xea0a, 0x4680, 0xa32, 0x1, 0x1);
        gbc.writeMem(0xab68, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5fd8);
        EXPECT(gbc.pc(), 0xab6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab68), 0xcb);
        EXPECT(gbc.readMem(0xab69), 0x58);
        // CB 58 01CD
        gbc.setState(0x5e5c, 0x2023, 0x6e50, 0xa966, 0xf106, 0xf887, 0x1, 0x1);
        gbc.writeMem(0x5e5c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2023);
        EXPECT(gbc.pc(), 0x5e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01CE
        gbc.setState(0xaef6, 0xb388, 0x8380, 0xbb73, 0xc709, 0x31e0, 0x0, 0x1);
        gbc.writeMem(0xaef6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb388);
        EXPECT(gbc.pc(), 0xaef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef6), 0xcb);
        EXPECT(gbc.readMem(0xaef7), 0x58);
        // CB 58 01CF
        gbc.setState(0xc43c, 0x3679, 0xbb00, 0x4836, 0x15ac, 0x3a7, 0x0, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3679);
        EXPECT(gbc.pc(), 0xc43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43c), 0xcb);
        EXPECT(gbc.readMem(0xc43d), 0x58);
        // CB 58 01D0
        gbc.setState(0x6cc7, 0x258, 0x6f90, 0xefa0, 0x54ff, 0x24f3, 0x0, 0x0);
        gbc.writeMem(0x6cc7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x258);
        EXPECT(gbc.pc(), 0x6cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01D1
        gbc.setState(0xabdc, 0x4d35, 0x8c90, 0x9944, 0x29db, 0xd87e, 0x1, 0x0);
        gbc.writeMem(0xabdc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4d35);
        EXPECT(gbc.pc(), 0xabde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdc), 0xcb);
        EXPECT(gbc.readMem(0xabdd), 0x58);
        // CB 58 01D2
        gbc.setState(0x6aa, 0xa78b, 0x3c60, 0x5f9b, 0xf5c3, 0x4fef, 0x1, 0x1);
        gbc.writeMem(0x6aa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa78b);
        EXPECT(gbc.pc(), 0x6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01D3
        gbc.setState(0xbf1c, 0x69c7, 0x180, 0x1f44, 0x1a7b, 0xc1bc, 0x0, 0x0);
        gbc.writeMem(0xbf1c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x69c7);
        EXPECT(gbc.pc(), 0xbf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1c), 0xcb);
        EXPECT(gbc.readMem(0xbf1d), 0x58);
        // CB 58 01D4
        gbc.setState(0xad48, 0x9708, 0xbab0, 0x8e21, 0x1a60, 0x16df, 0x0, 0x1);
        gbc.writeMem(0xad48, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9708);
        EXPECT(gbc.pc(), 0xad4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad48), 0xcb);
        EXPECT(gbc.readMem(0xad49), 0x58);
        // CB 58 01D5
        gbc.setState(0xf7c, 0xbe6f, 0x2130, 0x9f9e, 0x9de2, 0x72c, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe6f);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01D6
        gbc.setState(0xbbf4, 0xb18a, 0x8dd0, 0xc86c, 0xe40c, 0x5d, 0x1, 0x0);
        gbc.writeMem(0xbbf4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb18a);
        EXPECT(gbc.pc(), 0xbbf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf4), 0xcb);
        EXPECT(gbc.readMem(0xbbf5), 0x58);
        // CB 58 01D7
        gbc.setState(0x914f, 0xff06, 0xf460, 0x193a, 0xf68d, 0x7b72, 0x0, 0x0);
        gbc.writeMem(0x914f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xff06);
        EXPECT(gbc.pc(), 0x9151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914f), 0xcb);
        EXPECT(gbc.readMem(0x9150), 0x58);
        // CB 58 01D8
        gbc.setState(0x2b92, 0xf53e, 0x96e0, 0x841b, 0xea29, 0x3a99, 0x0, 0x1);
        gbc.writeMem(0x2b92, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf53e);
        EXPECT(gbc.pc(), 0x2b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01D9
        gbc.setState(0x55, 0xaf35, 0xfb30, 0x3797, 0xc00c, 0x579f, 0x1, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xaf35);
        EXPECT(gbc.pc(), 0x57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01DA
        gbc.setState(0xc1f2, 0xb59e, 0xc7f0, 0x2496, 0x42bc, 0xd959, 0x0, 0x0);
        gbc.writeMem(0xc1f2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb59e);
        EXPECT(gbc.pc(), 0xc1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f2), 0xcb);
        EXPECT(gbc.readMem(0xc1f3), 0x58);
        // CB 58 01DB
        gbc.setState(0x131f, 0x2b2c, 0x3780, 0x4b6b, 0xb231, 0x490, 0x0, 0x1);
        gbc.writeMem(0x131f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2b2c);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01DC
        gbc.setState(0x2687, 0xf305, 0x3400, 0x7d77, 0xf2b4, 0xcd95, 0x1, 0x0);
        gbc.writeMem(0x2687, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0x2689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01DD
        gbc.setState(0xc5f3, 0x3e21, 0x84a0, 0xc6f0, 0xe4a8, 0x67f8, 0x0, 0x1);
        gbc.writeMem(0xc5f3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3e21);
        EXPECT(gbc.pc(), 0xc5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f3), 0xcb);
        EXPECT(gbc.readMem(0xc5f4), 0x58);
        // CB 58 01DE
        gbc.setState(0x8e0b, 0xa775, 0x5270, 0x1931, 0xf99, 0xb10d, 0x1, 0x1);
        gbc.writeMem(0x8e0b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa775);
        EXPECT(gbc.pc(), 0x8e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0b), 0xcb);
        EXPECT(gbc.readMem(0x8e0c), 0x58);
        // CB 58 01DF
        gbc.setState(0xb748, 0x94e8, 0xbd50, 0x3097, 0x335b, 0x6a64, 0x1, 0x1);
        gbc.writeMem(0xb748, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94e8);
        EXPECT(gbc.pc(), 0xb74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb748), 0xcb);
        EXPECT(gbc.readMem(0xb749), 0x58);
        // CB 58 01E0
        gbc.setState(0x363f, 0x1257, 0xb290, 0xaa24, 0xb9bb, 0xfead, 0x0, 0x0);
        gbc.writeMem(0x363f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1257);
        EXPECT(gbc.pc(), 0x3641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01E1
        gbc.setState(0xb56d, 0xa6a3, 0xd7d0, 0x30b3, 0x71ae, 0xa900, 0x0, 0x1);
        gbc.writeMem(0xb56d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa6a3);
        EXPECT(gbc.pc(), 0xb56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56d), 0xcb);
        EXPECT(gbc.readMem(0xb56e), 0x58);
        // CB 58 01E2
        gbc.setState(0x8a1b, 0x6fed, 0x56f0, 0x9256, 0xfe8a, 0xefe6, 0x1, 0x0);
        gbc.writeMem(0x8a1b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6fed);
        EXPECT(gbc.pc(), 0x8a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1b), 0xcb);
        EXPECT(gbc.readMem(0x8a1c), 0x58);
        // CB 58 01E4
        gbc.setState(0xa480, 0x5092, 0x8030, 0x9f20, 0x697a, 0xfe2f, 0x1, 0x1);
        gbc.writeMem(0xa480, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5092);
        EXPECT(gbc.pc(), 0xa482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa480), 0xcb);
        EXPECT(gbc.readMem(0xa481), 0x58);
        // CB 58 01E5
        gbc.setState(0xad83, 0x379d, 0x48d0, 0xa91c, 0x6c31, 0x6bcb, 0x0, 0x0);
        gbc.writeMem(0xad83, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x379d);
        EXPECT(gbc.pc(), 0xad85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad83), 0xcb);
        EXPECT(gbc.readMem(0xad84), 0x58);
        // CB 58 01E6
        gbc.setState(0x8bca, 0x72d4, 0x4dc0, 0x130e, 0x68b, 0x1398, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x72d4);
        EXPECT(gbc.pc(), 0x8bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bca), 0xcb);
        EXPECT(gbc.readMem(0x8bcb), 0x58);
        // CB 58 01E7
        gbc.setState(0xc93f, 0xf91a, 0x72e0, 0xaeb0, 0xd66b, 0x59d4, 0x0, 0x1);
        gbc.writeMem(0xc93f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf91a);
        EXPECT(gbc.pc(), 0xc941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93f), 0xcb);
        EXPECT(gbc.readMem(0xc940), 0x58);
        // CB 58 01E8
        gbc.setState(0x50b3, 0xc40d, 0xa990, 0xb845, 0x1bbe, 0xd923, 0x0, 0x1);
        gbc.writeMem(0x50b3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc40d);
        EXPECT(gbc.pc(), 0x50b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01E9
        gbc.setState(0x590, 0xfe04, 0xe160, 0x3e95, 0x9c05, 0x8a23, 0x0, 0x1);
        gbc.writeMem(0x590, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfe04);
        EXPECT(gbc.pc(), 0x592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01EA
        gbc.setState(0xb5ee, 0x60b2, 0x95f0, 0x670e, 0xc668, 0x611b, 0x1, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x60b2);
        EXPECT(gbc.pc(), 0xb5f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ee), 0xcb);
        EXPECT(gbc.readMem(0xb5ef), 0x58);
        // CB 58 01EB
        gbc.setState(0xcb89, 0xe873, 0xfb00, 0xf2f3, 0x1093, 0xc1eb, 0x1, 0x1);
        gbc.writeMem(0xcb89, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe873);
        EXPECT(gbc.pc(), 0xcb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb89), 0xcb);
        EXPECT(gbc.readMem(0xcb8a), 0x58);
        // CB 58 01EC
        gbc.setState(0x52ce, 0x6fe3, 0x610, 0x4193, 0x5f66, 0x2449, 0x0, 0x0);
        gbc.writeMem(0x52ce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6fe3);
        EXPECT(gbc.pc(), 0x52d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01EE
        gbc.setState(0x8acf, 0x7750, 0xa840, 0x26ca, 0x1954, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x8acf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7750);
        EXPECT(gbc.pc(), 0x8ad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acf), 0xcb);
        EXPECT(gbc.readMem(0x8ad0), 0x58);
        // CB 58 01EF
        gbc.setState(0xc552, 0xfd58, 0x4560, 0x8756, 0xbd00, 0x42ac, 0x1, 0x0);
        gbc.writeMem(0xc552, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfd58);
        EXPECT(gbc.pc(), 0xc554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc552), 0xcb);
        EXPECT(gbc.readMem(0xc553), 0x58);
        // CB 58 01F0
        gbc.setState(0x3369, 0x573, 0x6600, 0x73, 0xe558, 0x9c26, 0x1, 0x0);
        gbc.writeMem(0x3369, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x573);
        EXPECT(gbc.pc(), 0x336b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01F1
        gbc.setState(0xa792, 0x695a, 0xe1f0, 0xca58, 0xd0fd, 0x2fdb, 0x0, 0x0);
        gbc.writeMem(0xa792, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x695a);
        EXPECT(gbc.pc(), 0xa794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa792), 0xcb);
        EXPECT(gbc.readMem(0xa793), 0x58);
        // CB 58 01F2
        gbc.setState(0x8710, 0x46d9, 0xf150, 0xab88, 0x263b, 0xc529, 0x1, 0x1);
        gbc.writeMem(0x8710, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x46d9);
        EXPECT(gbc.pc(), 0x8712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8710), 0xcb);
        EXPECT(gbc.readMem(0x8711), 0x58);
        // CB 58 01F3
        gbc.setState(0x5884, 0xa796, 0x4170, 0xe8d2, 0x9125, 0x144a, 0x1, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa796);
        EXPECT(gbc.pc(), 0x5886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01F4
        gbc.setState(0x6fd7, 0x1637, 0xa1a0, 0xf0bb, 0x34e0, 0xd244, 0x1, 0x1);
        gbc.writeMem(0x6fd7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1637);
        EXPECT(gbc.pc(), 0x6fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01F5
        gbc.setState(0x7e40, 0x5428, 0x6f60, 0x1222, 0x2cec, 0x6fb6, 0x1, 0x1);
        gbc.writeMem(0x7e40, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5428);
        EXPECT(gbc.pc(), 0x7e42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01F7
        gbc.setState(0x2048, 0x12c7, 0x44a0, 0xcf91, 0xc547, 0x75f4, 0x0, 0x1);
        gbc.writeMem(0x2048, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x12c7);
        EXPECT(gbc.pc(), 0x204a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 01F9
        gbc.setState(0xdcc6, 0x402, 0x6350, 0x514a, 0x6d14, 0xdeca, 0x0, 0x1);
        gbc.writeMem(0xdcc6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x402);
        EXPECT(gbc.pc(), 0xdcc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc6), 0xcb);
        EXPECT(gbc.readMem(0xdcc7), 0x58);
        // CB 58 01FA
        gbc.setState(0xa281, 0xb6d0, 0xee50, 0x5a6b, 0x51ae, 0xc812, 0x1, 0x0);
        gbc.writeMem(0xa281, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb6d0);
        EXPECT(gbc.pc(), 0xa283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa281), 0xcb);
        EXPECT(gbc.readMem(0xa282), 0x58);
        // CB 58 01FB
        gbc.setState(0xc758, 0xa2c3, 0x52f0, 0x1887, 0xd3b8, 0xb0d5, 0x0, 0x1);
        gbc.writeMem(0xc758, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa2c3);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc758), 0xcb);
        EXPECT(gbc.readMem(0xc759), 0x58);
        // CB 58 01FC
        gbc.setState(0x4047, 0xe49f, 0xd730, 0xb836, 0x736e, 0x729e, 0x1, 0x0);
        gbc.writeMem(0x4047, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe49f);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01FD
        gbc.setState(0xc43e, 0xf297, 0x9df0, 0xe222, 0x246b, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0xc43e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf297);
        EXPECT(gbc.pc(), 0xc440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43e), 0xcb);
        EXPECT(gbc.readMem(0xc43f), 0x58);
        // CB 58 01FE
        gbc.setState(0x41d7, 0x533e, 0x38d0, 0x7564, 0x7948, 0x2ba7, 0x0, 0x0);
        gbc.writeMem(0x41d7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x533e);
        EXPECT(gbc.pc(), 0x41d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 01FF
        gbc.setState(0xe52a, 0x7ebc, 0x1120, 0xf3ee, 0xdc4d, 0x1103, 0x1, 0x0);
        gbc.writeMem(0xe52a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0xe52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52a), 0xcb);
        EXPECT(gbc.readMem(0xe52b), 0x58);
        // CB 58 0200
        gbc.setState(0xe81c, 0x943d, 0x9dc0, 0xf97e, 0xaf8b, 0xbfe5, 0x0, 0x0);
        gbc.writeMem(0xe81c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x943d);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81c), 0xcb);
        EXPECT(gbc.readMem(0xe81d), 0x58);
        // CB 58 0201
        gbc.setState(0x9dc5, 0x34ab, 0xcfd0, 0x9d39, 0x66dc, 0x304d, 0x0, 0x0);
        gbc.writeMem(0x9dc5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x34ab);
        EXPECT(gbc.pc(), 0x9dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc5), 0xcb);
        EXPECT(gbc.readMem(0x9dc6), 0x58);
        // CB 58 0202
        gbc.setState(0xb53b, 0xad81, 0x4ff0, 0x4782, 0xb426, 0xcf36, 0x1, 0x0);
        gbc.writeMem(0xb53b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0xb53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53b), 0xcb);
        EXPECT(gbc.readMem(0xb53c), 0x58);
        // CB 58 0203
        gbc.setState(0x4da6, 0xbf06, 0x8ef0, 0x57db, 0x8b47, 0xede4, 0x0, 0x0);
        gbc.writeMem(0x4da6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbf06);
        EXPECT(gbc.pc(), 0x4da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0204
        gbc.setState(0x281f, 0x49ea, 0x7810, 0x7f17, 0xb46c, 0x4de, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x49ea);
        EXPECT(gbc.pc(), 0x2821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0205
        gbc.setState(0xb90, 0x788c, 0x1a30, 0xb45d, 0xe1f2, 0x7d1, 0x1, 0x0);
        gbc.writeMem(0xb90, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x788c);
        EXPECT(gbc.pc(), 0xb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0206
        gbc.setState(0xedf1, 0x5452, 0xdd90, 0xf196, 0x8f3d, 0x9e97, 0x1, 0x0);
        gbc.writeMem(0xedf1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5452);
        EXPECT(gbc.pc(), 0xedf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf1), 0xcb);
        EXPECT(gbc.readMem(0xedf2), 0x58);
        // CB 58 0208
        gbc.setState(0xd76d, 0x24d1, 0xd810, 0xdef2, 0x97cd, 0x9090, 0x0, 0x1);
        gbc.writeMem(0xd76d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x24d1);
        EXPECT(gbc.pc(), 0xd76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76d), 0xcb);
        EXPECT(gbc.readMem(0xd76e), 0x58);
        // CB 58 0209
        gbc.setState(0x1468, 0xdf1f, 0xdf50, 0xb809, 0x5c11, 0xc96, 0x1, 0x1);
        gbc.writeMem(0x1468, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdf1f);
        EXPECT(gbc.pc(), 0x146a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 020A
        gbc.setState(0x431c, 0x2436, 0xe910, 0xf85c, 0x798d, 0x60ad, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2436);
        EXPECT(gbc.pc(), 0x431e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 020B
        gbc.setState(0xa7dc, 0x7163, 0xd160, 0x26e3, 0x22e9, 0x685a, 0x0, 0x0);
        gbc.writeMem(0xa7dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7163);
        EXPECT(gbc.pc(), 0xa7de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7dc), 0xcb);
        EXPECT(gbc.readMem(0xa7dd), 0x58);
        // CB 58 020C
        gbc.setState(0xe809, 0xf56e, 0x7730, 0xf14c, 0xdd34, 0xeb7f, 0x0, 0x0);
        gbc.writeMem(0xe809, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf56e);
        EXPECT(gbc.pc(), 0xe80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe809), 0xcb);
        EXPECT(gbc.readMem(0xe80a), 0x58);
        // CB 58 020D
        gbc.setState(0xcd57, 0xaace, 0x2940, 0x5fcc, 0x454f, 0x91e7, 0x1, 0x1);
        gbc.writeMem(0xcd57, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaace);
        EXPECT(gbc.pc(), 0xcd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd57), 0xcb);
        EXPECT(gbc.readMem(0xcd58), 0x58);
        // CB 58 020E
        gbc.setState(0xe289, 0x260f, 0x8620, 0xddc8, 0x6c77, 0x8934, 0x0, 0x0);
        gbc.writeMem(0xe289, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x260f);
        EXPECT(gbc.pc(), 0xe28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe289), 0xcb);
        EXPECT(gbc.readMem(0xe28a), 0x58);
        // CB 58 020F
        gbc.setState(0xab10, 0xa06c, 0xe960, 0x6b69, 0xad38, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0xab10, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa06c);
        EXPECT(gbc.pc(), 0xab12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab10), 0xcb);
        EXPECT(gbc.readMem(0xab11), 0x58);
        // CB 58 0210
        gbc.setState(0xa26, 0x2c0, 0xc4e0, 0xef43, 0x3325, 0x9dd3, 0x0, 0x1);
        gbc.writeMem(0xa26, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2c0);
        EXPECT(gbc.pc(), 0xa28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0211
        gbc.setState(0xbd3e, 0x9fdd, 0x68f0, 0x6408, 0x7c65, 0xe089, 0x0, 0x1);
        gbc.writeMem(0xbd3e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0xbd40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3e), 0xcb);
        EXPECT(gbc.readMem(0xbd3f), 0x58);
        // CB 58 0212
        gbc.setState(0x6ad4, 0xae89, 0xe590, 0x2f37, 0xf6fd, 0x37d1, 0x1, 0x0);
        gbc.writeMem(0x6ad4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xae89);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0213
        gbc.setState(0x8221, 0xfd99, 0xc670, 0x9c8d, 0x3895, 0x2725, 0x0, 0x0);
        gbc.writeMem(0x8221, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfd99);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8221), 0xcb);
        EXPECT(gbc.readMem(0x8222), 0x58);
        // CB 58 0214
        gbc.setState(0x3231, 0x7555, 0xb3b0, 0xb466, 0xca83, 0x1421, 0x1, 0x0);
        gbc.writeMem(0x3231, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0x3233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0215
        gbc.setState(0xaa4, 0xb54e, 0x7530, 0x4716, 0xeeff, 0xb43e, 0x0, 0x1);
        gbc.writeMem(0xaa4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb54e);
        EXPECT(gbc.pc(), 0xaa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0216
        gbc.setState(0x17f2, 0xd43d, 0xb860, 0x4040, 0xd25b, 0x4463, 0x0, 0x1);
        gbc.writeMem(0x17f2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd43d);
        EXPECT(gbc.pc(), 0x17f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0217
        gbc.setState(0x5aef, 0xa07c, 0xd750, 0xd139, 0xf2eb, 0x3e2d, 0x1, 0x1);
        gbc.writeMem(0x5aef, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0x5af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0218
        gbc.setState(0xcc25, 0x240e, 0x8ba0, 0x8126, 0x7f85, 0x1454, 0x0, 0x1);
        gbc.writeMem(0xcc25, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x240e);
        EXPECT(gbc.pc(), 0xcc27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc25), 0xcb);
        EXPECT(gbc.readMem(0xcc26), 0x58);
        // CB 58 0219
        gbc.setState(0x106d, 0x8dd0, 0x3c00, 0x81bc, 0xda1, 0x78e1, 0x1, 0x0);
        gbc.writeMem(0x106d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8dd0);
        EXPECT(gbc.pc(), 0x106f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 021A
        gbc.setState(0x6e8b, 0x5a6c, 0x4db0, 0x1670, 0x4be7, 0x1aea, 0x1, 0x0);
        gbc.writeMem(0x6e8b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a6c);
        EXPECT(gbc.pc(), 0x6e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 021B
        gbc.setState(0x1ec2, 0x9a2a, 0xc4e0, 0xc6c0, 0xeefb, 0x12e, 0x1, 0x1);
        gbc.writeMem(0x1ec2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9a2a);
        EXPECT(gbc.pc(), 0x1ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 021C
        gbc.setState(0x4827, 0x4d0e, 0x6820, 0xd722, 0xfcac, 0xb886, 0x1, 0x0);
        gbc.writeMem(0x4827, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4d0e);
        EXPECT(gbc.pc(), 0x4829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 021D
        gbc.setState(0x189f, 0xe8a7, 0xcbc0, 0x9de2, 0xfbfc, 0xc700, 0x0, 0x0);
        gbc.writeMem(0x189f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe8a7);
        EXPECT(gbc.pc(), 0x18a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 021E
        gbc.setState(0xe0ee, 0x41cb, 0xa890, 0x6c48, 0x1b93, 0xdeab, 0x1, 0x1);
        gbc.writeMem(0xe0ee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x41cb);
        EXPECT(gbc.pc(), 0xe0f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ee), 0xcb);
        EXPECT(gbc.readMem(0xe0ef), 0x58);
        // CB 58 021F
        gbc.setState(0x284b, 0x1306, 0xce30, 0xebd5, 0xe1a8, 0x769c, 0x1, 0x1);
        gbc.writeMem(0x284b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1306);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0220
        gbc.setState(0xc81c, 0x84ac, 0xf860, 0x6099, 0x2e5f, 0x9776, 0x1, 0x1);
        gbc.writeMem(0xc81c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0xc81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81c), 0xcb);
        EXPECT(gbc.readMem(0xc81d), 0x58);
        // CB 58 0221
        gbc.setState(0x23dc, 0x3f72, 0x65f0, 0x8759, 0x31be, 0x51ea, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3f72);
        EXPECT(gbc.pc(), 0x23de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0222
        gbc.setState(0xd914, 0x2144, 0x14f0, 0xec83, 0x7adc, 0x8d4a, 0x0, 0x1);
        gbc.writeMem(0xd914, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2144);
        EXPECT(gbc.pc(), 0xd916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd914), 0xcb);
        EXPECT(gbc.readMem(0xd915), 0x58);
        // CB 58 0223
        gbc.setState(0xe95b, 0x406e, 0x6720, 0x1186, 0x68ba, 0x93eb, 0x0, 0x0);
        gbc.writeMem(0xe95b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x406e);
        EXPECT(gbc.pc(), 0xe95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95b), 0xcb);
        EXPECT(gbc.readMem(0xe95c), 0x58);
        // CB 58 0224
        gbc.setState(0xcd2a, 0xca1b, 0x4560, 0x1a7b, 0xb653, 0x530, 0x1, 0x0);
        gbc.writeMem(0xcd2a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xca1b);
        EXPECT(gbc.pc(), 0xcd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd2a), 0xcb);
        EXPECT(gbc.readMem(0xcd2b), 0x58);
        // CB 58 0225
        gbc.setState(0xacb5, 0xe6ce, 0x7220, 0x2435, 0x24e8, 0xb621, 0x1, 0x0);
        gbc.writeMem(0xacb5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe6ce);
        EXPECT(gbc.pc(), 0xacb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb5), 0xcb);
        EXPECT(gbc.readMem(0xacb6), 0x58);
        // CB 58 0226
        gbc.setState(0x6adb, 0xdab3, 0x5a40, 0x83f1, 0x657f, 0x91a, 0x1, 0x1);
        gbc.writeMem(0x6adb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdab3);
        EXPECT(gbc.pc(), 0x6add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0227
        gbc.setState(0x9c56, 0x5ed5, 0xbc40, 0x615f, 0xd358, 0x7f, 0x0, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5ed5);
        EXPECT(gbc.pc(), 0x9c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c56), 0xcb);
        EXPECT(gbc.readMem(0x9c57), 0x58);
        // CB 58 0228
        gbc.setState(0x2268, 0xaf1d, 0xbe80, 0x9a2e, 0xcd05, 0x85fe, 0x1, 0x1);
        gbc.writeMem(0x2268, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xaf1d);
        EXPECT(gbc.pc(), 0x226a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0229
        gbc.setState(0x88af, 0x5b42, 0x53e0, 0xe49, 0x9a23, 0x1ed7, 0x0, 0x0);
        gbc.writeMem(0x88af, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5b42);
        EXPECT(gbc.pc(), 0x88b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88af), 0xcb);
        EXPECT(gbc.readMem(0x88b0), 0x58);
        // CB 58 022A
        gbc.setState(0x91c7, 0x3e92, 0x7e0, 0x3496, 0x5380, 0x851, 0x0, 0x0);
        gbc.writeMem(0x91c7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3e92);
        EXPECT(gbc.pc(), 0x91c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c7), 0xcb);
        EXPECT(gbc.readMem(0x91c8), 0x58);
        // CB 58 022B
        gbc.setState(0x6d7b, 0xd66f, 0xa4d0, 0xc764, 0xe69e, 0x50e7, 0x0, 0x1);
        gbc.writeMem(0x6d7b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd66f);
        EXPECT(gbc.pc(), 0x6d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 022C
        gbc.setState(0x7e56, 0xcf14, 0xda00, 0x780d, 0xd90, 0xdc80, 0x0, 0x1);
        gbc.writeMem(0x7e56, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0x7e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 022D
        gbc.setState(0x7f67, 0x9b9b, 0x8750, 0xb501, 0x3abd, 0xa874, 0x1, 0x1);
        gbc.writeMem(0x7f67, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9b9b);
        EXPECT(gbc.pc(), 0x7f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 022E
        gbc.setState(0x7c67, 0x2931, 0xfd70, 0xdeee, 0x6577, 0x99b, 0x1, 0x1);
        gbc.writeMem(0x7c67, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2931);
        EXPECT(gbc.pc(), 0x7c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 022F
        gbc.setState(0x2cc2, 0xab28, 0xe090, 0xe6b0, 0xb6f7, 0x4639, 0x0, 0x0);
        gbc.writeMem(0x2cc2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xab28);
        EXPECT(gbc.pc(), 0x2cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0230
        gbc.setState(0x61b0, 0x38b1, 0x48f0, 0x40c8, 0x6c6, 0xdfcb, 0x0, 0x0);
        gbc.writeMem(0x61b0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x38b1);
        EXPECT(gbc.pc(), 0x61b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0231
        gbc.setState(0x553a, 0x9ad6, 0x74d0, 0x6d39, 0x7488, 0x1fc2, 0x0, 0x1);
        gbc.writeMem(0x553a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9ad6);
        EXPECT(gbc.pc(), 0x553c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0232
        gbc.setState(0x3c, 0xe7b6, 0xbbc0, 0x4874, 0xcb34, 0x1875, 0x0, 0x1);
        gbc.writeMem(0x3c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe7b6);
        EXPECT(gbc.pc(), 0x3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0233
        gbc.setState(0x178e, 0xb9ef, 0xc0e0, 0x8a7a, 0x36f9, 0x64ef, 0x0, 0x0);
        gbc.writeMem(0x178e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb9ef);
        EXPECT(gbc.pc(), 0x1790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0234
        gbc.setState(0xca91, 0x5adb, 0xebe0, 0x2e19, 0x1256, 0x9214, 0x0, 0x0);
        gbc.writeMem(0xca91, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5adb);
        EXPECT(gbc.pc(), 0xca93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca91), 0xcb);
        EXPECT(gbc.readMem(0xca92), 0x58);
        // CB 58 0235
        gbc.setState(0xae95, 0xb6a, 0x30e0, 0xadd2, 0xbde6, 0x996e, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb6a);
        EXPECT(gbc.pc(), 0xae97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae95), 0xcb);
        EXPECT(gbc.readMem(0xae96), 0x58);
        // CB 58 0236
        gbc.setState(0x5591, 0x55ca, 0xd100, 0xadb3, 0x40da, 0x9497, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x55ca);
        EXPECT(gbc.pc(), 0x5593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0237
        gbc.setState(0xa93a, 0x6978, 0x3c30, 0xff62, 0x8f7a, 0x3d7f, 0x0, 0x0);
        gbc.writeMem(0xa93a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6978);
        EXPECT(gbc.pc(), 0xa93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa93a), 0xcb);
        EXPECT(gbc.readMem(0xa93b), 0x58);
        // CB 58 0238
        gbc.setState(0xb859, 0xba77, 0xb240, 0xc51a, 0xf29d, 0xfaa8, 0x1, 0x1);
        gbc.writeMem(0xb859, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xba77);
        EXPECT(gbc.pc(), 0xb85b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb859), 0xcb);
        EXPECT(gbc.readMem(0xb85a), 0x58);
        // CB 58 0239
        gbc.setState(0x2078, 0xec59, 0xdbd0, 0x6e44, 0x691c, 0xd73b, 0x0, 0x0);
        gbc.writeMem(0x2078, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xec59);
        EXPECT(gbc.pc(), 0x207a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 023A
        gbc.setState(0x82d1, 0x721a, 0xb290, 0x397, 0x7f80, 0x9c9c, 0x0, 0x1);
        gbc.writeMem(0x82d1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x721a);
        EXPECT(gbc.pc(), 0x82d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d1), 0xcb);
        EXPECT(gbc.readMem(0x82d2), 0x58);
        // CB 58 023B
        gbc.setState(0x87ed, 0xe061, 0x3350, 0x3b19, 0xf54, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0x87ed, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe061);
        EXPECT(gbc.pc(), 0x87ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ed), 0xcb);
        EXPECT(gbc.readMem(0x87ee), 0x58);
        // CB 58 023C
        gbc.setState(0xa7bb, 0x3a10, 0xb440, 0xcacd, 0x1ae3, 0x7339, 0x0, 0x0);
        gbc.writeMem(0xa7bb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3a10);
        EXPECT(gbc.pc(), 0xa7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bb), 0xcb);
        EXPECT(gbc.readMem(0xa7bc), 0x58);
        // CB 58 023D
        gbc.setState(0xa1f0, 0xa9af, 0xc620, 0xce86, 0xa832, 0x8eb1, 0x1, 0x0);
        gbc.writeMem(0xa1f0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa9af);
        EXPECT(gbc.pc(), 0xa1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f0), 0xcb);
        EXPECT(gbc.readMem(0xa1f1), 0x58);
        // CB 58 023E
        gbc.setState(0x7727, 0xe7bf, 0x7900, 0xaa21, 0x9e20, 0x1cf1, 0x1, 0x0);
        gbc.writeMem(0x7727, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0x7729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 023F
        gbc.setState(0xcad, 0xf154, 0xf080, 0x57d7, 0x3e09, 0x6977, 0x0, 0x0);
        gbc.writeMem(0xcad, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf154);
        EXPECT(gbc.pc(), 0xcaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0240
        gbc.setState(0x528d, 0xc934, 0xe9a0, 0xd473, 0x9b5f, 0xf8d9, 0x0, 0x1);
        gbc.writeMem(0x528d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc934);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0241
        gbc.setState(0x3169, 0x76f5, 0x890, 0x11c3, 0x43b5, 0x2e08, 0x0, 0x1);
        gbc.writeMem(0x3169, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x76f5);
        EXPECT(gbc.pc(), 0x316b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0243
        gbc.setState(0x84c7, 0xe24d, 0x8980, 0xb45a, 0x7c61, 0x429d, 0x1, 0x0);
        gbc.writeMem(0x84c7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe24d);
        EXPECT(gbc.pc(), 0x84c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c7), 0xcb);
        EXPECT(gbc.readMem(0x84c8), 0x58);
        // CB 58 0244
        gbc.setState(0x3bb3, 0x759a, 0xe1b0, 0xc1b3, 0x461c, 0xe567, 0x0, 0x0);
        gbc.writeMem(0x3bb3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x759a);
        EXPECT(gbc.pc(), 0x3bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0245
        gbc.setState(0x92c3, 0x7426, 0xf510, 0xd778, 0xc8d8, 0xeaeb, 0x0, 0x0);
        gbc.writeMem(0x92c3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7426);
        EXPECT(gbc.pc(), 0x92c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c3), 0xcb);
        EXPECT(gbc.readMem(0x92c4), 0x58);
        // CB 58 0246
        gbc.setState(0x989e, 0xb8de, 0x20, 0xc9c1, 0xc51b, 0x409c, 0x1, 0x1);
        gbc.writeMem(0x989e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb8de);
        EXPECT(gbc.pc(), 0x98a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x989e), 0xcb);
        EXPECT(gbc.readMem(0x989f), 0x58);
        // CB 58 0247
        gbc.setState(0x95e0, 0xcc5e, 0x1430, 0x470b, 0x7265, 0xb77d, 0x0, 0x0);
        gbc.writeMem(0x95e0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcc5e);
        EXPECT(gbc.pc(), 0x95e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e0), 0xcb);
        EXPECT(gbc.readMem(0x95e1), 0x58);
        // CB 58 0248
        gbc.setState(0x4e73, 0x5ed0, 0x3370, 0x9842, 0xd409, 0x6d64, 0x1, 0x0);
        gbc.writeMem(0x4e73, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5ed0);
        EXPECT(gbc.pc(), 0x4e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0249
        gbc.setState(0xdad7, 0x1c5, 0x2c70, 0xde4d, 0x2f6d, 0x6c44, 0x1, 0x1);
        gbc.writeMem(0xdad7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1c5);
        EXPECT(gbc.pc(), 0xdad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad7), 0xcb);
        EXPECT(gbc.readMem(0xdad8), 0x58);
        // CB 58 024A
        gbc.setState(0xc611, 0x6cb3, 0x9a90, 0x3942, 0x5afe, 0xf75d, 0x0, 0x1);
        gbc.writeMem(0xc611, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6cb3);
        EXPECT(gbc.pc(), 0xc613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc611), 0xcb);
        EXPECT(gbc.readMem(0xc612), 0x58);
        // CB 58 024B
        gbc.setState(0x2b8e, 0xfc9d, 0xd2c0, 0x3d86, 0x6bc, 0xcf37, 0x0, 0x1);
        gbc.writeMem(0x2b8e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfc9d);
        EXPECT(gbc.pc(), 0x2b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 024C
        gbc.setState(0x6b54, 0xd002, 0x9830, 0xb60e, 0x9df, 0xb12, 0x0, 0x1);
        gbc.writeMem(0x6b54, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd002);
        EXPECT(gbc.pc(), 0x6b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 024D
        gbc.setState(0x39de, 0xe803, 0x70, 0x523b, 0x1c2c, 0x1f6b, 0x1, 0x0);
        gbc.writeMem(0x39de, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe803);
        EXPECT(gbc.pc(), 0x39e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 024E
        gbc.setState(0x8917, 0x2f3f, 0xf180, 0x2970, 0xc7ff, 0x2c1d, 0x1, 0x0);
        gbc.writeMem(0x8917, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2f3f);
        EXPECT(gbc.pc(), 0x8919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8917), 0xcb);
        EXPECT(gbc.readMem(0x8918), 0x58);
        // CB 58 024F
        gbc.setState(0x7a3c, 0x7cb0, 0x68d0, 0x52a8, 0x1f15, 0x24d0, 0x0, 0x0);
        gbc.writeMem(0x7a3c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7cb0);
        EXPECT(gbc.pc(), 0x7a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0251
        gbc.setState(0x763d, 0x3c46, 0xcbc0, 0xddf3, 0xd007, 0xd353, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3c46);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0252
        gbc.setState(0x8e3c, 0xd8db, 0xbdd0, 0xe064, 0xf27c, 0x11c, 0x0, 0x0);
        gbc.writeMem(0x8e3c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd8db);
        EXPECT(gbc.pc(), 0x8e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3c), 0xcb);
        EXPECT(gbc.readMem(0x8e3d), 0x58);
        // CB 58 0253
        gbc.setState(0x60ff, 0xc4eb, 0x3d30, 0xc38d, 0xd665, 0xcf15, 0x0, 0x0);
        gbc.writeMem(0x60ff, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc4eb);
        EXPECT(gbc.pc(), 0x6101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0254
        gbc.setState(0xba2c, 0xf480, 0x9fe0, 0x5588, 0x4ab4, 0x7f1d, 0x1, 0x0);
        gbc.writeMem(0xba2c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0xba2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2c), 0xcb);
        EXPECT(gbc.readMem(0xba2d), 0x58);
        // CB 58 0255
        gbc.setState(0x6a96, 0xcea4, 0x940, 0x46be, 0xf2d2, 0x4cfe, 0x1, 0x0);
        gbc.writeMem(0x6a96, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xcea4);
        EXPECT(gbc.pc(), 0x6a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0256
        gbc.setState(0x8de0, 0x9d9e, 0x2100, 0x337b, 0xe0d8, 0xae00, 0x0, 0x0);
        gbc.writeMem(0x8de0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9d9e);
        EXPECT(gbc.pc(), 0x8de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de0), 0xcb);
        EXPECT(gbc.readMem(0x8de1), 0x58);
        // CB 58 0257
        gbc.setState(0x3476, 0x4da5, 0xb780, 0x71a, 0xbda5, 0xbf01, 0x0, 0x0);
        gbc.writeMem(0x3476, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4da5);
        EXPECT(gbc.pc(), 0x3478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0258
        gbc.setState(0x20, 0x3594, 0x6300, 0xa1d5, 0xf415, 0x226d, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3594);
        EXPECT(gbc.pc(), 0x22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0259
        gbc.setState(0x600, 0xb6e6, 0xa3d0, 0x1a0b, 0xc314, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0x600, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb6e6);
        EXPECT(gbc.pc(), 0x602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 025A
        gbc.setState(0x3280, 0x33bb, 0xa010, 0xfac2, 0x7427, 0x2007, 0x1, 0x1);
        gbc.writeMem(0x3280, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x33bb);
        EXPECT(gbc.pc(), 0x3282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 025B
        gbc.setState(0x591d, 0xa57, 0x2700, 0xe4fe, 0x109c, 0x7800, 0x0, 0x0);
        gbc.writeMem(0x591d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa57);
        EXPECT(gbc.pc(), 0x591f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 025C
        gbc.setState(0x3fee, 0x9f8c, 0x1a40, 0xc526, 0x7ca8, 0x1ba8, 0x0, 0x0);
        gbc.writeMem(0x3fee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9f8c);
        EXPECT(gbc.pc(), 0x3ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 025D
        gbc.setState(0x90c8, 0x355b, 0x7810, 0x80bd, 0x2527, 0x32b2, 0x0, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x355b);
        EXPECT(gbc.pc(), 0x90ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c8), 0xcb);
        EXPECT(gbc.readMem(0x90c9), 0x58);
        // CB 58 025E
        gbc.setState(0x5728, 0x1347, 0xc600, 0x9b03, 0xfc14, 0xf3a7, 0x1, 0x0);
        gbc.writeMem(0x5728, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1347);
        EXPECT(gbc.pc(), 0x572a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 025F
        gbc.setState(0x61a3, 0x9211, 0x9150, 0x51c2, 0x4d9, 0x58fd, 0x0, 0x1);
        gbc.writeMem(0x61a3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9211);
        EXPECT(gbc.pc(), 0x61a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0260
        gbc.setState(0x7567, 0x76da, 0x8ca0, 0xfead, 0x4eff, 0xd03e, 0x1, 0x0);
        gbc.writeMem(0x7567, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x76da);
        EXPECT(gbc.pc(), 0x7569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0261
        gbc.setState(0xc76a, 0xa046, 0xffa0, 0xc3f9, 0x8b68, 0xdce, 0x0, 0x1);
        gbc.writeMem(0xc76a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa046);
        EXPECT(gbc.pc(), 0xc76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76a), 0xcb);
        EXPECT(gbc.readMem(0xc76b), 0x58);
        // CB 58 0262
        gbc.setState(0xf0, 0x1e1a, 0x7eb0, 0x5472, 0xe719, 0xa731, 0x1, 0x0);
        gbc.writeMem(0xf0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1e1a);
        EXPECT(gbc.pc(), 0xf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0263
        gbc.setState(0xd28, 0x7b96, 0xc7c0, 0x7b28, 0x425d, 0x9a4b, 0x1, 0x0);
        gbc.writeMem(0xd28, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7b96);
        EXPECT(gbc.pc(), 0xd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0264
        gbc.setState(0x7348, 0x29d3, 0x5070, 0x7ef3, 0xf25c, 0x791d, 0x0, 0x0);
        gbc.writeMem(0x7348, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x29d3);
        EXPECT(gbc.pc(), 0x734a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0265
        gbc.setState(0xdcbc, 0x9c0d, 0x9b00, 0x4387, 0x8839, 0x8184, 0x0, 0x0);
        gbc.writeMem(0xdcbc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9c0d);
        EXPECT(gbc.pc(), 0xdcbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbc), 0xcb);
        EXPECT(gbc.readMem(0xdcbd), 0x58);
        // CB 58 0266
        gbc.setState(0xc5c8, 0x9644, 0xdf40, 0xedb, 0xc646, 0xe827, 0x0, 0x0);
        gbc.writeMem(0xc5c8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9644);
        EXPECT(gbc.pc(), 0xc5ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c8), 0xcb);
        EXPECT(gbc.readMem(0xc5c9), 0x58);
        // CB 58 0268
        gbc.setState(0xc072, 0x8f4c, 0xef70, 0x6b57, 0xa8b2, 0xf634, 0x1, 0x1);
        gbc.writeMem(0xc072, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8f4c);
        EXPECT(gbc.pc(), 0xc074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc072), 0xcb);
        EXPECT(gbc.readMem(0xc073), 0x58);
        // CB 58 0269
        gbc.setState(0x70dc, 0x4067, 0x74e0, 0xcb7b, 0xf9f5, 0xb033, 0x1, 0x0);
        gbc.writeMem(0x70dc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4067);
        EXPECT(gbc.pc(), 0x70de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 026A
        gbc.setState(0xc696, 0xb30a, 0x61d0, 0xe90b, 0x4983, 0x17ad, 0x1, 0x0);
        gbc.writeMem(0xc696, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb30a);
        EXPECT(gbc.pc(), 0xc698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc696), 0xcb);
        EXPECT(gbc.readMem(0xc697), 0x58);
        // CB 58 026D
        gbc.setState(0x3494, 0x8c99, 0x9a30, 0xd989, 0x920e, 0x6ab3, 0x0, 0x0);
        gbc.writeMem(0x3494, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0x3496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 026F
        gbc.setState(0x87e6, 0xf931, 0xf30, 0xb232, 0x937d, 0x81e7, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf931);
        EXPECT(gbc.pc(), 0x87e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e6), 0xcb);
        EXPECT(gbc.readMem(0x87e7), 0x58);
        // CB 58 0271
        gbc.setState(0x9ad5, 0x271, 0xfb10, 0x5490, 0x4e9b, 0x810f, 0x1, 0x1);
        gbc.writeMem(0x9ad5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x271);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad5), 0xcb);
        EXPECT(gbc.readMem(0x9ad6), 0x58);
        // CB 58 0272
        gbc.setState(0x7a7d, 0x3bb5, 0x22c0, 0xd506, 0x5ea6, 0xf8b5, 0x0, 0x0);
        gbc.writeMem(0x7a7d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3bb5);
        EXPECT(gbc.pc(), 0x7a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0273
        gbc.setState(0x55f9, 0xeef4, 0xc1f0, 0x90ea, 0xbcb5, 0x59e7, 0x1, 0x0);
        gbc.writeMem(0x55f9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xeef4);
        EXPECT(gbc.pc(), 0x55fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0274
        gbc.setState(0xbbdf, 0xb4ca, 0x4900, 0x801f, 0x8e93, 0x8969, 0x0, 0x0);
        gbc.writeMem(0xbbdf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb4ca);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdf), 0xcb);
        EXPECT(gbc.readMem(0xbbe0), 0x58);
        // CB 58 0275
        gbc.setState(0x2727, 0x31f5, 0xbd90, 0x693e, 0x26bd, 0xd281, 0x1, 0x0);
        gbc.writeMem(0x2727, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x31f5);
        EXPECT(gbc.pc(), 0x2729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0276
        gbc.setState(0xb152, 0xeba, 0x9d90, 0xa5c5, 0xbad5, 0x34be, 0x1, 0x1);
        gbc.writeMem(0xb152, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xeba);
        EXPECT(gbc.pc(), 0xb154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb152), 0xcb);
        EXPECT(gbc.readMem(0xb153), 0x58);
        // CB 58 0277
        gbc.setState(0xa360, 0x3d3b, 0xf110, 0xb9f5, 0x4efa, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0xa360, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0xa362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa360), 0xcb);
        EXPECT(gbc.readMem(0xa361), 0x58);
        // CB 58 0278
        gbc.setState(0x5939, 0x6634, 0xaf70, 0x2911, 0x561a, 0x6279, 0x0, 0x0);
        gbc.writeMem(0x5939, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6634);
        EXPECT(gbc.pc(), 0x593b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0279
        gbc.setState(0x5dee, 0xa594, 0x9fe0, 0xa1a5, 0xb60e, 0x9df6, 0x0, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa594);
        EXPECT(gbc.pc(), 0x5df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 027A
        gbc.setState(0x232e, 0x982a, 0x1c70, 0xf107, 0x86fb, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x982a);
        EXPECT(gbc.pc(), 0x2330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 027B
        gbc.setState(0xea2a, 0x6fc1, 0x9300, 0xdd13, 0x6c4f, 0x3157, 0x1, 0x1);
        gbc.writeMem(0xea2a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6fc1);
        EXPECT(gbc.pc(), 0xea2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2a), 0xcb);
        EXPECT(gbc.readMem(0xea2b), 0x58);
        // CB 58 027C
        gbc.setState(0x982a, 0xfdf0, 0x94a0, 0x3477, 0x9978, 0xcae4, 0x0, 0x1);
        gbc.writeMem(0x982a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfdf0);
        EXPECT(gbc.pc(), 0x982c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982a), 0xcb);
        EXPECT(gbc.readMem(0x982b), 0x58);
        // CB 58 027D
        gbc.setState(0xd9e3, 0x3ffe, 0x7370, 0x7c68, 0x3e61, 0x3b7b, 0x1, 0x1);
        gbc.writeMem(0xd9e3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3ffe);
        EXPECT(gbc.pc(), 0xd9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e3), 0xcb);
        EXPECT(gbc.readMem(0xd9e4), 0x58);
        // CB 58 027E
        gbc.setState(0x3e02, 0x8225, 0x98c0, 0x5eff, 0x53c0, 0x9eee, 0x1, 0x1);
        gbc.writeMem(0x3e02, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8225);
        EXPECT(gbc.pc(), 0x3e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0280
        gbc.setState(0x7ed4, 0x88ac, 0x31b0, 0xa564, 0x2285, 0x182a, 0x0, 0x0);
        gbc.writeMem(0x7ed4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x88ac);
        EXPECT(gbc.pc(), 0x7ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0281
        gbc.setState(0xeb0d, 0xb7f2, 0xea40, 0x7966, 0xfa6b, 0x6d62, 0x1, 0x1);
        gbc.writeMem(0xeb0d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb7f2);
        EXPECT(gbc.pc(), 0xeb0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0d), 0xcb);
        EXPECT(gbc.readMem(0xeb0e), 0x58);
        // CB 58 0282
        gbc.setState(0xe537, 0xfd67, 0x90, 0x8973, 0xabe, 0xf86e, 0x0, 0x1);
        gbc.writeMem(0xe537, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfd67);
        EXPECT(gbc.pc(), 0xe539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe537), 0xcb);
        EXPECT(gbc.readMem(0xe538), 0x58);
        // CB 58 0283
        gbc.setState(0x6eb4, 0xd3ac, 0x1b40, 0xba5f, 0x6ab5, 0x5b33, 0x0, 0x0);
        gbc.writeMem(0x6eb4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd3ac);
        EXPECT(gbc.pc(), 0x6eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0284
        gbc.setState(0xd98f, 0xb795, 0x91e0, 0x3ed1, 0xe783, 0x851b, 0x0, 0x1);
        gbc.writeMem(0xd98f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb795);
        EXPECT(gbc.pc(), 0xd991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98f), 0xcb);
        EXPECT(gbc.readMem(0xd990), 0x58);
        // CB 58 0285
        gbc.setState(0x945a, 0xecb5, 0x74d0, 0x39af, 0xf723, 0x11ff, 0x0, 0x0);
        gbc.writeMem(0x945a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xecb5);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945a), 0xcb);
        EXPECT(gbc.readMem(0x945b), 0x58);
        // CB 58 0286
        gbc.setState(0x54c0, 0x9e91, 0x5e20, 0xe986, 0x768b, 0xf43d, 0x1, 0x0);
        gbc.writeMem(0x54c0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9e91);
        EXPECT(gbc.pc(), 0x54c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0287
        gbc.setState(0x966e, 0x3bd0, 0xadd0, 0xf9a5, 0xb9d, 0xe8b, 0x0, 0x1);
        gbc.writeMem(0x966e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3bd0);
        EXPECT(gbc.pc(), 0x9670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966e), 0xcb);
        EXPECT(gbc.readMem(0x966f), 0x58);
        // CB 58 0288
        gbc.setState(0x479b, 0xde97, 0x6f30, 0x70d4, 0x3b0f, 0x6aff, 0x1, 0x0);
        gbc.writeMem(0x479b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xde97);
        EXPECT(gbc.pc(), 0x479d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0289
        gbc.setState(0x1f47, 0xe80d, 0xae40, 0xe244, 0xf28e, 0xbf56, 0x0, 0x1);
        gbc.writeMem(0x1f47, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe80d);
        EXPECT(gbc.pc(), 0x1f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 028A
        gbc.setState(0x8637, 0x5ad6, 0x5980, 0xc337, 0x2c77, 0x8912, 0x1, 0x1);
        gbc.writeMem(0x8637, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0x8639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8637), 0xcb);
        EXPECT(gbc.readMem(0x8638), 0x58);
        // CB 58 028B
        gbc.setState(0x618e, 0xd42e, 0xc570, 0xfee0, 0x4cae, 0x3e32, 0x0, 0x0);
        gbc.writeMem(0x618e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x6190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 028C
        gbc.setState(0x9098, 0x4132, 0x3ed0, 0x694b, 0x80dc, 0x7f7c, 0x1, 0x1);
        gbc.writeMem(0x9098, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4132);
        EXPECT(gbc.pc(), 0x909a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9098), 0xcb);
        EXPECT(gbc.readMem(0x9099), 0x58);
        // CB 58 028D
        gbc.setState(0x2d89, 0x21a1, 0xa670, 0x99f9, 0xec4f, 0xf7f6, 0x0, 0x1);
        gbc.writeMem(0x2d89, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0x2d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 028E
        gbc.setState(0x3677, 0x6ef2, 0x7be0, 0xb24b, 0xdc02, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0x3677, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6ef2);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 028F
        gbc.setState(0xc709, 0x1b13, 0x5330, 0x2796, 0x9304, 0x932d, 0x1, 0x0);
        gbc.writeMem(0xc709, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1b13);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc709), 0xcb);
        EXPECT(gbc.readMem(0xc70a), 0x58);
        // CB 58 0290
        gbc.setState(0xe77, 0xbcfe, 0x8c90, 0xf67, 0xa60d, 0x4a0f, 0x0, 0x1);
        gbc.writeMem(0xe77, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbcfe);
        EXPECT(gbc.pc(), 0xe79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0291
        gbc.setState(0x2e2, 0xb5c6, 0x99b0, 0x18a1, 0x946f, 0x4653, 0x1, 0x1);
        gbc.writeMem(0x2e2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb5c6);
        EXPECT(gbc.pc(), 0x2e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0292
        gbc.setState(0xc76d, 0x625c, 0x8010, 0x2bfc, 0x2ebd, 0x6152, 0x1, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x625c);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76d), 0xcb);
        EXPECT(gbc.readMem(0xc76e), 0x58);
        // CB 58 0293
        gbc.setState(0xa6fa, 0xee9c, 0xfc20, 0xc973, 0x758c, 0x4d67, 0x1, 0x1);
        gbc.writeMem(0xa6fa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0xa6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0xcb);
        EXPECT(gbc.readMem(0xa6fb), 0x58);
        // CB 58 0294
        gbc.setState(0xb95, 0xb3d5, 0x4510, 0xf44f, 0xae2, 0x8e47, 0x1, 0x0);
        gbc.writeMem(0xb95, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb3d5);
        EXPECT(gbc.pc(), 0xb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0295
        gbc.setState(0x1e73, 0xab19, 0xa930, 0x95d3, 0xfcd0, 0x2cd2, 0x1, 0x1);
        gbc.writeMem(0x1e73, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0x1e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0296
        gbc.setState(0xd020, 0x6df3, 0x5a40, 0xe039, 0x43aa, 0x69cd, 0x0, 0x0);
        gbc.writeMem(0xd020, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6df3);
        EXPECT(gbc.pc(), 0xd022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd020), 0xcb);
        EXPECT(gbc.readMem(0xd021), 0x58);
        // CB 58 0297
        gbc.setState(0xaacb, 0x991b, 0xe300, 0x82f8, 0x559e, 0xed4b, 0x1, 0x1);
        gbc.writeMem(0xaacb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x991b);
        EXPECT(gbc.pc(), 0xaacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaacb), 0xcb);
        EXPECT(gbc.readMem(0xaacc), 0x58);
        // CB 58 0299
        gbc.setState(0x28c4, 0x49f4, 0xe050, 0xd494, 0x704f, 0xb61b, 0x1, 0x0);
        gbc.writeMem(0x28c4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x49f4);
        EXPECT(gbc.pc(), 0x28c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 029A
        gbc.setState(0x1107, 0xf823, 0x2190, 0x859b, 0xa1d9, 0xcb50, 0x1, 0x1);
        gbc.writeMem(0x1107, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf823);
        EXPECT(gbc.pc(), 0x1109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 029B
        gbc.setState(0x6762, 0x307, 0xd630, 0x23e0, 0xbf12, 0x70fe, 0x1, 0x1);
        gbc.writeMem(0x6762, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x307);
        EXPECT(gbc.pc(), 0x6764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 029C
        gbc.setState(0xa9f4, 0xa229, 0x4050, 0xae61, 0x9620, 0x68f, 0x1, 0x0);
        gbc.writeMem(0xa9f4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa229);
        EXPECT(gbc.pc(), 0xa9f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f4), 0xcb);
        EXPECT(gbc.readMem(0xa9f5), 0x58);
        // CB 58 029E
        gbc.setState(0xa74a, 0x7f0b, 0xc830, 0x5a25, 0xdf05, 0xa745, 0x1, 0x0);
        gbc.writeMem(0xa74a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0xa74c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74a), 0xcb);
        EXPECT(gbc.readMem(0xa74b), 0x58);
        // CB 58 029F
        gbc.setState(0x839b, 0x4b2f, 0xcaf0, 0x1ce1, 0xc178, 0xb20a, 0x1, 0x1);
        gbc.writeMem(0x839b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4b2f);
        EXPECT(gbc.pc(), 0x839d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839b), 0xcb);
        EXPECT(gbc.readMem(0x839c), 0x58);
        // CB 58 02A0
        gbc.setState(0xe773, 0x6fe7, 0xd210, 0x3ed4, 0xea9a, 0xd8a, 0x0, 0x1);
        gbc.writeMem(0xe773, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6fe7);
        EXPECT(gbc.pc(), 0xe775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe773), 0xcb);
        EXPECT(gbc.readMem(0xe774), 0x58);
        // CB 58 02A1
        gbc.setState(0x75be, 0x89a5, 0x3fe0, 0x97a4, 0x3d30, 0x5b64, 0x1, 0x0);
        gbc.writeMem(0x75be, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x75c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02A2
        gbc.setState(0x73bb, 0x4d42, 0xb690, 0x29d6, 0x2893, 0x571d, 0x1, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4d42);
        EXPECT(gbc.pc(), 0x73bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02A3
        gbc.setState(0xafaa, 0x8c2e, 0xf390, 0x6ddd, 0x3209, 0xc668, 0x1, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0xafac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0xcb);
        EXPECT(gbc.readMem(0xafab), 0x58);
        // CB 58 02A4
        gbc.setState(0xdea7, 0xccb7, 0xadd0, 0x7a0a, 0x2fa0, 0x76fb, 0x0, 0x0);
        gbc.writeMem(0xdea7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0xdea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea7), 0xcb);
        EXPECT(gbc.readMem(0xdea8), 0x58);
        // CB 58 02A5
        gbc.setState(0x7f55, 0x4a08, 0x81b0, 0x26f5, 0xf1a3, 0x80aa, 0x0, 0x1);
        gbc.writeMem(0x7f55, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4a08);
        EXPECT(gbc.pc(), 0x7f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02A6
        gbc.setState(0xc726, 0xdc1c, 0x6b90, 0xdbea, 0x5a2c, 0xd6d6, 0x1, 0x1);
        gbc.writeMem(0xc726, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdc1c);
        EXPECT(gbc.pc(), 0xc728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc726), 0xcb);
        EXPECT(gbc.readMem(0xc727), 0x58);
        // CB 58 02A7
        gbc.setState(0x39df, 0x7ca3, 0x4940, 0x4b25, 0x59f1, 0xc4bd, 0x1, 0x0);
        gbc.writeMem(0x39df, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7ca3);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02A8
        gbc.setState(0x37f, 0x663b, 0xc170, 0x5ecb, 0x37ff, 0x5e98, 0x1, 0x0);
        gbc.writeMem(0x37f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x663b);
        EXPECT(gbc.pc(), 0x381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02A9
        gbc.setState(0x79ef, 0x6701, 0x6180, 0xfac3, 0x7277, 0x5f41, 0x1, 0x0);
        gbc.writeMem(0x79ef, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6701);
        EXPECT(gbc.pc(), 0x79f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02AA
        gbc.setState(0x9cbc, 0x23f8, 0xc050, 0x8229, 0x8c03, 0xf4a5, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x23f8);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0x58);
        // CB 58 02AB
        gbc.setState(0xc578, 0xf5, 0x2a20, 0xc7b2, 0xf3c7, 0xf9c7, 0x0, 0x1);
        gbc.writeMem(0xc578, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf5);
        EXPECT(gbc.pc(), 0xc57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc578), 0xcb);
        EXPECT(gbc.readMem(0xc579), 0x58);
        // CB 58 02AC
        gbc.setState(0x9f1, 0xd7fd, 0x3ab0, 0x747c, 0x49cc, 0x408b, 0x0, 0x0);
        gbc.writeMem(0x9f1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd7fd);
        EXPECT(gbc.pc(), 0x9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02AD
        gbc.setState(0x3a37, 0xc362, 0xba50, 0x31ab, 0x61bf, 0xc1cd, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc362);
        EXPECT(gbc.pc(), 0x3a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02AE
        gbc.setState(0xc8aa, 0xa59c, 0x9c10, 0x8fd9, 0x7be5, 0x8673, 0x0, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa59c);
        EXPECT(gbc.pc(), 0xc8ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8aa), 0xcb);
        EXPECT(gbc.readMem(0xc8ab), 0x58);
        // CB 58 02AF
        gbc.setState(0xe744, 0x4833, 0xb530, 0x73d0, 0x6bdf, 0xf9b2, 0x0, 0x0);
        gbc.writeMem(0xe744, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4833);
        EXPECT(gbc.pc(), 0xe746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe744), 0xcb);
        EXPECT(gbc.readMem(0xe745), 0x58);
        // CB 58 02B0
        gbc.setState(0x625a, 0xf3f3, 0x4100, 0x9234, 0xe173, 0x28, 0x0, 0x0);
        gbc.writeMem(0x625a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf3f3);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02B1
        gbc.setState(0x64c1, 0xd491, 0xb420, 0x5baf, 0xae42, 0x9758, 0x1, 0x0);
        gbc.writeMem(0x64c1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd491);
        EXPECT(gbc.pc(), 0x64c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02B2
        gbc.setState(0xa7cc, 0xa8be, 0x6320, 0x17ea, 0x6881, 0x50a9, 0x1, 0x1);
        gbc.writeMem(0xa7cc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa8be);
        EXPECT(gbc.pc(), 0xa7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7cc), 0xcb);
        EXPECT(gbc.readMem(0xa7cd), 0x58);
        // CB 58 02B3
        gbc.setState(0xc6b6, 0x16c2, 0xff20, 0xaafb, 0x65d0, 0x915c, 0x0, 0x0);
        gbc.writeMem(0xc6b6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x16c2);
        EXPECT(gbc.pc(), 0xc6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b6), 0xcb);
        EXPECT(gbc.readMem(0xc6b7), 0x58);
        // CB 58 02B4
        gbc.setState(0xec5a, 0xbab9, 0xb1d0, 0xf623, 0x744b, 0x52e2, 0x1, 0x0);
        gbc.writeMem(0xec5a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbab9);
        EXPECT(gbc.pc(), 0xec5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5a), 0xcb);
        EXPECT(gbc.readMem(0xec5b), 0x58);
        // CB 58 02B5
        gbc.setState(0x40fd, 0x3651, 0x3210, 0xf60a, 0x6a33, 0xfd2c, 0x0, 0x1);
        gbc.writeMem(0x40fd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3651);
        EXPECT(gbc.pc(), 0x40ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02B7
        gbc.setState(0xb5f5, 0x6d04, 0x34e0, 0x2d05, 0xc554, 0x1820, 0x0, 0x1);
        gbc.writeMem(0xb5f5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6d04);
        EXPECT(gbc.pc(), 0xb5f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f5), 0xcb);
        EXPECT(gbc.readMem(0xb5f6), 0x58);
        // CB 58 02B8
        gbc.setState(0x3ecd, 0x8df, 0x8080, 0xb1b8, 0x7ec2, 0x15f, 0x1, 0x0);
        gbc.writeMem(0x3ecd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8df);
        EXPECT(gbc.pc(), 0x3ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02B9
        gbc.setState(0xbb23, 0x6ad5, 0xaff0, 0x8cb, 0xc2c1, 0x9f3, 0x0, 0x1);
        gbc.writeMem(0xbb23, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6ad5);
        EXPECT(gbc.pc(), 0xbb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb23), 0xcb);
        EXPECT(gbc.readMem(0xbb24), 0x58);
        // CB 58 02BA
        gbc.setState(0x4727, 0xf190, 0xaab0, 0x6b5f, 0x7faa, 0x6a35, 0x0, 0x0);
        gbc.writeMem(0x4727, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf190);
        EXPECT(gbc.pc(), 0x4729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02BB
        gbc.setState(0x3d19, 0x6c62, 0x2eb0, 0xfde6, 0xeb8e, 0x2209, 0x0, 0x1);
        gbc.writeMem(0x3d19, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6c62);
        EXPECT(gbc.pc(), 0x3d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02BC
        gbc.setState(0x4367, 0xd39e, 0x3420, 0x6b56, 0xe55e, 0x2745, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd39e);
        EXPECT(gbc.pc(), 0x4369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02BD
        gbc.setState(0xea43, 0xc098, 0x24e0, 0x59f1, 0xfcdd, 0x435a, 0x0, 0x0);
        gbc.writeMem(0xea43, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc098);
        EXPECT(gbc.pc(), 0xea45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea43), 0xcb);
        EXPECT(gbc.readMem(0xea44), 0x58);
        // CB 58 02BE
        gbc.setState(0xc28a, 0x6211, 0xe630, 0x688a, 0x12e9, 0x55ce, 0x1, 0x0);
        gbc.writeMem(0xc28a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6211);
        EXPECT(gbc.pc(), 0xc28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc28a), 0xcb);
        EXPECT(gbc.readMem(0xc28b), 0x58);
        // CB 58 02BF
        gbc.setState(0x2d6a, 0xefd7, 0x8860, 0x2914, 0xab62, 0xe463, 0x0, 0x0);
        gbc.writeMem(0x2d6a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xefd7);
        EXPECT(gbc.pc(), 0x2d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02C1
        gbc.setState(0x6687, 0x2fa9, 0x4ca0, 0x3320, 0xe0e8, 0x9796, 0x0, 0x0);
        gbc.writeMem(0x6687, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2fa9);
        EXPECT(gbc.pc(), 0x6689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02C2
        gbc.setState(0x50eb, 0x6d5d, 0x290, 0x6aee, 0xd1fe, 0x6596, 0x1, 0x0);
        gbc.writeMem(0x50eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6d5d);
        EXPECT(gbc.pc(), 0x50ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02C3
        gbc.setState(0x304e, 0xa178, 0x840, 0x800, 0xc8d8, 0x6c1f, 0x1, 0x1);
        gbc.writeMem(0x304e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa178);
        EXPECT(gbc.pc(), 0x3050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02C4
        gbc.setState(0xb894, 0x8c4, 0x3770, 0x39c2, 0x230a, 0xc2e3, 0x1, 0x0);
        gbc.writeMem(0xb894, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8c4);
        EXPECT(gbc.pc(), 0xb896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb894), 0xcb);
        EXPECT(gbc.readMem(0xb895), 0x58);
        // CB 58 02C5
        gbc.setState(0x70e, 0xea90, 0xdac0, 0x1c68, 0x57c6, 0xe769, 0x0, 0x0);
        gbc.writeMem(0x70e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xea90);
        EXPECT(gbc.pc(), 0x710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02C6
        gbc.setState(0x66f8, 0xc72c, 0xba50, 0x1593, 0xf12e, 0xa1ac, 0x0, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc72c);
        EXPECT(gbc.pc(), 0x66fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02C7
        gbc.setState(0x52b6, 0x540d, 0x930, 0x136d, 0xbe0a, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0x52b6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x540d);
        EXPECT(gbc.pc(), 0x52b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02C8
        gbc.setState(0x747a, 0x9122, 0xbb30, 0x6263, 0x220e, 0xf9a2, 0x1, 0x1);
        gbc.writeMem(0x747a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9122);
        EXPECT(gbc.pc(), 0x747c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02C9
        gbc.setState(0x266f, 0x44da, 0xfb90, 0x9d91, 0xa81, 0x5b70, 0x0, 0x0);
        gbc.writeMem(0x266f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x44da);
        EXPECT(gbc.pc(), 0x2671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02CA
        gbc.setState(0x793b, 0x602f, 0x27c0, 0x46d4, 0x2526, 0x5fb4, 0x1, 0x0);
        gbc.writeMem(0x793b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x602f);
        EXPECT(gbc.pc(), 0x793d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02CB
        gbc.setState(0x9b4c, 0xb7fd, 0x6d60, 0x1fba, 0xe75f, 0x57d3, 0x1, 0x0);
        gbc.writeMem(0x9b4c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb7fd);
        EXPECT(gbc.pc(), 0x9b4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4c), 0xcb);
        EXPECT(gbc.readMem(0x9b4d), 0x58);
        // CB 58 02CD
        gbc.setState(0x7d43, 0xd866, 0x1b40, 0xf32c, 0x8cfd, 0xd521, 0x0, 0x0);
        gbc.writeMem(0x7d43, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd866);
        EXPECT(gbc.pc(), 0x7d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02CE
        gbc.setState(0xdeae, 0x767a, 0x8c70, 0xc0ed, 0x6d94, 0x5fe3, 0x1, 0x1);
        gbc.writeMem(0xdeae, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x767a);
        EXPECT(gbc.pc(), 0xdeb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeae), 0xcb);
        EXPECT(gbc.readMem(0xdeaf), 0x58);
        // CB 58 02CF
        gbc.setState(0x8ade, 0x9f01, 0x1a90, 0x956e, 0x1a37, 0xf311, 0x0, 0x0);
        gbc.writeMem(0x8ade, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9f01);
        EXPECT(gbc.pc(), 0x8ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ade), 0xcb);
        EXPECT(gbc.readMem(0x8adf), 0x58);
        // CB 58 02D0
        gbc.setState(0x64f0, 0xfbcc, 0x4b90, 0x9dc8, 0x665e, 0x28b5, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfbcc);
        EXPECT(gbc.pc(), 0x64f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02D1
        gbc.setState(0x682e, 0x5a36, 0xff90, 0x1391, 0xab69, 0x45ec, 0x0, 0x0);
        gbc.writeMem(0x682e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5a36);
        EXPECT(gbc.pc(), 0x6830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02D2
        gbc.setState(0x3ebe, 0x5dac, 0xff40, 0x3601, 0x241c, 0x1e23, 0x0, 0x1);
        gbc.writeMem(0x3ebe, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5dac);
        EXPECT(gbc.pc(), 0x3ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02D3
        gbc.setState(0x1b0a, 0xb461, 0x5470, 0x7489, 0x96bd, 0xd1c8, 0x1, 0x0);
        gbc.writeMem(0x1b0a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb461);
        EXPECT(gbc.pc(), 0x1b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02D4
        gbc.setState(0xd0b3, 0x3058, 0x71b0, 0x70df, 0xb153, 0xf1fb, 0x0, 0x1);
        gbc.writeMem(0xd0b3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3058);
        EXPECT(gbc.pc(), 0xd0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b3), 0xcb);
        EXPECT(gbc.readMem(0xd0b4), 0x58);
        // CB 58 02D5
        gbc.setState(0xc853, 0xe2c0, 0x9b40, 0xc0b7, 0x464c, 0x8523, 0x0, 0x0);
        gbc.writeMem(0xc853, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0xc855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc853), 0xcb);
        EXPECT(gbc.readMem(0xc854), 0x58);
        // CB 58 02D6
        gbc.setState(0xe046, 0xab9b, 0x6c10, 0x8cac, 0xe5e9, 0x10e1, 0x1, 0x1);
        gbc.writeMem(0xe046, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xab9b);
        EXPECT(gbc.pc(), 0xe048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe046), 0xcb);
        EXPECT(gbc.readMem(0xe047), 0x58);
        // CB 58 02D7
        gbc.setState(0x4366, 0xc9e1, 0xe1a0, 0x6226, 0x6d2f, 0xc4ff, 0x0, 0x0);
        gbc.writeMem(0x4366, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc9e1);
        EXPECT(gbc.pc(), 0x4368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02D8
        gbc.setState(0x840a, 0x1f49, 0x41b0, 0x5110, 0x5f92, 0x4b29, 0x0, 0x1);
        gbc.writeMem(0x840a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1f49);
        EXPECT(gbc.pc(), 0x840c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840a), 0xcb);
        EXPECT(gbc.readMem(0x840b), 0x58);
        // CB 58 02D9
        gbc.setState(0x19c9, 0x5f31, 0x98f0, 0xfc98, 0x37be, 0xc97, 0x0, 0x1);
        gbc.writeMem(0x19c9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5f31);
        EXPECT(gbc.pc(), 0x19cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02DA
        gbc.setState(0xd24, 0xf15, 0xa7d0, 0x793b, 0x68c0, 0xa33c, 0x0, 0x1);
        gbc.writeMem(0xd24, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf15);
        EXPECT(gbc.pc(), 0xd26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02DB
        gbc.setState(0x5978, 0x609b, 0x9940, 0x2173, 0x18aa, 0x6a17, 0x0, 0x0);
        gbc.writeMem(0x5978, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x609b);
        EXPECT(gbc.pc(), 0x597a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02DC
        gbc.setState(0x2f2, 0x6833, 0x5bd0, 0x189a, 0xbe3c, 0x87f3, 0x1, 0x1);
        gbc.writeMem(0x2f2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6833);
        EXPECT(gbc.pc(), 0x2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02DD
        gbc.setState(0x17ce, 0xbd9c, 0x8de0, 0x20a1, 0x658d, 0x429b, 0x1, 0x0);
        gbc.writeMem(0x17ce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbd9c);
        EXPECT(gbc.pc(), 0x17d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02DF
        gbc.setState(0x7a9e, 0xa8, 0x2c10, 0xdaed, 0x547d, 0x45f8, 0x1, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa8);
        EXPECT(gbc.pc(), 0x7aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02E0
        gbc.setState(0x4810, 0x6f3d, 0x5c50, 0x8c77, 0xaf42, 0xbcc1, 0x0, 0x1);
        gbc.writeMem(0x4810, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f3d);
        EXPECT(gbc.pc(), 0x4812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02E2
        gbc.setState(0x3629, 0xec51, 0x91d0, 0x5b7b, 0x5d6a, 0xf00d, 0x1, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xec51);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02E3
        gbc.setState(0xd775, 0x96b, 0x8610, 0x87f7, 0xebd7, 0xed64, 0x0, 0x1);
        gbc.writeMem(0xd775, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x96b);
        EXPECT(gbc.pc(), 0xd777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd775), 0xcb);
        EXPECT(gbc.readMem(0xd776), 0x58);
        // CB 58 02E4
        gbc.setState(0x5a4a, 0x21ed, 0x4fa0, 0x4000, 0x30ad, 0xc2c4, 0x1, 0x0);
        gbc.writeMem(0x5a4a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x21ed);
        EXPECT(gbc.pc(), 0x5a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02E5
        gbc.setState(0xd6d1, 0x1f03, 0x5330, 0x8c5d, 0x1414, 0xd522, 0x0, 0x0);
        gbc.writeMem(0xd6d1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1f03);
        EXPECT(gbc.pc(), 0xd6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d1), 0xcb);
        EXPECT(gbc.readMem(0xd6d2), 0x58);
        // CB 58 02E6
        gbc.setState(0xa4ba, 0xfacf, 0xbbd0, 0xe209, 0x7242, 0x833d, 0x1, 0x0);
        gbc.writeMem(0xa4ba, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfacf);
        EXPECT(gbc.pc(), 0xa4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ba), 0xcb);
        EXPECT(gbc.readMem(0xa4bb), 0x58);
        // CB 58 02E7
        gbc.setState(0x8810, 0x9f0, 0x9770, 0x95d2, 0x200c, 0xa72d, 0x1, 0x0);
        gbc.writeMem(0x8810, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9f0);
        EXPECT(gbc.pc(), 0x8812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8810), 0xcb);
        EXPECT(gbc.readMem(0x8811), 0x58);
        // CB 58 02E8
        gbc.setState(0x6c3c, 0xc72c, 0x2b40, 0x93a1, 0x43e8, 0x31bd, 0x0, 0x1);
        gbc.writeMem(0x6c3c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc72c);
        EXPECT(gbc.pc(), 0x6c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02E9
        gbc.setState(0x9382, 0x483c, 0xc4c0, 0xe723, 0x1c0b, 0x6852, 0x0, 0x0);
        gbc.writeMem(0x9382, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0x9384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9382), 0xcb);
        EXPECT(gbc.readMem(0x9383), 0x58);
        // CB 58 02EA
        gbc.setState(0x82bf, 0x9e0b, 0xf5b0, 0x50eb, 0xe325, 0xab82, 0x0, 0x1);
        gbc.writeMem(0x82bf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9e0b);
        EXPECT(gbc.pc(), 0x82c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bf), 0xcb);
        EXPECT(gbc.readMem(0x82c0), 0x58);
        // CB 58 02EB
        gbc.setState(0xb019, 0xbd64, 0xbf00, 0xfb0d, 0xf548, 0x12a3, 0x0, 0x0);
        gbc.writeMem(0xb019, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbd64);
        EXPECT(gbc.pc(), 0xb01b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb019), 0xcb);
        EXPECT(gbc.readMem(0xb01a), 0x58);
        // CB 58 02EC
        gbc.setState(0xb70, 0xd6b9, 0x7160, 0x3a21, 0xf014, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0xb70, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd6b9);
        EXPECT(gbc.pc(), 0xb72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02ED
        gbc.setState(0xdfc4, 0xec59, 0x2290, 0x9eef, 0x1e20, 0xe7cc, 0x1, 0x1);
        gbc.writeMem(0xdfc4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xec59);
        EXPECT(gbc.pc(), 0xdfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc4), 0xcb);
        EXPECT(gbc.readMem(0xdfc5), 0x58);
        // CB 58 02EE
        gbc.setState(0x94db, 0xb432, 0xc310, 0x63d5, 0x856d, 0x4ce4, 0x1, 0x0);
        gbc.writeMem(0x94db, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb432);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94db), 0xcb);
        EXPECT(gbc.readMem(0x94dc), 0x58);
        // CB 58 02F0
        gbc.setState(0x5c1f, 0xb4e6, 0xb3d0, 0x4c16, 0xbc08, 0xdfa1, 0x0, 0x0);
        gbc.writeMem(0x5c1f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb4e6);
        EXPECT(gbc.pc(), 0x5c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02F1
        gbc.setState(0x1ff9, 0x8f4e, 0x42a0, 0xb067, 0x3bdc, 0x2c9e, 0x0, 0x0);
        gbc.writeMem(0x1ff9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8f4e);
        EXPECT(gbc.pc(), 0x1ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02F2
        gbc.setState(0x439d, 0xa70d, 0xeef0, 0xe28, 0xd0d, 0x1cc1, 0x0, 0x0);
        gbc.writeMem(0x439d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa70d);
        EXPECT(gbc.pc(), 0x439f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02F3
        gbc.setState(0x40c3, 0xd178, 0xed40, 0x779b, 0x545e, 0xfb36, 0x1, 0x0);
        gbc.writeMem(0x40c3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd178);
        EXPECT(gbc.pc(), 0x40c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02F4
        gbc.setState(0xc01d, 0x9c65, 0x5f40, 0xf214, 0xdc84, 0xc091, 0x0, 0x0);
        gbc.writeMem(0xc01d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9c65);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01d), 0xcb);
        EXPECT(gbc.readMem(0xc01e), 0x58);
        // CB 58 02F5
        gbc.setState(0x7425, 0x8d5b, 0x7bb0, 0x61f8, 0x9e2e, 0x39ff, 0x1, 0x1);
        gbc.writeMem(0x7425, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8d5b);
        EXPECT(gbc.pc(), 0x7427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02F6
        gbc.setState(0x7a1a, 0xc3ad, 0xd8d0, 0xf298, 0xa83e, 0xcc43, 0x0, 0x0);
        gbc.writeMem(0x7a1a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc3ad);
        EXPECT(gbc.pc(), 0x7a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 02F7
        gbc.setState(0x95ab, 0xde65, 0x6580, 0x3134, 0xafdc, 0x7fcb, 0x0, 0x0);
        gbc.writeMem(0x95ab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0x95ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ab), 0xcb);
        EXPECT(gbc.readMem(0x95ac), 0x58);
        // CB 58 02F8
        gbc.setState(0xd566, 0xb91f, 0xa250, 0xe6cf, 0xe037, 0xcf2e, 0x1, 0x1);
        gbc.writeMem(0xd566, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb91f);
        EXPECT(gbc.pc(), 0xd568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd566), 0xcb);
        EXPECT(gbc.readMem(0xd567), 0x58);
        // CB 58 02F9
        gbc.setState(0xed3b, 0x1d89, 0xe010, 0xaf76, 0x5d81, 0xb6a2, 0x1, 0x0);
        gbc.writeMem(0xed3b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1d89);
        EXPECT(gbc.pc(), 0xed3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3b), 0xcb);
        EXPECT(gbc.readMem(0xed3c), 0x58);
        // CB 58 02FA
        gbc.setState(0xb245, 0xa8d2, 0x4660, 0x4dbe, 0xf934, 0x5e04, 0x1, 0x0);
        gbc.writeMem(0xb245, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa8d2);
        EXPECT(gbc.pc(), 0xb247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb245), 0xcb);
        EXPECT(gbc.readMem(0xb246), 0x58);
        // CB 58 02FB
        gbc.setState(0xa24d, 0xc13b, 0x4960, 0x8a14, 0xaa27, 0x5615, 0x0, 0x0);
        gbc.writeMem(0xa24d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc13b);
        EXPECT(gbc.pc(), 0xa24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24d), 0xcb);
        EXPECT(gbc.readMem(0xa24e), 0x58);
        // CB 58 02FC
        gbc.setState(0xb7ca, 0xb3d3, 0xb780, 0xd0fe, 0xfb35, 0xf594, 0x1, 0x1);
        gbc.writeMem(0xb7ca, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb3d3);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ca), 0xcb);
        EXPECT(gbc.readMem(0xb7cb), 0x58);
        // CB 58 02FD
        gbc.setState(0x90eb, 0xe1a0, 0xd420, 0xbe24, 0xb104, 0xdcb3, 0x0, 0x1);
        gbc.writeMem(0x90eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe1a0);
        EXPECT(gbc.pc(), 0x90ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90eb), 0xcb);
        EXPECT(gbc.readMem(0x90ec), 0x58);
        // CB 58 02FE
        gbc.setState(0xca8, 0xea3, 0x5b40, 0xb737, 0xabb4, 0xd8c4, 0x0, 0x1);
        gbc.writeMem(0xca8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xea3);
        EXPECT(gbc.pc(), 0xcaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 02FF
        gbc.setState(0x5b23, 0x6a29, 0x7160, 0x8689, 0xf6a, 0x16f9, 0x1, 0x0);
        gbc.writeMem(0x5b23, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6a29);
        EXPECT(gbc.pc(), 0x5b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0300
        gbc.setState(0x91da, 0x939d, 0xdd60, 0x6f2c, 0x7388, 0xb7df, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x939d);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0x58);
        // CB 58 0301
        gbc.setState(0x1459, 0x9a2b, 0xf360, 0xbf8f, 0x105e, 0x1630, 0x1, 0x1);
        gbc.writeMem(0x1459, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9a2b);
        EXPECT(gbc.pc(), 0x145b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0302
        gbc.setState(0x2c12, 0x40db, 0x8840, 0x1dd9, 0x3006, 0xa022, 0x0, 0x0);
        gbc.writeMem(0x2c12, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x40db);
        EXPECT(gbc.pc(), 0x2c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0303
        gbc.setState(0x5c05, 0x9752, 0x9ec0, 0xc7f7, 0xd80c, 0x879d, 0x1, 0x0);
        gbc.writeMem(0x5c05, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9752);
        EXPECT(gbc.pc(), 0x5c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0304
        gbc.setState(0x489b, 0x9d06, 0xadf0, 0xa050, 0x6d75, 0x6d50, 0x0, 0x1);
        gbc.writeMem(0x489b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9d06);
        EXPECT(gbc.pc(), 0x489d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0305
        gbc.setState(0x988c, 0xfb5d, 0xc4a0, 0xdc7f, 0x2744, 0xfe41, 0x0, 0x0);
        gbc.writeMem(0x988c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfb5d);
        EXPECT(gbc.pc(), 0x988e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988c), 0xcb);
        EXPECT(gbc.readMem(0x988d), 0x58);
        // CB 58 0306
        gbc.setState(0x4ad6, 0xbf19, 0xd120, 0x342f, 0xf7d7, 0xaf5d, 0x0, 0x1);
        gbc.writeMem(0x4ad6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbf19);
        EXPECT(gbc.pc(), 0x4ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0307
        gbc.setState(0xb232, 0xa105, 0xb4c0, 0x2b4d, 0xe4ba, 0x86e2, 0x0, 0x1);
        gbc.writeMem(0xb232, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa105);
        EXPECT(gbc.pc(), 0xb234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb232), 0xcb);
        EXPECT(gbc.readMem(0xb233), 0x58);
        // CB 58 0308
        gbc.setState(0x5cc, 0xea74, 0xb3a0, 0xe04e, 0xa896, 0xe3db, 0x1, 0x1);
        gbc.writeMem(0x5cc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xea74);
        EXPECT(gbc.pc(), 0x5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0309
        gbc.setState(0xb530, 0xca29, 0x19b0, 0x7a57, 0xb62, 0xf470, 0x0, 0x1);
        gbc.writeMem(0xb530, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xca29);
        EXPECT(gbc.pc(), 0xb532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb530), 0xcb);
        EXPECT(gbc.readMem(0xb531), 0x58);
        // CB 58 030A
        gbc.setState(0x2232, 0x2cdd, 0xae0, 0x76dd, 0xf101, 0x9576, 0x1, 0x0);
        gbc.writeMem(0x2232, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2cdd);
        EXPECT(gbc.pc(), 0x2234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 030C
        gbc.setState(0xbee2, 0x5e3b, 0x5a00, 0x5d09, 0xfbc0, 0xa54a, 0x0, 0x0);
        gbc.writeMem(0xbee2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5e3b);
        EXPECT(gbc.pc(), 0xbee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbee2), 0xcb);
        EXPECT(gbc.readMem(0xbee3), 0x58);
        // CB 58 030D
        gbc.setState(0xa069, 0x48fa, 0x77c0, 0x3226, 0x21b4, 0x89d5, 0x0, 0x0);
        gbc.writeMem(0xa069, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x48fa);
        EXPECT(gbc.pc(), 0xa06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa069), 0xcb);
        EXPECT(gbc.readMem(0xa06a), 0x58);
        // CB 58 030E
        gbc.setState(0x6cde, 0x5105, 0x9b80, 0x9cdc, 0xdf0f, 0x798a, 0x1, 0x1);
        gbc.writeMem(0x6cde, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5105);
        EXPECT(gbc.pc(), 0x6ce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 030F
        gbc.setState(0x9958, 0xb3f0, 0x49e0, 0xc73f, 0xcd5f, 0x1f5c, 0x0, 0x1);
        gbc.writeMem(0x9958, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb3f0);
        EXPECT(gbc.pc(), 0x995a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9958), 0xcb);
        EXPECT(gbc.readMem(0x9959), 0x58);
        // CB 58 0310
        gbc.setState(0x6145, 0x7f6e, 0x38f0, 0xbbc0, 0x1a7a, 0xd4d5, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f6e);
        EXPECT(gbc.pc(), 0x6147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0311
        gbc.setState(0x9506, 0xd458, 0x4b60, 0xf8fb, 0x809d, 0x8f35, 0x0, 0x0);
        gbc.writeMem(0x9506, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0x9508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9506), 0xcb);
        EXPECT(gbc.readMem(0x9507), 0x58);
        // CB 58 0312
        gbc.setState(0xabb, 0xeceb, 0xf0, 0xe756, 0x3b0e, 0xab0f, 0x0, 0x0);
        gbc.writeMem(0xabb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xeceb);
        EXPECT(gbc.pc(), 0xabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0313
        gbc.setState(0x1091, 0x293e, 0xaed0, 0x9467, 0xa865, 0x19b9, 0x0, 0x1);
        gbc.writeMem(0x1091, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0314
        gbc.setState(0x8103, 0x7452, 0x9b70, 0x3542, 0x78e8, 0xa928, 0x0, 0x1);
        gbc.writeMem(0x8103, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7452);
        EXPECT(gbc.pc(), 0x8105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8103), 0xcb);
        EXPECT(gbc.readMem(0x8104), 0x58);
        // CB 58 0316
        gbc.setState(0xd323, 0xc2e4, 0xf230, 0x5ac4, 0x80cf, 0xce05, 0x1, 0x1);
        gbc.writeMem(0xd323, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc2e4);
        EXPECT(gbc.pc(), 0xd325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd323), 0xcb);
        EXPECT(gbc.readMem(0xd324), 0x58);
        // CB 58 0317
        gbc.setState(0x8777, 0x8900, 0x7c40, 0x56bc, 0xf709, 0x1047, 0x1, 0x1);
        gbc.writeMem(0x8777, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8900);
        EXPECT(gbc.pc(), 0x8779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8777), 0xcb);
        EXPECT(gbc.readMem(0x8778), 0x58);
        // CB 58 0318
        gbc.setState(0x20d, 0xbd72, 0xd20, 0x39da, 0xf5b5, 0xd8f3, 0x0, 0x0);
        gbc.writeMem(0x20d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd72);
        EXPECT(gbc.pc(), 0x20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0319
        gbc.setState(0x748c, 0xfe0, 0x5620, 0x6f3d, 0x9e95, 0xee4c, 0x0, 0x1);
        gbc.writeMem(0x748c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfe0);
        EXPECT(gbc.pc(), 0x748e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 031A
        gbc.setState(0x424c, 0x82b1, 0x30, 0xb268, 0x110a, 0x5e3, 0x1, 0x0);
        gbc.writeMem(0x424c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x82b1);
        EXPECT(gbc.pc(), 0x424e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 031B
        gbc.setState(0xeaf8, 0x68f3, 0x780, 0x51d9, 0x6bc7, 0x4f03, 0x0, 0x1);
        gbc.writeMem(0xeaf8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x68f3);
        EXPECT(gbc.pc(), 0xeafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf8), 0xcb);
        EXPECT(gbc.readMem(0xeaf9), 0x58);
        // CB 58 031C
        gbc.setState(0xcfc9, 0xdd33, 0x6d30, 0x5d34, 0xc813, 0xfdc7, 0x0, 0x1);
        gbc.writeMem(0xcfc9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdd33);
        EXPECT(gbc.pc(), 0xcfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc9), 0xcb);
        EXPECT(gbc.readMem(0xcfca), 0x58);
        // CB 58 031D
        gbc.setState(0x5ca4, 0xf0fe, 0x77f0, 0x379, 0x8a79, 0x6a7a, 0x0, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf0fe);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 031E
        gbc.setState(0x5955, 0x4d8f, 0xcac0, 0x14aa, 0x3b06, 0xfb42, 0x1, 0x0);
        gbc.writeMem(0x5955, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4d8f);
        EXPECT(gbc.pc(), 0x5957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 031F
        gbc.setState(0x8752, 0x4734, 0xd280, 0xa575, 0xec10, 0xf472, 0x1, 0x1);
        gbc.writeMem(0x8752, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4734);
        EXPECT(gbc.pc(), 0x8754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8752), 0xcb);
        EXPECT(gbc.readMem(0x8753), 0x58);
        // CB 58 0320
        gbc.setState(0x8c1c, 0x67f8, 0x4c30, 0x7de7, 0x2d9f, 0x9430, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x67f8);
        EXPECT(gbc.pc(), 0x8c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1c), 0xcb);
        EXPECT(gbc.readMem(0x8c1d), 0x58);
        // CB 58 0321
        gbc.setState(0x9fbf, 0xa8ff, 0x4460, 0xccb7, 0x19a, 0x784e, 0x0, 0x0);
        gbc.writeMem(0x9fbf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa8ff);
        EXPECT(gbc.pc(), 0x9fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbf), 0xcb);
        EXPECT(gbc.readMem(0x9fc0), 0x58);
        // CB 58 0322
        gbc.setState(0xef2f, 0x84fb, 0x1520, 0x35ac, 0xb331, 0x37aa, 0x0, 0x1);
        gbc.writeMem(0xef2f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x84fb);
        EXPECT(gbc.pc(), 0xef31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2f), 0xcb);
        EXPECT(gbc.readMem(0xef30), 0x58);
        // CB 58 0323
        gbc.setState(0x6059, 0x9476, 0xf400, 0x5aa5, 0xf451, 0x6a46, 0x1, 0x0);
        gbc.writeMem(0x6059, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9476);
        EXPECT(gbc.pc(), 0x605b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0324
        gbc.setState(0x63c, 0x1f0f, 0x2230, 0xbbc7, 0xed8e, 0x7640, 0x1, 0x1);
        gbc.writeMem(0x63c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1f0f);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0325
        gbc.setState(0x60d1, 0xb2ff, 0x5f40, 0x368f, 0x5fc3, 0x2075, 0x1, 0x1);
        gbc.writeMem(0x60d1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb2ff);
        EXPECT(gbc.pc(), 0x60d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0326
        gbc.setState(0x8c3e, 0xb8b0, 0xf790, 0xb863, 0x702c, 0x8c42, 0x0, 0x0);
        gbc.writeMem(0x8c3e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb8b0);
        EXPECT(gbc.pc(), 0x8c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3e), 0xcb);
        EXPECT(gbc.readMem(0x8c3f), 0x58);
        // CB 58 0327
        gbc.setState(0xc537, 0xdd1f, 0xbb80, 0xdd67, 0x7be7, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0xc537, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdd1f);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc537), 0xcb);
        EXPECT(gbc.readMem(0xc538), 0x58);
        // CB 58 0328
        gbc.setState(0x1ad8, 0xd536, 0xf6b0, 0xa025, 0xed94, 0x20f, 0x1, 0x1);
        gbc.writeMem(0x1ad8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd536);
        EXPECT(gbc.pc(), 0x1ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0329
        gbc.setState(0x3352, 0x44fe, 0x55b0, 0xd6a0, 0xb95c, 0xbc0b, 0x1, 0x0);
        gbc.writeMem(0x3352, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x44fe);
        EXPECT(gbc.pc(), 0x3354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 032A
        gbc.setState(0xab37, 0x7a36, 0xda70, 0xfca2, 0x5d51, 0xd072, 0x1, 0x1);
        gbc.writeMem(0xab37, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7a36);
        EXPECT(gbc.pc(), 0xab39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab37), 0xcb);
        EXPECT(gbc.readMem(0xab38), 0x58);
        // CB 58 032B
        gbc.setState(0x38e5, 0xaf99, 0x16c0, 0x5073, 0x765c, 0x7f29, 0x1, 0x0);
        gbc.writeMem(0x38e5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xaf99);
        EXPECT(gbc.pc(), 0x38e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 032C
        gbc.setState(0x47ec, 0xadba, 0x6dc0, 0xf766, 0xb3a8, 0xec23, 0x1, 0x0);
        gbc.writeMem(0x47ec, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xadba);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 032D
        gbc.setState(0x463a, 0xd3af, 0x43d0, 0x131a, 0x220d, 0x8ba7, 0x1, 0x0);
        gbc.writeMem(0x463a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd3af);
        EXPECT(gbc.pc(), 0x463c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 032E
        gbc.setState(0xbe1f, 0xbfb9, 0x1700, 0xb842, 0xbf9a, 0xad1a, 0x0, 0x0);
        gbc.writeMem(0xbe1f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0xbe21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe1f), 0xcb);
        EXPECT(gbc.readMem(0xbe20), 0x58);
        // CB 58 032F
        gbc.setState(0x391e, 0xcd6b, 0xe4a0, 0x2585, 0xdc33, 0xdd9d, 0x1, 0x1);
        gbc.writeMem(0x391e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcd6b);
        EXPECT(gbc.pc(), 0x3920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0330
        gbc.setState(0x8442, 0xb54f, 0x4890, 0xf844, 0xadf6, 0x389, 0x0, 0x1);
        gbc.writeMem(0x8442, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0x8444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8442), 0xcb);
        EXPECT(gbc.readMem(0x8443), 0x58);
        // CB 58 0331
        gbc.setState(0x8923, 0x4285, 0x3590, 0x337e, 0xb2b6, 0xa003, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4285);
        EXPECT(gbc.pc(), 0x8925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8923), 0xcb);
        EXPECT(gbc.readMem(0x8924), 0x58);
        // CB 58 0332
        gbc.setState(0x924f, 0xfe41, 0xbea0, 0xae9c, 0x9830, 0xefa2, 0x0, 0x0);
        gbc.writeMem(0x924f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfe41);
        EXPECT(gbc.pc(), 0x9251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924f), 0xcb);
        EXPECT(gbc.readMem(0x9250), 0x58);
        // CB 58 0333
        gbc.setState(0xb5a2, 0xafc1, 0xc2a0, 0x51da, 0x3538, 0xac9, 0x0, 0x0);
        gbc.writeMem(0xb5a2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xafc1);
        EXPECT(gbc.pc(), 0xb5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a2), 0xcb);
        EXPECT(gbc.readMem(0xb5a3), 0x58);
        // CB 58 0334
        gbc.setState(0xd707, 0x94e2, 0xa790, 0xeb23, 0xb642, 0x8dbc, 0x1, 0x0);
        gbc.writeMem(0xd707, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x94e2);
        EXPECT(gbc.pc(), 0xd709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd707), 0xcb);
        EXPECT(gbc.readMem(0xd708), 0x58);
        // CB 58 0336
        gbc.setState(0xfab, 0xf12b, 0x2ab0, 0x4625, 0x91c6, 0x3534, 0x1, 0x0);
        gbc.writeMem(0xfab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf12b);
        EXPECT(gbc.pc(), 0xfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0337
        gbc.setState(0x110, 0x318b, 0x4b0, 0xe783, 0x2b7c, 0x536d, 0x0, 0x0);
        gbc.writeMem(0x110, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x318b);
        EXPECT(gbc.pc(), 0x112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0338
        gbc.setState(0xeb8, 0x96fd, 0x43a0, 0x7a19, 0x9852, 0xa2b, 0x0, 0x1);
        gbc.writeMem(0xeb8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0xeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0339
        gbc.setState(0xa7d1, 0xd737, 0x92e0, 0x954, 0x9ccf, 0x4529, 0x0, 0x0);
        gbc.writeMem(0xa7d1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd737);
        EXPECT(gbc.pc(), 0xa7d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d1), 0xcb);
        EXPECT(gbc.readMem(0xa7d2), 0x58);
        // CB 58 033A
        gbc.setState(0xddc3, 0x50b1, 0x51d0, 0x4c9a, 0x222b, 0x424e, 0x0, 0x0);
        gbc.writeMem(0xddc3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x50b1);
        EXPECT(gbc.pc(), 0xddc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc3), 0xcb);
        EXPECT(gbc.readMem(0xddc4), 0x58);
        // CB 58 033B
        gbc.setState(0x9075, 0x97a7, 0xf110, 0xb5d7, 0xbe61, 0x3bd0, 0x0, 0x0);
        gbc.writeMem(0x9075, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x97a7);
        EXPECT(gbc.pc(), 0x9077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9075), 0xcb);
        EXPECT(gbc.readMem(0x9076), 0x58);
        // CB 58 033C
        gbc.setState(0x79c2, 0xe7a9, 0x8ba0, 0xc57e, 0xa56, 0x5c5d, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe7a9);
        EXPECT(gbc.pc(), 0x79c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 033D
        gbc.setState(0x5ca0, 0xff1, 0x88b0, 0x6a9a, 0xb860, 0x4e85, 0x0, 0x0);
        gbc.writeMem(0x5ca0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xff1);
        EXPECT(gbc.pc(), 0x5ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 033E
        gbc.setState(0x7e8d, 0xce44, 0xc720, 0x8cdd, 0x1d05, 0xb08c, 0x1, 0x1);
        gbc.writeMem(0x7e8d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 033F
        gbc.setState(0x291d, 0x4de6, 0x89e0, 0x6c4b, 0x243b, 0x279f, 0x1, 0x1);
        gbc.writeMem(0x291d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4de6);
        EXPECT(gbc.pc(), 0x291f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0340
        gbc.setState(0x54eb, 0x7bdc, 0xed90, 0xb659, 0xcd90, 0xa98d, 0x1, 0x1);
        gbc.writeMem(0x54eb, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7bdc);
        EXPECT(gbc.pc(), 0x54ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0341
        gbc.setState(0xae78, 0xf72, 0xdff0, 0xeb5, 0x42f7, 0x4a43, 0x1, 0x0);
        gbc.writeMem(0xae78, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf72);
        EXPECT(gbc.pc(), 0xae7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae78), 0xcb);
        EXPECT(gbc.readMem(0xae79), 0x58);
        // CB 58 0342
        gbc.setState(0x3e8f, 0x4e1c, 0x5c60, 0x717d, 0x9ea6, 0xfb87, 0x1, 0x1);
        gbc.writeMem(0x3e8f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4e1c);
        EXPECT(gbc.pc(), 0x3e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0343
        gbc.setState(0x995, 0xa16b, 0x1e80, 0x48a6, 0x8f3b, 0x40d5, 0x0, 0x1);
        gbc.writeMem(0x995, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa16b);
        EXPECT(gbc.pc(), 0x997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0344
        gbc.setState(0x28ee, 0x4517, 0x8180, 0x19af, 0xc13c, 0x5d96, 0x1, 0x0);
        gbc.writeMem(0x28ee, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4517);
        EXPECT(gbc.pc(), 0x28f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0345
        gbc.setState(0xa898, 0xcb23, 0x9a70, 0x2a90, 0xf60b, 0xfac, 0x1, 0x0);
        gbc.writeMem(0xa898, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcb23);
        EXPECT(gbc.pc(), 0xa89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa898), 0xcb);
        EXPECT(gbc.readMem(0xa899), 0x58);
        // CB 58 0346
        gbc.setState(0x5f34, 0xc7ad, 0xd10, 0x3c6e, 0x4d31, 0xd482, 0x1, 0x1);
        gbc.writeMem(0x5f34, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc7ad);
        EXPECT(gbc.pc(), 0x5f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0347
        gbc.setState(0x6663, 0xce15, 0xf30, 0x75, 0xf171, 0xdc1a, 0x0, 0x1);
        gbc.writeMem(0x6663, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xce15);
        EXPECT(gbc.pc(), 0x6665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0348
        gbc.setState(0x918, 0xdbcf, 0x49d0, 0x70c0, 0x9ea9, 0x7e5e, 0x0, 0x1);
        gbc.writeMem(0x918, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdbcf);
        EXPECT(gbc.pc(), 0x91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0349
        gbc.setState(0xad3a, 0xd4e5, 0xd490, 0x7239, 0x5c99, 0xea51, 0x1, 0x0);
        gbc.writeMem(0xad3a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0xad3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad3a), 0xcb);
        EXPECT(gbc.readMem(0xad3b), 0x58);
        // CB 58 034A
        gbc.setState(0xb747, 0xa903, 0x3120, 0x721a, 0x6adc, 0x20ee, 0x0, 0x1);
        gbc.writeMem(0xb747, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa903);
        EXPECT(gbc.pc(), 0xb749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb747), 0xcb);
        EXPECT(gbc.readMem(0xb748), 0x58);
        // CB 58 034B
        gbc.setState(0x679d, 0xc206, 0x9d30, 0xc899, 0xb2a7, 0xa83b, 0x1, 0x0);
        gbc.writeMem(0x679d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc206);
        EXPECT(gbc.pc(), 0x679f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 034C
        gbc.setState(0x3ce3, 0x4a8, 0x5f0, 0xc174, 0x3ad1, 0x61dd, 0x1, 0x0);
        gbc.writeMem(0x3ce3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4a8);
        EXPECT(gbc.pc(), 0x3ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 034D
        gbc.setState(0x4367, 0x8d7d, 0x4a70, 0x6d28, 0x409e, 0x463c, 0x1, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8d7d);
        EXPECT(gbc.pc(), 0x4369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 034E
        gbc.setState(0x22c4, 0xa21d, 0x5650, 0x82b5, 0xaad4, 0x87af, 0x0, 0x1);
        gbc.writeMem(0x22c4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa21d);
        EXPECT(gbc.pc(), 0x22c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 034F
        gbc.setState(0xede4, 0xa78a, 0x16c0, 0xccb3, 0xa8db, 0x113f, 0x0, 0x0);
        gbc.writeMem(0xede4, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa78a);
        EXPECT(gbc.pc(), 0xede6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede4), 0xcb);
        EXPECT(gbc.readMem(0xede5), 0x58);
        // CB 58 0350
        gbc.setState(0x6b2, 0xbd4c, 0x8880, 0xd63f, 0xf181, 0x5b6e, 0x0, 0x0);
        gbc.writeMem(0x6b2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbd4c);
        EXPECT(gbc.pc(), 0x6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0351
        gbc.setState(0xb71a, 0x8442, 0xc5c0, 0xdf33, 0xee14, 0xb2b4, 0x1, 0x1);
        gbc.writeMem(0xb71a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8442);
        EXPECT(gbc.pc(), 0xb71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71a), 0xcb);
        EXPECT(gbc.readMem(0xb71b), 0x58);
        // CB 58 0352
        gbc.setState(0xd753, 0x21ee, 0xcbf0, 0xcde7, 0xe88, 0xec65, 0x1, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x21ee);
        EXPECT(gbc.pc(), 0xd755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd753), 0xcb);
        EXPECT(gbc.readMem(0xd754), 0x58);
        // CB 58 0353
        gbc.setState(0x6b80, 0xb2bb, 0xc7e0, 0x28a5, 0x55b6, 0x5715, 0x0, 0x1);
        gbc.writeMem(0x6b80, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb2bb);
        EXPECT(gbc.pc(), 0x6b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0355
        gbc.setState(0xd7e7, 0xf6, 0x1190, 0x6e4, 0x5d6b, 0x42da, 0x0, 0x1);
        gbc.writeMem(0xd7e7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf6);
        EXPECT(gbc.pc(), 0xd7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e7), 0xcb);
        EXPECT(gbc.readMem(0xd7e8), 0x58);
        // CB 58 0356
        gbc.setState(0xb1ec, 0xb74f, 0xfe60, 0xb5c5, 0xddf8, 0xcc98, 0x0, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb74f);
        EXPECT(gbc.pc(), 0xb1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ec), 0xcb);
        EXPECT(gbc.readMem(0xb1ed), 0x58);
        // CB 58 0357
        gbc.setState(0x3c80, 0xa925, 0xa550, 0xe648, 0x3b8, 0xfa60, 0x0, 0x0);
        gbc.writeMem(0x3c80, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa925);
        EXPECT(gbc.pc(), 0x3c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0358
        gbc.setState(0x254e, 0x9a37, 0x7090, 0x4d35, 0x8212, 0xf613, 0x1, 0x0);
        gbc.writeMem(0x254e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9a37);
        EXPECT(gbc.pc(), 0x2550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0359
        gbc.setState(0x2c97, 0xaa30, 0x4350, 0x56c2, 0x7fcb, 0x19b9, 0x0, 0x0);
        gbc.writeMem(0x2c97, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0x2c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 035A
        gbc.setState(0x7952, 0x3755, 0xa390, 0xecb3, 0xe4c7, 0x52a8, 0x0, 0x1);
        gbc.writeMem(0x7952, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3755);
        EXPECT(gbc.pc(), 0x7954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 035B
        gbc.setState(0xc213, 0x3c52, 0x8e0, 0x8fd0, 0xab4b, 0x942b, 0x0, 0x0);
        gbc.writeMem(0xc213, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3c52);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc213), 0xcb);
        EXPECT(gbc.readMem(0xc214), 0x58);
        // CB 58 035C
        gbc.setState(0x718d, 0x230e, 0xfdf0, 0x486b, 0x3313, 0x2d82, 0x1, 0x0);
        gbc.writeMem(0x718d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0x718f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 035D
        gbc.setState(0x2021, 0x5557, 0xde40, 0xeb8, 0x2b4b, 0x832a, 0x0, 0x0);
        gbc.writeMem(0x2021, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5557);
        EXPECT(gbc.pc(), 0x2023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 035E
        gbc.setState(0x521b, 0x890, 0xe130, 0xdca4, 0x52c7, 0x2688, 0x0, 0x0);
        gbc.writeMem(0x521b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x890);
        EXPECT(gbc.pc(), 0x521d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 035F
        gbc.setState(0xbd2, 0x941e, 0xd10, 0x5c1c, 0xeeeb, 0xf1e5, 0x1, 0x0);
        gbc.writeMem(0xbd2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x941e);
        EXPECT(gbc.pc(), 0xbd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0360
        gbc.setState(0x239a, 0x4fd7, 0x37d0, 0xfcdd, 0x8b17, 0x9082, 0x0, 0x0);
        gbc.writeMem(0x239a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4fd7);
        EXPECT(gbc.pc(), 0x239c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0361
        gbc.setState(0x47ec, 0x7629, 0x7070, 0xcdf, 0xf535, 0x8a21, 0x1, 0x0);
        gbc.writeMem(0x47ec, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7629);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0362
        gbc.setState(0x23df, 0x1acc, 0x3310, 0xe37, 0x176a, 0xddc9, 0x1, 0x0);
        gbc.writeMem(0x23df, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1acc);
        EXPECT(gbc.pc(), 0x23e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0363
        gbc.setState(0xd670, 0x745a, 0x88a0, 0x2aec, 0xa4a6, 0xc706, 0x1, 0x0);
        gbc.writeMem(0xd670, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x745a);
        EXPECT(gbc.pc(), 0xd672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd670), 0xcb);
        EXPECT(gbc.readMem(0xd671), 0x58);
        // CB 58 0364
        gbc.setState(0xca88, 0x78e4, 0x9ab0, 0x551e, 0xf0be, 0x54ba, 0x0, 0x0);
        gbc.writeMem(0xca88, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x78e4);
        EXPECT(gbc.pc(), 0xca8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca88), 0xcb);
        EXPECT(gbc.readMem(0xca89), 0x58);
        // CB 58 0365
        gbc.setState(0xeb20, 0xbb73, 0x8860, 0x7125, 0xe610, 0x5a2d, 0x1, 0x0);
        gbc.writeMem(0xeb20, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbb73);
        EXPECT(gbc.pc(), 0xeb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb20), 0xcb);
        EXPECT(gbc.readMem(0xeb21), 0x58);
        // CB 58 0366
        gbc.setState(0x3667, 0xa86, 0x2e70, 0xf8ae, 0xb19d, 0xe32e, 0x0, 0x0);
        gbc.writeMem(0x3667, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa86);
        EXPECT(gbc.pc(), 0x3669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0367
        gbc.setState(0xa416, 0x2ee1, 0xcc20, 0x8560, 0x6a4c, 0x7f9d, 0x1, 0x1);
        gbc.writeMem(0xa416, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2ee1);
        EXPECT(gbc.pc(), 0xa418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa416), 0xcb);
        EXPECT(gbc.readMem(0xa417), 0x58);
        // CB 58 0368
        gbc.setState(0x1b, 0x2d9b, 0xbd20, 0x3940, 0x6c7, 0xf517, 0x1, 0x0);
        gbc.writeMem(0x1b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2d9b);
        EXPECT(gbc.pc(), 0x1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0369
        gbc.setState(0x3ac9, 0x46f0, 0x1090, 0x3e55, 0x5a37, 0x264f, 0x0, 0x0);
        gbc.writeMem(0x3ac9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x46f0);
        EXPECT(gbc.pc(), 0x3acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 036A
        gbc.setState(0xddb2, 0xc094, 0xfda0, 0xcd05, 0x4a87, 0xc6cf, 0x1, 0x1);
        gbc.writeMem(0xddb2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc094);
        EXPECT(gbc.pc(), 0xddb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb2), 0xcb);
        EXPECT(gbc.readMem(0xddb3), 0x58);
        // CB 58 036B
        gbc.setState(0x1151, 0x2875, 0xc840, 0x25ab, 0x7ec7, 0x14e4, 0x0, 0x0);
        gbc.writeMem(0x1151, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 036C
        gbc.setState(0x9ea5, 0x8aea, 0xd620, 0x9097, 0x3443, 0x4adf, 0x0, 0x1);
        gbc.writeMem(0x9ea5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8aea);
        EXPECT(gbc.pc(), 0x9ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea5), 0xcb);
        EXPECT(gbc.readMem(0x9ea6), 0x58);
        // CB 58 036D
        gbc.setState(0xa623, 0x8410, 0x5840, 0x8b65, 0xd66f, 0xd5b, 0x0, 0x0);
        gbc.writeMem(0xa623, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8410);
        EXPECT(gbc.pc(), 0xa625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa623), 0xcb);
        EXPECT(gbc.readMem(0xa624), 0x58);
        // CB 58 036E
        gbc.setState(0xb8a2, 0xd873, 0x5310, 0x7a9a, 0x9452, 0xbac1, 0x0, 0x0);
        gbc.writeMem(0xb8a2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd873);
        EXPECT(gbc.pc(), 0xb8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a2), 0xcb);
        EXPECT(gbc.readMem(0xb8a3), 0x58);
        // CB 58 036F
        gbc.setState(0x49d0, 0xb31a, 0x7470, 0x2baf, 0x8e4b, 0x9114, 0x0, 0x1);
        gbc.writeMem(0x49d0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb31a);
        EXPECT(gbc.pc(), 0x49d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0370
        gbc.setState(0x1b78, 0x7bf1, 0xb180, 0x4b0f, 0x1b75, 0xa64c, 0x0, 0x1);
        gbc.writeMem(0x1b78, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7bf1);
        EXPECT(gbc.pc(), 0x1b7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0371
        gbc.setState(0x15b5, 0x967c, 0x2910, 0x4731, 0x9110, 0x8626, 0x1, 0x1);
        gbc.writeMem(0x15b5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x967c);
        EXPECT(gbc.pc(), 0x15b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0372
        gbc.setState(0x98d9, 0x4e38, 0xbab0, 0x2bee, 0x23c7, 0x911, 0x1, 0x1);
        gbc.writeMem(0x98d9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4e38);
        EXPECT(gbc.pc(), 0x98db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d9), 0xcb);
        EXPECT(gbc.readMem(0x98da), 0x58);
        // CB 58 0373
        gbc.setState(0xd47, 0x1476, 0x9d30, 0x69a0, 0x3783, 0xe161, 0x0, 0x1);
        gbc.writeMem(0xd47, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1476);
        EXPECT(gbc.pc(), 0xd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0374
        gbc.setState(0x9217, 0x344c, 0xb140, 0x3a56, 0x1f9d, 0x8690, 0x0, 0x1);
        gbc.writeMem(0x9217, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x344c);
        EXPECT(gbc.pc(), 0x9219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9217), 0xcb);
        EXPECT(gbc.readMem(0x9218), 0x58);
        // CB 58 0375
        gbc.setState(0x252d, 0x19fe, 0x2680, 0x7c99, 0xa9, 0xddda, 0x1, 0x1);
        gbc.writeMem(0x252d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x19fe);
        EXPECT(gbc.pc(), 0x252f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0376
        gbc.setState(0xb2c3, 0x5ac8, 0x6bb0, 0x1b49, 0xf9d0, 0x8d2f, 0x1, 0x1);
        gbc.writeMem(0xb2c3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5ac8);
        EXPECT(gbc.pc(), 0xb2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c3), 0xcb);
        EXPECT(gbc.readMem(0xb2c4), 0x58);
        // CB 58 0377
        gbc.setState(0xb2b3, 0x212, 0x2450, 0x231a, 0xabf6, 0xc333, 0x1, 0x1);
        gbc.writeMem(0xb2b3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x212);
        EXPECT(gbc.pc(), 0xb2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b3), 0xcb);
        EXPECT(gbc.readMem(0xb2b4), 0x58);
        // CB 58 0378
        gbc.setState(0x7bf8, 0x4331, 0x5d20, 0xbae8, 0xef41, 0x9e55, 0x0, 0x0);
        gbc.writeMem(0x7bf8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4331);
        EXPECT(gbc.pc(), 0x7bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0379
        gbc.setState(0xb9f0, 0x5e68, 0xf730, 0xd6d8, 0x9261, 0xcec0, 0x0, 0x1);
        gbc.writeMem(0xb9f0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5e68);
        EXPECT(gbc.pc(), 0xb9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f0), 0xcb);
        EXPECT(gbc.readMem(0xb9f1), 0x58);
        // CB 58 037A
        gbc.setState(0xa8d3, 0x171a, 0x8ce0, 0xb833, 0x515a, 0xf313, 0x0, 0x1);
        gbc.writeMem(0xa8d3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0xa8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d3), 0xcb);
        EXPECT(gbc.readMem(0xa8d4), 0x58);
        // CB 58 037C
        gbc.setState(0xd9e7, 0x6436, 0x1290, 0x9379, 0xa166, 0x7bf5, 0x0, 0x0);
        gbc.writeMem(0xd9e7, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6436);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e7), 0xcb);
        EXPECT(gbc.readMem(0xd9e8), 0x58);
        // CB 58 037D
        gbc.setState(0xb4cd, 0x7d48, 0xbdf0, 0xa667, 0xb164, 0x363e, 0x0, 0x1);
        gbc.writeMem(0xb4cd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7d48);
        EXPECT(gbc.pc(), 0xb4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4cd), 0xcb);
        EXPECT(gbc.readMem(0xb4ce), 0x58);
        // CB 58 037E
        gbc.setState(0xa4d6, 0x7db, 0x5290, 0xeaa5, 0xb4a7, 0xd560, 0x0, 0x0);
        gbc.writeMem(0xa4d6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7db);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xcb);
        EXPECT(gbc.readMem(0xa4d7), 0x58);
        // CB 58 037F
        gbc.setState(0x2d56, 0xd933, 0xada0, 0x2f76, 0x706b, 0xd5cd, 0x0, 0x0);
        gbc.writeMem(0x2d56, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd933);
        EXPECT(gbc.pc(), 0x2d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0380
        gbc.setState(0x20ba, 0xb775, 0x9ab0, 0xb293, 0xca9, 0x9fd, 0x1, 0x1);
        gbc.writeMem(0x20ba, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb775);
        EXPECT(gbc.pc(), 0x20bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0381
        gbc.setState(0x7149, 0x9f09, 0x4520, 0x52a2, 0x81e4, 0xb7e, 0x0, 0x0);
        gbc.writeMem(0x7149, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9f09);
        EXPECT(gbc.pc(), 0x714b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0383
        gbc.setState(0xa190, 0x86c3, 0xd050, 0xe2ce, 0x306a, 0xfda1, 0x0, 0x1);
        gbc.writeMem(0xa190, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x86c3);
        EXPECT(gbc.pc(), 0xa192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa190), 0xcb);
        EXPECT(gbc.readMem(0xa191), 0x58);
        // CB 58 0384
        gbc.setState(0x3fd0, 0xdf80, 0x8bb0, 0x215a, 0x21d, 0xda0d, 0x1, 0x1);
        gbc.writeMem(0x3fd0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdf80);
        EXPECT(gbc.pc(), 0x3fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0385
        gbc.setState(0xb1c8, 0xdade, 0xcb10, 0xf750, 0xfec8, 0xfffd, 0x0, 0x0);
        gbc.writeMem(0xb1c8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdade);
        EXPECT(gbc.pc(), 0xb1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c8), 0xcb);
        EXPECT(gbc.readMem(0xb1c9), 0x58);
        // CB 58 0386
        gbc.setState(0xb4c8, 0x20fd, 0x1790, 0xd78e, 0xc98e, 0xaa10, 0x1, 0x1);
        gbc.writeMem(0xb4c8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x20fd);
        EXPECT(gbc.pc(), 0xb4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c8), 0xcb);
        EXPECT(gbc.readMem(0xb4c9), 0x58);
        // CB 58 0388
        gbc.setState(0xa4ed, 0xaa6c, 0xda20, 0x4f96, 0x4248, 0x9e46, 0x0, 0x1);
        gbc.writeMem(0xa4ed, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0xa4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ed), 0xcb);
        EXPECT(gbc.readMem(0xa4ee), 0x58);
        // CB 58 0389
        gbc.setState(0x9e58, 0x51b8, 0x5cb0, 0xe143, 0xc359, 0x449d, 0x0, 0x0);
        gbc.writeMem(0x9e58, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x51b8);
        EXPECT(gbc.pc(), 0x9e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e58), 0xcb);
        EXPECT(gbc.readMem(0x9e59), 0x58);
        // CB 58 038A
        gbc.setState(0xc5e5, 0x50f3, 0xd290, 0xf04c, 0xa9d5, 0x2a4e, 0x0, 0x1);
        gbc.writeMem(0xc5e5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x50f3);
        EXPECT(gbc.pc(), 0xc5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e5), 0xcb);
        EXPECT(gbc.readMem(0xc5e6), 0x58);
        // CB 58 038B
        gbc.setState(0xe699, 0x3759, 0x9720, 0x45a9, 0xa5b8, 0x60a7, 0x0, 0x0);
        gbc.writeMem(0xe699, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3759);
        EXPECT(gbc.pc(), 0xe69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe699), 0xcb);
        EXPECT(gbc.readMem(0xe69a), 0x58);
        // CB 58 038C
        gbc.setState(0x441c, 0x302a, 0x70a0, 0x10d5, 0x412e, 0x2cd6, 0x1, 0x1);
        gbc.writeMem(0x441c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x302a);
        EXPECT(gbc.pc(), 0x441e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 038D
        gbc.setState(0x811b, 0xadbc, 0xfb30, 0x6cee, 0xb2ba, 0x8367, 0x0, 0x1);
        gbc.writeMem(0x811b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xadbc);
        EXPECT(gbc.pc(), 0x811d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811b), 0xcb);
        EXPECT(gbc.readMem(0x811c), 0x58);
        // CB 58 038E
        gbc.setState(0x3027, 0xa253, 0xe1e0, 0xaf0c, 0xafc3, 0xa7f4, 0x0, 0x0);
        gbc.writeMem(0x3027, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0x3029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 038F
        gbc.setState(0xcfce, 0xa1c7, 0x5e00, 0xf46a, 0xfc00, 0x7ef, 0x1, 0x1);
        gbc.writeMem(0xcfce, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa1c7);
        EXPECT(gbc.pc(), 0xcfd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfce), 0xcb);
        EXPECT(gbc.readMem(0xcfcf), 0x58);
        // CB 58 0390
        gbc.setState(0x371f, 0x432b, 0x3940, 0x5a05, 0x9d0e, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0x371f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x432b);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0392
        gbc.setState(0x2d63, 0xad13, 0x2990, 0xc142, 0x841b, 0xa519, 0x1, 0x0);
        gbc.writeMem(0x2d63, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xad13);
        EXPECT(gbc.pc(), 0x2d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0393
        gbc.setState(0xe830, 0xf4e1, 0x7fa0, 0xa530, 0xdfb9, 0x469b, 0x0, 0x0);
        gbc.writeMem(0xe830, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0xe832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe830), 0xcb);
        EXPECT(gbc.readMem(0xe831), 0x58);
        // CB 58 0394
        gbc.setState(0xe531, 0x5abe, 0x6900, 0xa493, 0x73bb, 0x3a71, 0x1, 0x0);
        gbc.writeMem(0xe531, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5abe);
        EXPECT(gbc.pc(), 0xe533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe531), 0xcb);
        EXPECT(gbc.readMem(0xe532), 0x58);
        // CB 58 0395
        gbc.setState(0x433a, 0x9e68, 0x6f00, 0x2497, 0xf379, 0x6d9b, 0x1, 0x0);
        gbc.writeMem(0x433a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9e68);
        EXPECT(gbc.pc(), 0x433c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 0396
        gbc.setState(0x2fe1, 0x6316, 0xba50, 0x1796, 0x52b0, 0x7ea5, 0x0, 0x1);
        gbc.writeMem(0x2fe1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6316);
        EXPECT(gbc.pc(), 0x2fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 0397
        gbc.setState(0xe522, 0xcf14, 0x83d0, 0xb49e, 0x9266, 0x10b7, 0x0, 0x0);
        gbc.writeMem(0xe522, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0xe524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe522), 0xcb);
        EXPECT(gbc.readMem(0xe523), 0x58);
        // CB 58 0398
        gbc.setState(0xad38, 0xd515, 0x2560, 0x9c78, 0x4a08, 0x9812, 0x1, 0x0);
        gbc.writeMem(0xad38, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd515);
        EXPECT(gbc.pc(), 0xad3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad38), 0xcb);
        EXPECT(gbc.readMem(0xad39), 0x58);
        // CB 58 0399
        gbc.setState(0xb655, 0xf323, 0xbbf0, 0x1316, 0xda74, 0x2694, 0x1, 0x0);
        gbc.writeMem(0xb655, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf323);
        EXPECT(gbc.pc(), 0xb657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb655), 0xcb);
        EXPECT(gbc.readMem(0xb656), 0x58);
        // CB 58 039B
        gbc.setState(0x53dd, 0x8dcf, 0x3420, 0x3916, 0x7994, 0x161b, 0x0, 0x1);
        gbc.writeMem(0x53dd, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8dcf);
        EXPECT(gbc.pc(), 0x53df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 039C
        gbc.setState(0x8d88, 0x5f7e, 0x1320, 0x616, 0x726a, 0x48a3, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5f7e);
        EXPECT(gbc.pc(), 0x8d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d88), 0xcb);
        EXPECT(gbc.readMem(0x8d89), 0x58);
        // CB 58 039D
        gbc.setState(0xbeac, 0xaece, 0x38f0, 0xa6c3, 0xf392, 0xd509, 0x1, 0x1);
        gbc.writeMem(0xbeac, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaece);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeac), 0xcb);
        EXPECT(gbc.readMem(0xbead), 0x58);
        // CB 58 039E
        gbc.setState(0xef8d, 0x86e4, 0x3ed0, 0x5dd0, 0x870f, 0x7f74, 0x1, 0x0);
        gbc.writeMem(0xef8d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x86e4);
        EXPECT(gbc.pc(), 0xef8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8d), 0xcb);
        EXPECT(gbc.readMem(0xef8e), 0x58);
        // CB 58 039F
        gbc.setState(0x98c5, 0x3c4f, 0x6cd0, 0x61a0, 0x2d2, 0x1ef6, 0x1, 0x1);
        gbc.writeMem(0x98c5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3c4f);
        EXPECT(gbc.pc(), 0x98c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c5), 0xcb);
        EXPECT(gbc.readMem(0x98c6), 0x58);
        // CB 58 03A0
        gbc.setState(0xefe6, 0xba12, 0x90c0, 0xf7a2, 0x7f9e, 0x3251, 0x0, 0x0);
        gbc.writeMem(0xefe6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xba12);
        EXPECT(gbc.pc(), 0xefe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe6), 0xcb);
        EXPECT(gbc.readMem(0xefe7), 0x58);
        // CB 58 03A1
        gbc.setState(0x6105, 0x80cf, 0x1ad0, 0x89f3, 0x908d, 0xc7d9, 0x0, 0x0);
        gbc.writeMem(0x6105, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x80cf);
        EXPECT(gbc.pc(), 0x6107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03A2
        gbc.setState(0xb21, 0xc64, 0x91c0, 0x4857, 0x1220, 0x3b50, 0x0, 0x1);
        gbc.writeMem(0xb21, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0xb23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03A3
        gbc.setState(0x17e2, 0xb783, 0x4110, 0xdce5, 0x3584, 0x2b62, 0x0, 0x0);
        gbc.writeMem(0x17e2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0x17e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03A4
        gbc.setState(0x22f6, 0x6912, 0x6210, 0x334f, 0x101f, 0x4b20, 0x0, 0x1);
        gbc.writeMem(0x22f6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6912);
        EXPECT(gbc.pc(), 0x22f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03A5
        gbc.setState(0x75bc, 0x8cea, 0x4ca0, 0x4ed3, 0x3972, 0xcadf, 0x1, 0x0);
        gbc.writeMem(0x75bc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8cea);
        EXPECT(gbc.pc(), 0x75be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03A6
        gbc.setState(0x67a8, 0x411a, 0x9270, 0xd850, 0x8833, 0xbc2, 0x0, 0x1);
        gbc.writeMem(0x67a8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0x67aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03A7
        gbc.setState(0xa367, 0x9a44, 0x6950, 0xdd76, 0xe22f, 0xd9cc, 0x0, 0x1);
        gbc.writeMem(0xa367, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9a44);
        EXPECT(gbc.pc(), 0xa369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa367), 0xcb);
        EXPECT(gbc.readMem(0xa368), 0x58);
        // CB 58 03A8
        gbc.setState(0x586f, 0xfc0f, 0x5920, 0x3a25, 0x62f3, 0x7dc5, 0x0, 0x1);
        gbc.writeMem(0x586f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfc0f);
        EXPECT(gbc.pc(), 0x5871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03A9
        gbc.setState(0x9674, 0x6760, 0xaf20, 0xc63a, 0xd544, 0x2efc, 0x0, 0x0);
        gbc.writeMem(0x9674, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6760);
        EXPECT(gbc.pc(), 0x9676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9674), 0xcb);
        EXPECT(gbc.readMem(0x9675), 0x58);
        // CB 58 03AB
        gbc.setState(0xb1ea, 0x3343, 0xadf0, 0x7e9e, 0x9eab, 0x28d7, 0x1, 0x1);
        gbc.writeMem(0xb1ea, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3343);
        EXPECT(gbc.pc(), 0xb1ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ea), 0xcb);
        EXPECT(gbc.readMem(0xb1eb), 0x58);
        // CB 58 03AC
        gbc.setState(0xa00, 0x7ae9, 0x1240, 0x3cc6, 0x641a, 0xf875, 0x1, 0x1);
        gbc.writeMem(0xa00, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7ae9);
        EXPECT(gbc.pc(), 0xa02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03AD
        gbc.setState(0xe3e8, 0x7575, 0x82f0, 0xe3fa, 0xd6c7, 0x5f63, 0x1, 0x1);
        gbc.writeMem(0xe3e8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7575);
        EXPECT(gbc.pc(), 0xe3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e8), 0xcb);
        EXPECT(gbc.readMem(0xe3e9), 0x58);
        // CB 58 03AE
        gbc.setState(0xe246, 0x41a4, 0x4190, 0xdd30, 0x6151, 0x6181, 0x1, 0x1);
        gbc.writeMem(0xe246, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x41a4);
        EXPECT(gbc.pc(), 0xe248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe246), 0xcb);
        EXPECT(gbc.readMem(0xe247), 0x58);
        // CB 58 03AF
        gbc.setState(0xdaf9, 0x52dd, 0xc1d0, 0x5e67, 0x1fad, 0xca7, 0x1, 0x1);
        gbc.writeMem(0xdaf9, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x52dd);
        EXPECT(gbc.pc(), 0xdafb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf9), 0xcb);
        EXPECT(gbc.readMem(0xdafa), 0x58);
        // CB 58 03B0
        gbc.setState(0x6777, 0x8c99, 0xe3f0, 0x59c, 0x4be4, 0xe0e6, 0x1, 0x0);
        gbc.writeMem(0x6777, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0x6779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03B1
        gbc.setState(0x8eac, 0xdcdd, 0x92e0, 0x24f3, 0x1194, 0xa9e5, 0x0, 0x1);
        gbc.writeMem(0x8eac, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdcdd);
        EXPECT(gbc.pc(), 0x8eae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eac), 0xcb);
        EXPECT(gbc.readMem(0x8ead), 0x58);
        // CB 58 03B2
        gbc.setState(0x74fc, 0xb96e, 0xa0, 0x4457, 0x4ac6, 0xc08, 0x1, 0x0);
        gbc.writeMem(0x74fc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb96e);
        EXPECT(gbc.pc(), 0x74fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03B3
        gbc.setState(0x74, 0x77d0, 0xba70, 0xdd6a, 0x358c, 0xb4ff, 0x0, 0x1);
        gbc.writeMem(0x74, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x77d0);
        EXPECT(gbc.pc(), 0x76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03B4
        gbc.setState(0x7d7a, 0x7697, 0x92f0, 0xc480, 0x830e, 0x754, 0x0, 0x0);
        gbc.writeMem(0x7d7a, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7697);
        EXPECT(gbc.pc(), 0x7d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03B5
        gbc.setState(0xb91f, 0x26f6, 0xf560, 0xe602, 0xf5fe, 0xa73, 0x1, 0x1);
        gbc.writeMem(0xb91f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0xb921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91f), 0xcb);
        EXPECT(gbc.readMem(0xb920), 0x58);
        // CB 58 03B6
        gbc.setState(0xe42, 0x98cf, 0xe3d0, 0x24fb, 0xcca0, 0x505f, 0x1, 0x1);
        gbc.writeMem(0xe42, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x98cf);
        EXPECT(gbc.pc(), 0xe44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03B7
        gbc.setState(0x5327, 0x24ae, 0xbe00, 0x6a65, 0xd5ee, 0x6843, 0x0, 0x1);
        gbc.writeMem(0x5327, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x24ae);
        EXPECT(gbc.pc(), 0x5329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03B8
        gbc.setState(0x4f7f, 0x262, 0xbe10, 0xc42a, 0xc52c, 0x9018, 0x0, 0x0);
        gbc.writeMem(0x4f7f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x262);
        EXPECT(gbc.pc(), 0x4f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03B9
        gbc.setState(0xc97d, 0x991f, 0xb90, 0xe788, 0x3b59, 0xfdcd, 0x1, 0x1);
        gbc.writeMem(0xc97d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x991f);
        EXPECT(gbc.pc(), 0xc97f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97d), 0xcb);
        EXPECT(gbc.readMem(0xc97e), 0x58);
        // CB 58 03BA
        gbc.setState(0xe0de, 0xa23c, 0x8080, 0x5aa7, 0xb28c, 0x175e, 0x1, 0x0);
        gbc.writeMem(0xe0de, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa23c);
        EXPECT(gbc.pc(), 0xe0e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0de), 0xcb);
        EXPECT(gbc.readMem(0xe0df), 0x58);
        // CB 58 03BB
        gbc.setState(0x26bf, 0x3863, 0x5c70, 0x249c, 0x2aaf, 0x6e2f, 0x0, 0x0);
        gbc.writeMem(0x26bf, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3863);
        EXPECT(gbc.pc(), 0x26c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03BC
        gbc.setState(0x5dc1, 0x552, 0x2090, 0xe812, 0xa024, 0xe9f4, 0x0, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x552);
        EXPECT(gbc.pc(), 0x5dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03BE
        gbc.setState(0x5bc3, 0x9300, 0x8940, 0xcaa2, 0xa407, 0x74c8, 0x0, 0x1);
        gbc.writeMem(0x5bc3, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9300);
        EXPECT(gbc.pc(), 0x5bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03BF
        gbc.setState(0xa520, 0xe1b7, 0x87c0, 0x35e5, 0xdca2, 0xad51, 0x1, 0x0);
        gbc.writeMem(0xa520, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe1b7);
        EXPECT(gbc.pc(), 0xa522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa520), 0xcb);
        EXPECT(gbc.readMem(0xa521), 0x58);
        // CB 58 03C0
        gbc.setState(0x76d6, 0xba78, 0x9830, 0x6e7e, 0x9495, 0xb03d, 0x0, 0x1);
        gbc.writeMem(0x76d6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xba78);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03C1
        gbc.setState(0xf5d, 0x99a8, 0xfd80, 0x5dfd, 0x3e37, 0xa33d, 0x1, 0x0);
        gbc.writeMem(0xf5d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x99a8);
        EXPECT(gbc.pc(), 0xf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03C2
        gbc.setState(0xe45f, 0x724a, 0xde10, 0x35de, 0xab4d, 0x440, 0x1, 0x1);
        gbc.writeMem(0xe45f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x724a);
        EXPECT(gbc.pc(), 0xe461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45f), 0xcb);
        EXPECT(gbc.readMem(0xe460), 0x58);
        // CB 58 03C3
        gbc.setState(0xe26b, 0xd5, 0xacf0, 0xf0a4, 0xc8a8, 0xa43b, 0x1, 0x1);
        gbc.writeMem(0xe26b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26b), 0xcb);
        EXPECT(gbc.readMem(0xe26c), 0x58);
        // CB 58 03C4
        gbc.setState(0x9ca6, 0x4250, 0x7680, 0xd29a, 0x37f6, 0xd05, 0x1, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4250);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0x58);
        // CB 58 03C5
        gbc.setState(0x33d2, 0x8a79, 0xdb30, 0xeedd, 0x2992, 0x5ba4, 0x1, 0x1);
        gbc.writeMem(0x33d2, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8a79);
        EXPECT(gbc.pc(), 0x33d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03C6
        gbc.setState(0x215f, 0xfe64, 0x13d0, 0x9c1, 0xb86f, 0xd73f, 0x1, 0x1);
        gbc.writeMem(0x215f, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfe64);
        EXPECT(gbc.pc(), 0x2161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03C7
        gbc.setState(0xda0d, 0x9436, 0x32a0, 0xcd6c, 0x10a9, 0x8845, 0x0, 0x0);
        gbc.writeMem(0xda0d, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9436);
        EXPECT(gbc.pc(), 0xda0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0d), 0xcb);
        EXPECT(gbc.readMem(0xda0e), 0x58);
        // CB 58 03C8
        gbc.setState(0xf28, 0xd44, 0x6fa0, 0xcb30, 0xe416, 0x51da, 0x0, 0x1);
        gbc.writeMem(0xf28, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd44);
        EXPECT(gbc.pc(), 0xf2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03C9
        gbc.setState(0x4c1b, 0x1107, 0x38d0, 0xa262, 0x5b4e, 0x1dbc, 0x1, 0x0);
        gbc.writeMem(0x4c1b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1107);
        EXPECT(gbc.pc(), 0x4c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03CA
        gbc.setState(0xaba0, 0x31ce, 0x9690, 0x8e19, 0x29c6, 0xb58b, 0x1, 0x1);
        gbc.writeMem(0xaba0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x31ce);
        EXPECT(gbc.pc(), 0xaba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba0), 0xcb);
        EXPECT(gbc.readMem(0xaba1), 0x58);
        // CB 58 03CB
        gbc.setState(0xd003, 0x2d68, 0x5a90, 0xaf5b, 0x6c47, 0x471e, 0x1, 0x1);
        gbc.writeMem(0xd003, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2d68);
        EXPECT(gbc.pc(), 0xd005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd003), 0xcb);
        EXPECT(gbc.readMem(0xd004), 0x58);
        // CB 58 03CC
        gbc.setState(0xcd59, 0x4925, 0xa0d0, 0x3b7e, 0xe229, 0x952e, 0x1, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4925);
        EXPECT(gbc.pc(), 0xcd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd59), 0xcb);
        EXPECT(gbc.readMem(0xcd5a), 0x58);
        // CB 58 03CD
        gbc.setState(0xae6e, 0x6425, 0x3d90, 0xd76f, 0x4c19, 0xaed9, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6425);
        EXPECT(gbc.pc(), 0xae70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6e), 0xcb);
        EXPECT(gbc.readMem(0xae6f), 0x58);
        // CB 58 03CE
        gbc.setState(0x6aab, 0xb2c0, 0x1f80, 0xc7c4, 0x568a, 0x3e54, 0x0, 0x0);
        gbc.writeMem(0x6aab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb2c0);
        EXPECT(gbc.pc(), 0x6aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03CF
        gbc.setState(0xd002, 0xc232, 0x2870, 0xed8b, 0xdee, 0x1d56, 0x0, 0x1);
        gbc.writeMem(0xd002, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc232);
        EXPECT(gbc.pc(), 0xd004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd002), 0xcb);
        EXPECT(gbc.readMem(0xd003), 0x58);
        // CB 58 03D0
        gbc.setState(0x16c5, 0x24a2, 0xc060, 0x6842, 0x5f45, 0xb226, 0x1, 0x1);
        gbc.writeMem(0x16c5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x24a2);
        EXPECT(gbc.pc(), 0x16c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03D1
        gbc.setState(0xab4b, 0x88a8, 0x9440, 0x590d, 0x2869, 0x4104, 0x1, 0x1);
        gbc.writeMem(0xab4b, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x88a8);
        EXPECT(gbc.pc(), 0xab4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4b), 0xcb);
        EXPECT(gbc.readMem(0xab4c), 0x58);
        // CB 58 03D3
        gbc.setState(0xedd8, 0x7479, 0x7000, 0x6ac6, 0xea1d, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0xedd8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7479);
        EXPECT(gbc.pc(), 0xedda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd8), 0xcb);
        EXPECT(gbc.readMem(0xedd9), 0x58);
        // CB 58 03D4
        gbc.setState(0xbe40, 0xe8c2, 0xe8e0, 0x8741, 0xd2ed, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0xbe40, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe8c2);
        EXPECT(gbc.pc(), 0xbe42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe40), 0xcb);
        EXPECT(gbc.readMem(0xbe41), 0x58);
        // CB 58 03D5
        gbc.setState(0x42a0, 0xa011, 0xec00, 0x4d00, 0xded9, 0xa13f, 0x0, 0x0);
        gbc.writeMem(0x42a0, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0x42a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03D6
        gbc.setState(0xc06c, 0x7301, 0x8280, 0x5e02, 0xfc0d, 0x4098, 0x1, 0x1);
        gbc.writeMem(0xc06c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7301);
        EXPECT(gbc.pc(), 0xc06e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc06c), 0xcb);
        EXPECT(gbc.readMem(0xc06d), 0x58);
        // CB 58 03D7
        gbc.setState(0x71b8, 0xfeb2, 0x9e60, 0x7f13, 0x31e0, 0xa95f, 0x0, 0x0);
        gbc.writeMem(0x71b8, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfeb2);
        EXPECT(gbc.pc(), 0x71ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03D8
        gbc.setState(0xdecc, 0xbbfe, 0xc390, 0x2373, 0x2cce, 0xfd44, 0x0, 0x1);
        gbc.writeMem(0xdecc, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbbfe);
        EXPECT(gbc.pc(), 0xdece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdecc), 0xcb);
        EXPECT(gbc.readMem(0xdecd), 0x58);
        // CB 58 03D9
        gbc.setState(0x71ab, 0xc581, 0x87c0, 0x902b, 0xca09, 0xbd09, 0x1, 0x1);
        gbc.writeMem(0x71ab, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc581);
        EXPECT(gbc.pc(), 0x71ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03DA
        gbc.setState(0x9398, 0x333a, 0xb380, 0x59c4, 0x22da, 0xb87, 0x0, 0x1);
        gbc.writeMem(0x9398, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x333a);
        EXPECT(gbc.pc(), 0x939a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9398), 0xcb);
        EXPECT(gbc.readMem(0x9399), 0x58);
        // CB 58 03DB
        gbc.setState(0x1198, 0x281d, 0xbeb0, 0x205a, 0xd827, 0xab7, 0x1, 0x1);
        gbc.writeMem(0x1198, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x281d);
        EXPECT(gbc.pc(), 0x119a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03DC
        gbc.setState(0xd036, 0xbcb5, 0xe0f0, 0x2b00, 0x34a7, 0x3a20, 0x1, 0x0);
        gbc.writeMem(0xd036, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbcb5);
        EXPECT(gbc.pc(), 0xd038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd036), 0xcb);
        EXPECT(gbc.readMem(0xd037), 0x58);
        // CB 58 03DD
        gbc.setState(0x4b31, 0x27f0, 0x6980, 0x980c, 0x7e2f, 0x2711, 0x0, 0x1);
        gbc.writeMem(0x4b31, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x27f0);
        EXPECT(gbc.pc(), 0x4b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03DE
        gbc.setState(0x3738, 0xbcb6, 0x8a10, 0x16e6, 0x36ec, 0xca42, 0x0, 0x1);
        gbc.writeMem(0x3738, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbcb6);
        EXPECT(gbc.pc(), 0x373a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03DF
        gbc.setState(0xc7b1, 0xb3d7, 0x2720, 0xed18, 0x8735, 0xbf5c, 0x0, 0x0);
        gbc.writeMem(0xc7b1, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb3d7);
        EXPECT(gbc.pc(), 0xc7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b1), 0xcb);
        EXPECT(gbc.readMem(0xc7b2), 0x58);
        // CB 58 03E0
        gbc.setState(0x9196, 0xceb5, 0x8e60, 0xd0dd, 0xbf3b, 0xf462, 0x0, 0x0);
        gbc.writeMem(0x9196, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xceb5);
        EXPECT(gbc.pc(), 0x9198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9196), 0xcb);
        EXPECT(gbc.readMem(0x9197), 0x58);
        // CB 58 03E1
        gbc.setState(0x235c, 0x21a1, 0x80f0, 0xdd87, 0x2b53, 0x11e5, 0x1, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 58 03E2
        gbc.setState(0xad95, 0xfc79, 0xd3d0, 0xc4b2, 0xc0af, 0xa528, 0x1, 0x1);
        gbc.writeMem(0xad95, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfc79);
        EXPECT(gbc.pc(), 0xad97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad95), 0xcb);
        EXPECT(gbc.readMem(0xad96), 0x58);
        // CB 58 03E3
        gbc.setState(0xb446, 0x94d2, 0xb5b0, 0x4b26, 0xb04, 0x80fa, 0x1, 0x1);
        gbc.writeMem(0xb446, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x94d2);
        EXPECT(gbc.pc(), 0xb448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb446), 0xcb);
        EXPECT(gbc.readMem(0xb447), 0x58);
        // CB 58 03E4
        gbc.setState(0x9073, 0xeb3d, 0x7d20, 0x916e, 0xfac4, 0x11f5, 0x0, 0x1);
        gbc.writeMem(0x9073, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xeb3d);
        EXPECT(gbc.pc(), 0x9075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9073), 0xcb);
        EXPECT(gbc.readMem(0x9074), 0x58);
        // CB 58 03E5
        gbc.setState(0x47d5, 0xf72, 0xbac0, 0xbaeb, 0xdded, 0x9fc9, 0x1, 0x1);
        gbc.writeMem(0x47d5, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf72);
        EXPECT(gbc.pc(), 0x47d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 58 03E6
        gbc.setState(0xa216, 0xb2c1, 0x57f0, 0xf484, 0x9161, 0x6c89, 0x0, 0x1);
        gbc.writeMem(0xa216, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb2c1);
        EXPECT(gbc.pc(), 0xa218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa216), 0xcb);
        EXPECT(gbc.readMem(0xa217), 0x58);
        // CB 58 03E7
        gbc.setState(0x3062, 0xb2fb, 0x84b0, 0x1b22, 0xd7e7, 0x26f4, 0x1, 0x0);
        gbc.writeMem(0x3062, { 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb2fb);
        EXPECT(gbc.pc(), 0x3064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
