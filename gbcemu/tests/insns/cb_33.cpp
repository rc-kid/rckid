#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_33)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_33) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 33 0000
        gbc.setState(0xc333, 0xa018, 0xacc0, 0x8768, 0x443c, 0x861f, 0x1, 0x0);
        gbc.writeMem(0xc333, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa018);
        EXPECT(gbc.pc(), 0xc335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc333), 0xcb);
        EXPECT(gbc.readMem(0xc334), 0x33);
        // CB 33 0001
        gbc.setState(0xbed7, 0x2179, 0xfdf0, 0xe147, 0xfc26, 0x5f9f, 0x0, 0x1);
        gbc.writeMem(0xbed7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2179);
        EXPECT(gbc.pc(), 0xbed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed7), 0xcb);
        EXPECT(gbc.readMem(0xbed8), 0x33);
        // CB 33 0002
        gbc.setState(0xe880, 0xf8f9, 0x4b90, 0x75b2, 0x7b54, 0x31d2, 0x0, 0x0);
        gbc.writeMem(0xe880, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf8f9);
        EXPECT(gbc.pc(), 0xe882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe880), 0xcb);
        EXPECT(gbc.readMem(0xe881), 0x33);
        // CB 33 0003
        gbc.setState(0x7a73, 0x89cd, 0xa2c0, 0xd12d, 0x81fe, 0xc55c, 0x1, 0x1);
        gbc.writeMem(0x7a73, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x89cd);
        EXPECT(gbc.pc(), 0x7a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0004
        gbc.setState(0x3096, 0xb980, 0x4d20, 0x87ab, 0x9a9, 0x98e2, 0x0, 0x1);
        gbc.writeMem(0x3096, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb980);
        EXPECT(gbc.pc(), 0x3098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0005
        gbc.setState(0x91af, 0x3bf0, 0x3720, 0xc374, 0x5170, 0x741a, 0x0, 0x1);
        gbc.writeMem(0x91af, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3bf0);
        EXPECT(gbc.pc(), 0x91b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91af), 0xcb);
        EXPECT(gbc.readMem(0x91b0), 0x33);
        // CB 33 0006
        gbc.setState(0x89c5, 0xe014, 0x20, 0x5b6c, 0x3e2f, 0x9212, 0x1, 0x0);
        gbc.writeMem(0x89c5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe014);
        EXPECT(gbc.pc(), 0x89c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c5), 0xcb);
        EXPECT(gbc.readMem(0x89c6), 0x33);
        // CB 33 0007
        gbc.setState(0xa309, 0x42a9, 0x2b00, 0x33de, 0xf9b2, 0xdf45, 0x1, 0x1);
        gbc.writeMem(0xa309, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x42a9);
        EXPECT(gbc.pc(), 0xa30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa309), 0xcb);
        EXPECT(gbc.readMem(0xa30a), 0x33);
        // CB 33 0009
        gbc.setState(0x30c8, 0xe7e7, 0xf630, 0x5529, 0x1846, 0x3672, 0x0, 0x0);
        gbc.writeMem(0x30c8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe7e7);
        EXPECT(gbc.pc(), 0x30ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 000A
        gbc.setState(0xa5d6, 0x4fe8, 0x760, 0xd2c8, 0xf9af, 0x5969, 0x1, 0x0);
        gbc.writeMem(0xa5d6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4fe8);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d6), 0xcb);
        EXPECT(gbc.readMem(0xa5d7), 0x33);
        // CB 33 000B
        gbc.setState(0x75ea, 0x1b6c, 0x56a0, 0xf282, 0xd409, 0xd9d8, 0x1, 0x1);
        gbc.writeMem(0x75ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1b6c);
        EXPECT(gbc.pc(), 0x75ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 000C
        gbc.setState(0x199, 0xaf27, 0x8b80, 0x603e, 0x6bff, 0x3241, 0x1, 0x1);
        gbc.writeMem(0x199, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xaf27);
        EXPECT(gbc.pc(), 0x19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 000D
        gbc.setState(0x75e, 0x4aa7, 0x55b0, 0x9992, 0x78ea, 0x365f, 0x0, 0x0);
        gbc.writeMem(0x75e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4aa7);
        EXPECT(gbc.pc(), 0x760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 000E
        gbc.setState(0x86ba, 0x9b91, 0x9870, 0x472f, 0x942a, 0x1c23, 0x1, 0x0);
        gbc.writeMem(0x86ba, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9b91);
        EXPECT(gbc.pc(), 0x86bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ba), 0xcb);
        EXPECT(gbc.readMem(0x86bb), 0x33);
        // CB 33 0010
        gbc.setState(0x9144, 0x4407, 0x570, 0xaa78, 0xa196, 0x10d2, 0x1, 0x1);
        gbc.writeMem(0x9144, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0x9146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9144), 0xcb);
        EXPECT(gbc.readMem(0x9145), 0x33);
        // CB 33 0011
        gbc.setState(0x7570, 0xd52a, 0xbb0, 0x707b, 0x707e, 0x857, 0x0, 0x1);
        gbc.writeMem(0x7570, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd52a);
        EXPECT(gbc.pc(), 0x7572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0012
        gbc.setState(0xd319, 0x44e2, 0x5290, 0xf4db, 0x5507, 0x3f96, 0x1, 0x1);
        gbc.writeMem(0xd319, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x44e2);
        EXPECT(gbc.pc(), 0xd31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd319), 0xcb);
        EXPECT(gbc.readMem(0xd31a), 0x33);
        // CB 33 0013
        gbc.setState(0xca84, 0x41b7, 0xcb60, 0x9c3d, 0x9e13, 0x9c23, 0x0, 0x0);
        gbc.writeMem(0xca84, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x41b7);
        EXPECT(gbc.pc(), 0xca86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca84), 0xcb);
        EXPECT(gbc.readMem(0xca85), 0x33);
        // CB 33 0014
        gbc.setState(0x2810, 0x63f5, 0x7020, 0x1050, 0x5d89, 0x89c2, 0x1, 0x1);
        gbc.writeMem(0x2810, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x63f5);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0015
        gbc.setState(0xd335, 0xa312, 0x47c0, 0x7d5b, 0xbcae, 0x2395, 0x1, 0x1);
        gbc.writeMem(0xd335, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa312);
        EXPECT(gbc.pc(), 0xd337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd335), 0xcb);
        EXPECT(gbc.readMem(0xd336), 0x33);
        // CB 33 0016
        gbc.setState(0xad82, 0x30d, 0x4120, 0x6a56, 0xd543, 0x7762, 0x1, 0x1);
        gbc.writeMem(0xad82, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x30d);
        EXPECT(gbc.pc(), 0xad84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad82), 0xcb);
        EXPECT(gbc.readMem(0xad83), 0x33);
        // CB 33 0017
        gbc.setState(0xc70, 0xb3e1, 0xdb10, 0x7648, 0x99c2, 0x16a3, 0x0, 0x0);
        gbc.writeMem(0xc70, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb3e1);
        EXPECT(gbc.pc(), 0xc72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0018
        gbc.setState(0xb6d3, 0x373e, 0x6f70, 0x9aa, 0x7804, 0x831, 0x0, 0x0);
        gbc.writeMem(0xb6d3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x373e);
        EXPECT(gbc.pc(), 0xb6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d3), 0xcb);
        EXPECT(gbc.readMem(0xb6d4), 0x33);
        // CB 33 0019
        gbc.setState(0xbbea, 0x3ca, 0x6ea0, 0x8af8, 0xd04d, 0x2fc3, 0x1, 0x0);
        gbc.writeMem(0xbbea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3ca);
        EXPECT(gbc.pc(), 0xbbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbea), 0xcb);
        EXPECT(gbc.readMem(0xbbeb), 0x33);
        // CB 33 001A
        gbc.setState(0xce53, 0x130b, 0x380, 0x2863, 0x44ec, 0x4224, 0x1, 0x0);
        gbc.writeMem(0xce53, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x130b);
        EXPECT(gbc.pc(), 0xce55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce53), 0xcb);
        EXPECT(gbc.readMem(0xce54), 0x33);
        // CB 33 001B
        gbc.setState(0xb73a, 0x1324, 0x4110, 0xff02, 0x93c9, 0x3402, 0x1, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1324);
        EXPECT(gbc.pc(), 0xb73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73a), 0xcb);
        EXPECT(gbc.readMem(0xb73b), 0x33);
        // CB 33 001C
        gbc.setState(0xd1d7, 0x9f, 0x3940, 0x95f0, 0x84e, 0xe607, 0x1, 0x0);
        gbc.writeMem(0xd1d7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9f);
        EXPECT(gbc.pc(), 0xd1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d7), 0xcb);
        EXPECT(gbc.readMem(0xd1d8), 0x33);
        // CB 33 001D
        gbc.setState(0xdd84, 0x8ee8, 0x27c0, 0x4bbd, 0x602e, 0x8ed3, 0x1, 0x0);
        gbc.writeMem(0xdd84, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0xdd86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd84), 0xcb);
        EXPECT(gbc.readMem(0xdd85), 0x33);
        // CB 33 001E
        gbc.setState(0x2f3d, 0x6ab6, 0x2420, 0x2c2f, 0xe877, 0x151d, 0x0, 0x1);
        gbc.writeMem(0x2f3d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6ab6);
        EXPECT(gbc.pc(), 0x2f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 001F
        gbc.setState(0xd52d, 0x4ee1, 0x8f60, 0x79a, 0x78da, 0x95ac, 0x0, 0x1);
        gbc.writeMem(0xd52d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4ee1);
        EXPECT(gbc.pc(), 0xd52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52d), 0xcb);
        EXPECT(gbc.readMem(0xd52e), 0x33);
        // CB 33 0020
        gbc.setState(0x28c2, 0xa242, 0xb60, 0x7a8a, 0x786, 0xb716, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa242);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0021
        gbc.setState(0x4d5, 0xc198, 0x41e0, 0x1f82, 0x738c, 0x54ad, 0x1, 0x1);
        gbc.writeMem(0x4d5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc198);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0022
        gbc.setState(0x9c2, 0x709a, 0x4b30, 0x35f1, 0x9ed9, 0xcb16, 0x0, 0x1);
        gbc.writeMem(0x9c2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x709a);
        EXPECT(gbc.pc(), 0x9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0023
        gbc.setState(0x185c, 0x58f7, 0x87a0, 0xf37b, 0x7864, 0x4159, 0x1, 0x1);
        gbc.writeMem(0x185c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x58f7);
        EXPECT(gbc.pc(), 0x185e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0024
        gbc.setState(0x5c91, 0xb42d, 0x9c60, 0x7e73, 0xef0d, 0x9494, 0x1, 0x0);
        gbc.writeMem(0x5c91, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb42d);
        EXPECT(gbc.pc(), 0x5c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0025
        gbc.setState(0xb5bd, 0xfc52, 0x1da0, 0xc565, 0x2cf3, 0x82ce, 0x0, 0x0);
        gbc.writeMem(0xb5bd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfc52);
        EXPECT(gbc.pc(), 0xb5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5bd), 0xcb);
        EXPECT(gbc.readMem(0xb5be), 0x33);
        // CB 33 0026
        gbc.setState(0xb659, 0x58bb, 0x1810, 0x6f89, 0x53a7, 0x22f2, 0x0, 0x1);
        gbc.writeMem(0xb659, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0xb65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb659), 0xcb);
        EXPECT(gbc.readMem(0xb65a), 0x33);
        // CB 33 0027
        gbc.setState(0x49de, 0x466c, 0x6330, 0xea52, 0x5692, 0xe7a9, 0x0, 0x1);
        gbc.writeMem(0x49de, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x466c);
        EXPECT(gbc.pc(), 0x49e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0028
        gbc.setState(0x244, 0x510a, 0xeaf0, 0xaa64, 0xc4e2, 0xb320, 0x1, 0x1);
        gbc.writeMem(0x244, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x510a);
        EXPECT(gbc.pc(), 0x246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0029
        gbc.setState(0x33f4, 0xe3c6, 0x25f0, 0x20bf, 0xec96, 0x2b98, 0x0, 0x0);
        gbc.writeMem(0x33f4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe3c6);
        EXPECT(gbc.pc(), 0x33f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 002A
        gbc.setState(0xc1eb, 0xab5, 0xe330, 0xbc47, 0x2999, 0x1494, 0x0, 0x0);
        gbc.writeMem(0xc1eb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xab5);
        EXPECT(gbc.pc(), 0xc1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1eb), 0xcb);
        EXPECT(gbc.readMem(0xc1ec), 0x33);
        // CB 33 002B
        gbc.setState(0x6cab, 0x7bb6, 0xbf30, 0x7139, 0x681a, 0x4360, 0x1, 0x1);
        gbc.writeMem(0x6cab, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7bb6);
        EXPECT(gbc.pc(), 0x6cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 002C
        gbc.setState(0x1eaf, 0xb9cd, 0xfcb0, 0x1324, 0xe8bc, 0x38d1, 0x1, 0x1);
        gbc.writeMem(0x1eaf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb9cd);
        EXPECT(gbc.pc(), 0x1eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 002D
        gbc.setState(0xd557, 0x6faa, 0x6310, 0x599e, 0xdb00, 0xdf8b, 0x1, 0x1);
        gbc.writeMem(0xd557, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6faa);
        EXPECT(gbc.pc(), 0xd559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd557), 0xcb);
        EXPECT(gbc.readMem(0xd558), 0x33);
        // CB 33 002E
        gbc.setState(0x2d69, 0xbe19, 0xc9b0, 0x53da, 0x865b, 0x8c66, 0x1, 0x0);
        gbc.writeMem(0x2d69, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbe19);
        EXPECT(gbc.pc(), 0x2d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 002F
        gbc.setState(0x2a08, 0xb405, 0x6850, 0x5a65, 0xb1ac, 0x850c, 0x1, 0x1);
        gbc.writeMem(0x2a08, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb405);
        EXPECT(gbc.pc(), 0x2a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0030
        gbc.setState(0x2495, 0xfbde, 0x9060, 0x1e0b, 0x1ece, 0xf4b, 0x1, 0x1);
        gbc.writeMem(0x2495, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xfbde);
        EXPECT(gbc.pc(), 0x2497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0032
        gbc.setState(0x7e51, 0x6a91, 0xacf0, 0x6a6d, 0x2950, 0xaaea, 0x1, 0x1);
        gbc.writeMem(0x7e51, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6a91);
        EXPECT(gbc.pc(), 0x7e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0033
        gbc.setState(0xeec5, 0x68e9, 0xb6d0, 0xb47f, 0x8b34, 0x9ccb, 0x0, 0x1);
        gbc.writeMem(0xeec5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x68e9);
        EXPECT(gbc.pc(), 0xeec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec5), 0xcb);
        EXPECT(gbc.readMem(0xeec6), 0x33);
        // CB 33 0034
        gbc.setState(0x7b9e, 0x5874, 0xb500, 0x422c, 0xd6d3, 0x3d71, 0x1, 0x0);
        gbc.writeMem(0x7b9e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5874);
        EXPECT(gbc.pc(), 0x7ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0035
        gbc.setState(0x58f9, 0x2ac5, 0x5090, 0x8af9, 0x4a5f, 0xb12e, 0x0, 0x1);
        gbc.writeMem(0x58f9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2ac5);
        EXPECT(gbc.pc(), 0x58fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0036
        gbc.setState(0x224c, 0xdec1, 0xb250, 0xeeb2, 0x7ed6, 0xfc66, 0x1, 0x0);
        gbc.writeMem(0x224c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdec1);
        EXPECT(gbc.pc(), 0x224e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0037
        gbc.setState(0xc4f5, 0x5caf, 0xa2c0, 0xd632, 0xe313, 0x12e, 0x0, 0x1);
        gbc.writeMem(0xc4f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5caf);
        EXPECT(gbc.pc(), 0xc4f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f5), 0xcb);
        EXPECT(gbc.readMem(0xc4f6), 0x33);
        // CB 33 0038
        gbc.setState(0x69e3, 0xdeb8, 0x80f0, 0xadd1, 0xc825, 0x4009, 0x0, 0x0);
        gbc.writeMem(0x69e3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdeb8);
        EXPECT(gbc.pc(), 0x69e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0039
        gbc.setState(0xcd39, 0x5888, 0x3a90, 0x7338, 0x1ad6, 0xea5d, 0x1, 0x0);
        gbc.writeMem(0xcd39, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5888);
        EXPECT(gbc.pc(), 0xcd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd39), 0xcb);
        EXPECT(gbc.readMem(0xcd3a), 0x33);
        // CB 33 003A
        gbc.setState(0x4125, 0x8037, 0xe1d0, 0xb7e, 0xf63e, 0x4c9d, 0x1, 0x1);
        gbc.writeMem(0x4125, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8037);
        EXPECT(gbc.pc(), 0x4127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 003B
        gbc.setState(0x3bb3, 0xa29e, 0x4020, 0x11, 0x1976, 0xed58, 0x1, 0x0);
        gbc.writeMem(0x3bb3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa29e);
        EXPECT(gbc.pc(), 0x3bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 003C
        gbc.setState(0x6d11, 0x6d93, 0x4b20, 0x68ca, 0xf9, 0xd79f, 0x0, 0x0);
        gbc.writeMem(0x6d11, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6d93);
        EXPECT(gbc.pc(), 0x6d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 003D
        gbc.setState(0xa3ad, 0xcd63, 0xaa70, 0x241b, 0x76, 0x45fc, 0x0, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcd63);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0x33);
        // CB 33 003E
        gbc.setState(0xab04, 0xd981, 0x6b10, 0x9f, 0xebfa, 0x52ba, 0x0, 0x0);
        gbc.writeMem(0xab04, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd981);
        EXPECT(gbc.pc(), 0xab06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab04), 0xcb);
        EXPECT(gbc.readMem(0xab05), 0x33);
        // CB 33 003F
        gbc.setState(0x8bac, 0x83a2, 0x62e0, 0x18e7, 0xaea6, 0x4709, 0x0, 0x0);
        gbc.writeMem(0x8bac, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x83a2);
        EXPECT(gbc.pc(), 0x8bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bac), 0xcb);
        EXPECT(gbc.readMem(0x8bad), 0x33);
        // CB 33 0040
        gbc.setState(0xbe9b, 0xaa40, 0xa260, 0x2d03, 0x41c0, 0x3d8e, 0x1, 0x1);
        gbc.writeMem(0xbe9b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xaa40);
        EXPECT(gbc.pc(), 0xbe9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9b), 0xcb);
        EXPECT(gbc.readMem(0xbe9c), 0x33);
        // CB 33 0042
        gbc.setState(0x32a0, 0x8e78, 0x10d0, 0xa887, 0x79a7, 0x29da, 0x0, 0x1);
        gbc.writeMem(0x32a0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8e78);
        EXPECT(gbc.pc(), 0x32a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0043
        gbc.setState(0xbff6, 0x6832, 0x3b50, 0xedcd, 0x3d8e, 0x6748, 0x0, 0x1);
        gbc.writeMem(0xbff6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6832);
        EXPECT(gbc.pc(), 0xbff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff6), 0xcb);
        EXPECT(gbc.readMem(0xbff7), 0x33);
        // CB 33 0044
        gbc.setState(0xbf6b, 0x4399, 0xf730, 0xe1fe, 0xb8ed, 0x51bc, 0x0, 0x0);
        gbc.writeMem(0xbf6b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4399);
        EXPECT(gbc.pc(), 0xbf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6b), 0xcb);
        EXPECT(gbc.readMem(0xbf6c), 0x33);
        // CB 33 0045
        gbc.setState(0x1849, 0x6a1b, 0x27d0, 0x1922, 0x2a03, 0xf3d2, 0x0, 0x0);
        gbc.writeMem(0x1849, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6a1b);
        EXPECT(gbc.pc(), 0x184b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0046
        gbc.setState(0x44d, 0x5ba9, 0xf360, 0x536b, 0xaaee, 0x3819, 0x0, 0x0);
        gbc.writeMem(0x44d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5ba9);
        EXPECT(gbc.pc(), 0x44f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0047
        gbc.setState(0x473e, 0x3b09, 0xd610, 0x47fa, 0xf69c, 0xdfb2, 0x0, 0x1);
        gbc.writeMem(0x473e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3b09);
        EXPECT(gbc.pc(), 0x4740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0048
        gbc.setState(0x9e89, 0xa2c0, 0x7510, 0x2494, 0x8ebe, 0xc336, 0x1, 0x0);
        gbc.writeMem(0x9e89, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa2c0);
        EXPECT(gbc.pc(), 0x9e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e89), 0xcb);
        EXPECT(gbc.readMem(0x9e8a), 0x33);
        // CB 33 0049
        gbc.setState(0xab9f, 0xf7d5, 0x9af0, 0x8663, 0xb80b, 0x5018, 0x1, 0x0);
        gbc.writeMem(0xab9f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf7d5);
        EXPECT(gbc.pc(), 0xaba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9f), 0xcb);
        EXPECT(gbc.readMem(0xaba0), 0x33);
        // CB 33 004A
        gbc.setState(0x36ea, 0xbc1d, 0xd4e0, 0xf1fa, 0xd6fc, 0x8ad6, 0x1, 0x1);
        gbc.writeMem(0x36ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbc1d);
        EXPECT(gbc.pc(), 0x36ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 004B
        gbc.setState(0x17ba, 0xf4aa, 0x5050, 0x57b7, 0xfb6d, 0xbfbf, 0x0, 0x1);
        gbc.writeMem(0x17ba, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf4aa);
        EXPECT(gbc.pc(), 0x17bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 004C
        gbc.setState(0x224e, 0xe40, 0xad30, 0x4a1d, 0x125d, 0x6af7, 0x1, 0x0);
        gbc.writeMem(0x224e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe40);
        EXPECT(gbc.pc(), 0x2250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 004D
        gbc.setState(0xc49b, 0x9f2b, 0x9780, 0x738, 0x89df, 0xf62f, 0x0, 0x1);
        gbc.writeMem(0xc49b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9f2b);
        EXPECT(gbc.pc(), 0xc49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc49b), 0xcb);
        EXPECT(gbc.readMem(0xc49c), 0x33);
        // CB 33 004E
        gbc.setState(0x3206, 0xe45a, 0xe7e0, 0xa17c, 0x6b33, 0x6e1e, 0x0, 0x1);
        gbc.writeMem(0x3206, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe45a);
        EXPECT(gbc.pc(), 0x3208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 004F
        gbc.setState(0x9027, 0x46f1, 0xfec0, 0xeff0, 0xd992, 0xf50, 0x0, 0x0);
        gbc.writeMem(0x9027, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x46f1);
        EXPECT(gbc.pc(), 0x9029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9027), 0xcb);
        EXPECT(gbc.readMem(0x9028), 0x33);
        // CB 33 0050
        gbc.setState(0x86f2, 0x3441, 0xc5f0, 0xfb9, 0x9f1, 0x9f47, 0x0, 0x1);
        gbc.writeMem(0x86f2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3441);
        EXPECT(gbc.pc(), 0x86f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f2), 0xcb);
        EXPECT(gbc.readMem(0x86f3), 0x33);
        // CB 33 0051
        gbc.setState(0x4ac8, 0x67e, 0x6a0, 0x45e, 0x776d, 0x4c2b, 0x1, 0x1);
        gbc.writeMem(0x4ac8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x67e);
        EXPECT(gbc.pc(), 0x4aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0052
        gbc.setState(0x8fb2, 0x250f, 0x5d90, 0x51d4, 0xa357, 0x390, 0x0, 0x0);
        gbc.writeMem(0x8fb2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x250f);
        EXPECT(gbc.pc(), 0x8fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb2), 0xcb);
        EXPECT(gbc.readMem(0x8fb3), 0x33);
        // CB 33 0053
        gbc.setState(0xb9fb, 0x229c, 0x7100, 0xa662, 0x7138, 0x2e03, 0x1, 0x1);
        gbc.writeMem(0xb9fb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x229c);
        EXPECT(gbc.pc(), 0xb9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9fb), 0xcb);
        EXPECT(gbc.readMem(0xb9fc), 0x33);
        // CB 33 0054
        gbc.setState(0x7782, 0x7710, 0xd5a0, 0x3934, 0x1b37, 0xb8f5, 0x0, 0x1);
        gbc.writeMem(0x7782, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7710);
        EXPECT(gbc.pc(), 0x7784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0055
        gbc.setState(0xcc5d, 0xd590, 0xbf0, 0x4a33, 0x6a45, 0xd1ba, 0x1, 0x0);
        gbc.writeMem(0xcc5d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd590);
        EXPECT(gbc.pc(), 0xcc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5d), 0xcb);
        EXPECT(gbc.readMem(0xcc5e), 0x33);
        // CB 33 0056
        gbc.setState(0xd9c2, 0x1fc4, 0xdee0, 0x7bb4, 0xb9ac, 0x98ad, 0x1, 0x1);
        gbc.writeMem(0xd9c2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1fc4);
        EXPECT(gbc.pc(), 0xd9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c2), 0xcb);
        EXPECT(gbc.readMem(0xd9c3), 0x33);
        // CB 33 0057
        gbc.setState(0xabf9, 0x617e, 0xd770, 0xf2dd, 0x3ac9, 0xf371, 0x1, 0x1);
        gbc.writeMem(0xabf9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x617e);
        EXPECT(gbc.pc(), 0xabfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf9), 0xcb);
        EXPECT(gbc.readMem(0xabfa), 0x33);
        // CB 33 0058
        gbc.setState(0x8e39, 0xd17, 0xda10, 0xf4a0, 0xde42, 0x8758, 0x1, 0x1);
        gbc.writeMem(0x8e39, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd17);
        EXPECT(gbc.pc(), 0x8e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e39), 0xcb);
        EXPECT(gbc.readMem(0x8e3a), 0x33);
        // CB 33 0059
        gbc.setState(0x423a, 0x5576, 0x3f20, 0x5e5, 0xf4cd, 0xab5e, 0x0, 0x1);
        gbc.writeMem(0x423a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5576);
        EXPECT(gbc.pc(), 0x423c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 005A
        gbc.setState(0xef4c, 0xb539, 0xc2e0, 0xbca7, 0x59ef, 0x4500, 0x0, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0xef4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4c), 0xcb);
        EXPECT(gbc.readMem(0xef4d), 0x33);
        // CB 33 005B
        gbc.setState(0x1660, 0x46b7, 0x60f0, 0x6006, 0x4407, 0x1ec9, 0x0, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x46b7);
        EXPECT(gbc.pc(), 0x1662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 005C
        gbc.setState(0x4530, 0xbcfc, 0x99e0, 0x7894, 0x7d35, 0x7b0c, 0x1, 0x0);
        gbc.writeMem(0x4530, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbcfc);
        EXPECT(gbc.pc(), 0x4532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 005D
        gbc.setState(0x9db7, 0x2a36, 0xea0, 0x9c6e, 0x952e, 0x44c5, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2a36);
        EXPECT(gbc.pc(), 0x9db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db7), 0xcb);
        EXPECT(gbc.readMem(0x9db8), 0x33);
        // CB 33 005E
        gbc.setState(0x75a5, 0xf6fe, 0xafb0, 0x28b9, 0x77d7, 0x30b6, 0x1, 0x1);
        gbc.writeMem(0x75a5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf6fe);
        EXPECT(gbc.pc(), 0x75a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 005F
        gbc.setState(0x8e6a, 0x5913, 0xc5e0, 0x4e0d, 0xef19, 0x5509, 0x1, 0x1);
        gbc.writeMem(0x8e6a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5913);
        EXPECT(gbc.pc(), 0x8e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6a), 0xcb);
        EXPECT(gbc.readMem(0x8e6b), 0x33);
        // CB 33 0060
        gbc.setState(0xa181, 0xa146, 0x28a0, 0xf42b, 0x449b, 0xee53, 0x1, 0x1);
        gbc.writeMem(0xa181, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa146);
        EXPECT(gbc.pc(), 0xa183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa181), 0xcb);
        EXPECT(gbc.readMem(0xa182), 0x33);
        // CB 33 0061
        gbc.setState(0xee25, 0x156f, 0x4240, 0x61c0, 0x7f9b, 0xc57f, 0x1, 0x0);
        gbc.writeMem(0xee25, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x156f);
        EXPECT(gbc.pc(), 0xee27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee25), 0xcb);
        EXPECT(gbc.readMem(0xee26), 0x33);
        // CB 33 0064
        gbc.setState(0xa766, 0xd4a5, 0x9ff0, 0x4d82, 0xdc1b, 0x65d4, 0x0, 0x1);
        gbc.writeMem(0xa766, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd4a5);
        EXPECT(gbc.pc(), 0xa768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa766), 0xcb);
        EXPECT(gbc.readMem(0xa767), 0x33);
        // CB 33 0065
        gbc.setState(0xef4b, 0x4b10, 0xf010, 0x7851, 0x1ced, 0xd8ad, 0x1, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4b), 0xcb);
        EXPECT(gbc.readMem(0xef4c), 0x33);
        // CB 33 0066
        gbc.setState(0x76f5, 0x395a, 0x63b0, 0xfefd, 0x16e, 0xfb7f, 0x1, 0x1);
        gbc.writeMem(0x76f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x395a);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0067
        gbc.setState(0x842, 0xa8fc, 0xce70, 0x2b75, 0x59ff, 0x35a6, 0x1, 0x0);
        gbc.writeMem(0x842, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa8fc);
        EXPECT(gbc.pc(), 0x844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0068
        gbc.setState(0x3a43, 0xbf2a, 0x8b30, 0x85dc, 0x88be, 0x28d1, 0x0, 0x1);
        gbc.writeMem(0x3a43, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbf2a);
        EXPECT(gbc.pc(), 0x3a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 006A
        gbc.setState(0xd10, 0x9a1c, 0x43f0, 0xd4a0, 0x4266, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0xd10, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9a1c);
        EXPECT(gbc.pc(), 0xd12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 006B
        gbc.setState(0xa86a, 0xa25, 0x4c50, 0xe7d6, 0x18f4, 0x222f, 0x0, 0x1);
        gbc.writeMem(0xa86a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0xa86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86a), 0xcb);
        EXPECT(gbc.readMem(0xa86b), 0x33);
        // CB 33 006C
        gbc.setState(0xae60, 0x5f65, 0x30f0, 0x156d, 0xf30d, 0xcaf5, 0x0, 0x0);
        gbc.writeMem(0xae60, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5f65);
        EXPECT(gbc.pc(), 0xae62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae60), 0xcb);
        EXPECT(gbc.readMem(0xae61), 0x33);
        // CB 33 006D
        gbc.setState(0x43c1, 0xb09e, 0x2470, 0x4fb, 0xee64, 0xe023, 0x1, 0x0);
        gbc.writeMem(0x43c1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb09e);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 006E
        gbc.setState(0x2c2d, 0x569e, 0x990, 0x5db0, 0xc31f, 0x1e64, 0x0, 0x0);
        gbc.writeMem(0x2c2d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0x2c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 006F
        gbc.setState(0xa586, 0x6bb3, 0xf890, 0xd657, 0xf8a6, 0x1ddd, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6bb3);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0x33);
        // CB 33 0070
        gbc.setState(0xc3a5, 0x913b, 0xe5c0, 0x5eda, 0x5b98, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0xc3a5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x913b);
        EXPECT(gbc.pc(), 0xc3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a5), 0xcb);
        EXPECT(gbc.readMem(0xc3a6), 0x33);
        // CB 33 0071
        gbc.setState(0xddc7, 0xe00c, 0x5880, 0xd718, 0x24a0, 0x50b6, 0x0, 0x0);
        gbc.writeMem(0xddc7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe00c);
        EXPECT(gbc.pc(), 0xddc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc7), 0xcb);
        EXPECT(gbc.readMem(0xddc8), 0x33);
        // CB 33 0072
        gbc.setState(0x6241, 0x39d0, 0x3d50, 0xc882, 0x8e08, 0xe493, 0x0, 0x1);
        gbc.writeMem(0x6241, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x39d0);
        EXPECT(gbc.pc(), 0x6243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0073
        gbc.setState(0x3c5f, 0xfd38, 0xd6b0, 0x45ad, 0xc325, 0xe0d2, 0x0, 0x1);
        gbc.writeMem(0x3c5f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfd38);
        EXPECT(gbc.pc(), 0x3c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0074
        gbc.setState(0x7d6e, 0xb8a1, 0x7eb0, 0x7cc2, 0x43c5, 0xe36b, 0x1, 0x0);
        gbc.writeMem(0x7d6e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb8a1);
        EXPECT(gbc.pc(), 0x7d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0075
        gbc.setState(0xdd21, 0x87e9, 0xad10, 0xb39c, 0x38d3, 0x7970, 0x1, 0x1);
        gbc.writeMem(0xdd21, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x87e9);
        EXPECT(gbc.pc(), 0xdd23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd21), 0xcb);
        EXPECT(gbc.readMem(0xdd22), 0x33);
        // CB 33 0076
        gbc.setState(0x3a3b, 0x3eb4, 0x240, 0x1f8, 0x5267, 0xf41, 0x0, 0x1);
        gbc.writeMem(0x3a3b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3eb4);
        EXPECT(gbc.pc(), 0x3a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0077
        gbc.setState(0x7fce, 0x68f1, 0x2570, 0x8c0c, 0x6261, 0x7325, 0x0, 0x0);
        gbc.writeMem(0x7fce, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x68f1);
        EXPECT(gbc.pc(), 0x7fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0078
        gbc.setState(0x4637, 0x865e, 0x6220, 0x1b24, 0xce0f, 0x177f, 0x0, 0x1);
        gbc.writeMem(0x4637, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x865e);
        EXPECT(gbc.pc(), 0x4639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0079
        gbc.setState(0xdb27, 0xe4a6, 0xbd00, 0xfb0e, 0x1420, 0xa53e, 0x1, 0x0);
        gbc.writeMem(0xdb27, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe4a6);
        EXPECT(gbc.pc(), 0xdb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb27), 0xcb);
        EXPECT(gbc.readMem(0xdb28), 0x33);
        // CB 33 007B
        gbc.setState(0x7d5e, 0xc90a, 0x47b0, 0xc3a5, 0x75df, 0x6cfa, 0x1, 0x1);
        gbc.writeMem(0x7d5e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0x7d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 007C
        gbc.setState(0x9d29, 0xabd8, 0x60e0, 0x931b, 0xcbb9, 0x786e, 0x1, 0x0);
        gbc.writeMem(0x9d29, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xabd8);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d29), 0xcb);
        EXPECT(gbc.readMem(0x9d2a), 0x33);
        // CB 33 007D
        gbc.setState(0x5d11, 0x20f, 0x8f90, 0xb68a, 0xbe43, 0x779a, 0x1, 0x1);
        gbc.writeMem(0x5d11, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x20f);
        EXPECT(gbc.pc(), 0x5d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 007E
        gbc.setState(0xcfb9, 0xf25e, 0xf3b0, 0x3436, 0x31e4, 0xab04, 0x1, 0x1);
        gbc.writeMem(0xcfb9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0xcfbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb9), 0xcb);
        EXPECT(gbc.readMem(0xcfba), 0x33);
        // CB 33 007F
        gbc.setState(0x8721, 0x6fa5, 0x90c0, 0xa3a5, 0x98de, 0xb9bf, 0x0, 0x0);
        gbc.writeMem(0x8721, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x8723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8721), 0xcb);
        EXPECT(gbc.readMem(0x8722), 0x33);
        // CB 33 0080
        gbc.setState(0x9555, 0xaff9, 0xef40, 0xeeb4, 0xf50d, 0x7ecf, 0x1, 0x0);
        gbc.writeMem(0x9555, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xaff9);
        EXPECT(gbc.pc(), 0x9557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9555), 0xcb);
        EXPECT(gbc.readMem(0x9556), 0x33);
        // CB 33 0081
        gbc.setState(0xae, 0x7788, 0x9b0, 0x1cb4, 0x112a, 0xacb2, 0x0, 0x1);
        gbc.writeMem(0xae, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7788);
        EXPECT(gbc.pc(), 0xb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0082
        gbc.setState(0xc2a1, 0x72cf, 0xcc80, 0x6add, 0x8c05, 0xf072, 0x1, 0x1);
        gbc.writeMem(0xc2a1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x72cf);
        EXPECT(gbc.pc(), 0xc2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a1), 0xcb);
        EXPECT(gbc.readMem(0xc2a2), 0x33);
        // CB 33 0083
        gbc.setState(0x39e2, 0x4fb, 0x59b0, 0x17b5, 0xfb71, 0x7db6, 0x0, 0x1);
        gbc.writeMem(0x39e2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4fb);
        EXPECT(gbc.pc(), 0x39e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0084
        gbc.setState(0xa46d, 0x2e38, 0x55d0, 0x1561, 0x6bf2, 0x674e, 0x0, 0x0);
        gbc.writeMem(0xa46d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2e38);
        EXPECT(gbc.pc(), 0xa46f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46d), 0xcb);
        EXPECT(gbc.readMem(0xa46e), 0x33);
        // CB 33 0085
        gbc.setState(0x6234, 0x9827, 0x97c0, 0x48a9, 0x9aa0, 0x26e7, 0x1, 0x1);
        gbc.writeMem(0x6234, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9827);
        EXPECT(gbc.pc(), 0x6236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0086
        gbc.setState(0x43fa, 0x2f80, 0xa800, 0xaa02, 0xe6b5, 0xeabb, 0x0, 0x0);
        gbc.writeMem(0x43fa, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2f80);
        EXPECT(gbc.pc(), 0x43fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0087
        gbc.setState(0xceb8, 0x1a8b, 0x4010, 0x71e9, 0x694a, 0xbc4a, 0x1, 0x0);
        gbc.writeMem(0xceb8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1a8b);
        EXPECT(gbc.pc(), 0xceba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb8), 0xcb);
        EXPECT(gbc.readMem(0xceb9), 0x33);
        // CB 33 0088
        gbc.setState(0x368a, 0xac5d, 0x5cc0, 0xfa95, 0x5f28, 0xd984, 0x1, 0x1);
        gbc.writeMem(0x368a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xac5d);
        EXPECT(gbc.pc(), 0x368c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0089
        gbc.setState(0x4f64, 0x56f6, 0xc270, 0x196b, 0xf8eb, 0xb551, 0x1, 0x1);
        gbc.writeMem(0x4f64, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x56f6);
        EXPECT(gbc.pc(), 0x4f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 008A
        gbc.setState(0x68c2, 0x943a, 0x3fe0, 0x21de, 0xd85e, 0xc0b, 0x0, 0x1);
        gbc.writeMem(0x68c2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x943a);
        EXPECT(gbc.pc(), 0x68c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 008B
        gbc.setState(0xb07, 0x25d1, 0xe530, 0x975f, 0xa1b5, 0x2689, 0x1, 0x1);
        gbc.writeMem(0xb07, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x25d1);
        EXPECT(gbc.pc(), 0xb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 008C
        gbc.setState(0x1d50, 0x763, 0xfa50, 0xdfb8, 0xfafd, 0xc856, 0x0, 0x0);
        gbc.writeMem(0x1d50, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x763);
        EXPECT(gbc.pc(), 0x1d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 008D
        gbc.setState(0xa922, 0x621b, 0x6600, 0xc4a0, 0x864, 0x1259, 0x1, 0x0);
        gbc.writeMem(0xa922, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x621b);
        EXPECT(gbc.pc(), 0xa924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa922), 0xcb);
        EXPECT(gbc.readMem(0xa923), 0x33);
        // CB 33 008E
        gbc.setState(0x935, 0xceb, 0x5e60, 0x4d3f, 0x76b5, 0x63f8, 0x0, 0x0);
        gbc.writeMem(0x935, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xceb);
        EXPECT(gbc.pc(), 0x937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 008F
        gbc.setState(0xc8c9, 0xcb31, 0xdeb0, 0xa8d9, 0x887f, 0x5110, 0x1, 0x1);
        gbc.writeMem(0xc8c9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0xc8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c9), 0xcb);
        EXPECT(gbc.readMem(0xc8ca), 0x33);
        // CB 33 0090
        gbc.setState(0x31ab, 0x8260, 0xd260, 0xdf3c, 0xa48b, 0x65fb, 0x1, 0x0);
        gbc.writeMem(0x31ab, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8260);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0091
        gbc.setState(0x876a, 0xaa56, 0xbfa0, 0x3ea5, 0xca84, 0xf1b2, 0x0, 0x0);
        gbc.writeMem(0x876a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaa56);
        EXPECT(gbc.pc(), 0x876c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876a), 0xcb);
        EXPECT(gbc.readMem(0x876b), 0x33);
        // CB 33 0092
        gbc.setState(0x8f51, 0x82d1, 0x96c0, 0x1b, 0xb99f, 0x4a71, 0x0, 0x1);
        gbc.writeMem(0x8f51, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x82d1);
        EXPECT(gbc.pc(), 0x8f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f51), 0xcb);
        EXPECT(gbc.readMem(0x8f52), 0x33);
        // CB 33 0093
        gbc.setState(0x853e, 0x2098, 0x97d0, 0xb408, 0x3267, 0xc7da, 0x1, 0x0);
        gbc.writeMem(0x853e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2098);
        EXPECT(gbc.pc(), 0x8540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853e), 0xcb);
        EXPECT(gbc.readMem(0x853f), 0x33);
        // CB 33 0094
        gbc.setState(0x8d59, 0xc448, 0xb840, 0xc16c, 0xa08e, 0xa4ed, 0x0, 0x1);
        gbc.writeMem(0x8d59, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc448);
        EXPECT(gbc.pc(), 0x8d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d59), 0xcb);
        EXPECT(gbc.readMem(0x8d5a), 0x33);
        // CB 33 0095
        gbc.setState(0x1702, 0x48ff, 0xcb00, 0x2160, 0x3e8a, 0x4a47, 0x1, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0096
        gbc.setState(0x7f01, 0x581a, 0xf320, 0x4f5e, 0x7b21, 0x3fda, 0x1, 0x0);
        gbc.writeMem(0x7f01, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x581a);
        EXPECT(gbc.pc(), 0x7f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0098
        gbc.setState(0x13b8, 0x52c8, 0x8600, 0xe3cb, 0x21d0, 0x4554, 0x1, 0x0);
        gbc.writeMem(0x13b8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x13ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0099
        gbc.setState(0xd1e3, 0xa79e, 0x6a70, 0x6a01, 0xdeb7, 0xf865, 0x0, 0x0);
        gbc.writeMem(0xd1e3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa79e);
        EXPECT(gbc.pc(), 0xd1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e3), 0xcb);
        EXPECT(gbc.readMem(0xd1e4), 0x33);
        // CB 33 009A
        gbc.setState(0x5000, 0xed9f, 0xb3b0, 0x4e76, 0x67a9, 0xb6ae, 0x1, 0x0);
        gbc.writeMem(0x5000, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xed9f);
        EXPECT(gbc.pc(), 0x5002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 009B
        gbc.setState(0xa256, 0x20be, 0xedb0, 0xe844, 0x5b9, 0x38bd, 0x0, 0x1);
        gbc.writeMem(0xa256, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x20be);
        EXPECT(gbc.pc(), 0xa258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa256), 0xcb);
        EXPECT(gbc.readMem(0xa257), 0x33);
        // CB 33 009C
        gbc.setState(0x1be5, 0xfd54, 0x72f0, 0xfef1, 0xb5f6, 0xa0e3, 0x1, 0x1);
        gbc.writeMem(0x1be5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfd54);
        EXPECT(gbc.pc(), 0x1be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 009E
        gbc.setState(0x6f2e, 0x27cb, 0xdbe0, 0xa50d, 0x2677, 0xb14f, 0x1, 0x1);
        gbc.writeMem(0x6f2e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x27cb);
        EXPECT(gbc.pc(), 0x6f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 009F
        gbc.setState(0x83e5, 0x70cd, 0x81d0, 0x307, 0xec32, 0x6971, 0x0, 0x1);
        gbc.writeMem(0x83e5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x70cd);
        EXPECT(gbc.pc(), 0x83e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e5), 0xcb);
        EXPECT(gbc.readMem(0x83e6), 0x33);
        // CB 33 00A0
        gbc.setState(0x8bd0, 0x6e72, 0xd7b0, 0x1542, 0xe212, 0x37d9, 0x1, 0x0);
        gbc.writeMem(0x8bd0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6e72);
        EXPECT(gbc.pc(), 0x8bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd0), 0xcb);
        EXPECT(gbc.readMem(0x8bd1), 0x33);
        // CB 33 00A1
        gbc.setState(0xc02b, 0x6674, 0x6860, 0xc95, 0xf005, 0x4572, 0x0, 0x1);
        gbc.writeMem(0xc02b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0xc02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02b), 0xcb);
        EXPECT(gbc.readMem(0xc02c), 0x33);
        // CB 33 00A2
        gbc.setState(0x6034, 0xc42, 0x93a0, 0xebe, 0x4569, 0x3faa, 0x1, 0x0);
        gbc.writeMem(0x6034, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc42);
        EXPECT(gbc.pc(), 0x6036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00A3
        gbc.setState(0x59fc, 0x7149, 0xc0d0, 0xd93f, 0x7973, 0x4690, 0x0, 0x1);
        gbc.writeMem(0x59fc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7149);
        EXPECT(gbc.pc(), 0x59fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00A4
        gbc.setState(0xd103, 0xd324, 0x6f10, 0x25ae, 0xd19a, 0x5e40, 0x0, 0x1);
        gbc.writeMem(0xd103, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd324);
        EXPECT(gbc.pc(), 0xd105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd103), 0xcb);
        EXPECT(gbc.readMem(0xd104), 0x33);
        // CB 33 00A5
        gbc.setState(0xe7c0, 0x92e7, 0xc540, 0xe2d3, 0x413, 0x5159, 0x0, 0x1);
        gbc.writeMem(0xe7c0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x92e7);
        EXPECT(gbc.pc(), 0xe7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c0), 0xcb);
        EXPECT(gbc.readMem(0xe7c1), 0x33);
        // CB 33 00A6
        gbc.setState(0xd0c8, 0x9422, 0x8200, 0xcd4a, 0xb196, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9422);
        EXPECT(gbc.pc(), 0xd0ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c8), 0xcb);
        EXPECT(gbc.readMem(0xd0c9), 0x33);
        // CB 33 00A7
        gbc.setState(0x664f, 0xc31, 0x9950, 0x1f08, 0xa4a, 0x1ea8, 0x0, 0x0);
        gbc.writeMem(0x664f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc31);
        EXPECT(gbc.pc(), 0x6651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00A8
        gbc.setState(0x2115, 0xff25, 0x55f0, 0xd105, 0x324e, 0x314b, 0x1, 0x0);
        gbc.writeMem(0x2115, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xff25);
        EXPECT(gbc.pc(), 0x2117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00A9
        gbc.setState(0x8f4e, 0xa9f8, 0x7d50, 0x1a65, 0xe1b, 0xcf1f, 0x1, 0x1);
        gbc.writeMem(0x8f4e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa9f8);
        EXPECT(gbc.pc(), 0x8f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4e), 0xcb);
        EXPECT(gbc.readMem(0x8f4f), 0x33);
        // CB 33 00AB
        gbc.setState(0x8d61, 0xaf0f, 0xfe0, 0x4ab1, 0x6bb5, 0x8e3f, 0x0, 0x1);
        gbc.writeMem(0x8d61, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaf0f);
        EXPECT(gbc.pc(), 0x8d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d61), 0xcb);
        EXPECT(gbc.readMem(0x8d62), 0x33);
        // CB 33 00AC
        gbc.setState(0x3da2, 0xf470, 0x32e0, 0x76b2, 0xee26, 0x2058, 0x0, 0x1);
        gbc.writeMem(0x3da2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0x3da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00AD
        gbc.setState(0x91e, 0x7bd6, 0x9380, 0x1d97, 0x2033, 0xe930, 0x1, 0x0);
        gbc.writeMem(0x91e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7bd6);
        EXPECT(gbc.pc(), 0x920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00AE
        gbc.setState(0x7e2d, 0x8780, 0xe4f0, 0xa0ea, 0x700, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0x7e2d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8780);
        EXPECT(gbc.pc(), 0x7e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00AF
        gbc.setState(0x84cb, 0x9095, 0xedf0, 0xdf7e, 0x3372, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x84cb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9095);
        EXPECT(gbc.pc(), 0x84cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cb), 0xcb);
        EXPECT(gbc.readMem(0x84cc), 0x33);
        // CB 33 00B0
        gbc.setState(0xaca9, 0xce86, 0xeb90, 0x903c, 0x694a, 0x81f4, 0x0, 0x0);
        gbc.writeMem(0xaca9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xce86);
        EXPECT(gbc.pc(), 0xacab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca9), 0xcb);
        EXPECT(gbc.readMem(0xacaa), 0x33);
        // CB 33 00B1
        gbc.setState(0xcb85, 0xd9d5, 0x8d10, 0x2d3a, 0x248f, 0x6201, 0x0, 0x1);
        gbc.writeMem(0xcb85, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9d5);
        EXPECT(gbc.pc(), 0xcb87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb85), 0xcb);
        EXPECT(gbc.readMem(0xcb86), 0x33);
        // CB 33 00B2
        gbc.setState(0xf5f, 0x8b6b, 0x59e0, 0xc983, 0x2a0b, 0xfd93, 0x1, 0x1);
        gbc.writeMem(0xf5f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0xf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00B3
        gbc.setState(0xc941, 0xe992, 0xb560, 0x9d75, 0x5171, 0x1d4a, 0x0, 0x1);
        gbc.writeMem(0xc941, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe992);
        EXPECT(gbc.pc(), 0xc943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc941), 0xcb);
        EXPECT(gbc.readMem(0xc942), 0x33);
        // CB 33 00B4
        gbc.setState(0x3a0a, 0xa192, 0x3ad0, 0xfb1, 0xa7d0, 0x2395, 0x0, 0x1);
        gbc.writeMem(0x3a0a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa192);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00B5
        gbc.setState(0x1ec9, 0x5907, 0xf1e0, 0x1a23, 0xbb57, 0x46b3, 0x1, 0x1);
        gbc.writeMem(0x1ec9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5907);
        EXPECT(gbc.pc(), 0x1ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00B6
        gbc.setState(0x1571, 0x3ff0, 0xa470, 0x951a, 0xd95d, 0x72f8, 0x1, 0x0);
        gbc.writeMem(0x1571, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3ff0);
        EXPECT(gbc.pc(), 0x1573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00B7
        gbc.setState(0x1421, 0x8e86, 0xa1c0, 0xb7c6, 0xcdc7, 0xa2dd, 0x1, 0x0);
        gbc.writeMem(0x1421, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8e86);
        EXPECT(gbc.pc(), 0x1423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00B8
        gbc.setState(0xb675, 0xf49b, 0x91c0, 0xb30a, 0xcacc, 0x85d9, 0x0, 0x1);
        gbc.writeMem(0xb675, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf49b);
        EXPECT(gbc.pc(), 0xb677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb675), 0xcb);
        EXPECT(gbc.readMem(0xb676), 0x33);
        // CB 33 00B9
        gbc.setState(0x7a2a, 0x2f64, 0x7010, 0x5ef, 0x339, 0x7ce2, 0x0, 0x0);
        gbc.writeMem(0x7a2a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2f64);
        EXPECT(gbc.pc(), 0x7a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00BA
        gbc.setState(0xec07, 0xdbec, 0x6180, 0x7c83, 0x7e7e, 0x3dba, 0x1, 0x1);
        gbc.writeMem(0xec07, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdbec);
        EXPECT(gbc.pc(), 0xec09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec07), 0xcb);
        EXPECT(gbc.readMem(0xec08), 0x33);
        // CB 33 00BB
        gbc.setState(0x466a, 0x2b4, 0xacd0, 0x1c41, 0xc89e, 0xf412, 0x1, 0x1);
        gbc.writeMem(0x466a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2b4);
        EXPECT(gbc.pc(), 0x466c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00BC
        gbc.setState(0x6ac4, 0x4399, 0x9900, 0x2b83, 0x4789, 0xb870, 0x0, 0x0);
        gbc.writeMem(0x6ac4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4399);
        EXPECT(gbc.pc(), 0x6ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00BD
        gbc.setState(0x6eb7, 0xe11f, 0xfaf0, 0xb4f5, 0x5e34, 0xf0e5, 0x0, 0x1);
        gbc.writeMem(0x6eb7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe11f);
        EXPECT(gbc.pc(), 0x6eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00BE
        gbc.setState(0xbcf0, 0x1f1a, 0x28b0, 0x1fe8, 0x3aa2, 0x4d07, 0x0, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0xbcf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf0), 0xcb);
        EXPECT(gbc.readMem(0xbcf1), 0x33);
        // CB 33 00BF
        gbc.setState(0x1ae8, 0xacaf, 0x4bf0, 0x80c5, 0x25c8, 0x72cb, 0x0, 0x0);
        gbc.writeMem(0x1ae8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0x1aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C0
        gbc.setState(0x6692, 0xf472, 0x51a0, 0xc5af, 0x73fa, 0xe33a, 0x0, 0x0);
        gbc.writeMem(0x6692, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x6694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C1
        gbc.setState(0x3069, 0x1203, 0xa990, 0xea69, 0x1b12, 0x39e0, 0x0, 0x0);
        gbc.writeMem(0x3069, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1203);
        EXPECT(gbc.pc(), 0x306b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C2
        gbc.setState(0x9a32, 0x8020, 0x7f80, 0xdd99, 0x3fe0, 0x4ad2, 0x0, 0x1);
        gbc.writeMem(0x9a32, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0x9a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a32), 0xcb);
        EXPECT(gbc.readMem(0x9a33), 0x33);
        // CB 33 00C4
        gbc.setState(0xc2bb, 0x9b88, 0x7d10, 0x9571, 0xb9ea, 0x9119, 0x1, 0x0);
        gbc.writeMem(0xc2bb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9b88);
        EXPECT(gbc.pc(), 0xc2bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2bb), 0xcb);
        EXPECT(gbc.readMem(0xc2bc), 0x33);
        // CB 33 00C5
        gbc.setState(0x1a84, 0x7c52, 0xee80, 0x459f, 0xc35b, 0x80da, 0x0, 0x1);
        gbc.writeMem(0x1a84, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7c52);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C6
        gbc.setState(0x21b3, 0xd36c, 0xdee0, 0x57e, 0xcd5c, 0x765b, 0x1, 0x1);
        gbc.writeMem(0x21b3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd36c);
        EXPECT(gbc.pc(), 0x21b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C7
        gbc.setState(0x5060, 0xb242, 0x7cc0, 0xac40, 0xf928, 0x85ed, 0x0, 0x1);
        gbc.writeMem(0x5060, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb242);
        EXPECT(gbc.pc(), 0x5062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C8
        gbc.setState(0x7b6f, 0xf160, 0xb8e0, 0x1ad1, 0x980e, 0xc989, 0x0, 0x0);
        gbc.writeMem(0x7b6f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf160);
        EXPECT(gbc.pc(), 0x7b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00C9
        gbc.setState(0xb503, 0x58f8, 0x95f0, 0x5fc1, 0x4b4f, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xb503, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x58f8);
        EXPECT(gbc.pc(), 0xb505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb503), 0xcb);
        EXPECT(gbc.readMem(0xb504), 0x33);
        // CB 33 00CA
        gbc.setState(0x5795, 0x459e, 0xdf20, 0x3d24, 0x456f, 0xf338, 0x1, 0x1);
        gbc.writeMem(0x5795, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x459e);
        EXPECT(gbc.pc(), 0x5797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00CB
        gbc.setState(0x4c57, 0x1d91, 0x56d0, 0xf9c7, 0x8547, 0x6d0c, 0x1, 0x0);
        gbc.writeMem(0x4c57, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1d91);
        EXPECT(gbc.pc(), 0x4c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00CC
        gbc.setState(0x314e, 0x29cf, 0x9410, 0x77d2, 0x754d, 0xe850, 0x1, 0x1);
        gbc.writeMem(0x314e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x29cf);
        EXPECT(gbc.pc(), 0x3150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00CD
        gbc.setState(0x1a46, 0x549, 0x1c60, 0xe521, 0x1235, 0x1484, 0x1, 0x1);
        gbc.writeMem(0x1a46, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x549);
        EXPECT(gbc.pc(), 0x1a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00CE
        gbc.setState(0x6022, 0x4758, 0x7a60, 0xd0b, 0x55f, 0x4540, 0x0, 0x0);
        gbc.writeMem(0x6022, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4758);
        EXPECT(gbc.pc(), 0x6024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00CF
        gbc.setState(0x42e4, 0x47c0, 0xdee0, 0xccc5, 0xe0ef, 0xdcb9, 0x0, 0x1);
        gbc.writeMem(0x42e4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x47c0);
        EXPECT(gbc.pc(), 0x42e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D1
        gbc.setState(0x6c33, 0xf7dd, 0xc5d0, 0xe5b6, 0x525, 0x4754, 0x0, 0x1);
        gbc.writeMem(0x6c33, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf7dd);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D2
        gbc.setState(0x948a, 0xb06e, 0xb850, 0x17df, 0x31e6, 0x5693, 0x1, 0x1);
        gbc.writeMem(0x948a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb06e);
        EXPECT(gbc.pc(), 0x948c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948a), 0xcb);
        EXPECT(gbc.readMem(0x948b), 0x33);
        // CB 33 00D3
        gbc.setState(0x16a3, 0x6a39, 0xfb0, 0xdc56, 0xa715, 0x559c, 0x0, 0x0);
        gbc.writeMem(0x16a3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6a39);
        EXPECT(gbc.pc(), 0x16a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D4
        gbc.setState(0x5a91, 0x340c, 0x1e30, 0x7565, 0xdd8e, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x5a91, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x340c);
        EXPECT(gbc.pc(), 0x5a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D5
        gbc.setState(0xe63d, 0x90e1, 0x5c90, 0x85f6, 0x494b, 0xbd39, 0x0, 0x1);
        gbc.writeMem(0xe63d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x90e1);
        EXPECT(gbc.pc(), 0xe63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63d), 0xcb);
        EXPECT(gbc.readMem(0xe63e), 0x33);
        // CB 33 00D6
        gbc.setState(0x3771, 0x318d, 0xbc20, 0x4a65, 0x6afb, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0x3771, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x318d);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D7
        gbc.setState(0x38f8, 0x9fed, 0xd30, 0x8df6, 0x1604, 0x6215, 0x1, 0x1);
        gbc.writeMem(0x38f8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9fed);
        EXPECT(gbc.pc(), 0x38fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D8
        gbc.setState(0x7230, 0x147e, 0x20b0, 0x5bdb, 0x8a83, 0xf91a, 0x1, 0x1);
        gbc.writeMem(0x7230, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x147e);
        EXPECT(gbc.pc(), 0x7232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00D9
        gbc.setState(0x451, 0xe038, 0x86e0, 0x51e7, 0x3d5e, 0xda1e, 0x0, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe038);
        EXPECT(gbc.pc(), 0x453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00DA
        gbc.setState(0xdbdf, 0x15f1, 0x2380, 0xcc8e, 0x21b1, 0xe494, 0x0, 0x0);
        gbc.writeMem(0xdbdf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0xdbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbdf), 0xcb);
        EXPECT(gbc.readMem(0xdbe0), 0x33);
        // CB 33 00DB
        gbc.setState(0x1bd6, 0xe80b, 0x5160, 0x8081, 0xc09e, 0x1ec7, 0x0, 0x1);
        gbc.writeMem(0x1bd6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe80b);
        EXPECT(gbc.pc(), 0x1bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00DC
        gbc.setState(0xc1d6, 0x1d3b, 0x6990, 0x555, 0xc112, 0x1b47, 0x0, 0x0);
        gbc.writeMem(0xc1d6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1d3b);
        EXPECT(gbc.pc(), 0xc1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d6), 0xcb);
        EXPECT(gbc.readMem(0xc1d7), 0x33);
        // CB 33 00DD
        gbc.setState(0x82d5, 0x2ea9, 0x3c50, 0x47cd, 0xa531, 0xfb42, 0x0, 0x1);
        gbc.writeMem(0x82d5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2ea9);
        EXPECT(gbc.pc(), 0x82d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d5), 0xcb);
        EXPECT(gbc.readMem(0x82d6), 0x33);
        // CB 33 00DE
        gbc.setState(0x1db9, 0xe268, 0x3550, 0xfeb3, 0x5609, 0x7867, 0x1, 0x1);
        gbc.writeMem(0x1db9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe268);
        EXPECT(gbc.pc(), 0x1dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00DF
        gbc.setState(0xbc8b, 0xfb1e, 0x5fd0, 0x3506, 0xa368, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0xbc8b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfb1e);
        EXPECT(gbc.pc(), 0xbc8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8b), 0xcb);
        EXPECT(gbc.readMem(0xbc8c), 0x33);
        // CB 33 00E0
        gbc.setState(0xad93, 0xcfcc, 0x27a0, 0xaa30, 0x8ab6, 0x84c0, 0x0, 0x1);
        gbc.writeMem(0xad93, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xcfcc);
        EXPECT(gbc.pc(), 0xad95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad93), 0xcb);
        EXPECT(gbc.readMem(0xad94), 0x33);
        // CB 33 00E1
        gbc.setState(0x9fd, 0x3d38, 0x5670, 0x1907, 0x677e, 0xf457, 0x1, 0x1);
        gbc.writeMem(0x9fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3d38);
        EXPECT(gbc.pc(), 0x9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00E2
        gbc.setState(0x6b71, 0x73ba, 0x16b0, 0x6f81, 0x34, 0xc5e7, 0x0, 0x0);
        gbc.writeMem(0x6b71, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x73ba);
        EXPECT(gbc.pc(), 0x6b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00E3
        gbc.setState(0x5be, 0xf52c, 0xabe0, 0xf3e4, 0xb5fc, 0xe240, 0x1, 0x1);
        gbc.writeMem(0x5be, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf52c);
        EXPECT(gbc.pc(), 0x5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00E4
        gbc.setState(0xc67a, 0x80c0, 0x560, 0xf292, 0x17e9, 0xfbf9, 0x0, 0x1);
        gbc.writeMem(0xc67a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x80c0);
        EXPECT(gbc.pc(), 0xc67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67a), 0xcb);
        EXPECT(gbc.readMem(0xc67b), 0x33);
        // CB 33 00E5
        gbc.setState(0x8eea, 0xa518, 0xdad0, 0x894c, 0xb101, 0x883b, 0x1, 0x0);
        gbc.writeMem(0x8eea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa518);
        EXPECT(gbc.pc(), 0x8eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eea), 0xcb);
        EXPECT(gbc.readMem(0x8eeb), 0x33);
        // CB 33 00E6
        gbc.setState(0x220f, 0xa8d3, 0x42f0, 0xc95d, 0xaf3a, 0xf970, 0x0, 0x0);
        gbc.writeMem(0x220f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa8d3);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00E7
        gbc.setState(0x3ec0, 0x6910, 0x45e0, 0x8689, 0xca21, 0x6f3b, 0x1, 0x1);
        gbc.writeMem(0x3ec0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6910);
        EXPECT(gbc.pc(), 0x3ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00E8
        gbc.setState(0xb7a5, 0x948, 0x2610, 0x89a8, 0xa685, 0xaf62, 0x0, 0x0);
        gbc.writeMem(0xb7a5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x948);
        EXPECT(gbc.pc(), 0xb7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a5), 0xcb);
        EXPECT(gbc.readMem(0xb7a6), 0x33);
        // CB 33 00E9
        gbc.setState(0xf3a, 0x9e12, 0x2720, 0x8dab, 0x2c0e, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9e12);
        EXPECT(gbc.pc(), 0xf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00EA
        gbc.setState(0x892d, 0xaccd, 0xf9c0, 0x50d8, 0x3bcd, 0x85f9, 0x1, 0x1);
        gbc.writeMem(0x892d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaccd);
        EXPECT(gbc.pc(), 0x892f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892d), 0xcb);
        EXPECT(gbc.readMem(0x892e), 0x33);
        // CB 33 00EB
        gbc.setState(0xb0f2, 0xd445, 0xe700, 0xc73f, 0xf8dc, 0xf83f, 0x0, 0x0);
        gbc.writeMem(0xb0f2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0xb0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f2), 0xcb);
        EXPECT(gbc.readMem(0xb0f3), 0x33);
        // CB 33 00EC
        gbc.setState(0x5d55, 0x6f4e, 0x8390, 0x3ae6, 0x8bef, 0xdee2, 0x0, 0x0);
        gbc.writeMem(0x5d55, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6f4e);
        EXPECT(gbc.pc(), 0x5d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00ED
        gbc.setState(0xa4cf, 0x8a88, 0x280, 0x7ad2, 0x78db, 0x5b32, 0x0, 0x0);
        gbc.writeMem(0xa4cf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8a88);
        EXPECT(gbc.pc(), 0xa4d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4cf), 0xcb);
        EXPECT(gbc.readMem(0xa4d0), 0x33);
        // CB 33 00EE
        gbc.setState(0xc5cf, 0xd16a, 0x55a0, 0x947b, 0x36c3, 0x1dc4, 0x0, 0x1);
        gbc.writeMem(0xc5cf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd16a);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5cf), 0xcb);
        EXPECT(gbc.readMem(0xc5d0), 0x33);
        // CB 33 00EF
        gbc.setState(0xbc36, 0x366c, 0xffc0, 0xb8a8, 0x321a, 0xb0e8, 0x0, 0x0);
        gbc.writeMem(0xbc36, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc36), 0xcb);
        EXPECT(gbc.readMem(0xbc37), 0x33);
        // CB 33 00F0
        gbc.setState(0x319, 0xd294, 0x3fc0, 0xc44c, 0x4baa, 0xd070, 0x1, 0x0);
        gbc.writeMem(0x319, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd294);
        EXPECT(gbc.pc(), 0x31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F1
        gbc.setState(0x2205, 0x9b23, 0xfc50, 0xdacb, 0x740e, 0x16d6, 0x0, 0x0);
        gbc.writeMem(0x2205, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9b23);
        EXPECT(gbc.pc(), 0x2207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F2
        gbc.setState(0x227e, 0xbde4, 0xb9c0, 0x90b, 0x4319, 0x2b4, 0x1, 0x0);
        gbc.writeMem(0x227e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbde4);
        EXPECT(gbc.pc(), 0x2280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F3
        gbc.setState(0xac6, 0x6465, 0x2270, 0xf8e, 0x1098, 0x4781, 0x1, 0x0);
        gbc.writeMem(0xac6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6465);
        EXPECT(gbc.pc(), 0xac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F4
        gbc.setState(0x1740, 0x4286, 0xa8e0, 0x87a0, 0x4ea9, 0x6ce4, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4286);
        EXPECT(gbc.pc(), 0x1742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F5
        gbc.setState(0x8c17, 0x1135, 0x44c0, 0xce3d, 0xb976, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x8c17, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1135);
        EXPECT(gbc.pc(), 0x8c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c17), 0xcb);
        EXPECT(gbc.readMem(0x8c18), 0x33);
        // CB 33 00F6
        gbc.setState(0x95c3, 0x802b, 0x3240, 0x9bcd, 0x14b, 0x5c8f, 0x0, 0x1);
        gbc.writeMem(0x95c3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x802b);
        EXPECT(gbc.pc(), 0x95c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c3), 0xcb);
        EXPECT(gbc.readMem(0x95c4), 0x33);
        // CB 33 00F7
        gbc.setState(0x20be, 0x952c, 0xd2d0, 0xbd0b, 0x8fd3, 0x7392, 0x1, 0x0);
        gbc.writeMem(0x20be, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x952c);
        EXPECT(gbc.pc(), 0x20c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00F8
        gbc.setState(0x8695, 0xb670, 0xcf10, 0x22c1, 0x5919, 0x476a, 0x0, 0x0);
        gbc.writeMem(0x8695, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb670);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0x33);
        // CB 33 00F9
        gbc.setState(0xadaf, 0x8718, 0xcbd0, 0x213f, 0xe8bd, 0x125, 0x0, 0x0);
        gbc.writeMem(0xadaf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0xadb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaf), 0xcb);
        EXPECT(gbc.readMem(0xadb0), 0x33);
        // CB 33 00FA
        gbc.setState(0x938e, 0x7069, 0xfe40, 0x7670, 0xa033, 0xb31e, 0x1, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7069);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938e), 0xcb);
        EXPECT(gbc.readMem(0x938f), 0x33);
        // CB 33 00FB
        gbc.setState(0x9608, 0x8cb1, 0x40c0, 0xe8a1, 0x156b, 0x817, 0x1, 0x1);
        gbc.writeMem(0x9608, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8cb1);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9608), 0xcb);
        EXPECT(gbc.readMem(0x9609), 0x33);
        // CB 33 00FC
        gbc.setState(0xd521, 0xab9b, 0xa30, 0x2a0f, 0xe48e, 0x3bb5, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xab9b);
        EXPECT(gbc.pc(), 0xd523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd521), 0xcb);
        EXPECT(gbc.readMem(0xd522), 0x33);
        // CB 33 00FD
        gbc.setState(0x5c55, 0xba28, 0x6f30, 0x10a, 0xad95, 0x8fe0, 0x0, 0x0);
        gbc.writeMem(0x5c55, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xba28);
        EXPECT(gbc.pc(), 0x5c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00FE
        gbc.setState(0x4620, 0xd456, 0xee00, 0x976e, 0x7644, 0xdc70, 0x1, 0x1);
        gbc.writeMem(0x4620, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd456);
        EXPECT(gbc.pc(), 0x4622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 00FF
        gbc.setState(0xc5c0, 0xd96f, 0xc550, 0xeee8, 0x5a3c, 0x5d7a, 0x0, 0x1);
        gbc.writeMem(0xc5c0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd96f);
        EXPECT(gbc.pc(), 0xc5c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c0), 0xcb);
        EXPECT(gbc.readMem(0xc5c1), 0x33);
        // CB 33 0100
        gbc.setState(0x3e03, 0x5069, 0xdf20, 0x8c9f, 0xc6dc, 0x3f8c, 0x1, 0x0);
        gbc.writeMem(0x3e03, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5069);
        EXPECT(gbc.pc(), 0x3e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0101
        gbc.setState(0x50a6, 0x4322, 0x3fd0, 0xab5c, 0xffb1, 0xdc6a, 0x1, 0x1);
        gbc.writeMem(0x50a6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0x50a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0102
        gbc.setState(0xa6e0, 0xc04a, 0x2f90, 0xa539, 0x4d5e, 0xde96, 0x1, 0x0);
        gbc.writeMem(0xa6e0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc04a);
        EXPECT(gbc.pc(), 0xa6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e0), 0xcb);
        EXPECT(gbc.readMem(0xa6e1), 0x33);
        // CB 33 0103
        gbc.setState(0x7337, 0x3d11, 0xb7e0, 0x9a3a, 0x4df5, 0x909c, 0x1, 0x1);
        gbc.writeMem(0x7337, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3d11);
        EXPECT(gbc.pc(), 0x7339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0104
        gbc.setState(0x37ee, 0x7845, 0xb160, 0xa4de, 0x250d, 0x2872, 0x0, 0x0);
        gbc.writeMem(0x37ee, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7845);
        EXPECT(gbc.pc(), 0x37f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0105
        gbc.setState(0xedbc, 0xb8d3, 0xe4a0, 0x9a50, 0xba49, 0x27c8, 0x1, 0x0);
        gbc.writeMem(0xedbc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb8d3);
        EXPECT(gbc.pc(), 0xedbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedbc), 0xcb);
        EXPECT(gbc.readMem(0xedbd), 0x33);
        // CB 33 0106
        gbc.setState(0x35da, 0xa3db, 0xa550, 0xdf60, 0x4ed2, 0x6172, 0x0, 0x0);
        gbc.writeMem(0x35da, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa3db);
        EXPECT(gbc.pc(), 0x35dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0107
        gbc.setState(0xa9de, 0xbf14, 0x28b0, 0x7876, 0x8fc3, 0x3acc, 0x1, 0x0);
        gbc.writeMem(0xa9de, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbf14);
        EXPECT(gbc.pc(), 0xa9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9de), 0xcb);
        EXPECT(gbc.readMem(0xa9df), 0x33);
        // CB 33 0108
        gbc.setState(0x3b9, 0xcca8, 0x4c10, 0x8801, 0xc812, 0x7870, 0x1, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcca8);
        EXPECT(gbc.pc(), 0x3bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0109
        gbc.setState(0x6d25, 0x8fb8, 0x7e0, 0x3166, 0x8d7, 0x5e9f, 0x0, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8fb8);
        EXPECT(gbc.pc(), 0x6d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 010A
        gbc.setState(0xce1f, 0x75ff, 0xe930, 0x560e, 0xf561, 0x5ad5, 0x1, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x75ff);
        EXPECT(gbc.pc(), 0xce21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1f), 0xcb);
        EXPECT(gbc.readMem(0xce20), 0x33);
        // CB 33 010B
        gbc.setState(0x694c, 0xf616, 0xef50, 0x776b, 0x1708, 0x1897, 0x1, 0x0);
        gbc.writeMem(0x694c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf616);
        EXPECT(gbc.pc(), 0x694e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 010C
        gbc.setState(0x42ff, 0x6785, 0xc260, 0x62b, 0xaf1f, 0xc863, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6785);
        EXPECT(gbc.pc(), 0x4301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 010D
        gbc.setState(0x91bf, 0x8ad1, 0x5060, 0xb69f, 0x9098, 0x8337, 0x0, 0x0);
        gbc.writeMem(0x91bf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8ad1);
        EXPECT(gbc.pc(), 0x91c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bf), 0xcb);
        EXPECT(gbc.readMem(0x91c0), 0x33);
        // CB 33 010E
        gbc.setState(0xd7a2, 0xdd55, 0x3c10, 0x2665, 0x4928, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0xd7a2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdd55);
        EXPECT(gbc.pc(), 0xd7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a2), 0xcb);
        EXPECT(gbc.readMem(0xd7a3), 0x33);
        // CB 33 010F
        gbc.setState(0xd9d0, 0x8a0d, 0x84c0, 0x8cbd, 0x6dd2, 0xb2d, 0x0, 0x1);
        gbc.writeMem(0xd9d0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8a0d);
        EXPECT(gbc.pc(), 0xd9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d0), 0xcb);
        EXPECT(gbc.readMem(0xd9d1), 0x33);
        // CB 33 0110
        gbc.setState(0x72ed, 0xe6f1, 0x8e0, 0x1d06, 0xf9d1, 0x9a8, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe6f1);
        EXPECT(gbc.pc(), 0x72ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0111
        gbc.setState(0x26d0, 0x2b9a, 0xe700, 0xe394, 0xb264, 0x591c, 0x0, 0x1);
        gbc.writeMem(0x26d0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2b9a);
        EXPECT(gbc.pc(), 0x26d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0112
        gbc.setState(0x1074, 0xc220, 0xb7e0, 0x9c75, 0xc3b, 0xead7, 0x0, 0x1);
        gbc.writeMem(0x1074, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc220);
        EXPECT(gbc.pc(), 0x1076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0114
        gbc.setState(0xa0f5, 0x9285, 0xae10, 0x3506, 0xeb39, 0x58ce, 0x1, 0x1);
        gbc.writeMem(0xa0f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9285);
        EXPECT(gbc.pc(), 0xa0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f5), 0xcb);
        EXPECT(gbc.readMem(0xa0f6), 0x33);
        // CB 33 0115
        gbc.setState(0x514e, 0xcd3, 0xb610, 0x7081, 0x81b4, 0x7f83, 0x1, 0x0);
        gbc.writeMem(0x514e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcd3);
        EXPECT(gbc.pc(), 0x5150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0116
        gbc.setState(0xd9b5, 0x2552, 0x4220, 0xe6fe, 0xda6, 0x8c5d, 0x0, 0x0);
        gbc.writeMem(0xd9b5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0xd9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b5), 0xcb);
        EXPECT(gbc.readMem(0xd9b6), 0x33);
        // CB 33 0117
        gbc.setState(0x50b, 0xf, 0xc6a0, 0xa15, 0xe95f, 0x808a, 0x0, 0x1);
        gbc.writeMem(0x50b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf);
        EXPECT(gbc.pc(), 0x50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0118
        gbc.setState(0x6f6b, 0xce34, 0xbd00, 0x8fa0, 0xf744, 0xf8e7, 0x0, 0x0);
        gbc.writeMem(0x6f6b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xce34);
        EXPECT(gbc.pc(), 0x6f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0119
        gbc.setState(0x322, 0x2f3, 0xb680, 0x72fc, 0xb823, 0xebec, 0x0, 0x0);
        gbc.writeMem(0x322, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2f3);
        EXPECT(gbc.pc(), 0x324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 011A
        gbc.setState(0xaf97, 0x7c94, 0x3030, 0x690b, 0x50f3, 0xf895, 0x1, 0x0);
        gbc.writeMem(0xaf97, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7c94);
        EXPECT(gbc.pc(), 0xaf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf97), 0xcb);
        EXPECT(gbc.readMem(0xaf98), 0x33);
        // CB 33 011B
        gbc.setState(0x9428, 0x8c2, 0x47e0, 0xebd8, 0x280b, 0x6788, 0x0, 0x1);
        gbc.writeMem(0x9428, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8c2);
        EXPECT(gbc.pc(), 0x942a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9428), 0xcb);
        EXPECT(gbc.readMem(0x9429), 0x33);
        // CB 33 011C
        gbc.setState(0x79ac, 0xd37f, 0x4bc0, 0x90bc, 0xd03f, 0x2d69, 0x0, 0x0);
        gbc.writeMem(0x79ac, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd37f);
        EXPECT(gbc.pc(), 0x79ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 011D
        gbc.setState(0x3b0e, 0xcaa8, 0x5a40, 0xd099, 0x1c73, 0x8d3e, 0x1, 0x1);
        gbc.writeMem(0x3b0e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xcaa8);
        EXPECT(gbc.pc(), 0x3b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 011E
        gbc.setState(0x3f, 0x7d91, 0xaac0, 0xf99a, 0x4e76, 0x24c2, 0x0, 0x1);
        gbc.writeMem(0x3f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7d91);
        EXPECT(gbc.pc(), 0x41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 011F
        gbc.setState(0x50df, 0x850d, 0xdf30, 0xd547, 0x1de6, 0x8543, 0x0, 0x0);
        gbc.writeMem(0x50df, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x50e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0120
        gbc.setState(0x3f9c, 0xa31b, 0x6030, 0x198d, 0x878c, 0x1cb4, 0x1, 0x1);
        gbc.writeMem(0x3f9c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa31b);
        EXPECT(gbc.pc(), 0x3f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0121
        gbc.setState(0xe9ef, 0x63d9, 0xd610, 0xabb5, 0x3a4e, 0x86a1, 0x0, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x63d9);
        EXPECT(gbc.pc(), 0xe9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ef), 0xcb);
        EXPECT(gbc.readMem(0xe9f0), 0x33);
        // CB 33 0122
        gbc.setState(0xa0a9, 0x3743, 0xf6d0, 0xb64a, 0x8290, 0x1298, 0x1, 0x1);
        gbc.writeMem(0xa0a9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3743);
        EXPECT(gbc.pc(), 0xa0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a9), 0xcb);
        EXPECT(gbc.readMem(0xa0aa), 0x33);
        // CB 33 0123
        gbc.setState(0x2060, 0x1007, 0x9790, 0xe33c, 0x8b51, 0x6ce6, 0x1, 0x1);
        gbc.writeMem(0x2060, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1007);
        EXPECT(gbc.pc(), 0x2062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0124
        gbc.setState(0x2656, 0x9dd1, 0xac80, 0x6c91, 0xc5af, 0xa9f9, 0x0, 0x1);
        gbc.writeMem(0x2656, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9dd1);
        EXPECT(gbc.pc(), 0x2658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0125
        gbc.setState(0x7133, 0xd1d8, 0x1810, 0x8124, 0x5415, 0x8f69, 0x1, 0x0);
        gbc.writeMem(0x7133, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd1d8);
        EXPECT(gbc.pc(), 0x7135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0126
        gbc.setState(0xd0d4, 0xcc51, 0x16d0, 0xdcb3, 0x856a, 0xb9b6, 0x1, 0x1);
        gbc.writeMem(0xd0d4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcc51);
        EXPECT(gbc.pc(), 0xd0d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d4), 0xcb);
        EXPECT(gbc.readMem(0xd0d5), 0x33);
        // CB 33 0127
        gbc.setState(0x4080, 0xc4de, 0xe500, 0x2ff0, 0x3ad7, 0xf862, 0x1, 0x0);
        gbc.writeMem(0x4080, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0x4082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0128
        gbc.setState(0xe6ea, 0x1ccc, 0x3350, 0x869, 0xc8e9, 0x6e6f, 0x0, 0x0);
        gbc.writeMem(0xe6ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1ccc);
        EXPECT(gbc.pc(), 0xe6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ea), 0xcb);
        EXPECT(gbc.readMem(0xe6eb), 0x33);
        // CB 33 0129
        gbc.setState(0x1e93, 0x7efe, 0xdd70, 0xca78, 0xc18d, 0xe371, 0x1, 0x0);
        gbc.writeMem(0x1e93, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7efe);
        EXPECT(gbc.pc(), 0x1e95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 012A
        gbc.setState(0x9326, 0xfc8f, 0x88b0, 0xf8a, 0x40e2, 0x11bb, 0x1, 0x1);
        gbc.writeMem(0x9326, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfc8f);
        EXPECT(gbc.pc(), 0x9328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9326), 0xcb);
        EXPECT(gbc.readMem(0x9327), 0x33);
        // CB 33 012B
        gbc.setState(0x93c7, 0xeb04, 0xa650, 0x5dd1, 0x9011, 0xe8fd, 0x1, 0x0);
        gbc.writeMem(0x93c7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xeb04);
        EXPECT(gbc.pc(), 0x93c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c7), 0xcb);
        EXPECT(gbc.readMem(0x93c8), 0x33);
        // CB 33 012C
        gbc.setState(0xc84f, 0x8e4a, 0x1520, 0x37a3, 0x7557, 0x61d5, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8e4a);
        EXPECT(gbc.pc(), 0xc851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84f), 0xcb);
        EXPECT(gbc.readMem(0xc850), 0x33);
        // CB 33 012D
        gbc.setState(0xd07b, 0xd1a0, 0x2cb0, 0xa38a, 0xcccc, 0xd79f, 0x1, 0x0);
        gbc.writeMem(0xd07b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd1a0);
        EXPECT(gbc.pc(), 0xd07d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07b), 0xcb);
        EXPECT(gbc.readMem(0xd07c), 0x33);
        // CB 33 012E
        gbc.setState(0x37c5, 0x3234, 0x65d0, 0x1aaf, 0xcb2c, 0x93e5, 0x0, 0x0);
        gbc.writeMem(0x37c5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3234);
        EXPECT(gbc.pc(), 0x37c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 012F
        gbc.setState(0x58bc, 0xf407, 0x1450, 0x7508, 0xc35e, 0xf356, 0x0, 0x0);
        gbc.writeMem(0x58bc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0x58be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0130
        gbc.setState(0x3e99, 0xe86c, 0xfb80, 0x95b4, 0xca70, 0x65eb, 0x0, 0x0);
        gbc.writeMem(0x3e99, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe86c);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0131
        gbc.setState(0x661a, 0x2d0b, 0x6ec0, 0xa578, 0x8f02, 0x5d98, 0x0, 0x0);
        gbc.writeMem(0x661a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2d0b);
        EXPECT(gbc.pc(), 0x661c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0132
        gbc.setState(0x98c1, 0x9dbd, 0x53c0, 0x4a1c, 0x1695, 0x2bd, 0x0, 0x1);
        gbc.writeMem(0x98c1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9dbd);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0x33);
        // CB 33 0133
        gbc.setState(0x66d7, 0x6c55, 0x2340, 0x4448, 0x20cb, 0xca15, 0x1, 0x0);
        gbc.writeMem(0x66d7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6c55);
        EXPECT(gbc.pc(), 0x66d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0134
        gbc.setState(0x48ac, 0xc15b, 0x1940, 0x1923, 0xc938, 0x114d, 0x0, 0x0);
        gbc.writeMem(0x48ac, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc15b);
        EXPECT(gbc.pc(), 0x48ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0135
        gbc.setState(0x6774, 0x79d7, 0x630, 0xbda8, 0x5a74, 0x52d9, 0x1, 0x1);
        gbc.writeMem(0x6774, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x79d7);
        EXPECT(gbc.pc(), 0x6776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0136
        gbc.setState(0x7c34, 0xde3d, 0xdc20, 0xd706, 0x21ec, 0x32d6, 0x0, 0x1);
        gbc.writeMem(0x7c34, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x7c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0137
        gbc.setState(0x2bc5, 0xeaa7, 0xebc0, 0xe295, 0xd0d2, 0x6b2c, 0x1, 0x1);
        gbc.writeMem(0x2bc5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0x2bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0138
        gbc.setState(0x12b8, 0xa5e6, 0x8f40, 0x24fa, 0xfc55, 0x9d07, 0x0, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa5e6);
        EXPECT(gbc.pc(), 0x12ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0139
        gbc.setState(0x9994, 0xa9a0, 0xf2c0, 0x1d96, 0xac67, 0x3077, 0x0, 0x0);
        gbc.writeMem(0x9994, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa9a0);
        EXPECT(gbc.pc(), 0x9996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9994), 0xcb);
        EXPECT(gbc.readMem(0x9995), 0x33);
        // CB 33 013A
        gbc.setState(0x3108, 0x107a, 0x3b0, 0x1b3e, 0xef74, 0x30b4, 0x0, 0x1);
        gbc.writeMem(0x3108, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x107a);
        EXPECT(gbc.pc(), 0x310a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 013B
        gbc.setState(0xa2f3, 0x6c5f, 0xb980, 0xc34e, 0x7b1, 0xf577, 0x0, 0x1);
        gbc.writeMem(0xa2f3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6c5f);
        EXPECT(gbc.pc(), 0xa2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f3), 0xcb);
        EXPECT(gbc.readMem(0xa2f4), 0x33);
        // CB 33 013C
        gbc.setState(0x9a67, 0xd544, 0x4860, 0x24c5, 0x9b91, 0x37b3, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd544);
        EXPECT(gbc.pc(), 0x9a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a67), 0xcb);
        EXPECT(gbc.readMem(0x9a68), 0x33);
        // CB 33 013D
        gbc.setState(0x4bbf, 0x570f, 0xc3e0, 0x883d, 0x4ec, 0x7d24, 0x1, 0x1);
        gbc.writeMem(0x4bbf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x570f);
        EXPECT(gbc.pc(), 0x4bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 013E
        gbc.setState(0xac4e, 0x2928, 0x3af0, 0x17ed, 0x8e15, 0xf0fc, 0x0, 0x0);
        gbc.writeMem(0xac4e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2928);
        EXPECT(gbc.pc(), 0xac50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4e), 0xcb);
        EXPECT(gbc.readMem(0xac4f), 0x33);
        // CB 33 013F
        gbc.setState(0xa1ec, 0x4144, 0xb550, 0x54b, 0xc3, 0x2c3e, 0x0, 0x0);
        gbc.writeMem(0xa1ec, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4144);
        EXPECT(gbc.pc(), 0xa1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ec), 0xcb);
        EXPECT(gbc.readMem(0xa1ed), 0x33);
        // CB 33 0140
        gbc.setState(0x10a9, 0xdd10, 0xd2e0, 0x730e, 0x7136, 0x8432, 0x0, 0x0);
        gbc.writeMem(0x10a9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdd10);
        EXPECT(gbc.pc(), 0x10ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0141
        gbc.setState(0x41bd, 0xd09c, 0xf800, 0x4582, 0x5de1, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x41bd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd09c);
        EXPECT(gbc.pc(), 0x41bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0142
        gbc.setState(0x1bf4, 0xd040, 0xd730, 0x36ba, 0xdcb2, 0xc05d, 0x1, 0x1);
        gbc.writeMem(0x1bf4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd040);
        EXPECT(gbc.pc(), 0x1bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0143
        gbc.setState(0xce82, 0xaaf8, 0x3490, 0xad6e, 0xc751, 0x1cba, 0x1, 0x1);
        gbc.writeMem(0xce82, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaaf8);
        EXPECT(gbc.pc(), 0xce84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce82), 0xcb);
        EXPECT(gbc.readMem(0xce83), 0x33);
        // CB 33 0144
        gbc.setState(0x1ef8, 0xf6af, 0xd220, 0x4153, 0x49bf, 0x65c2, 0x0, 0x1);
        gbc.writeMem(0x1ef8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf6af);
        EXPECT(gbc.pc(), 0x1efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0145
        gbc.setState(0x6a27, 0x1b46, 0xea10, 0x4e70, 0xb4f9, 0x8e8c, 0x1, 0x1);
        gbc.writeMem(0x6a27, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1b46);
        EXPECT(gbc.pc(), 0x6a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0146
        gbc.setState(0x2299, 0xd237, 0x9510, 0xc3cb, 0x4b12, 0x1d44, 0x0, 0x1);
        gbc.writeMem(0x2299, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd237);
        EXPECT(gbc.pc(), 0x229b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0147
        gbc.setState(0xbf65, 0xdfea, 0x7b50, 0xc58a, 0x7d06, 0x86c9, 0x0, 0x1);
        gbc.writeMem(0xbf65, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdfea);
        EXPECT(gbc.pc(), 0xbf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf65), 0xcb);
        EXPECT(gbc.readMem(0xbf66), 0x33);
        // CB 33 0148
        gbc.setState(0x49ca, 0x1c84, 0xcff0, 0x9f54, 0x5f75, 0x9665, 0x0, 0x0);
        gbc.writeMem(0x49ca, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1c84);
        EXPECT(gbc.pc(), 0x49cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0149
        gbc.setState(0xb237, 0x751, 0x5170, 0x5a6, 0xb7a0, 0xc088, 0x1, 0x1);
        gbc.writeMem(0xb237, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x751);
        EXPECT(gbc.pc(), 0xb239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb237), 0xcb);
        EXPECT(gbc.readMem(0xb238), 0x33);
        // CB 33 014A
        gbc.setState(0x2224, 0x2f32, 0x2be0, 0x483e, 0xd9d1, 0xb49, 0x0, 0x1);
        gbc.writeMem(0x2224, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2f32);
        EXPECT(gbc.pc(), 0x2226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 014B
        gbc.setState(0x1982, 0x8f32, 0xf320, 0x7c53, 0x8c5, 0xe4dd, 0x1, 0x0);
        gbc.writeMem(0x1982, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8f32);
        EXPECT(gbc.pc(), 0x1984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 014C
        gbc.setState(0x3ebc, 0x8aa1, 0x39b0, 0xf0ab, 0x58f2, 0x14d6, 0x1, 0x0);
        gbc.writeMem(0x3ebc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0x3ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 014D
        gbc.setState(0x2e38, 0x4d0e, 0xa2a0, 0x13af, 0x1149, 0x7bc, 0x0, 0x1);
        gbc.writeMem(0x2e38, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4d0e);
        EXPECT(gbc.pc(), 0x2e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 014E
        gbc.setState(0x6a40, 0x8112, 0x6480, 0x639, 0x66e9, 0xa9f7, 0x1, 0x1);
        gbc.writeMem(0x6a40, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8112);
        EXPECT(gbc.pc(), 0x6a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 014F
        gbc.setState(0xba75, 0x28c, 0x4850, 0xbc4a, 0x5e7e, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0xba75, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x28c);
        EXPECT(gbc.pc(), 0xba77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba75), 0xcb);
        EXPECT(gbc.readMem(0xba76), 0x33);
        // CB 33 0150
        gbc.setState(0x9e43, 0xc024, 0xc400, 0x2bc1, 0xc366, 0x6ca6, 0x1, 0x0);
        gbc.writeMem(0x9e43, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc024);
        EXPECT(gbc.pc(), 0x9e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e43), 0xcb);
        EXPECT(gbc.readMem(0x9e44), 0x33);
        // CB 33 0151
        gbc.setState(0xeb3c, 0xb3dd, 0x9470, 0xf5cb, 0xed13, 0x7a15, 0x1, 0x0);
        gbc.writeMem(0xeb3c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb3dd);
        EXPECT(gbc.pc(), 0xeb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3c), 0xcb);
        EXPECT(gbc.readMem(0xeb3d), 0x33);
        // CB 33 0152
        gbc.setState(0xe95e, 0x7dc7, 0x7050, 0xb01, 0x1de8, 0x9844, 0x1, 0x0);
        gbc.writeMem(0xe95e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0xe960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95e), 0xcb);
        EXPECT(gbc.readMem(0xe95f), 0x33);
        // CB 33 0153
        gbc.setState(0x92ff, 0xbfe4, 0x2770, 0xa15b, 0x153e, 0xfb32, 0x1, 0x1);
        gbc.writeMem(0x92ff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbfe4);
        EXPECT(gbc.pc(), 0x9301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ff), 0xcb);
        EXPECT(gbc.readMem(0x9300), 0x33);
        // CB 33 0154
        gbc.setState(0xa864, 0xf4be, 0xa9a0, 0x5b80, 0x8176, 0xf5cb, 0x1, 0x0);
        gbc.writeMem(0xa864, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0xa866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa864), 0xcb);
        EXPECT(gbc.readMem(0xa865), 0x33);
        // CB 33 0155
        gbc.setState(0x9fb1, 0x5910, 0xee60, 0x818b, 0x7311, 0xd360, 0x1, 0x1);
        gbc.writeMem(0x9fb1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5910);
        EXPECT(gbc.pc(), 0x9fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb1), 0xcb);
        EXPECT(gbc.readMem(0x9fb2), 0x33);
        // CB 33 0156
        gbc.setState(0x3e7a, 0x94b9, 0xdaa0, 0x1b06, 0x1318, 0xbf3, 0x0, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x94b9);
        EXPECT(gbc.pc(), 0x3e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0157
        gbc.setState(0x7fd1, 0x6120, 0x7460, 0xebbd, 0x60a5, 0xc847, 0x1, 0x0);
        gbc.writeMem(0x7fd1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0x7fd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0158
        gbc.setState(0x49fb, 0x7506, 0xabe0, 0xc769, 0x276c, 0xffb8, 0x0, 0x0);
        gbc.writeMem(0x49fb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7506);
        EXPECT(gbc.pc(), 0x49fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0159
        gbc.setState(0xcff, 0xcf5c, 0x1430, 0x7771, 0x70ae, 0x8b69, 0x1, 0x0);
        gbc.writeMem(0xcff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcf5c);
        EXPECT(gbc.pc(), 0xd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 015A
        gbc.setState(0x403f, 0x9cb1, 0xc3e0, 0x6fca, 0x639b, 0xba5a, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9cb1);
        EXPECT(gbc.pc(), 0x4041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 015B
        gbc.setState(0x157c, 0x1ca1, 0xf3f0, 0x8fb5, 0x5aca, 0x78a3, 0x1, 0x1);
        gbc.writeMem(0x157c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1ca1);
        EXPECT(gbc.pc(), 0x157e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 015C
        gbc.setState(0x7200, 0xb8b0, 0xc120, 0xf218, 0xac60, 0x1703, 0x1, 0x0);
        gbc.writeMem(0x7200, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb8b0);
        EXPECT(gbc.pc(), 0x7202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 015D
        gbc.setState(0xcd54, 0xc91, 0xf5d0, 0x34aa, 0x3cd0, 0x4e55, 0x1, 0x0);
        gbc.writeMem(0xcd54, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc91);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd54), 0xcb);
        EXPECT(gbc.readMem(0xcd55), 0x33);
        // CB 33 015E
        gbc.setState(0xab86, 0xc92b, 0x8720, 0xc05e, 0x7be0, 0x3800, 0x0, 0x1);
        gbc.writeMem(0xab86, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc92b);
        EXPECT(gbc.pc(), 0xab88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab86), 0xcb);
        EXPECT(gbc.readMem(0xab87), 0x33);
        // CB 33 015F
        gbc.setState(0x9b90, 0x507a, 0x9050, 0xeed6, 0xa98, 0x8fc1, 0x1, 0x0);
        gbc.writeMem(0x9b90, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x507a);
        EXPECT(gbc.pc(), 0x9b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b90), 0xcb);
        EXPECT(gbc.readMem(0x9b91), 0x33);
        // CB 33 0160
        gbc.setState(0x3faa, 0x1048, 0xfa00, 0xc6d0, 0xf7df, 0xf3cf, 0x1, 0x1);
        gbc.writeMem(0x3faa, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0x3fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0161
        gbc.setState(0x686e, 0xc7d0, 0xb210, 0x55bf, 0xef0a, 0xad54, 0x1, 0x1);
        gbc.writeMem(0x686e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc7d0);
        EXPECT(gbc.pc(), 0x6870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0162
        gbc.setState(0x9790, 0x7fa5, 0x8c20, 0x2eef, 0xb811, 0xf519, 0x1, 0x1);
        gbc.writeMem(0x9790, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7fa5);
        EXPECT(gbc.pc(), 0x9792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9790), 0xcb);
        EXPECT(gbc.readMem(0x9791), 0x33);
        // CB 33 0163
        gbc.setState(0x9ad7, 0x3482, 0xb880, 0xf7f5, 0x29db, 0x34c5, 0x0, 0x0);
        gbc.writeMem(0x9ad7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3482);
        EXPECT(gbc.pc(), 0x9ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad7), 0xcb);
        EXPECT(gbc.readMem(0x9ad8), 0x33);
        // CB 33 0164
        gbc.setState(0x1ce5, 0xa934, 0xb720, 0x1dc0, 0x9af8, 0x26ae, 0x1, 0x0);
        gbc.writeMem(0x1ce5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa934);
        EXPECT(gbc.pc(), 0x1ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0165
        gbc.setState(0xa070, 0x5bfb, 0x31d0, 0xe902, 0xa96f, 0xf607, 0x0, 0x0);
        gbc.writeMem(0xa070, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5bfb);
        EXPECT(gbc.pc(), 0xa072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa070), 0xcb);
        EXPECT(gbc.readMem(0xa071), 0x33);
        // CB 33 0166
        gbc.setState(0x6b6c, 0x3ed4, 0xc1d0, 0xa54d, 0x43d5, 0xddb, 0x0, 0x1);
        gbc.writeMem(0x6b6c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3ed4);
        EXPECT(gbc.pc(), 0x6b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0167
        gbc.setState(0x5354, 0xbd84, 0x1c80, 0xc353, 0xca86, 0x4a10, 0x0, 0x1);
        gbc.writeMem(0x5354, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbd84);
        EXPECT(gbc.pc(), 0x5356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0168
        gbc.setState(0x6573, 0xf2e9, 0xce30, 0x42dd, 0x2752, 0xc949, 0x1, 0x1);
        gbc.writeMem(0x6573, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf2e9);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0169
        gbc.setState(0x82a, 0x98ed, 0xf380, 0x68a3, 0xa034, 0xcc28, 0x1, 0x1);
        gbc.writeMem(0x82a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0x82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 016A
        gbc.setState(0x64a4, 0xab92, 0x3f50, 0xdb82, 0xd637, 0xd1df, 0x1, 0x0);
        gbc.writeMem(0x64a4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xab92);
        EXPECT(gbc.pc(), 0x64a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 016B
        gbc.setState(0x6690, 0x997c, 0xe480, 0x8a1d, 0x3d99, 0x9276, 0x1, 0x0);
        gbc.writeMem(0x6690, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x997c);
        EXPECT(gbc.pc(), 0x6692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 016D
        gbc.setState(0x31ed, 0x1340, 0xfdf0, 0x5919, 0x7ed4, 0x9b78, 0x1, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1340);
        EXPECT(gbc.pc(), 0x31ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 016E
        gbc.setState(0x3374, 0x2d83, 0x79d0, 0x9925, 0x8486, 0x216a, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2d83);
        EXPECT(gbc.pc(), 0x3376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0170
        gbc.setState(0x38cc, 0xa214, 0x7190, 0x97a9, 0xc37e, 0xb6c3, 0x1, 0x0);
        gbc.writeMem(0x38cc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa214);
        EXPECT(gbc.pc(), 0x38ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0171
        gbc.setState(0xed97, 0xe377, 0x3b50, 0x7d48, 0x987, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0xed97, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe377);
        EXPECT(gbc.pc(), 0xed99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed97), 0xcb);
        EXPECT(gbc.readMem(0xed98), 0x33);
        // CB 33 0172
        gbc.setState(0x1838, 0x193e, 0xad50, 0xcc4b, 0xfee1, 0xdcbe, 0x0, 0x1);
        gbc.writeMem(0x1838, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x193e);
        EXPECT(gbc.pc(), 0x183a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0173
        gbc.setState(0x9498, 0xa208, 0x35c0, 0x76c5, 0xf9b7, 0x5af5, 0x1, 0x0);
        gbc.writeMem(0x9498, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0x949a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9498), 0xcb);
        EXPECT(gbc.readMem(0x9499), 0x33);
        // CB 33 0174
        gbc.setState(0x8069, 0x4b17, 0xc3e0, 0x6c42, 0x4097, 0xa818, 0x1, 0x1);
        gbc.writeMem(0x8069, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4b17);
        EXPECT(gbc.pc(), 0x806b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8069), 0xcb);
        EXPECT(gbc.readMem(0x806a), 0x33);
        // CB 33 0175
        gbc.setState(0xc688, 0x1079, 0x2ec0, 0x34eb, 0xd78e, 0x7a5a, 0x1, 0x1);
        gbc.writeMem(0xc688, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1079);
        EXPECT(gbc.pc(), 0xc68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc688), 0xcb);
        EXPECT(gbc.readMem(0xc689), 0x33);
        // CB 33 0177
        gbc.setState(0xe863, 0xd45c, 0xe290, 0xd3bd, 0x87ed, 0x8015, 0x0, 0x0);
        gbc.writeMem(0xe863, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd45c);
        EXPECT(gbc.pc(), 0xe865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe863), 0xcb);
        EXPECT(gbc.readMem(0xe864), 0x33);
        // CB 33 0178
        gbc.setState(0x917b, 0xecd7, 0xbcc0, 0xa93f, 0x63f6, 0x5011, 0x1, 0x1);
        gbc.writeMem(0x917b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xecd7);
        EXPECT(gbc.pc(), 0x917d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917b), 0xcb);
        EXPECT(gbc.readMem(0x917c), 0x33);
        // CB 33 0179
        gbc.setState(0x2d5, 0xcd6e, 0xb2e0, 0x3fef, 0x2672, 0x8112, 0x0, 0x0);
        gbc.writeMem(0x2d5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcd6e);
        EXPECT(gbc.pc(), 0x2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 017A
        gbc.setState(0xbb34, 0xe6ae, 0x3fe0, 0x333c, 0xc7b2, 0x966c, 0x1, 0x1);
        gbc.writeMem(0xbb34, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe6ae);
        EXPECT(gbc.pc(), 0xbb36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb34), 0xcb);
        EXPECT(gbc.readMem(0xbb35), 0x33);
        // CB 33 017B
        gbc.setState(0x6f76, 0xcf9e, 0x1e00, 0x201e, 0xceee, 0x8e10, 0x1, 0x0);
        gbc.writeMem(0x6f76, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcf9e);
        EXPECT(gbc.pc(), 0x6f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 017C
        gbc.setState(0xa5ce, 0x46ce, 0x43d0, 0x9df5, 0x4ac2, 0x7561, 0x1, 0x1);
        gbc.writeMem(0xa5ce, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0xa5d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ce), 0xcb);
        EXPECT(gbc.readMem(0xa5cf), 0x33);
        // CB 33 017D
        gbc.setState(0x7c92, 0x8812, 0x8520, 0x49e4, 0x4cfa, 0xcb18, 0x0, 0x0);
        gbc.writeMem(0x7c92, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8812);
        EXPECT(gbc.pc(), 0x7c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 017E
        gbc.setState(0xabf6, 0x4c41, 0x67a0, 0xba11, 0x15f8, 0x3e80, 0x0, 0x0);
        gbc.writeMem(0xabf6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4c41);
        EXPECT(gbc.pc(), 0xabf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf6), 0xcb);
        EXPECT(gbc.readMem(0xabf7), 0x33);
        // CB 33 017F
        gbc.setState(0x1fe, 0x8100, 0xa3e0, 0x3cfe, 0xbb4a, 0x5e56, 0x0, 0x1);
        gbc.writeMem(0x1fe, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8100);
        EXPECT(gbc.pc(), 0x200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0181
        gbc.setState(0xba3b, 0x703c, 0x4b60, 0x524d, 0xa38e, 0x3cb2, 0x1, 0x1);
        gbc.writeMem(0xba3b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x703c);
        EXPECT(gbc.pc(), 0xba3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3b), 0xcb);
        EXPECT(gbc.readMem(0xba3c), 0x33);
        // CB 33 0182
        gbc.setState(0x86ce, 0xdc38, 0x56c0, 0x1662, 0x686b, 0x54c8, 0x1, 0x0);
        gbc.writeMem(0x86ce, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdc38);
        EXPECT(gbc.pc(), 0x86d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ce), 0xcb);
        EXPECT(gbc.readMem(0x86cf), 0x33);
        // CB 33 0183
        gbc.setState(0x548d, 0x5db6, 0x9c40, 0x511e, 0x5a01, 0xe407, 0x1, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5db6);
        EXPECT(gbc.pc(), 0x548f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0184
        gbc.setState(0x5e21, 0xfc24, 0x6ef0, 0x87a2, 0xb03d, 0x86bf, 0x1, 0x0);
        gbc.writeMem(0x5e21, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfc24);
        EXPECT(gbc.pc(), 0x5e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0185
        gbc.setState(0x14f5, 0xf165, 0x2220, 0xb333, 0x3bf7, 0xc410, 0x0, 0x1);
        gbc.writeMem(0x14f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf165);
        EXPECT(gbc.pc(), 0x14f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0186
        gbc.setState(0xb84a, 0x3f0, 0xa010, 0x70d3, 0x609d, 0x7abb, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3f0);
        EXPECT(gbc.pc(), 0xb84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84a), 0xcb);
        EXPECT(gbc.readMem(0xb84b), 0x33);
        // CB 33 0187
        gbc.setState(0x6c82, 0x1515, 0x4200, 0x6dd9, 0x421d, 0x766b, 0x0, 0x1);
        gbc.writeMem(0x6c82, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1515);
        EXPECT(gbc.pc(), 0x6c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0188
        gbc.setState(0x876e, 0x95b2, 0xb6a0, 0x1db4, 0xa266, 0xace4, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x95b2);
        EXPECT(gbc.pc(), 0x8770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876e), 0xcb);
        EXPECT(gbc.readMem(0x876f), 0x33);
        // CB 33 0189
        gbc.setState(0x519a, 0xf54f, 0x93e0, 0xc8cc, 0x148e, 0x17fe, 0x1, 0x1);
        gbc.writeMem(0x519a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf54f);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 018A
        gbc.setState(0x5c7b, 0x18a5, 0xf60, 0x44a9, 0x1c02, 0xf1f9, 0x1, 0x0);
        gbc.writeMem(0x5c7b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x18a5);
        EXPECT(gbc.pc(), 0x5c7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 018B
        gbc.setState(0xc313, 0xacb2, 0x2470, 0x2c8e, 0x8226, 0x6c31, 0x0, 0x1);
        gbc.writeMem(0xc313, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xacb2);
        EXPECT(gbc.pc(), 0xc315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc313), 0xcb);
        EXPECT(gbc.readMem(0xc314), 0x33);
        // CB 33 018D
        gbc.setState(0xcead, 0x3ac0, 0xc60, 0x5244, 0x6ba4, 0x865b, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3ac0);
        EXPECT(gbc.pc(), 0xceaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcead), 0xcb);
        EXPECT(gbc.readMem(0xceae), 0x33);
        // CB 33 018E
        gbc.setState(0xc83c, 0x60fc, 0x55d0, 0xf814, 0x1779, 0x4e0b, 0x0, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x60fc);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0x33);
        // CB 33 018F
        gbc.setState(0xa923, 0xe189, 0x6560, 0x20d4, 0xea0, 0xb73c, 0x1, 0x1);
        gbc.writeMem(0xa923, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe189);
        EXPECT(gbc.pc(), 0xa925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa923), 0xcb);
        EXPECT(gbc.readMem(0xa924), 0x33);
        // CB 33 0190
        gbc.setState(0x6e27, 0xe86b, 0xc2c0, 0x94c1, 0xe55e, 0xaf1f, 0x0, 0x0);
        gbc.writeMem(0x6e27, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe86b);
        EXPECT(gbc.pc(), 0x6e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0191
        gbc.setState(0x2541, 0xd9d6, 0x32f0, 0x79b9, 0x7a2e, 0x305b, 0x1, 0x0);
        gbc.writeMem(0x2541, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd9d6);
        EXPECT(gbc.pc(), 0x2543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0192
        gbc.setState(0x31f3, 0x11b1, 0xb940, 0x71fa, 0xaa70, 0xe156, 0x1, 0x1);
        gbc.writeMem(0x31f3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x11b1);
        EXPECT(gbc.pc(), 0x31f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0193
        gbc.setState(0x948e, 0x5b63, 0x3610, 0x9b56, 0x4ea3, 0xa308, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5b63);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948e), 0xcb);
        EXPECT(gbc.readMem(0x948f), 0x33);
        // CB 33 0194
        gbc.setState(0xe839, 0x6565, 0x5d20, 0x31fb, 0x9066, 0x864a, 0x1, 0x0);
        gbc.writeMem(0xe839, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6565);
        EXPECT(gbc.pc(), 0xe83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe839), 0xcb);
        EXPECT(gbc.readMem(0xe83a), 0x33);
        // CB 33 0196
        gbc.setState(0x5d7c, 0x355f, 0xec80, 0x724, 0x2c04, 0x6d95, 0x0, 0x1);
        gbc.writeMem(0x5d7c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x355f);
        EXPECT(gbc.pc(), 0x5d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0197
        gbc.setState(0x22da, 0x212c, 0x1de0, 0xe1cb, 0x52e, 0xcbcd, 0x1, 0x0);
        gbc.writeMem(0x22da, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0x22dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0198
        gbc.setState(0x457c, 0x1176, 0xb0, 0x408b, 0xa7c, 0x53ca, 0x1, 0x0);
        gbc.writeMem(0x457c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1176);
        EXPECT(gbc.pc(), 0x457e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 019A
        gbc.setState(0x9429, 0x781, 0x82b0, 0x115, 0x1be9, 0xb828, 0x1, 0x0);
        gbc.writeMem(0x9429, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x781);
        EXPECT(gbc.pc(), 0x942b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9429), 0xcb);
        EXPECT(gbc.readMem(0x942a), 0x33);
        // CB 33 019B
        gbc.setState(0x5e53, 0x4708, 0xfec0, 0x95d0, 0x1cb7, 0x174b, 0x1, 0x1);
        gbc.writeMem(0x5e53, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0x5e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 019C
        gbc.setState(0xcb, 0x1d91, 0x6790, 0x4dd8, 0xf291, 0xa410, 0x0, 0x0);
        gbc.writeMem(0xcb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1d91);
        EXPECT(gbc.pc(), 0xcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 019D
        gbc.setState(0x732, 0xefc9, 0x58b0, 0x1f8c, 0xf26c, 0x19ad, 0x1, 0x0);
        gbc.writeMem(0x732, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xefc9);
        EXPECT(gbc.pc(), 0x734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 019E
        gbc.setState(0x89ce, 0xd4b1, 0x2270, 0xd655, 0x273, 0xe268, 0x1, 0x0);
        gbc.writeMem(0x89ce, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd4b1);
        EXPECT(gbc.pc(), 0x89d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ce), 0xcb);
        EXPECT(gbc.readMem(0x89cf), 0x33);
        // CB 33 019F
        gbc.setState(0xac50, 0xa3aa, 0xdec0, 0x60f2, 0xb597, 0x3bcd, 0x1, 0x1);
        gbc.writeMem(0xac50, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa3aa);
        EXPECT(gbc.pc(), 0xac52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac50), 0xcb);
        EXPECT(gbc.readMem(0xac51), 0x33);
        // CB 33 01A0
        gbc.setState(0xcde0, 0x72a3, 0x42f0, 0xe527, 0x8da4, 0x1033, 0x0, 0x1);
        gbc.writeMem(0xcde0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x72a3);
        EXPECT(gbc.pc(), 0xcde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde0), 0xcb);
        EXPECT(gbc.readMem(0xcde1), 0x33);
        // CB 33 01A1
        gbc.setState(0x5361, 0x5f5b, 0xfb30, 0x7ed6, 0x7b3f, 0xe6f, 0x1, 0x0);
        gbc.writeMem(0x5361, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5f5b);
        EXPECT(gbc.pc(), 0x5363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A2
        gbc.setState(0x71fd, 0x87c6, 0xdb80, 0xc3e1, 0xbe5c, 0xb31c, 0x0, 0x0);
        gbc.writeMem(0x71fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x87c6);
        EXPECT(gbc.pc(), 0x71ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A3
        gbc.setState(0x659b, 0xeb6f, 0x67e0, 0x1299, 0x4397, 0x6d98, 0x0, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xeb6f);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A4
        gbc.setState(0x3b2, 0xae12, 0x1320, 0x1759, 0x8576, 0x6247, 0x0, 0x0);
        gbc.writeMem(0x3b2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xae12);
        EXPECT(gbc.pc(), 0x3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A5
        gbc.setState(0x15fb, 0xb6b6, 0x6c30, 0x80dc, 0x2dff, 0xb13e, 0x0, 0x1);
        gbc.writeMem(0x15fb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb6b6);
        EXPECT(gbc.pc(), 0x15fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A6
        gbc.setState(0x2f85, 0x1dbe, 0xb1d0, 0x9ab8, 0x76ac, 0x492d, 0x0, 0x0);
        gbc.writeMem(0x2f85, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1dbe);
        EXPECT(gbc.pc(), 0x2f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A8
        gbc.setState(0x6243, 0xc39e, 0xdc60, 0x829c, 0xdb94, 0x119c, 0x1, 0x0);
        gbc.writeMem(0x6243, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc39e);
        EXPECT(gbc.pc(), 0x6245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01A9
        gbc.setState(0xeaa1, 0xf083, 0xe250, 0xe06, 0xf597, 0xe604, 0x1, 0x0);
        gbc.writeMem(0xeaa1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf083);
        EXPECT(gbc.pc(), 0xeaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa1), 0xcb);
        EXPECT(gbc.readMem(0xeaa2), 0x33);
        // CB 33 01AA
        gbc.setState(0x68f2, 0x2e6a, 0x3480, 0x114b, 0x7e8e, 0x79cf, 0x0, 0x1);
        gbc.writeMem(0x68f2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2e6a);
        EXPECT(gbc.pc(), 0x68f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01AB
        gbc.setState(0xe16e, 0xdc7, 0xe660, 0x2fe7, 0x2c59, 0x4c7a, 0x0, 0x1);
        gbc.writeMem(0xe16e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdc7);
        EXPECT(gbc.pc(), 0xe170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16e), 0xcb);
        EXPECT(gbc.readMem(0xe16f), 0x33);
        // CB 33 01AC
        gbc.setState(0x5ce7, 0x3cf7, 0xc150, 0x526f, 0x41c6, 0xef53, 0x1, 0x0);
        gbc.writeMem(0x5ce7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3cf7);
        EXPECT(gbc.pc(), 0x5ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01AD
        gbc.setState(0xd72, 0x25e9, 0x8e0, 0xa070, 0x28cd, 0x909d, 0x1, 0x0);
        gbc.writeMem(0xd72, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0xd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01AE
        gbc.setState(0xec0f, 0x2262, 0x36c0, 0x918c, 0x4457, 0xe623, 0x0, 0x1);
        gbc.writeMem(0xec0f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2262);
        EXPECT(gbc.pc(), 0xec11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0f), 0xcb);
        EXPECT(gbc.readMem(0xec10), 0x33);
        // CB 33 01AF
        gbc.setState(0x1e78, 0x30be, 0x2e10, 0x2022, 0x5518, 0x4398, 0x1, 0x0);
        gbc.writeMem(0x1e78, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x30be);
        EXPECT(gbc.pc(), 0x1e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01B0
        gbc.setState(0xbc00, 0x3460, 0xc720, 0xfa50, 0x4424, 0xba4e, 0x0, 0x1);
        gbc.writeMem(0xbc00, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3460);
        EXPECT(gbc.pc(), 0xbc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc00), 0xcb);
        EXPECT(gbc.readMem(0xbc01), 0x33);
        // CB 33 01B2
        gbc.setState(0x1882, 0x26e5, 0xfc90, 0x9009, 0x3ac2, 0x111b, 0x0, 0x0);
        gbc.writeMem(0x1882, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x26e5);
        EXPECT(gbc.pc(), 0x1884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01B3
        gbc.setState(0x89f4, 0x4460, 0xadb0, 0xd02, 0xc42b, 0x9906, 0x0, 0x0);
        gbc.writeMem(0x89f4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4460);
        EXPECT(gbc.pc(), 0x89f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f4), 0xcb);
        EXPECT(gbc.readMem(0x89f5), 0x33);
        // CB 33 01B4
        gbc.setState(0xb89e, 0xee81, 0x2e00, 0x1fe4, 0x626, 0x99f6, 0x1, 0x0);
        gbc.writeMem(0xb89e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89e), 0xcb);
        EXPECT(gbc.readMem(0xb89f), 0x33);
        // CB 33 01B5
        gbc.setState(0xb4b9, 0x8687, 0x7c20, 0xb3a2, 0xbb57, 0xedfc, 0x0, 0x1);
        gbc.writeMem(0xb4b9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8687);
        EXPECT(gbc.pc(), 0xb4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b9), 0xcb);
        EXPECT(gbc.readMem(0xb4ba), 0x33);
        // CB 33 01B6
        gbc.setState(0x3480, 0x4f47, 0xf4f0, 0x5b59, 0x8873, 0xde4e, 0x0, 0x0);
        gbc.writeMem(0x3480, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4f47);
        EXPECT(gbc.pc(), 0x3482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01B7
        gbc.setState(0x2ce0, 0x13a1, 0x1710, 0xfd8f, 0x2a1c, 0xf928, 0x0, 0x1);
        gbc.writeMem(0x2ce0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x13a1);
        EXPECT(gbc.pc(), 0x2ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01B8
        gbc.setState(0xb4ad, 0x4f83, 0x5100, 0xb30e, 0x37dd, 0xbbe0, 0x0, 0x1);
        gbc.writeMem(0xb4ad, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4f83);
        EXPECT(gbc.pc(), 0xb4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ad), 0xcb);
        EXPECT(gbc.readMem(0xb4ae), 0x33);
        // CB 33 01BA
        gbc.setState(0x454, 0xee19, 0xe6a0, 0x3c2a, 0x4795, 0x3444, 0x1, 0x0);
        gbc.writeMem(0x454, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xee19);
        EXPECT(gbc.pc(), 0x456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01BB
        gbc.setState(0x4375, 0xacfb, 0x4690, 0x75d2, 0xe3e4, 0x3394, 0x0, 0x0);
        gbc.writeMem(0x4375, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0x4377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01BC
        gbc.setState(0x4b5a, 0x2c79, 0x4970, 0x65cb, 0xea21, 0xa7b7, 0x0, 0x1);
        gbc.writeMem(0x4b5a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2c79);
        EXPECT(gbc.pc(), 0x4b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01BD
        gbc.setState(0x6d30, 0xcbea, 0x59f0, 0x42fc, 0x78, 0x22ac, 0x1, 0x0);
        gbc.writeMem(0x6d30, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcbea);
        EXPECT(gbc.pc(), 0x6d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01BF
        gbc.setState(0x6204, 0xa379, 0x3ca0, 0xff14, 0xf64f, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x6204, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa379);
        EXPECT(gbc.pc(), 0x6206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C0
        gbc.setState(0xe068, 0xe49e, 0xbea0, 0xe0c, 0xa880, 0x3739, 0x1, 0x1);
        gbc.writeMem(0xe068, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe49e);
        EXPECT(gbc.pc(), 0xe06a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe068), 0xcb);
        EXPECT(gbc.readMem(0xe069), 0x33);
        // CB 33 01C1
        gbc.setState(0x9d64, 0x339e, 0x8a00, 0xaede, 0xc157, 0x3b93, 0x0, 0x0);
        gbc.writeMem(0x9d64, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x339e);
        EXPECT(gbc.pc(), 0x9d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d64), 0xcb);
        EXPECT(gbc.readMem(0x9d65), 0x33);
        // CB 33 01C2
        gbc.setState(0x4788, 0x8857, 0x67e0, 0xcd, 0xf286, 0xf23d, 0x1, 0x0);
        gbc.writeMem(0x4788, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8857);
        EXPECT(gbc.pc(), 0x478a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C3
        gbc.setState(0x4711, 0x7b50, 0xd0a0, 0x7101, 0x3f76, 0x8a64, 0x0, 0x0);
        gbc.writeMem(0x4711, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7b50);
        EXPECT(gbc.pc(), 0x4713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C4
        gbc.setState(0xeda8, 0xd8f5, 0x2500, 0x3b70, 0x922c, 0xd99a, 0x0, 0x0);
        gbc.writeMem(0xeda8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd8f5);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda8), 0xcb);
        EXPECT(gbc.readMem(0xeda9), 0x33);
        // CB 33 01C5
        gbc.setState(0x796, 0x4f0c, 0x5260, 0xff14, 0xce2d, 0xa9b1, 0x0, 0x1);
        gbc.writeMem(0x796, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4f0c);
        EXPECT(gbc.pc(), 0x798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C6
        gbc.setState(0x37d5, 0x9ab1, 0x8a30, 0xd938, 0x92dd, 0xbf1a, 0x1, 0x0);
        gbc.writeMem(0x37d5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9ab1);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C7
        gbc.setState(0xe4d1, 0xe243, 0x7c20, 0xe486, 0xd2a5, 0xf77, 0x1, 0x0);
        gbc.writeMem(0xe4d1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe243);
        EXPECT(gbc.pc(), 0xe4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d1), 0xcb);
        EXPECT(gbc.readMem(0xe4d2), 0x33);
        // CB 33 01C8
        gbc.setState(0x6de2, 0x9853, 0x4370, 0xba55, 0x7e09, 0x73d, 0x0, 0x0);
        gbc.writeMem(0x6de2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9853);
        EXPECT(gbc.pc(), 0x6de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01C9
        gbc.setState(0xd099, 0x8911, 0x58e0, 0xe645, 0x592b, 0x3cb3, 0x1, 0x1);
        gbc.writeMem(0xd099, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8911);
        EXPECT(gbc.pc(), 0xd09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd099), 0xcb);
        EXPECT(gbc.readMem(0xd09a), 0x33);
        // CB 33 01CA
        gbc.setState(0xcdf8, 0xa22e, 0x49a0, 0xddc3, 0x3058, 0x709a, 0x1, 0x0);
        gbc.writeMem(0xcdf8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa22e);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf8), 0xcb);
        EXPECT(gbc.readMem(0xcdf9), 0x33);
        // CB 33 01CB
        gbc.setState(0x152, 0x5727, 0xbe00, 0x5203, 0x56dc, 0xf101, 0x1, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5727);
        EXPECT(gbc.pc(), 0x154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01CC
        gbc.setState(0x9668, 0x5f4f, 0xcdc0, 0xf23f, 0x5b1f, 0xa03, 0x0, 0x0);
        gbc.writeMem(0x9668, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5f4f);
        EXPECT(gbc.pc(), 0x966a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9668), 0xcb);
        EXPECT(gbc.readMem(0x9669), 0x33);
        // CB 33 01CD
        gbc.setState(0x246a, 0x4e7e, 0xd200, 0x4aaa, 0x93e4, 0xa2aa, 0x0, 0x1);
        gbc.writeMem(0x246a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4e7e);
        EXPECT(gbc.pc(), 0x246c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01CE
        gbc.setState(0xc673, 0x992f, 0x7ea0, 0xf23d, 0xbb64, 0x7b4, 0x1, 0x0);
        gbc.writeMem(0xc673, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x992f);
        EXPECT(gbc.pc(), 0xc675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc673), 0xcb);
        EXPECT(gbc.readMem(0xc674), 0x33);
        // CB 33 01CF
        gbc.setState(0xc5c7, 0xdba9, 0x2bc0, 0xd3e4, 0xbb69, 0x5b3b, 0x0, 0x0);
        gbc.writeMem(0xc5c7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xdba9);
        EXPECT(gbc.pc(), 0xc5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c7), 0xcb);
        EXPECT(gbc.readMem(0xc5c8), 0x33);
        // CB 33 01D0
        gbc.setState(0x7142, 0x5843, 0x79d0, 0x76df, 0x54d6, 0xcc2f, 0x0, 0x0);
        gbc.writeMem(0x7142, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5843);
        EXPECT(gbc.pc(), 0x7144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01D1
        gbc.setState(0x12eb, 0x27c1, 0x14c0, 0xcdd6, 0x20b5, 0xf77f, 0x1, 0x0);
        gbc.writeMem(0x12eb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x27c1);
        EXPECT(gbc.pc(), 0x12ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01D2
        gbc.setState(0xa5ef, 0xd805, 0x7490, 0x7bde, 0x843f, 0xffa4, 0x0, 0x0);
        gbc.writeMem(0xa5ef, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd805);
        EXPECT(gbc.pc(), 0xa5f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ef), 0xcb);
        EXPECT(gbc.readMem(0xa5f0), 0x33);
        // CB 33 01D3
        gbc.setState(0xa247, 0xf6f, 0x40f0, 0x515, 0x8df1, 0xe0ba, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf6f);
        EXPECT(gbc.pc(), 0xa249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa247), 0xcb);
        EXPECT(gbc.readMem(0xa248), 0x33);
        // CB 33 01D4
        gbc.setState(0xcbee, 0xee56, 0x8f00, 0xb1c6, 0x3b12, 0xe3a, 0x0, 0x0);
        gbc.writeMem(0xcbee, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xee56);
        EXPECT(gbc.pc(), 0xcbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbee), 0xcb);
        EXPECT(gbc.readMem(0xcbef), 0x33);
        // CB 33 01D5
        gbc.setState(0xdb50, 0x1376, 0x8420, 0x427f, 0xc258, 0xfba5, 0x1, 0x0);
        gbc.writeMem(0xdb50, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1376);
        EXPECT(gbc.pc(), 0xdb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb50), 0xcb);
        EXPECT(gbc.readMem(0xdb51), 0x33);
        // CB 33 01D6
        gbc.setState(0xacdf, 0x58e4, 0x6b30, 0x175a, 0x9681, 0x2998, 0x1, 0x1);
        gbc.writeMem(0xacdf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x58e4);
        EXPECT(gbc.pc(), 0xace1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacdf), 0xcb);
        EXPECT(gbc.readMem(0xace0), 0x33);
        // CB 33 01D8
        gbc.setState(0x9858, 0x4f2e, 0x4b40, 0xa1d5, 0x784d, 0x8cbb, 0x1, 0x1);
        gbc.writeMem(0x9858, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4f2e);
        EXPECT(gbc.pc(), 0x985a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9858), 0xcb);
        EXPECT(gbc.readMem(0x9859), 0x33);
        // CB 33 01D9
        gbc.setState(0xba91, 0x54c1, 0x5640, 0x4840, 0xc87a, 0xb26a, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x54c1);
        EXPECT(gbc.pc(), 0xba93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba91), 0xcb);
        EXPECT(gbc.readMem(0xba92), 0x33);
        // CB 33 01DA
        gbc.setState(0x20a7, 0x27a6, 0xd600, 0x7b22, 0x538, 0xa9e7, 0x0, 0x1);
        gbc.writeMem(0x20a7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x27a6);
        EXPECT(gbc.pc(), 0x20a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01DB
        gbc.setState(0x23ed, 0x9e23, 0x7cc0, 0xf2d0, 0x2180, 0xd00f, 0x0, 0x1);
        gbc.writeMem(0x23ed, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9e23);
        EXPECT(gbc.pc(), 0x23ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01DC
        gbc.setState(0xc42, 0x864e, 0xaec0, 0x2e0d, 0x876f, 0xc7b8, 0x0, 0x0);
        gbc.writeMem(0xc42, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x864e);
        EXPECT(gbc.pc(), 0xc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01DD
        gbc.setState(0x6bcd, 0x3fc3, 0xc590, 0x8303, 0x5afb, 0xbb68, 0x0, 0x1);
        gbc.writeMem(0x6bcd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3fc3);
        EXPECT(gbc.pc(), 0x6bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01DE
        gbc.setState(0x6a72, 0x4eae, 0xb8d0, 0x8cb4, 0xfdc4, 0xda35, 0x0, 0x1);
        gbc.writeMem(0x6a72, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4eae);
        EXPECT(gbc.pc(), 0x6a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01DF
        gbc.setState(0x4f28, 0xafa7, 0x2e30, 0xd44b, 0x8069, 0xa7c5, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x4f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01E0
        gbc.setState(0x4fd7, 0x12bf, 0xa120, 0x55c9, 0x5fb3, 0xd34c, 0x0, 0x1);
        gbc.writeMem(0x4fd7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x12bf);
        EXPECT(gbc.pc(), 0x4fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01E1
        gbc.setState(0xc798, 0x4f7e, 0xe4f0, 0xcacd, 0x1e6c, 0x8cf6, 0x0, 0x0);
        gbc.writeMem(0xc798, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4f7e);
        EXPECT(gbc.pc(), 0xc79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc798), 0xcb);
        EXPECT(gbc.readMem(0xc799), 0x33);
        // CB 33 01E2
        gbc.setState(0xc2c3, 0x9fd8, 0x83d0, 0x9a96, 0x45ba, 0x4cc5, 0x1, 0x1);
        gbc.writeMem(0xc2c3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9fd8);
        EXPECT(gbc.pc(), 0xc2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c3), 0xcb);
        EXPECT(gbc.readMem(0xc2c4), 0x33);
        // CB 33 01E3
        gbc.setState(0x264c, 0xd94c, 0xcc70, 0x77b1, 0x938e, 0xb5a4, 0x0, 0x0);
        gbc.writeMem(0x264c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01E4
        gbc.setState(0x9759, 0x1c5f, 0x42c0, 0xe1c, 0x2123, 0x8213, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1c5f);
        EXPECT(gbc.pc(), 0x975b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9759), 0xcb);
        EXPECT(gbc.readMem(0x975a), 0x33);
        // CB 33 01E6
        gbc.setState(0x3f5b, 0x393e, 0x6e00, 0x57dc, 0xf588, 0x392d, 0x1, 0x0);
        gbc.writeMem(0x3f5b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x393e);
        EXPECT(gbc.pc(), 0x3f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01E7
        gbc.setState(0xcfbf, 0x2616, 0x9110, 0xf6b1, 0xf9db, 0x197d, 0x1, 0x1);
        gbc.writeMem(0xcfbf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2616);
        EXPECT(gbc.pc(), 0xcfc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbf), 0xcb);
        EXPECT(gbc.readMem(0xcfc0), 0x33);
        // CB 33 01E8
        gbc.setState(0xb2a7, 0xb80a, 0xf870, 0xf74, 0xf350, 0x482d, 0x0, 0x1);
        gbc.writeMem(0xb2a7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb80a);
        EXPECT(gbc.pc(), 0xb2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a7), 0xcb);
        EXPECT(gbc.readMem(0xb2a8), 0x33);
        // CB 33 01E9
        gbc.setState(0xd49b, 0x8883, 0xda0, 0x4353, 0xa365, 0x6393, 0x0, 0x1);
        gbc.writeMem(0xd49b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8883);
        EXPECT(gbc.pc(), 0xd49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49b), 0xcb);
        EXPECT(gbc.readMem(0xd49c), 0x33);
        // CB 33 01EA
        gbc.setState(0x2ef0, 0x5f, 0xc5b0, 0xeed0, 0x91c0, 0x2a82, 0x0, 0x1);
        gbc.writeMem(0x2ef0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5f);
        EXPECT(gbc.pc(), 0x2ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01EC
        gbc.setState(0x3acf, 0xd090, 0x4850, 0xe2a3, 0x3739, 0xa4fa, 0x0, 0x0);
        gbc.writeMem(0x3acf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd090);
        EXPECT(gbc.pc(), 0x3ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01ED
        gbc.setState(0x2e2a, 0x327a, 0x6c50, 0x887a, 0xb625, 0x43d7, 0x0, 0x0);
        gbc.writeMem(0x2e2a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x327a);
        EXPECT(gbc.pc(), 0x2e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01EE
        gbc.setState(0x7e83, 0x3c39, 0xd840, 0xd71b, 0x97c8, 0xca4c, 0x0, 0x1);
        gbc.writeMem(0x7e83, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3c39);
        EXPECT(gbc.pc(), 0x7e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01EF
        gbc.setState(0x6e5d, 0x5c72, 0xd700, 0xf440, 0xb448, 0x9f9a, 0x0, 0x0);
        gbc.writeMem(0x6e5d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5c72);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F0
        gbc.setState(0xe7a9, 0x61f6, 0x65d0, 0x3664, 0xe3cf, 0xd75c, 0x0, 0x1);
        gbc.writeMem(0xe7a9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x61f6);
        EXPECT(gbc.pc(), 0xe7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a9), 0xcb);
        EXPECT(gbc.readMem(0xe7aa), 0x33);
        // CB 33 01F1
        gbc.setState(0x93c3, 0x83af, 0x3e80, 0xaf88, 0xdaf9, 0x97a5, 0x0, 0x1);
        gbc.writeMem(0x93c3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x83af);
        EXPECT(gbc.pc(), 0x93c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c3), 0xcb);
        EXPECT(gbc.readMem(0x93c4), 0x33);
        // CB 33 01F2
        gbc.setState(0x3ef3, 0xd468, 0x51c0, 0x31f8, 0x81d1, 0x3069, 0x1, 0x1);
        gbc.writeMem(0x3ef3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd468);
        EXPECT(gbc.pc(), 0x3ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F3
        gbc.setState(0x464b, 0xb6b9, 0xc820, 0x4b11, 0xc167, 0xaa30, 0x0, 0x0);
        gbc.writeMem(0x464b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb6b9);
        EXPECT(gbc.pc(), 0x464d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F4
        gbc.setState(0x7f6, 0xaf8d, 0x5d20, 0x1d71, 0x9d44, 0x18c, 0x0, 0x1);
        gbc.writeMem(0x7f6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaf8d);
        EXPECT(gbc.pc(), 0x7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F5
        gbc.setState(0x8bb, 0x4fab, 0x89e0, 0xc9b8, 0x75ed, 0x2cec, 0x1, 0x1);
        gbc.writeMem(0x8bb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4fab);
        EXPECT(gbc.pc(), 0x8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F6
        gbc.setState(0x25f5, 0x42c2, 0xedb0, 0xec4b, 0x5ed8, 0xcaa4, 0x1, 0x1);
        gbc.writeMem(0x25f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x42c2);
        EXPECT(gbc.pc(), 0x25f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01F7
        gbc.setState(0xb04e, 0x3bcd, 0x68c0, 0x739e, 0x2c68, 0x81b2, 0x0, 0x0);
        gbc.writeMem(0xb04e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0xb050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04e), 0xcb);
        EXPECT(gbc.readMem(0xb04f), 0x33);
        // CB 33 01F9
        gbc.setState(0x3df8, 0xda1a, 0x84d0, 0x95d6, 0xc334, 0x949f, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xda1a);
        EXPECT(gbc.pc(), 0x3dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01FA
        gbc.setState(0xe0c4, 0xa1bf, 0x6f60, 0x216d, 0xf1d9, 0xbca3, 0x1, 0x1);
        gbc.writeMem(0xe0c4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa1bf);
        EXPECT(gbc.pc(), 0xe0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c4), 0xcb);
        EXPECT(gbc.readMem(0xe0c5), 0x33);
        // CB 33 01FB
        gbc.setState(0xc258, 0x617e, 0xdb90, 0x7c, 0xfe1d, 0xc71, 0x0, 0x1);
        gbc.writeMem(0xc258, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x617e);
        EXPECT(gbc.pc(), 0xc25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc258), 0xcb);
        EXPECT(gbc.readMem(0xc259), 0x33);
        // CB 33 01FC
        gbc.setState(0xa3c7, 0xa6d1, 0xaa10, 0x78fd, 0xf07b, 0xacc8, 0x1, 0x0);
        gbc.writeMem(0xa3c7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa6d1);
        EXPECT(gbc.pc(), 0xa3c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c7), 0xcb);
        EXPECT(gbc.readMem(0xa3c8), 0x33);
        // CB 33 01FD
        gbc.setState(0xce27, 0xfbc8, 0x4480, 0x97d2, 0xc804, 0x7417, 0x1, 0x0);
        gbc.writeMem(0xce27, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfbc8);
        EXPECT(gbc.pc(), 0xce29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce27), 0xcb);
        EXPECT(gbc.readMem(0xce28), 0x33);
        // CB 33 01FE
        gbc.setState(0x760e, 0x62e7, 0x5990, 0xae92, 0xa0f9, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x760e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x62e7);
        EXPECT(gbc.pc(), 0x7610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 01FF
        gbc.setState(0x8514, 0xdb59, 0xf620, 0x3f70, 0x92ed, 0xc42f, 0x0, 0x1);
        gbc.writeMem(0x8514, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xdb59);
        EXPECT(gbc.pc(), 0x8516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8514), 0xcb);
        EXPECT(gbc.readMem(0x8515), 0x33);
        // CB 33 0200
        gbc.setState(0xc932, 0x16dd, 0x5900, 0x838a, 0xf41c, 0x6a18, 0x0, 0x0);
        gbc.writeMem(0xc932, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x16dd);
        EXPECT(gbc.pc(), 0xc934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc932), 0xcb);
        EXPECT(gbc.readMem(0xc933), 0x33);
        // CB 33 0201
        gbc.setState(0xa346, 0xa35c, 0xbf0, 0x2199, 0xf1, 0x8573, 0x0, 0x1);
        gbc.writeMem(0xa346, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa35c);
        EXPECT(gbc.pc(), 0xa348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa346), 0xcb);
        EXPECT(gbc.readMem(0xa347), 0x33);
        // CB 33 0202
        gbc.setState(0x3834, 0x5278, 0xe230, 0xd727, 0xd2ef, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x3834, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5278);
        EXPECT(gbc.pc(), 0x3836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0204
        gbc.setState(0xafc5, 0xec15, 0xa0, 0x70ee, 0x8aec, 0x1ef3, 0x0, 0x1);
        gbc.writeMem(0xafc5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xec15);
        EXPECT(gbc.pc(), 0xafc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc5), 0xcb);
        EXPECT(gbc.readMem(0xafc6), 0x33);
        // CB 33 0205
        gbc.setState(0x617d, 0x3af, 0x4360, 0x9666, 0x973a, 0x43c, 0x0, 0x1);
        gbc.writeMem(0x617d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3af);
        EXPECT(gbc.pc(), 0x617f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0207
        gbc.setState(0x9404, 0xaac5, 0x1690, 0x1795, 0x6478, 0xdc91, 0x0, 0x1);
        gbc.writeMem(0x9404, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0x9406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9404), 0xcb);
        EXPECT(gbc.readMem(0x9405), 0x33);
        // CB 33 0208
        gbc.setState(0x7dd8, 0x4c7c, 0x2cb0, 0xcccd, 0xb7b5, 0x40ac, 0x1, 0x0);
        gbc.writeMem(0x7dd8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4c7c);
        EXPECT(gbc.pc(), 0x7dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0209
        gbc.setState(0x501e, 0x42e8, 0xf2d0, 0x7207, 0xbc27, 0xfeed, 0x1, 0x1);
        gbc.writeMem(0x501e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x42e8);
        EXPECT(gbc.pc(), 0x5020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 020A
        gbc.setState(0xac67, 0xf5f0, 0xd8e0, 0x2d29, 0x5443, 0x1c41, 0x0, 0x0);
        gbc.writeMem(0xac67, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf5f0);
        EXPECT(gbc.pc(), 0xac69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac67), 0xcb);
        EXPECT(gbc.readMem(0xac68), 0x33);
        // CB 33 020C
        gbc.setState(0xbfa4, 0xe946, 0xdd0, 0x3dae, 0x8392, 0xf478, 0x0, 0x1);
        gbc.writeMem(0xbfa4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe946);
        EXPECT(gbc.pc(), 0xbfa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa4), 0xcb);
        EXPECT(gbc.readMem(0xbfa5), 0x33);
        // CB 33 020D
        gbc.setState(0x7146, 0x288c, 0xf510, 0x5ace, 0x6a02, 0xccf1, 0x1, 0x0);
        gbc.writeMem(0x7146, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x288c);
        EXPECT(gbc.pc(), 0x7148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 020E
        gbc.setState(0x2641, 0xe367, 0xbf20, 0xdfa2, 0x7f96, 0xcb32, 0x0, 0x0);
        gbc.writeMem(0x2641, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe367);
        EXPECT(gbc.pc(), 0x2643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 020F
        gbc.setState(0xe54, 0xc0ad, 0x890, 0x5580, 0xf59d, 0x8b30, 0x1, 0x1);
        gbc.writeMem(0xe54, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc0ad);
        EXPECT(gbc.pc(), 0xe56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0210
        gbc.setState(0xc199, 0x6d85, 0x5e20, 0x46e3, 0x99f7, 0xe678, 0x0, 0x0);
        gbc.writeMem(0xc199, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6d85);
        EXPECT(gbc.pc(), 0xc19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc199), 0xcb);
        EXPECT(gbc.readMem(0xc19a), 0x33);
        // CB 33 0211
        gbc.setState(0x87bd, 0xffb8, 0x8470, 0x4a03, 0xd553, 0x2cef, 0x0, 0x0);
        gbc.writeMem(0x87bd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xffb8);
        EXPECT(gbc.pc(), 0x87bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bd), 0xcb);
        EXPECT(gbc.readMem(0x87be), 0x33);
        // CB 33 0212
        gbc.setState(0xc6ae, 0x7fe5, 0xd50, 0x6bab, 0xe8b7, 0x1869, 0x1, 0x0);
        gbc.writeMem(0xc6ae, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7fe5);
        EXPECT(gbc.pc(), 0xc6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ae), 0xcb);
        EXPECT(gbc.readMem(0xc6af), 0x33);
        // CB 33 0213
        gbc.setState(0x1eba, 0x5c04, 0x7350, 0xf032, 0x63f0, 0x8691, 0x0, 0x0);
        gbc.writeMem(0x1eba, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5c04);
        EXPECT(gbc.pc(), 0x1ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0214
        gbc.setState(0xa806, 0x7119, 0xa840, 0xc514, 0x8ea4, 0x1012, 0x0, 0x0);
        gbc.writeMem(0xa806, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7119);
        EXPECT(gbc.pc(), 0xa808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa806), 0xcb);
        EXPECT(gbc.readMem(0xa807), 0x33);
        // CB 33 0215
        gbc.setState(0x9200, 0x15a4, 0x4e40, 0x6d18, 0x4543, 0x245c, 0x1, 0x0);
        gbc.writeMem(0x9200, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x15a4);
        EXPECT(gbc.pc(), 0x9202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9200), 0xcb);
        EXPECT(gbc.readMem(0x9201), 0x33);
        // CB 33 0216
        gbc.setState(0xb923, 0xd9f6, 0xfd00, 0xaac5, 0x5a52, 0x5e9f, 0x1, 0x0);
        gbc.writeMem(0xb923, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd9f6);
        EXPECT(gbc.pc(), 0xb925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb923), 0xcb);
        EXPECT(gbc.readMem(0xb924), 0x33);
        // CB 33 0217
        gbc.setState(0x2d66, 0x2b35, 0x5670, 0x5a0d, 0xd1a4, 0xfbad, 0x0, 0x0);
        gbc.writeMem(0x2d66, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2b35);
        EXPECT(gbc.pc(), 0x2d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0218
        gbc.setState(0xee50, 0x7df2, 0x2940, 0x674e, 0xf152, 0x7d2c, 0x1, 0x1);
        gbc.writeMem(0xee50, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7df2);
        EXPECT(gbc.pc(), 0xee52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee50), 0xcb);
        EXPECT(gbc.readMem(0xee51), 0x33);
        // CB 33 0219
        gbc.setState(0xdd71, 0x85f4, 0x10d0, 0xfeaf, 0xe96c, 0x722b, 0x0, 0x0);
        gbc.writeMem(0xdd71, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x85f4);
        EXPECT(gbc.pc(), 0xdd73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd71), 0xcb);
        EXPECT(gbc.readMem(0xdd72), 0x33);
        // CB 33 021A
        gbc.setState(0x7f85, 0xd5ac, 0xc330, 0x16fc, 0xea35, 0xb944, 0x0, 0x0);
        gbc.writeMem(0x7f85, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd5ac);
        EXPECT(gbc.pc(), 0x7f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 021B
        gbc.setState(0x1530, 0xd2f4, 0x4560, 0xed34, 0x2c9b, 0xaa90, 0x1, 0x0);
        gbc.writeMem(0x1530, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd2f4);
        EXPECT(gbc.pc(), 0x1532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 021C
        gbc.setState(0xe3d6, 0xe6b5, 0x3c10, 0xb35c, 0xfe1, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0xe3d6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe6b5);
        EXPECT(gbc.pc(), 0xe3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d6), 0xcb);
        EXPECT(gbc.readMem(0xe3d7), 0x33);
        // CB 33 021D
        gbc.setState(0x139e, 0x8647, 0x47e0, 0x780f, 0x5966, 0x50dd, 0x1, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8647);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 021E
        gbc.setState(0x27d, 0x23bc, 0xf390, 0xbc62, 0x37f0, 0xc108, 0x0, 0x0);
        gbc.writeMem(0x27d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x23bc);
        EXPECT(gbc.pc(), 0x27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 021F
        gbc.setState(0xb82e, 0xcedc, 0x9fb0, 0xc773, 0xc10b, 0x37a0, 0x1, 0x0);
        gbc.writeMem(0xb82e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcedc);
        EXPECT(gbc.pc(), 0xb830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82e), 0xcb);
        EXPECT(gbc.readMem(0xb82f), 0x33);
        // CB 33 0220
        gbc.setState(0x770e, 0xf788, 0xc320, 0x7606, 0x43ce, 0x6da5, 0x1, 0x1);
        gbc.writeMem(0x770e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf788);
        EXPECT(gbc.pc(), 0x7710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0221
        gbc.setState(0xb07f, 0x7fbd, 0x7d70, 0x7295, 0x8004, 0xe367, 0x0, 0x0);
        gbc.writeMem(0xb07f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7fbd);
        EXPECT(gbc.pc(), 0xb081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07f), 0xcb);
        EXPECT(gbc.readMem(0xb080), 0x33);
        // CB 33 0223
        gbc.setState(0x27fd, 0xb3d9, 0x5dd0, 0x7abc, 0xc517, 0xd09f, 0x0, 0x1);
        gbc.writeMem(0x27fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb3d9);
        EXPECT(gbc.pc(), 0x27ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0224
        gbc.setState(0x2439, 0x3555, 0xef00, 0xdb78, 0x7820, 0x2dd2, 0x0, 0x1);
        gbc.writeMem(0x2439, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3555);
        EXPECT(gbc.pc(), 0x243b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0225
        gbc.setState(0x9095, 0x53a1, 0x7090, 0x9ee8, 0xb8b, 0x8ad2, 0x1, 0x1);
        gbc.writeMem(0x9095, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x53a1);
        EXPECT(gbc.pc(), 0x9097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9095), 0xcb);
        EXPECT(gbc.readMem(0x9096), 0x33);
        // CB 33 0226
        gbc.setState(0x22fe, 0x327a, 0x3500, 0xc7eb, 0x9b0f, 0x67cb, 0x0, 0x0);
        gbc.writeMem(0x22fe, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x327a);
        EXPECT(gbc.pc(), 0x2300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0227
        gbc.setState(0xbea, 0xa5bb, 0x2330, 0xaa37, 0xa188, 0x8a96, 0x1, 0x1);
        gbc.writeMem(0xbea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa5bb);
        EXPECT(gbc.pc(), 0xbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0229
        gbc.setState(0xb08d, 0x9ae1, 0x3650, 0x4947, 0x97c5, 0xcfa3, 0x1, 0x0);
        gbc.writeMem(0xb08d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9ae1);
        EXPECT(gbc.pc(), 0xb08f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08d), 0xcb);
        EXPECT(gbc.readMem(0xb08e), 0x33);
        // CB 33 022A
        gbc.setState(0x6348, 0xe6ac, 0x5390, 0x6a33, 0x310d, 0x41fc, 0x1, 0x1);
        gbc.writeMem(0x6348, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe6ac);
        EXPECT(gbc.pc(), 0x634a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 022B
        gbc.setState(0x1a40, 0xa1e0, 0xd010, 0x8b6f, 0x2622, 0xece6, 0x0, 0x0);
        gbc.writeMem(0x1a40, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa1e0);
        EXPECT(gbc.pc(), 0x1a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 022C
        gbc.setState(0x9493, 0x6d2e, 0xbbc0, 0x51a5, 0x295, 0x873, 0x0, 0x0);
        gbc.writeMem(0x9493, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6d2e);
        EXPECT(gbc.pc(), 0x9495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9493), 0xcb);
        EXPECT(gbc.readMem(0x9494), 0x33);
        // CB 33 022D
        gbc.setState(0x3846, 0xee8, 0xc30, 0x983e, 0x20de, 0x153b, 0x0, 0x0);
        gbc.writeMem(0x3846, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xee8);
        EXPECT(gbc.pc(), 0x3848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 022E
        gbc.setState(0x2de7, 0x5662, 0x3240, 0xcb54, 0x1ed9, 0x731d, 0x1, 0x0);
        gbc.writeMem(0x2de7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0x2de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 022F
        gbc.setState(0x87a0, 0xcacd, 0x56b0, 0x4167, 0xea71, 0x8682, 0x0, 0x0);
        gbc.writeMem(0x87a0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcacd);
        EXPECT(gbc.pc(), 0x87a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a0), 0xcb);
        EXPECT(gbc.readMem(0x87a1), 0x33);
        // CB 33 0230
        gbc.setState(0xc12, 0x81f, 0xa920, 0xe269, 0xacfc, 0x498a, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x81f);
        EXPECT(gbc.pc(), 0xc14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0231
        gbc.setState(0xd7e4, 0x572e, 0x6a00, 0x1aa, 0xbf7, 0x7d86, 0x0, 0x0);
        gbc.writeMem(0xd7e4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x572e);
        EXPECT(gbc.pc(), 0xd7e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e4), 0xcb);
        EXPECT(gbc.readMem(0xd7e5), 0x33);
        // CB 33 0232
        gbc.setState(0x4508, 0xdb8b, 0x63b0, 0x3d5d, 0x4515, 0x3ad5, 0x0, 0x1);
        gbc.writeMem(0x4508, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdb8b);
        EXPECT(gbc.pc(), 0x450a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0233
        gbc.setState(0x38a6, 0x2c7a, 0x6760, 0x6141, 0xa2c4, 0x50c3, 0x1, 0x0);
        gbc.writeMem(0x38a6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2c7a);
        EXPECT(gbc.pc(), 0x38a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0234
        gbc.setState(0xceab, 0x1450, 0x3d10, 0x66c7, 0xcc31, 0x49bd, 0x0, 0x1);
        gbc.writeMem(0xceab, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1450);
        EXPECT(gbc.pc(), 0xcead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceab), 0xcb);
        EXPECT(gbc.readMem(0xceac), 0x33);
        // CB 33 0235
        gbc.setState(0xed06, 0xdf37, 0x64b0, 0x5684, 0x3057, 0x420, 0x1, 0x1);
        gbc.writeMem(0xed06, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdf37);
        EXPECT(gbc.pc(), 0xed08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed06), 0xcb);
        EXPECT(gbc.readMem(0xed07), 0x33);
        // CB 33 0236
        gbc.setState(0xba6e, 0xf8eb, 0x7af0, 0x93fd, 0x8c9d, 0x27ef, 0x1, 0x1);
        gbc.writeMem(0xba6e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf8eb);
        EXPECT(gbc.pc(), 0xba70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba6e), 0xcb);
        EXPECT(gbc.readMem(0xba6f), 0x33);
        // CB 33 0237
        gbc.setState(0x9304, 0x9212, 0x520, 0xfd60, 0x6ba8, 0x8a4a, 0x1, 0x1);
        gbc.writeMem(0x9304, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x9306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9304), 0xcb);
        EXPECT(gbc.readMem(0x9305), 0x33);
        // CB 33 0238
        gbc.setState(0xfe4, 0xedb1, 0x3f60, 0xe38d, 0xff7e, 0xff46, 0x1, 0x0);
        gbc.writeMem(0xfe4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xedb1);
        EXPECT(gbc.pc(), 0xfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0239
        gbc.setState(0xeecd, 0x3d2, 0x200, 0x20a1, 0xbcd1, 0x4db3, 0x1, 0x0);
        gbc.writeMem(0xeecd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3d2);
        EXPECT(gbc.pc(), 0xeecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeecd), 0xcb);
        EXPECT(gbc.readMem(0xeece), 0x33);
        // CB 33 023A
        gbc.setState(0x4582, 0x1d54, 0xf7d0, 0x6a8a, 0xcf8e, 0x34d5, 0x1, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1d54);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 023B
        gbc.setState(0x4924, 0x789d, 0x1b20, 0xafbb, 0xb95e, 0x99e6, 0x0, 0x0);
        gbc.writeMem(0x4924, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x789d);
        EXPECT(gbc.pc(), 0x4926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 023C
        gbc.setState(0x6e24, 0xe989, 0xc6f0, 0xe333, 0x2c84, 0x80a4, 0x1, 0x0);
        gbc.writeMem(0x6e24, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe989);
        EXPECT(gbc.pc(), 0x6e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 023D
        gbc.setState(0x7ec9, 0x5b36, 0x4b60, 0x5bee, 0x7ea6, 0x14a8, 0x0, 0x1);
        gbc.writeMem(0x7ec9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5b36);
        EXPECT(gbc.pc(), 0x7ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 023E
        gbc.setState(0xce33, 0xc1d0, 0xb440, 0xe92, 0xda71, 0x8ba7, 0x0, 0x0);
        gbc.writeMem(0xce33, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc1d0);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce33), 0xcb);
        EXPECT(gbc.readMem(0xce34), 0x33);
        // CB 33 023F
        gbc.setState(0x9690, 0xb531, 0x9be0, 0x7f13, 0x15d9, 0x791, 0x1, 0x0);
        gbc.writeMem(0x9690, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb531);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9690), 0xcb);
        EXPECT(gbc.readMem(0x9691), 0x33);
        // CB 33 0240
        gbc.setState(0xbfe0, 0x60d4, 0x77f0, 0x5ab9, 0x288e, 0x17d4, 0x1, 0x0);
        gbc.writeMem(0xbfe0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x60d4);
        EXPECT(gbc.pc(), 0xbfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe0), 0xcb);
        EXPECT(gbc.readMem(0xbfe1), 0x33);
        // CB 33 0241
        gbc.setState(0x61d0, 0xc8ac, 0xa2b0, 0x9864, 0xce3c, 0x704e, 0x0, 0x0);
        gbc.writeMem(0x61d0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc8ac);
        EXPECT(gbc.pc(), 0x61d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0242
        gbc.setState(0xe788, 0x804d, 0xed30, 0xb127, 0x4cb6, 0x30a7, 0x1, 0x0);
        gbc.writeMem(0xe788, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x804d);
        EXPECT(gbc.pc(), 0xe78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe788), 0xcb);
        EXPECT(gbc.readMem(0xe789), 0x33);
        // CB 33 0243
        gbc.setState(0x7b59, 0x1557, 0xca90, 0xe32c, 0x964e, 0xb228, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1557);
        EXPECT(gbc.pc(), 0x7b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0244
        gbc.setState(0xed31, 0xaeea, 0x7ae0, 0x1234, 0x2b67, 0x8c8c, 0x1, 0x1);
        gbc.writeMem(0xed31, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaeea);
        EXPECT(gbc.pc(), 0xed33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed31), 0xcb);
        EXPECT(gbc.readMem(0xed32), 0x33);
        // CB 33 0245
        gbc.setState(0xe026, 0x2355, 0xd90, 0xf7ab, 0x8bfb, 0xe1eb, 0x1, 0x0);
        gbc.writeMem(0xe026, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2355);
        EXPECT(gbc.pc(), 0xe028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe026), 0xcb);
        EXPECT(gbc.readMem(0xe027), 0x33);
        // CB 33 0246
        gbc.setState(0xe779, 0xddb6, 0xe600, 0x4ada, 0x8be0, 0x8a36, 0x1, 0x0);
        gbc.writeMem(0xe779, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xddb6);
        EXPECT(gbc.pc(), 0xe77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe779), 0xcb);
        EXPECT(gbc.readMem(0xe77a), 0x33);
        // CB 33 0247
        gbc.setState(0x365c, 0xa375, 0x5d10, 0x4cf1, 0x7b5a, 0xdff6, 0x1, 0x1);
        gbc.writeMem(0x365c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa375);
        EXPECT(gbc.pc(), 0x365e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0248
        gbc.setState(0x9b51, 0x5a6d, 0x9700, 0xc444, 0x19b4, 0x1f6c, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5a6d);
        EXPECT(gbc.pc(), 0x9b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b51), 0xcb);
        EXPECT(gbc.readMem(0x9b52), 0x33);
        // CB 33 0249
        gbc.setState(0x7856, 0x7ce2, 0xe0e0, 0xc9d0, 0x17d3, 0x600d, 0x1, 0x0);
        gbc.writeMem(0x7856, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7ce2);
        EXPECT(gbc.pc(), 0x7858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 024A
        gbc.setState(0xc96, 0xe38a, 0x4320, 0x995b, 0x2acd, 0x92f3, 0x0, 0x0);
        gbc.writeMem(0xc96, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe38a);
        EXPECT(gbc.pc(), 0xc98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 024B
        gbc.setState(0x330c, 0x9e96, 0x3f60, 0x853d, 0x572e, 0xcfc2, 0x0, 0x0);
        gbc.writeMem(0x330c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9e96);
        EXPECT(gbc.pc(), 0x330e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 024C
        gbc.setState(0x6c67, 0xedae, 0x0, 0xf80f, 0x41f, 0xc5f1, 0x1, 0x0);
        gbc.writeMem(0x6c67, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xedae);
        EXPECT(gbc.pc(), 0x6c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 024D
        gbc.setState(0xb806, 0x6f37, 0x2e0, 0x9158, 0x40dc, 0xc4f2, 0x1, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6f37);
        EXPECT(gbc.pc(), 0xb808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb806), 0xcb);
        EXPECT(gbc.readMem(0xb807), 0x33);
        // CB 33 024F
        gbc.setState(0x8e8d, 0x80e4, 0x1c00, 0x402b, 0xd62a, 0x30d0, 0x0, 0x1);
        gbc.writeMem(0x8e8d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0x8e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8d), 0xcb);
        EXPECT(gbc.readMem(0x8e8e), 0x33);
        // CB 33 0250
        gbc.setState(0x3ae, 0x424e, 0x3850, 0xf817, 0xc1d0, 0x8f76, 0x0, 0x1);
        gbc.writeMem(0x3ae, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x424e);
        EXPECT(gbc.pc(), 0x3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0251
        gbc.setState(0xe7ff, 0xe33b, 0x4f10, 0x61f8, 0xd8d, 0x6e59, 0x0, 0x0);
        gbc.writeMem(0xe7ff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0xe801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ff), 0xcb);
        EXPECT(gbc.readMem(0xe800), 0x33);
        // CB 33 0252
        gbc.setState(0xba2e, 0xd743, 0xc240, 0xde0e, 0x5723, 0x3e68, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd743);
        EXPECT(gbc.pc(), 0xba30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2e), 0xcb);
        EXPECT(gbc.readMem(0xba2f), 0x33);
        // CB 33 0253
        gbc.setState(0x2634, 0x1ce1, 0x4ab0, 0x6a69, 0xf318, 0x14af, 0x1, 0x0);
        gbc.writeMem(0x2634, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1ce1);
        EXPECT(gbc.pc(), 0x2636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0254
        gbc.setState(0xa944, 0x1ade, 0x1d40, 0x21f9, 0xde2c, 0x48c8, 0x0, 0x0);
        gbc.writeMem(0xa944, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0xa946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa944), 0xcb);
        EXPECT(gbc.readMem(0xa945), 0x33);
        // CB 33 0255
        gbc.setState(0x2878, 0x5e5, 0x2a00, 0x4ccb, 0x707d, 0x2386, 0x1, 0x1);
        gbc.writeMem(0x2878, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5e5);
        EXPECT(gbc.pc(), 0x287a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0256
        gbc.setState(0x547f, 0x4e5e, 0xda80, 0xd6dd, 0x1f41, 0xe9cc, 0x1, 0x1);
        gbc.writeMem(0x547f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4e5e);
        EXPECT(gbc.pc(), 0x5481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0257
        gbc.setState(0x5e1e, 0x6b5b, 0xe4c0, 0x2427, 0xd109, 0xe474, 0x1, 0x1);
        gbc.writeMem(0x5e1e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6b5b);
        EXPECT(gbc.pc(), 0x5e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0258
        gbc.setState(0x6be9, 0xe645, 0x21d0, 0xe67f, 0x2d52, 0xec36, 0x1, 0x0);
        gbc.writeMem(0x6be9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe645);
        EXPECT(gbc.pc(), 0x6beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0259
        gbc.setState(0x9e8f, 0x1c51, 0x8860, 0xed9b, 0x189c, 0xdad4, 0x1, 0x0);
        gbc.writeMem(0x9e8f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1c51);
        EXPECT(gbc.pc(), 0x9e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8f), 0xcb);
        EXPECT(gbc.readMem(0x9e90), 0x33);
        // CB 33 025A
        gbc.setState(0xde71, 0xab6d, 0x95e0, 0x1576, 0xdaf2, 0xe90c, 0x1, 0x0);
        gbc.writeMem(0xde71, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xab6d);
        EXPECT(gbc.pc(), 0xde73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde71), 0xcb);
        EXPECT(gbc.readMem(0xde72), 0x33);
        // CB 33 025B
        gbc.setState(0xac17, 0x9a4, 0x3810, 0xc713, 0x4a46, 0x2e56, 0x1, 0x1);
        gbc.writeMem(0xac17, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9a4);
        EXPECT(gbc.pc(), 0xac19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac17), 0xcb);
        EXPECT(gbc.readMem(0xac18), 0x33);
        // CB 33 025C
        gbc.setState(0xa536, 0x6f0b, 0x4630, 0x3d23, 0x4d1e, 0x2ac0, 0x0, 0x1);
        gbc.writeMem(0xa536, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6f0b);
        EXPECT(gbc.pc(), 0xa538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa536), 0xcb);
        EXPECT(gbc.readMem(0xa537), 0x33);
        // CB 33 025D
        gbc.setState(0xc7f8, 0x8f26, 0x52a0, 0xeeba, 0x91e7, 0xb53d, 0x0, 0x0);
        gbc.writeMem(0xc7f8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8f26);
        EXPECT(gbc.pc(), 0xc7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f8), 0xcb);
        EXPECT(gbc.readMem(0xc7f9), 0x33);
        // CB 33 025E
        gbc.setState(0x2a9d, 0x1c2e, 0x2fb0, 0x34e, 0xc7e5, 0xd118, 0x1, 0x1);
        gbc.writeMem(0x2a9d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1c2e);
        EXPECT(gbc.pc(), 0x2a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 025F
        gbc.setState(0x4c03, 0xf535, 0xc610, 0x8a96, 0x9c34, 0xe0e7, 0x1, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf535);
        EXPECT(gbc.pc(), 0x4c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0260
        gbc.setState(0x91df, 0x599b, 0x3c10, 0x2c3c, 0x9d17, 0xedfe, 0x0, 0x1);
        gbc.writeMem(0x91df, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x599b);
        EXPECT(gbc.pc(), 0x91e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91df), 0xcb);
        EXPECT(gbc.readMem(0x91e0), 0x33);
        // CB 33 0261
        gbc.setState(0xee4d, 0xed5b, 0x1240, 0x3ddd, 0x9733, 0x1d68, 0x1, 0x0);
        gbc.writeMem(0xee4d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xed5b);
        EXPECT(gbc.pc(), 0xee4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4d), 0xcb);
        EXPECT(gbc.readMem(0xee4e), 0x33);
        // CB 33 0262
        gbc.setState(0x4b8a, 0x185c, 0x8a10, 0x9b36, 0x8d5b, 0xb98d, 0x0, 0x1);
        gbc.writeMem(0x4b8a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x185c);
        EXPECT(gbc.pc(), 0x4b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0263
        gbc.setState(0xafa7, 0x2cb0, 0x3860, 0xb2d5, 0x2e8e, 0x3caa, 0x1, 0x0);
        gbc.writeMem(0xafa7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2cb0);
        EXPECT(gbc.pc(), 0xafa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa7), 0xcb);
        EXPECT(gbc.readMem(0xafa8), 0x33);
        // CB 33 0264
        gbc.setState(0x516, 0x1ae0, 0xfa0, 0x352d, 0x28fa, 0x5758, 0x0, 0x0);
        gbc.writeMem(0x516, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1ae0);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0266
        gbc.setState(0x84a2, 0x61e5, 0x5d50, 0x17de, 0xbb5, 0xa5ff, 0x0, 0x1);
        gbc.writeMem(0x84a2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x61e5);
        EXPECT(gbc.pc(), 0x84a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a2), 0xcb);
        EXPECT(gbc.readMem(0x84a3), 0x33);
        // CB 33 0267
        gbc.setState(0x724d, 0xa00f, 0xed00, 0x627, 0x23a1, 0xc3d, 0x0, 0x0);
        gbc.writeMem(0x724d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0x724f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0268
        gbc.setState(0x978f, 0x8e7e, 0xdd90, 0x229a, 0x128c, 0x87c9, 0x1, 0x1);
        gbc.writeMem(0x978f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8e7e);
        EXPECT(gbc.pc(), 0x9791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978f), 0xcb);
        EXPECT(gbc.readMem(0x9790), 0x33);
        // CB 33 0269
        gbc.setState(0x218b, 0x437f, 0x670, 0xd1c9, 0xa4f0, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0x218b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x437f);
        EXPECT(gbc.pc(), 0x218d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 026A
        gbc.setState(0x213f, 0x87bf, 0x3500, 0xac59, 0x5876, 0x3a66, 0x1, 0x1);
        gbc.writeMem(0x213f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x87bf);
        EXPECT(gbc.pc(), 0x2141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 026B
        gbc.setState(0x51df, 0x8c2e, 0x5fe0, 0xbe3d, 0x2e18, 0xe2f, 0x1, 0x1);
        gbc.writeMem(0x51df, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8c2e);
        EXPECT(gbc.pc(), 0x51e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 026C
        gbc.setState(0xbeaf, 0x5a68, 0xf8b0, 0x9135, 0x6b1e, 0x2dd0, 0x1, 0x0);
        gbc.writeMem(0xbeaf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0xbeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeaf), 0xcb);
        EXPECT(gbc.readMem(0xbeb0), 0x33);
        // CB 33 026D
        gbc.setState(0xe30f, 0xc0b6, 0x5710, 0xe0e8, 0xc27b, 0x2aeb, 0x1, 0x1);
        gbc.writeMem(0xe30f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc0b6);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30f), 0xcb);
        EXPECT(gbc.readMem(0xe310), 0x33);
        // CB 33 026E
        gbc.setState(0x63f9, 0xf941, 0xc1a0, 0x83bb, 0x61c4, 0x272a, 0x1, 0x0);
        gbc.writeMem(0x63f9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf941);
        EXPECT(gbc.pc(), 0x63fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 026F
        gbc.setState(0x2570, 0x8ee8, 0xc7d0, 0xb2, 0x1f17, 0xd3a4, 0x1, 0x0);
        gbc.writeMem(0x2570, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0270
        gbc.setState(0x2346, 0x8204, 0xeb70, 0x598, 0xfeeb, 0x8599, 0x0, 0x1);
        gbc.writeMem(0x2346, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0x2348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0271
        gbc.setState(0xd2fd, 0x3268, 0x4bf0, 0x9ff, 0xce57, 0x7f22, 0x1, 0x1);
        gbc.writeMem(0xd2fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3268);
        EXPECT(gbc.pc(), 0xd2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fd), 0xcb);
        EXPECT(gbc.readMem(0xd2fe), 0x33);
        // CB 33 0272
        gbc.setState(0x15f8, 0xdb77, 0x4710, 0x2b14, 0x6e96, 0x48bc, 0x1, 0x1);
        gbc.writeMem(0x15f8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdb77);
        EXPECT(gbc.pc(), 0x15fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0273
        gbc.setState(0x1bcd, 0x2708, 0x7570, 0x2df8, 0x2d4f, 0xd1cb, 0x1, 0x1);
        gbc.writeMem(0x1bcd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2708);
        EXPECT(gbc.pc(), 0x1bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0274
        gbc.setState(0xe39e, 0xe328, 0xaf60, 0xb438, 0x27b8, 0xe91d, 0x1, 0x0);
        gbc.writeMem(0xe39e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe328);
        EXPECT(gbc.pc(), 0xe3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39e), 0xcb);
        EXPECT(gbc.readMem(0xe39f), 0x33);
        // CB 33 0275
        gbc.setState(0xa95b, 0x6b7a, 0x60, 0xfc27, 0x89e3, 0xce7c, 0x1, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6b7a);
        EXPECT(gbc.pc(), 0xa95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95b), 0xcb);
        EXPECT(gbc.readMem(0xa95c), 0x33);
        // CB 33 0276
        gbc.setState(0x6ef5, 0x8b27, 0xa410, 0x80ac, 0x12d7, 0xbe94, 0x0, 0x0);
        gbc.writeMem(0x6ef5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8b27);
        EXPECT(gbc.pc(), 0x6ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0278
        gbc.setState(0x11ab, 0x1043, 0x2790, 0xc8bc, 0xe1ca, 0x9093, 0x1, 0x0);
        gbc.writeMem(0x11ab, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1043);
        EXPECT(gbc.pc(), 0x11ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0279
        gbc.setState(0x82db, 0x7050, 0xe120, 0x8113, 0xa5ac, 0x2cac, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7050);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82db), 0xcb);
        EXPECT(gbc.readMem(0x82dc), 0x33);
        // CB 33 027A
        gbc.setState(0x8d8, 0xcd0f, 0x1810, 0xd31e, 0x47c0, 0x275e, 0x1, 0x0);
        gbc.writeMem(0x8d8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcd0f);
        EXPECT(gbc.pc(), 0x8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 027B
        gbc.setState(0x2f2a, 0x8631, 0x8a60, 0x7148, 0xb34d, 0x18cf, 0x0, 0x1);
        gbc.writeMem(0x2f2a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8631);
        EXPECT(gbc.pc(), 0x2f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 027C
        gbc.setState(0x39ea, 0x8823, 0x47e0, 0x52cd, 0xc8e0, 0x9e95, 0x1, 0x0);
        gbc.writeMem(0x39ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8823);
        EXPECT(gbc.pc(), 0x39ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 027D
        gbc.setState(0x8435, 0xed84, 0x6020, 0x4be4, 0xd25b, 0x4b98, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xed84);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8435), 0xcb);
        EXPECT(gbc.readMem(0x8436), 0x33);
        // CB 33 027E
        gbc.setState(0x41e8, 0x20c3, 0x4d60, 0xe59, 0x9731, 0x6214, 0x0, 0x0);
        gbc.writeMem(0x41e8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x20c3);
        EXPECT(gbc.pc(), 0x41ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 027F
        gbc.setState(0x6bd8, 0x33a4, 0x7bf0, 0xd44f, 0xba60, 0x50aa, 0x0, 0x0);
        gbc.writeMem(0x6bd8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x33a4);
        EXPECT(gbc.pc(), 0x6bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0280
        gbc.setState(0x7356, 0xae12, 0x72f0, 0xc992, 0x83ef, 0xe2e9, 0x0, 0x1);
        gbc.writeMem(0x7356, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xae12);
        EXPECT(gbc.pc(), 0x7358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0281
        gbc.setState(0x66b3, 0xd5a, 0xf8e0, 0xe397, 0xccb4, 0x9a17, 0x1, 0x0);
        gbc.writeMem(0x66b3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd5a);
        EXPECT(gbc.pc(), 0x66b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0282
        gbc.setState(0xa9ca, 0x56e2, 0xc5b0, 0xb93, 0xd541, 0x573d, 0x0, 0x0);
        gbc.writeMem(0xa9ca, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x56e2);
        EXPECT(gbc.pc(), 0xa9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ca), 0xcb);
        EXPECT(gbc.readMem(0xa9cb), 0x33);
        // CB 33 0284
        gbc.setState(0xccd3, 0xcc23, 0xa360, 0x9732, 0x8f74, 0x1287, 0x1, 0x0);
        gbc.writeMem(0xccd3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcc23);
        EXPECT(gbc.pc(), 0xccd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd3), 0xcb);
        EXPECT(gbc.readMem(0xccd4), 0x33);
        // CB 33 0285
        gbc.setState(0x4fb, 0x1b91, 0x6d20, 0x97c8, 0x5214, 0x4765, 0x0, 0x1);
        gbc.writeMem(0x4fb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1b91);
        EXPECT(gbc.pc(), 0x4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0286
        gbc.setState(0xa6e, 0xa03c, 0x5ee0, 0x73f8, 0x2104, 0x91e0, 0x0, 0x0);
        gbc.writeMem(0xa6e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa03c);
        EXPECT(gbc.pc(), 0xa70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0287
        gbc.setState(0xdb44, 0x8e50, 0x33f0, 0xf79c, 0x53a4, 0x1ee1, 0x0, 0x0);
        gbc.writeMem(0xdb44, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8e50);
        EXPECT(gbc.pc(), 0xdb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb44), 0xcb);
        EXPECT(gbc.readMem(0xdb45), 0x33);
        // CB 33 0288
        gbc.setState(0xe45d, 0x5376, 0x37c0, 0x8a56, 0x98a8, 0xd7c, 0x0, 0x0);
        gbc.writeMem(0xe45d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5376);
        EXPECT(gbc.pc(), 0xe45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45d), 0xcb);
        EXPECT(gbc.readMem(0xe45e), 0x33);
        // CB 33 0289
        gbc.setState(0xe8b, 0x46c7, 0xb3d0, 0x7630, 0x97c5, 0x15b3, 0x1, 0x1);
        gbc.writeMem(0xe8b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x46c7);
        EXPECT(gbc.pc(), 0xe8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 028A
        gbc.setState(0x5b33, 0x93fb, 0xda00, 0x8a9f, 0x31b3, 0x6714, 0x0, 0x0);
        gbc.writeMem(0x5b33, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x93fb);
        EXPECT(gbc.pc(), 0x5b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 028B
        gbc.setState(0x16a3, 0x1df6, 0x2570, 0xf1a2, 0x11d5, 0xb02d, 0x1, 0x0);
        gbc.writeMem(0x16a3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1df6);
        EXPECT(gbc.pc(), 0x16a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 028C
        gbc.setState(0xb052, 0x5283, 0x8590, 0x71b9, 0xc55b, 0x938f, 0x1, 0x1);
        gbc.writeMem(0xb052, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5283);
        EXPECT(gbc.pc(), 0xb054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb052), 0xcb);
        EXPECT(gbc.readMem(0xb053), 0x33);
        // CB 33 028D
        gbc.setState(0xc1c2, 0xe8e3, 0x40a0, 0x7f85, 0xd42d, 0xf232, 0x0, 0x0);
        gbc.writeMem(0xc1c2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe8e3);
        EXPECT(gbc.pc(), 0xc1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c2), 0xcb);
        EXPECT(gbc.readMem(0xc1c3), 0x33);
        // CB 33 028E
        gbc.setState(0x485d, 0xf558, 0x9590, 0xeba6, 0xbb6b, 0x8214, 0x1, 0x0);
        gbc.writeMem(0x485d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf558);
        EXPECT(gbc.pc(), 0x485f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 028F
        gbc.setState(0x9620, 0x30f2, 0xf200, 0x43d1, 0xfdc1, 0xad71, 0x1, 0x0);
        gbc.writeMem(0x9620, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x30f2);
        EXPECT(gbc.pc(), 0x9622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9620), 0xcb);
        EXPECT(gbc.readMem(0x9621), 0x33);
        // CB 33 0290
        gbc.setState(0x8d7, 0xc4db, 0x6d10, 0xbba1, 0xfdc5, 0xf0c6, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc4db);
        EXPECT(gbc.pc(), 0x8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0291
        gbc.setState(0xa883, 0xa0ee, 0xbb40, 0xccd5, 0xf9af, 0xe8eb, 0x0, 0x1);
        gbc.writeMem(0xa883, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa0ee);
        EXPECT(gbc.pc(), 0xa885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa883), 0xcb);
        EXPECT(gbc.readMem(0xa884), 0x33);
        // CB 33 0292
        gbc.setState(0x6f0, 0x5aeb, 0x55e0, 0xd93a, 0x9b41, 0x4b19, 0x0, 0x1);
        gbc.writeMem(0x6f0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5aeb);
        EXPECT(gbc.pc(), 0x6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0293
        gbc.setState(0xe8fd, 0xdea0, 0xe340, 0x8095, 0xb52d, 0xd5c8, 0x0, 0x0);
        gbc.writeMem(0xe8fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdea0);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fd), 0xcb);
        EXPECT(gbc.readMem(0xe8fe), 0x33);
        // CB 33 0294
        gbc.setState(0xc11b, 0x1a20, 0xac10, 0xd6b8, 0x8f70, 0x30e6, 0x1, 0x1);
        gbc.writeMem(0xc11b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a20);
        EXPECT(gbc.pc(), 0xc11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11b), 0xcb);
        EXPECT(gbc.readMem(0xc11c), 0x33);
        // CB 33 0295
        gbc.setState(0x6eed, 0x925b, 0x5410, 0x52e3, 0x2b30, 0x1d6b, 0x0, 0x0);
        gbc.writeMem(0x6eed, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x925b);
        EXPECT(gbc.pc(), 0x6eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0296
        gbc.setState(0x77cb, 0xf571, 0x5b40, 0x4a9c, 0x7632, 0xaea3, 0x0, 0x0);
        gbc.writeMem(0x77cb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0x77cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0297
        gbc.setState(0xd171, 0x9365, 0x5eb0, 0x363b, 0xc07e, 0x8b4c, 0x0, 0x0);
        gbc.writeMem(0xd171, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9365);
        EXPECT(gbc.pc(), 0xd173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd171), 0xcb);
        EXPECT(gbc.readMem(0xd172), 0x33);
        // CB 33 0298
        gbc.setState(0x600e, 0xa374, 0xabe0, 0x77b1, 0x7fec, 0x132f, 0x1, 0x0);
        gbc.writeMem(0x600e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa374);
        EXPECT(gbc.pc(), 0x6010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0299
        gbc.setState(0x667b, 0xac6b, 0xd10, 0x68e5, 0x1494, 0x8940, 0x0, 0x0);
        gbc.writeMem(0x667b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xac6b);
        EXPECT(gbc.pc(), 0x667d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 029A
        gbc.setState(0xa8d3, 0x2c77, 0x8c10, 0x641b, 0x759d, 0x7bd, 0x1, 0x1);
        gbc.writeMem(0xa8d3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2c77);
        EXPECT(gbc.pc(), 0xa8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d3), 0xcb);
        EXPECT(gbc.readMem(0xa8d4), 0x33);
        // CB 33 029B
        gbc.setState(0xc720, 0xab92, 0x2710, 0x4b50, 0xb792, 0xdf6, 0x1, 0x0);
        gbc.writeMem(0xc720, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xab92);
        EXPECT(gbc.pc(), 0xc722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc720), 0xcb);
        EXPECT(gbc.readMem(0xc721), 0x33);
        // CB 33 029C
        gbc.setState(0xc7f1, 0x4f58, 0x970, 0x47d5, 0x117f, 0x8252, 0x0, 0x0);
        gbc.writeMem(0xc7f1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4f58);
        EXPECT(gbc.pc(), 0xc7f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f1), 0xcb);
        EXPECT(gbc.readMem(0xc7f2), 0x33);
        // CB 33 029D
        gbc.setState(0x32ac, 0xce1d, 0x51e0, 0x10ed, 0xdec8, 0xf501, 0x1, 0x0);
        gbc.writeMem(0x32ac, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xce1d);
        EXPECT(gbc.pc(), 0x32ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 029E
        gbc.setState(0xb4ea, 0x6301, 0xf0, 0x8b7c, 0x3e2a, 0x8698, 0x0, 0x0);
        gbc.writeMem(0xb4ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6301);
        EXPECT(gbc.pc(), 0xb4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ea), 0xcb);
        EXPECT(gbc.readMem(0xb4eb), 0x33);
        // CB 33 029F
        gbc.setState(0x9a2a, 0x2245, 0x6e30, 0x1315, 0x5e38, 0xc613, 0x1, 0x1);
        gbc.writeMem(0x9a2a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2245);
        EXPECT(gbc.pc(), 0x9a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2a), 0xcb);
        EXPECT(gbc.readMem(0x9a2b), 0x33);
        // CB 33 02A0
        gbc.setState(0x415c, 0xa51d, 0x1990, 0xdf18, 0xba41, 0x9622, 0x1, 0x1);
        gbc.writeMem(0x415c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa51d);
        EXPECT(gbc.pc(), 0x415e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02A1
        gbc.setState(0xdaa4, 0x2265, 0xa9a0, 0x14be, 0xd981, 0xde8e, 0x1, 0x1);
        gbc.writeMem(0xdaa4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2265);
        EXPECT(gbc.pc(), 0xdaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa4), 0xcb);
        EXPECT(gbc.readMem(0xdaa5), 0x33);
        // CB 33 02A2
        gbc.setState(0x1837, 0x2c4a, 0x37f0, 0xf11c, 0x2d59, 0x29c3, 0x1, 0x0);
        gbc.writeMem(0x1837, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2c4a);
        EXPECT(gbc.pc(), 0x1839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02A3
        gbc.setState(0xe07f, 0x892f, 0xf200, 0xf2fa, 0x1d62, 0xd91d, 0x1, 0x0);
        gbc.writeMem(0xe07f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x892f);
        EXPECT(gbc.pc(), 0xe081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07f), 0xcb);
        EXPECT(gbc.readMem(0xe080), 0x33);
        // CB 33 02A4
        gbc.setState(0xa913, 0xe187, 0x6dc0, 0xdaae, 0x8bfe, 0x7304, 0x0, 0x1);
        gbc.writeMem(0xa913, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe187);
        EXPECT(gbc.pc(), 0xa915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa913), 0xcb);
        EXPECT(gbc.readMem(0xa914), 0x33);
        // CB 33 02A5
        gbc.setState(0xb5d0, 0xf28e, 0x8410, 0x370c, 0xedbc, 0x26ca, 0x0, 0x0);
        gbc.writeMem(0xb5d0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf28e);
        EXPECT(gbc.pc(), 0xb5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d0), 0xcb);
        EXPECT(gbc.readMem(0xb5d1), 0x33);
        // CB 33 02A6
        gbc.setState(0xaad7, 0xed97, 0x7e90, 0xd24, 0x45f2, 0xc517, 0x1, 0x0);
        gbc.writeMem(0xaad7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xed97);
        EXPECT(gbc.pc(), 0xaad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad7), 0xcb);
        EXPECT(gbc.readMem(0xaad8), 0x33);
        // CB 33 02A7
        gbc.setState(0xdecb, 0xa59f, 0x9350, 0x1e73, 0x27ed, 0x1825, 0x1, 0x0);
        gbc.writeMem(0xdecb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa59f);
        EXPECT(gbc.pc(), 0xdecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdecb), 0xcb);
        EXPECT(gbc.readMem(0xdecc), 0x33);
        // CB 33 02A8
        gbc.setState(0xb792, 0xd2cc, 0x7550, 0x44d9, 0x34cf, 0xec7d, 0x1, 0x1);
        gbc.writeMem(0xb792, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd2cc);
        EXPECT(gbc.pc(), 0xb794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb792), 0xcb);
        EXPECT(gbc.readMem(0xb793), 0x33);
        // CB 33 02A9
        gbc.setState(0xc9cb, 0xe4c3, 0x3ab0, 0xf2d1, 0x1a4d, 0x2cfb, 0x0, 0x1);
        gbc.writeMem(0xc9cb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe4c3);
        EXPECT(gbc.pc(), 0xc9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cb), 0xcb);
        EXPECT(gbc.readMem(0xc9cc), 0x33);
        // CB 33 02AA
        gbc.setState(0x9f3f, 0xa607, 0x95c0, 0xd2d1, 0x53bb, 0xab05, 0x1, 0x1);
        gbc.writeMem(0x9f3f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa607);
        EXPECT(gbc.pc(), 0x9f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3f), 0xcb);
        EXPECT(gbc.readMem(0x9f40), 0x33);
        // CB 33 02AB
        gbc.setState(0x512a, 0x75f6, 0x44a0, 0xe672, 0x95b8, 0xcb75, 0x0, 0x0);
        gbc.writeMem(0x512a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x75f6);
        EXPECT(gbc.pc(), 0x512c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02AC
        gbc.setState(0x1125, 0xdfb7, 0x3150, 0x79f5, 0xd2f5, 0x348d, 0x1, 0x0);
        gbc.writeMem(0x1125, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdfb7);
        EXPECT(gbc.pc(), 0x1127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02AE
        gbc.setState(0x6773, 0x97bb, 0xfe90, 0xd0f7, 0x74c3, 0x74d2, 0x1, 0x0);
        gbc.writeMem(0x6773, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x97bb);
        EXPECT(gbc.pc(), 0x6775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02AF
        gbc.setState(0xa7b1, 0xf2dc, 0x5b90, 0xb04, 0x842f, 0xf2d6, 0x1, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf2dc);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0x33);
        // CB 33 02B0
        gbc.setState(0x27a1, 0x3a0f, 0xd5c0, 0xd441, 0x7cf6, 0xb06e, 0x0, 0x0);
        gbc.writeMem(0x27a1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3a0f);
        EXPECT(gbc.pc(), 0x27a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02B1
        gbc.setState(0xd4e3, 0x1083, 0xda0, 0xf0f3, 0x5aba, 0x4735, 0x0, 0x0);
        gbc.writeMem(0xd4e3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1083);
        EXPECT(gbc.pc(), 0xd4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e3), 0xcb);
        EXPECT(gbc.readMem(0xd4e4), 0x33);
        // CB 33 02B2
        gbc.setState(0xb3ce, 0xfc4b, 0x3190, 0x9797, 0x1505, 0x342e, 0x1, 0x0);
        gbc.writeMem(0xb3ce, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfc4b);
        EXPECT(gbc.pc(), 0xb3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ce), 0xcb);
        EXPECT(gbc.readMem(0xb3cf), 0x33);
        // CB 33 02B3
        gbc.setState(0x23f2, 0xfe21, 0x1e20, 0xa29a, 0xac00, 0x6a19, 0x1, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe21);
        EXPECT(gbc.pc(), 0x23f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02B4
        gbc.setState(0xe1d9, 0x8bb3, 0x7b60, 0x5796, 0xa57d, 0xc909, 0x0, 0x1);
        gbc.writeMem(0xe1d9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8bb3);
        EXPECT(gbc.pc(), 0xe1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d9), 0xcb);
        EXPECT(gbc.readMem(0xe1da), 0x33);
        // CB 33 02B5
        gbc.setState(0xc775, 0xa8f9, 0xf360, 0xf1b3, 0x4a75, 0x1bc3, 0x1, 0x1);
        gbc.writeMem(0xc775, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa8f9);
        EXPECT(gbc.pc(), 0xc777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc775), 0xcb);
        EXPECT(gbc.readMem(0xc776), 0x33);
        // CB 33 02B6
        gbc.setState(0x3b66, 0x48e4, 0x5750, 0x4f73, 0xa40b, 0x555c, 0x1, 0x0);
        gbc.writeMem(0x3b66, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x48e4);
        EXPECT(gbc.pc(), 0x3b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02B7
        gbc.setState(0x9e74, 0xcb60, 0xcee0, 0x109b, 0x67ff, 0xc2b4, 0x1, 0x1);
        gbc.writeMem(0x9e74, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcb60);
        EXPECT(gbc.pc(), 0x9e76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e74), 0xcb);
        EXPECT(gbc.readMem(0x9e75), 0x33);
        // CB 33 02B8
        gbc.setState(0x921, 0x5bc, 0x61a0, 0xa4f0, 0x7e7b, 0x19ce, 0x0, 0x0);
        gbc.writeMem(0x921, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5bc);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02B9
        gbc.setState(0xba9e, 0xb024, 0xfc90, 0x370f, 0x7ff7, 0x11b, 0x0, 0x0);
        gbc.writeMem(0xba9e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0xbaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba9e), 0xcb);
        EXPECT(gbc.readMem(0xba9f), 0x33);
        // CB 33 02BA
        gbc.setState(0x3717, 0x2fe4, 0xf1c0, 0xad2f, 0xfa3c, 0xd62a, 0x1, 0x1);
        gbc.writeMem(0x3717, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2fe4);
        EXPECT(gbc.pc(), 0x3719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02BB
        gbc.setState(0xeb0f, 0xd772, 0xef50, 0xe672, 0x53dd, 0x886, 0x0, 0x1);
        gbc.writeMem(0xeb0f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd772);
        EXPECT(gbc.pc(), 0xeb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0f), 0xcb);
        EXPECT(gbc.readMem(0xeb10), 0x33);
        // CB 33 02BC
        gbc.setState(0xc007, 0x907d, 0x82f0, 0xab1d, 0xb068, 0xe7ec, 0x0, 0x1);
        gbc.writeMem(0xc007, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x907d);
        EXPECT(gbc.pc(), 0xc009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc007), 0xcb);
        EXPECT(gbc.readMem(0xc008), 0x33);
        // CB 33 02BE
        gbc.setState(0x28a9, 0xb3c, 0x7550, 0x7f4a, 0xcd35, 0x8ca5, 0x0, 0x1);
        gbc.writeMem(0x28a9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb3c);
        EXPECT(gbc.pc(), 0x28ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02BF
        gbc.setState(0x83c6, 0x3bf1, 0x7260, 0xd709, 0x9953, 0x9817, 0x0, 0x1);
        gbc.writeMem(0x83c6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3bf1);
        EXPECT(gbc.pc(), 0x83c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c6), 0xcb);
        EXPECT(gbc.readMem(0x83c7), 0x33);
        // CB 33 02C0
        gbc.setState(0x965a, 0x37c7, 0x9760, 0x1196, 0xed56, 0x9f23, 0x0, 0x0);
        gbc.writeMem(0x965a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x37c7);
        EXPECT(gbc.pc(), 0x965c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965a), 0xcb);
        EXPECT(gbc.readMem(0x965b), 0x33);
        // CB 33 02C1
        gbc.setState(0xb91a, 0x41d3, 0x55e0, 0xf2bc, 0x30e9, 0xfc94, 0x0, 0x0);
        gbc.writeMem(0xb91a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x41d3);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91a), 0xcb);
        EXPECT(gbc.readMem(0xb91b), 0x33);
        // CB 33 02C2
        gbc.setState(0xec42, 0xd1f2, 0x7ce0, 0x69be, 0x2612, 0x715b, 0x0, 0x1);
        gbc.writeMem(0xec42, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd1f2);
        EXPECT(gbc.pc(), 0xec44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec42), 0xcb);
        EXPECT(gbc.readMem(0xec43), 0x33);
        // CB 33 02C3
        gbc.setState(0x6bf8, 0x15e1, 0x53e0, 0xa1b7, 0x1825, 0x2f29, 0x1, 0x1);
        gbc.writeMem(0x6bf8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x15e1);
        EXPECT(gbc.pc(), 0x6bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02C4
        gbc.setState(0x4f07, 0xddd3, 0x85d0, 0x2d5, 0xed60, 0xed99, 0x1, 0x0);
        gbc.writeMem(0x4f07, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xddd3);
        EXPECT(gbc.pc(), 0x4f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02C5
        gbc.setState(0xec5e, 0x408, 0x7c10, 0x74c3, 0xcf04, 0x86d6, 0x1, 0x1);
        gbc.writeMem(0xec5e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0xec60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5e), 0xcb);
        EXPECT(gbc.readMem(0xec5f), 0x33);
        // CB 33 02C6
        gbc.setState(0xa66d, 0x19a9, 0xeef0, 0x3b32, 0x488b, 0x757e, 0x1, 0x0);
        gbc.writeMem(0xa66d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x19a9);
        EXPECT(gbc.pc(), 0xa66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa66d), 0xcb);
        EXPECT(gbc.readMem(0xa66e), 0x33);
        // CB 33 02C7
        gbc.setState(0x7c85, 0xa31f, 0x4aa0, 0x9ca, 0x1d17, 0x6fdf, 0x0, 0x0);
        gbc.writeMem(0x7c85, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa31f);
        EXPECT(gbc.pc(), 0x7c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02C8
        gbc.setState(0x61c3, 0xf12c, 0xf40, 0x36f, 0xe19a, 0xeb09, 0x1, 0x1);
        gbc.writeMem(0x61c3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf12c);
        EXPECT(gbc.pc(), 0x61c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02C9
        gbc.setState(0x7612, 0x892, 0x0, 0xa6e, 0xf74a, 0xfb4f, 0x1, 0x1);
        gbc.writeMem(0x7612, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x892);
        EXPECT(gbc.pc(), 0x7614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02CA
        gbc.setState(0x7e8b, 0x6b90, 0x3de0, 0x1b45, 0xcc7b, 0x2386, 0x0, 0x1);
        gbc.writeMem(0x7e8b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6b90);
        EXPECT(gbc.pc(), 0x7e8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02CC
        gbc.setState(0x9fa6, 0x9c57, 0xeef0, 0x2741, 0x6885, 0x4e38, 0x0, 0x1);
        gbc.writeMem(0x9fa6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c57);
        EXPECT(gbc.pc(), 0x9fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa6), 0xcb);
        EXPECT(gbc.readMem(0x9fa7), 0x33);
        // CB 33 02CD
        gbc.setState(0x714e, 0x9c67, 0xe020, 0x41b3, 0x5912, 0x6843, 0x0, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9c67);
        EXPECT(gbc.pc(), 0x7150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02CE
        gbc.setState(0xcbb2, 0x3e53, 0x30d0, 0xab49, 0xa05f, 0x145f, 0x0, 0x0);
        gbc.writeMem(0xcbb2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e53);
        EXPECT(gbc.pc(), 0xcbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb2), 0xcb);
        EXPECT(gbc.readMem(0xcbb3), 0x33);
        // CB 33 02CF
        gbc.setState(0x2d9b, 0x617a, 0x8570, 0x179f, 0x768b, 0x36b2, 0x0, 0x1);
        gbc.writeMem(0x2d9b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x617a);
        EXPECT(gbc.pc(), 0x2d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D0
        gbc.setState(0xb45e, 0xfcb5, 0x92b0, 0xd00c, 0xbf76, 0xbc10, 0x0, 0x1);
        gbc.writeMem(0xb45e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfcb5);
        EXPECT(gbc.pc(), 0xb460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45e), 0xcb);
        EXPECT(gbc.readMem(0xb45f), 0x33);
        // CB 33 02D1
        gbc.setState(0x45dd, 0xc62c, 0x33d0, 0x3bbd, 0xe15c, 0xaf24, 0x1, 0x1);
        gbc.writeMem(0x45dd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x45df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D2
        gbc.setState(0x6fb5, 0x501c, 0x240, 0x6a61, 0x52d3, 0xfb4f, 0x1, 0x1);
        gbc.writeMem(0x6fb5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x501c);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D3
        gbc.setState(0x7422, 0x8b20, 0xe610, 0xfff1, 0xab1e, 0xf9cd, 0x1, 0x1);
        gbc.writeMem(0x7422, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8b20);
        EXPECT(gbc.pc(), 0x7424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D4
        gbc.setState(0xe0ff, 0x15d6, 0x7410, 0x7818, 0xd128, 0xf1ea, 0x0, 0x1);
        gbc.writeMem(0xe0ff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x15d6);
        EXPECT(gbc.pc(), 0xe101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ff), 0xcb);
        EXPECT(gbc.readMem(0xe100), 0x33);
        // CB 33 02D5
        gbc.setState(0x4285, 0xab02, 0x21c0, 0xd36c, 0xbdb5, 0x51cd, 0x1, 0x1);
        gbc.writeMem(0x4285, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xab02);
        EXPECT(gbc.pc(), 0x4287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D6
        gbc.setState(0xa016, 0x78ff, 0x2270, 0xd4ce, 0x8223, 0xa3f7, 0x1, 0x1);
        gbc.writeMem(0xa016, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x78ff);
        EXPECT(gbc.pc(), 0xa018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa016), 0xcb);
        EXPECT(gbc.readMem(0xa017), 0x33);
        // CB 33 02D7
        gbc.setState(0x6a97, 0x9ace, 0x8480, 0x27d9, 0x4412, 0x36f6, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9ace);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02D8
        gbc.setState(0xedd5, 0x49fa, 0xa370, 0x77ee, 0x7ec7, 0x747a, 0x0, 0x0);
        gbc.writeMem(0xedd5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x49fa);
        EXPECT(gbc.pc(), 0xedd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd5), 0xcb);
        EXPECT(gbc.readMem(0xedd6), 0x33);
        // CB 33 02D9
        gbc.setState(0x690b, 0xda0d, 0xcd00, 0x496d, 0xfe2a, 0xe84d, 0x1, 0x0);
        gbc.writeMem(0x690b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xda0d);
        EXPECT(gbc.pc(), 0x690d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02DA
        gbc.setState(0x9eeb, 0xfc4c, 0xe970, 0x1ae7, 0x1b5d, 0xd59e, 0x1, 0x1);
        gbc.writeMem(0x9eeb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfc4c);
        EXPECT(gbc.pc(), 0x9eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eeb), 0xcb);
        EXPECT(gbc.readMem(0x9eec), 0x33);
        // CB 33 02DB
        gbc.setState(0x3a7a, 0x62d7, 0xb0d0, 0xb89e, 0x7bc, 0xaadc, 0x0, 0x0);
        gbc.writeMem(0x3a7a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x62d7);
        EXPECT(gbc.pc(), 0x3a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02DC
        gbc.setState(0x88a4, 0xb0e4, 0x8c00, 0xcdad, 0xe1f2, 0x54f6, 0x1, 0x1);
        gbc.writeMem(0x88a4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb0e4);
        EXPECT(gbc.pc(), 0x88a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a4), 0xcb);
        EXPECT(gbc.readMem(0x88a5), 0x33);
        // CB 33 02DD
        gbc.setState(0xee6d, 0x6c5b, 0xff80, 0xa300, 0xe6e7, 0xe85, 0x1, 0x1);
        gbc.writeMem(0xee6d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6c5b);
        EXPECT(gbc.pc(), 0xee6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6d), 0xcb);
        EXPECT(gbc.readMem(0xee6e), 0x33);
        // CB 33 02DE
        gbc.setState(0xe822, 0x255, 0xc9e0, 0x2590, 0xaf42, 0xbc03, 0x0, 0x0);
        gbc.writeMem(0xe822, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x255);
        EXPECT(gbc.pc(), 0xe824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe822), 0xcb);
        EXPECT(gbc.readMem(0xe823), 0x33);
        // CB 33 02DF
        gbc.setState(0x83c8, 0x7035, 0x1e80, 0x9e67, 0xb2d3, 0x2c50, 0x0, 0x0);
        gbc.writeMem(0x83c8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7035);
        EXPECT(gbc.pc(), 0x83ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c8), 0xcb);
        EXPECT(gbc.readMem(0x83c9), 0x33);
        // CB 33 02E0
        gbc.setState(0x13a5, 0x3561, 0x32f0, 0x2944, 0x2bf3, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0x13a5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3561);
        EXPECT(gbc.pc(), 0x13a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02E1
        gbc.setState(0x9ee0, 0xadac, 0x8ba0, 0xd4a0, 0x7638, 0xe985, 0x0, 0x1);
        gbc.writeMem(0x9ee0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0x9ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee0), 0xcb);
        EXPECT(gbc.readMem(0x9ee1), 0x33);
        // CB 33 02E2
        gbc.setState(0x286e, 0x5d85, 0xb400, 0xcece, 0x9add, 0xbcc8, 0x1, 0x0);
        gbc.writeMem(0x286e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5d85);
        EXPECT(gbc.pc(), 0x2870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02E3
        gbc.setState(0x9e29, 0xf8f3, 0x8920, 0x8825, 0x3feb, 0xcdf5, 0x1, 0x1);
        gbc.writeMem(0x9e29, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf8f3);
        EXPECT(gbc.pc(), 0x9e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e29), 0xcb);
        EXPECT(gbc.readMem(0x9e2a), 0x33);
        // CB 33 02E4
        gbc.setState(0x6c05, 0x3e3e, 0xd440, 0xddb6, 0x5c0b, 0xa882, 0x1, 0x1);
        gbc.writeMem(0x6c05, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3e3e);
        EXPECT(gbc.pc(), 0x6c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02E6
        gbc.setState(0xc2ee, 0x8994, 0xeb00, 0x765f, 0xd8a8, 0xbc55, 0x0, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8994);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0x33);
        // CB 33 02E7
        gbc.setState(0x4ea, 0x91a2, 0x4980, 0x171e, 0xa320, 0x4cc9, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x91a2);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02E8
        gbc.setState(0x2e6f, 0x19d1, 0xcd10, 0x4e6e, 0x82ee, 0xe3f2, 0x1, 0x0);
        gbc.writeMem(0x2e6f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x19d1);
        EXPECT(gbc.pc(), 0x2e71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02E9
        gbc.setState(0x57f2, 0xe5f9, 0x11c0, 0x6e6d, 0x4358, 0x7435, 0x1, 0x1);
        gbc.writeMem(0x57f2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe5f9);
        EXPECT(gbc.pc(), 0x57f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02EA
        gbc.setState(0xde00, 0xbfa1, 0x2380, 0x4934, 0x726f, 0x1560, 0x0, 0x0);
        gbc.writeMem(0xde00, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbfa1);
        EXPECT(gbc.pc(), 0xde02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde00), 0xcb);
        EXPECT(gbc.readMem(0xde01), 0x33);
        // CB 33 02EB
        gbc.setState(0xe1a9, 0x211c, 0x90b0, 0x873a, 0xf9f8, 0xbb84, 0x0, 0x0);
        gbc.writeMem(0xe1a9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x211c);
        EXPECT(gbc.pc(), 0xe1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a9), 0xcb);
        EXPECT(gbc.readMem(0xe1aa), 0x33);
        // CB 33 02EC
        gbc.setState(0x6256, 0x9d0d, 0x5630, 0xb240, 0xb9a3, 0x2be9, 0x0, 0x0);
        gbc.writeMem(0x6256, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9d0d);
        EXPECT(gbc.pc(), 0x6258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02EE
        gbc.setState(0x78d2, 0xe9a7, 0x7da0, 0x6aac, 0x2067, 0x28f1, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe9a7);
        EXPECT(gbc.pc(), 0x78d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02EF
        gbc.setState(0x293d, 0xc138, 0x9f80, 0xcf2f, 0x9b31, 0x4460, 0x1, 0x0);
        gbc.writeMem(0x293d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc138);
        EXPECT(gbc.pc(), 0x293f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02F0
        gbc.setState(0xc60e, 0xcf75, 0x78e0, 0x8f03, 0x49e7, 0xb62b, 0x0, 0x1);
        gbc.writeMem(0xc60e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcf75);
        EXPECT(gbc.pc(), 0xc610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60e), 0xcb);
        EXPECT(gbc.readMem(0xc60f), 0x33);
        // CB 33 02F1
        gbc.setState(0xaf41, 0x89e3, 0x3e50, 0x6dbe, 0xc885, 0x5de0, 0x1, 0x0);
        gbc.writeMem(0xaf41, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x89e3);
        EXPECT(gbc.pc(), 0xaf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf41), 0xcb);
        EXPECT(gbc.readMem(0xaf42), 0x33);
        // CB 33 02F2
        gbc.setState(0xac9f, 0x6e54, 0x5490, 0x845d, 0x1924, 0x2100, 0x0, 0x1);
        gbc.writeMem(0xac9f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6e54);
        EXPECT(gbc.pc(), 0xaca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9f), 0xcb);
        EXPECT(gbc.readMem(0xaca0), 0x33);
        // CB 33 02F3
        gbc.setState(0xa683, 0xd10f, 0xa010, 0x9e72, 0x483a, 0xe5e2, 0x0, 0x0);
        gbc.writeMem(0xa683, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd10f);
        EXPECT(gbc.pc(), 0xa685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa683), 0xcb);
        EXPECT(gbc.readMem(0xa684), 0x33);
        // CB 33 02F4
        gbc.setState(0xa85, 0x1805, 0x5190, 0xd57f, 0xcc5b, 0x25fe, 0x1, 0x1);
        gbc.writeMem(0xa85, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1805);
        EXPECT(gbc.pc(), 0xa87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02F5
        gbc.setState(0x5790, 0x2968, 0x10d0, 0xf2da, 0xdc9a, 0x6ba9, 0x1, 0x1);
        gbc.writeMem(0x5790, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2968);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02F6
        gbc.setState(0x8a50, 0x54ea, 0x26d0, 0x600e, 0xa20f, 0x4ba6, 0x1, 0x1);
        gbc.writeMem(0x8a50, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x54ea);
        EXPECT(gbc.pc(), 0x8a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a50), 0xcb);
        EXPECT(gbc.readMem(0x8a51), 0x33);
        // CB 33 02F7
        gbc.setState(0x98c7, 0x1014, 0x14f0, 0x50a3, 0xc087, 0xfef5, 0x1, 0x1);
        gbc.writeMem(0x98c7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1014);
        EXPECT(gbc.pc(), 0x98c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c7), 0xcb);
        EXPECT(gbc.readMem(0x98c8), 0x33);
        // CB 33 02FA
        gbc.setState(0x5964, 0x4d6e, 0xde20, 0x4ef6, 0xc222, 0x75cc, 0x0, 0x0);
        gbc.writeMem(0x5964, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d6e);
        EXPECT(gbc.pc(), 0x5966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02FB
        gbc.setState(0xbc80, 0x7bf1, 0xcb50, 0xa178, 0x192c, 0x124f, 0x1, 0x1);
        gbc.writeMem(0xbc80, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7bf1);
        EXPECT(gbc.pc(), 0xbc82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc80), 0xcb);
        EXPECT(gbc.readMem(0xbc81), 0x33);
        // CB 33 02FC
        gbc.setState(0x4231, 0x84ce, 0xe7c0, 0x6b51, 0x3f4c, 0xcab4, 0x0, 0x0);
        gbc.writeMem(0x4231, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x84ce);
        EXPECT(gbc.pc(), 0x4233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02FD
        gbc.setState(0x5fad, 0x40ab, 0xbbd0, 0x8e20, 0xf364, 0xa591, 0x1, 0x1);
        gbc.writeMem(0x5fad, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x40ab);
        EXPECT(gbc.pc(), 0x5faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 02FE
        gbc.setState(0xdb97, 0xb6b8, 0x81d0, 0xca28, 0x19de, 0xc44e, 0x0, 0x1);
        gbc.writeMem(0xdb97, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb97), 0xcb);
        EXPECT(gbc.readMem(0xdb98), 0x33);
        // CB 33 02FF
        gbc.setState(0x630b, 0x2aa2, 0x2b80, 0xb173, 0x239c, 0x2b46, 0x1, 0x1);
        gbc.writeMem(0x630b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2aa2);
        EXPECT(gbc.pc(), 0x630d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0300
        gbc.setState(0x5f8e, 0x1d00, 0xeb80, 0x8358, 0x829d, 0x2890, 0x1, 0x1);
        gbc.writeMem(0x5f8e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1d00);
        EXPECT(gbc.pc(), 0x5f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0301
        gbc.setState(0xba19, 0xff12, 0x7c50, 0x746c, 0x5cd7, 0x21ce, 0x0, 0x0);
        gbc.writeMem(0xba19, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0xba1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0xcb);
        EXPECT(gbc.readMem(0xba1a), 0x33);
        // CB 33 0302
        gbc.setState(0xed13, 0x1f06, 0x5ca0, 0x2401, 0x7fb1, 0xedf8, 0x0, 0x1);
        gbc.writeMem(0xed13, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1f06);
        EXPECT(gbc.pc(), 0xed15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed13), 0xcb);
        EXPECT(gbc.readMem(0xed14), 0x33);
        // CB 33 0303
        gbc.setState(0xcc02, 0xcc79, 0x570, 0x6ad, 0xf9b5, 0xde7a, 0x0, 0x1);
        gbc.writeMem(0xcc02, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcc79);
        EXPECT(gbc.pc(), 0xcc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc02), 0xcb);
        EXPECT(gbc.readMem(0xcc03), 0x33);
        // CB 33 0304
        gbc.setState(0x3989, 0xe1ff, 0x38b0, 0x28ab, 0xaab5, 0x62f6, 0x1, 0x0);
        gbc.writeMem(0x3989, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0x398b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0305
        gbc.setState(0x4fa7, 0x7ac, 0xc9a0, 0xec82, 0xc5db, 0xed46, 0x0, 0x1);
        gbc.writeMem(0x4fa7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7ac);
        EXPECT(gbc.pc(), 0x4fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0306
        gbc.setState(0xc495, 0x95df, 0x6780, 0x6912, 0x665e, 0x991c, 0x1, 0x0);
        gbc.writeMem(0xc495, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x95df);
        EXPECT(gbc.pc(), 0xc497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc495), 0xcb);
        EXPECT(gbc.readMem(0xc496), 0x33);
        // CB 33 0307
        gbc.setState(0x8493, 0x5067, 0x5520, 0x8156, 0x9a5e, 0x787f, 0x1, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5067);
        EXPECT(gbc.pc(), 0x8495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8493), 0xcb);
        EXPECT(gbc.readMem(0x8494), 0x33);
        // CB 33 0308
        gbc.setState(0xc173, 0x51ba, 0x14e0, 0xaa22, 0x6764, 0xd0a, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x51ba);
        EXPECT(gbc.pc(), 0xc175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc173), 0xcb);
        EXPECT(gbc.readMem(0xc174), 0x33);
        // CB 33 030A
        gbc.setState(0xbbb4, 0xf866, 0xaed0, 0x9819, 0x9e, 0xbb1b, 0x0, 0x1);
        gbc.writeMem(0xbbb4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf866);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb4), 0xcb);
        EXPECT(gbc.readMem(0xbbb5), 0x33);
        // CB 33 030B
        gbc.setState(0x594f, 0x40be, 0x9440, 0x66d4, 0x8330, 0x68c, 0x0, 0x1);
        gbc.writeMem(0x594f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x40be);
        EXPECT(gbc.pc(), 0x5951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 030C
        gbc.setState(0x5fa1, 0xdfba, 0xeb90, 0xc044, 0xaf65, 0x7ec6, 0x0, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdfba);
        EXPECT(gbc.pc(), 0x5fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 030D
        gbc.setState(0xba87, 0x98ec, 0x83f0, 0xce13, 0x6ea6, 0x6eb7, 0x0, 0x1);
        gbc.writeMem(0xba87, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x98ec);
        EXPECT(gbc.pc(), 0xba89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba87), 0xcb);
        EXPECT(gbc.readMem(0xba88), 0x33);
        // CB 33 030E
        gbc.setState(0x9bfd, 0x22a8, 0xfe40, 0x5dd, 0xeb23, 0x84d4, 0x1, 0x0);
        gbc.writeMem(0x9bfd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x22a8);
        EXPECT(gbc.pc(), 0x9bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfd), 0xcb);
        EXPECT(gbc.readMem(0x9bfe), 0x33);
        // CB 33 030F
        gbc.setState(0x41dc, 0x525b, 0x9b90, 0x88d0, 0xfac, 0x1d1f, 0x1, 0x1);
        gbc.writeMem(0x41dc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x525b);
        EXPECT(gbc.pc(), 0x41de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0310
        gbc.setState(0x740, 0xa321, 0x5ac0, 0xb426, 0xf08d, 0xeda7, 0x0, 0x1);
        gbc.writeMem(0x740, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa321);
        EXPECT(gbc.pc(), 0x742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0311
        gbc.setState(0x81fd, 0x9e4a, 0xfab0, 0x4950, 0xf7b, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x81fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9e4a);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0x33);
        // CB 33 0312
        gbc.setState(0x53fd, 0x133, 0x1840, 0xd88d, 0x4bcf, 0x19a5, 0x1, 0x1);
        gbc.writeMem(0x53fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x133);
        EXPECT(gbc.pc(), 0x53ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0313
        gbc.setState(0xc95f, 0x329d, 0xddc0, 0x8e15, 0x3645, 0xaaa9, 0x1, 0x0);
        gbc.writeMem(0xc95f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x329d);
        EXPECT(gbc.pc(), 0xc961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95f), 0xcb);
        EXPECT(gbc.readMem(0xc960), 0x33);
        // CB 33 0314
        gbc.setState(0x8d12, 0x76df, 0x6e30, 0x2ca1, 0x4ad5, 0x83d3, 0x1, 0x1);
        gbc.writeMem(0x8d12, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x76df);
        EXPECT(gbc.pc(), 0x8d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d12), 0xcb);
        EXPECT(gbc.readMem(0x8d13), 0x33);
        // CB 33 0315
        gbc.setState(0xa4a7, 0x61d9, 0xd2e0, 0x186f, 0xffb1, 0xc4d2, 0x0, 0x1);
        gbc.writeMem(0xa4a7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x61d9);
        EXPECT(gbc.pc(), 0xa4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4a7), 0xcb);
        EXPECT(gbc.readMem(0xa4a8), 0x33);
        // CB 33 0316
        gbc.setState(0x1ff4, 0xd4e7, 0xbac0, 0x3ecc, 0xc3b2, 0x758, 0x0, 0x1);
        gbc.writeMem(0x1ff4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd4e7);
        EXPECT(gbc.pc(), 0x1ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0317
        gbc.setState(0xa671, 0x360, 0x3d40, 0x77fe, 0xa6c0, 0x818c, 0x1, 0x0);
        gbc.writeMem(0xa671, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0xa673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa671), 0xcb);
        EXPECT(gbc.readMem(0xa672), 0x33);
        // CB 33 031A
        gbc.setState(0x6ce8, 0x3af8, 0x8930, 0x75ae, 0xd2ce, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x6ce8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3af8);
        EXPECT(gbc.pc(), 0x6cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 031B
        gbc.setState(0xe092, 0x3fde, 0x48d0, 0x55d2, 0xc9f, 0x4c73, 0x0, 0x1);
        gbc.writeMem(0xe092, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3fde);
        EXPECT(gbc.pc(), 0xe094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe092), 0xcb);
        EXPECT(gbc.readMem(0xe093), 0x33);
        // CB 33 031C
        gbc.setState(0x2b35, 0xa636, 0xb5e0, 0xd919, 0xcc13, 0x38cb, 0x0, 0x0);
        gbc.writeMem(0x2b35, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x2b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 031D
        gbc.setState(0x221, 0xba1a, 0xa20, 0x26be, 0xcd6b, 0x5ada, 0x0, 0x0);
        gbc.writeMem(0x221, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xba1a);
        EXPECT(gbc.pc(), 0x223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 031E
        gbc.setState(0x2ec2, 0xf8e8, 0x6980, 0x908d, 0x201f, 0x60e7, 0x0, 0x0);
        gbc.writeMem(0x2ec2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf8e8);
        EXPECT(gbc.pc(), 0x2ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 031F
        gbc.setState(0x5ce2, 0x5e69, 0xa5b0, 0x625c, 0x2270, 0x1977, 0x0, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5e69);
        EXPECT(gbc.pc(), 0x5ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0320
        gbc.setState(0xdf8e, 0x16, 0xc980, 0x854c, 0x1835, 0xc06, 0x0, 0x1);
        gbc.writeMem(0xdf8e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x16);
        EXPECT(gbc.pc(), 0xdf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8e), 0xcb);
        EXPECT(gbc.readMem(0xdf8f), 0x33);
        // CB 33 0321
        gbc.setState(0xa293, 0x7c99, 0x4cb0, 0x74ed, 0x39f2, 0x7243, 0x1, 0x0);
        gbc.writeMem(0xa293, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7c99);
        EXPECT(gbc.pc(), 0xa295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa293), 0xcb);
        EXPECT(gbc.readMem(0xa294), 0x33);
        // CB 33 0322
        gbc.setState(0x1f2d, 0xa22a, 0xda10, 0xc1c6, 0x6ea1, 0x9b1, 0x0, 0x1);
        gbc.writeMem(0x1f2d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa22a);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0323
        gbc.setState(0x571f, 0xd0e, 0x5ea0, 0x933, 0x6a35, 0xb6c3, 0x0, 0x0);
        gbc.writeMem(0x571f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd0e);
        EXPECT(gbc.pc(), 0x5721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0324
        gbc.setState(0x57d9, 0x9bc3, 0xcaf0, 0x4fc8, 0xf4b3, 0x8ea2, 0x1, 0x1);
        gbc.writeMem(0x57d9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9bc3);
        EXPECT(gbc.pc(), 0x57db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0326
        gbc.setState(0x43f0, 0x8f54, 0xe820, 0xda9f, 0xaca8, 0x355a, 0x0, 0x0);
        gbc.writeMem(0x43f0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8f54);
        EXPECT(gbc.pc(), 0x43f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0327
        gbc.setState(0x38ba, 0xe7bd, 0xfe70, 0x727, 0x3fa7, 0x6cd5, 0x0, 0x0);
        gbc.writeMem(0x38ba, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe7bd);
        EXPECT(gbc.pc(), 0x38bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0328
        gbc.setState(0x62e5, 0x4b63, 0xd400, 0x5dd5, 0x9681, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0x62e5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0x62e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0329
        gbc.setState(0x886f, 0x999a, 0x7a80, 0x85f4, 0x9cc2, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x999a);
        EXPECT(gbc.pc(), 0x8871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886f), 0xcb);
        EXPECT(gbc.readMem(0x8870), 0x33);
        // CB 33 032C
        gbc.setState(0x32a1, 0xda4a, 0xd60, 0xca80, 0x5c76, 0x18b4, 0x0, 0x1);
        gbc.writeMem(0x32a1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xda4a);
        EXPECT(gbc.pc(), 0x32a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 032D
        gbc.setState(0xb992, 0x2ca0, 0x4060, 0x4971, 0x5906, 0xee3, 0x0, 0x0);
        gbc.writeMem(0xb992, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2ca0);
        EXPECT(gbc.pc(), 0xb994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb992), 0xcb);
        EXPECT(gbc.readMem(0xb993), 0x33);
        // CB 33 032E
        gbc.setState(0x70a1, 0xc769, 0x8730, 0x72a8, 0xa07b, 0x1679, 0x0, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc769);
        EXPECT(gbc.pc(), 0x70a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 032F
        gbc.setState(0x469, 0x9625, 0x3ee0, 0xa33b, 0x37ee, 0xcaf0, 0x0, 0x1);
        gbc.writeMem(0x469, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9625);
        EXPECT(gbc.pc(), 0x46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0330
        gbc.setState(0xb8b5, 0xc198, 0xce10, 0x39c1, 0xb3f6, 0xd7b, 0x1, 0x0);
        gbc.writeMem(0xb8b5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc198);
        EXPECT(gbc.pc(), 0xb8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b5), 0xcb);
        EXPECT(gbc.readMem(0xb8b6), 0x33);
        // CB 33 0331
        gbc.setState(0x1f1b, 0xcba6, 0x92e0, 0xdc56, 0x4d2b, 0x4488, 0x0, 0x0);
        gbc.writeMem(0x1f1b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcba6);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0332
        gbc.setState(0xaa75, 0x53e, 0x45c0, 0x9488, 0xa911, 0x3fe9, 0x1, 0x0);
        gbc.writeMem(0xaa75, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x53e);
        EXPECT(gbc.pc(), 0xaa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa75), 0xcb);
        EXPECT(gbc.readMem(0xaa76), 0x33);
        // CB 33 0333
        gbc.setState(0x1137, 0x74d5, 0xe820, 0xbeba, 0xb641, 0x234a, 0x0, 0x1);
        gbc.writeMem(0x1137, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x74d5);
        EXPECT(gbc.pc(), 0x1139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0334
        gbc.setState(0x1b55, 0xcb20, 0xdc60, 0x7c54, 0x3117, 0x6257, 0x1, 0x0);
        gbc.writeMem(0x1b55, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcb20);
        EXPECT(gbc.pc(), 0x1b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0335
        gbc.setState(0x5547, 0x6fec, 0xa970, 0xbf90, 0x716c, 0x72f6, 0x0, 0x0);
        gbc.writeMem(0x5547, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6fec);
        EXPECT(gbc.pc(), 0x5549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0336
        gbc.setState(0xce1, 0x98e3, 0x62f0, 0xcdea, 0x4767, 0x50f3, 0x1, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x98e3);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0337
        gbc.setState(0x40d7, 0x18b2, 0xc850, 0xc897, 0xceae, 0x6f0d, 0x0, 0x0);
        gbc.writeMem(0x40d7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x18b2);
        EXPECT(gbc.pc(), 0x40d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0338
        gbc.setState(0xd720, 0xf790, 0x990, 0x9569, 0x2e06, 0xb0cf, 0x1, 0x1);
        gbc.writeMem(0xd720, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf790);
        EXPECT(gbc.pc(), 0xd722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd720), 0xcb);
        EXPECT(gbc.readMem(0xd721), 0x33);
        // CB 33 0339
        gbc.setState(0x617e, 0xe4ab, 0xa790, 0xe705, 0xc206, 0x8a0f, 0x1, 0x0);
        gbc.writeMem(0x617e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0x6180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 033A
        gbc.setState(0x22b0, 0x2765, 0xb7e0, 0x6288, 0x1213, 0x5fb5, 0x1, 0x0);
        gbc.writeMem(0x22b0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2765);
        EXPECT(gbc.pc(), 0x22b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 033C
        gbc.setState(0x489, 0x11a1, 0xb2e0, 0xf8a2, 0xb035, 0xf0c8, 0x0, 0x0);
        gbc.writeMem(0x489, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x11a1);
        EXPECT(gbc.pc(), 0x48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 033D
        gbc.setState(0xde62, 0x680e, 0x6740, 0x76da, 0xa9c6, 0x378d, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x680e);
        EXPECT(gbc.pc(), 0xde64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde62), 0xcb);
        EXPECT(gbc.readMem(0xde63), 0x33);
        // CB 33 033E
        gbc.setState(0x1e1a, 0x2c12, 0x50d0, 0x7c99, 0xba15, 0xf263, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2c12);
        EXPECT(gbc.pc(), 0x1e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 033F
        gbc.setState(0x66ea, 0x1f32, 0x4870, 0x2da9, 0xb57d, 0xb4e8, 0x1, 0x0);
        gbc.writeMem(0x66ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1f32);
        EXPECT(gbc.pc(), 0x66ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0340
        gbc.setState(0x8492, 0x8a9f, 0x25d0, 0x45de, 0x3ccf, 0x7af7, 0x1, 0x0);
        gbc.writeMem(0x8492, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8a9f);
        EXPECT(gbc.pc(), 0x8494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8492), 0xcb);
        EXPECT(gbc.readMem(0x8493), 0x33);
        // CB 33 0341
        gbc.setState(0x8eef, 0x820, 0xf990, 0xaf78, 0x39ed, 0x9e94, 0x1, 0x1);
        gbc.writeMem(0x8eef, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x820);
        EXPECT(gbc.pc(), 0x8ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eef), 0xcb);
        EXPECT(gbc.readMem(0x8ef0), 0x33);
        // CB 33 0342
        gbc.setState(0x262, 0x1d54, 0x3c60, 0x7159, 0x306a, 0xefa6, 0x0, 0x1);
        gbc.writeMem(0x262, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1d54);
        EXPECT(gbc.pc(), 0x264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0344
        gbc.setState(0xc293, 0xc424, 0xa1e0, 0xe087, 0xa7d6, 0x6bd, 0x1, 0x1);
        gbc.writeMem(0xc293, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0xc295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc293), 0xcb);
        EXPECT(gbc.readMem(0xc294), 0x33);
        // CB 33 0345
        gbc.setState(0x11c1, 0xd55e, 0xbc50, 0x346b, 0xfb6d, 0x7e9d, 0x1, 0x0);
        gbc.writeMem(0x11c1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd55e);
        EXPECT(gbc.pc(), 0x11c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0346
        gbc.setState(0x2160, 0xb76c, 0x1940, 0xbd75, 0x52f0, 0x2d35, 0x0, 0x0);
        gbc.writeMem(0x2160, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb76c);
        EXPECT(gbc.pc(), 0x2162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0347
        gbc.setState(0x6c5, 0x94da, 0xe100, 0xc16d, 0x69bf, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x6c5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x94da);
        EXPECT(gbc.pc(), 0x6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0348
        gbc.setState(0x6230, 0x5053, 0xfca0, 0x244f, 0x75bc, 0x5fd3, 0x1, 0x0);
        gbc.writeMem(0x6230, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5053);
        EXPECT(gbc.pc(), 0x6232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0349
        gbc.setState(0x426c, 0x3ff1, 0xe7a0, 0x347, 0xb789, 0xf80, 0x0, 0x0);
        gbc.writeMem(0x426c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3ff1);
        EXPECT(gbc.pc(), 0x426e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 034A
        gbc.setState(0x573f, 0x1322, 0x44e0, 0xc8a4, 0x757d, 0x861f, 0x1, 0x0);
        gbc.writeMem(0x573f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1322);
        EXPECT(gbc.pc(), 0x5741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 034B
        gbc.setState(0xa2d1, 0xf857, 0x4470, 0x2819, 0x3f27, 0x9c6d, 0x0, 0x1);
        gbc.writeMem(0xa2d1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf857);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d1), 0xcb);
        EXPECT(gbc.readMem(0xa2d2), 0x33);
        // CB 33 034C
        gbc.setState(0xd52c, 0x1880, 0xa530, 0xb4a5, 0x1290, 0x2cd3, 0x1, 0x0);
        gbc.writeMem(0xd52c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1880);
        EXPECT(gbc.pc(), 0xd52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52c), 0xcb);
        EXPECT(gbc.readMem(0xd52d), 0x33);
        // CB 33 034D
        gbc.setState(0x5bdc, 0xb5ca, 0x3c90, 0x3b0c, 0x38d9, 0xa4f9, 0x1, 0x0);
        gbc.writeMem(0x5bdc, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb5ca);
        EXPECT(gbc.pc(), 0x5bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 034E
        gbc.setState(0x427a, 0x3d85, 0x10a0, 0x39a5, 0x9003, 0x120b, 0x0, 0x0);
        gbc.writeMem(0x427a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3d85);
        EXPECT(gbc.pc(), 0x427c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 034F
        gbc.setState(0x3ef7, 0x926a, 0x48a0, 0xdc7, 0xe0c2, 0x17ab, 0x0, 0x1);
        gbc.writeMem(0x3ef7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x926a);
        EXPECT(gbc.pc(), 0x3ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0352
        gbc.setState(0xafd2, 0xae9, 0x4170, 0xbae0, 0x8d75, 0x778, 0x1, 0x1);
        gbc.writeMem(0xafd2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xae9);
        EXPECT(gbc.pc(), 0xafd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd2), 0xcb);
        EXPECT(gbc.readMem(0xafd3), 0x33);
        // CB 33 0353
        gbc.setState(0xd8e9, 0x5c84, 0x7be0, 0xcd2c, 0x9123, 0x134c, 0x1, 0x0);
        gbc.writeMem(0xd8e9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5c84);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e9), 0xcb);
        EXPECT(gbc.readMem(0xd8ea), 0x33);
        // CB 33 0354
        gbc.setState(0x99b9, 0x163c, 0x2660, 0xcf30, 0xdba6, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x99b9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x163c);
        EXPECT(gbc.pc(), 0x99bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b9), 0xcb);
        EXPECT(gbc.readMem(0x99ba), 0x33);
        // CB 33 0355
        gbc.setState(0xc60d, 0xa7ac, 0x380, 0x267e, 0xf5a7, 0x37f4, 0x1, 0x0);
        gbc.writeMem(0xc60d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0xc60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60d), 0xcb);
        EXPECT(gbc.readMem(0xc60e), 0x33);
        // CB 33 0356
        gbc.setState(0x5c4b, 0x532, 0x220, 0x5768, 0xdfd5, 0x50b6, 0x0, 0x1);
        gbc.writeMem(0x5c4b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x532);
        EXPECT(gbc.pc(), 0x5c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0357
        gbc.setState(0xae81, 0xfe2f, 0xf380, 0x64ab, 0x1e3c, 0xd671, 0x1, 0x0);
        gbc.writeMem(0xae81, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfe2f);
        EXPECT(gbc.pc(), 0xae83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae81), 0xcb);
        EXPECT(gbc.readMem(0xae82), 0x33);
        // CB 33 0359
        gbc.setState(0xc9d0, 0x2416, 0x1850, 0x6a32, 0x327c, 0x60e0, 0x1, 0x1);
        gbc.writeMem(0xc9d0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2416);
        EXPECT(gbc.pc(), 0xc9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d0), 0xcb);
        EXPECT(gbc.readMem(0xc9d1), 0x33);
        // CB 33 035A
        gbc.setState(0xc6ea, 0xdf82, 0x3d50, 0x1310, 0x5119, 0xc4cb, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdf82);
        EXPECT(gbc.pc(), 0xc6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ea), 0xcb);
        EXPECT(gbc.readMem(0xc6eb), 0x33);
        // CB 33 035B
        gbc.setState(0x8a64, 0x2198, 0xf5a0, 0x2383, 0xb714, 0x1e10, 0x0, 0x1);
        gbc.writeMem(0x8a64, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2198);
        EXPECT(gbc.pc(), 0x8a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a64), 0xcb);
        EXPECT(gbc.readMem(0x8a65), 0x33);
        // CB 33 035C
        gbc.setState(0xad17, 0xb542, 0x8480, 0xfd81, 0xf214, 0xda5, 0x1, 0x0);
        gbc.writeMem(0xad17, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb542);
        EXPECT(gbc.pc(), 0xad19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad17), 0xcb);
        EXPECT(gbc.readMem(0xad18), 0x33);
        // CB 33 035D
        gbc.setState(0x1569, 0x1c3, 0x1d90, 0xf0e9, 0xb7b5, 0x58ea, 0x1, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1c3);
        EXPECT(gbc.pc(), 0x156b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 035E
        gbc.setState(0xad30, 0xd888, 0xc0e0, 0x79b9, 0x5ade, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0xad30, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd888);
        EXPECT(gbc.pc(), 0xad32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad30), 0xcb);
        EXPECT(gbc.readMem(0xad31), 0x33);
        // CB 33 035F
        gbc.setState(0x4d83, 0x345e, 0x580, 0xe9cb, 0x443e, 0x91d7, 0x0, 0x0);
        gbc.writeMem(0x4d83, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x345e);
        EXPECT(gbc.pc(), 0x4d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0360
        gbc.setState(0x1749, 0xb1a1, 0x98f0, 0xa9cd, 0x1905, 0x6b7a, 0x1, 0x0);
        gbc.writeMem(0x1749, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb1a1);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0361
        gbc.setState(0x5b76, 0x9163, 0xa3c0, 0x3415, 0x20e0, 0xc3b2, 0x0, 0x1);
        gbc.writeMem(0x5b76, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9163);
        EXPECT(gbc.pc(), 0x5b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0362
        gbc.setState(0x7b4d, 0x9e52, 0xa000, 0xca83, 0xda5e, 0x680b, 0x1, 0x0);
        gbc.writeMem(0x7b4d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0x7b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0363
        gbc.setState(0x7f1, 0x9703, 0xac0, 0x8391, 0x30da, 0xc4c1, 0x1, 0x1);
        gbc.writeMem(0x7f1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9703);
        EXPECT(gbc.pc(), 0x7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0364
        gbc.setState(0x6b49, 0x55f7, 0x7800, 0xa96f, 0x9d32, 0xb0e2, 0x1, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x55f7);
        EXPECT(gbc.pc(), 0x6b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0365
        gbc.setState(0xdb7e, 0x38de, 0x2800, 0x8dce, 0x52d3, 0xe616, 0x1, 0x1);
        gbc.writeMem(0xdb7e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x38de);
        EXPECT(gbc.pc(), 0xdb80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7e), 0xcb);
        EXPECT(gbc.readMem(0xdb7f), 0x33);
        // CB 33 0366
        gbc.setState(0x1430, 0x8e3d, 0xf780, 0xe0af, 0xf352, 0xc052, 0x0, 0x0);
        gbc.writeMem(0x1430, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8e3d);
        EXPECT(gbc.pc(), 0x1432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0367
        gbc.setState(0x9115, 0xe5db, 0xef60, 0xffea, 0x5ef6, 0xf849, 0x0, 0x1);
        gbc.writeMem(0x9115, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe5db);
        EXPECT(gbc.pc(), 0x9117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9115), 0xcb);
        EXPECT(gbc.readMem(0x9116), 0x33);
        // CB 33 0368
        gbc.setState(0xdde2, 0x40b4, 0x87a0, 0xa5d3, 0xd1b9, 0xeb39, 0x0, 0x0);
        gbc.writeMem(0xdde2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0xdde4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde2), 0xcb);
        EXPECT(gbc.readMem(0xdde3), 0x33);
        // CB 33 0369
        gbc.setState(0x1908, 0xe7eb, 0x5cb0, 0x3c1d, 0x22b7, 0x7644, 0x1, 0x0);
        gbc.writeMem(0x1908, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0x190a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 036A
        gbc.setState(0x9dde, 0xbd84, 0x4fd0, 0x52b0, 0x1576, 0x613b, 0x0, 0x0);
        gbc.writeMem(0x9dde, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbd84);
        EXPECT(gbc.pc(), 0x9de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dde), 0xcb);
        EXPECT(gbc.readMem(0x9ddf), 0x33);
        // CB 33 036B
        gbc.setState(0x9d51, 0xb01d, 0xd530, 0xaf36, 0x63d5, 0xc4b9, 0x0, 0x0);
        gbc.writeMem(0x9d51, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb01d);
        EXPECT(gbc.pc(), 0x9d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d51), 0xcb);
        EXPECT(gbc.readMem(0x9d52), 0x33);
        // CB 33 036C
        gbc.setState(0xed64, 0x31, 0x2e0, 0x8bfa, 0x16a2, 0xfde2, 0x0, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed64), 0xcb);
        EXPECT(gbc.readMem(0xed65), 0x33);
        // CB 33 036D
        gbc.setState(0x5b06, 0x5112, 0xb2e0, 0xb5f3, 0xf0b7, 0x5188, 0x0, 0x0);
        gbc.writeMem(0x5b06, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5112);
        EXPECT(gbc.pc(), 0x5b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 036E
        gbc.setState(0x3576, 0x3ebb, 0xafc0, 0x1b61, 0xe460, 0x7f, 0x1, 0x1);
        gbc.writeMem(0x3576, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3ebb);
        EXPECT(gbc.pc(), 0x3578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 036F
        gbc.setState(0x7feb, 0xb85d, 0xf860, 0x7511, 0xf0a1, 0x8423, 0x0, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb85d);
        EXPECT(gbc.pc(), 0x7fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0370
        gbc.setState(0x7ba4, 0xaa91, 0xa7e0, 0x1bb, 0x9203, 0xbf94, 0x1, 0x0);
        gbc.writeMem(0x7ba4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xaa91);
        EXPECT(gbc.pc(), 0x7ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0371
        gbc.setState(0x7a87, 0x326c, 0x28f0, 0xb671, 0xce62, 0x1ff5, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x326c);
        EXPECT(gbc.pc(), 0x7a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0372
        gbc.setState(0x3e4f, 0xf676, 0xc320, 0x56ba, 0xa182, 0xf123, 0x0, 0x0);
        gbc.writeMem(0x3e4f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf676);
        EXPECT(gbc.pc(), 0x3e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0373
        gbc.setState(0x1b88, 0x5499, 0x3330, 0xec62, 0x4d9, 0x7b5, 0x0, 0x0);
        gbc.writeMem(0x1b88, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5499);
        EXPECT(gbc.pc(), 0x1b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0374
        gbc.setState(0xa69c, 0xc288, 0x50d0, 0x815c, 0xe42, 0x2e33, 0x0, 0x0);
        gbc.writeMem(0xa69c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc288);
        EXPECT(gbc.pc(), 0xa69e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69c), 0xcb);
        EXPECT(gbc.readMem(0xa69d), 0x33);
        // CB 33 0375
        gbc.setState(0x2be0, 0xc1a5, 0x2460, 0x701f, 0x2781, 0x771d, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc1a5);
        EXPECT(gbc.pc(), 0x2be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0376
        gbc.setState(0x3a6a, 0xbbdd, 0x1410, 0xd9df, 0x6e1f, 0xbf59, 0x0, 0x1);
        gbc.writeMem(0x3a6a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbbdd);
        EXPECT(gbc.pc(), 0x3a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0377
        gbc.setState(0x2fec, 0x8422, 0xd200, 0xc3d2, 0x66f1, 0x9a3a, 0x1, 0x0);
        gbc.writeMem(0x2fec, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8422);
        EXPECT(gbc.pc(), 0x2fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0378
        gbc.setState(0x5716, 0x848f, 0x94a0, 0x46e6, 0xcd79, 0x2fc3, 0x0, 0x1);
        gbc.writeMem(0x5716, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x5718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0379
        gbc.setState(0x474b, 0x82ce, 0x2ab0, 0xc9f5, 0x73ff, 0x168c, 0x1, 0x0);
        gbc.writeMem(0x474b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x82ce);
        EXPECT(gbc.pc(), 0x474d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 037A
        gbc.setState(0xb869, 0xe6d7, 0x8280, 0xd064, 0xdbb5, 0xb2c5, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe6d7);
        EXPECT(gbc.pc(), 0xb86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xcb);
        EXPECT(gbc.readMem(0xb86a), 0x33);
        // CB 33 037B
        gbc.setState(0x469b, 0x17b8, 0x25d0, 0xb3e, 0x7dde, 0x245c, 0x1, 0x0);
        gbc.writeMem(0x469b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x17b8);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 037C
        gbc.setState(0xbab3, 0xe07c, 0x6970, 0x2fa1, 0xac39, 0xdfb4, 0x1, 0x0);
        gbc.writeMem(0xbab3, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe07c);
        EXPECT(gbc.pc(), 0xbab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab3), 0xcb);
        EXPECT(gbc.readMem(0xbab4), 0x33);
        // CB 33 037D
        gbc.setState(0x7a37, 0x4582, 0xbfa0, 0xf24c, 0xefa4, 0xffd3, 0x1, 0x0);
        gbc.writeMem(0x7a37, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4582);
        EXPECT(gbc.pc(), 0x7a39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 037E
        gbc.setState(0x44e2, 0x6edf, 0x5e0, 0xc2e3, 0x6581, 0xce04, 0x0, 0x0);
        gbc.writeMem(0x44e2, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6edf);
        EXPECT(gbc.pc(), 0x44e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 037F
        gbc.setState(0xaa7e, 0x4407, 0x1eb0, 0x2194, 0x1776, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0xaa7e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0xaa80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7e), 0xcb);
        EXPECT(gbc.readMem(0xaa7f), 0x33);
        // CB 33 0380
        gbc.setState(0x8d1d, 0xc9e2, 0x6ea0, 0xfd67, 0x75e5, 0xd57e, 0x0, 0x0);
        gbc.writeMem(0x8d1d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc9e2);
        EXPECT(gbc.pc(), 0x8d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1d), 0xcb);
        EXPECT(gbc.readMem(0x8d1e), 0x33);
        // CB 33 0381
        gbc.setState(0xe295, 0x4779, 0x4670, 0xa06c, 0x5339, 0x4dee, 0x1, 0x0);
        gbc.writeMem(0xe295, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4779);
        EXPECT(gbc.pc(), 0xe297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe295), 0xcb);
        EXPECT(gbc.readMem(0xe296), 0x33);
        // CB 33 0382
        gbc.setState(0xbf8, 0xd32a, 0x47d0, 0x22e7, 0xc34d, 0x1a50, 0x1, 0x0);
        gbc.writeMem(0xbf8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd32a);
        EXPECT(gbc.pc(), 0xbfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0383
        gbc.setState(0xca61, 0xdba6, 0x6d0, 0xc9f1, 0x62f1, 0x1cd0, 0x0, 0x1);
        gbc.writeMem(0xca61, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdba6);
        EXPECT(gbc.pc(), 0xca63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca61), 0xcb);
        EXPECT(gbc.readMem(0xca62), 0x33);
        // CB 33 0384
        gbc.setState(0x405e, 0xbc13, 0x6520, 0x980d, 0x4d40, 0xa76e, 0x1, 0x0);
        gbc.writeMem(0x405e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbc13);
        EXPECT(gbc.pc(), 0x4060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0385
        gbc.setState(0xb10e, 0x3cdc, 0xcb90, 0xcefb, 0xb47c, 0x37af, 0x0, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3cdc);
        EXPECT(gbc.pc(), 0xb110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10e), 0xcb);
        EXPECT(gbc.readMem(0xb10f), 0x33);
        // CB 33 0386
        gbc.setState(0x279d, 0xcb8a, 0x3ed0, 0xfdf, 0x3a78, 0xad9e, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcb8a);
        EXPECT(gbc.pc(), 0x279f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0387
        gbc.setState(0x35bb, 0x16fc, 0x7920, 0xd827, 0xd10e, 0xe3ef, 0x1, 0x1);
        gbc.writeMem(0x35bb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x16fc);
        EXPECT(gbc.pc(), 0x35bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0389
        gbc.setState(0x80f5, 0xb0b9, 0x6b30, 0x7d47, 0x1ae5, 0xee64, 0x1, 0x0);
        gbc.writeMem(0x80f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb0b9);
        EXPECT(gbc.pc(), 0x80f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f5), 0xcb);
        EXPECT(gbc.readMem(0x80f6), 0x33);
        // CB 33 038A
        gbc.setState(0x8393, 0x1944, 0x2a80, 0x3001, 0xc0a1, 0x2988, 0x0, 0x1);
        gbc.writeMem(0x8393, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1944);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8393), 0xcb);
        EXPECT(gbc.readMem(0x8394), 0x33);
        // CB 33 038B
        gbc.setState(0x7aff, 0x1fd4, 0xd80, 0x3d81, 0x94aa, 0x10ec, 0x0, 0x0);
        gbc.writeMem(0x7aff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1fd4);
        EXPECT(gbc.pc(), 0x7b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 038C
        gbc.setState(0x528d, 0x103, 0xfa80, 0xb718, 0xf8ef, 0x9d24, 0x0, 0x1);
        gbc.writeMem(0x528d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x103);
        EXPECT(gbc.pc(), 0x528f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 038E
        gbc.setState(0x776b, 0x1738, 0x7a30, 0xecee, 0xd674, 0x153d, 0x0, 0x0);
        gbc.writeMem(0x776b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1738);
        EXPECT(gbc.pc(), 0x776d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 038F
        gbc.setState(0x365f, 0x6d1d, 0xb250, 0x432a, 0x7b2b, 0xa2e9, 0x1, 0x0);
        gbc.writeMem(0x365f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6d1d);
        EXPECT(gbc.pc(), 0x3661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0390
        gbc.setState(0xe72, 0x5a2e, 0x1a0, 0xdd1d, 0x7cf7, 0x52f2, 0x1, 0x1);
        gbc.writeMem(0xe72, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5a2e);
        EXPECT(gbc.pc(), 0xe74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0391
        gbc.setState(0x24b6, 0x56e1, 0x6d70, 0xe778, 0xc1c5, 0x53e8, 0x1, 0x0);
        gbc.writeMem(0x24b6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x56e1);
        EXPECT(gbc.pc(), 0x24b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0392
        gbc.setState(0x8f49, 0xb22a, 0x1200, 0xe9ac, 0xd60, 0xa568, 0x1, 0x0);
        gbc.writeMem(0x8f49, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb22a);
        EXPECT(gbc.pc(), 0x8f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f49), 0xcb);
        EXPECT(gbc.readMem(0x8f4a), 0x33);
        // CB 33 0393
        gbc.setState(0x4d02, 0x590c, 0x5530, 0xfd53, 0x6c5a, 0x2b43, 0x0, 0x1);
        gbc.writeMem(0x4d02, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x590c);
        EXPECT(gbc.pc(), 0x4d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0394
        gbc.setState(0x4c5d, 0x59e4, 0xc350, 0xf451, 0xeb3e, 0xee30, 0x1, 0x0);
        gbc.writeMem(0x4c5d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x59e4);
        EXPECT(gbc.pc(), 0x4c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0395
        gbc.setState(0x10d1, 0x7e38, 0x5a90, 0xd5ee, 0x2f4e, 0xe435, 0x1, 0x1);
        gbc.writeMem(0x10d1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7e38);
        EXPECT(gbc.pc(), 0x10d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0396
        gbc.setState(0x8aef, 0x27de, 0xc7e0, 0x412b, 0xc0ce, 0x3bb, 0x0, 0x1);
        gbc.writeMem(0x8aef, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x27de);
        EXPECT(gbc.pc(), 0x8af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aef), 0xcb);
        EXPECT(gbc.readMem(0x8af0), 0x33);
        // CB 33 0397
        gbc.setState(0x755d, 0x5804, 0x6e00, 0x1745, 0xfa03, 0xd3ab, 0x1, 0x0);
        gbc.writeMem(0x755d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5804);
        EXPECT(gbc.pc(), 0x755f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 0398
        gbc.setState(0x9b57, 0x1e28, 0x14f0, 0x9084, 0xbb06, 0x407f, 0x1, 0x1);
        gbc.writeMem(0x9b57, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1e28);
        EXPECT(gbc.pc(), 0x9b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b57), 0xcb);
        EXPECT(gbc.readMem(0x9b58), 0x33);
        // CB 33 0399
        gbc.setState(0xecd7, 0x10b, 0xd6f0, 0x3550, 0x4863, 0x7fd0, 0x0, 0x1);
        gbc.writeMem(0xecd7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x10b);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd7), 0xcb);
        EXPECT(gbc.readMem(0xecd8), 0x33);
        // CB 33 039A
        gbc.setState(0xd2ae, 0x47b3, 0x67e0, 0xb9a5, 0xbefa, 0x9431, 0x0, 0x1);
        gbc.writeMem(0xd2ae, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x47b3);
        EXPECT(gbc.pc(), 0xd2b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ae), 0xcb);
        EXPECT(gbc.readMem(0xd2af), 0x33);
        // CB 33 039B
        gbc.setState(0x899f, 0x65e8, 0x1590, 0xd2e4, 0xd73, 0x587c, 0x1, 0x1);
        gbc.writeMem(0x899f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x65e8);
        EXPECT(gbc.pc(), 0x89a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899f), 0xcb);
        EXPECT(gbc.readMem(0x89a0), 0x33);
        // CB 33 039C
        gbc.setState(0x199b, 0x5d5b, 0x850, 0x193f, 0xf79b, 0xdabb, 0x1, 0x0);
        gbc.writeMem(0x199b, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5d5b);
        EXPECT(gbc.pc(), 0x199d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 039E
        gbc.setState(0x7be6, 0x219, 0x6240, 0xd136, 0xca1b, 0xad12, 0x0, 0x0);
        gbc.writeMem(0x7be6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x219);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 039F
        gbc.setState(0x83eb, 0x27e3, 0xd660, 0xd5b2, 0x4ade, 0x1b26, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x27e3);
        EXPECT(gbc.pc(), 0x83ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83eb), 0xcb);
        EXPECT(gbc.readMem(0x83ec), 0x33);
        // CB 33 03A0
        gbc.setState(0x9cb4, 0xbde9, 0x1890, 0xf8c8, 0x797b, 0x1801, 0x0, 0x0);
        gbc.writeMem(0x9cb4, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbde9);
        EXPECT(gbc.pc(), 0x9cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb4), 0xcb);
        EXPECT(gbc.readMem(0x9cb5), 0x33);
        // CB 33 03A1
        gbc.setState(0x5f10, 0xca6d, 0x2fe0, 0xe7dc, 0x8d2c, 0x609c, 0x1, 0x1);
        gbc.writeMem(0x5f10, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xca6d);
        EXPECT(gbc.pc(), 0x5f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03A2
        gbc.setState(0x4bc8, 0x74f5, 0xf400, 0xd780, 0x8542, 0xeaf0, 0x1, 0x0);
        gbc.writeMem(0x4bc8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x74f5);
        EXPECT(gbc.pc(), 0x4bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03A4
        gbc.setState(0x12f5, 0x6c1b, 0x3210, 0x54d5, 0xbccc, 0x9d38, 0x1, 0x1);
        gbc.writeMem(0x12f5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6c1b);
        EXPECT(gbc.pc(), 0x12f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03A6
        gbc.setState(0x8ece, 0xb318, 0xda00, 0xd43a, 0xf3de, 0x14ca, 0x1, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb318);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0x33);
        // CB 33 03A7
        gbc.setState(0xb459, 0xd21f, 0xc790, 0xa6a5, 0x15d, 0x9328, 0x1, 0x1);
        gbc.writeMem(0xb459, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0xb45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb459), 0xcb);
        EXPECT(gbc.readMem(0xb45a), 0x33);
        // CB 33 03A8
        gbc.setState(0x4404, 0xeb2b, 0x33e0, 0xb867, 0x72dc, 0x542a, 0x0, 0x1);
        gbc.writeMem(0x4404, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeb2b);
        EXPECT(gbc.pc(), 0x4406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03A9
        gbc.setState(0x193d, 0x228f, 0xbfc0, 0x67f2, 0xcec1, 0xf0ba, 0x1, 0x0);
        gbc.writeMem(0x193d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x228f);
        EXPECT(gbc.pc(), 0x193f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03AA
        gbc.setState(0x6464, 0x5a84, 0x1e00, 0x67a8, 0xf3bf, 0x6006, 0x1, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5a84);
        EXPECT(gbc.pc(), 0x6466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03AB
        gbc.setState(0x5ad5, 0x5332, 0x90f0, 0x143f, 0x451f, 0xe18f, 0x1, 0x0);
        gbc.writeMem(0x5ad5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5332);
        EXPECT(gbc.pc(), 0x5ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03AC
        gbc.setState(0x74b8, 0x8277, 0x2760, 0x5af3, 0xd884, 0x1e4b, 0x1, 0x0);
        gbc.writeMem(0x74b8, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8277);
        EXPECT(gbc.pc(), 0x74ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03AD
        gbc.setState(0x11b5, 0x6a5a, 0xba40, 0x5b39, 0xa387, 0xd1b3, 0x1, 0x1);
        gbc.writeMem(0x11b5, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6a5a);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03AE
        gbc.setState(0xd77e, 0x9072, 0x7870, 0x4ac4, 0x15c4, 0xec07, 0x0, 0x0);
        gbc.writeMem(0xd77e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9072);
        EXPECT(gbc.pc(), 0xd780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77e), 0xcb);
        EXPECT(gbc.readMem(0xd77f), 0x33);
        // CB 33 03AF
        gbc.setState(0x5643, 0x4eb1, 0xc270, 0x4513, 0x67e8, 0xe0b, 0x1, 0x1);
        gbc.writeMem(0x5643, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4eb1);
        EXPECT(gbc.pc(), 0x5645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03B0
        gbc.setState(0xd946, 0xe541, 0x5cf0, 0x1ee5, 0xa30c, 0xb1ea, 0x0, 0x1);
        gbc.writeMem(0xd946, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe541);
        EXPECT(gbc.pc(), 0xd948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd946), 0xcb);
        EXPECT(gbc.readMem(0xd947), 0x33);
        // CB 33 03B1
        gbc.setState(0x4c44, 0x835d, 0x5010, 0xf389, 0x2f06, 0xec5c, 0x1, 0x1);
        gbc.writeMem(0x4c44, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x835d);
        EXPECT(gbc.pc(), 0x4c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03B2
        gbc.setState(0xc0c7, 0x664, 0x8d40, 0x9af0, 0xd0b7, 0x21f3, 0x0, 0x1);
        gbc.writeMem(0xc0c7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x664);
        EXPECT(gbc.pc(), 0xc0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c7), 0xcb);
        EXPECT(gbc.readMem(0xc0c8), 0x33);
        // CB 33 03B3
        gbc.setState(0x1e6d, 0x78c9, 0x9f50, 0x772a, 0x9e69, 0x1f53, 0x1, 0x0);
        gbc.writeMem(0x1e6d, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x78c9);
        EXPECT(gbc.pc(), 0x1e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03B4
        gbc.setState(0xa0ca, 0xdd69, 0xb340, 0xebce, 0x833d, 0x2bc9, 0x0, 0x0);
        gbc.writeMem(0xa0ca, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdd69);
        EXPECT(gbc.pc(), 0xa0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ca), 0xcb);
        EXPECT(gbc.readMem(0xa0cb), 0x33);
        // CB 33 03B5
        gbc.setState(0x7f8c, 0xe22a, 0x6e10, 0x7bc3, 0xf89b, 0x4e2c, 0x1, 0x0);
        gbc.writeMem(0x7f8c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe22a);
        EXPECT(gbc.pc(), 0x7f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03B6
        gbc.setState(0xbf08, 0x26c8, 0x41f0, 0xb5a4, 0x7651, 0xb88d, 0x0, 0x1);
        gbc.writeMem(0xbf08, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x26c8);
        EXPECT(gbc.pc(), 0xbf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf08), 0xcb);
        EXPECT(gbc.readMem(0xbf09), 0x33);
        // CB 33 03B7
        gbc.setState(0xe516, 0xc73d, 0xefc0, 0x3cfc, 0xc9e0, 0x1721, 0x1, 0x0);
        gbc.writeMem(0xe516, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc73d);
        EXPECT(gbc.pc(), 0xe518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe516), 0xcb);
        EXPECT(gbc.readMem(0xe517), 0x33);
        // CB 33 03B8
        gbc.setState(0xa39, 0x16f8, 0xc830, 0xe02d, 0xcc31, 0xc40d, 0x0, 0x1);
        gbc.writeMem(0xa39, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x16f8);
        EXPECT(gbc.pc(), 0xa3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03B9
        gbc.setState(0x4cdd, 0x5e00, 0xbc90, 0x7eab, 0x3cb0, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x4cdd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e00);
        EXPECT(gbc.pc(), 0x4cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03BA
        gbc.setState(0xab16, 0xfbf3, 0x31a0, 0x3597, 0x6280, 0x182, 0x0, 0x1);
        gbc.writeMem(0xab16, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfbf3);
        EXPECT(gbc.pc(), 0xab18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab16), 0xcb);
        EXPECT(gbc.readMem(0xab17), 0x33);
        // CB 33 03BB
        gbc.setState(0x80e, 0x3979, 0x5a40, 0x38c, 0x3b5a, 0x1a20, 0x1, 0x0);
        gbc.writeMem(0x80e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3979);
        EXPECT(gbc.pc(), 0x810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03BD
        gbc.setState(0x6fd, 0x1b21, 0x3e40, 0xfbd7, 0xed9c, 0x94e3, 0x0, 0x0);
        gbc.writeMem(0x6fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1b21);
        EXPECT(gbc.pc(), 0x6ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03BE
        gbc.setState(0xc60e, 0x9726, 0x2800, 0xee4, 0x78ab, 0x3d9c, 0x0, 0x0);
        gbc.writeMem(0xc60e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9726);
        EXPECT(gbc.pc(), 0xc610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60e), 0xcb);
        EXPECT(gbc.readMem(0xc60f), 0x33);
        // CB 33 03BF
        gbc.setState(0x3ebf, 0xb35b, 0x84b0, 0x1306, 0x7263, 0xe7c8, 0x0, 0x1);
        gbc.writeMem(0x3ebf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb35b);
        EXPECT(gbc.pc(), 0x3ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C0
        gbc.setState(0x2238, 0x9a99, 0xa50, 0x35d0, 0x1c47, 0x951e, 0x0, 0x0);
        gbc.writeMem(0x2238, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9a99);
        EXPECT(gbc.pc(), 0x223a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C1
        gbc.setState(0xd102, 0x75d3, 0xe2f0, 0xe69c, 0xc93, 0x1baf, 0x1, 0x1);
        gbc.writeMem(0xd102, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x75d3);
        EXPECT(gbc.pc(), 0xd104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd102), 0xcb);
        EXPECT(gbc.readMem(0xd103), 0x33);
        // CB 33 03C2
        gbc.setState(0x99d6, 0x263a, 0xb9d0, 0x8dd6, 0xad08, 0x4df6, 0x1, 0x0);
        gbc.writeMem(0x99d6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x263a);
        EXPECT(gbc.pc(), 0x99d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d6), 0xcb);
        EXPECT(gbc.readMem(0x99d7), 0x33);
        // CB 33 03C4
        gbc.setState(0x1bb6, 0x1c75, 0xd20, 0x9f3b, 0x4fcc, 0xb426, 0x1, 0x1);
        gbc.writeMem(0x1bb6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1c75);
        EXPECT(gbc.pc(), 0x1bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C5
        gbc.setState(0x5ce1, 0x5866, 0xcb0, 0xeceb, 0xd065, 0xe0c6, 0x1, 0x0);
        gbc.writeMem(0x5ce1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5866);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C6
        gbc.setState(0x4d12, 0x89a1, 0xeee0, 0xf651, 0x32b0, 0x4d1a, 0x0, 0x1);
        gbc.writeMem(0x4d12, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x89a1);
        EXPECT(gbc.pc(), 0x4d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C7
        gbc.setState(0x3af, 0xf3f5, 0x67c0, 0x430e, 0x9462, 0x6c5e, 0x0, 0x0);
        gbc.writeMem(0x3af, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf3f5);
        EXPECT(gbc.pc(), 0x3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03C8
        gbc.setState(0xad7a, 0xaac1, 0xaf80, 0x28d9, 0x4ad0, 0xfb76, 0x0, 0x0);
        gbc.writeMem(0xad7a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xaac1);
        EXPECT(gbc.pc(), 0xad7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7a), 0xcb);
        EXPECT(gbc.readMem(0xad7b), 0x33);
        // CB 33 03C9
        gbc.setState(0x4eff, 0x1d62, 0xbba0, 0xcaf1, 0xda4c, 0xe4ec, 0x0, 0x0);
        gbc.writeMem(0x4eff, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1d62);
        EXPECT(gbc.pc(), 0x4f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03CC
        gbc.setState(0xdf93, 0xc983, 0xfd40, 0xde15, 0x5ad7, 0x7a68, 0x0, 0x1);
        gbc.writeMem(0xdf93, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0xdf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf93), 0xcb);
        EXPECT(gbc.readMem(0xdf94), 0x33);
        // CB 33 03CD
        gbc.setState(0x654c, 0xeef2, 0xbaf0, 0x5163, 0xc1be, 0x685c, 0x1, 0x0);
        gbc.writeMem(0x654c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xeef2);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03CE
        gbc.setState(0x53c1, 0x546b, 0xad20, 0x5486, 0xb432, 0x1da1, 0x0, 0x0);
        gbc.writeMem(0x53c1, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x546b);
        EXPECT(gbc.pc(), 0x53c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03CF
        gbc.setState(0xbc05, 0xc654, 0xb680, 0x4a33, 0xbfe, 0x8be, 0x1, 0x0);
        gbc.writeMem(0xbc05, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0xbc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc05), 0xcb);
        EXPECT(gbc.readMem(0xbc06), 0x33);
        // CB 33 03D0
        gbc.setState(0x4114, 0x5fbe, 0x50b0, 0x2138, 0x7ff9, 0x8cf4, 0x0, 0x1);
        gbc.writeMem(0x4114, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5fbe);
        EXPECT(gbc.pc(), 0x4116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D1
        gbc.setState(0xb1fd, 0xc459, 0x9f60, 0xa067, 0x622e, 0x4646, 0x0, 0x0);
        gbc.writeMem(0xb1fd, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc459);
        EXPECT(gbc.pc(), 0xb1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fd), 0xcb);
        EXPECT(gbc.readMem(0xb1fe), 0x33);
        // CB 33 03D2
        gbc.setState(0x3449, 0x6781, 0x7000, 0x73, 0x6e40, 0xa9c1, 0x1, 0x0);
        gbc.writeMem(0x3449, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6781);
        EXPECT(gbc.pc(), 0x344b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D3
        gbc.setState(0xb500, 0x6fe4, 0xb1d0, 0x6a1, 0x1168, 0x81ad, 0x0, 0x1);
        gbc.writeMem(0xb500, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6fe4);
        EXPECT(gbc.pc(), 0xb502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb500), 0xcb);
        EXPECT(gbc.readMem(0xb501), 0x33);
        // CB 33 03D4
        gbc.setState(0x5e76, 0xe7e1, 0x3260, 0x9c64, 0xd22f, 0x2af4, 0x1, 0x0);
        gbc.writeMem(0x5e76, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe7e1);
        EXPECT(gbc.pc(), 0x5e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D5
        gbc.setState(0x21cf, 0xa019, 0xf6b0, 0x2bec, 0x3e19, 0x1ee5, 0x1, 0x0);
        gbc.writeMem(0x21cf, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa019);
        EXPECT(gbc.pc(), 0x21d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D6
        gbc.setState(0x36e6, 0x660e, 0x3200, 0x1927, 0x120, 0x9f44, 0x1, 0x0);
        gbc.writeMem(0x36e6, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x660e);
        EXPECT(gbc.pc(), 0x36e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D7
        gbc.setState(0x6c17, 0x9e6d, 0x9970, 0x8a34, 0xad5e, 0x95ed, 0x0, 0x0);
        gbc.writeMem(0x6c17, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9e6d);
        EXPECT(gbc.pc(), 0x6c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D8
        gbc.setState(0x852, 0x939d, 0xa1d0, 0x62e3, 0x6c90, 0x1764, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x939d);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03D9
        gbc.setState(0x1603, 0x82e3, 0x4930, 0x84b8, 0xbd50, 0x667f, 0x0, 0x1);
        gbc.writeMem(0x1603, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x82e3);
        EXPECT(gbc.pc(), 0x1605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03DA
        gbc.setState(0xcab9, 0x88fb, 0xf990, 0x39ef, 0x6c60, 0xeb95, 0x0, 0x1);
        gbc.writeMem(0xcab9, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x88fb);
        EXPECT(gbc.pc(), 0xcabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab9), 0xcb);
        EXPECT(gbc.readMem(0xcaba), 0x33);
        // CB 33 03DB
        gbc.setState(0xbf4c, 0x2a5a, 0x8b60, 0x5812, 0x2256, 0x5f97, 0x0, 0x0);
        gbc.writeMem(0xbf4c, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2a5a);
        EXPECT(gbc.pc(), 0xbf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf4c), 0xcb);
        EXPECT(gbc.readMem(0xbf4d), 0x33);
        // CB 33 03DC
        gbc.setState(0x6f2f, 0x2c8f, 0x4720, 0x42fa, 0xfbaa, 0x7330, 0x0, 0x1);
        gbc.writeMem(0x6f2f, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2c8f);
        EXPECT(gbc.pc(), 0x6f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03DD
        gbc.setState(0x5490, 0xd9f5, 0xa7b0, 0x266c, 0xe81, 0x6b41, 0x1, 0x0);
        gbc.writeMem(0x5490, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd9f5);
        EXPECT(gbc.pc(), 0x5492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03DF
        gbc.setState(0xb0b7, 0x5501, 0x34c0, 0x826f, 0x5172, 0x4d74, 0x1, 0x0);
        gbc.writeMem(0xb0b7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5501);
        EXPECT(gbc.pc(), 0xb0b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b7), 0xcb);
        EXPECT(gbc.readMem(0xb0b8), 0x33);
        // CB 33 03E0
        gbc.setState(0x883e, 0x7d46, 0x9910, 0x900, 0x80ee, 0x707f, 0x1, 0x1);
        gbc.writeMem(0x883e, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7d46);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0x33);
        // CB 33 03E1
        gbc.setState(0x756, 0x8885, 0x64c0, 0x7a3c, 0x99e, 0x5324, 0x1, 0x1);
        gbc.writeMem(0x756, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8885);
        EXPECT(gbc.pc(), 0x758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03E3
        gbc.setState(0xcb7, 0x33c3, 0x4850, 0x3bf0, 0x257d, 0xe24c, 0x1, 0x1);
        gbc.writeMem(0xcb7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x33c3);
        EXPECT(gbc.pc(), 0xcb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03E5
        gbc.setState(0xcc7, 0xc444, 0x4a70, 0x3501, 0x5cf, 0x50c5, 0x0, 0x1);
        gbc.writeMem(0xcc7, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0xcc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03E6
        gbc.setState(0x667, 0x3312, 0x1150, 0x2631, 0xc87e, 0x5a85, 0x0, 0x0);
        gbc.writeMem(0x667, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3312);
        EXPECT(gbc.pc(), 0x669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 33 03E7
        gbc.setState(0x439a, 0xbf64, 0xec0, 0x409d, 0x2432, 0xfa1d, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xcb, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbf64);
        EXPECT(gbc.pc(), 0x439c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
