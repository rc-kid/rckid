    TEST(gbcemu, opcode_cb_fe) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FE 0001
        gbc.setState(0x7162, 0x33f0, 0x73e0, 0xed9, 0xdb89, 0xd0cc, 0x0, 0x0);
        gbc.writeMem(0x7162, { 0xcb, 0xfe });
        gbc.writeMem(0xd0cc, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x33f0);
        EXPECT(gbc.pc(), 0x7164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cc), 0xfe);
        // CB FE 0002
        gbc.setState(0x797a, 0x711, 0xc1c0, 0x80bb, 0x8045, 0x171b, 0x0, 0x1);
        gbc.writeMem(0x171b, { 0xcc });
        gbc.writeMem(0x797a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0x797c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0003
        gbc.setState(0x4b86, 0x26f6, 0xa110, 0xbf1, 0xbcdc, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0xfe });
        gbc.writeMem(0x6d8d, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0004
        gbc.setState(0xa841, 0x2771, 0x5640, 0x5ea, 0xd788, 0x1141, 0x1, 0x0);
        gbc.writeMem(0x1141, { 0xa3 });
        gbc.writeMem(0xa841, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2771);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa841), 0xcb);
        EXPECT(gbc.readMem(0xa842), 0xfe);
        // CB FE 0006
        gbc.setState(0x597d, 0x53fd, 0x4cb0, 0x8500, 0x4eaf, 0xfb07, 0x1, 0x0);
        gbc.writeMem(0x597d, { 0xcb, 0xfe });
        gbc.writeMem(0xfb07, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x53fd);
        EXPECT(gbc.pc(), 0x597f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb07), 0xfa);
        // CB FE 0007
        gbc.setState(0x94e9, 0xd47f, 0xa670, 0x225a, 0xcc80, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x94e9, { 0xcb, 0xfe });
        gbc.writeMem(0xc802, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd47f);
        EXPECT(gbc.pc(), 0x94eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e9), 0xcb);
        EXPECT(gbc.readMem(0x94ea), 0xfe);
        EXPECT(gbc.readMem(0xc802), 0xa2);
        // CB FE 000B
        gbc.setState(0x851d, 0xe02e, 0xcc60, 0x9ca, 0xe43d, 0x507b, 0x0, 0x1);
        gbc.writeMem(0x507b, { 0xfe });
        gbc.writeMem(0x851d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe02e);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0xfe);
        // CB FE 000D
        gbc.setState(0xa601, 0xb0f0, 0x12d0, 0x1688, 0x709d, 0x7f4f, 0x0, 0x0);
        gbc.writeMem(0x7f4f, { 0xd2 });
        gbc.writeMem(0xa601, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb0f0);
        EXPECT(gbc.pc(), 0xa603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa601), 0xcb);
        EXPECT(gbc.readMem(0xa602), 0xfe);
        // CB FE 000E
        gbc.setState(0x3fb2, 0xff1a, 0x7f60, 0x981c, 0x3b72, 0x1049, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0xa1 });
        gbc.writeMem(0x3fb2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xff1a);
        EXPECT(gbc.pc(), 0x3fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 000F
        gbc.setState(0xaee, 0x3ebf, 0x6270, 0x24a9, 0xb423, 0xbbb6, 0x0, 0x0);
        gbc.writeMem(0xaee, { 0xcb, 0xfe });
        gbc.writeMem(0xbbb6, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3ebf);
        EXPECT(gbc.pc(), 0xaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0xbe);
        // CB FE 0011
        gbc.setState(0x8f0e, 0x1229, 0xf080, 0x8dcc, 0x24d4, 0x968c, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xfe });
        gbc.writeMem(0x968c, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1229);
        EXPECT(gbc.pc(), 0x8f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0e), 0xcb);
        EXPECT(gbc.readMem(0x8f0f), 0xfe);
        EXPECT(gbc.readMem(0x968c), 0x8b);
        // CB FE 0012
        gbc.setState(0x4d10, 0x5cf, 0x35c0, 0xcd63, 0xa750, 0x6872, 0x1, 0x1);
        gbc.writeMem(0x4d10, { 0xcb, 0xfe });
        gbc.writeMem(0x6872, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5cf);
        EXPECT(gbc.pc(), 0x4d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0013
        gbc.setState(0x95cd, 0xd3f7, 0x80c0, 0xeb39, 0x3c73, 0x91ba, 0x0, 0x1);
        gbc.writeMem(0x91ba, { 0x50 });
        gbc.writeMem(0x95cd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd3f7);
        EXPECT(gbc.pc(), 0x95cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ba), 0xd0);
        EXPECT(gbc.readMem(0x95cd), 0xcb);
        EXPECT(gbc.readMem(0x95ce), 0xfe);
        // CB FE 0014
        gbc.setState(0x6526, 0xc2c8, 0x37b0, 0xfed6, 0xa8b5, 0x34ff, 0x0, 0x1);
        gbc.writeMem(0x34ff, { 0xda });
        gbc.writeMem(0x6526, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc2c8);
        EXPECT(gbc.pc(), 0x6528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0015
        gbc.setState(0x8cc6, 0x46af, 0x17f0, 0x2fa7, 0x2fb6, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0x8cc6, { 0xcb, 0xfe });
        gbc.writeMem(0xfdf9, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x46af);
        EXPECT(gbc.pc(), 0x8cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc6), 0xcb);
        EXPECT(gbc.readMem(0x8cc7), 0xfe);
        EXPECT(gbc.readMem(0xfdf9), 0xf4);
        // CB FE 0016
        gbc.setState(0x48b9, 0x481a, 0x7000, 0x2714, 0xdc9e, 0xafa, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0xdc });
        gbc.writeMem(0x48b9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x481a);
        EXPECT(gbc.pc(), 0x48bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0017
        gbc.setState(0x59ca, 0x9179, 0x9fa0, 0xdcd, 0x648a, 0x1c03, 0x0, 0x0);
        gbc.writeMem(0x1c03, { 0xde });
        gbc.writeMem(0x59ca, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9179);
        EXPECT(gbc.pc(), 0x59cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0018
        gbc.setState(0x7a91, 0x1ff0, 0x5780, 0xa3d5, 0x82e9, 0x278d, 0x0, 0x0);
        gbc.writeMem(0x278d, { 0x83 });
        gbc.writeMem(0x7a91, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1ff0);
        EXPECT(gbc.pc(), 0x7a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0019
        gbc.setState(0xcfab, 0xfceb, 0xcc80, 0x9a04, 0x7e35, 0xcbe5, 0x1, 0x0);
        gbc.writeMem(0xcbe5, { 0xcd });
        gbc.writeMem(0xcfab, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfceb);
        EXPECT(gbc.pc(), 0xcfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe5), 0xcd);
        EXPECT(gbc.readMem(0xcfab), 0xcb);
        EXPECT(gbc.readMem(0xcfac), 0xfe);
        // CB FE 001B
        gbc.setState(0x89ed, 0x71e7, 0x7cc0, 0xf1c3, 0x3d87, 0xc085, 0x0, 0x0);
        gbc.writeMem(0x89ed, { 0xcb, 0xfe });
        gbc.writeMem(0xc085, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x71e7);
        EXPECT(gbc.pc(), 0x89ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ed), 0xcb);
        EXPECT(gbc.readMem(0x89ee), 0xfe);
        EXPECT(gbc.readMem(0xc085), 0xc3);
        // CB FE 001E
        gbc.setState(0x3727, 0x30fb, 0x77a0, 0x83be, 0xece4, 0x8b52, 0x0, 0x1);
        gbc.writeMem(0x3727, { 0xcb, 0xfe });
        gbc.writeMem(0x8b52, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x30fb);
        EXPECT(gbc.pc(), 0x3729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b52), 0x8a);
        // CB FE 0021
        gbc.setState(0xb3f4, 0xdcd5, 0xd480, 0x86c4, 0x99, 0xff2d, 0x1, 0x1);
        gbc.writeMem(0xb3f4, { 0xcb, 0xfe });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdcd5);
        EXPECT(gbc.pc(), 0xb3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f4), 0xcb);
        EXPECT(gbc.readMem(0xb3f5), 0xfe);
        EXPECT(gbc.readMem(0xff2d), 0xe0);
        // CB FE 0022
        gbc.setState(0xbe91, 0x6179, 0x8230, 0x9ee5, 0xfb4, 0xd0de, 0x1, 0x1);
        gbc.writeMem(0xbe91, { 0xcb, 0xfe });
        gbc.writeMem(0xd0de, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6179);
        EXPECT(gbc.pc(), 0xbe93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe91), 0xcb);
        EXPECT(gbc.readMem(0xbe92), 0xfe);
        EXPECT(gbc.readMem(0xd0de), 0xcf);
        // CB FE 0024
        gbc.setState(0x3b88, 0x6f33, 0x8b40, 0xe325, 0x4d82, 0xf21f, 0x1, 0x0);
        gbc.writeMem(0x3b88, { 0xcb, 0xfe });
        gbc.writeMem(0xf21f, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6f33);
        EXPECT(gbc.pc(), 0x3b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf21f), 0xd8);
        // CB FE 0026
        gbc.setState(0x5f7e, 0x4432, 0x6810, 0x7785, 0xf28d, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0x5f7e, { 0xcb, 0xfe });
        gbc.writeMem(0xd7c4, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4432);
        EXPECT(gbc.pc(), 0x5f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c4), 0x8a);
        // CB FE 0027
        gbc.setState(0xe302, 0x8af1, 0x5940, 0xaee, 0xd3d, 0x2465, 0x0, 0x1);
        gbc.writeMem(0x2465, { 0xc2 });
        gbc.writeMem(0xe302, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8af1);
        EXPECT(gbc.pc(), 0xe304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe302), 0xcb);
        EXPECT(gbc.readMem(0xe303), 0xfe);
        // CB FE 0028
        gbc.setState(0xd803, 0x9df, 0x41a0, 0xfb3b, 0x3ac0, 0xf5a1, 0x1, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xfe });
        gbc.writeMem(0xf5a1, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9df);
        EXPECT(gbc.pc(), 0xd805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd803), 0xcb);
        EXPECT(gbc.readMem(0xd804), 0xfe);
        EXPECT(gbc.readMem(0xf5a1), 0xdf);
        // CB FE 0029
        gbc.setState(0x79b5, 0xd7a5, 0x6120, 0xb3cf, 0x58ff, 0xc7c5, 0x0, 0x0);
        gbc.writeMem(0x79b5, { 0xcb, 0xfe });
        gbc.writeMem(0xc7c5, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd7a5);
        EXPECT(gbc.pc(), 0x79b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c5), 0xdf);
        // CB FE 002E
        gbc.setState(0xe6ec, 0xd975, 0xc790, 0x63fa, 0xf081, 0x7d45, 0x0, 0x0);
        gbc.writeMem(0x7d45, { 0xf6 });
        gbc.writeMem(0xe6ec, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd975);
        EXPECT(gbc.pc(), 0xe6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ec), 0xcb);
        EXPECT(gbc.readMem(0xe6ed), 0xfe);
        // CB FE 002F
        gbc.setState(0x45c5, 0x2e91, 0x4620, 0xf9b3, 0xbacf, 0xad68, 0x0, 0x0);
        gbc.writeMem(0x45c5, { 0xcb, 0xfe });
        gbc.writeMem(0xad68, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2e91);
        EXPECT(gbc.pc(), 0x45c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad68), 0x91);
        // CB FE 0030
        gbc.setState(0x4758, 0xf6f2, 0x180, 0x7ce6, 0x2b69, 0x1e6a, 0x1, 0x0);
        gbc.writeMem(0x1e6a, { 0xeb });
        gbc.writeMem(0x4758, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf6f2);
        EXPECT(gbc.pc(), 0x475a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0033
        gbc.setState(0xd984, 0xc3c4, 0x6940, 0xe49d, 0xbaa2, 0xc965, 0x0, 0x0);
        gbc.writeMem(0xc965, { 0x80 });
        gbc.writeMem(0xd984, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc3c4);
        EXPECT(gbc.pc(), 0xd986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc965), 0x80);
        EXPECT(gbc.readMem(0xd984), 0xcb);
        EXPECT(gbc.readMem(0xd985), 0xfe);
        // CB FE 0034
        gbc.setState(0x3474, 0x647c, 0x2af0, 0xa952, 0x933b, 0xc8f8, 0x1, 0x0);
        gbc.writeMem(0x3474, { 0xcb, 0xfe });
        gbc.writeMem(0xc8f8, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x647c);
        EXPECT(gbc.pc(), 0x3476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f8), 0xd2);
        // CB FE 0035
        gbc.setState(0xe4ff, 0x113, 0xc820, 0x6dc1, 0x6205, 0xe514, 0x0, 0x1);
        gbc.writeMem(0xe4ff, { 0xcb, 0xfe });
        gbc.writeMem(0xe514, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x113);
        EXPECT(gbc.pc(), 0xe501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ff), 0xcb);
        EXPECT(gbc.readMem(0xe500), 0xfe);
        EXPECT(gbc.readMem(0xe514), 0xd6);
        // CB FE 0036
        gbc.setState(0xa24e, 0x16e2, 0x6080, 0x59a6, 0xd3c0, 0x8dea, 0x1, 0x1);
        gbc.writeMem(0x8dea, { 0x22 });
        gbc.writeMem(0xa24e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x16e2);
        EXPECT(gbc.pc(), 0xa250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dea), 0xa2);
        EXPECT(gbc.readMem(0xa24e), 0xcb);
        EXPECT(gbc.readMem(0xa24f), 0xfe);
        // CB FE 0038
        gbc.setState(0xc044, 0xa5c6, 0x2c60, 0x8520, 0xc806, 0xf5ca, 0x1, 0x1);
        gbc.writeMem(0xc044, { 0xcb, 0xfe });
        gbc.writeMem(0xf5ca, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa5c6);
        EXPECT(gbc.pc(), 0xc046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc044), 0xcb);
        EXPECT(gbc.readMem(0xc045), 0xfe);
        EXPECT(gbc.readMem(0xf5ca), 0x8f);
        // CB FE 003B
        gbc.setState(0x7c9a, 0x9e9, 0x5560, 0xcde3, 0x5e01, 0x2837, 0x1, 0x1);
        gbc.writeMem(0x2837, { 0xb7 });
        gbc.writeMem(0x7c9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9e9);
        EXPECT(gbc.pc(), 0x7c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 003C
        gbc.setState(0x8e0a, 0x903a, 0x40d0, 0x5712, 0x9631, 0x2b02, 0x0, 0x1);
        gbc.writeMem(0x2b02, { 0xcc });
        gbc.writeMem(0x8e0a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x903a);
        EXPECT(gbc.pc(), 0x8e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0a), 0xcb);
        EXPECT(gbc.readMem(0x8e0b), 0xfe);
        // CB FE 003D
        gbc.setState(0x4614, 0x6f51, 0xbcb0, 0x29f2, 0x9445, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0x4614, { 0xcb, 0xfe });
        gbc.writeMem(0xce6c, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6f51);
        EXPECT(gbc.pc(), 0x4616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6c), 0xf4);
        // CB FE 003E
        gbc.setState(0xac6a, 0xceb8, 0xca30, 0xa648, 0x4004, 0xd871, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0xcb, 0xfe });
        gbc.writeMem(0xd871, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xceb8);
        EXPECT(gbc.pc(), 0xac6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6a), 0xcb);
        EXPECT(gbc.readMem(0xac6b), 0xfe);
        EXPECT(gbc.readMem(0xd871), 0x8a);
        // CB FE 0040
        gbc.setState(0xbaae, 0xa1fa, 0x6120, 0xc8a3, 0xc4a9, 0x89cf, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0xe2 });
        gbc.writeMem(0xbaae, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa1fa);
        EXPECT(gbc.pc(), 0xbab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cf), 0xe2);
        EXPECT(gbc.readMem(0xbaae), 0xcb);
        EXPECT(gbc.readMem(0xbaaf), 0xfe);
        // CB FE 0041
        gbc.setState(0xaf55, 0xb64a, 0xa810, 0x1c9d, 0x5f9, 0xfe01, 0x1, 0x0);
        gbc.writeMem(0xaf55, { 0xcb, 0xfe });
        gbc.writeMem(0xfe01, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb64a);
        EXPECT(gbc.pc(), 0xaf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf55), 0xcb);
        EXPECT(gbc.readMem(0xaf56), 0xfe);
        EXPECT(gbc.readMem(0xfe01), 0xe4);
        // CB FE 0044
        gbc.setState(0x80e7, 0x111e, 0x5e30, 0xd4, 0x9472, 0x4c6c, 0x1, 0x1);
        gbc.writeMem(0x4c6c, { 0xcb });
        gbc.writeMem(0x80e7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x111e);
        EXPECT(gbc.pc(), 0x80e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e7), 0xcb);
        EXPECT(gbc.readMem(0x80e8), 0xfe);
        // CB FE 0045
        gbc.setState(0x7b28, 0x9752, 0x6600, 0xe2, 0x76cc, 0x9487, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xfe });
        gbc.writeMem(0x9487, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9752);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9487), 0x9b);
        // CB FE 0047
        gbc.setState(0x5d7b, 0x79b5, 0xb40, 0x1cdc, 0x5592, 0x46d4, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0x83 });
        gbc.writeMem(0x5d7b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x79b5);
        EXPECT(gbc.pc(), 0x5d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0048
        gbc.setState(0xe433, 0xca15, 0xc840, 0xea90, 0xf854, 0x2d0, 0x0, 0x0);
        gbc.writeMem(0x2d0, { 0x9e });
        gbc.writeMem(0xe433, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xca15);
        EXPECT(gbc.pc(), 0xe435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe433), 0xcb);
        EXPECT(gbc.readMem(0xe434), 0xfe);
        // CB FE 004A
        gbc.setState(0xb69b, 0xb26, 0x7a40, 0x904b, 0xf490, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0xcb, 0xfe });
        gbc.writeMem(0xd6fc, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb26);
        EXPECT(gbc.pc(), 0xb69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69b), 0xcb);
        EXPECT(gbc.readMem(0xb69c), 0xfe);
        EXPECT(gbc.readMem(0xd6fc), 0xfb);
        // CB FE 004B
        gbc.setState(0x45c5, 0x2b24, 0xbfe0, 0xbc61, 0x38f1, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0x45c5, { 0xcb, 0xfe });
        gbc.writeMem(0xdd06, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2b24);
        EXPECT(gbc.pc(), 0x45c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd06), 0xf7);
        // CB FE 004D
        gbc.setState(0x25af, 0xbd7, 0x2f20, 0x8297, 0x6cbc, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x25af, { 0xcb, 0xfe });
        gbc.writeMem(0x8522, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbd7);
        EXPECT(gbc.pc(), 0x25b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8522), 0x83);
        // CB FE 004E
        gbc.setState(0x9e10, 0x9322, 0x1580, 0xf66b, 0xe75c, 0xc0ab, 0x0, 0x1);
        gbc.writeMem(0x9e10, { 0xcb, 0xfe });
        gbc.writeMem(0xc0ab, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9322);
        EXPECT(gbc.pc(), 0x9e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e10), 0xcb);
        EXPECT(gbc.readMem(0x9e11), 0xfe);
        EXPECT(gbc.readMem(0xc0ab), 0xae);
        // CB FE 004F
        gbc.setState(0xe0f8, 0x484b, 0x9e50, 0xd371, 0xb1a1, 0xe679, 0x1, 0x0);
        gbc.writeMem(0xe0f8, { 0xcb, 0xfe });
        gbc.writeMem(0xe679, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x484b);
        EXPECT(gbc.pc(), 0xe0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f8), 0xcb);
        EXPECT(gbc.readMem(0xe0f9), 0xfe);
        EXPECT(gbc.readMem(0xe679), 0xb2);
        // CB FE 0050
        gbc.setState(0x2cb, 0x52b9, 0x7e60, 0x30b6, 0x5c1d, 0xf947, 0x1, 0x0);
        gbc.writeMem(0x2cb, { 0xcb, 0xfe });
        gbc.writeMem(0xf947, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x52b9);
        EXPECT(gbc.pc(), 0x2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf947), 0xff);
        // CB FE 0051
        gbc.setState(0x538, 0xe180, 0x6e10, 0x2030, 0x9bd9, 0xb21f, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0xfe });
        gbc.writeMem(0xb21f, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21f), 0xfd);
        // CB FE 0052
        gbc.setState(0x14dc, 0x2159, 0x2360, 0xfb3d, 0x360e, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x14dc, { 0xcb, 0xfe });
        gbc.writeMem(0x942b, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2159);
        EXPECT(gbc.pc(), 0x14de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942b), 0xf7);
        // CB FE 0054
        gbc.setState(0x754d, 0xd1d0, 0x3980, 0xf3cd, 0xe79a, 0xaf0d, 0x1, 0x1);
        gbc.writeMem(0x754d, { 0xcb, 0xfe });
        gbc.writeMem(0xaf0d, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd1d0);
        EXPECT(gbc.pc(), 0x754f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0d), 0xea);
        // CB FE 0056
        gbc.setState(0x610d, 0xf977, 0x55b0, 0x122c, 0x18a6, 0x8bb6, 0x1, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0xfe });
        gbc.writeMem(0x8bb6, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf977);
        EXPECT(gbc.pc(), 0x610f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb6), 0xe5);
        // CB FE 0057
        gbc.setState(0x60dd, 0xba1f, 0xbfa0, 0xff70, 0x647, 0x997a, 0x0, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0xfe });
        gbc.writeMem(0x997a, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xba1f);
        EXPECT(gbc.pc(), 0x60df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997a), 0xaa);
        // CB FE 0059
        gbc.setState(0x779, 0x8d23, 0xc5c0, 0x3bdc, 0xd382, 0x902d, 0x0, 0x1);
        gbc.writeMem(0x779, { 0xcb, 0xfe });
        gbc.writeMem(0x902d, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8d23);
        EXPECT(gbc.pc(), 0x77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902d), 0xf1);
        // CB FE 005A
        gbc.setState(0xc38a, 0xc7f, 0xee90, 0xa769, 0x18b, 0x7684, 0x0, 0x0);
        gbc.writeMem(0x7684, { 0xf8 });
        gbc.writeMem(0xc38a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc7f);
        EXPECT(gbc.pc(), 0xc38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc38a), 0xcb);
        EXPECT(gbc.readMem(0xc38b), 0xfe);
        // CB FE 005B
        gbc.setState(0x8654, 0x813e, 0x5060, 0xc395, 0x4b9f, 0x8a58, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0xcb, 0xfe });
        gbc.writeMem(0x8a58, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0x8656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8654), 0xcb);
        EXPECT(gbc.readMem(0x8655), 0xfe);
        EXPECT(gbc.readMem(0x8a58), 0xc3);
        // CB FE 005C
        gbc.setState(0x3eb1, 0xcaed, 0x8bb0, 0x6be0, 0x8ffb, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0x3eb1, { 0xcb, 0xfe });
        gbc.writeMem(0xdb45, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xcaed);
        EXPECT(gbc.pc(), 0x3eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb45), 0xd0);
        // CB FE 005D
        gbc.setState(0xc4d6, 0x8531, 0xe60, 0x6db2, 0x15be, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0x7d2f, { 0xa0 });
        gbc.writeMem(0xc4d6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8531);
        EXPECT(gbc.pc(), 0xc4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d6), 0xcb);
        EXPECT(gbc.readMem(0xc4d7), 0xfe);
        // CB FE 005E
        gbc.setState(0x6520, 0xc86c, 0x32e0, 0xd138, 0x6e8, 0xa51c, 0x0, 0x0);
        gbc.writeMem(0x6520, { 0xcb, 0xfe });
        gbc.writeMem(0xa51c, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc86c);
        EXPECT(gbc.pc(), 0x6522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51c), 0xdf);
        // CB FE 005F
        gbc.setState(0x969, 0xd9e7, 0x88f0, 0x72f2, 0xc26f, 0x9c9f, 0x1, 0x1);
        gbc.writeMem(0x969, { 0xcb, 0xfe });
        gbc.writeMem(0x9c9f, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd9e7);
        EXPECT(gbc.pc(), 0x96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9f), 0xfe);
        // CB FE 0060
        gbc.setState(0xa88a, 0x427c, 0xfd0, 0x2d8c, 0xb1e8, 0x47f, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xdb });
        gbc.writeMem(0xa88a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x427c);
        EXPECT(gbc.pc(), 0xa88c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88a), 0xcb);
        EXPECT(gbc.readMem(0xa88b), 0xfe);
        // CB FE 0061
        gbc.setState(0x2bb0, 0x8237, 0x3610, 0x980a, 0x1e20, 0xb4a2, 0x1, 0x0);
        gbc.writeMem(0x2bb0, { 0xcb, 0xfe });
        gbc.writeMem(0xb4a2, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8237);
        EXPECT(gbc.pc(), 0x2bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a2), 0xc1);
        // CB FE 0063
        gbc.setState(0x9cb6, 0x505b, 0xee20, 0x883d, 0x959c, 0xdd1e, 0x1, 0x0);
        gbc.writeMem(0x9cb6, { 0xcb, 0xfe });
        gbc.writeMem(0xdd1e, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x505b);
        EXPECT(gbc.pc(), 0x9cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb6), 0xcb);
        EXPECT(gbc.readMem(0x9cb7), 0xfe);
        EXPECT(gbc.readMem(0xdd1e), 0x8b);
        // CB FE 0064
        gbc.setState(0x44f, 0x1514, 0xa2c0, 0xaff8, 0x62fd, 0x5455, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0xfe });
        gbc.writeMem(0x5455, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1514);
        EXPECT(gbc.pc(), 0x451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0065
        gbc.setState(0xe68f, 0x1974, 0xc1c0, 0x6459, 0xcbe3, 0xf96, 0x1, 0x1);
        gbc.writeMem(0xf96, { 0xab });
        gbc.writeMem(0xe68f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1974);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0xfe);
        // CB FE 0066
        gbc.setState(0x3a2f, 0x15a4, 0x20e0, 0x230c, 0x1ee7, 0xe662, 0x1, 0x1);
        gbc.writeMem(0x3a2f, { 0xcb, 0xfe });
        gbc.writeMem(0xe662, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x15a4);
        EXPECT(gbc.pc(), 0x3a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe662), 0x84);
        // CB FE 0067
        gbc.setState(0x9e06, 0x7011, 0x1c40, 0xedad, 0x1782, 0x9df4, 0x1, 0x1);
        gbc.writeMem(0x9df4, { 0x2e });
        gbc.writeMem(0x9e06, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7011);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df4), 0xae);
        EXPECT(gbc.readMem(0x9e06), 0xcb);
        EXPECT(gbc.readMem(0x9e07), 0xfe);
        // CB FE 0068
        gbc.setState(0x6a42, 0xd884, 0x60e0, 0x4cf, 0x6223, 0xfef2, 0x1, 0x1);
        gbc.writeMem(0x6a42, { 0xcb, 0xfe });
        gbc.writeMem(0xfef2, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd884);
        EXPECT(gbc.pc(), 0x6a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfef2), 0xa8);
        // CB FE 0069
        gbc.setState(0xd57, 0xef23, 0x1170, 0x2430, 0xfa91, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0xd57, { 0xcb, 0xfe });
        gbc.writeMem(0xa1cc, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xef23);
        EXPECT(gbc.pc(), 0xd59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1cc), 0xd5);
        // CB FE 006A
        gbc.setState(0x453, 0x2431, 0x85a0, 0x4e7e, 0x7bb5, 0xc569, 0x1, 0x1);
        gbc.writeMem(0x453, { 0xcb, 0xfe });
        gbc.writeMem(0xc569, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0x455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc569), 0xcd);
        // CB FE 006B
        gbc.setState(0x996c, 0x1ff6, 0x220, 0x8e50, 0x488, 0x346a, 0x1, 0x1);
        gbc.writeMem(0x346a, { 0xa8 });
        gbc.writeMem(0x996c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ff6);
        EXPECT(gbc.pc(), 0x996e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996c), 0xcb);
        EXPECT(gbc.readMem(0x996d), 0xfe);
        // CB FE 006C
        gbc.setState(0x336, 0xf724, 0xd520, 0x4083, 0x7f86, 0xbfa3, 0x0, 0x1);
        gbc.writeMem(0x336, { 0xcb, 0xfe });
        gbc.writeMem(0xbfa3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf724);
        EXPECT(gbc.pc(), 0x338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa3), 0x90);
        // CB FE 006D
        gbc.setState(0xceea, 0x1b8b, 0x13c0, 0xe06c, 0xe9af, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0x8d96, { 0x31 });
        gbc.writeMem(0xceea, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1b8b);
        EXPECT(gbc.pc(), 0xceec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d96), 0xb1);
        EXPECT(gbc.readMem(0xceea), 0xcb);
        EXPECT(gbc.readMem(0xceeb), 0xfe);
        // CB FE 006F
        gbc.setState(0xebdb, 0x86f3, 0xbf80, 0xfd90, 0xdd50, 0x291a, 0x1, 0x0);
        gbc.writeMem(0x291a, { 0x8f });
        gbc.writeMem(0xebdb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x86f3);
        EXPECT(gbc.pc(), 0xebdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebdb), 0xcb);
        EXPECT(gbc.readMem(0xebdc), 0xfe);
        // CB FE 0070
        gbc.setState(0x339b, 0x48aa, 0xe8e0, 0x76a4, 0xc03, 0x5c50, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0xcb, 0xfe });
        gbc.writeMem(0x5c50, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x48aa);
        EXPECT(gbc.pc(), 0x339d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0071
        gbc.setState(0x12a6, 0x80f6, 0xa890, 0x4e6f, 0x2af8, 0xb464, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xcb, 0xfe });
        gbc.writeMem(0xb464, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x80f6);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb464), 0xc0);
        // CB FE 0074
        gbc.setState(0x8246, 0xebc, 0xc0, 0x2937, 0x2375, 0xdc02, 0x1, 0x0);
        gbc.writeMem(0x8246, { 0xcb, 0xfe });
        gbc.writeMem(0xdc02, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0x8248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8246), 0xcb);
        EXPECT(gbc.readMem(0x8247), 0xfe);
        EXPECT(gbc.readMem(0xdc02), 0xb7);
        // CB FE 0075
        gbc.setState(0x1034, 0x701, 0xd9d0, 0x6c93, 0x7591, 0xdbab, 0x1, 0x1);
        gbc.writeMem(0x1034, { 0xcb, 0xfe });
        gbc.writeMem(0xdbab, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x701);
        EXPECT(gbc.pc(), 0x1036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbab), 0xc6);
        // CB FE 0076
        gbc.setState(0x7b2f, 0x20f4, 0x5ae0, 0xdef0, 0x689, 0xb533, 0x1, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0xfe });
        gbc.writeMem(0xb533, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x20f4);
        EXPECT(gbc.pc(), 0x7b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb533), 0xe1);
        // CB FE 0079
        gbc.setState(0x2373, 0x19bc, 0x9980, 0xf836, 0x188e, 0x14a9, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0xe8 });
        gbc.writeMem(0x2373, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x19bc);
        EXPECT(gbc.pc(), 0x2375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 007A
        gbc.setState(0xe5bc, 0x7393, 0x6b0, 0x2f26, 0x4c6b, 0xe70a, 0x0, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0xfe });
        gbc.writeMem(0xe70a, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7393);
        EXPECT(gbc.pc(), 0xe5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5bc), 0xcb);
        EXPECT(gbc.readMem(0xe5bd), 0xfe);
        EXPECT(gbc.readMem(0xe70a), 0xbd);
        // CB FE 007B
        gbc.setState(0xae60, 0x44a, 0xef60, 0x757f, 0x9918, 0xf706, 0x1, 0x1);
        gbc.writeMem(0xae60, { 0xcb, 0xfe });
        gbc.writeMem(0xf706, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x44a);
        EXPECT(gbc.pc(), 0xae62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae60), 0xcb);
        EXPECT(gbc.readMem(0xae61), 0xfe);
        EXPECT(gbc.readMem(0xf706), 0xd5);
        // CB FE 007D
        gbc.setState(0xcba5, 0xfcf3, 0x3670, 0x2af2, 0x92c2, 0x9c32, 0x0, 0x0);
        gbc.writeMem(0x9c32, { 0x18 });
        gbc.writeMem(0xcba5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfcf3);
        EXPECT(gbc.pc(), 0xcba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c32), 0x98);
        EXPECT(gbc.readMem(0xcba5), 0xcb);
        EXPECT(gbc.readMem(0xcba6), 0xfe);
        // CB FE 007E
        gbc.setState(0x2041, 0x8a8, 0x2a80, 0xfe68, 0xd413, 0x90dd, 0x1, 0x1);
        gbc.writeMem(0x2041, { 0xcb, 0xfe });
        gbc.writeMem(0x90dd, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8a8);
        EXPECT(gbc.pc(), 0x2043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90dd), 0xc2);
        // CB FE 007F
        gbc.setState(0x5435, 0x7643, 0x4560, 0x496b, 0xd5c3, 0x64cc, 0x0, 0x1);
        gbc.writeMem(0x5435, { 0xcb, 0xfe });
        gbc.writeMem(0x64cc, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7643);
        EXPECT(gbc.pc(), 0x5437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0080
        gbc.setState(0x38cc, 0xaaad, 0x3480, 0x386b, 0xa787, 0xe1f2, 0x1, 0x1);
        gbc.writeMem(0x38cc, { 0xcb, 0xfe });
        gbc.writeMem(0xe1f2, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xaaad);
        EXPECT(gbc.pc(), 0x38ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f2), 0xaa);
        // CB FE 0081
        gbc.setState(0x31fd, 0x1bd0, 0xd810, 0x96af, 0xf2b7, 0x737c, 0x1, 0x1);
        gbc.writeMem(0x31fd, { 0xcb, 0xfe });
        gbc.writeMem(0x737c, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1bd0);
        EXPECT(gbc.pc(), 0x31ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0082
        gbc.setState(0xc73f, 0xa7d4, 0x51d0, 0x9881, 0x69e, 0x179e, 0x0, 0x0);
        gbc.writeMem(0x179e, { 0x88 });
        gbc.writeMem(0xc73f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0xc741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73f), 0xcb);
        EXPECT(gbc.readMem(0xc740), 0xfe);
        // CB FE 0083
        gbc.setState(0xd125, 0x8b0d, 0x9b0, 0xf0b0, 0x8c25, 0xd9ce, 0x0, 0x0);
        gbc.writeMem(0xd125, { 0xcb, 0xfe });
        gbc.writeMem(0xd9ce, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8b0d);
        EXPECT(gbc.pc(), 0xd127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd125), 0xcb);
        EXPECT(gbc.readMem(0xd126), 0xfe);
        EXPECT(gbc.readMem(0xd9ce), 0xab);
        // CB FE 0087
        gbc.setState(0x8ddf, 0x22a4, 0xbc00, 0x9df6, 0xe2e4, 0x5f0d, 0x1, 0x0);
        gbc.writeMem(0x5f0d, { 0xcc });
        gbc.writeMem(0x8ddf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x22a4);
        EXPECT(gbc.pc(), 0x8de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddf), 0xcb);
        EXPECT(gbc.readMem(0x8de0), 0xfe);
        // CB FE 0088
        gbc.setState(0x9878, 0x9ce6, 0x4a20, 0xa574, 0x3b30, 0x70e1, 0x1, 0x0);
        gbc.writeMem(0x70e1, { 0xfb });
        gbc.writeMem(0x9878, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9ce6);
        EXPECT(gbc.pc(), 0x987a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9878), 0xcb);
        EXPECT(gbc.readMem(0x9879), 0xfe);
        // CB FE 0089
        gbc.setState(0x2222, 0xd121, 0x5090, 0xf285, 0x9cb3, 0x2a6d, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0xcb, 0xfe });
        gbc.writeMem(0x2a6d, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd121);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 008A
        gbc.setState(0xaf13, 0x7fbb, 0x99c0, 0x5231, 0x87aa, 0xb0aa, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0xcb, 0xfe });
        gbc.writeMem(0xb0aa, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7fbb);
        EXPECT(gbc.pc(), 0xaf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0xcb);
        EXPECT(gbc.readMem(0xaf14), 0xfe);
        EXPECT(gbc.readMem(0xb0aa), 0xd1);
        // CB FE 008B
        gbc.setState(0x663c, 0x170c, 0x680, 0x7a37, 0xf6c2, 0xaf3c, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xfe });
        gbc.writeMem(0xaf3c, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x170c);
        EXPECT(gbc.pc(), 0x663e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3c), 0x98);
        // CB FE 008C
        gbc.setState(0x874e, 0xef8a, 0x950, 0xe946, 0x75e5, 0xea37, 0x0, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0xfe });
        gbc.writeMem(0xea37, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef8a);
        EXPECT(gbc.pc(), 0x8750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874e), 0xcb);
        EXPECT(gbc.readMem(0x874f), 0xfe);
        EXPECT(gbc.readMem(0xea37), 0xc2);
        // CB FE 008D
        gbc.setState(0x5d66, 0x6f8c, 0xfeb0, 0x5f32, 0xc108, 0x2ba3, 0x0, 0x0);
        gbc.writeMem(0x2ba3, { 0xe4 });
        gbc.writeMem(0x5d66, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6f8c);
        EXPECT(gbc.pc(), 0x5d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 008F
        gbc.setState(0x6353, 0xfb3c, 0x66c0, 0xf399, 0xcf2d, 0x7932, 0x0, 0x1);
        gbc.writeMem(0x6353, { 0xcb, 0xfe });
        gbc.writeMem(0x7932, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfb3c);
        EXPECT(gbc.pc(), 0x6355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0090
        gbc.setState(0xee7, 0x172e, 0xde80, 0x9e05, 0x9838, 0x63d2, 0x0, 0x0);
        gbc.writeMem(0xee7, { 0xcb, 0xfe });
        gbc.writeMem(0x63d2, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x172e);
        EXPECT(gbc.pc(), 0xee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0092
        gbc.setState(0x8c5e, 0xc9fc, 0x4150, 0xd67c, 0xf188, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x8c5e, { 0xcb, 0xfe });
        gbc.writeMem(0xbb8b, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc9fc);
        EXPECT(gbc.pc(), 0x8c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5e), 0xcb);
        EXPECT(gbc.readMem(0x8c5f), 0xfe);
        EXPECT(gbc.readMem(0xbb8b), 0xc1);
        // CB FE 0093
        gbc.setState(0x50d1, 0xb088, 0xbc70, 0xfa94, 0xbb2d, 0xb967, 0x0, 0x1);
        gbc.writeMem(0x50d1, { 0xcb, 0xfe });
        gbc.writeMem(0xb967, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb088);
        EXPECT(gbc.pc(), 0x50d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb967), 0xd5);
        // CB FE 0094
        gbc.setState(0x9162, 0x4a91, 0xfc90, 0x93d3, 0xb200, 0x2410, 0x1, 0x0);
        gbc.writeMem(0x2410, { 0xfa });
        gbc.writeMem(0x9162, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4a91);
        EXPECT(gbc.pc(), 0x9164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9162), 0xcb);
        EXPECT(gbc.readMem(0x9163), 0xfe);
        // CB FE 0095
        gbc.setState(0x19f4, 0x96de, 0x7250, 0x22d9, 0xd499, 0x7a17, 0x0, 0x1);
        gbc.writeMem(0x19f4, { 0xcb, 0xfe });
        gbc.writeMem(0x7a17, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x96de);
        EXPECT(gbc.pc(), 0x19f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0096
        gbc.setState(0xad86, 0xf0bb, 0x88c0, 0x173e, 0xccac, 0x699c, 0x1, 0x1);
        gbc.writeMem(0x699c, { 0xfe });
        gbc.writeMem(0xad86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf0bb);
        EXPECT(gbc.pc(), 0xad88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad86), 0xcb);
        EXPECT(gbc.readMem(0xad87), 0xfe);
        // CB FE 0097
        gbc.setState(0x8a03, 0x3cbd, 0xea60, 0xa359, 0x3a84, 0x405f, 0x1, 0x1);
        gbc.writeMem(0x405f, { 0x9b });
        gbc.writeMem(0x8a03, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3cbd);
        EXPECT(gbc.pc(), 0x8a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a03), 0xcb);
        EXPECT(gbc.readMem(0x8a04), 0xfe);
        // CB FE 009B
        gbc.setState(0xda4e, 0x5ab6, 0x6e40, 0x9162, 0x30a2, 0xf095, 0x0, 0x0);
        gbc.writeMem(0xda4e, { 0xcb, 0xfe });
        gbc.writeMem(0xf095, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x5ab6);
        EXPECT(gbc.pc(), 0xda50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4e), 0xcb);
        EXPECT(gbc.readMem(0xda4f), 0xfe);
        EXPECT(gbc.readMem(0xf095), 0xcb);
        // CB FE 009C
        gbc.setState(0x6a77, 0xd595, 0x5280, 0xca0d, 0x805f, 0xe4d4, 0x0, 0x1);
        gbc.writeMem(0x6a77, { 0xcb, 0xfe });
        gbc.writeMem(0xe4d4, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd595);
        EXPECT(gbc.pc(), 0x6a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d4), 0xbd);
        // CB FE 009D
        gbc.setState(0xbb30, 0xbf8, 0x1d50, 0x9961, 0xfe03, 0xff65, 0x0, 0x1);
        gbc.writeMem(0xbb30, { 0xcb, 0xfe });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbf8);
        EXPECT(gbc.pc(), 0xbb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb30), 0xcb);
        EXPECT(gbc.readMem(0xbb31), 0xfe);
        EXPECT(gbc.readMem(0xff65), 0xae);
        // CB FE 009F
        gbc.setState(0x19fd, 0xbe17, 0x74d0, 0x5379, 0x138a, 0x9d97, 0x1, 0x0);
        gbc.writeMem(0x19fd, { 0xcb, 0xfe });
        gbc.writeMem(0x9d97, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbe17);
        EXPECT(gbc.pc(), 0x19ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d97), 0xc1);
        // CB FE 00A0
        gbc.setState(0x5c03, 0x5a0b, 0x8d80, 0xf0a7, 0x2a10, 0x66b1, 0x0, 0x0);
        gbc.writeMem(0x5c03, { 0xcb, 0xfe });
        gbc.writeMem(0x66b1, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5a0b);
        EXPECT(gbc.pc(), 0x5c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00A1
        gbc.setState(0x7fff, 0x1c3b, 0xf2e0, 0x8987, 0x4942, 0x4cd8, 0x0, 0x1);
        gbc.writeMem(0x4cd8, { 0xb2 });
        gbc.writeMem(0x7fff, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1c3b);
        EXPECT(gbc.pc(), 0x8001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8000), 0xfe);
        // CB FE 00A2
        gbc.setState(0x561, 0xdaf1, 0x1490, 0x4136, 0x3a54, 0x8ffb, 0x0, 0x1);
        gbc.writeMem(0x561, { 0xcb, 0xfe });
        gbc.writeMem(0x8ffb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdaf1);
        EXPECT(gbc.pc(), 0x563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffb), 0x95);
        // CB FE 00A3
        gbc.setState(0x123c, 0x7f50, 0x56f0, 0x54ec, 0x5f96, 0x9e9c, 0x1, 0x1);
        gbc.writeMem(0x123c, { 0xcb, 0xfe });
        gbc.writeMem(0x9e9c, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7f50);
        EXPECT(gbc.pc(), 0x123e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9c), 0xb4);
        // CB FE 00A7
        gbc.setState(0xd9a7, 0xc4d0, 0x87f0, 0xe262, 0xeec8, 0x9f22, 0x0, 0x1);
        gbc.writeMem(0x9f22, { 0x5f });
        gbc.writeMem(0xd9a7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc4d0);
        EXPECT(gbc.pc(), 0xd9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f22), 0xdf);
        EXPECT(gbc.readMem(0xd9a7), 0xcb);
        EXPECT(gbc.readMem(0xd9a8), 0xfe);
        // CB FE 00A8
        gbc.setState(0x7b62, 0xf432, 0x3800, 0xd8ef, 0x83f8, 0xca04, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xfe });
        gbc.writeMem(0xca04, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf432);
        EXPECT(gbc.pc(), 0x7b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca04), 0xd0);
        // CB FE 00AD
        gbc.setState(0x5a1c, 0x5621, 0x2880, 0xf77a, 0xf645, 0x618d, 0x1, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0xfe });
        gbc.writeMem(0x618d, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5621);
        EXPECT(gbc.pc(), 0x5a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00B0
        gbc.setState(0x5c82, 0xa1e4, 0x7660, 0xa081, 0xb256, 0xe19f, 0x1, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0xfe });
        gbc.writeMem(0xe19f, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa1e4);
        EXPECT(gbc.pc(), 0x5c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19f), 0xd6);
        // CB FE 00B2
        gbc.setState(0x7a35, 0x9fd3, 0x7da0, 0xc6e3, 0xda04, 0xd411, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xcb, 0xfe });
        gbc.writeMem(0xd411, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9fd3);
        EXPECT(gbc.pc(), 0x7a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd411), 0xb0);
        // CB FE 00B3
        gbc.setState(0x906c, 0xf284, 0x93c0, 0xe512, 0x6ad, 0xc594, 0x0, 0x0);
        gbc.writeMem(0x906c, { 0xcb, 0xfe });
        gbc.writeMem(0xc594, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf284);
        EXPECT(gbc.pc(), 0x906e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906c), 0xcb);
        EXPECT(gbc.readMem(0x906d), 0xfe);
        EXPECT(gbc.readMem(0xc594), 0xea);
        // CB FE 00B4
        gbc.setState(0x4ae3, 0x7d83, 0xf410, 0xd66d, 0x9a9d, 0x5000, 0x0, 0x0);
        gbc.writeMem(0x4ae3, { 0xcb, 0xfe });
        gbc.writeMem(0x5000, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7d83);
        EXPECT(gbc.pc(), 0x4ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00B5
        gbc.setState(0x4eda, 0x9eed, 0x79e0, 0x2e61, 0x86f7, 0x394e, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0xfc });
        gbc.writeMem(0x4eda, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9eed);
        EXPECT(gbc.pc(), 0x4edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00B6
        gbc.setState(0x2f8b, 0x38c2, 0x830, 0xa9c3, 0x469e, 0xf9ac, 0x1, 0x1);
        gbc.writeMem(0x2f8b, { 0xcb, 0xfe });
        gbc.writeMem(0xf9ac, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x38c2);
        EXPECT(gbc.pc(), 0x2f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9ac), 0xd0);
        // CB FE 00B7
        gbc.setState(0x41d, 0x9ece, 0xbf10, 0x5b4a, 0x7e22, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0x41d, { 0xcb, 0xfe });
        gbc.writeMem(0xd8ef, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0x41f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ef), 0xd7);
        // CB FE 00B9
        gbc.setState(0x676a, 0xcbf4, 0xa3f0, 0x64ed, 0x8e5a, 0x6290, 0x1, 0x1);
        gbc.writeMem(0x6290, { 0xf4 });
        gbc.writeMem(0x676a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcbf4);
        EXPECT(gbc.pc(), 0x676c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00BA
        gbc.setState(0x19a2, 0x6195, 0x9e00, 0xa4a0, 0xa596, 0x9c83, 0x1, 0x1);
        gbc.writeMem(0x19a2, { 0xcb, 0xfe });
        gbc.writeMem(0x9c83, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6195);
        EXPECT(gbc.pc(), 0x19a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c83), 0x85);
        // CB FE 00BB
        gbc.setState(0xbaf0, 0xbf46, 0x8660, 0x3e59, 0xd3cb, 0x645b, 0x1, 0x0);
        gbc.writeMem(0x645b, { 0xae });
        gbc.writeMem(0xbaf0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbf46);
        EXPECT(gbc.pc(), 0xbaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf0), 0xcb);
        EXPECT(gbc.readMem(0xbaf1), 0xfe);
        // CB FE 00BC
        gbc.setState(0x9ceb, 0x29b1, 0x85c0, 0xf556, 0xf696, 0xbe2f, 0x1, 0x1);
        gbc.writeMem(0x9ceb, { 0xcb, 0xfe });
        gbc.writeMem(0xbe2f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x29b1);
        EXPECT(gbc.pc(), 0x9ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ceb), 0xcb);
        EXPECT(gbc.readMem(0x9cec), 0xfe);
        EXPECT(gbc.readMem(0xbe2f), 0xf5);
        // CB FE 00BD
        gbc.setState(0x5d08, 0xa7bb, 0x2100, 0x26fb, 0xf675, 0xfc75, 0x0, 0x1);
        gbc.writeMem(0x5d08, { 0xcb, 0xfe });
        gbc.writeMem(0xfc75, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa7bb);
        EXPECT(gbc.pc(), 0x5d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc75), 0xce);
        // CB FE 00BE
        gbc.setState(0x3c10, 0xb27, 0xabc0, 0x5a43, 0x9c87, 0x8f2a, 0x0, 0x0);
        gbc.writeMem(0x3c10, { 0xcb, 0xfe });
        gbc.writeMem(0x8f2a, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x3c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2a), 0xe3);
        // CB FE 00BF
        gbc.setState(0xaa48, 0x1034, 0xeda0, 0xfa81, 0xc848, 0x6c0d, 0x1, 0x0);
        gbc.writeMem(0x6c0d, { 0xd6 });
        gbc.writeMem(0xaa48, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1034);
        EXPECT(gbc.pc(), 0xaa4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa48), 0xcb);
        EXPECT(gbc.readMem(0xaa49), 0xfe);
        // CB FE 00C0
        gbc.setState(0x7281, 0xdf0c, 0x9740, 0xabcc, 0x2f02, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0x7281, { 0xcb, 0xfe });
        gbc.writeMem(0xcb94, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0x7283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb94), 0x92);
        // CB FE 00C1
        gbc.setState(0x4a41, 0x2cae, 0xb7c0, 0xf5fa, 0xd0c5, 0xaf4d, 0x1, 0x0);
        gbc.writeMem(0x4a41, { 0xcb, 0xfe });
        gbc.writeMem(0xaf4d, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2cae);
        EXPECT(gbc.pc(), 0x4a43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4d), 0x88);
        // CB FE 00C2
        gbc.setState(0x374b, 0xd722, 0x4710, 0xe04e, 0xb930, 0x359b, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xfc });
        gbc.writeMem(0x374b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd722);
        EXPECT(gbc.pc(), 0x374d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00C3
        gbc.setState(0x1c24, 0xef23, 0xb950, 0x80df, 0x4371, 0x76de, 0x1, 0x0);
        gbc.writeMem(0x1c24, { 0xcb, 0xfe });
        gbc.writeMem(0x76de, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xef23);
        EXPECT(gbc.pc(), 0x1c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00C5
        gbc.setState(0x32fa, 0xad1f, 0x6400, 0x69a6, 0x5df7, 0x87f0, 0x0, 0x1);
        gbc.writeMem(0x32fa, { 0xcb, 0xfe });
        gbc.writeMem(0x87f0, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xad1f);
        EXPECT(gbc.pc(), 0x32fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f0), 0xbf);
        // CB FE 00C6
        gbc.setState(0x771f, 0x3c54, 0xc00, 0x9031, 0xaf57, 0x921e, 0x1, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0xfe });
        gbc.writeMem(0x921e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3c54);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921e), 0x80);
        // CB FE 00C7
        gbc.setState(0x4036, 0xf5dd, 0xc4c0, 0x170f, 0xfd33, 0xe971, 0x1, 0x0);
        gbc.writeMem(0x4036, { 0xcb, 0xfe });
        gbc.writeMem(0xe971, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf5dd);
        EXPECT(gbc.pc(), 0x4038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe971), 0xdd);
        // CB FE 00C8
        gbc.setState(0x9fe1, 0x7082, 0xd530, 0x7b3b, 0x5214, 0xa554, 0x0, 0x1);
        gbc.writeMem(0x9fe1, { 0xcb, 0xfe });
        gbc.writeMem(0xa554, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7082);
        EXPECT(gbc.pc(), 0x9fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe1), 0xcb);
        EXPECT(gbc.readMem(0x9fe2), 0xfe);
        EXPECT(gbc.readMem(0xa554), 0xbf);
        // CB FE 00C9
        gbc.setState(0xd62a, 0xe6f7, 0xd3d0, 0x402d, 0x4155, 0x732c, 0x1, 0x0);
        gbc.writeMem(0x732c, { 0xb1 });
        gbc.writeMem(0xd62a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe6f7);
        EXPECT(gbc.pc(), 0xd62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62a), 0xcb);
        EXPECT(gbc.readMem(0xd62b), 0xfe);
        // CB FE 00CA
        gbc.setState(0xbd8b, 0x8682, 0x97f0, 0x5787, 0x6ac5, 0x1f40, 0x1, 0x0);
        gbc.writeMem(0x1f40, { 0xd8 });
        gbc.writeMem(0xbd8b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8682);
        EXPECT(gbc.pc(), 0xbd8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8b), 0xcb);
        EXPECT(gbc.readMem(0xbd8c), 0xfe);
        // CB FE 00CB
        gbc.setState(0x6ab7, 0x26dc, 0xbe70, 0x2c79, 0x6da1, 0xb677, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xfe });
        gbc.writeMem(0xb677, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x26dc);
        EXPECT(gbc.pc(), 0x6ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb677), 0x9b);
        // CB FE 00D0
        gbc.setState(0x53c3, 0x1659, 0x2f50, 0x4d31, 0x7253, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0x53c3, { 0xcb, 0xfe });
        gbc.writeMem(0x8b84, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1659);
        EXPECT(gbc.pc(), 0x53c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b84), 0xf0);
        // CB FE 00D1
        gbc.setState(0x2ee6, 0xc18, 0x4ac0, 0xf664, 0x15e8, 0x9ebe, 0x1, 0x1);
        gbc.writeMem(0x2ee6, { 0xcb, 0xfe });
        gbc.writeMem(0x9ebe, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc18);
        EXPECT(gbc.pc(), 0x2ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebe), 0xbe);
        // CB FE 00D2
        gbc.setState(0x4802, 0xfb7, 0x16e0, 0x616, 0xc778, 0xb2b9, 0x0, 0x0);
        gbc.writeMem(0x4802, { 0xcb, 0xfe });
        gbc.writeMem(0xb2b9, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfb7);
        EXPECT(gbc.pc(), 0x4804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b9), 0xbf);
        // CB FE 00D3
        gbc.setState(0xb01c, 0xd997, 0x4700, 0xa69, 0xbe06, 0xdceb, 0x1, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0xfe });
        gbc.writeMem(0xdceb, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd997);
        EXPECT(gbc.pc(), 0xb01e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01c), 0xcb);
        EXPECT(gbc.readMem(0xb01d), 0xfe);
        EXPECT(gbc.readMem(0xdceb), 0x87);
        // CB FE 00D5
        gbc.setState(0xb569, 0x23ba, 0xb780, 0x7b72, 0x8372, 0x3431, 0x0, 0x0);
        gbc.writeMem(0x3431, { 0xbf });
        gbc.writeMem(0xb569, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x23ba);
        EXPECT(gbc.pc(), 0xb56b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb569), 0xcb);
        EXPECT(gbc.readMem(0xb56a), 0xfe);
        // CB FE 00D6
        gbc.setState(0xeac, 0x81f9, 0x9b80, 0xc927, 0x679e, 0xd3, 0x0, 0x0);
        gbc.writeMem(0xd3, { 0xc9 });
        gbc.writeMem(0xeac, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x81f9);
        EXPECT(gbc.pc(), 0xeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00D9
        gbc.setState(0xd208, 0x2db6, 0x4b90, 0x19cc, 0x8969, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xa6 });
        gbc.writeMem(0xd208, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2db6);
        EXPECT(gbc.pc(), 0xd20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd208), 0xcb);
        EXPECT(gbc.readMem(0xd209), 0xfe);
        // CB FE 00DA
        gbc.setState(0x7670, 0xddc5, 0x2070, 0xf7ad, 0xf71a, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0x7670, { 0xcb, 0xfe });
        gbc.writeMem(0x9dee, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xddc5);
        EXPECT(gbc.pc(), 0x7672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dee), 0xc8);
        // CB FE 00DC
        gbc.setState(0xd245, 0x7f86, 0xe580, 0xc822, 0x9b26, 0x9981, 0x1, 0x1);
        gbc.writeMem(0x9981, { 0x7d });
        gbc.writeMem(0xd245, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7f86);
        EXPECT(gbc.pc(), 0xd247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0xfd);
        EXPECT(gbc.readMem(0xd245), 0xcb);
        EXPECT(gbc.readMem(0xd246), 0xfe);
        // CB FE 00DE
        gbc.setState(0x7db1, 0xacec, 0x79b0, 0x3f2, 0xe3d9, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0x7db1, { 0xcb, 0xfe });
        gbc.writeMem(0xe2dd, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xacec);
        EXPECT(gbc.pc(), 0x7db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2dd), 0x8b);
        // CB FE 00DF
        gbc.setState(0xd236, 0xeac8, 0x30, 0xda70, 0x3247, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0xb6bf, { 0x2d });
        gbc.writeMem(0xd236, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xeac8);
        EXPECT(gbc.pc(), 0xd238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bf), 0xad);
        EXPECT(gbc.readMem(0xd236), 0xcb);
        EXPECT(gbc.readMem(0xd237), 0xfe);
        // CB FE 00E0
        gbc.setState(0x3f9d, 0xcb5, 0xea0, 0x26c2, 0xe62f, 0xb981, 0x1, 0x1);
        gbc.writeMem(0x3f9d, { 0xcb, 0xfe });
        gbc.writeMem(0xb981, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcb5);
        EXPECT(gbc.pc(), 0x3f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb981), 0x98);
        // CB FE 00E1
        gbc.setState(0x3f75, 0x6a7a, 0x6980, 0xe72d, 0x14d3, 0x6c96, 0x1, 0x0);
        gbc.writeMem(0x3f75, { 0xcb, 0xfe });
        gbc.writeMem(0x6c96, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6a7a);
        EXPECT(gbc.pc(), 0x3f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00E2
        gbc.setState(0x80a5, 0x5f1, 0x4a90, 0x18e5, 0xc393, 0x90ce, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0xcb, 0xfe });
        gbc.writeMem(0x90ce, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5f1);
        EXPECT(gbc.pc(), 0x80a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a5), 0xcb);
        EXPECT(gbc.readMem(0x80a6), 0xfe);
        EXPECT(gbc.readMem(0x90ce), 0x8c);
        // CB FE 00E4
        gbc.setState(0x161c, 0x11ed, 0x6290, 0x86bb, 0x7f7d, 0x398a, 0x0, 0x0);
        gbc.writeMem(0x161c, { 0xcb, 0xfe });
        gbc.writeMem(0x398a, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x11ed);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00E5
        gbc.setState(0x7633, 0xf585, 0x5000, 0x58e0, 0x60f7, 0xcbf8, 0x1, 0x0);
        gbc.writeMem(0x7633, { 0xcb, 0xfe });
        gbc.writeMem(0xcbf8, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf585);
        EXPECT(gbc.pc(), 0x7635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf8), 0xc2);
        // CB FE 00E7
        gbc.setState(0x62e5, 0xc70c, 0x2440, 0x4dd0, 0xace9, 0x2b18, 0x1, 0x1);
        gbc.writeMem(0x2b18, { 0xfe });
        gbc.writeMem(0x62e5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc70c);
        EXPECT(gbc.pc(), 0x62e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00E8
        gbc.setState(0x29a3, 0x3f01, 0x2c00, 0xabee, 0xc00d, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x29a3, { 0xcb, 0xfe });
        gbc.writeMem(0x99e0, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3f01);
        EXPECT(gbc.pc(), 0x29a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e0), 0xba);
        // CB FE 00E9
        gbc.setState(0xd048, 0xbdf2, 0x2090, 0x7e75, 0x8fe4, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x9dcb, { 0xf6 });
        gbc.writeMem(0xd048, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbdf2);
        EXPECT(gbc.pc(), 0xd04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dcb), 0xf6);
        EXPECT(gbc.readMem(0xd048), 0xcb);
        EXPECT(gbc.readMem(0xd049), 0xfe);
        // CB FE 00EB
        gbc.setState(0x2cd6, 0x413c, 0x9420, 0x6ba0, 0x3c4d, 0xab0e, 0x1, 0x0);
        gbc.writeMem(0x2cd6, { 0xcb, 0xfe });
        gbc.writeMem(0xab0e, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x413c);
        EXPECT(gbc.pc(), 0x2cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0e), 0xd7);
        // CB FE 00EC
        gbc.setState(0x5c24, 0x7c55, 0x35f0, 0x4a17, 0x25df, 0x1104, 0x0, 0x1);
        gbc.writeMem(0x1104, { 0xe4 });
        gbc.writeMem(0x5c24, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7c55);
        EXPECT(gbc.pc(), 0x5c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00ED
        gbc.setState(0x2a32, 0x2c2c, 0xd3b0, 0xcf4f, 0xce33, 0x7345, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0xfe });
        gbc.writeMem(0x7345, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c2c);
        EXPECT(gbc.pc(), 0x2a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 00EF
        gbc.setState(0x3a12, 0xabf8, 0x8960, 0xa7e3, 0x86d3, 0x2b4e, 0x1, 0x0);
        gbc.writeMem(0x2b4e, { 0xa8 });
        gbc.writeMem(0x3a12, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xabf8);
        EXPECT(gbc.pc(), 0x3a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00F2
        gbc.setState(0x66a3, 0x17b5, 0xc880, 0x78e4, 0xa334, 0xb869, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0xcb, 0xfe });
        gbc.writeMem(0xb869, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x17b5);
        EXPECT(gbc.pc(), 0x66a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xd0);
        // CB FE 00F3
        gbc.setState(0xa9bf, 0x715c, 0xb3f0, 0xefd4, 0x9fe7, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0x7e0c, { 0xaa });
        gbc.writeMem(0xa9bf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x715c);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9bf), 0xcb);
        EXPECT(gbc.readMem(0xa9c0), 0xfe);
        // CB FE 00F4
        gbc.setState(0x58e4, 0x13c2, 0xec50, 0x5dc0, 0xbf01, 0xd33d, 0x1, 0x0);
        gbc.writeMem(0x58e4, { 0xcb, 0xfe });
        gbc.writeMem(0xd33d, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x13c2);
        EXPECT(gbc.pc(), 0x58e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd33d), 0xfc);
        // CB FE 00F5
        gbc.setState(0x887a, 0x741f, 0x5ec0, 0xf5e6, 0xcb0d, 0x2b7b, 0x1, 0x1);
        gbc.writeMem(0x2b7b, { 0xc7 });
        gbc.writeMem(0x887a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x741f);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887a), 0xcb);
        EXPECT(gbc.readMem(0x887b), 0xfe);
        // CB FE 00F6
        gbc.setState(0x73be, 0xa36e, 0xfa20, 0xde06, 0x4b2e, 0x4df1, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xa6 });
        gbc.writeMem(0x73be, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa36e);
        EXPECT(gbc.pc(), 0x73c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 00F8
        gbc.setState(0xc15f, 0x858a, 0xa9f0, 0x4baa, 0x7d41, 0x46dc, 0x1, 0x0);
        gbc.writeMem(0x46dc, { 0xf8 });
        gbc.writeMem(0xc15f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0xc161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15f), 0xcb);
        EXPECT(gbc.readMem(0xc160), 0xfe);
        // CB FE 00FA
        gbc.setState(0x6186, 0x1392, 0x5890, 0x42a1, 0x6d26, 0x82dc, 0x0, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0xfe });
        gbc.writeMem(0x82dc, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1392);
        EXPECT(gbc.pc(), 0x6188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82dc), 0x9b);
        // CB FE 00FB
        gbc.setState(0x24a6, 0xbf3f, 0x7e90, 0x6f8e, 0x4fdf, 0xe655, 0x1, 0x1);
        gbc.writeMem(0x24a6, { 0xcb, 0xfe });
        gbc.writeMem(0xe655, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbf3f);
        EXPECT(gbc.pc(), 0x24a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe655), 0xcb);
        // CB FE 00FC
        gbc.setState(0x90e6, 0x5efb, 0xf0d0, 0x85e2, 0xd092, 0xa429, 0x0, 0x0);
        gbc.writeMem(0x90e6, { 0xcb, 0xfe });
        gbc.writeMem(0xa429, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5efb);
        EXPECT(gbc.pc(), 0x90e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e6), 0xcb);
        EXPECT(gbc.readMem(0x90e7), 0xfe);
        EXPECT(gbc.readMem(0xa429), 0xae);
        // CB FE 00FD
        gbc.setState(0x8441, 0x70f0, 0xd250, 0x2ba5, 0x9d79, 0x1ada, 0x0, 0x1);
        gbc.writeMem(0x1ada, { 0xcd });
        gbc.writeMem(0x8441, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x70f0);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8441), 0xcb);
        EXPECT(gbc.readMem(0x8442), 0xfe);
        // CB FE 00FE
        gbc.setState(0x9795, 0x4521, 0x1210, 0xde8e, 0x72f9, 0xbddb, 0x1, 0x1);
        gbc.writeMem(0x9795, { 0xcb, 0xfe });
        gbc.writeMem(0xbddb, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4521);
        EXPECT(gbc.pc(), 0x9797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9795), 0xcb);
        EXPECT(gbc.readMem(0x9796), 0xfe);
        EXPECT(gbc.readMem(0xbddb), 0xda);
        // CB FE 00FF
        gbc.setState(0xd7e8, 0xe98c, 0xb120, 0x5475, 0x469, 0x80e7, 0x1, 0x0);
        gbc.writeMem(0x80e7, { 0xb9 });
        gbc.writeMem(0xd7e8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe98c);
        EXPECT(gbc.pc(), 0xd7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e7), 0xb9);
        EXPECT(gbc.readMem(0xd7e8), 0xcb);
        EXPECT(gbc.readMem(0xd7e9), 0xfe);
        // CB FE 0100
        gbc.setState(0x3aab, 0x22fc, 0x73d0, 0x9fab, 0xf4de, 0xfd3a, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xfe });
        gbc.writeMem(0xfd3a, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x22fc);
        EXPECT(gbc.pc(), 0x3aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd3a), 0x89);
        // CB FE 0102
        gbc.setState(0xbc7e, 0x9078, 0x57a0, 0x652c, 0x2526, 0xf232, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xfe });
        gbc.writeMem(0xf232, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9078);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7e), 0xcb);
        EXPECT(gbc.readMem(0xbc7f), 0xfe);
        EXPECT(gbc.readMem(0xf232), 0xd6);
        // CB FE 0103
        gbc.setState(0x5cf7, 0xfb27, 0xfc30, 0x5b02, 0xa529, 0x1e4e, 0x1, 0x1);
        gbc.writeMem(0x1e4e, { 0xdc });
        gbc.writeMem(0x5cf7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfb27);
        EXPECT(gbc.pc(), 0x5cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0106
        gbc.setState(0x17a4, 0xd767, 0x470, 0xead6, 0x35b9, 0x50fe, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xfe });
        gbc.writeMem(0x50fe, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd767);
        EXPECT(gbc.pc(), 0x17a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0107
        gbc.setState(0xa663, 0x3703, 0xbf30, 0xab81, 0x8d7e, 0xd373, 0x0, 0x0);
        gbc.writeMem(0xa663, { 0xcb, 0xfe });
        gbc.writeMem(0xd373, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3703);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0xcb);
        EXPECT(gbc.readMem(0xa664), 0xfe);
        EXPECT(gbc.readMem(0xd373), 0xf4);
        // CB FE 0108
        gbc.setState(0x594e, 0xaa6, 0x2500, 0xd1a8, 0x2b90, 0xafe4, 0x0, 0x1);
        gbc.writeMem(0x594e, { 0xcb, 0xfe });
        gbc.writeMem(0xafe4, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaa6);
        EXPECT(gbc.pc(), 0x5950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe4), 0xa2);
        // CB FE 010A
        gbc.setState(0xefa, 0xaadc, 0x3c70, 0xfa, 0x6c15, 0xfe5b, 0x1, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0xfe });
        gbc.writeMem(0xfe5b, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaadc);
        EXPECT(gbc.pc(), 0xefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe5b), 0xde);
        // CB FE 010C
        gbc.setState(0x9da4, 0x6f5e, 0x7490, 0x1e87, 0xa283, 0x50d5, 0x1, 0x0);
        gbc.writeMem(0x50d5, { 0xa4 });
        gbc.writeMem(0x9da4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6f5e);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0xfe);
        // CB FE 010D
        gbc.setState(0x96e9, 0xb4ef, 0x6420, 0xacc7, 0xd658, 0xa110, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0xcb, 0xfe });
        gbc.writeMem(0xa110, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb4ef);
        EXPECT(gbc.pc(), 0x96eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e9), 0xcb);
        EXPECT(gbc.readMem(0x96ea), 0xfe);
        EXPECT(gbc.readMem(0xa110), 0xef);
        // CB FE 010E
        gbc.setState(0xd629, 0x59f, 0xe620, 0x4830, 0xa0b6, 0xb70f, 0x0, 0x1);
        gbc.writeMem(0xb70f, { 0x8 });
        gbc.writeMem(0xd629, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x59f);
        EXPECT(gbc.pc(), 0xd62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70f), 0x88);
        EXPECT(gbc.readMem(0xd629), 0xcb);
        EXPECT(gbc.readMem(0xd62a), 0xfe);
        // CB FE 010F
        gbc.setState(0x6837, 0xd67e, 0x9bb0, 0x4619, 0xd28f, 0x62fd, 0x1, 0x0);
        gbc.writeMem(0x62fd, { 0xd1 });
        gbc.writeMem(0x6837, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd67e);
        EXPECT(gbc.pc(), 0x6839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0110
        gbc.setState(0xc5f6, 0x616b, 0x8dd0, 0xdd3b, 0x3a9c, 0xf057, 0x0, 0x0);
        gbc.writeMem(0xc5f6, { 0xcb, 0xfe });
        gbc.writeMem(0xf057, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x616b);
        EXPECT(gbc.pc(), 0xc5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f6), 0xcb);
        EXPECT(gbc.readMem(0xc5f7), 0xfe);
        EXPECT(gbc.readMem(0xf057), 0xe0);
        // CB FE 0111
        gbc.setState(0x9568, 0xcc46, 0x7360, 0xec23, 0xcfe1, 0xeaa9, 0x0, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0xfe });
        gbc.writeMem(0xeaa9, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcc46);
        EXPECT(gbc.pc(), 0x956a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9568), 0xcb);
        EXPECT(gbc.readMem(0x9569), 0xfe);
        EXPECT(gbc.readMem(0xeaa9), 0x84);
        // CB FE 0113
        gbc.setState(0x8680, 0xedd7, 0x3280, 0x24cb, 0xa593, 0x457d, 0x1, 0x1);
        gbc.writeMem(0x457d, { 0xb0 });
        gbc.writeMem(0x8680, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xedd7);
        EXPECT(gbc.pc(), 0x8682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8680), 0xcb);
        EXPECT(gbc.readMem(0x8681), 0xfe);
        // CB FE 0114
        gbc.setState(0xa5f6, 0x4c54, 0x2090, 0x1794, 0x8ecb, 0x8bc, 0x1, 0x1);
        gbc.writeMem(0x8bc, { 0xbc });
        gbc.writeMem(0xa5f6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4c54);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f6), 0xcb);
        EXPECT(gbc.readMem(0xa5f7), 0xfe);
        // CB FE 0116
        gbc.setState(0xb636, 0x7a6b, 0xbb60, 0xe9d8, 0xdd4e, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x973e, { 0xe0 });
        gbc.writeMem(0xb636, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7a6b);
        EXPECT(gbc.pc(), 0xb638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973e), 0xe0);
        EXPECT(gbc.readMem(0xb636), 0xcb);
        EXPECT(gbc.readMem(0xb637), 0xfe);
        // CB FE 0117
        gbc.setState(0x610, 0x6186, 0xd440, 0xfa12, 0xd783, 0x799f, 0x1, 0x1);
        gbc.writeMem(0x610, { 0xcb, 0xfe });
        gbc.writeMem(0x799f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6186);
        EXPECT(gbc.pc(), 0x612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0118
        gbc.setState(0x9d61, 0x33ec, 0x1720, 0x1e2, 0x31b5, 0x8aaa, 0x1, 0x0);
        gbc.writeMem(0x8aaa, { 0x1e });
        gbc.writeMem(0x9d61, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x33ec);
        EXPECT(gbc.pc(), 0x9d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aaa), 0x9e);
        EXPECT(gbc.readMem(0x9d61), 0xcb);
        EXPECT(gbc.readMem(0x9d62), 0xfe);
        // CB FE 0119
        gbc.setState(0x1cdf, 0xce57, 0x7ff0, 0x398a, 0x5667, 0x59a8, 0x0, 0x0);
        gbc.writeMem(0x1cdf, { 0xcb, 0xfe });
        gbc.writeMem(0x59a8, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xce57);
        EXPECT(gbc.pc(), 0x1ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 011A
        gbc.setState(0x4ebd, 0x8b7f, 0xb360, 0x7a42, 0x9dfc, 0x2108, 0x1, 0x0);
        gbc.writeMem(0x2108, { 0xfd });
        gbc.writeMem(0x4ebd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8b7f);
        EXPECT(gbc.pc(), 0x4ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 011B
        gbc.setState(0xb079, 0xb3c5, 0x1bd0, 0x82bf, 0x4896, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0xfe });
        gbc.writeMem(0xc6ca, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb3c5);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0xfe);
        EXPECT(gbc.readMem(0xc6ca), 0xee);
        // CB FE 0124
        gbc.setState(0x99a3, 0x6e8e, 0x4740, 0x1fea, 0xdfc7, 0x758d, 0x0, 0x0);
        gbc.writeMem(0x758d, { 0xeb });
        gbc.writeMem(0x99a3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0x99a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a3), 0xcb);
        EXPECT(gbc.readMem(0x99a4), 0xfe);
        // CB FE 0125
        gbc.setState(0x2e93, 0x147, 0x92f0, 0x5225, 0x1453, 0xa5cb, 0x0, 0x0);
        gbc.writeMem(0x2e93, { 0xcb, 0xfe });
        gbc.writeMem(0xa5cb, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x147);
        EXPECT(gbc.pc(), 0x2e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cb), 0x8c);
        // CB FE 0126
        gbc.setState(0x5414, 0x409d, 0xf320, 0xa836, 0xe06d, 0x8d99, 0x1, 0x0);
        gbc.writeMem(0x5414, { 0xcb, 0xfe });
        gbc.writeMem(0x8d99, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x409d);
        EXPECT(gbc.pc(), 0x5416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d99), 0xd9);
        // CB FE 0127
        gbc.setState(0x917, 0x1e53, 0x6250, 0xc7ef, 0xbc22, 0xf9b4, 0x0, 0x0);
        gbc.writeMem(0x917, { 0xcb, 0xfe });
        gbc.writeMem(0xf9b4, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1e53);
        EXPECT(gbc.pc(), 0x919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf9b4), 0xf2);
        // CB FE 0129
        gbc.setState(0xd10, 0x465d, 0xb0f0, 0xf7f0, 0x7fd, 0xf580, 0x0, 0x1);
        gbc.writeMem(0xd10, { 0xcb, 0xfe });
        gbc.writeMem(0xf580, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x465d);
        EXPECT(gbc.pc(), 0xd12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf580), 0xeb);
        // CB FE 012A
        gbc.setState(0xde83, 0x4051, 0xca40, 0xc378, 0x4ae5, 0x27ec, 0x0, 0x1);
        gbc.writeMem(0x27ec, { 0x98 });
        gbc.writeMem(0xde83, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4051);
        EXPECT(gbc.pc(), 0xde85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde83), 0xcb);
        EXPECT(gbc.readMem(0xde84), 0xfe);
        // CB FE 012B
        gbc.setState(0xded0, 0x8eb0, 0xeaf0, 0xfad6, 0x72ba, 0xa2f8, 0x1, 0x0);
        gbc.writeMem(0xa2f8, { 0x62 });
        gbc.writeMem(0xded0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8eb0);
        EXPECT(gbc.pc(), 0xded2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f8), 0xe2);
        EXPECT(gbc.readMem(0xded0), 0xcb);
        EXPECT(gbc.readMem(0xded1), 0xfe);
        // CB FE 012D
        gbc.setState(0x5498, 0xa1b0, 0x2ee0, 0x298a, 0x4c50, 0x7dff, 0x0, 0x0);
        gbc.writeMem(0x5498, { 0xcb, 0xfe });
        gbc.writeMem(0x7dff, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa1b0);
        EXPECT(gbc.pc(), 0x549a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 012F
        gbc.setState(0xedfb, 0x3cf0, 0x34a0, 0x4df2, 0xae8, 0xcd45, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0x51 });
        gbc.writeMem(0xedfb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3cf0);
        EXPECT(gbc.pc(), 0xedfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd45), 0xd1);
        EXPECT(gbc.readMem(0xedfb), 0xcb);
        EXPECT(gbc.readMem(0xedfc), 0xfe);
        // CB FE 0130
        gbc.setState(0x91c6, 0x1d02, 0x5610, 0x32a8, 0xee05, 0xb4e6, 0x0, 0x1);
        gbc.writeMem(0x91c6, { 0xcb, 0xfe });
        gbc.writeMem(0xb4e6, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1d02);
        EXPECT(gbc.pc(), 0x91c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c6), 0xcb);
        EXPECT(gbc.readMem(0x91c7), 0xfe);
        EXPECT(gbc.readMem(0xb4e6), 0xaa);
        // CB FE 0133
        gbc.setState(0xc66f, 0x95b8, 0xe9f0, 0x2daa, 0x3941, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0x6c5, { 0x80 });
        gbc.writeMem(0xc66f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x95b8);
        EXPECT(gbc.pc(), 0xc671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66f), 0xcb);
        EXPECT(gbc.readMem(0xc670), 0xfe);
        // CB FE 0135
        gbc.setState(0xde46, 0x2ed4, 0x8100, 0xd5f4, 0x4661, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0xa54d, { 0xd3 });
        gbc.writeMem(0xde46, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2ed4);
        EXPECT(gbc.pc(), 0xde48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54d), 0xd3);
        EXPECT(gbc.readMem(0xde46), 0xcb);
        EXPECT(gbc.readMem(0xde47), 0xfe);
        // CB FE 0137
        gbc.setState(0x256d, 0xf46f, 0xda60, 0x89ac, 0x11f1, 0x46b0, 0x1, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xfe });
        gbc.writeMem(0x46b0, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf46f);
        EXPECT(gbc.pc(), 0x256f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0138
        gbc.setState(0xd0a, 0x24b0, 0x5f30, 0x5bdf, 0xce45, 0x47c7, 0x0, 0x0);
        gbc.writeMem(0xd0a, { 0xcb, 0xfe });
        gbc.writeMem(0x47c7, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x24b0);
        EXPECT(gbc.pc(), 0xd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0139
        gbc.setState(0xaa60, 0x1705, 0xdae0, 0x824, 0xe40f, 0xcf74, 0x1, 0x0);
        gbc.writeMem(0xaa60, { 0xcb, 0xfe });
        gbc.writeMem(0xcf74, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1705);
        EXPECT(gbc.pc(), 0xaa62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa60), 0xcb);
        EXPECT(gbc.readMem(0xaa61), 0xfe);
        EXPECT(gbc.readMem(0xcf74), 0x87);
        // CB FE 013C
        gbc.setState(0x3acd, 0xa62a, 0xf190, 0xec77, 0x17f5, 0x3117, 0x0, 0x1);
        gbc.writeMem(0x3117, { 0xe7 });
        gbc.writeMem(0x3acd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa62a);
        EXPECT(gbc.pc(), 0x3acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 013D
        gbc.setState(0x5691, 0x9caa, 0xe8b0, 0xe234, 0xee1d, 0x5634, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0xac });
        gbc.writeMem(0x5691, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9caa);
        EXPECT(gbc.pc(), 0x5693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 013E
        gbc.setState(0xe3b1, 0xb76b, 0xe000, 0xe08d, 0x9853, 0x2cfd, 0x0, 0x1);
        gbc.writeMem(0x2cfd, { 0xe1 });
        gbc.writeMem(0xe3b1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb76b);
        EXPECT(gbc.pc(), 0xe3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b1), 0xcb);
        EXPECT(gbc.readMem(0xe3b2), 0xfe);
        // CB FE 013F
        gbc.setState(0x767c, 0x2f78, 0xe6e0, 0xbb5b, 0x85f7, 0xfa32, 0x0, 0x0);
        gbc.writeMem(0x767c, { 0xcb, 0xfe });
        gbc.writeMem(0xfa32, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2f78);
        EXPECT(gbc.pc(), 0x767e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa32), 0xe9);
        // CB FE 0140
        gbc.setState(0xe5b8, 0x8533, 0x80f0, 0x314d, 0x38d0, 0x2dcc, 0x0, 0x0);
        gbc.writeMem(0x2dcc, { 0xef });
        gbc.writeMem(0xe5b8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8533);
        EXPECT(gbc.pc(), 0xe5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b8), 0xcb);
        EXPECT(gbc.readMem(0xe5b9), 0xfe);
        // CB FE 0142
        gbc.setState(0x4cd6, 0x6a49, 0xd7c0, 0xa3a7, 0xe0e, 0x6320, 0x1, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0xfe });
        gbc.writeMem(0x6320, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6a49);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0144
        gbc.setState(0x2fc0, 0x3b0, 0x61a0, 0xc8e0, 0xd619, 0x5e34, 0x0, 0x1);
        gbc.writeMem(0x2fc0, { 0xcb, 0xfe });
        gbc.writeMem(0x5e34, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0x2fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0145
        gbc.setState(0x942d, 0x9a92, 0x59c0, 0x73ba, 0x261e, 0xaf7d, 0x0, 0x0);
        gbc.writeMem(0x942d, { 0xcb, 0xfe });
        gbc.writeMem(0xaf7d, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9a92);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0xfe);
        EXPECT(gbc.readMem(0xaf7d), 0xd1);
        // CB FE 0146
        gbc.setState(0x46d1, 0xa5f3, 0x3750, 0xf1e4, 0x66d2, 0x7e4c, 0x0, 0x0);
        gbc.writeMem(0x46d1, { 0xcb, 0xfe });
        gbc.writeMem(0x7e4c, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa5f3);
        EXPECT(gbc.pc(), 0x46d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0148
        gbc.setState(0x1706, 0xc476, 0xd290, 0xcb4a, 0x7d1e, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0x1706, { 0xcb, 0xfe });
        gbc.writeMem(0x6d19, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc476);
        EXPECT(gbc.pc(), 0x1708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0149
        gbc.setState(0x6ad6, 0x96f4, 0xcd30, 0xb06e, 0x8125, 0xe95e, 0x0, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0xfe });
        gbc.writeMem(0xe95e, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x96f4);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95e), 0x9a);
        // CB FE 014B
        gbc.setState(0x3234, 0x1463, 0xc310, 0x6dc2, 0xe8ca, 0xe29c, 0x1, 0x0);
        gbc.writeMem(0x3234, { 0xcb, 0xfe });
        gbc.writeMem(0xe29c, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1463);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29c), 0xd3);
        // CB FE 014C
        gbc.setState(0xede, 0x1819, 0xf580, 0x8f73, 0xbc7, 0x9bbb, 0x0, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0xfe });
        gbc.writeMem(0x9bbb, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1819);
        EXPECT(gbc.pc(), 0xee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbb), 0xed);
        // CB FE 014F
        gbc.setState(0x6079, 0xf948, 0x2b30, 0x42ba, 0xdc57, 0x86eb, 0x0, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0xfe });
        gbc.writeMem(0x86eb, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf948);
        EXPECT(gbc.pc(), 0x607b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86eb), 0xd5);
        // CB FE 0150
        gbc.setState(0xcb2c, 0x7ca8, 0x41d0, 0xe8de, 0xf28f, 0xe88d, 0x0, 0x0);
        gbc.writeMem(0xcb2c, { 0xcb, 0xfe });
        gbc.writeMem(0xe88d, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7ca8);
        EXPECT(gbc.pc(), 0xcb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2c), 0xcb);
        EXPECT(gbc.readMem(0xcb2d), 0xfe);
        EXPECT(gbc.readMem(0xe88d), 0xa1);
        // CB FE 0151
        gbc.setState(0xb99c, 0x27f9, 0xf620, 0x36dc, 0xc557, 0x945b, 0x1, 0x0);
        gbc.writeMem(0x945b, { 0xad });
        gbc.writeMem(0xb99c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x27f9);
        EXPECT(gbc.pc(), 0xb99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0xad);
        EXPECT(gbc.readMem(0xb99c), 0xcb);
        EXPECT(gbc.readMem(0xb99d), 0xfe);
        // CB FE 0152
        gbc.setState(0xc9a9, 0x2617, 0xa50, 0xcbf6, 0xe46, 0xc54b, 0x0, 0x1);
        gbc.writeMem(0xc54b, { 0xda });
        gbc.writeMem(0xc9a9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2617);
        EXPECT(gbc.pc(), 0xc9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc54b), 0xda);
        EXPECT(gbc.readMem(0xc9a9), 0xcb);
        EXPECT(gbc.readMem(0xc9aa), 0xfe);
        // CB FE 0154
        gbc.setState(0xddc5, 0xc53e, 0xc6e0, 0xb1b8, 0xdd07, 0x65c, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0x84 });
        gbc.writeMem(0xddc5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc53e);
        EXPECT(gbc.pc(), 0xddc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc5), 0xcb);
        EXPECT(gbc.readMem(0xddc6), 0xfe);
        // CB FE 0156
        gbc.setState(0x4555, 0x58ad, 0x1f30, 0x3ce5, 0x2f89, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0x4555, { 0xcb, 0xfe });
        gbc.writeMem(0xf37c, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x58ad);
        EXPECT(gbc.pc(), 0x4557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf37c), 0xbf);
        // CB FE 0157
        gbc.setState(0xad4b, 0x944c, 0xc050, 0x251, 0x6eb9, 0x84a3, 0x0, 0x0);
        gbc.writeMem(0x84a3, { 0xa6 });
        gbc.writeMem(0xad4b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x944c);
        EXPECT(gbc.pc(), 0xad4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a3), 0xa6);
        EXPECT(gbc.readMem(0xad4b), 0xcb);
        EXPECT(gbc.readMem(0xad4c), 0xfe);
        // CB FE 0158
        gbc.setState(0x6c73, 0xeed7, 0x1620, 0x4c77, 0xe226, 0x76fb, 0x0, 0x0);
        gbc.writeMem(0x6c73, { 0xcb, 0xfe });
        gbc.writeMem(0x76fb, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xeed7);
        EXPECT(gbc.pc(), 0x6c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 015C
        gbc.setState(0x7b54, 0xe82f, 0x1a20, 0xda90, 0x53c8, 0xfae6, 0x1, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xfe });
        gbc.writeMem(0xfae6, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe82f);
        EXPECT(gbc.pc(), 0x7b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfae6), 0xe6);
        // CB FE 015D
        gbc.setState(0x581f, 0xacb7, 0x5ea0, 0xb42b, 0x1674, 0xb80d, 0x1, 0x1);
        gbc.writeMem(0x581f, { 0xcb, 0xfe });
        gbc.writeMem(0xb80d, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xacb7);
        EXPECT(gbc.pc(), 0x5821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80d), 0xd1);
        // CB FE 015E
        gbc.setState(0xb611, 0x781f, 0x5980, 0x877d, 0x337d, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x213b, { 0xe8 });
        gbc.writeMem(0xb611, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x781f);
        EXPECT(gbc.pc(), 0xb613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb611), 0xcb);
        EXPECT(gbc.readMem(0xb612), 0xfe);
        // CB FE 0160
        gbc.setState(0xbf46, 0x732c, 0xf080, 0x57ec, 0xe7f9, 0x38a9, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0x9b });
        gbc.writeMem(0xbf46, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x732c);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf46), 0xcb);
        EXPECT(gbc.readMem(0xbf47), 0xfe);
        // CB FE 0161
        gbc.setState(0x19d3, 0x4cb6, 0x9360, 0xc726, 0x937, 0xad69, 0x1, 0x1);
        gbc.writeMem(0x19d3, { 0xcb, 0xfe });
        gbc.writeMem(0xad69, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4cb6);
        EXPECT(gbc.pc(), 0x19d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad69), 0xbe);
        // CB FE 0163
        gbc.setState(0xb588, 0x45a1, 0x62e0, 0xac78, 0x9ce6, 0xe247, 0x1, 0x0);
        gbc.writeMem(0xb588, { 0xcb, 0xfe });
        gbc.writeMem(0xe247, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x45a1);
        EXPECT(gbc.pc(), 0xb58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb588), 0xcb);
        EXPECT(gbc.readMem(0xb589), 0xfe);
        EXPECT(gbc.readMem(0xe247), 0xd6);
        // CB FE 0164
        gbc.setState(0x9e4b, 0x51fe, 0xf180, 0xd77d, 0x6c3a, 0x907e, 0x1, 0x1);
        gbc.writeMem(0x907e, { 0xc6 });
        gbc.writeMem(0x9e4b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x9e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907e), 0xc6);
        EXPECT(gbc.readMem(0x9e4b), 0xcb);
        EXPECT(gbc.readMem(0x9e4c), 0xfe);
        // CB FE 0169
        gbc.setState(0x282d, 0xefff, 0x1cf0, 0x9d27, 0x3b97, 0x342f, 0x0, 0x1);
        gbc.writeMem(0x282d, { 0xcb, 0xfe });
        gbc.writeMem(0x342f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xefff);
        EXPECT(gbc.pc(), 0x282f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 016A
        gbc.setState(0x4cea, 0x94f0, 0x15b0, 0x5b74, 0x1a4, 0x9bd1, 0x1, 0x0);
        gbc.writeMem(0x4cea, { 0xcb, 0xfe });
        gbc.writeMem(0x9bd1, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x94f0);
        EXPECT(gbc.pc(), 0x4cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd1), 0xb3);
        // CB FE 016B
        gbc.setState(0xb701, 0x6e41, 0xab30, 0x8b9, 0x6eb3, 0x2170, 0x0, 0x0);
        gbc.writeMem(0x2170, { 0xef });
        gbc.writeMem(0xb701, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6e41);
        EXPECT(gbc.pc(), 0xb703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb701), 0xcb);
        EXPECT(gbc.readMem(0xb702), 0xfe);
        // CB FE 016C
        gbc.setState(0x62cb, 0xb8e3, 0x6f50, 0x8839, 0xbef8, 0x3324, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0xde });
        gbc.writeMem(0x62cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb8e3);
        EXPECT(gbc.pc(), 0x62cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 016D
        gbc.setState(0x23e0, 0x3fae, 0xc630, 0x617b, 0x2329, 0x5cf9, 0x0, 0x0);
        gbc.writeMem(0x23e0, { 0xcb, 0xfe });
        gbc.writeMem(0x5cf9, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3fae);
        EXPECT(gbc.pc(), 0x23e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 016E
        gbc.setState(0x39c6, 0x2300, 0x7230, 0x951f, 0x4cd0, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x39c6, { 0xcb, 0xfe });
        gbc.writeMem(0x4ec2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2300);
        EXPECT(gbc.pc(), 0x39c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0171
        gbc.setState(0x9233, 0x2ff5, 0xd6f0, 0x1347, 0x1ecc, 0x9875, 0x0, 0x0);
        gbc.writeMem(0x9233, { 0xcb, 0xfe });
        gbc.writeMem(0x9875, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2ff5);
        EXPECT(gbc.pc(), 0x9235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9233), 0xcb);
        EXPECT(gbc.readMem(0x9234), 0xfe);
        EXPECT(gbc.readMem(0x9875), 0x9e);
        // CB FE 0172
        gbc.setState(0x4403, 0x8cf5, 0xc9b0, 0x5f1d, 0x297b, 0x4d95, 0x0, 0x1);
        gbc.writeMem(0x4403, { 0xcb, 0xfe });
        gbc.writeMem(0x4d95, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8cf5);
        EXPECT(gbc.pc(), 0x4405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0173
        gbc.setState(0x40c8, 0xd31, 0x11c0, 0x5d2e, 0x6bcc, 0xcaad, 0x0, 0x1);
        gbc.writeMem(0x40c8, { 0xcb, 0xfe });
        gbc.writeMem(0xcaad, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd31);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaad), 0xb5);
        // CB FE 0176
        gbc.setState(0x4b38, 0x7cdd, 0xff10, 0xea8, 0x1299, 0x709f, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0xcb, 0xfe });
        gbc.writeMem(0x709f, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0x4b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0177
        gbc.setState(0x16ca, 0x4ff5, 0x1120, 0x4f84, 0xd4cf, 0xfd69, 0x0, 0x1);
        gbc.writeMem(0x16ca, { 0xcb, 0xfe });
        gbc.writeMem(0xfd69, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4ff5);
        EXPECT(gbc.pc(), 0x16cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd69), 0xcc);
        // CB FE 0178
        gbc.setState(0x25e8, 0xc72d, 0x8aa0, 0xe1f5, 0x543b, 0xc637, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0xfe });
        gbc.writeMem(0xc637, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc72d);
        EXPECT(gbc.pc(), 0x25ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc637), 0xf4);
        // CB FE 017A
        gbc.setState(0x5f16, 0xe5bb, 0xdc0, 0xf783, 0x2d4d, 0x7689, 0x0, 0x0);
        gbc.writeMem(0x5f16, { 0xcb, 0xfe });
        gbc.writeMem(0x7689, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe5bb);
        EXPECT(gbc.pc(), 0x5f18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 017B
        gbc.setState(0xe543, 0xcb05, 0x9460, 0xbbc6, 0x19e0, 0xe56b, 0x0, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0xfe });
        gbc.writeMem(0xe56b, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcb05);
        EXPECT(gbc.pc(), 0xe545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe543), 0xcb);
        EXPECT(gbc.readMem(0xe544), 0xfe);
        EXPECT(gbc.readMem(0xe56b), 0xf5);
        // CB FE 017C
        gbc.setState(0xea0e, 0x7a3f, 0x87c0, 0x9b12, 0x186c, 0xe562, 0x1, 0x1);
        gbc.writeMem(0xe562, { 0x86 });
        gbc.writeMem(0xea0e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7a3f);
        EXPECT(gbc.pc(), 0xea10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe562), 0x86);
        EXPECT(gbc.readMem(0xea0e), 0xcb);
        EXPECT(gbc.readMem(0xea0f), 0xfe);
        // CB FE 017F
        gbc.setState(0xa4de, 0xab21, 0x61f0, 0xafd0, 0xdc4a, 0xca02, 0x1, 0x1);
        gbc.writeMem(0xa4de, { 0xcb, 0xfe });
        gbc.writeMem(0xca02, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xab21);
        EXPECT(gbc.pc(), 0xa4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4de), 0xcb);
        EXPECT(gbc.readMem(0xa4df), 0xfe);
        EXPECT(gbc.readMem(0xca02), 0x82);
        // CB FE 0180
        gbc.setState(0xc0fd, 0xc92f, 0x2d00, 0xef7c, 0x8952, 0x4a67, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0x9f });
        gbc.writeMem(0xc0fd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc92f);
        EXPECT(gbc.pc(), 0xc0ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fd), 0xcb);
        EXPECT(gbc.readMem(0xc0fe), 0xfe);
        // CB FE 0182
        gbc.setState(0xe7da, 0x35fc, 0xd150, 0x2eeb, 0x6ba9, 0xf757, 0x0, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0xfe });
        gbc.writeMem(0xf757, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x35fc);
        EXPECT(gbc.pc(), 0xe7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7da), 0xcb);
        EXPECT(gbc.readMem(0xe7db), 0xfe);
        EXPECT(gbc.readMem(0xf757), 0xca);
        // CB FE 0183
        gbc.setState(0x2ff7, 0x9867, 0x63f0, 0xfb3, 0x5273, 0xa2a8, 0x0, 0x1);
        gbc.writeMem(0x2ff7, { 0xcb, 0xfe });
        gbc.writeMem(0xa2a8, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9867);
        EXPECT(gbc.pc(), 0x2ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a8), 0xef);
        // CB FE 0185
        gbc.setState(0xa9f3, 0x6756, 0x3940, 0x792f, 0x256c, 0x83d1, 0x0, 0x1);
        gbc.writeMem(0x83d1, { 0x13 });
        gbc.writeMem(0xa9f3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6756);
        EXPECT(gbc.pc(), 0xa9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d1), 0x93);
        EXPECT(gbc.readMem(0xa9f3), 0xcb);
        EXPECT(gbc.readMem(0xa9f4), 0xfe);
        // CB FE 0186
        gbc.setState(0x12f3, 0x914c, 0x92b0, 0x4331, 0x4988, 0x605f, 0x1, 0x0);
        gbc.writeMem(0x12f3, { 0xcb, 0xfe });
        gbc.writeMem(0x605f, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0x12f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0187
        gbc.setState(0x2c85, 0x3c22, 0x5bc0, 0xa00d, 0x2957, 0x91ef, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0xcb, 0xfe });
        gbc.writeMem(0x91ef, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3c22);
        EXPECT(gbc.pc(), 0x2c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ef), 0xb6);
        // CB FE 018B
        gbc.setState(0x2b75, 0x4dc3, 0x95a0, 0xce00, 0xd642, 0x9f52, 0x1, 0x1);
        gbc.writeMem(0x2b75, { 0xcb, 0xfe });
        gbc.writeMem(0x9f52, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4dc3);
        EXPECT(gbc.pc(), 0x2b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f52), 0xa5);
        // CB FE 018D
        gbc.setState(0xa01c, 0x7e95, 0xf070, 0x436b, 0xe226, 0x9756, 0x0, 0x1);
        gbc.writeMem(0x9756, { 0xf5 });
        gbc.writeMem(0xa01c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7e95);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9756), 0xf5);
        EXPECT(gbc.readMem(0xa01c), 0xcb);
        EXPECT(gbc.readMem(0xa01d), 0xfe);
        // CB FE 018E
        gbc.setState(0xc2d, 0xcf23, 0xbe30, 0xba2b, 0xcf02, 0x35a6, 0x1, 0x1);
        gbc.writeMem(0xc2d, { 0xcb, 0xfe });
        gbc.writeMem(0x35a6, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcf23);
        EXPECT(gbc.pc(), 0xc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 018F
        gbc.setState(0xe24e, 0xe139, 0xc830, 0x570d, 0xfca1, 0xafbb, 0x0, 0x1);
        gbc.writeMem(0xafbb, { 0xcf });
        gbc.writeMem(0xe24e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe139);
        EXPECT(gbc.pc(), 0xe250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbb), 0xcf);
        EXPECT(gbc.readMem(0xe24e), 0xcb);
        EXPECT(gbc.readMem(0xe24f), 0xfe);
        // CB FE 0190
        gbc.setState(0x9a9f, 0x406e, 0x60e0, 0x6ea, 0x6929, 0x4d29, 0x1, 0x1);
        gbc.writeMem(0x4d29, { 0xdb });
        gbc.writeMem(0x9a9f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x406e);
        EXPECT(gbc.pc(), 0x9aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9f), 0xcb);
        EXPECT(gbc.readMem(0x9aa0), 0xfe);
        // CB FE 0191
        gbc.setState(0xcb73, 0x5418, 0xe010, 0x10ed, 0x54ff, 0x3fed, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0x80 });
        gbc.writeMem(0xcb73, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5418);
        EXPECT(gbc.pc(), 0xcb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb73), 0xcb);
        EXPECT(gbc.readMem(0xcb74), 0xfe);
        // CB FE 0192
        gbc.setState(0x54df, 0x9337, 0x2c10, 0x5936, 0x7c9c, 0xad74, 0x0, 0x0);
        gbc.writeMem(0x54df, { 0xcb, 0xfe });
        gbc.writeMem(0xad74, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9337);
        EXPECT(gbc.pc(), 0x54e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad74), 0xb4);
        // CB FE 0193
        gbc.setState(0xc3b0, 0xf9c6, 0xf50, 0x1c28, 0x5745, 0xa54e, 0x1, 0x0);
        gbc.writeMem(0xa54e, { 0x57 });
        gbc.writeMem(0xc3b0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf9c6);
        EXPECT(gbc.pc(), 0xc3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54e), 0xd7);
        EXPECT(gbc.readMem(0xc3b0), 0xcb);
        EXPECT(gbc.readMem(0xc3b1), 0xfe);
        // CB FE 0195
        gbc.setState(0x9938, 0x6069, 0x8390, 0x176b, 0x2b18, 0x4cc5, 0x0, 0x0);
        gbc.writeMem(0x4cc5, { 0x95 });
        gbc.writeMem(0x9938, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6069);
        EXPECT(gbc.pc(), 0x993a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0xcb);
        EXPECT(gbc.readMem(0x9939), 0xfe);
        // CB FE 0196
        gbc.setState(0x7e5c, 0x36f2, 0x3a60, 0xba88, 0x761f, 0xccb8, 0x1, 0x1);
        gbc.writeMem(0x7e5c, { 0xcb, 0xfe });
        gbc.writeMem(0xccb8, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x36f2);
        EXPECT(gbc.pc(), 0x7e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb8), 0x97);
        // CB FE 0197
        gbc.setState(0x88fc, 0xceb8, 0x2de0, 0xf150, 0xf4d6, 0x748f, 0x0, 0x0);
        gbc.writeMem(0x748f, { 0xbd });
        gbc.writeMem(0x88fc, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xceb8);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0xfe);
        // CB FE 019C
        gbc.setState(0xeb77, 0xcf51, 0x2130, 0x326e, 0xb44e, 0xc6b9, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0xc2 });
        gbc.writeMem(0xeb77, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcf51);
        EXPECT(gbc.pc(), 0xeb79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b9), 0xc2);
        EXPECT(gbc.readMem(0xeb77), 0xcb);
        EXPECT(gbc.readMem(0xeb78), 0xfe);
        // CB FE 019D
        gbc.setState(0xa9c8, 0xa25e, 0xee00, 0xaf5d, 0xb85b, 0xeec9, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0xcb, 0xfe });
        gbc.writeMem(0xeec9, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa25e);
        EXPECT(gbc.pc(), 0xa9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c8), 0xcb);
        EXPECT(gbc.readMem(0xa9c9), 0xfe);
        EXPECT(gbc.readMem(0xeec9), 0x9d);
        // CB FE 019F
        gbc.setState(0x3a61, 0x4e78, 0x9000, 0xb9ff, 0xe2be, 0x2a91, 0x1, 0x1);
        gbc.writeMem(0x2a91, { 0xcd });
        gbc.writeMem(0x3a61, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4e78);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01A1
        gbc.setState(0xbb2a, 0x542c, 0xb50, 0x4e15, 0x73f4, 0xd1c3, 0x0, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0xfe });
        gbc.writeMem(0xd1c3, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x542c);
        EXPECT(gbc.pc(), 0xbb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2a), 0xcb);
        EXPECT(gbc.readMem(0xbb2b), 0xfe);
        EXPECT(gbc.readMem(0xd1c3), 0x98);
        // CB FE 01A2
        gbc.setState(0x1a8a, 0x248e, 0x9650, 0xf518, 0x35bd, 0xeb3, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0xc2 });
        gbc.writeMem(0x1a8a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x248e);
        EXPECT(gbc.pc(), 0x1a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01A4
        gbc.setState(0x3cdb, 0x72de, 0x8cf0, 0x6391, 0x4f18, 0xbe62, 0x1, 0x0);
        gbc.writeMem(0x3cdb, { 0xcb, 0xfe });
        gbc.writeMem(0xbe62, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x72de);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe62), 0xd9);
        // CB FE 01A5
        gbc.setState(0xdf18, 0x5fd5, 0x1190, 0xd09e, 0x2fe, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xeb });
        gbc.writeMem(0xdf18, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5fd5);
        EXPECT(gbc.pc(), 0xdf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f3), 0xeb);
        EXPECT(gbc.readMem(0xdf18), 0xcb);
        EXPECT(gbc.readMem(0xdf19), 0xfe);
        // CB FE 01A6
        gbc.setState(0xd3f1, 0xc0ba, 0x7f40, 0xe2e6, 0x6f44, 0xb58e, 0x1, 0x0);
        gbc.writeMem(0xb58e, { 0x56 });
        gbc.writeMem(0xd3f1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc0ba);
        EXPECT(gbc.pc(), 0xd3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58e), 0xd6);
        EXPECT(gbc.readMem(0xd3f1), 0xcb);
        EXPECT(gbc.readMem(0xd3f2), 0xfe);
        // CB FE 01A7
        gbc.setState(0x4e36, 0x4510, 0x9290, 0x79b5, 0x8a9f, 0xca9a, 0x1, 0x1);
        gbc.writeMem(0x4e36, { 0xcb, 0xfe });
        gbc.writeMem(0xca9a, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4510);
        EXPECT(gbc.pc(), 0x4e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9a), 0x88);
        // CB FE 01A8
        gbc.setState(0x4e6c, 0x8b03, 0xb90, 0x5a83, 0xe07f, 0xc7fa, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xcb, 0xfe });
        gbc.writeMem(0xc7fa, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8b03);
        EXPECT(gbc.pc(), 0x4e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7fa), 0x82);
        // CB FE 01A9
        gbc.setState(0xbd9f, 0x23a5, 0x95b0, 0xd549, 0x3e4c, 0x4bb2, 0x0, 0x0);
        gbc.writeMem(0x4bb2, { 0xd5 });
        gbc.writeMem(0xbd9f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x23a5);
        EXPECT(gbc.pc(), 0xbda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9f), 0xcb);
        EXPECT(gbc.readMem(0xbda0), 0xfe);
        // CB FE 01AC
        gbc.setState(0x7317, 0x566c, 0x4420, 0xaacb, 0x52e9, 0x327c, 0x1, 0x1);
        gbc.writeMem(0x327c, { 0xfb });
        gbc.writeMem(0x7317, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x566c);
        EXPECT(gbc.pc(), 0x7319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01AD
        gbc.setState(0x6475, 0x106a, 0xf690, 0x1294, 0x2979, 0x386c, 0x1, 0x0);
        gbc.writeMem(0x386c, { 0x8e });
        gbc.writeMem(0x6475, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x106a);
        EXPECT(gbc.pc(), 0x6477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01AE
        gbc.setState(0xe545, 0x9e6f, 0x58e0, 0x936e, 0x761c, 0x43b6, 0x1, 0x1);
        gbc.writeMem(0x43b6, { 0xb9 });
        gbc.writeMem(0xe545, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9e6f);
        EXPECT(gbc.pc(), 0xe547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe545), 0xcb);
        EXPECT(gbc.readMem(0xe546), 0xfe);
        // CB FE 01AF
        gbc.setState(0x6955, 0xc5b7, 0xf650, 0xa1d0, 0xd219, 0x73a9, 0x1, 0x0);
        gbc.writeMem(0x6955, { 0xcb, 0xfe });
        gbc.writeMem(0x73a9, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc5b7);
        EXPECT(gbc.pc(), 0x6957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01B2
        gbc.setState(0xd5a4, 0x77bd, 0xf190, 0x7b14, 0x8feb, 0xf3fc, 0x0, 0x0);
        gbc.writeMem(0xd5a4, { 0xcb, 0xfe });
        gbc.writeMem(0xf3fc, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x77bd);
        EXPECT(gbc.pc(), 0xd5a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a4), 0xcb);
        EXPECT(gbc.readMem(0xd5a5), 0xfe);
        EXPECT(gbc.readMem(0xf3fc), 0xbc);
        // CB FE 01B3
        gbc.setState(0x6d2e, 0x9172, 0x4b20, 0xdaf7, 0xfb6f, 0x9b44, 0x0, 0x1);
        gbc.writeMem(0x6d2e, { 0xcb, 0xfe });
        gbc.writeMem(0x9b44, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9172);
        EXPECT(gbc.pc(), 0x6d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b44), 0xfa);
        // CB FE 01B4
        gbc.setState(0x2bd8, 0x8d8b, 0x2170, 0x1f8b, 0x9995, 0x7643, 0x0, 0x1);
        gbc.writeMem(0x2bd8, { 0xcb, 0xfe });
        gbc.writeMem(0x7643, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8d8b);
        EXPECT(gbc.pc(), 0x2bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01B5
        gbc.setState(0x32, 0x148e, 0x7f70, 0x3cf1, 0xe1c, 0x560a, 0x1, 0x0);
        gbc.writeMem(0x32, { 0xcb, 0xfe });
        gbc.writeMem(0x560a, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x148e);
        EXPECT(gbc.pc(), 0x34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01B6
        gbc.setState(0x8a15, 0xcc6a, 0xb290, 0x4462, 0x7813, 0xdca6, 0x1, 0x1);
        gbc.writeMem(0x8a15, { 0xcb, 0xfe });
        gbc.writeMem(0xdca6, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcc6a);
        EXPECT(gbc.pc(), 0x8a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a15), 0xcb);
        EXPECT(gbc.readMem(0x8a16), 0xfe);
        EXPECT(gbc.readMem(0xdca6), 0xd0);
        // CB FE 01B7
        gbc.setState(0xd519, 0x9fb4, 0x5790, 0x1f2c, 0x5625, 0xa0ab, 0x0, 0x1);
        gbc.writeMem(0xa0ab, { 0xc2 });
        gbc.writeMem(0xd519, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9fb4);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ab), 0xc2);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0xfe);
        // CB FE 01B8
        gbc.setState(0x90d1, 0x5635, 0xaa80, 0xf539, 0x4288, 0x861e, 0x1, 0x0);
        gbc.writeMem(0x861e, { 0x18 });
        gbc.writeMem(0x90d1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5635);
        EXPECT(gbc.pc(), 0x90d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861e), 0x98);
        EXPECT(gbc.readMem(0x90d1), 0xcb);
        EXPECT(gbc.readMem(0x90d2), 0xfe);
        // CB FE 01B9
        gbc.setState(0x39c8, 0xeba, 0xa120, 0xfae1, 0x9a02, 0x1eb7, 0x0, 0x1);
        gbc.writeMem(0x1eb7, { 0x9b });
        gbc.writeMem(0x39c8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeba);
        EXPECT(gbc.pc(), 0x39ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01BD
        gbc.setState(0x17bc, 0xf29, 0xff0, 0xae02, 0xb97d, 0xbcd6, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0xcb, 0xfe });
        gbc.writeMem(0xbcd6, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf29);
        EXPECT(gbc.pc(), 0x17be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd6), 0xd7);
        // CB FE 01BE
        gbc.setState(0x3e07, 0xf1b4, 0x5770, 0x3962, 0xa3e5, 0x3ea9, 0x0, 0x1);
        gbc.writeMem(0x3e07, { 0xcb, 0xfe });
        gbc.writeMem(0x3ea9, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf1b4);
        EXPECT(gbc.pc(), 0x3e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01C0
        gbc.setState(0x352e, 0xc95f, 0x27e0, 0x4b5f, 0xc12, 0x7325, 0x1, 0x0);
        gbc.writeMem(0x352e, { 0xcb, 0xfe });
        gbc.writeMem(0x7325, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc95f);
        EXPECT(gbc.pc(), 0x3530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01C1
        gbc.setState(0x16ae, 0x6733, 0x92e0, 0xa7ec, 0x7850, 0x78e6, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0xcb, 0xfe });
        gbc.writeMem(0x78e6, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6733);
        EXPECT(gbc.pc(), 0x16b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01C3
        gbc.setState(0x7c9a, 0x3aba, 0x2650, 0x5940, 0x62ea, 0x816f, 0x0, 0x0);
        gbc.writeMem(0x7c9a, { 0xcb, 0xfe });
        gbc.writeMem(0x816f, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3aba);
        EXPECT(gbc.pc(), 0x7c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816f), 0xb9);
        // CB FE 01C4
        gbc.setState(0x4f17, 0x92b7, 0x8170, 0x335, 0xef8c, 0x6590, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0xcb, 0xfe });
        gbc.writeMem(0x6590, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x92b7);
        EXPECT(gbc.pc(), 0x4f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01C5
        gbc.setState(0xb98e, 0xc552, 0xc270, 0x713a, 0x16f6, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0x5fdb, { 0x96 });
        gbc.writeMem(0xb98e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc552);
        EXPECT(gbc.pc(), 0xb990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98e), 0xcb);
        EXPECT(gbc.readMem(0xb98f), 0xfe);
        // CB FE 01C6
        gbc.setState(0x8d73, 0x54b3, 0x880, 0xfe1e, 0x20ba, 0x3af9, 0x1, 0x1);
        gbc.writeMem(0x3af9, { 0xdf });
        gbc.writeMem(0x8d73, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0x8d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d73), 0xcb);
        EXPECT(gbc.readMem(0x8d74), 0xfe);
        // CB FE 01C7
        gbc.setState(0x55bd, 0x9208, 0x4880, 0xce0e, 0x7693, 0xe89b, 0x0, 0x1);
        gbc.writeMem(0x55bd, { 0xcb, 0xfe });
        gbc.writeMem(0xe89b, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9208);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89b), 0xc0);
        // CB FE 01C8
        gbc.setState(0x7e2, 0x7cae, 0x5be0, 0x4906, 0x97d6, 0x2d9d, 0x1, 0x0);
        gbc.writeMem(0x7e2, { 0xcb, 0xfe });
        gbc.writeMem(0x2d9d, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7cae);
        EXPECT(gbc.pc(), 0x7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01CA
        gbc.setState(0x76c8, 0x79fa, 0x6060, 0x71cb, 0xc5d9, 0x4b86, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xe8 });
        gbc.writeMem(0x76c8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0x76ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01CB
        gbc.setState(0x9b48, 0x7bac, 0x5cf0, 0x4285, 0x518e, 0xc321, 0x0, 0x0);
        gbc.writeMem(0x9b48, { 0xcb, 0xfe });
        gbc.writeMem(0xc321, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7bac);
        EXPECT(gbc.pc(), 0x9b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b48), 0xcb);
        EXPECT(gbc.readMem(0x9b49), 0xfe);
        EXPECT(gbc.readMem(0xc321), 0xb0);
        // CB FE 01CC
        gbc.setState(0xdb44, 0x15ad, 0xa570, 0xd2b2, 0xf1b, 0xa434, 0x1, 0x1);
        gbc.writeMem(0xa434, { 0x9c });
        gbc.writeMem(0xdb44, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x15ad);
        EXPECT(gbc.pc(), 0xdb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa434), 0x9c);
        EXPECT(gbc.readMem(0xdb44), 0xcb);
        EXPECT(gbc.readMem(0xdb45), 0xfe);
        // CB FE 01CD
        gbc.setState(0x7649, 0x457b, 0x3420, 0x695b, 0x446f, 0x513e, 0x1, 0x0);
        gbc.writeMem(0x513e, { 0xb5 });
        gbc.writeMem(0x7649, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x457b);
        EXPECT(gbc.pc(), 0x764b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01CE
        gbc.setState(0xad62, 0xb864, 0x8690, 0xeaf0, 0x6f30, 0x8a2a, 0x1, 0x1);
        gbc.writeMem(0x8a2a, { 0x97 });
        gbc.writeMem(0xad62, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb864);
        EXPECT(gbc.pc(), 0xad64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2a), 0x97);
        EXPECT(gbc.readMem(0xad62), 0xcb);
        EXPECT(gbc.readMem(0xad63), 0xfe);
        // CB FE 01D0
        gbc.setState(0x3d26, 0x464, 0xb590, 0xd932, 0xf147, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x3d26, { 0xcb, 0xfe });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x464);
        EXPECT(gbc.pc(), 0x3d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe338), 0xd1);
        // CB FE 01D1
        gbc.setState(0x758d, 0x9701, 0xf330, 0x5bd, 0xd0f5, 0xde4, 0x0, 0x1);
        gbc.writeMem(0xde4, { 0x97 });
        gbc.writeMem(0x758d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9701);
        EXPECT(gbc.pc(), 0x758f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01D2
        gbc.setState(0xa2d4, 0x1149, 0xba60, 0xbe60, 0x4253, 0xd8e4, 0x0, 0x0);
        gbc.writeMem(0xa2d4, { 0xcb, 0xfe });
        gbc.writeMem(0xd8e4, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1149);
        EXPECT(gbc.pc(), 0xa2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d4), 0xcb);
        EXPECT(gbc.readMem(0xa2d5), 0xfe);
        EXPECT(gbc.readMem(0xd8e4), 0x8f);
        // CB FE 01D3
        gbc.setState(0x121d, 0x289a, 0x2180, 0xcd19, 0x593a, 0x16e, 0x1, 0x1);
        gbc.writeMem(0x16e, { 0xe1 });
        gbc.writeMem(0x121d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x289a);
        EXPECT(gbc.pc(), 0x121f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01D4
        gbc.setState(0x700b, 0x4e1b, 0x5030, 0xdcca, 0xba77, 0xd8da, 0x1, 0x1);
        gbc.writeMem(0x700b, { 0xcb, 0xfe });
        gbc.writeMem(0xd8da, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4e1b);
        EXPECT(gbc.pc(), 0x700d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8da), 0xbe);
        // CB FE 01D5
        gbc.setState(0xd50, 0x61c0, 0x4d60, 0x4bc, 0x37c, 0x8a0e, 0x0, 0x0);
        gbc.writeMem(0xd50, { 0xcb, 0xfe });
        gbc.writeMem(0x8a0e, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x61c0);
        EXPECT(gbc.pc(), 0xd52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0e), 0xaa);
        // CB FE 01D6
        gbc.setState(0xe44d, 0x237e, 0xa9b0, 0xa689, 0xed0a, 0x241d, 0x1, 0x1);
        gbc.writeMem(0x241d, { 0x9c });
        gbc.writeMem(0xe44d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x237e);
        EXPECT(gbc.pc(), 0xe44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44d), 0xcb);
        EXPECT(gbc.readMem(0xe44e), 0xfe);
        // CB FE 01D7
        gbc.setState(0xc1ba, 0x9d, 0x28c0, 0xc5b8, 0x5ed0, 0xa137, 0x1, 0x1);
        gbc.writeMem(0xa137, { 0x1e });
        gbc.writeMem(0xc1ba, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9d);
        EXPECT(gbc.pc(), 0xc1bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa137), 0x9e);
        EXPECT(gbc.readMem(0xc1ba), 0xcb);
        EXPECT(gbc.readMem(0xc1bb), 0xfe);
        // CB FE 01D9
        gbc.setState(0x70bf, 0x8e8e, 0xc6b0, 0x1020, 0x1579, 0xe3eb, 0x1, 0x0);
        gbc.writeMem(0x70bf, { 0xcb, 0xfe });
        gbc.writeMem(0xe3eb, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8e8e);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3eb), 0xac);
        // CB FE 01DA
        gbc.setState(0x21ec, 0xba7f, 0x90e0, 0xc88d, 0xf0bc, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x21ec, { 0xcb, 0xfe });
        gbc.writeMem(0x59b6, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xba7f);
        EXPECT(gbc.pc(), 0x21ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01DD
        gbc.setState(0x848f, 0xe52d, 0xa4a0, 0x270f, 0x36d6, 0x58c9, 0x0, 0x0);
        gbc.writeMem(0x58c9, { 0x87 });
        gbc.writeMem(0x848f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe52d);
        EXPECT(gbc.pc(), 0x8491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848f), 0xcb);
        EXPECT(gbc.readMem(0x8490), 0xfe);
        // CB FE 01DE
        gbc.setState(0x2bc8, 0xbea7, 0xcc0, 0xbf64, 0x7de6, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0x2bc8, { 0xcb, 0xfe });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbea7);
        EXPECT(gbc.pc(), 0x2bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0xbe);
        // CB FE 01DF
        gbc.setState(0x3011, 0x7518, 0xb9b0, 0x7af4, 0xe600, 0x7f11, 0x1, 0x0);
        gbc.writeMem(0x3011, { 0xcb, 0xfe });
        gbc.writeMem(0x7f11, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7518);
        EXPECT(gbc.pc(), 0x3013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01E2
        gbc.setState(0x2e9a, 0xdc9a, 0x5290, 0x76fd, 0x5570, 0xf04a, 0x1, 0x1);
        gbc.writeMem(0x2e9a, { 0xcb, 0xfe });
        gbc.writeMem(0xf04a, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdc9a);
        EXPECT(gbc.pc(), 0x2e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf04a), 0xe2);
        // CB FE 01E6
        gbc.setState(0x56fe, 0xfd3c, 0x2720, 0x6336, 0x16fd, 0x868a, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xfe });
        gbc.writeMem(0x868a, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfd3c);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868a), 0xb9);
        // CB FE 01E7
        gbc.setState(0x9918, 0x3e07, 0xba80, 0xf2bc, 0xc553, 0x37ed, 0x0, 0x0);
        gbc.writeMem(0x37ed, { 0xaf });
        gbc.writeMem(0x9918, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3e07);
        EXPECT(gbc.pc(), 0x991a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9918), 0xcb);
        EXPECT(gbc.readMem(0x9919), 0xfe);
        // CB FE 01E8
        gbc.setState(0x3d46, 0x3e55, 0x23f0, 0x4fe, 0xa46b, 0xc3e6, 0x1, 0x0);
        gbc.writeMem(0x3d46, { 0xcb, 0xfe });
        gbc.writeMem(0xc3e6, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3e55);
        EXPECT(gbc.pc(), 0x3d48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e6), 0xce);
        // CB FE 01EA
        gbc.setState(0x7f8e, 0xd8c, 0x5ff0, 0xb745, 0x74, 0xf018, 0x1, 0x1);
        gbc.writeMem(0x7f8e, { 0xcb, 0xfe });
        gbc.writeMem(0xf018, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd8c);
        EXPECT(gbc.pc(), 0x7f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf018), 0xe2);
        // CB FE 01EB
        gbc.setState(0x9e66, 0xa393, 0xddd0, 0xdbb7, 0xaf01, 0x80a8, 0x1, 0x1);
        gbc.writeMem(0x80a8, { 0x81 });
        gbc.writeMem(0x9e66, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0x9e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a8), 0x81);
        EXPECT(gbc.readMem(0x9e66), 0xcb);
        EXPECT(gbc.readMem(0x9e67), 0xfe);
        // CB FE 01EC
        gbc.setState(0xb59, 0x784, 0x7b40, 0x66c5, 0xedb3, 0xe8de, 0x0, 0x1);
        gbc.writeMem(0xb59, { 0xcb, 0xfe });
        gbc.writeMem(0xe8de, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0xb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8de), 0xda);
        // CB FE 01ED
        gbc.setState(0x1431, 0x4d76, 0x46d0, 0x4dec, 0x1772, 0x707f, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0xcb, 0xfe });
        gbc.writeMem(0x707f, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4d76);
        EXPECT(gbc.pc(), 0x1433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01EE
        gbc.setState(0x7067, 0x7b2, 0xd050, 0x1d3e, 0x37f4, 0x887a, 0x1, 0x0);
        gbc.writeMem(0x7067, { 0xcb, 0xfe });
        gbc.writeMem(0x887a, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7b2);
        EXPECT(gbc.pc(), 0x7069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887a), 0xf1);
        // CB FE 01EF
        gbc.setState(0x5a25, 0x141e, 0x5740, 0xeba1, 0x7d35, 0x84f4, 0x1, 0x1);
        gbc.writeMem(0x5a25, { 0xcb, 0xfe });
        gbc.writeMem(0x84f4, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x141e);
        EXPECT(gbc.pc(), 0x5a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f4), 0x9d);
        // CB FE 01F1
        gbc.setState(0xb0a4, 0x367d, 0x1860, 0xf133, 0xbcc6, 0xf124, 0x0, 0x1);
        gbc.writeMem(0xb0a4, { 0xcb, 0xfe });
        gbc.writeMem(0xf124, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x367d);
        EXPECT(gbc.pc(), 0xb0a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a4), 0xcb);
        EXPECT(gbc.readMem(0xb0a5), 0xfe);
        EXPECT(gbc.readMem(0xf124), 0xcc);
        // CB FE 01F2
        gbc.setState(0x6901, 0x5002, 0x74a0, 0xe2dc, 0xf30d, 0x3909, 0x1, 0x0);
        gbc.writeMem(0x3909, { 0xd3 });
        gbc.writeMem(0x6901, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5002);
        EXPECT(gbc.pc(), 0x6903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 01F3
        gbc.setState(0xf82, 0x164e, 0x20e0, 0xc8cd, 0x48aa, 0x8562, 0x0, 0x0);
        gbc.writeMem(0xf82, { 0xcb, 0xfe });
        gbc.writeMem(0x8562, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x164e);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8562), 0xe9);
        // CB FE 01F5
        gbc.setState(0xb4ec, 0x73c8, 0x39b0, 0x372d, 0xa101, 0xa075, 0x0, 0x1);
        gbc.writeMem(0xa075, { 0xc0 });
        gbc.writeMem(0xb4ec, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x73c8);
        EXPECT(gbc.pc(), 0xb4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa075), 0xc0);
        EXPECT(gbc.readMem(0xb4ec), 0xcb);
        EXPECT(gbc.readMem(0xb4ed), 0xfe);
        // CB FE 01F6
        gbc.setState(0x69c2, 0x1e8f, 0x3930, 0xff57, 0xbed6, 0x2675, 0x1, 0x0);
        gbc.writeMem(0x2675, { 0xfe });
        gbc.writeMem(0x69c2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1e8f);
        EXPECT(gbc.pc(), 0x69c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01F7
        gbc.setState(0x799a, 0xab1c, 0xf680, 0x7d1, 0x5d9f, 0xaa49, 0x0, 0x0);
        gbc.writeMem(0x799a, { 0xcb, 0xfe });
        gbc.writeMem(0xaa49, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xab1c);
        EXPECT(gbc.pc(), 0x799c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa49), 0x8d);
        // CB FE 01F8
        gbc.setState(0xa87, 0xa552, 0xd240, 0x6b3f, 0xb6b9, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0xa87, { 0xcb, 0xfe });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa552);
        EXPECT(gbc.pc(), 0xa89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82e), 0xbe);
        // CB FE 01F9
        gbc.setState(0x8498, 0xd782, 0xa360, 0xd030, 0xd9ce, 0x63f2, 0x1, 0x1);
        gbc.writeMem(0x63f2, { 0xde });
        gbc.writeMem(0x8498, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd782);
        EXPECT(gbc.pc(), 0x849a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8498), 0xcb);
        EXPECT(gbc.readMem(0x8499), 0xfe);
        // CB FE 01FC
        gbc.setState(0x7fd8, 0x24d, 0xb790, 0xfc8e, 0x5e3f, 0xf215, 0x0, 0x0);
        gbc.writeMem(0x7fd8, { 0xcb, 0xfe });
        gbc.writeMem(0xf215, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x24d);
        EXPECT(gbc.pc(), 0x7fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf215), 0xa3);
        // CB FE 01FE
        gbc.setState(0x2c26, 0xf2ce, 0x4cb0, 0xfeac, 0xe41d, 0x782d, 0x0, 0x1);
        gbc.writeMem(0x2c26, { 0xcb, 0xfe });
        gbc.writeMem(0x782d, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf2ce);
        EXPECT(gbc.pc(), 0x2c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 01FF
        gbc.setState(0x603d, 0xcb79, 0x5f30, 0x9c44, 0x831c, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0xfe });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcb79);
        EXPECT(gbc.pc(), 0x603f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfba5), 0xe1);
        // CB FE 0201
        gbc.setState(0x3b75, 0xced, 0x12e0, 0x81ca, 0x5382, 0xe546, 0x0, 0x1);
        gbc.writeMem(0x3b75, { 0xcb, 0xfe });
        gbc.writeMem(0xe546, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xced);
        EXPECT(gbc.pc(), 0x3b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe546), 0x96);
        // CB FE 0202
        gbc.setState(0x35ce, 0xeb14, 0xe080, 0xc49c, 0x800c, 0x7eab, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0xfe });
        gbc.writeMem(0x7eab, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeb14);
        EXPECT(gbc.pc(), 0x35d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0203
        gbc.setState(0xab9a, 0x4d95, 0x9b10, 0xc63f, 0xd5b3, 0x9730, 0x0, 0x1);
        gbc.writeMem(0x9730, { 0xd4 });
        gbc.writeMem(0xab9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4d95);
        EXPECT(gbc.pc(), 0xab9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9730), 0xd4);
        EXPECT(gbc.readMem(0xab9a), 0xcb);
        EXPECT(gbc.readMem(0xab9b), 0xfe);
        // CB FE 0204
        gbc.setState(0x7d2, 0xd5e5, 0x3bb0, 0x8448, 0xfe69, 0xd2ad, 0x1, 0x0);
        gbc.writeMem(0x7d2, { 0xcb, 0xfe });
        gbc.writeMem(0xd2ad, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x7d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ad), 0xd2);
        // CB FE 0205
        gbc.setState(0x5fe, 0x444e, 0x49b0, 0x2b9b, 0x1d89, 0xf48f, 0x0, 0x1);
        gbc.writeMem(0x5fe, { 0xcb, 0xfe });
        gbc.writeMem(0xf48f, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x444e);
        EXPECT(gbc.pc(), 0x600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf48f), 0x97);
        // CB FE 0206
        gbc.setState(0xe931, 0x9446, 0x7660, 0xff62, 0x8a73, 0x3f55, 0x1, 0x0);
        gbc.writeMem(0x3f55, { 0xc5 });
        gbc.writeMem(0xe931, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9446);
        EXPECT(gbc.pc(), 0xe933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe931), 0xcb);
        EXPECT(gbc.readMem(0xe932), 0xfe);
        // CB FE 0207
        gbc.setState(0x3b56, 0x4d68, 0x86d0, 0x714c, 0xbc3e, 0x6ebb, 0x0, 0x1);
        gbc.writeMem(0x3b56, { 0xcb, 0xfe });
        gbc.writeMem(0x6ebb, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4d68);
        EXPECT(gbc.pc(), 0x3b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0208
        gbc.setState(0xa4f7, 0x3e7f, 0xbab0, 0xa2e7, 0x523a, 0x6001, 0x1, 0x0);
        gbc.writeMem(0x6001, { 0xcd });
        gbc.writeMem(0xa4f7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3e7f);
        EXPECT(gbc.pc(), 0xa4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f7), 0xcb);
        EXPECT(gbc.readMem(0xa4f8), 0xfe);
        // CB FE 0209
        gbc.setState(0x2227, 0xc99a, 0xc420, 0x3e28, 0x32b6, 0xf770, 0x1, 0x0);
        gbc.writeMem(0x2227, { 0xcb, 0xfe });
        gbc.writeMem(0xf770, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc99a);
        EXPECT(gbc.pc(), 0x2229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf770), 0xc8);
        // CB FE 020A
        gbc.setState(0xa15d, 0xc797, 0xc940, 0xf94a, 0x71b7, 0xb350, 0x0, 0x1);
        gbc.writeMem(0xa15d, { 0xcb, 0xfe });
        gbc.writeMem(0xb350, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc797);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15d), 0xcb);
        EXPECT(gbc.readMem(0xa15e), 0xfe);
        EXPECT(gbc.readMem(0xb350), 0xf4);
        // CB FE 020B
        gbc.setState(0x5d27, 0x5da2, 0x6100, 0x7772, 0x1e1, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0x5d27, { 0xcb, 0xfe });
        gbc.writeMem(0x9b19, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5da2);
        EXPECT(gbc.pc(), 0x5d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b19), 0x9e);
        // CB FE 020C
        gbc.setState(0x14e9, 0xc555, 0xce80, 0xa713, 0x25d3, 0x4419, 0x1, 0x1);
        gbc.writeMem(0x14e9, { 0xcb, 0xfe });
        gbc.writeMem(0x4419, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc555);
        EXPECT(gbc.pc(), 0x14eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 020D
        gbc.setState(0xac89, 0xec14, 0x730, 0xe9d3, 0x9688, 0x3796, 0x0, 0x1);
        gbc.writeMem(0x3796, { 0x8f });
        gbc.writeMem(0xac89, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xec14);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0xfe);
        // CB FE 020E
        gbc.setState(0x93e4, 0x92d8, 0x5fc0, 0xf924, 0x536d, 0xb14f, 0x0, 0x1);
        gbc.writeMem(0x93e4, { 0xcb, 0xfe });
        gbc.writeMem(0xb14f, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x92d8);
        EXPECT(gbc.pc(), 0x93e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e4), 0xcb);
        EXPECT(gbc.readMem(0x93e5), 0xfe);
        EXPECT(gbc.readMem(0xb14f), 0xd6);
        // CB FE 0210
        gbc.setState(0x6d8d, 0xd614, 0x2e10, 0xe761, 0x7111, 0xbb62, 0x1, 0x0);
        gbc.writeMem(0x6d8d, { 0xcb, 0xfe });
        gbc.writeMem(0xbb62, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd614);
        EXPECT(gbc.pc(), 0x6d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb62), 0xaa);
        // CB FE 0211
        gbc.setState(0xd7e6, 0x13d5, 0xd740, 0x2c84, 0x356f, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0xb9f9, { 0x9b });
        gbc.writeMem(0xd7e6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x13d5);
        EXPECT(gbc.pc(), 0xd7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f9), 0x9b);
        EXPECT(gbc.readMem(0xd7e6), 0xcb);
        EXPECT(gbc.readMem(0xd7e7), 0xfe);
        // CB FE 0212
        gbc.setState(0x4997, 0x8532, 0x4630, 0xb50a, 0x7478, 0xeeb1, 0x1, 0x1);
        gbc.writeMem(0x4997, { 0xcb, 0xfe });
        gbc.writeMem(0xeeb1, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8532);
        EXPECT(gbc.pc(), 0x4999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb1), 0xc3);
        // CB FE 0213
        gbc.setState(0x9fc3, 0xfbca, 0x3330, 0x81d, 0xdec0, 0xacdf, 0x1, 0x0);
        gbc.writeMem(0x9fc3, { 0xcb, 0xfe });
        gbc.writeMem(0xacdf, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfbca);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc3), 0xcb);
        EXPECT(gbc.readMem(0x9fc4), 0xfe);
        EXPECT(gbc.readMem(0xacdf), 0xc3);
        // CB FE 0215
        gbc.setState(0x54cf, 0x3bb, 0x7f80, 0x1062, 0xce1, 0xeb47, 0x0, 0x1);
        gbc.writeMem(0x54cf, { 0xcb, 0xfe });
        gbc.writeMem(0xeb47, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3bb);
        EXPECT(gbc.pc(), 0x54d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb47), 0x92);
        // CB FE 0216
        gbc.setState(0x8344, 0x97a9, 0x3540, 0x6920, 0xe1f2, 0x3aa2, 0x1, 0x0);
        gbc.writeMem(0x3aa2, { 0xec });
        gbc.writeMem(0x8344, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x97a9);
        EXPECT(gbc.pc(), 0x8346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8344), 0xcb);
        EXPECT(gbc.readMem(0x8345), 0xfe);
        // CB FE 0217
        gbc.setState(0x8615, 0xd6ad, 0x8f10, 0xcfc0, 0x240a, 0x9804, 0x1, 0x1);
        gbc.writeMem(0x8615, { 0xcb, 0xfe });
        gbc.writeMem(0x9804, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd6ad);
        EXPECT(gbc.pc(), 0x8617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8615), 0xcb);
        EXPECT(gbc.readMem(0x8616), 0xfe);
        EXPECT(gbc.readMem(0x9804), 0xcd);
        // CB FE 0218
        gbc.setState(0x9841, 0x16b0, 0x640, 0x9aba, 0xa29a, 0x77f1, 0x1, 0x0);
        gbc.writeMem(0x77f1, { 0xd5 });
        gbc.writeMem(0x9841, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x16b0);
        EXPECT(gbc.pc(), 0x9843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9841), 0xcb);
        EXPECT(gbc.readMem(0x9842), 0xfe);
        // CB FE 0219
        gbc.setState(0x35ce, 0x90a4, 0x5f90, 0xd503, 0x27b1, 0x9e10, 0x0, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0xfe });
        gbc.writeMem(0x9e10, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x90a4);
        EXPECT(gbc.pc(), 0x35d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e10), 0xde);
        // CB FE 021C
        gbc.setState(0x12a6, 0x825c, 0xe070, 0xc248, 0x51eb, 0x43c8, 0x0, 0x1);
        gbc.writeMem(0x12a6, { 0xcb, 0xfe });
        gbc.writeMem(0x43c8, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x825c);
        EXPECT(gbc.pc(), 0x12a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 021E
        gbc.setState(0xc693, 0x12f0, 0x6e20, 0x55f3, 0xa313, 0x33ee, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0x96 });
        gbc.writeMem(0xc693, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x12f0);
        EXPECT(gbc.pc(), 0xc695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc693), 0xcb);
        EXPECT(gbc.readMem(0xc694), 0xfe);
        // CB FE 021F
        gbc.setState(0x80a2, 0x1f05, 0x6470, 0x543d, 0xda64, 0x57bc, 0x1, 0x1);
        gbc.writeMem(0x57bc, { 0xd1 });
        gbc.writeMem(0x80a2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0x80a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a2), 0xcb);
        EXPECT(gbc.readMem(0x80a3), 0xfe);
        // CB FE 0220
        gbc.setState(0x1e9c, 0x699f, 0xdbc0, 0x9c38, 0xfdc, 0xa5c9, 0x1, 0x0);
        gbc.writeMem(0x1e9c, { 0xcb, 0xfe });
        gbc.writeMem(0xa5c9, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x699f);
        EXPECT(gbc.pc(), 0x1e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c9), 0xfc);
        // CB FE 0221
        gbc.setState(0x4611, 0xe30d, 0x7c40, 0x9707, 0xe8b9, 0xec4c, 0x0, 0x0);
        gbc.writeMem(0x4611, { 0xcb, 0xfe });
        gbc.writeMem(0xec4c, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe30d);
        EXPECT(gbc.pc(), 0x4613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4c), 0xc7);
        // CB FE 0222
        gbc.setState(0xd629, 0x79b6, 0xd8d0, 0xfeab, 0x2ef0, 0xf93b, 0x0, 0x1);
        gbc.writeMem(0xd629, { 0xcb, 0xfe });
        gbc.writeMem(0xf93b, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x79b6);
        EXPECT(gbc.pc(), 0xd62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd629), 0xcb);
        EXPECT(gbc.readMem(0xd62a), 0xfe);
        EXPECT(gbc.readMem(0xf93b), 0xe8);
        // CB FE 0223
        gbc.setState(0x7049, 0x2c82, 0x2a0, 0x4e47, 0x29f8, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0x7049, { 0xcb, 0xfe });
        gbc.writeMem(0x7f47, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2c82);
        EXPECT(gbc.pc(), 0x704b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0224
        gbc.setState(0x88d, 0x2a93, 0x5170, 0x78a, 0x38d8, 0xa07c, 0x0, 0x0);
        gbc.writeMem(0x88d, { 0xcb, 0xfe });
        gbc.writeMem(0xa07c, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2a93);
        EXPECT(gbc.pc(), 0x88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07c), 0xda);
        // CB FE 0225
        gbc.setState(0x656d, 0xdc2, 0x40, 0xbd54, 0x367b, 0xc59f, 0x1, 0x0);
        gbc.writeMem(0x656d, { 0xcb, 0xfe });
        gbc.writeMem(0xc59f, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdc2);
        EXPECT(gbc.pc(), 0x656f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59f), 0xce);
        // CB FE 0227
        gbc.setState(0xb7ef, 0xd74d, 0x7140, 0x5ca9, 0xd46a, 0x3851, 0x1, 0x0);
        gbc.writeMem(0x3851, { 0xef });
        gbc.writeMem(0xb7ef, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd74d);
        EXPECT(gbc.pc(), 0xb7f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ef), 0xcb);
        EXPECT(gbc.readMem(0xb7f0), 0xfe);
        // CB FE 0228
        gbc.setState(0xaaba, 0x7a39, 0xedb0, 0x9094, 0xfd84, 0xe3d2, 0x1, 0x1);
        gbc.writeMem(0xaaba, { 0xcb, 0xfe });
        gbc.writeMem(0xe3d2, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7a39);
        EXPECT(gbc.pc(), 0xaabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaba), 0xcb);
        EXPECT(gbc.readMem(0xaabb), 0xfe);
        EXPECT(gbc.readMem(0xe3d2), 0xba);
        // CB FE 0229
        gbc.setState(0x7a80, 0xf062, 0x31a0, 0xa5a2, 0xb398, 0xc94e, 0x0, 0x1);
        gbc.writeMem(0x7a80, { 0xcb, 0xfe });
        gbc.writeMem(0xc94e, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf062);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94e), 0xdb);
        // CB FE 022A
        gbc.setState(0x37c6, 0xc906, 0x67d0, 0x7dad, 0xfc45, 0xa76b, 0x0, 0x1);
        gbc.writeMem(0x37c6, { 0xcb, 0xfe });
        gbc.writeMem(0xa76b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc906);
        EXPECT(gbc.pc(), 0x37c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa76b), 0x88);
        // CB FE 022C
        gbc.setState(0xd739, 0xdc17, 0x8ac0, 0xfa21, 0x8a26, 0x84cc, 0x0, 0x1);
        gbc.writeMem(0x84cc, { 0xc5 });
        gbc.writeMem(0xd739, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdc17);
        EXPECT(gbc.pc(), 0xd73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cc), 0xc5);
        EXPECT(gbc.readMem(0xd739), 0xcb);
        EXPECT(gbc.readMem(0xd73a), 0xfe);
        // CB FE 022F
        gbc.setState(0xd23a, 0x5dc8, 0xa680, 0x7a62, 0x405d, 0xc1ac, 0x1, 0x1);
        gbc.writeMem(0xc1ac, { 0x7d });
        gbc.writeMem(0xd23a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5dc8);
        EXPECT(gbc.pc(), 0xd23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ac), 0xfd);
        EXPECT(gbc.readMem(0xd23a), 0xcb);
        EXPECT(gbc.readMem(0xd23b), 0xfe);
        // CB FE 0230
        gbc.setState(0xee9a, 0xb7ab, 0xf420, 0x779c, 0xe1d5, 0xa2a6, 0x1, 0x1);
        gbc.writeMem(0xa2a6, { 0x9e });
        gbc.writeMem(0xee9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb7ab);
        EXPECT(gbc.pc(), 0xee9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a6), 0x9e);
        EXPECT(gbc.readMem(0xee9a), 0xcb);
        EXPECT(gbc.readMem(0xee9b), 0xfe);
        // CB FE 0232
        gbc.setState(0xa20a, 0xbfda, 0x40c0, 0x2c4d, 0xd7c9, 0x57b4, 0x0, 0x0);
        gbc.writeMem(0x57b4, { 0xe9 });
        gbc.writeMem(0xa20a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbfda);
        EXPECT(gbc.pc(), 0xa20c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20a), 0xcb);
        EXPECT(gbc.readMem(0xa20b), 0xfe);
        // CB FE 0233
        gbc.setState(0xfe6, 0xdc74, 0xc6c0, 0xefaa, 0x3292, 0x45a1, 0x0, 0x0);
        gbc.writeMem(0xfe6, { 0xcb, 0xfe });
        gbc.writeMem(0x45a1, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdc74);
        EXPECT(gbc.pc(), 0xfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0235
        gbc.setState(0xa95c, 0x7180, 0x390, 0xc04, 0xdac6, 0xac73, 0x1, 0x0);
        gbc.writeMem(0xa95c, { 0xcb, 0xfe });
        gbc.writeMem(0xac73, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7180);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95c), 0xcb);
        EXPECT(gbc.readMem(0xa95d), 0xfe);
        EXPECT(gbc.readMem(0xac73), 0xbe);
        // CB FE 0236
        gbc.setState(0xe086, 0x201, 0xf210, 0xa051, 0xf982, 0x9a05, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0xd9 });
        gbc.writeMem(0xe086, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x201);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a05), 0xd9);
        EXPECT(gbc.readMem(0xe086), 0xcb);
        EXPECT(gbc.readMem(0xe087), 0xfe);
        // CB FE 0239
        gbc.setState(0x603d, 0x41a0, 0x38c0, 0x55a9, 0xbf64, 0x8a4a, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0xfe });
        gbc.writeMem(0x8a4a, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x41a0);
        EXPECT(gbc.pc(), 0x603f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a4a), 0xeb);
        // CB FE 023A
        gbc.setState(0x7d3d, 0xe724, 0x6090, 0x7694, 0x4e7, 0x27dc, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xb4 });
        gbc.writeMem(0x7d3d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe724);
        EXPECT(gbc.pc(), 0x7d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 023B
        gbc.setState(0x9a45, 0xad2e, 0x3930, 0xc4a3, 0x6e8b, 0x70d8, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0xe3 });
        gbc.writeMem(0x9a45, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xad2e);
        EXPECT(gbc.pc(), 0x9a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a45), 0xcb);
        EXPECT(gbc.readMem(0x9a46), 0xfe);
        // CB FE 023C
        gbc.setState(0x6fef, 0x8810, 0x6070, 0xe160, 0xde9, 0x5b94, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0xe1 });
        gbc.writeMem(0x6fef, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8810);
        EXPECT(gbc.pc(), 0x6ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 023D
        gbc.setState(0xd2a4, 0x1b5b, 0xfb0, 0xc6f6, 0x53cb, 0x5481, 0x1, 0x0);
        gbc.writeMem(0x5481, { 0xe7 });
        gbc.writeMem(0xd2a4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1b5b);
        EXPECT(gbc.pc(), 0xd2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a4), 0xcb);
        EXPECT(gbc.readMem(0xd2a5), 0xfe);
        // CB FE 0240
        gbc.setState(0x61c, 0xdbf, 0xcef0, 0x3c63, 0x7c0e, 0xe05d, 0x1, 0x0);
        gbc.writeMem(0x61c, { 0xcb, 0xfe });
        gbc.writeMem(0xe05d, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdbf);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05d), 0xff);
        // CB FE 0241
        gbc.setState(0x8843, 0x2f1d, 0x84e0, 0x802c, 0xe3d8, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0x39d4, { 0xca });
        gbc.writeMem(0x8843, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2f1d);
        EXPECT(gbc.pc(), 0x8845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8843), 0xcb);
        EXPECT(gbc.readMem(0x8844), 0xfe);
        // CB FE 0242
        gbc.setState(0x49e6, 0x18b2, 0xdfa0, 0xfe40, 0x2f21, 0xf9ff, 0x0, 0x1);
        gbc.writeMem(0x49e6, { 0xcb, 0xfe });
        gbc.writeMem(0xf9ff, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x18b2);
        EXPECT(gbc.pc(), 0x49e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9ff), 0xea);
        // CB FE 0244
        gbc.setState(0xc9f0, 0xc5cc, 0x41b0, 0xd83, 0x8097, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0xbdde, { 0xc9 });
        gbc.writeMem(0xc9f0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc5cc);
        EXPECT(gbc.pc(), 0xc9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdde), 0xc9);
        EXPECT(gbc.readMem(0xc9f0), 0xcb);
        EXPECT(gbc.readMem(0xc9f1), 0xfe);
        // CB FE 0245
        gbc.setState(0x6ca1, 0x2599, 0x6de0, 0x90c0, 0x4ff4, 0xbfdc, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0xfe });
        gbc.writeMem(0xbfdc, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2599);
        EXPECT(gbc.pc(), 0x6ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdc), 0xb9);
        // CB FE 0247
        gbc.setState(0x2fab, 0x1531, 0xa320, 0x34d0, 0x7f80, 0x91ed, 0x1, 0x1);
        gbc.writeMem(0x2fab, { 0xcb, 0xfe });
        gbc.writeMem(0x91ed, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1531);
        EXPECT(gbc.pc(), 0x2fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ed), 0x9e);
        // CB FE 0248
        gbc.setState(0xeaaa, 0x73bc, 0x6a60, 0x967e, 0xf0cb, 0xe08b, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xd6 });
        gbc.writeMem(0xeaaa, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x73bc);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08b), 0xd6);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0xfe);
        // CB FE 0249
        gbc.setState(0xbcdd, 0xaf9b, 0x6510, 0x2712, 0x1d76, 0x86c3, 0x0, 0x1);
        gbc.writeMem(0x86c3, { 0xbd });
        gbc.writeMem(0xbcdd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xaf9b);
        EXPECT(gbc.pc(), 0xbcdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c3), 0xbd);
        EXPECT(gbc.readMem(0xbcdd), 0xcb);
        EXPECT(gbc.readMem(0xbcde), 0xfe);
        // CB FE 024A
        gbc.setState(0xb222, 0x3200, 0x6bb0, 0x74dd, 0x97b6, 0x931b, 0x1, 0x1);
        gbc.writeMem(0x931b, { 0x62 });
        gbc.writeMem(0xb222, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3200);
        EXPECT(gbc.pc(), 0xb224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931b), 0xe2);
        EXPECT(gbc.readMem(0xb222), 0xcb);
        EXPECT(gbc.readMem(0xb223), 0xfe);
        // CB FE 024F
        gbc.setState(0x8b1e, 0x9ef1, 0x10, 0xd5b4, 0x9f7, 0x4f44, 0x1, 0x0);
        gbc.writeMem(0x4f44, { 0xc5 });
        gbc.writeMem(0x8b1e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9ef1);
        EXPECT(gbc.pc(), 0x8b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1e), 0xcb);
        EXPECT(gbc.readMem(0x8b1f), 0xfe);
        // CB FE 0250
        gbc.setState(0x8043, 0x3045, 0x4a40, 0x882c, 0x30d0, 0x99c7, 0x1, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xfe });
        gbc.writeMem(0x99c7, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3045);
        EXPECT(gbc.pc(), 0x8045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8043), 0xcb);
        EXPECT(gbc.readMem(0x8044), 0xfe);
        EXPECT(gbc.readMem(0x99c7), 0xe4);
        // CB FE 0251
        gbc.setState(0x8364, 0x5e69, 0x5da0, 0x8edf, 0x8c05, 0xf112, 0x1, 0x0);
        gbc.writeMem(0x8364, { 0xcb, 0xfe });
        gbc.writeMem(0xf112, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5e69);
        EXPECT(gbc.pc(), 0x8366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8364), 0xcb);
        EXPECT(gbc.readMem(0x8365), 0xfe);
        EXPECT(gbc.readMem(0xf112), 0x9e);
        // CB FE 0252
        gbc.setState(0xaf0f, 0x5a3c, 0xc840, 0x118e, 0x44bd, 0x4455, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0xed });
        gbc.writeMem(0xaf0f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5a3c);
        EXPECT(gbc.pc(), 0xaf11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0f), 0xcb);
        EXPECT(gbc.readMem(0xaf10), 0xfe);
        // CB FE 0253
        gbc.setState(0x9a48, 0x1927, 0x500, 0x439f, 0xf47e, 0xa81e, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0xfe });
        gbc.writeMem(0xa81e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1927);
        EXPECT(gbc.pc(), 0x9a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a48), 0xcb);
        EXPECT(gbc.readMem(0x9a49), 0xfe);
        EXPECT(gbc.readMem(0xa81e), 0xf3);
        // CB FE 0254
        gbc.setState(0x8857, 0xf287, 0x29f0, 0x1b01, 0xeaf8, 0xa2dc, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0xfe });
        gbc.writeMem(0xa2dc, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf287);
        EXPECT(gbc.pc(), 0x8859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8857), 0xcb);
        EXPECT(gbc.readMem(0x8858), 0xfe);
        EXPECT(gbc.readMem(0xa2dc), 0xb7);
        // CB FE 0255
        gbc.setState(0x6f86, 0x18a8, 0x8b0, 0x587, 0xb942, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0xc6 });
        gbc.writeMem(0x6f86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x18a8);
        EXPECT(gbc.pc(), 0x6f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0256
        gbc.setState(0xdd36, 0x62da, 0x7560, 0x9d38, 0x163a, 0x6591, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xdc });
        gbc.writeMem(0xdd36, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x62da);
        EXPECT(gbc.pc(), 0xdd38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd36), 0xcb);
        EXPECT(gbc.readMem(0xdd37), 0xfe);
        // CB FE 0257
        gbc.setState(0x7a9d, 0x8f05, 0x7430, 0xc47, 0xba6e, 0x1d30, 0x0, 0x0);
        gbc.writeMem(0x1d30, { 0xc5 });
        gbc.writeMem(0x7a9d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8f05);
        EXPECT(gbc.pc(), 0x7a9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 025C
        gbc.setState(0x64fb, 0xce18, 0x8cd0, 0xf577, 0x9e3a, 0xc2c9, 0x0, 0x0);
        gbc.writeMem(0x64fb, { 0xcb, 0xfe });
        gbc.writeMem(0xc2c9, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce18);
        EXPECT(gbc.pc(), 0x64fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c9), 0xf3);
        // CB FE 025E
        gbc.setState(0xa356, 0xf3ec, 0x6a90, 0xc2d4, 0xdf73, 0x8ecd, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0x1b });
        gbc.writeMem(0xa356, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecd), 0x9b);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0xfe);
        // CB FE 025F
        gbc.setState(0xb61, 0xdaa9, 0xafa0, 0x1189, 0xdc7d, 0x824e, 0x1, 0x1);
        gbc.writeMem(0xb61, { 0xcb, 0xfe });
        gbc.writeMem(0x824e, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdaa9);
        EXPECT(gbc.pc(), 0xb63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824e), 0x88);
        // CB FE 0260
        gbc.setState(0x3043, 0xc69c, 0xa560, 0x3b2a, 0xe9e3, 0xef49, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0xcb, 0xfe });
        gbc.writeMem(0xef49, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc69c);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef49), 0x92);
        // CB FE 0261
        gbc.setState(0x126c, 0x748a, 0x4b10, 0xf64d, 0xcaf6, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0x126c, { 0xcb, 0xfe });
        gbc.writeMem(0x9fff, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x748a);
        EXPECT(gbc.pc(), 0x126e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fff), 0xa2);
        // CB FE 0264
        gbc.setState(0x2a79, 0xec17, 0xca90, 0xaf9a, 0xd391, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x2a79, { 0xcb, 0xfe });
        gbc.writeMem(0x4269, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xec17);
        EXPECT(gbc.pc(), 0x2a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0265
        gbc.setState(0xdbf, 0x6d36, 0x6590, 0x963a, 0x371a, 0xdab0, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xfe });
        gbc.writeMem(0xdab0, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6d36);
        EXPECT(gbc.pc(), 0xdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab0), 0xf0);
        // CB FE 0267
        gbc.setState(0xae27, 0xee0a, 0x42e0, 0x34f3, 0x88b0, 0x5ce6, 0x0, 0x1);
        gbc.writeMem(0x5ce6, { 0x8a });
        gbc.writeMem(0xae27, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xee0a);
        EXPECT(gbc.pc(), 0xae29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae27), 0xcb);
        EXPECT(gbc.readMem(0xae28), 0xfe);
        // CB FE 0268
        gbc.setState(0x9172, 0x161a, 0x4890, 0x5894, 0xef4e, 0xe499, 0x1, 0x1);
        gbc.writeMem(0x9172, { 0xcb, 0xfe });
        gbc.writeMem(0xe499, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x9174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9172), 0xcb);
        EXPECT(gbc.readMem(0x9173), 0xfe);
        EXPECT(gbc.readMem(0xe499), 0x87);
        // CB FE 0269
        gbc.setState(0x7c3c, 0xeede, 0xd830, 0xada, 0x3d6e, 0xe678, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0xcb, 0xfe });
        gbc.writeMem(0xe678, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xeede);
        EXPECT(gbc.pc(), 0x7c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe678), 0x84);
        // CB FE 026B
        gbc.setState(0xac28, 0xe0f7, 0xbbb0, 0xc6b6, 0x1d9b, 0x83c2, 0x1, 0x1);
        gbc.writeMem(0x83c2, { 0xe1 });
        gbc.writeMem(0xac28, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe0f7);
        EXPECT(gbc.pc(), 0xac2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c2), 0xe1);
        EXPECT(gbc.readMem(0xac28), 0xcb);
        EXPECT(gbc.readMem(0xac29), 0xfe);
        // CB FE 026C
        gbc.setState(0xb2f2, 0x71cc, 0x61b0, 0x1bba, 0x31e2, 0x8abd, 0x0, 0x0);
        gbc.writeMem(0x8abd, { 0x99 });
        gbc.writeMem(0xb2f2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x71cc);
        EXPECT(gbc.pc(), 0xb2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abd), 0x99);
        EXPECT(gbc.readMem(0xb2f2), 0xcb);
        EXPECT(gbc.readMem(0xb2f3), 0xfe);
        // CB FE 026D
        gbc.setState(0x48ae, 0x2e9e, 0x1df0, 0x22f5, 0x4aba, 0xe8c3, 0x1, 0x0);
        gbc.writeMem(0x48ae, { 0xcb, 0xfe });
        gbc.writeMem(0xe8c3, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2e9e);
        EXPECT(gbc.pc(), 0x48b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c3), 0xa5);
        // CB FE 026E
        gbc.setState(0x356, 0xd97d, 0x4a20, 0xd6b, 0xfc78, 0x268f, 0x0, 0x1);
        gbc.writeMem(0x356, { 0xcb, 0xfe });
        gbc.writeMem(0x268f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd97d);
        EXPECT(gbc.pc(), 0x358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 026F
        gbc.setState(0x295, 0x10fa, 0x86e0, 0xe049, 0xbd75, 0x7c99, 0x1, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0xfe });
        gbc.writeMem(0x7c99, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x10fa);
        EXPECT(gbc.pc(), 0x297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0270
        gbc.setState(0x66e2, 0x975c, 0x9a50, 0x389e, 0x4d0c, 0x3ffb, 0x1, 0x0);
        gbc.writeMem(0x3ffb, { 0xc7 });
        gbc.writeMem(0x66e2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x975c);
        EXPECT(gbc.pc(), 0x66e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0272
        gbc.setState(0x61b0, 0xe109, 0x8be0, 0x9b23, 0xa2f9, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x61b0, { 0xcb, 0xfe });
        gbc.writeMem(0x93d5, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x61b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d5), 0xa5);
        // CB FE 0273
        gbc.setState(0x17c6, 0xe5b6, 0x46f0, 0x5bf1, 0x5298, 0xc901, 0x0, 0x0);
        gbc.writeMem(0x17c6, { 0xcb, 0xfe });
        gbc.writeMem(0xc901, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe5b6);
        EXPECT(gbc.pc(), 0x17c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc901), 0xaf);
        // CB FE 0274
        gbc.setState(0xa012, 0x26d0, 0xc080, 0x23bc, 0x9992, 0xe3cc, 0x1, 0x0);
        gbc.writeMem(0xa012, { 0xcb, 0xfe });
        gbc.writeMem(0xe3cc, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x26d0);
        EXPECT(gbc.pc(), 0xa014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa012), 0xcb);
        EXPECT(gbc.readMem(0xa013), 0xfe);
        EXPECT(gbc.readMem(0xe3cc), 0xcc);
        // CB FE 0275
        gbc.setState(0x5f4c, 0x974b, 0x41b0, 0xb3c4, 0x9dc0, 0xbda6, 0x1, 0x1);
        gbc.writeMem(0x5f4c, { 0xcb, 0xfe });
        gbc.writeMem(0xbda6, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x974b);
        EXPECT(gbc.pc(), 0x5f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda6), 0xa4);
        // CB FE 0276
        gbc.setState(0x5adf, 0xb13f, 0x8f0, 0x7049, 0x291, 0x9e16, 0x1, 0x1);
        gbc.writeMem(0x5adf, { 0xcb, 0xfe });
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb13f);
        EXPECT(gbc.pc(), 0x5ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e16), 0xae);
        // CB FE 0278
        gbc.setState(0x10a2, 0xc33b, 0xfe80, 0x21d7, 0x7950, 0xaaf7, 0x0, 0x0);
        gbc.writeMem(0x10a2, { 0xcb, 0xfe });
        gbc.writeMem(0xaaf7, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc33b);
        EXPECT(gbc.pc(), 0x10a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf7), 0xb9);
        // CB FE 027A
        gbc.setState(0x8772, 0x694c, 0x67f0, 0x9591, 0x15e0, 0x6765, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0x98 });
        gbc.writeMem(0x8772, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x694c);
        EXPECT(gbc.pc(), 0x8774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8772), 0xcb);
        EXPECT(gbc.readMem(0x8773), 0xfe);
        // CB FE 027B
        gbc.setState(0x6ab5, 0x4362, 0x5a90, 0xbb77, 0x56dc, 0x1a7c, 0x1, 0x0);
        gbc.writeMem(0x1a7c, { 0xc2 });
        gbc.writeMem(0x6ab5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4362);
        EXPECT(gbc.pc(), 0x6ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 027C
        gbc.setState(0x28a2, 0xa57a, 0x35f0, 0xd405, 0xa323, 0xbe34, 0x0, 0x0);
        gbc.writeMem(0x28a2, { 0xcb, 0xfe });
        gbc.writeMem(0xbe34, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa57a);
        EXPECT(gbc.pc(), 0x28a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe34), 0xbe);
        // CB FE 027D
        gbc.setState(0x18ca, 0x946e, 0x4c20, 0x9db8, 0xd90b, 0x32e7, 0x0, 0x0);
        gbc.writeMem(0x18ca, { 0xcb, 0xfe });
        gbc.writeMem(0x32e7, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x946e);
        EXPECT(gbc.pc(), 0x18cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 027E
        gbc.setState(0xbde4, 0xf5e2, 0xd8b0, 0x3f70, 0x7e8e, 0x2be1, 0x0, 0x0);
        gbc.writeMem(0x2be1, { 0xf6 });
        gbc.writeMem(0xbde4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf5e2);
        EXPECT(gbc.pc(), 0xbde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde4), 0xcb);
        EXPECT(gbc.readMem(0xbde5), 0xfe);
        // CB FE 027F
        gbc.setState(0x35a0, 0x497c, 0x860, 0x260f, 0xa51, 0xcbc, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0xaa });
        gbc.writeMem(0x35a0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x497c);
        EXPECT(gbc.pc(), 0x35a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0281
        gbc.setState(0x9cd6, 0xc601, 0xd3f0, 0x9545, 0x4042, 0xb63f, 0x1, 0x1);
        gbc.writeMem(0x9cd6, { 0xcb, 0xfe });
        gbc.writeMem(0xb63f, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc601);
        EXPECT(gbc.pc(), 0x9cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd6), 0xcb);
        EXPECT(gbc.readMem(0x9cd7), 0xfe);
        EXPECT(gbc.readMem(0xb63f), 0xaf);
        // CB FE 0282
        gbc.setState(0x9ee0, 0x60ca, 0x6f70, 0xf747, 0xca02, 0xa025, 0x1, 0x1);
        gbc.writeMem(0x9ee0, { 0xcb, 0xfe });
        gbc.writeMem(0xa025, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x60ca);
        EXPECT(gbc.pc(), 0x9ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee0), 0xcb);
        EXPECT(gbc.readMem(0x9ee1), 0xfe);
        EXPECT(gbc.readMem(0xa025), 0xad);
        // CB FE 0284
        gbc.setState(0x62f2, 0x74ee, 0x4cf0, 0xd0dc, 0x45cc, 0xa2e2, 0x1, 0x0);
        gbc.writeMem(0x62f2, { 0xcb, 0xfe });
        gbc.writeMem(0xa2e2, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0x62f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e2), 0xe7);
        // CB FE 0285
        gbc.setState(0xc48d, 0x4c4a, 0x9700, 0xb25b, 0x18bb, 0xa25, 0x1, 0x1);
        gbc.writeMem(0xa25, { 0xf4 });
        gbc.writeMem(0xc48d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4c4a);
        EXPECT(gbc.pc(), 0xc48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48d), 0xcb);
        EXPECT(gbc.readMem(0xc48e), 0xfe);
        // CB FE 0286
        gbc.setState(0x9613, 0xfbb4, 0x6a70, 0x569b, 0xa490, 0x2a9a, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0x84 });
        gbc.writeMem(0x9613, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfbb4);
        EXPECT(gbc.pc(), 0x9615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9613), 0xcb);
        EXPECT(gbc.readMem(0x9614), 0xfe);
        // CB FE 0288
        gbc.setState(0x91c2, 0x3b3b, 0xc8f0, 0xa81b, 0xb786, 0xd226, 0x1, 0x1);
        gbc.writeMem(0x91c2, { 0xcb, 0xfe });
        gbc.writeMem(0xd226, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3b3b);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c2), 0xcb);
        EXPECT(gbc.readMem(0x91c3), 0xfe);
        EXPECT(gbc.readMem(0xd226), 0xc9);
        // CB FE 0289
        gbc.setState(0x3208, 0x8bbe, 0xfe70, 0xe2a2, 0x38bf, 0xc8f8, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0xcb, 0xfe });
        gbc.writeMem(0xc8f8, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8bbe);
        EXPECT(gbc.pc(), 0x320a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f8), 0xd2);
        // CB FE 028A
        gbc.setState(0x2617, 0xe55a, 0x6aa0, 0x2a20, 0x7b9f, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0xfe });
        gbc.writeMem(0xaf7e, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe55a);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7e), 0xa5);
        // CB FE 028D
        gbc.setState(0xc287, 0x4c4f, 0xfea0, 0xe34c, 0xbf5b, 0xcc09, 0x1, 0x1);
        gbc.writeMem(0xc287, { 0xcb, 0xfe });
        gbc.writeMem(0xcc09, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4c4f);
        EXPECT(gbc.pc(), 0xc289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc287), 0xcb);
        EXPECT(gbc.readMem(0xc288), 0xfe);
        EXPECT(gbc.readMem(0xcc09), 0x81);
        // CB FE 028E
        gbc.setState(0x460f, 0xa601, 0xd0c0, 0xc509, 0x3d02, 0xc246, 0x1, 0x1);
        gbc.writeMem(0x460f, { 0xcb, 0xfe });
        gbc.writeMem(0xc246, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa601);
        EXPECT(gbc.pc(), 0x4611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc246), 0x9f);
        // CB FE 0290
        gbc.setState(0x963f, 0xcc84, 0x76b0, 0xe84, 0x6fc2, 0xe8e8, 0x1, 0x1);
        gbc.writeMem(0x963f, { 0xcb, 0xfe });
        gbc.writeMem(0xe8e8, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcc84);
        EXPECT(gbc.pc(), 0x9641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963f), 0xcb);
        EXPECT(gbc.readMem(0x9640), 0xfe);
        EXPECT(gbc.readMem(0xe8e8), 0xf9);
        // CB FE 0291
        gbc.setState(0xc8d7, 0xfe1e, 0x9680, 0x3a1e, 0x27ef, 0x98c0, 0x1, 0x0);
        gbc.writeMem(0x98c0, { 0x47 });
        gbc.writeMem(0xc8d7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfe1e);
        EXPECT(gbc.pc(), 0xc8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c0), 0xc7);
        EXPECT(gbc.readMem(0xc8d7), 0xcb);
        EXPECT(gbc.readMem(0xc8d8), 0xfe);
        // CB FE 0293
        gbc.setState(0x530c, 0x6121, 0xcc70, 0xfc38, 0xcda4, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xfe });
        gbc.writeMem(0x942e, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6121);
        EXPECT(gbc.pc(), 0x530e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942e), 0xaf);
        // CB FE 0294
        gbc.setState(0x469a, 0xd1f6, 0x8060, 0x396a, 0xe8cb, 0xf8f5, 0x0, 0x0);
        gbc.writeMem(0x469a, { 0xcb, 0xfe });
        gbc.writeMem(0xf8f5, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd1f6);
        EXPECT(gbc.pc(), 0x469c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8f5), 0x97);
        // CB FE 0295
        gbc.setState(0xd293, 0x94b8, 0xc570, 0x5e85, 0x2904, 0x9d73, 0x1, 0x1);
        gbc.writeMem(0x9d73, { 0x2f });
        gbc.writeMem(0xd293, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x94b8);
        EXPECT(gbc.pc(), 0xd295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d73), 0xaf);
        EXPECT(gbc.readMem(0xd293), 0xcb);
        EXPECT(gbc.readMem(0xd294), 0xfe);
        // CB FE 0296
        gbc.setState(0xca9a, 0x3446, 0x10c0, 0x7e26, 0xa125, 0xe6e4, 0x1, 0x0);
        gbc.writeMem(0xca9a, { 0xcb, 0xfe });
        gbc.writeMem(0xe6e4, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0xca9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca9a), 0xcb);
        EXPECT(gbc.readMem(0xca9b), 0xfe);
        EXPECT(gbc.readMem(0xe6e4), 0x95);
        // CB FE 0299
        gbc.setState(0x2535, 0xa363, 0x9e40, 0x1bf8, 0xcd12, 0xc410, 0x0, 0x0);
        gbc.writeMem(0x2535, { 0xcb, 0xfe });
        gbc.writeMem(0xc410, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa363);
        EXPECT(gbc.pc(), 0x2537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc410), 0xf0);
        // CB FE 029A
        gbc.setState(0xb12c, 0xc1a2, 0xe670, 0x2615, 0x30af, 0xc469, 0x0, 0x1);
        gbc.writeMem(0xb12c, { 0xcb, 0xfe });
        gbc.writeMem(0xc469, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc1a2);
        EXPECT(gbc.pc(), 0xb12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12c), 0xcb);
        EXPECT(gbc.readMem(0xb12d), 0xfe);
        EXPECT(gbc.readMem(0xc469), 0xfa);
        // CB FE 029B
        gbc.setState(0x8394, 0xb149, 0x7930, 0x2495, 0x9ad9, 0x91ec, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xcb, 0xfe });
        gbc.writeMem(0x91ec, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb149);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8394), 0xcb);
        EXPECT(gbc.readMem(0x8395), 0xfe);
        EXPECT(gbc.readMem(0x91ec), 0xf7);
        // CB FE 029C
        gbc.setState(0xe988, 0x5ce4, 0x42d0, 0x5667, 0x878f, 0xd5f3, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xf });
        gbc.writeMem(0xe988, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5ce4);
        EXPECT(gbc.pc(), 0xe98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f3), 0x8f);
        EXPECT(gbc.readMem(0xe988), 0xcb);
        EXPECT(gbc.readMem(0xe989), 0xfe);
        // CB FE 029E
        gbc.setState(0x6822, 0x7306, 0x4bc0, 0x20eb, 0xf124, 0x6b94, 0x0, 0x1);
        gbc.writeMem(0x6822, { 0xcb, 0xfe });
        gbc.writeMem(0x6b94, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7306);
        EXPECT(gbc.pc(), 0x6824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 029F
        gbc.setState(0x6e99, 0xf0b0, 0xe470, 0x67ad, 0x5072, 0x6c25, 0x0, 0x0);
        gbc.writeMem(0x6c25, { 0xe3 });
        gbc.writeMem(0x6e99, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf0b0);
        EXPECT(gbc.pc(), 0x6e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02A0
        gbc.setState(0x1a8f, 0xec87, 0x8450, 0x7199, 0xaa81, 0x7572, 0x1, 0x0);
        gbc.writeMem(0x1a8f, { 0xcb, 0xfe });
        gbc.writeMem(0x7572, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xec87);
        EXPECT(gbc.pc(), 0x1a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02A1
        gbc.setState(0x9e56, 0x1978, 0xe960, 0x353a, 0x194b, 0xf346, 0x1, 0x1);
        gbc.writeMem(0x9e56, { 0xcb, 0xfe });
        gbc.writeMem(0xf346, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1978);
        EXPECT(gbc.pc(), 0x9e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e56), 0xcb);
        EXPECT(gbc.readMem(0x9e57), 0xfe);
        EXPECT(gbc.readMem(0xf346), 0x91);
        // CB FE 02A2
        gbc.setState(0x78e1, 0xcc02, 0x8520, 0x908d, 0xcd87, 0x8eed, 0x0, 0x0);
        gbc.writeMem(0x78e1, { 0xcb, 0xfe });
        gbc.writeMem(0x8eed, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcc02);
        EXPECT(gbc.pc(), 0x78e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eed), 0xb8);
        // CB FE 02A4
        gbc.setState(0x57ae, 0xd869, 0xc510, 0xba15, 0x25b4, 0x1bda, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xac });
        gbc.writeMem(0x57ae, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0x57b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02A5
        gbc.setState(0x3d5c, 0xe69a, 0x38a0, 0xfce0, 0xf3cf, 0x6f70, 0x0, 0x0);
        gbc.writeMem(0x3d5c, { 0xcb, 0xfe });
        gbc.writeMem(0x6f70, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe69a);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02A6
        gbc.setState(0x3bad, 0x2069, 0xe9b0, 0xa8dc, 0x99cb, 0x5ea5, 0x1, 0x0);
        gbc.writeMem(0x3bad, { 0xcb, 0xfe });
        gbc.writeMem(0x5ea5, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2069);
        EXPECT(gbc.pc(), 0x3baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02A7
        gbc.setState(0x4e36, 0x6326, 0x8cc0, 0xf2ea, 0x6d71, 0x93f4, 0x0, 0x0);
        gbc.writeMem(0x4e36, { 0xcb, 0xfe });
        gbc.writeMem(0x93f4, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6326);
        EXPECT(gbc.pc(), 0x4e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f4), 0xe7);
        // CB FE 02A8
        gbc.setState(0x201e, 0x75bf, 0x9810, 0xc5bb, 0x91c3, 0x8fc3, 0x1, 0x0);
        gbc.writeMem(0x201e, { 0xcb, 0xfe });
        gbc.writeMem(0x8fc3, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x75bf);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc3), 0xda);
        // CB FE 02AA
        gbc.setState(0x2619, 0xe6ae, 0xf0c0, 0x6bd7, 0xc906, 0xb041, 0x1, 0x1);
        gbc.writeMem(0x2619, { 0xcb, 0xfe });
        gbc.writeMem(0xb041, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe6ae);
        EXPECT(gbc.pc(), 0x261b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb041), 0xac);
        // CB FE 02AC
        gbc.setState(0x753, 0x2e08, 0x920, 0xc72, 0xcb44, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0xfe });
        gbc.writeMem(0x3079, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2e08);
        EXPECT(gbc.pc(), 0x755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02AE
        gbc.setState(0x87b4, 0xc571, 0x670, 0x485c, 0x8c86, 0xc134, 0x1, 0x0);
        gbc.writeMem(0x87b4, { 0xcb, 0xfe });
        gbc.writeMem(0xc134, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc571);
        EXPECT(gbc.pc(), 0x87b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b4), 0xcb);
        EXPECT(gbc.readMem(0x87b5), 0xfe);
        EXPECT(gbc.readMem(0xc134), 0x87);
        // CB FE 02AF
        gbc.setState(0x371f, 0xed38, 0x50b0, 0x9185, 0xc74, 0xf570, 0x1, 0x1);
        gbc.writeMem(0x371f, { 0xcb, 0xfe });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xed38);
        EXPECT(gbc.pc(), 0x3721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf570), 0xde);
        // CB FE 02B0
        gbc.setState(0x76cb, 0xcca8, 0xf320, 0xed3c, 0x99bf, 0x1a6e, 0x0, 0x1);
        gbc.writeMem(0x1a6e, { 0xc1 });
        gbc.writeMem(0x76cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcca8);
        EXPECT(gbc.pc(), 0x76cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02B2
        gbc.setState(0x90d3, 0x2a3f, 0x5090, 0x22cd, 0x341f, 0x8807, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xdb });
        gbc.writeMem(0x90d3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2a3f);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8807), 0xdb);
        EXPECT(gbc.readMem(0x90d3), 0xcb);
        EXPECT(gbc.readMem(0x90d4), 0xfe);
        // CB FE 02B3
        gbc.setState(0xa4df, 0xf76f, 0xb200, 0x40f1, 0x2663, 0xccfd, 0x1, 0x1);
        gbc.writeMem(0xa4df, { 0xcb, 0xfe });
        gbc.writeMem(0xccfd, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf76f);
        EXPECT(gbc.pc(), 0xa4e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4df), 0xcb);
        EXPECT(gbc.readMem(0xa4e0), 0xfe);
        EXPECT(gbc.readMem(0xccfd), 0xc6);
        // CB FE 02B5
        gbc.setState(0x9f86, 0x42a7, 0xe560, 0xdd46, 0xf7f3, 0x3c3d, 0x1, 0x0);
        gbc.writeMem(0x3c3d, { 0xa7 });
        gbc.writeMem(0x9f86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x42a7);
        EXPECT(gbc.pc(), 0x9f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f86), 0xcb);
        EXPECT(gbc.readMem(0x9f87), 0xfe);
        // CB FE 02B6
        gbc.setState(0xdde5, 0xe877, 0xb90, 0xa2cf, 0x3aec, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0xdde5, { 0xcb, 0xfe });
        gbc.writeMem(0xfaf3, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe877);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde5), 0xcb);
        EXPECT(gbc.readMem(0xdde6), 0xfe);
        EXPECT(gbc.readMem(0xfaf3), 0x87);
        // CB FE 02B8
        gbc.setState(0x892c, 0x2963, 0x9190, 0x8c17, 0x80d9, 0x3996, 0x1, 0x0);
        gbc.writeMem(0x3996, { 0x84 });
        gbc.writeMem(0x892c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2963);
        EXPECT(gbc.pc(), 0x892e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892c), 0xcb);
        EXPECT(gbc.readMem(0x892d), 0xfe);
        // CB FE 02BB
        gbc.setState(0x50f4, 0xdf05, 0x8ea0, 0xc7c6, 0x6d15, 0xb2c4, 0x0, 0x1);
        gbc.writeMem(0x50f4, { 0xcb, 0xfe });
        gbc.writeMem(0xb2c4, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdf05);
        EXPECT(gbc.pc(), 0x50f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c4), 0xd6);
        // CB FE 02BC
        gbc.setState(0xe56e, 0xda27, 0x4860, 0x5310, 0x8cc3, 0xb226, 0x1, 0x1);
        gbc.writeMem(0xb226, { 0xad });
        gbc.writeMem(0xe56e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xda27);
        EXPECT(gbc.pc(), 0xe570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb226), 0xad);
        EXPECT(gbc.readMem(0xe56e), 0xcb);
        EXPECT(gbc.readMem(0xe56f), 0xfe);
        // CB FE 02BE
        gbc.setState(0xb16f, 0xf41f, 0x4630, 0x655f, 0x7967, 0xbe76, 0x1, 0x1);
        gbc.writeMem(0xb16f, { 0xcb, 0xfe });
        gbc.writeMem(0xbe76, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf41f);
        EXPECT(gbc.pc(), 0xb171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16f), 0xcb);
        EXPECT(gbc.readMem(0xb170), 0xfe);
        EXPECT(gbc.readMem(0xbe76), 0xcd);
        // CB FE 02BF
        gbc.setState(0x2570, 0x7da8, 0x8d40, 0x1c9e, 0xb9b9, 0xdbab, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0xfe });
        gbc.writeMem(0xdbab, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7da8);
        EXPECT(gbc.pc(), 0x2572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbab), 0xc6);
        // CB FE 02C0
        gbc.setState(0xb0e2, 0x3929, 0x9b50, 0xfce6, 0xea7d, 0xd7cd, 0x0, 0x0);
        gbc.writeMem(0xb0e2, { 0xcb, 0xfe });
        gbc.writeMem(0xd7cd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3929);
        EXPECT(gbc.pc(), 0xb0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e2), 0xcb);
        EXPECT(gbc.readMem(0xb0e3), 0xfe);
        EXPECT(gbc.readMem(0xd7cd), 0xf8);
        // CB FE 02C1
        gbc.setState(0xa09d, 0x8c73, 0x4fd0, 0x1c51, 0x3318, 0x6b9d, 0x1, 0x1);
        gbc.writeMem(0x6b9d, { 0x9c });
        gbc.writeMem(0xa09d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8c73);
        EXPECT(gbc.pc(), 0xa09f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09d), 0xcb);
        EXPECT(gbc.readMem(0xa09e), 0xfe);
        // CB FE 02C2
        gbc.setState(0xda33, 0xdbb9, 0x47f0, 0xee91, 0xe041, 0x3e6f, 0x0, 0x0);
        gbc.writeMem(0x3e6f, { 0xad });
        gbc.writeMem(0xda33, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdbb9);
        EXPECT(gbc.pc(), 0xda35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda33), 0xcb);
        EXPECT(gbc.readMem(0xda34), 0xfe);
        // CB FE 02C7
        gbc.setState(0x9c8e, 0x410c, 0x3b40, 0xa99c, 0x5ac8, 0x1ab3, 0x0, 0x1);
        gbc.writeMem(0x1ab3, { 0xb8 });
        gbc.writeMem(0x9c8e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x410c);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c8e), 0xcb);
        EXPECT(gbc.readMem(0x9c8f), 0xfe);
        // CB FE 02C8
        gbc.setState(0x12f7, 0xd522, 0x1150, 0xc23c, 0xa39f, 0x9a30, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0xcb, 0xfe });
        gbc.writeMem(0x9a30, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd522);
        EXPECT(gbc.pc(), 0x12f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a30), 0xd1);
        // CB FE 02CA
        gbc.setState(0xee90, 0xde7b, 0xfd00, 0x7057, 0xa076, 0x9328, 0x0, 0x0);
        gbc.writeMem(0x9328, { 0x4b });
        gbc.writeMem(0xee90, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0xee92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9328), 0xcb);
        EXPECT(gbc.readMem(0xee90), 0xcb);
        EXPECT(gbc.readMem(0xee91), 0xfe);
        // CB FE 02CC
        gbc.setState(0x2571, 0x982a, 0x3300, 0xac63, 0x3c89, 0x4908, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0xfe });
        gbc.writeMem(0x4908, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x982a);
        EXPECT(gbc.pc(), 0x2573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02CE
        gbc.setState(0xaa5f, 0x5d8d, 0x2c80, 0x48a5, 0xe894, 0xe69f, 0x1, 0x0);
        gbc.writeMem(0xaa5f, { 0xcb, 0xfe });
        gbc.writeMem(0xe69f, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5d8d);
        EXPECT(gbc.pc(), 0xaa61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5f), 0xcb);
        EXPECT(gbc.readMem(0xaa60), 0xfe);
        EXPECT(gbc.readMem(0xe69f), 0xfb);
        // CB FE 02CF
        gbc.setState(0x454f, 0x41b, 0x840, 0x55d2, 0x4e6e, 0xf821, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0xfe });
        gbc.writeMem(0xf821, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x41b);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf821), 0x83);
        // CB FE 02D0
        gbc.setState(0x7d42, 0x49bd, 0x6220, 0x4e91, 0x32c, 0xe310, 0x1, 0x1);
        gbc.writeMem(0x7d42, { 0xcb, 0xfe });
        gbc.writeMem(0xe310, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x49bd);
        EXPECT(gbc.pc(), 0x7d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe310), 0xb0);
        // CB FE 02D1
        gbc.setState(0xc342, 0xf1b6, 0x2be0, 0xc0a0, 0xa961, 0xf037, 0x1, 0x0);
        gbc.writeMem(0xc342, { 0xcb, 0xfe });
        gbc.writeMem(0xf037, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf1b6);
        EXPECT(gbc.pc(), 0xc344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc342), 0xcb);
        EXPECT(gbc.readMem(0xc343), 0xfe);
        EXPECT(gbc.readMem(0xf037), 0x9f);
        // CB FE 02D3
        gbc.setState(0x6176, 0xf4e7, 0x85c0, 0x304d, 0x8f48, 0xc5f8, 0x0, 0x1);
        gbc.writeMem(0x6176, { 0xcb, 0xfe });
        gbc.writeMem(0xc5f8, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf4e7);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f8), 0xbc);
        // CB FE 02D4
        gbc.setState(0x5a05, 0x6eae, 0x1df0, 0x2fb0, 0x3a06, 0x771f, 0x1, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0xfe });
        gbc.writeMem(0x771f, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6eae);
        EXPECT(gbc.pc(), 0x5a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02D6
        gbc.setState(0x7312, 0xfdb3, 0xd840, 0x2f42, 0x930b, 0xe439, 0x0, 0x0);
        gbc.writeMem(0x7312, { 0xcb, 0xfe });
        gbc.writeMem(0xe439, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfdb3);
        EXPECT(gbc.pc(), 0x7314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe439), 0xe4);
        // CB FE 02D8
        gbc.setState(0x60fb, 0x7dea, 0xec50, 0xe8a7, 0x147d, 0x77cd, 0x1, 0x1);
        gbc.writeMem(0x60fb, { 0xcb, 0xfe });
        gbc.writeMem(0x77cd, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7dea);
        EXPECT(gbc.pc(), 0x60fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02DA
        gbc.setState(0xf72, 0x7f6d, 0x3d0, 0x5c47, 0xe7a8, 0xb0f9, 0x1, 0x0);
        gbc.writeMem(0xf72, { 0xcb, 0xfe });
        gbc.writeMem(0xb0f9, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7f6d);
        EXPECT(gbc.pc(), 0xf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f9), 0xa1);
        // CB FE 02DB
        gbc.setState(0xa47, 0x2782, 0x1740, 0x66c6, 0x3f7f, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0xa47, { 0xcb, 0xfe });
        gbc.writeMem(0x3b37, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2782);
        EXPECT(gbc.pc(), 0xa49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02DC
        gbc.setState(0x7c9e, 0x242a, 0xa010, 0xa76c, 0x1f21, 0xb620, 0x0, 0x0);
        gbc.writeMem(0x7c9e, { 0xcb, 0xfe });
        gbc.writeMem(0xb620, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x242a);
        EXPECT(gbc.pc(), 0x7ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb620), 0xdb);
        // CB FE 02DD
        gbc.setState(0xab5a, 0x6b64, 0xc210, 0xb00d, 0x7404, 0xdb1a, 0x1, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0xfe });
        gbc.writeMem(0xdb1a, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6b64);
        EXPECT(gbc.pc(), 0xab5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5a), 0xcb);
        EXPECT(gbc.readMem(0xab5b), 0xfe);
        EXPECT(gbc.readMem(0xdb1a), 0xf9);
        // CB FE 02DE
        gbc.setState(0x6e02, 0x65d3, 0x3f60, 0xb9e2, 0x5461, 0xad6f, 0x1, 0x0);
        gbc.writeMem(0x6e02, { 0xcb, 0xfe });
        gbc.writeMem(0xad6f, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x65d3);
        EXPECT(gbc.pc(), 0x6e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6f), 0xa7);
        // CB FE 02E0
        gbc.setState(0xe4c1, 0xc46d, 0x6e0, 0x6bc2, 0x97ea, 0xd431, 0x0, 0x1);
        gbc.writeMem(0xd431, { 0x86 });
        gbc.writeMem(0xe4c1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc46d);
        EXPECT(gbc.pc(), 0xe4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0x86);
        EXPECT(gbc.readMem(0xe4c1), 0xcb);
        EXPECT(gbc.readMem(0xe4c2), 0xfe);
        // CB FE 02E1
        gbc.setState(0xd7d0, 0x1239, 0x7700, 0x689b, 0xe7ae, 0xa5c1, 0x1, 0x0);
        gbc.writeMem(0xa5c1, { 0x16 });
        gbc.writeMem(0xd7d0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1239);
        EXPECT(gbc.pc(), 0xd7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c1), 0x96);
        EXPECT(gbc.readMem(0xd7d0), 0xcb);
        EXPECT(gbc.readMem(0xd7d1), 0xfe);
        // CB FE 02E2
        gbc.setState(0x7ff0, 0xbda4, 0x2d60, 0xa301, 0x877c, 0xaadf, 0x1, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0xfe });
        gbc.writeMem(0xaadf, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbda4);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadf), 0xd7);
        // CB FE 02E3
        gbc.setState(0xaa15, 0xe159, 0xb430, 0x7720, 0xabcd, 0xf6c9, 0x0, 0x0);
        gbc.writeMem(0xaa15, { 0xcb, 0xfe });
        gbc.writeMem(0xf6c9, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe159);
        EXPECT(gbc.pc(), 0xaa17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa15), 0xcb);
        EXPECT(gbc.readMem(0xaa16), 0xfe);
        EXPECT(gbc.readMem(0xf6c9), 0xec);
        // CB FE 02E4
        gbc.setState(0x582, 0x12da, 0x91f0, 0x6c1b, 0xcb0d, 0x9941, 0x0, 0x0);
        gbc.writeMem(0x582, { 0xcb, 0xfe });
        gbc.writeMem(0x9941, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x12da);
        EXPECT(gbc.pc(), 0x584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9941), 0xc5);
        // CB FE 02E5
        gbc.setState(0xa1d3, 0x963c, 0xbde0, 0xae08, 0xe0ce, 0x8cb1, 0x1, 0x0);
        gbc.writeMem(0x8cb1, { 0xa1 });
        gbc.writeMem(0xa1d3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x963c);
        EXPECT(gbc.pc(), 0xa1d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb1), 0xa1);
        EXPECT(gbc.readMem(0xa1d3), 0xcb);
        EXPECT(gbc.readMem(0xa1d4), 0xfe);
        // CB FE 02E7
        gbc.setState(0x26d4, 0x1dee, 0xe50, 0x12f8, 0xa99a, 0xd343, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0xfe });
        gbc.writeMem(0xd343, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1dee);
        EXPECT(gbc.pc(), 0x26d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd343), 0xde);
        // CB FE 02E8
        gbc.setState(0x251, 0xe986, 0x4b10, 0x913c, 0xfa03, 0xbe32, 0x0, 0x1);
        gbc.writeMem(0x251, { 0xcb, 0xfe });
        gbc.writeMem(0xbe32, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe986);
        EXPECT(gbc.pc(), 0x253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe32), 0x9e);
        // CB FE 02E9
        gbc.setState(0x65b, 0x5c76, 0xf5f0, 0x1436, 0xb16f, 0x798c, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0xfe });
        gbc.writeMem(0x798c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5c76);
        EXPECT(gbc.pc(), 0x65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02EC
        gbc.setState(0x1d51, 0x10cf, 0x4640, 0x2956, 0x205e, 0xaaef, 0x0, 0x1);
        gbc.writeMem(0x1d51, { 0xcb, 0xfe });
        gbc.writeMem(0xaaef, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x10cf);
        EXPECT(gbc.pc(), 0x1d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaef), 0xca);
        // CB FE 02EE
        gbc.setState(0x8d88, 0xc017, 0x9210, 0xd786, 0x4b6d, 0xfaf2, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0xcb, 0xfe });
        gbc.writeMem(0xfaf2, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc017);
        EXPECT(gbc.pc(), 0x8d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d88), 0xcb);
        EXPECT(gbc.readMem(0x8d89), 0xfe);
        EXPECT(gbc.readMem(0xfaf2), 0xf0);
        // CB FE 02F1
        gbc.setState(0xd99e, 0xfa4e, 0x3610, 0x821a, 0x8db7, 0x9433, 0x0, 0x1);
        gbc.writeMem(0x9433, { 0xd4 });
        gbc.writeMem(0xd99e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfa4e);
        EXPECT(gbc.pc(), 0xd9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9433), 0xd4);
        EXPECT(gbc.readMem(0xd99e), 0xcb);
        EXPECT(gbc.readMem(0xd99f), 0xfe);
        // CB FE 02F2
        gbc.setState(0x55e9, 0x5595, 0x8ed0, 0xd080, 0x2014, 0x9e16, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0xfe });
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0x55eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e16), 0xae);
        // CB FE 02F3
        gbc.setState(0x476d, 0x1c9a, 0x2a70, 0x55ea, 0x6fa1, 0x1281, 0x1, 0x1);
        gbc.writeMem(0x1281, { 0xf3 });
        gbc.writeMem(0x476d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1c9a);
        EXPECT(gbc.pc(), 0x476f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 02F4
        gbc.setState(0x49cf, 0x58b4, 0x5210, 0x69d5, 0xfa63, 0x8219, 0x1, 0x1);
        gbc.writeMem(0x49cf, { 0xcb, 0xfe });
        gbc.writeMem(0x8219, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x58b4);
        EXPECT(gbc.pc(), 0x49d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8219), 0xa7);
        // CB FE 02F5
        gbc.setState(0x157c, 0x7a49, 0xbba0, 0x8f5c, 0xf33a, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x157c, { 0xcb, 0xfe });
        gbc.writeMem(0xacef, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7a49);
        EXPECT(gbc.pc(), 0x157e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacef), 0xd2);
        // CB FE 02F6
        gbc.setState(0xbe2c, 0x3fa0, 0x6ac0, 0x20e5, 0x5744, 0x9af, 0x1, 0x1);
        gbc.writeMem(0x9af, { 0xe7 });
        gbc.writeMem(0xbe2c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3fa0);
        EXPECT(gbc.pc(), 0xbe2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2c), 0xcb);
        EXPECT(gbc.readMem(0xbe2d), 0xfe);
        // CB FE 02F8
        gbc.setState(0x2285, 0x2b68, 0x1e00, 0xb5e9, 0xce7b, 0x697a, 0x0, 0x1);
        gbc.writeMem(0x2285, { 0xcb, 0xfe });
        gbc.writeMem(0x697a, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2b68);
        EXPECT(gbc.pc(), 0x2287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02F9
        gbc.setState(0xe7b6, 0x6627, 0xd000, 0xe28e, 0xbc92, 0x92b9, 0x1, 0x1);
        gbc.writeMem(0x92b9, { 0x68 });
        gbc.writeMem(0xe7b6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6627);
        EXPECT(gbc.pc(), 0xe7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b9), 0xe8);
        EXPECT(gbc.readMem(0xe7b6), 0xcb);
        EXPECT(gbc.readMem(0xe7b7), 0xfe);
        // CB FE 02FB
        gbc.setState(0x619e, 0x5840, 0x2b0, 0x73f9, 0xe6a0, 0x9d60, 0x0, 0x1);
        gbc.writeMem(0x619e, { 0xcb, 0xfe });
        gbc.writeMem(0x9d60, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5840);
        EXPECT(gbc.pc(), 0x61a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d60), 0xbf);
        // CB FE 02FC
        gbc.setState(0x61ca, 0x450b, 0x6a50, 0x6a04, 0x8ff2, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x61ca, { 0xcb, 0xfe });
        gbc.writeMem(0xf943, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x450b);
        EXPECT(gbc.pc(), 0x61cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf943), 0xbf);
        // CB FE 02FD
        gbc.setState(0xad68, 0xf7a0, 0x3260, 0x1a50, 0x4563, 0x891f, 0x1, 0x1);
        gbc.writeMem(0x891f, { 0x6a });
        gbc.writeMem(0xad68, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf7a0);
        EXPECT(gbc.pc(), 0xad6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891f), 0xea);
        EXPECT(gbc.readMem(0xad68), 0xcb);
        EXPECT(gbc.readMem(0xad69), 0xfe);
        // CB FE 02FE
        gbc.setState(0xe8, 0x9f9c, 0xfac0, 0x730d, 0x7a4, 0x5183, 0x1, 0x0);
        gbc.writeMem(0xe8, { 0xcb, 0xfe });
        gbc.writeMem(0x5183, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9f9c);
        EXPECT(gbc.pc(), 0xea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 02FF
        gbc.setState(0x44ba, 0x303e, 0xde50, 0xbdf3, 0x9c3a, 0xf6a2, 0x0, 0x1);
        gbc.writeMem(0x44ba, { 0xcb, 0xfe });
        gbc.writeMem(0xf6a2, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x303e);
        EXPECT(gbc.pc(), 0x44bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6a2), 0xff);
        // CB FE 0300
        gbc.setState(0x35c2, 0x5318, 0xc0e0, 0x681a, 0x25d, 0xeaf4, 0x0, 0x0);
        gbc.writeMem(0x35c2, { 0xcb, 0xfe });
        gbc.writeMem(0xeaf4, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5318);
        EXPECT(gbc.pc(), 0x35c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf4), 0x81);
        // CB FE 0301
        gbc.setState(0x92e1, 0x7946, 0x2610, 0x14b3, 0x917e, 0x200b, 0x0, 0x0);
        gbc.writeMem(0x200b, { 0xc1 });
        gbc.writeMem(0x92e1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7946);
        EXPECT(gbc.pc(), 0x92e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e1), 0xcb);
        EXPECT(gbc.readMem(0x92e2), 0xfe);
        // CB FE 0302
        gbc.setState(0x739f, 0xe601, 0x77f0, 0xe87b, 0xf572, 0x6ea1, 0x0, 0x1);
        gbc.writeMem(0x6ea1, { 0xeb });
        gbc.writeMem(0x739f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe601);
        EXPECT(gbc.pc(), 0x73a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0303
        gbc.setState(0xe411, 0xe94c, 0x5620, 0x7c6c, 0x804f, 0xeb7d, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0xfe });
        gbc.writeMem(0xeb7d, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe94c);
        EXPECT(gbc.pc(), 0xe413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe411), 0xcb);
        EXPECT(gbc.readMem(0xe412), 0xfe);
        EXPECT(gbc.readMem(0xeb7d), 0xfd);
        // CB FE 0304
        gbc.setState(0x2508, 0x8c72, 0x1220, 0x4566, 0x799c, 0x39af, 0x0, 0x1);
        gbc.writeMem(0x2508, { 0xcb, 0xfe });
        gbc.writeMem(0x39af, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0x250a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0305
        gbc.setState(0x2321, 0x7066, 0xfa40, 0x1bda, 0xf5dc, 0xebe5, 0x0, 0x1);
        gbc.writeMem(0x2321, { 0xcb, 0xfe });
        gbc.writeMem(0xebe5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7066);
        EXPECT(gbc.pc(), 0x2323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe5), 0xd8);
        // CB FE 0306
        gbc.setState(0xb261, 0xddfa, 0x5330, 0xf536, 0x83aa, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xfe });
        gbc.writeMem(0xcc0e, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xddfa);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb261), 0xcb);
        EXPECT(gbc.readMem(0xb262), 0xfe);
        EXPECT(gbc.readMem(0xcc0e), 0xb6);
        // CB FE 0307
        gbc.setState(0xc7d, 0x1a35, 0x5f10, 0x6f50, 0x2384, 0x6e55, 0x1, 0x1);
        gbc.writeMem(0xc7d, { 0xcb, 0xfe });
        gbc.writeMem(0x6e55, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1a35);
        EXPECT(gbc.pc(), 0xc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0308
        gbc.setState(0x1ad1, 0x1b7c, 0x87a0, 0x880c, 0x7313, 0x6ee2, 0x0, 0x0);
        gbc.writeMem(0x1ad1, { 0xcb, 0xfe });
        gbc.writeMem(0x6ee2, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1b7c);
        EXPECT(gbc.pc(), 0x1ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 030B
        gbc.setState(0x532, 0x5fe4, 0xb5e0, 0x46d1, 0x99bc, 0xcee2, 0x0, 0x0);
        gbc.writeMem(0x532, { 0xcb, 0xfe });
        gbc.writeMem(0xcee2, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5fe4);
        EXPECT(gbc.pc(), 0x534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee2), 0xc1);
        // CB FE 030C
        gbc.setState(0x4a7e, 0x5f15, 0x5990, 0x234d, 0xafb3, 0x78b, 0x0, 0x1);
        gbc.writeMem(0x78b, { 0xae });
        gbc.writeMem(0x4a7e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5f15);
        EXPECT(gbc.pc(), 0x4a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 030E
        gbc.setState(0xc62c, 0x2b2c, 0x6bc0, 0x2d56, 0x7e62, 0xe444, 0x1, 0x0);
        gbc.writeMem(0xc62c, { 0xcb, 0xfe });
        gbc.writeMem(0xe444, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2b2c);
        EXPECT(gbc.pc(), 0xc62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62c), 0xcb);
        EXPECT(gbc.readMem(0xc62d), 0xfe);
        EXPECT(gbc.readMem(0xe444), 0xc1);
        // CB FE 030F
        gbc.setState(0x67c7, 0x3acd, 0xf1f0, 0xfbed, 0xabf9, 0xff16, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0xcb, 0xfe });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3acd);
        EXPECT(gbc.pc(), 0x67c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff16), 0xad);
        // CB FE 0310
        gbc.setState(0x39d9, 0x4d98, 0x3230, 0xe413, 0xa5b7, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0x39d9, { 0xcb, 0xfe });
        gbc.writeMem(0xd05b, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4d98);
        EXPECT(gbc.pc(), 0x39db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd05b), 0xb0);
        // CB FE 0311
        gbc.setState(0x47b, 0x1520, 0xc30, 0x3e45, 0xa946, 0xb7d2, 0x0, 0x0);
        gbc.writeMem(0x47b, { 0xcb, 0xfe });
        gbc.writeMem(0xb7d2, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1520);
        EXPECT(gbc.pc(), 0x47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d2), 0xcd);
        // CB FE 0314
        gbc.setState(0xdc1d, 0xb5fe, 0x6c50, 0x3a17, 0x8d23, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0xc3 });
        gbc.writeMem(0xdc1d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5fe);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fd), 0xc3);
        EXPECT(gbc.readMem(0xdc1d), 0xcb);
        EXPECT(gbc.readMem(0xdc1e), 0xfe);
        // CB FE 0315
        gbc.setState(0x6f5d, 0x7790, 0xb610, 0x9d65, 0x1507, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0x6f5d, { 0xcb, 0xfe });
        gbc.writeMem(0xf6eb, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7790);
        EXPECT(gbc.pc(), 0x6f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6eb), 0x81);
        // CB FE 0318
        gbc.setState(0x4cf3, 0x4c8b, 0x7f00, 0x6e7a, 0xea7e, 0xa165, 0x0, 0x0);
        gbc.writeMem(0x4cf3, { 0xcb, 0xfe });
        gbc.writeMem(0xa165, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4c8b);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa165), 0xd5);
        // CB FE 0319
        gbc.setState(0x326, 0xdd72, 0xd160, 0x23df, 0xa22a, 0xfa17, 0x0, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0xfe });
        gbc.writeMem(0xfa17, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdd72);
        EXPECT(gbc.pc(), 0x328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa17), 0xfc);
        // CB FE 031A
        gbc.setState(0x1c3e, 0xd935, 0x2f70, 0x8438, 0x3bb3, 0x73ed, 0x1, 0x1);
        gbc.writeMem(0x1c3e, { 0xcb, 0xfe });
        gbc.writeMem(0x73ed, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd935);
        EXPECT(gbc.pc(), 0x1c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 031B
        gbc.setState(0xc2e1, 0x5523, 0x3d80, 0x9aaf, 0x494c, 0xa976, 0x0, 0x0);
        gbc.writeMem(0xa976, { 0x44 });
        gbc.writeMem(0xc2e1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5523);
        EXPECT(gbc.pc(), 0xc2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa976), 0xc4);
        EXPECT(gbc.readMem(0xc2e1), 0xcb);
        EXPECT(gbc.readMem(0xc2e2), 0xfe);
        // CB FE 031C
        gbc.setState(0x689d, 0xd275, 0xfdb0, 0xbdf, 0xf23a, 0xb979, 0x0, 0x1);
        gbc.writeMem(0x689d, { 0xcb, 0xfe });
        gbc.writeMem(0xb979, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd275);
        EXPECT(gbc.pc(), 0x689f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb979), 0xec);
        // CB FE 031E
        gbc.setState(0xa16f, 0xe7b2, 0x6cb0, 0xc6a2, 0x7976, 0x965e, 0x0, 0x1);
        gbc.writeMem(0x965e, { 0x5 });
        gbc.writeMem(0xa16f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe7b2);
        EXPECT(gbc.pc(), 0xa171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965e), 0x85);
        EXPECT(gbc.readMem(0xa16f), 0xcb);
        EXPECT(gbc.readMem(0xa170), 0xfe);
        // CB FE 031F
        gbc.setState(0x967e, 0x77fe, 0xfc70, 0xb979, 0x6d3f, 0x9182, 0x1, 0x1);
        gbc.writeMem(0x9182, { 0xf3 });
        gbc.writeMem(0x967e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x77fe);
        EXPECT(gbc.pc(), 0x9680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9182), 0xf3);
        EXPECT(gbc.readMem(0x967e), 0xcb);
        EXPECT(gbc.readMem(0x967f), 0xfe);
        // CB FE 0321
        gbc.setState(0x49df, 0xfc1f, 0xc2f0, 0x1a2c, 0xbee8, 0xbaad, 0x0, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0xfe });
        gbc.writeMem(0xbaad, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfc1f);
        EXPECT(gbc.pc(), 0x49e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaad), 0xa8);
        // CB FE 0323
        gbc.setState(0x51a, 0x419d, 0xb530, 0xd1f, 0xac2b, 0x17e, 0x0, 0x0);
        gbc.writeMem(0x17e, { 0x85 });
        gbc.writeMem(0x51a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x419d);
        EXPECT(gbc.pc(), 0x51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0324
        gbc.setState(0x4bb6, 0xa592, 0x5f20, 0xf7da, 0xeecb, 0xe1d5, 0x1, 0x1);
        gbc.writeMem(0x4bb6, { 0xcb, 0xfe });
        gbc.writeMem(0xe1d5, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa592);
        EXPECT(gbc.pc(), 0x4bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d5), 0xf4);
        // CB FE 0325
        gbc.setState(0xbbe5, 0xe0cd, 0x7c80, 0x883f, 0xfa43, 0xe6f3, 0x1, 0x1);
        gbc.writeMem(0xbbe5, { 0xcb, 0xfe });
        gbc.writeMem(0xe6f3, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe0cd);
        EXPECT(gbc.pc(), 0xbbe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe5), 0xcb);
        EXPECT(gbc.readMem(0xbbe6), 0xfe);
        EXPECT(gbc.readMem(0xe6f3), 0xf7);
        // CB FE 0327
        gbc.setState(0x2b6c, 0xc05, 0x63b0, 0xfa06, 0xfec3, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0xfe });
        gbc.writeMem(0xa24b, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc05);
        EXPECT(gbc.pc(), 0x2b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24b), 0xb2);
        // CB FE 032A
        gbc.setState(0xabe4, 0xef6a, 0xc900, 0x4258, 0x4e7, 0x3ee, 0x1, 0x0);
        gbc.writeMem(0x3ee, { 0xa7 });
        gbc.writeMem(0xabe4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xef6a);
        EXPECT(gbc.pc(), 0xabe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe4), 0xcb);
        EXPECT(gbc.readMem(0xabe5), 0xfe);
        // CB FE 032C
        gbc.setState(0x7ef0, 0x561d, 0x49e0, 0xf792, 0xc541, 0xbe6d, 0x0, 0x1);
        gbc.writeMem(0x7ef0, { 0xcb, 0xfe });
        gbc.writeMem(0xbe6d, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x561d);
        EXPECT(gbc.pc(), 0x7ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6d), 0xdd);
        // CB FE 032D
        gbc.setState(0x5cb2, 0x65d5, 0x5990, 0xa300, 0xe874, 0x8cc3, 0x1, 0x0);
        gbc.writeMem(0x5cb2, { 0xcb, 0xfe });
        gbc.writeMem(0x8cc3, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x5cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc3), 0xc0);
        // CB FE 0330
        gbc.setState(0xa250, 0xf601, 0x91e0, 0x101f, 0x6e0f, 0x4eb0, 0x1, 0x0);
        gbc.writeMem(0x4eb0, { 0xf9 });
        gbc.writeMem(0xa250, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf601);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa250), 0xcb);
        EXPECT(gbc.readMem(0xa251), 0xfe);
        // CB FE 0331
        gbc.setState(0xe3d0, 0x1934, 0x3d00, 0x55f, 0x3f1d, 0xab38, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0x34 });
        gbc.writeMem(0xe3d0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0xe3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab38), 0xb4);
        EXPECT(gbc.readMem(0xe3d0), 0xcb);
        EXPECT(gbc.readMem(0xe3d1), 0xfe);
        // CB FE 0332
        gbc.setState(0x4319, 0xd75f, 0xf480, 0x87ee, 0xcc11, 0x1fd8, 0x1, 0x0);
        gbc.writeMem(0x1fd8, { 0xf5 });
        gbc.writeMem(0x4319, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd75f);
        EXPECT(gbc.pc(), 0x431b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0333
        gbc.setState(0x7c5d, 0x8396, 0x60f0, 0xe351, 0x6c16, 0xb712, 0x1, 0x1);
        gbc.writeMem(0x7c5d, { 0xcb, 0xfe });
        gbc.writeMem(0xb712, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8396);
        EXPECT(gbc.pc(), 0x7c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb712), 0xb8);
        // CB FE 0334
        gbc.setState(0xef19, 0x2194, 0xc3e0, 0xca4b, 0x25e5, 0x5481, 0x1, 0x1);
        gbc.writeMem(0x5481, { 0xe7 });
        gbc.writeMem(0xef19, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2194);
        EXPECT(gbc.pc(), 0xef1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef19), 0xcb);
        EXPECT(gbc.readMem(0xef1a), 0xfe);
        // CB FE 0335
        gbc.setState(0x5586, 0xec63, 0x8df0, 0x61dc, 0x771b, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xfe });
        gbc.writeMem(0xd8b9, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xec63);
        EXPECT(gbc.pc(), 0x5588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b9), 0x9b);
        // CB FE 0336
        gbc.setState(0xd33a, 0x94cd, 0x30c0, 0x8111, 0xeda5, 0xd0d3, 0x0, 0x1);
        gbc.writeMem(0xd0d3, { 0x70 });
        gbc.writeMem(0xd33a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x94cd);
        EXPECT(gbc.pc(), 0xd33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d3), 0xf0);
        EXPECT(gbc.readMem(0xd33a), 0xcb);
        EXPECT(gbc.readMem(0xd33b), 0xfe);
        // CB FE 033B
        gbc.setState(0x606a, 0xc622, 0xf450, 0x5518, 0xfeb0, 0x3739, 0x1, 0x1);
        gbc.writeMem(0x3739, { 0xdb });
        gbc.writeMem(0x606a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc622);
        EXPECT(gbc.pc(), 0x606c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 033C
        gbc.setState(0xabd8, 0xafd2, 0x6da0, 0x1ae7, 0xe3a5, 0x368a, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xf6 });
        gbc.writeMem(0xabd8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xafd2);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd8), 0xcb);
        EXPECT(gbc.readMem(0xabd9), 0xfe);
        // CB FE 033D
        gbc.setState(0x76d4, 0xd173, 0x7860, 0x61a0, 0x2fa1, 0x380f, 0x0, 0x1);
        gbc.writeMem(0x380f, { 0x81 });
        gbc.writeMem(0x76d4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd173);
        EXPECT(gbc.pc(), 0x76d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 033F
        gbc.setState(0x6f85, 0x25e9, 0xe320, 0x2497, 0x2b7b, 0xaaa6, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0xfe });
        gbc.writeMem(0xaaa6, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0x6f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa6), 0xe1);
        // CB FE 0341
        gbc.setState(0x135a, 0x4b58, 0x1400, 0x5881, 0x2eea, 0x9f66, 0x1, 0x0);
        gbc.writeMem(0x135a, { 0xcb, 0xfe });
        gbc.writeMem(0x9f66, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4b58);
        EXPECT(gbc.pc(), 0x135c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f66), 0xbf);
        // CB FE 0342
        gbc.setState(0x43c1, 0x9d5, 0x1800, 0x1daa, 0x9fbb, 0xad38, 0x0, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0xfe });
        gbc.writeMem(0xad38, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9d5);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad38), 0xc4);
        // CB FE 0343
        gbc.setState(0x36f1, 0x8e56, 0x2e0, 0xdf53, 0x4c94, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0x36f1, { 0xcb, 0xfe });
        gbc.writeMem(0x98a6, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8e56);
        EXPECT(gbc.pc(), 0x36f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a6), 0x9f);
        // CB FE 0344
        gbc.setState(0xad09, 0xcd8d, 0x4fd0, 0xd7d3, 0xce35, 0xebd3, 0x1, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0xfe });
        gbc.writeMem(0xebd3, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcd8d);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad09), 0xcb);
        EXPECT(gbc.readMem(0xad0a), 0xfe);
        EXPECT(gbc.readMem(0xebd3), 0xde);
        // CB FE 0347
        gbc.setState(0xe2f7, 0xe733, 0x6e20, 0x765b, 0xe364, 0xa2b7, 0x1, 0x1);
        gbc.writeMem(0xa2b7, { 0xf });
        gbc.writeMem(0xe2f7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe733);
        EXPECT(gbc.pc(), 0xe2f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b7), 0x8f);
        EXPECT(gbc.readMem(0xe2f7), 0xcb);
        EXPECT(gbc.readMem(0xe2f8), 0xfe);
        // CB FE 0348
        gbc.setState(0x928d, 0x8be7, 0xa100, 0xd00f, 0x4bb3, 0xf360, 0x0, 0x0);
        gbc.writeMem(0x928d, { 0xcb, 0xfe });
        gbc.writeMem(0xf360, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8be7);
        EXPECT(gbc.pc(), 0x928f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928d), 0xcb);
        EXPECT(gbc.readMem(0x928e), 0xfe);
        EXPECT(gbc.readMem(0xf360), 0xfa);
        // CB FE 034A
        gbc.setState(0x2579, 0x5a3d, 0x5220, 0xaddd, 0x6706, 0xbd13, 0x0, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0xfe });
        gbc.writeMem(0xbd13, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5a3d);
        EXPECT(gbc.pc(), 0x257b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd13), 0xb3);
        // CB FE 034D
        gbc.setState(0x75e, 0x59a1, 0x3d30, 0x7973, 0xcc97, 0xc4a8, 0x1, 0x0);
        gbc.writeMem(0x75e, { 0xcb, 0xfe });
        gbc.writeMem(0xc4a8, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x59a1);
        EXPECT(gbc.pc(), 0x760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a8), 0x9e);
        // CB FE 034E
        gbc.setState(0x93d1, 0x7d64, 0x57d0, 0x6d8e, 0x70e6, 0x811d, 0x0, 0x1);
        gbc.writeMem(0x811d, { 0xce });
        gbc.writeMem(0x93d1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0x93d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811d), 0xce);
        EXPECT(gbc.readMem(0x93d1), 0xcb);
        EXPECT(gbc.readMem(0x93d2), 0xfe);
        // CB FE 0351
        gbc.setState(0x2f11, 0xd5f, 0xbb40, 0xd804, 0xf555, 0x87ec, 0x0, 0x0);
        gbc.writeMem(0x2f11, { 0xcb, 0xfe });
        gbc.writeMem(0x87ec, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ec), 0xae);
        // CB FE 0353
        gbc.setState(0x45de, 0xf51f, 0x7fe0, 0x2fdb, 0xfd39, 0xe98c, 0x0, 0x1);
        gbc.writeMem(0x45de, { 0xcb, 0xfe });
        gbc.writeMem(0xe98c, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf51f);
        EXPECT(gbc.pc(), 0x45e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98c), 0xef);
        // CB FE 0354
        gbc.setState(0x19ad, 0xd1ff, 0x79b0, 0x7ff, 0x6802, 0x8107, 0x1, 0x1);
        gbc.writeMem(0x19ad, { 0xcb, 0xfe });
        gbc.writeMem(0x8107, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd1ff);
        EXPECT(gbc.pc(), 0x19af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8107), 0xe1);
        // CB FE 0355
        gbc.setState(0xb35, 0x1d59, 0xff00, 0x2c19, 0x73d6, 0xf9a5, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0xfe });
        gbc.writeMem(0xf9a5, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1d59);
        EXPECT(gbc.pc(), 0xb37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9a5), 0xed);
        // CB FE 0356
        gbc.setState(0x4808, 0x2fb6, 0x41f0, 0x109d, 0x27a8, 0x4bf2, 0x0, 0x0);
        gbc.writeMem(0x4808, { 0xcb, 0xfe });
        gbc.writeMem(0x4bf2, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2fb6);
        EXPECT(gbc.pc(), 0x480a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0358
        gbc.setState(0xb4bf, 0xd964, 0xfe90, 0x3915, 0x9efd, 0x6797, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xf4 });
        gbc.writeMem(0xb4bf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd964);
        EXPECT(gbc.pc(), 0xb4c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bf), 0xcb);
        EXPECT(gbc.readMem(0xb4c0), 0xfe);
        // CB FE 0359
        gbc.setState(0xcea6, 0xe2c4, 0xee00, 0x4848, 0xa7b7, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x9590, { 0xce });
        gbc.writeMem(0xcea6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe2c4);
        EXPECT(gbc.pc(), 0xcea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9590), 0xce);
        EXPECT(gbc.readMem(0xcea6), 0xcb);
        EXPECT(gbc.readMem(0xcea7), 0xfe);
        // CB FE 035A
        gbc.setState(0x4bf9, 0x9ccb, 0x2170, 0xdc20, 0x7b82, 0xee3f, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0xfe });
        gbc.writeMem(0xee3f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0x4bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3f), 0xca);
        // CB FE 035B
        gbc.setState(0x5caf, 0xf68, 0xffb0, 0x41df, 0x5e5a, 0x31d8, 0x1, 0x0);
        gbc.writeMem(0x31d8, { 0xae });
        gbc.writeMem(0x5caf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf68);
        EXPECT(gbc.pc(), 0x5cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 035C
        gbc.setState(0xc05c, 0x33eb, 0xdad0, 0x8d18, 0x9af1, 0x89c9, 0x1, 0x1);
        gbc.writeMem(0x89c9, { 0x48 });
        gbc.writeMem(0xc05c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x33eb);
        EXPECT(gbc.pc(), 0xc05e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c9), 0xc8);
        EXPECT(gbc.readMem(0xc05c), 0xcb);
        EXPECT(gbc.readMem(0xc05d), 0xfe);
        // CB FE 035F
        gbc.setState(0x47ba, 0x585e, 0xbb70, 0xcc02, 0x8cd1, 0x927d, 0x0, 0x0);
        gbc.writeMem(0x47ba, { 0xcb, 0xfe });
        gbc.writeMem(0x927d, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x585e);
        EXPECT(gbc.pc(), 0x47bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927d), 0xa0);
        // CB FE 0360
        gbc.setState(0x82b7, 0xde90, 0x92c0, 0xb73e, 0xc291, 0x5f50, 0x0, 0x1);
        gbc.writeMem(0x5f50, { 0xb5 });
        gbc.writeMem(0x82b7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xde90);
        EXPECT(gbc.pc(), 0x82b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b7), 0xcb);
        EXPECT(gbc.readMem(0x82b8), 0xfe);
        // CB FE 0361
        gbc.setState(0x6a04, 0xbacc, 0x6a0, 0x3ae, 0x5de9, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0x6a04, { 0xcb, 0xfe });
        gbc.writeMem(0xdec6, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbacc);
        EXPECT(gbc.pc(), 0x6a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec6), 0xd4);
        // CB FE 0362
        gbc.setState(0x3636, 0x1ef1, 0x4090, 0x7402, 0x1866, 0xdfb, 0x0, 0x1);
        gbc.writeMem(0xdfb, { 0x88 });
        gbc.writeMem(0x3636, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1ef1);
        EXPECT(gbc.pc(), 0x3638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0364
        gbc.setState(0xbbdf, 0x85ef, 0x6290, 0x8a21, 0x412f, 0x1fdb, 0x0, 0x1);
        gbc.writeMem(0x1fdb, { 0xd5 });
        gbc.writeMem(0xbbdf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x85ef);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbdf), 0xcb);
        EXPECT(gbc.readMem(0xbbe0), 0xfe);
        // CB FE 0365
        gbc.setState(0x568c, 0x9abc, 0x240, 0x985d, 0xc1fc, 0x2eda, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0xbb });
        gbc.writeMem(0x568c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0x568e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0366
        gbc.setState(0x8a6f, 0xaa6e, 0xbc30, 0xaed7, 0xdad7, 0x3224, 0x1, 0x1);
        gbc.writeMem(0x3224, { 0xb2 });
        gbc.writeMem(0x8a6f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaa6e);
        EXPECT(gbc.pc(), 0x8a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6f), 0xcb);
        EXPECT(gbc.readMem(0x8a70), 0xfe);
        // CB FE 0367
        gbc.setState(0x80fd, 0xeca9, 0x95f0, 0x1cce, 0x595c, 0x84bc, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0xcb, 0xfe });
        gbc.writeMem(0x84bc, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xeca9);
        EXPECT(gbc.pc(), 0x80ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80fd), 0xcb);
        EXPECT(gbc.readMem(0x80fe), 0xfe);
        EXPECT(gbc.readMem(0x84bc), 0xdf);
        // CB FE 0368
        gbc.setState(0x8bb7, 0x935e, 0xab40, 0x2093, 0x1414, 0x4d3b, 0x1, 0x0);
        gbc.writeMem(0x4d3b, { 0xfa });
        gbc.writeMem(0x8bb7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x935e);
        EXPECT(gbc.pc(), 0x8bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb7), 0xcb);
        EXPECT(gbc.readMem(0x8bb8), 0xfe);
        // CB FE 0369
        gbc.setState(0x6686, 0x9a7a, 0x52e0, 0x2ac4, 0xf210, 0x53a7, 0x1, 0x0);
        gbc.writeMem(0x53a7, { 0x8b });
        gbc.writeMem(0x6686, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9a7a);
        EXPECT(gbc.pc(), 0x6688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 036A
        gbc.setState(0x54c4, 0x9613, 0x8d30, 0x3a0e, 0xfa7e, 0x8050, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0xfe });
        gbc.writeMem(0x8050, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9613);
        EXPECT(gbc.pc(), 0x54c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8050), 0x89);
        // CB FE 036D
        gbc.setState(0x2a0, 0xfc59, 0x7730, 0xd98d, 0xdd9c, 0xbf37, 0x0, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0xfe });
        gbc.writeMem(0xbf37, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfc59);
        EXPECT(gbc.pc(), 0x2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf37), 0xca);
        // CB FE 036F
        gbc.setState(0x533, 0x9ce6, 0x9cf0, 0xefa4, 0x8b96, 0xfad0, 0x1, 0x1);
        gbc.writeMem(0x533, { 0xcb, 0xfe });
        gbc.writeMem(0xfad0, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9ce6);
        EXPECT(gbc.pc(), 0x535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfad0), 0x86);
        // CB FE 0371
        gbc.setState(0xe092, 0xcbe7, 0xfc80, 0xab3a, 0x4a6b, 0x7694, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0xad });
        gbc.writeMem(0xe092, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcbe7);
        EXPECT(gbc.pc(), 0xe094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe092), 0xcb);
        EXPECT(gbc.readMem(0xe093), 0xfe);
        // CB FE 0372
        gbc.setState(0xee96, 0xb6bf, 0xfec0, 0xfeac, 0xe514, 0x5030, 0x0, 0x0);
        gbc.writeMem(0x5030, { 0xd6 });
        gbc.writeMem(0xee96, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb6bf);
        EXPECT(gbc.pc(), 0xee98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee96), 0xcb);
        EXPECT(gbc.readMem(0xee97), 0xfe);
        // CB FE 0373
        gbc.setState(0xabc, 0x8cc1, 0x7d80, 0x32b9, 0xebf4, 0x420f, 0x1, 0x1);
        gbc.writeMem(0xabc, { 0xcb, 0xfe });
        gbc.writeMem(0x420f, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8cc1);
        EXPECT(gbc.pc(), 0xabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0374
        gbc.setState(0x1e9e, 0x87cd, 0xf340, 0x551e, 0xa1e9, 0xebf9, 0x1, 0x1);
        gbc.writeMem(0x1e9e, { 0xcb, 0xfe });
        gbc.writeMem(0xebf9, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x87cd);
        EXPECT(gbc.pc(), 0x1ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf9), 0xfc);
        // CB FE 0375
        gbc.setState(0xd2e9, 0x8a59, 0xa900, 0x5e10, 0x27ac, 0xfbf9, 0x0, 0x0);
        gbc.writeMem(0xd2e9, { 0xcb, 0xfe });
        gbc.writeMem(0xfbf9, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8a59);
        EXPECT(gbc.pc(), 0xd2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e9), 0xcb);
        EXPECT(gbc.readMem(0xd2ea), 0xfe);
        EXPECT(gbc.readMem(0xfbf9), 0xf4);
        // CB FE 0376
        gbc.setState(0x1a68, 0x6b6f, 0x2dc0, 0xebd9, 0xde33, 0xa3d1, 0x0, 0x0);
        gbc.writeMem(0x1a68, { 0xcb, 0xfe });
        gbc.writeMem(0xa3d1, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6b6f);
        EXPECT(gbc.pc(), 0x1a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d1), 0x96);
        // CB FE 0377
        gbc.setState(0x3f5f, 0xe340, 0xffc0, 0xca2a, 0x7640, 0x9515, 0x0, 0x0);
        gbc.writeMem(0x3f5f, { 0xcb, 0xfe });
        gbc.writeMem(0x9515, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe340);
        EXPECT(gbc.pc(), 0x3f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9515), 0xa7);
        // CB FE 0378
        gbc.setState(0xabe4, 0x964e, 0x4b80, 0x6b1c, 0x8bf1, 0x8871, 0x0, 0x0);
        gbc.writeMem(0x8871, { 0xd5 });
        gbc.writeMem(0xabe4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x964e);
        EXPECT(gbc.pc(), 0xabe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8871), 0xd5);
        EXPECT(gbc.readMem(0xabe4), 0xcb);
        EXPECT(gbc.readMem(0xabe5), 0xfe);
        // CB FE 0379
        gbc.setState(0x8dea, 0xbb5, 0xe780, 0x10a4, 0xbd18, 0x97f3, 0x1, 0x1);
        gbc.writeMem(0x8dea, { 0xcb, 0xfe });
        gbc.writeMem(0x97f3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbb5);
        EXPECT(gbc.pc(), 0x8dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dea), 0xcb);
        EXPECT(gbc.readMem(0x8deb), 0xfe);
        EXPECT(gbc.readMem(0x97f3), 0x8e);
        // CB FE 037A
        gbc.setState(0xd41c, 0xd267, 0x7f60, 0x80c9, 0x7f2, 0xdcba, 0x0, 0x1);
        gbc.writeMem(0xd41c, { 0xcb, 0xfe });
        gbc.writeMem(0xdcba, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd267);
        EXPECT(gbc.pc(), 0xd41e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41c), 0xcb);
        EXPECT(gbc.readMem(0xd41d), 0xfe);
        EXPECT(gbc.readMem(0xdcba), 0xc8);
        // CB FE 037B
        gbc.setState(0x8d4b, 0xd4ad, 0x3e80, 0x6d10, 0xa4f, 0xe8a5, 0x0, 0x0);
        gbc.writeMem(0x8d4b, { 0xcb, 0xfe });
        gbc.writeMem(0xe8a5, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd4ad);
        EXPECT(gbc.pc(), 0x8d4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4b), 0xcb);
        EXPECT(gbc.readMem(0x8d4c), 0xfe);
        EXPECT(gbc.readMem(0xe8a5), 0x81);
        // CB FE 037D
        gbc.setState(0xb994, 0xe9b4, 0xb750, 0x62d2, 0x2e4b, 0x9bba, 0x0, 0x0);
        gbc.writeMem(0x9bba, { 0xc9 });
        gbc.writeMem(0xb994, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe9b4);
        EXPECT(gbc.pc(), 0xb996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bba), 0xc9);
        EXPECT(gbc.readMem(0xb994), 0xcb);
        EXPECT(gbc.readMem(0xb995), 0xfe);
        // CB FE 037E
        gbc.setState(0xddf, 0xd98f, 0x36a0, 0x50b, 0x8285, 0xa44a, 0x1, 0x1);
        gbc.writeMem(0xddf, { 0xcb, 0xfe });
        gbc.writeMem(0xa44a, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd98f);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44a), 0xee);
        // CB FE 0380
        gbc.setState(0x4b0c, 0x7fdc, 0x7420, 0xe72, 0x332b, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x20c5, { 0xfe });
        gbc.writeMem(0x4b0c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7fdc);
        EXPECT(gbc.pc(), 0x4b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 0381
        gbc.setState(0x3f3d, 0x12, 0x3310, 0x5564, 0xd95b, 0x8cd4, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0xfe });
        gbc.writeMem(0x8cd4, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x12);
        EXPECT(gbc.pc(), 0x3f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd4), 0x88);
        // CB FE 0382
        gbc.setState(0xa8e3, 0xbf91, 0xc420, 0xba36, 0x37c9, 0xb514, 0x0, 0x0);
        gbc.writeMem(0xa8e3, { 0xcb, 0xfe });
        gbc.writeMem(0xb514, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbf91);
        EXPECT(gbc.pc(), 0xa8e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e3), 0xcb);
        EXPECT(gbc.readMem(0xa8e4), 0xfe);
        EXPECT(gbc.readMem(0xb514), 0x87);
        // CB FE 0384
        gbc.setState(0xbdb1, 0xddd6, 0xd490, 0x7ad1, 0xdd03, 0xd08a, 0x1, 0x0);
        gbc.writeMem(0xbdb1, { 0xcb, 0xfe });
        gbc.writeMem(0xd08a, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xddd6);
        EXPECT(gbc.pc(), 0xbdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb1), 0xcb);
        EXPECT(gbc.readMem(0xbdb2), 0xfe);
        EXPECT(gbc.readMem(0xd08a), 0xd8);
        // CB FE 0385
        gbc.setState(0x27d, 0xccf3, 0x36d0, 0xd71f, 0xeedd, 0x5b68, 0x0, 0x1);
        gbc.writeMem(0x27d, { 0xcb, 0xfe });
        gbc.writeMem(0x5b68, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xccf3);
        EXPECT(gbc.pc(), 0x27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0386
        gbc.setState(0x11d7, 0xbef0, 0xefe0, 0xf489, 0x3f9e, 0x8991, 0x0, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0xfe });
        gbc.writeMem(0x8991, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbef0);
        EXPECT(gbc.pc(), 0x11d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8991), 0xcd);
        // CB FE 0387
        gbc.setState(0x7865, 0x5ef4, 0xeb50, 0x9217, 0xaf44, 0xe234, 0x0, 0x0);
        gbc.writeMem(0x7865, { 0xcb, 0xfe });
        gbc.writeMem(0xe234, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5ef4);
        EXPECT(gbc.pc(), 0x7867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe234), 0xa7);
        // CB FE 0388
        gbc.setState(0x3985, 0x3352, 0x3380, 0x7697, 0x8823, 0xdf3f, 0x0, 0x0);
        gbc.writeMem(0x3985, { 0xcb, 0xfe });
        gbc.writeMem(0xdf3f, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3352);
        EXPECT(gbc.pc(), 0x3987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3f), 0xac);
        // CB FE 038A
        gbc.setState(0x67b4, 0xc7e9, 0x41e0, 0x224b, 0x2f34, 0xf194, 0x1, 0x0);
        gbc.writeMem(0x67b4, { 0xcb, 0xfe });
        gbc.writeMem(0xf194, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc7e9);
        EXPECT(gbc.pc(), 0x67b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf194), 0xdb);
        // CB FE 038B
        gbc.setState(0x18bf, 0xd4f0, 0x6250, 0xf93b, 0x683c, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x18bf, { 0xcb, 0xfe });
        gbc.writeMem(0x7d06, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0x18c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 038C
        gbc.setState(0x4be8, 0xe419, 0xcfd0, 0x900b, 0x69e2, 0xc6b3, 0x1, 0x0);
        gbc.writeMem(0x4be8, { 0xcb, 0xfe });
        gbc.writeMem(0xc6b3, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe419);
        EXPECT(gbc.pc(), 0x4bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b3), 0x94);
        // CB FE 038D
        gbc.setState(0xd7e5, 0x5174, 0x5d80, 0x3c10, 0xad0a, 0xd222, 0x1, 0x1);
        gbc.writeMem(0xd222, { 0x89 });
        gbc.writeMem(0xd7e5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5174);
        EXPECT(gbc.pc(), 0xd7e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd222), 0x89);
        EXPECT(gbc.readMem(0xd7e5), 0xcb);
        EXPECT(gbc.readMem(0xd7e6), 0xfe);
        // CB FE 038E
        gbc.setState(0xaef2, 0xb88e, 0x53a0, 0xd956, 0x1b20, 0xb61d, 0x0, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0xfe });
        gbc.writeMem(0xb61d, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb88e);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0xfe);
        EXPECT(gbc.readMem(0xb61d), 0xbd);
        // CB FE 038F
        gbc.setState(0xb32d, 0x5c0d, 0xef70, 0xcc3b, 0xee60, 0xf7a8, 0x1, 0x0);
        gbc.writeMem(0xb32d, { 0xcb, 0xfe });
        gbc.writeMem(0xf7a8, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5c0d);
        EXPECT(gbc.pc(), 0xb32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32d), 0xcb);
        EXPECT(gbc.readMem(0xb32e), 0xfe);
        EXPECT(gbc.readMem(0xf7a8), 0xbf);
        // CB FE 0390
        gbc.setState(0x71a8, 0xbe5a, 0xd0b0, 0x7287, 0x7001, 0xba11, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xfe });
        gbc.writeMem(0xba11, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbe5a);
        EXPECT(gbc.pc(), 0x71aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba11), 0xae);
        // CB FE 0391
        gbc.setState(0xe4c9, 0x9d3b, 0xafc0, 0xf87d, 0x1172, 0xad0, 0x1, 0x1);
        gbc.writeMem(0xad0, { 0xaf });
        gbc.writeMem(0xe4c9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0xe4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c9), 0xcb);
        EXPECT(gbc.readMem(0xe4ca), 0xfe);
        // CB FE 0392
        gbc.setState(0xc60e, 0x2686, 0xc220, 0x71f7, 0x5192, 0xbd00, 0x1, 0x0);
        gbc.writeMem(0xbd00, { 0x99 });
        gbc.writeMem(0xc60e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2686);
        EXPECT(gbc.pc(), 0xc610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd00), 0x99);
        EXPECT(gbc.readMem(0xc60e), 0xcb);
        EXPECT(gbc.readMem(0xc60f), 0xfe);
        // CB FE 0393
        gbc.setState(0x4494, 0xb2bc, 0x1b50, 0x54be, 0xf8cc, 0x6104, 0x0, 0x1);
        gbc.writeMem(0x4494, { 0xcb, 0xfe });
        gbc.writeMem(0x6104, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb2bc);
        EXPECT(gbc.pc(), 0x4496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 0394
        gbc.setState(0xb2f1, 0x12fd, 0x1b30, 0x506f, 0x34e5, 0xe3ae, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0xfe });
        gbc.writeMem(0xe3ae, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x12fd);
        EXPECT(gbc.pc(), 0xb2f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f1), 0xcb);
        EXPECT(gbc.readMem(0xb2f2), 0xfe);
        EXPECT(gbc.readMem(0xe3ae), 0xf8);
        // CB FE 0395
        gbc.setState(0x9e78, 0xe811, 0xf550, 0xfaa7, 0x27ae, 0xf8c3, 0x1, 0x0);
        gbc.writeMem(0x9e78, { 0xcb, 0xfe });
        gbc.writeMem(0xf8c3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe811);
        EXPECT(gbc.pc(), 0x9e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e78), 0xcb);
        EXPECT(gbc.readMem(0x9e79), 0xfe);
        EXPECT(gbc.readMem(0xf8c3), 0xc5);
        // CB FE 0396
        gbc.setState(0x42aa, 0x8a93, 0x41d0, 0xaa, 0x636d, 0x8aaf, 0x0, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0xfe });
        gbc.writeMem(0x8aaf, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8a93);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aaf), 0xf1);
        // CB FE 0397
        gbc.setState(0x7700, 0x9228, 0xca30, 0xb001, 0xe910, 0xd683, 0x0, 0x0);
        gbc.writeMem(0x7700, { 0xcb, 0xfe });
        gbc.writeMem(0xd683, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9228);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd683), 0xea);
        // CB FE 0398
        gbc.setState(0x5055, 0xf9ec, 0xe0a0, 0x5d30, 0x82de, 0x9c0a, 0x1, 0x1);
        gbc.writeMem(0x5055, { 0xcb, 0xfe });
        gbc.writeMem(0x9c0a, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf9ec);
        EXPECT(gbc.pc(), 0x5057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0a), 0xf4);
        // CB FE 0399
        gbc.setState(0x5cfe, 0x143e, 0x6710, 0xb84e, 0xb7d7, 0x9089, 0x0, 0x1);
        gbc.writeMem(0x5cfe, { 0xcb, 0xfe });
        gbc.writeMem(0x9089, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x143e);
        EXPECT(gbc.pc(), 0x5d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9089), 0xb7);
        // CB FE 039A
        gbc.setState(0xbce6, 0x3843, 0x3ea0, 0x1476, 0xf504, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xbce6, { 0xcb, 0xfe });
        gbc.writeMem(0xf9f4, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3843);
        EXPECT(gbc.pc(), 0xbce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce6), 0xcb);
        EXPECT(gbc.readMem(0xbce7), 0xfe);
        EXPECT(gbc.readMem(0xf9f4), 0xe8);
        // CB FE 039B
        gbc.setState(0x60f1, 0x66f2, 0x45a0, 0xbbbf, 0xb51f, 0x7d47, 0x1, 0x0);
        gbc.writeMem(0x60f1, { 0xcb, 0xfe });
        gbc.writeMem(0x7d47, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x66f2);
        EXPECT(gbc.pc(), 0x60f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 039C
        gbc.setState(0x4a17, 0x9132, 0x160, 0xde37, 0x901c, 0xa89f, 0x1, 0x0);
        gbc.writeMem(0x4a17, { 0xcb, 0xfe });
        gbc.writeMem(0xa89f, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9132);
        EXPECT(gbc.pc(), 0x4a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89f), 0xca);
        // CB FE 039D
        gbc.setState(0x2f74, 0xafe8, 0x26a0, 0xafed, 0xb62b, 0x3c13, 0x1, 0x1);
        gbc.writeMem(0x2f74, { 0xcb, 0xfe });
        gbc.writeMem(0x3c13, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0x2f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 039E
        gbc.setState(0xa015, 0xc75d, 0x5230, 0xeff3, 0x3226, 0xff98, 0x0, 0x0);
        gbc.writeMem(0xa015, { 0xcb, 0xfe });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc75d);
        EXPECT(gbc.pc(), 0xa017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa015), 0xcb);
        EXPECT(gbc.readMem(0xa016), 0xfe);
        EXPECT(gbc.readMem(0xff98), 0x95);
        // CB FE 03A0
        gbc.setState(0xb32a, 0x51e5, 0x3d20, 0xfbb7, 0xad7f, 0x1d86, 0x0, 0x1);
        gbc.writeMem(0x1d86, { 0x8a });
        gbc.writeMem(0xb32a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x51e5);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0xfe);
        // CB FE 03A1
        gbc.setState(0x5cb0, 0xcd93, 0x8780, 0x461e, 0xb494, 0x7933, 0x1, 0x0);
        gbc.writeMem(0x5cb0, { 0xcb, 0xfe });
        gbc.writeMem(0x7933, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcd93);
        EXPECT(gbc.pc(), 0x5cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03A3
        gbc.setState(0x3e3e, 0xcdb7, 0xb7b0, 0xeb0a, 0x4070, 0xa81b, 0x1, 0x0);
        gbc.writeMem(0x3e3e, { 0xcb, 0xfe });
        gbc.writeMem(0xa81b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcdb7);
        EXPECT(gbc.pc(), 0x3e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81b), 0x92);
        // CB FE 03A4
        gbc.setState(0x25bd, 0xc850, 0xa10, 0xfc57, 0x8ae1, 0x9b14, 0x1, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0xfe });
        gbc.writeMem(0x9b14, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b14), 0xbb);
        // CB FE 03A6
        gbc.setState(0x5045, 0x5b31, 0x1200, 0xb8c5, 0x4f41, 0x6993, 0x0, 0x0);
        gbc.writeMem(0x5045, { 0xcb, 0xfe });
        gbc.writeMem(0x6993, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5b31);
        EXPECT(gbc.pc(), 0x5047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03A7
        gbc.setState(0x36c4, 0xd875, 0xe220, 0xfa80, 0xbaf5, 0x579e, 0x1, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0xfe });
        gbc.writeMem(0x579e, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd875);
        EXPECT(gbc.pc(), 0x36c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03A8
        gbc.setState(0xd227, 0xab5f, 0x1000, 0x3974, 0xce15, 0xf922, 0x1, 0x1);
        gbc.writeMem(0xd227, { 0xcb, 0xfe });
        gbc.writeMem(0xf922, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xab5f);
        EXPECT(gbc.pc(), 0xd229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd227), 0xcb);
        EXPECT(gbc.readMem(0xd228), 0xfe);
        EXPECT(gbc.readMem(0xf922), 0xd0);
        // CB FE 03A9
        gbc.setState(0xccb3, 0xa1ef, 0x2790, 0xeecd, 0xba23, 0xb73c, 0x1, 0x1);
        gbc.writeMem(0xb73c, { 0x43 });
        gbc.writeMem(0xccb3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa1ef);
        EXPECT(gbc.pc(), 0xccb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73c), 0xc3);
        EXPECT(gbc.readMem(0xccb3), 0xcb);
        EXPECT(gbc.readMem(0xccb4), 0xfe);
        // CB FE 03AA
        gbc.setState(0xe870, 0xd15e, 0x1ad0, 0x566b, 0xdac3, 0x4df, 0x1, 0x1);
        gbc.writeMem(0x4df, { 0x88 });
        gbc.writeMem(0xe870, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd15e);
        EXPECT(gbc.pc(), 0xe872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe870), 0xcb);
        EXPECT(gbc.readMem(0xe871), 0xfe);
        // CB FE 03AB
        gbc.setState(0x8b76, 0xdbde, 0x10, 0xfc3a, 0x7f57, 0xe83e, 0x1, 0x1);
        gbc.writeMem(0x8b76, { 0xcb, 0xfe });
        gbc.writeMem(0xe83e, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0x8b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b76), 0xcb);
        EXPECT(gbc.readMem(0x8b77), 0xfe);
        EXPECT(gbc.readMem(0xe83e), 0xc8);
        // CB FE 03AC
        gbc.setState(0x7b62, 0x584, 0xa360, 0xc695, 0x1c34, 0x80a2, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xfe });
        gbc.writeMem(0x80a2, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x584);
        EXPECT(gbc.pc(), 0x7b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a2), 0xe7);
        // CB FE 03AF
        gbc.setState(0x50cb, 0xbf49, 0xd420, 0x7655, 0x280d, 0x32d5, 0x0, 0x0);
        gbc.writeMem(0x32d5, { 0xde });
        gbc.writeMem(0x50cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbf49);
        EXPECT(gbc.pc(), 0x50cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03B1
        gbc.setState(0xaf7f, 0xaa06, 0xb740, 0x5fcb, 0xbb9d, 0x2fd4, 0x1, 0x1);
        gbc.writeMem(0x2fd4, { 0xde });
        gbc.writeMem(0xaf7f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xaa06);
        EXPECT(gbc.pc(), 0xaf81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7f), 0xcb);
        EXPECT(gbc.readMem(0xaf80), 0xfe);
        // CB FE 03B2
        gbc.setState(0x7afb, 0x1290, 0x60e0, 0x2ad2, 0xee91, 0x89f2, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0xfe });
        gbc.writeMem(0x89f2, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1290);
        EXPECT(gbc.pc(), 0x7afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f2), 0xf4);
        // CB FE 03B3
        gbc.setState(0xa9a3, 0xdd02, 0x6750, 0x9126, 0x5f2e, 0x25ba, 0x0, 0x1);
        gbc.writeMem(0x25ba, { 0xf1 });
        gbc.writeMem(0xa9a3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdd02);
        EXPECT(gbc.pc(), 0xa9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a3), 0xcb);
        EXPECT(gbc.readMem(0xa9a4), 0xfe);
        // CB FE 03B4
        gbc.setState(0xe4f5, 0x8c74, 0x4790, 0x732, 0x3a72, 0xeb44, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0xcb, 0xfe });
        gbc.writeMem(0xeb44, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8c74);
        EXPECT(gbc.pc(), 0xe4f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f5), 0xcb);
        EXPECT(gbc.readMem(0xe4f6), 0xfe);
        EXPECT(gbc.readMem(0xeb44), 0x97);
        // CB FE 03B7
        gbc.setState(0xd488, 0x6263, 0xd520, 0xa78e, 0x9c3c, 0x46fb, 0x1, 0x0);
        gbc.writeMem(0x46fb, { 0xa1 });
        gbc.writeMem(0xd488, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6263);
        EXPECT(gbc.pc(), 0xd48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd488), 0xcb);
        EXPECT(gbc.readMem(0xd489), 0xfe);
        // CB FE 03B8
        gbc.setState(0x5868, 0x8b35, 0xb100, 0x7aff, 0x5ca6, 0x40b5, 0x0, 0x0);
        gbc.writeMem(0x40b5, { 0x90 });
        gbc.writeMem(0x5868, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8b35);
        EXPECT(gbc.pc(), 0x586a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03BB
        gbc.setState(0x85eb, 0xcc62, 0x2020, 0xa5b9, 0x932e, 0x778e, 0x1, 0x1);
        gbc.writeMem(0x778e, { 0xed });
        gbc.writeMem(0x85eb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0x85ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85eb), 0xcb);
        EXPECT(gbc.readMem(0x85ec), 0xfe);
        // CB FE 03BC
        gbc.setState(0x3ee5, 0x858c, 0x5980, 0x6091, 0xfb4, 0x4f6f, 0x0, 0x1);
        gbc.writeMem(0x3ee5, { 0xcb, 0xfe });
        gbc.writeMem(0x4f6f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x858c);
        EXPECT(gbc.pc(), 0x3ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03BE
        gbc.setState(0x3251, 0x102e, 0x17b0, 0xcfab, 0xedc5, 0xe58, 0x1, 0x0);
        gbc.writeMem(0xe58, { 0xd5 });
        gbc.writeMem(0x3251, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x102e);
        EXPECT(gbc.pc(), 0x3253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FE 03BF
        gbc.setState(0xb5a8, 0x675, 0x8c80, 0x8024, 0x227a, 0x546a, 0x1, 0x0);
        gbc.writeMem(0x546a, { 0xac });
        gbc.writeMem(0xb5a8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x675);
        EXPECT(gbc.pc(), 0xb5aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a8), 0xcb);
        EXPECT(gbc.readMem(0xb5a9), 0xfe);
        // CB FE 03C0
        gbc.setState(0x9066, 0x370e, 0x26f0, 0xbcd3, 0x11d4, 0x6162, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0xfa });
        gbc.writeMem(0x9066, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x370e);
        EXPECT(gbc.pc(), 0x9068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9066), 0xcb);
        EXPECT(gbc.readMem(0x9067), 0xfe);
        // CB FE 03C1
        gbc.setState(0x61d9, 0x9092, 0x2c70, 0xd20a, 0xc6f4, 0xed7e, 0x0, 0x1);
        gbc.writeMem(0x61d9, { 0xcb, 0xfe });
        gbc.writeMem(0xed7e, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0x61db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7e), 0xc6);
        // CB FE 03C4
        gbc.setState(0x1865, 0x2dca, 0x9be0, 0x1b9d, 0x7071, 0xef09, 0x0, 0x0);
        gbc.writeMem(0x1865, { 0xcb, 0xfe });
        gbc.writeMem(0xef09, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2dca);
        EXPECT(gbc.pc(), 0x1867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef09), 0xe6);
        // CB FE 03C6
        gbc.setState(0x9767, 0x19cf, 0xa3b0, 0x2a7b, 0x126b, 0xf3c, 0x0, 0x0);
        gbc.writeMem(0xf3c, { 0xeb });
        gbc.writeMem(0x9767, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x19cf);
        EXPECT(gbc.pc(), 0x9769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9767), 0xcb);
        EXPECT(gbc.readMem(0x9768), 0xfe);
        // CB FE 03C7
        gbc.setState(0x1872, 0x6552, 0x940, 0x9995, 0xe916, 0x8076, 0x0, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0xfe });
        gbc.writeMem(0x8076, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6552);
        EXPECT(gbc.pc(), 0x1874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8076), 0xca);
        // CB FE 03C9
        gbc.setState(0x8a9, 0x7074, 0xd5e0, 0x2041, 0xfbb5, 0x85fd, 0x0, 0x0);
        gbc.writeMem(0x8a9, { 0xcb, 0xfe });
        gbc.writeMem(0x85fd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7074);
        EXPECT(gbc.pc(), 0x8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fd), 0x90);
        // CB FE 03CB
        gbc.setState(0x292a, 0xe692, 0x78c0, 0x9acd, 0xe4e0, 0x589d, 0x0, 0x1);
        gbc.writeMem(0x292a, { 0xcb, 0xfe });
        gbc.writeMem(0x589d, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe692);
        EXPECT(gbc.pc(), 0x292c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03CC
        gbc.setState(0x59d3, 0x5e82, 0xda0, 0x2ffb, 0x5a5e, 0x5b10, 0x1, 0x0);
        gbc.writeMem(0x59d3, { 0xcb, 0xfe });
        gbc.writeMem(0x5b10, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5e82);
        EXPECT(gbc.pc(), 0x59d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03CD
        gbc.setState(0x5a10, 0x4d6c, 0x3c60, 0x5d7b, 0x9090, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x5a10, { 0xcb, 0xfe });
        gbc.writeMem(0xe0ba, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4d6c);
        EXPECT(gbc.pc(), 0x5a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ba), 0xa3);
        // CB FE 03CF
        gbc.setState(0x5ae1, 0xafb, 0x9a0, 0xd2e, 0x4f64, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x5ae1, { 0xcb, 0xfe });
        gbc.writeMem(0x9229, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xafb);
        EXPECT(gbc.pc(), 0x5ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9229), 0xfa);
        // CB FE 03D0
        gbc.setState(0x35d, 0x201a, 0x2340, 0x990c, 0xf786, 0xfae9, 0x0, 0x0);
        gbc.writeMem(0x35d, { 0xcb, 0xfe });
        gbc.writeMem(0xfae9, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x201a);
        EXPECT(gbc.pc(), 0x35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfae9), 0xd3);
        // CB FE 03D1
        gbc.setState(0x53ef, 0x7010, 0xbd90, 0x214a, 0x3b89, 0x6708, 0x0, 0x0);
        gbc.writeMem(0x53ef, { 0xcb, 0xfe });
        gbc.writeMem(0x6708, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FE 03D2
        gbc.setState(0x1655, 0x2f16, 0xd70, 0xb461, 0x2944, 0x83ed, 0x1, 0x1);
        gbc.writeMem(0x1655, { 0xcb, 0xfe });
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2f16);
        EXPECT(gbc.pc(), 0x1657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ed), 0x98);
        // CB FE 03D5
        gbc.setState(0x3def, 0x4b4a, 0x7da0, 0x9a12, 0xd6c7, 0xa940, 0x1, 0x1);
        gbc.writeMem(0x3def, { 0xcb, 0xfe });
        gbc.writeMem(0xa940, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4b4a);
        EXPECT(gbc.pc(), 0x3df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa940), 0xf8);
        // CB FE 03D6
        gbc.setState(0x1e65, 0xbda0, 0x1940, 0xd311, 0x7a0c, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xcb, 0xfe });
        gbc.writeMem(0x6668, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbda0);
        EXPECT(gbc.pc(), 0x1e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03D7
        gbc.setState(0xaa84, 0xad8e, 0xb7a0, 0x69e7, 0xfabe, 0xa6ab, 0x1, 0x0);
        gbc.writeMem(0xa6ab, { 0x10 });
        gbc.writeMem(0xaa84, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xad8e);
        EXPECT(gbc.pc(), 0xaa86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ab), 0x90);
        EXPECT(gbc.readMem(0xaa84), 0xcb);
        EXPECT(gbc.readMem(0xaa85), 0xfe);
        // CB FE 03D8
        gbc.setState(0x44a9, 0x6226, 0xd290, 0x5b0f, 0x5564, 0xcd63, 0x1, 0x1);
        gbc.writeMem(0x44a9, { 0xcb, 0xfe });
        gbc.writeMem(0xcd63, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6226);
        EXPECT(gbc.pc(), 0x44ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd63), 0xdb);
        // CB FE 03D9
        gbc.setState(0x677f, 0x71dc, 0x4930, 0xecc9, 0xc925, 0x95d1, 0x1, 0x1);
        gbc.writeMem(0x677f, { 0xcb, 0xfe });
        gbc.writeMem(0x95d1, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x71dc);
        EXPECT(gbc.pc(), 0x6781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d1), 0x9b);
        // CB FE 03DA
        gbc.setState(0x20c4, 0x62d8, 0xc840, 0xa2a6, 0xa5e9, 0xd3cc, 0x0, 0x1);
        gbc.writeMem(0x20c4, { 0xcb, 0xfe });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x62d8);
        EXPECT(gbc.pc(), 0x20c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cc), 0xac);
        // CB FE 03DB
        gbc.setState(0x16b, 0x81d2, 0xe820, 0xa6e2, 0x8c91, 0x2982, 0x0, 0x0);
        gbc.writeMem(0x16b, { 0xcb, 0xfe });
        gbc.writeMem(0x2982, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x81d2);
        EXPECT(gbc.pc(), 0x16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03DD
        gbc.setState(0x5fc4, 0x40d7, 0xfbd0, 0xd190, 0x9d48, 0xc1a2, 0x0, 0x0);
        gbc.writeMem(0x5fc4, { 0xcb, 0xfe });
        gbc.writeMem(0xc1a2, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x40d7);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a2), 0xbb);
        // CB FE 03DF
        gbc.setState(0x869c, 0xf04d, 0x15c0, 0x2376, 0x8e46, 0x887f, 0x1, 0x0);
        gbc.writeMem(0x869c, { 0xcb, 0xfe });
        gbc.writeMem(0x887f, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869c), 0xcb);
        EXPECT(gbc.readMem(0x869d), 0xfe);
        EXPECT(gbc.readMem(0x887f), 0xba);
        // CB FE 03E0
        gbc.setState(0x4a6a, 0x1eea, 0x56e0, 0x9592, 0x590c, 0x6c0a, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0xfe });
        gbc.writeMem(0x6c0a, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1eea);
        EXPECT(gbc.pc(), 0x4a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FE 03E1
        gbc.setState(0x36ca, 0x4fd0, 0x9290, 0xc30e, 0x6798, 0xb298, 0x1, 0x0);
        gbc.writeMem(0x36ca, { 0xcb, 0xfe });
        gbc.writeMem(0xb298, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4fd0);
        EXPECT(gbc.pc(), 0x36cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb298), 0xca);
        // CB FE 03E2
        gbc.setState(0xad81, 0x633a, 0xe430, 0x502f, 0x2888, 0x1d80, 0x1, 0x0);
        gbc.writeMem(0x1d80, { 0xbb });
        gbc.writeMem(0xad81, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x633a);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad81), 0xcb);
        EXPECT(gbc.readMem(0xad82), 0xfe);
        // CB FE 03E5
        gbc.setState(0x95e9, 0xc850, 0xa4a0, 0xf7da, 0xaf26, 0xc098, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0xfe });
        gbc.writeMem(0xc098, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc850);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e9), 0xcb);
        EXPECT(gbc.readMem(0x95ea), 0xfe);
        EXPECT(gbc.readMem(0xc098), 0xb0);
        // CB FE 03E6
        gbc.setState(0xd5e9, 0xd0a7, 0xc730, 0x4b39, 0x6438, 0x2871, 0x1, 0x0);
        gbc.writeMem(0x2871, { 0xdb });
        gbc.writeMem(0xd5e9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd0a7);
        EXPECT(gbc.pc(), 0xd5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e9), 0xcb);
        EXPECT(gbc.readMem(0xd5ea), 0xfe);
        // CB FE 03E7
        gbc.setState(0x22e8, 0x4728, 0x9f20, 0x3ee1, 0xa9cb, 0xf420, 0x0, 0x1);
        gbc.writeMem(0x22e8, { 0xcb, 0xfe });
        gbc.writeMem(0xf420, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4728);
        EXPECT(gbc.pc(), 0x22ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf420), 0xb1);
    }
