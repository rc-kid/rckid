    TEST(gbcemu, opcode_cb_fe) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FE 0001
        gbc.setState(0x7162, 0x33f0, 0x73e0, 0xed9, 0xdb89, 0xd0cc, 0x0, 0x0);
        gbc.writeMem(0x7162, { 0xcb, 0xfe });
        gbc.writeMem(0xd0cc, { 0xfe });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0x7164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd0cc));
        // CB FE 0002
        gbc.setState(0x797a, 0x711, 0xc1c0, 0x80bb, 0x8045, 0x171b, 0x0, 0x1);
        gbc.writeMem(0x171b, { 0xcc });
        gbc.writeMem(0x797a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0x797c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0003
        gbc.setState(0x4b86, 0x26f6, 0xa110, 0xbf1, 0xbcdc, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0xfe });
        gbc.writeMem(0x6d8d, { 0x8b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x26f6, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0004
        gbc.setState(0xa841, 0x2771, 0x5640, 0x5ea, 0xd788, 0x1141, 0x1, 0x0);
        gbc.writeMem(0x1141, { 0xa3 });
        gbc.writeMem(0xa841, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2771, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa841));
        EXPECT(0xfe, gbc.readMem(0xa842));
        // CB FE 0006
        gbc.setState(0x597d, 0x53fd, 0x4cb0, 0x8500, 0x4eaf, 0xfb07, 0x1, 0x0);
        gbc.writeMem(0x597d, { 0xcb, 0xfe });
        gbc.writeMem(0xfb07, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x53fd, gbc.sp());
        EXPECT(0x597f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfb07));
        // CB FE 0007
        gbc.setState(0x94e9, 0xd47f, 0xa670, 0x225a, 0xcc80, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x94e9, { 0xcb, 0xfe });
        gbc.writeMem(0xc802, { 0xa2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd47f, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e9));
        EXPECT(0xfe, gbc.readMem(0x94ea));
        EXPECT(0xa2, gbc.readMem(0xc802));
        // CB FE 000B
        gbc.setState(0x851d, 0xe02e, 0xcc60, 0x9ca, 0xe43d, 0x507b, 0x0, 0x1);
        gbc.writeMem(0x507b, { 0xfe });
        gbc.writeMem(0x851d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe02e, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0xfe, gbc.readMem(0x851e));
        // CB FE 000D
        gbc.setState(0xa601, 0xb0f0, 0x12d0, 0x1688, 0x709d, 0x7f4f, 0x0, 0x0);
        gbc.writeMem(0x7f4f, { 0xd2 });
        gbc.writeMem(0xa601, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb0f0, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa601));
        EXPECT(0xfe, gbc.readMem(0xa602));
        // CB FE 000E
        gbc.setState(0x3fb2, 0xff1a, 0x7f60, 0x981c, 0x3b72, 0x1049, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0xa1 });
        gbc.writeMem(0x3fb2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xff1a, gbc.sp());
        EXPECT(0x3fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 000F
        gbc.setState(0xaee, 0x3ebf, 0x6270, 0x24a9, 0xb423, 0xbbb6, 0x0, 0x0);
        gbc.writeMem(0xaee, { 0xcb, 0xfe });
        gbc.writeMem(0xbbb6, { 0x3e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xbbb6));
        // CB FE 0011
        gbc.setState(0x8f0e, 0x1229, 0xf080, 0x8dcc, 0x24d4, 0x968c, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcb, 0xfe });
        gbc.writeMem(0x968c, { 0xb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1229, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0e));
        EXPECT(0xfe, gbc.readMem(0x8f0f));
        EXPECT(0x8b, gbc.readMem(0x968c));
        // CB FE 0012
        gbc.setState(0x4d10, 0x5cf, 0x35c0, 0xcd63, 0xa750, 0x6872, 0x1, 0x1);
        gbc.writeMem(0x4d10, { 0xcb, 0xfe });
        gbc.writeMem(0x6872, { 0x86 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5cf, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0013
        gbc.setState(0x95cd, 0xd3f7, 0x80c0, 0xeb39, 0x3c73, 0x91ba, 0x0, 0x1);
        gbc.writeMem(0x91ba, { 0x50 });
        gbc.writeMem(0x95cd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd3f7, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x91ba));
        EXPECT(0xcb, gbc.readMem(0x95cd));
        EXPECT(0xfe, gbc.readMem(0x95ce));
        // CB FE 0014
        gbc.setState(0x6526, 0xc2c8, 0x37b0, 0xfed6, 0xa8b5, 0x34ff, 0x0, 0x1);
        gbc.writeMem(0x34ff, { 0xda });
        gbc.writeMem(0x6526, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0015
        gbc.setState(0x8cc6, 0x46af, 0x17f0, 0x2fa7, 0x2fb6, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0x8cc6, { 0xcb, 0xfe });
        gbc.writeMem(0xfdf9, { 0x74 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x46af, gbc.sp());
        EXPECT(0x8cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc6));
        EXPECT(0xfe, gbc.readMem(0x8cc7));
        EXPECT(0xf4, gbc.readMem(0xfdf9));
        // CB FE 0016
        gbc.setState(0x48b9, 0x481a, 0x7000, 0x2714, 0xdc9e, 0xafa, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0xdc });
        gbc.writeMem(0x48b9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x48bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0017
        gbc.setState(0x59ca, 0x9179, 0x9fa0, 0xdcd, 0x648a, 0x1c03, 0x0, 0x0);
        gbc.writeMem(0x1c03, { 0xde });
        gbc.writeMem(0x59ca, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9179, gbc.sp());
        EXPECT(0x59cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0018
        gbc.setState(0x7a91, 0x1ff0, 0x5780, 0xa3d5, 0x82e9, 0x278d, 0x0, 0x0);
        gbc.writeMem(0x278d, { 0x83 });
        gbc.writeMem(0x7a91, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1ff0, gbc.sp());
        EXPECT(0x7a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0019
        gbc.setState(0xcfab, 0xfceb, 0xcc80, 0x9a04, 0x7e35, 0xcbe5, 0x1, 0x0);
        gbc.writeMem(0xcbe5, { 0xcd });
        gbc.writeMem(0xcfab, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfceb, gbc.sp());
        EXPECT(0xcfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcbe5));
        EXPECT(0xcb, gbc.readMem(0xcfab));
        EXPECT(0xfe, gbc.readMem(0xcfac));
        // CB FE 001B
        gbc.setState(0x89ed, 0x71e7, 0x7cc0, 0xf1c3, 0x3d87, 0xc085, 0x0, 0x0);
        gbc.writeMem(0x89ed, { 0xcb, 0xfe });
        gbc.writeMem(0xc085, { 0x43 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x71e7, gbc.sp());
        EXPECT(0x89ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ed));
        EXPECT(0xfe, gbc.readMem(0x89ee));
        EXPECT(0xc3, gbc.readMem(0xc085));
        // CB FE 001E
        gbc.setState(0x3727, 0x30fb, 0x77a0, 0x83be, 0xece4, 0x8b52, 0x0, 0x1);
        gbc.writeMem(0x3727, { 0xcb, 0xfe });
        gbc.writeMem(0x8b52, { 0x8a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x30fb, gbc.sp());
        EXPECT(0x3729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8b52));
        // CB FE 0021
        gbc.setState(0xb3f4, 0xdcd5, 0xd480, 0x86c4, 0x99, 0xff2d, 0x1, 0x1);
        gbc.writeMem(0xb3f4, { 0xcb, 0xfe });
        gbc.writeMem(0xff2d, { 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdcd5, gbc.sp());
        EXPECT(0xb3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f4));
        EXPECT(0xfe, gbc.readMem(0xb3f5));
        EXPECT(0xe0, gbc.readMem(0xff2d));
        // CB FE 0022
        gbc.setState(0xbe91, 0x6179, 0x8230, 0x9ee5, 0xfb4, 0xd0de, 0x1, 0x1);
        gbc.writeMem(0xbe91, { 0xcb, 0xfe });
        gbc.writeMem(0xd0de, { 0xcf });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6179, gbc.sp());
        EXPECT(0xbe93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe91));
        EXPECT(0xfe, gbc.readMem(0xbe92));
        EXPECT(0xcf, gbc.readMem(0xd0de));
        // CB FE 0024
        gbc.setState(0x3b88, 0x6f33, 0x8b40, 0xe325, 0x4d82, 0xf21f, 0x1, 0x0);
        gbc.writeMem(0x3b88, { 0xcb, 0xfe });
        gbc.writeMem(0xf21f, { 0xd8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0x3b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xf21f));
        // CB FE 0026
        gbc.setState(0x5f7e, 0x4432, 0x6810, 0x7785, 0xf28d, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0x5f7e, { 0xcb, 0xfe });
        gbc.writeMem(0xd7c4, { 0x8a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4432, gbc.sp());
        EXPECT(0x5f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd7c4));
        // CB FE 0027
        gbc.setState(0xe302, 0x8af1, 0x5940, 0xaee, 0xd3d, 0x2465, 0x0, 0x1);
        gbc.writeMem(0x2465, { 0xc2 });
        gbc.writeMem(0xe302, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0xe304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe302));
        EXPECT(0xfe, gbc.readMem(0xe303));
        // CB FE 0028
        gbc.setState(0xd803, 0x9df, 0x41a0, 0xfb3b, 0x3ac0, 0xf5a1, 0x1, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xfe });
        gbc.writeMem(0xf5a1, { 0xdf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0xd805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd803));
        EXPECT(0xfe, gbc.readMem(0xd804));
        EXPECT(0xdf, gbc.readMem(0xf5a1));
        // CB FE 0029
        gbc.setState(0x79b5, 0xd7a5, 0x6120, 0xb3cf, 0x58ff, 0xc7c5, 0x0, 0x0);
        gbc.writeMem(0x79b5, { 0xcb, 0xfe });
        gbc.writeMem(0xc7c5, { 0x5f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd7a5, gbc.sp());
        EXPECT(0x79b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc7c5));
        // CB FE 002E
        gbc.setState(0xe6ec, 0xd975, 0xc790, 0x63fa, 0xf081, 0x7d45, 0x0, 0x0);
        gbc.writeMem(0x7d45, { 0xf6 });
        gbc.writeMem(0xe6ec, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0xe6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ec));
        EXPECT(0xfe, gbc.readMem(0xe6ed));
        // CB FE 002F
        gbc.setState(0x45c5, 0x2e91, 0x4620, 0xf9b3, 0xbacf, 0xad68, 0x0, 0x0);
        gbc.writeMem(0x45c5, { 0xcb, 0xfe });
        gbc.writeMem(0xad68, { 0x11 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2e91, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xad68));
        // CB FE 0030
        gbc.setState(0x4758, 0xf6f2, 0x180, 0x7ce6, 0x2b69, 0x1e6a, 0x1, 0x0);
        gbc.writeMem(0x1e6a, { 0xeb });
        gbc.writeMem(0x4758, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf6f2, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0033
        gbc.setState(0xd984, 0xc3c4, 0x6940, 0xe49d, 0xbaa2, 0xc965, 0x0, 0x0);
        gbc.writeMem(0xc965, { 0x80 });
        gbc.writeMem(0xd984, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc3c4, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc965));
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0xfe, gbc.readMem(0xd985));
        // CB FE 0034
        gbc.setState(0x3474, 0x647c, 0x2af0, 0xa952, 0x933b, 0xc8f8, 0x1, 0x0);
        gbc.writeMem(0x3474, { 0xcb, 0xfe });
        gbc.writeMem(0xc8f8, { 0x52 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x647c, gbc.sp());
        EXPECT(0x3476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc8f8));
        // CB FE 0035
        gbc.setState(0xe4ff, 0x113, 0xc820, 0x6dc1, 0x6205, 0xe514, 0x0, 0x1);
        gbc.writeMem(0xe4ff, { 0xcb, 0xfe });
        gbc.writeMem(0xe514, { 0xd6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x113, gbc.sp());
        EXPECT(0xe501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ff));
        EXPECT(0xfe, gbc.readMem(0xe500));
        EXPECT(0xd6, gbc.readMem(0xe514));
        // CB FE 0036
        gbc.setState(0xa24e, 0x16e2, 0x6080, 0x59a6, 0xd3c0, 0x8dea, 0x1, 0x1);
        gbc.writeMem(0x8dea, { 0x22 });
        gbc.writeMem(0xa24e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xa250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8dea));
        EXPECT(0xcb, gbc.readMem(0xa24e));
        EXPECT(0xfe, gbc.readMem(0xa24f));
        // CB FE 0038
        gbc.setState(0xc044, 0xa5c6, 0x2c60, 0x8520, 0xc806, 0xf5ca, 0x1, 0x1);
        gbc.writeMem(0xc044, { 0xcb, 0xfe });
        gbc.writeMem(0xf5ca, { 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xc046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc044));
        EXPECT(0xfe, gbc.readMem(0xc045));
        EXPECT(0x8f, gbc.readMem(0xf5ca));
        // CB FE 003B
        gbc.setState(0x7c9a, 0x9e9, 0x5560, 0xcde3, 0x5e01, 0x2837, 0x1, 0x1);
        gbc.writeMem(0x2837, { 0xb7 });
        gbc.writeMem(0x7c9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e9, gbc.sp());
        EXPECT(0x7c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 003C
        gbc.setState(0x8e0a, 0x903a, 0x40d0, 0x5712, 0x9631, 0x2b02, 0x0, 0x1);
        gbc.writeMem(0x2b02, { 0xcc });
        gbc.writeMem(0x8e0a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x903a, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0a));
        EXPECT(0xfe, gbc.readMem(0x8e0b));
        // CB FE 003D
        gbc.setState(0x4614, 0x6f51, 0xbcb0, 0x29f2, 0x9445, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0x4614, { 0xcb, 0xfe });
        gbc.writeMem(0xce6c, { 0x74 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x4616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xce6c));
        // CB FE 003E
        gbc.setState(0xac6a, 0xceb8, 0xca30, 0xa648, 0x4004, 0xd871, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0xcb, 0xfe });
        gbc.writeMem(0xd871, { 0x8a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0xac6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6a));
        EXPECT(0xfe, gbc.readMem(0xac6b));
        EXPECT(0x8a, gbc.readMem(0xd871));
        // CB FE 0040
        gbc.setState(0xbaae, 0xa1fa, 0x6120, 0xc8a3, 0xc4a9, 0x89cf, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0xe2 });
        gbc.writeMem(0xbaae, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa1fa, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x89cf));
        EXPECT(0xcb, gbc.readMem(0xbaae));
        EXPECT(0xfe, gbc.readMem(0xbaaf));
        // CB FE 0041
        gbc.setState(0xaf55, 0xb64a, 0xa810, 0x1c9d, 0x5f9, 0xfe01, 0x1, 0x0);
        gbc.writeMem(0xaf55, { 0xcb, 0xfe });
        gbc.writeMem(0xfe01, { 0xe4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb64a, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf55));
        EXPECT(0xfe, gbc.readMem(0xaf56));
        EXPECT(0xe4, gbc.readMem(0xfe01));
        // CB FE 0044
        gbc.setState(0x80e7, 0x111e, 0x5e30, 0xd4, 0x9472, 0x4c6c, 0x1, 0x1);
        gbc.writeMem(0x4c6c, { 0xcb });
        gbc.writeMem(0x80e7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0xfe, gbc.readMem(0x80e8));
        // CB FE 0045
        gbc.setState(0x7b28, 0x9752, 0x6600, 0xe2, 0x76cc, 0x9487, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xfe });
        gbc.writeMem(0x9487, { 0x1b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9487));
        // CB FE 0047
        gbc.setState(0x5d7b, 0x79b5, 0xb40, 0x1cdc, 0x5592, 0x46d4, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0x83 });
        gbc.writeMem(0x5d7b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x79b5, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0048
        gbc.setState(0xe433, 0xca15, 0xc840, 0xea90, 0xf854, 0x2d0, 0x0, 0x0);
        gbc.writeMem(0x2d0, { 0x9e });
        gbc.writeMem(0xe433, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe433));
        EXPECT(0xfe, gbc.readMem(0xe434));
        // CB FE 004A
        gbc.setState(0xb69b, 0xb26, 0x7a40, 0x904b, 0xf490, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0xcb, 0xfe });
        gbc.writeMem(0xd6fc, { 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb26, gbc.sp());
        EXPECT(0xb69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69b));
        EXPECT(0xfe, gbc.readMem(0xb69c));
        EXPECT(0xfb, gbc.readMem(0xd6fc));
        // CB FE 004B
        gbc.setState(0x45c5, 0x2b24, 0xbfe0, 0xbc61, 0x38f1, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0x45c5, { 0xcb, 0xfe });
        gbc.writeMem(0xdd06, { 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2b24, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xdd06));
        // CB FE 004D
        gbc.setState(0x25af, 0xbd7, 0x2f20, 0x8297, 0x6cbc, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x25af, { 0xcb, 0xfe });
        gbc.writeMem(0x8522, { 0x83 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbd7, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8522));
        // CB FE 004E
        gbc.setState(0x9e10, 0x9322, 0x1580, 0xf66b, 0xe75c, 0xc0ab, 0x0, 0x1);
        gbc.writeMem(0x9e10, { 0xcb, 0xfe });
        gbc.writeMem(0xc0ab, { 0x2e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x9e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e10));
        EXPECT(0xfe, gbc.readMem(0x9e11));
        EXPECT(0xae, gbc.readMem(0xc0ab));
        // CB FE 004F
        gbc.setState(0xe0f8, 0x484b, 0x9e50, 0xd371, 0xb1a1, 0xe679, 0x1, 0x0);
        gbc.writeMem(0xe0f8, { 0xcb, 0xfe });
        gbc.writeMem(0xe679, { 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f8));
        EXPECT(0xfe, gbc.readMem(0xe0f9));
        EXPECT(0xb2, gbc.readMem(0xe679));
        // CB FE 0050
        gbc.setState(0x2cb, 0x52b9, 0x7e60, 0x30b6, 0x5c1d, 0xf947, 0x1, 0x0);
        gbc.writeMem(0x2cb, { 0xcb, 0xfe });
        gbc.writeMem(0xf947, { 0xff });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0x2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xf947));
        // CB FE 0051
        gbc.setState(0x538, 0xe180, 0x6e10, 0x2030, 0x9bd9, 0xb21f, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0xfe });
        gbc.writeMem(0xb21f, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb21f));
        // CB FE 0052
        gbc.setState(0x14dc, 0x2159, 0x2360, 0xfb3d, 0x360e, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x14dc, { 0xcb, 0xfe });
        gbc.writeMem(0x942b, { 0x77 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2159, gbc.sp());
        EXPECT(0x14de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x942b));
        // CB FE 0054
        gbc.setState(0x754d, 0xd1d0, 0x3980, 0xf3cd, 0xe79a, 0xaf0d, 0x1, 0x1);
        gbc.writeMem(0x754d, { 0xcb, 0xfe });
        gbc.writeMem(0xaf0d, { 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd1d0, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xaf0d));
        // CB FE 0056
        gbc.setState(0x610d, 0xf977, 0x55b0, 0x122c, 0x18a6, 0x8bb6, 0x1, 0x1);
        gbc.writeMem(0x610d, { 0xcb, 0xfe });
        gbc.writeMem(0x8bb6, { 0x65 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf977, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8bb6));
        // CB FE 0057
        gbc.setState(0x60dd, 0xba1f, 0xbfa0, 0xff70, 0x647, 0x997a, 0x0, 0x0);
        gbc.writeMem(0x60dd, { 0xcb, 0xfe });
        gbc.writeMem(0x997a, { 0xaa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0x60df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x997a));
        // CB FE 0059
        gbc.setState(0x779, 0x8d23, 0xc5c0, 0x3bdc, 0xd382, 0x902d, 0x0, 0x1);
        gbc.writeMem(0x779, { 0xcb, 0xfe });
        gbc.writeMem(0x902d, { 0xf1 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0x77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x902d));
        // CB FE 005A
        gbc.setState(0xc38a, 0xc7f, 0xee90, 0xa769, 0x18b, 0x7684, 0x0, 0x0);
        gbc.writeMem(0x7684, { 0xf8 });
        gbc.writeMem(0xc38a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc7f, gbc.sp());
        EXPECT(0xc38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38a));
        EXPECT(0xfe, gbc.readMem(0xc38b));
        // CB FE 005B
        gbc.setState(0x8654, 0x813e, 0x5060, 0xc395, 0x4b9f, 0x8a58, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0xcb, 0xfe });
        gbc.writeMem(0x8a58, { 0xc3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x813e, gbc.sp());
        EXPECT(0x8656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8654));
        EXPECT(0xfe, gbc.readMem(0x8655));
        EXPECT(0xc3, gbc.readMem(0x8a58));
        // CB FE 005C
        gbc.setState(0x3eb1, 0xcaed, 0x8bb0, 0x6be0, 0x8ffb, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0x3eb1, { 0xcb, 0xfe });
        gbc.writeMem(0xdb45, { 0x50 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcaed, gbc.sp());
        EXPECT(0x3eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xdb45));
        // CB FE 005D
        gbc.setState(0xc4d6, 0x8531, 0xe60, 0x6db2, 0x15be, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0x7d2f, { 0xa0 });
        gbc.writeMem(0xc4d6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8531, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d6));
        EXPECT(0xfe, gbc.readMem(0xc4d7));
        // CB FE 005E
        gbc.setState(0x6520, 0xc86c, 0x32e0, 0xd138, 0x6e8, 0xa51c, 0x0, 0x0);
        gbc.writeMem(0x6520, { 0xcb, 0xfe });
        gbc.writeMem(0xa51c, { 0xdf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc86c, gbc.sp());
        EXPECT(0x6522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa51c));
        // CB FE 005F
        gbc.setState(0x969, 0xd9e7, 0x88f0, 0x72f2, 0xc26f, 0x9c9f, 0x1, 0x1);
        gbc.writeMem(0x969, { 0xcb, 0xfe });
        gbc.writeMem(0x9c9f, { 0xfe });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd9e7, gbc.sp());
        EXPECT(0x96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c9f));
        // CB FE 0060
        gbc.setState(0xa88a, 0x427c, 0xfd0, 0x2d8c, 0xb1e8, 0x47f, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xdb });
        gbc.writeMem(0xa88a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x427c, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88a));
        EXPECT(0xfe, gbc.readMem(0xa88b));
        // CB FE 0061
        gbc.setState(0x2bb0, 0x8237, 0x3610, 0x980a, 0x1e20, 0xb4a2, 0x1, 0x0);
        gbc.writeMem(0x2bb0, { 0xcb, 0xfe });
        gbc.writeMem(0xb4a2, { 0xc1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8237, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb4a2));
        // CB FE 0063
        gbc.setState(0x9cb6, 0x505b, 0xee20, 0x883d, 0x959c, 0xdd1e, 0x1, 0x0);
        gbc.writeMem(0x9cb6, { 0xcb, 0xfe });
        gbc.writeMem(0xdd1e, { 0xb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x505b, gbc.sp());
        EXPECT(0x9cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb6));
        EXPECT(0xfe, gbc.readMem(0x9cb7));
        EXPECT(0x8b, gbc.readMem(0xdd1e));
        // CB FE 0064
        gbc.setState(0x44f, 0x1514, 0xa2c0, 0xaff8, 0x62fd, 0x5455, 0x1, 0x0);
        gbc.writeMem(0x44f, { 0xcb, 0xfe });
        gbc.writeMem(0x5455, { 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0065
        gbc.setState(0xe68f, 0x1974, 0xc1c0, 0x6459, 0xcbe3, 0xf96, 0x1, 0x1);
        gbc.writeMem(0xf96, { 0xab });
        gbc.writeMem(0xe68f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0xfe, gbc.readMem(0xe690));
        // CB FE 0066
        gbc.setState(0x3a2f, 0x15a4, 0x20e0, 0x230c, 0x1ee7, 0xe662, 0x1, 0x1);
        gbc.writeMem(0x3a2f, { 0xcb, 0xfe });
        gbc.writeMem(0xe662, { 0x84 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0x3a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe662));
        // CB FE 0067
        gbc.setState(0x9e06, 0x7011, 0x1c40, 0xedad, 0x1782, 0x9df4, 0x1, 0x1);
        gbc.writeMem(0x9df4, { 0x2e });
        gbc.writeMem(0x9e06, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7011, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x9df4));
        EXPECT(0xcb, gbc.readMem(0x9e06));
        EXPECT(0xfe, gbc.readMem(0x9e07));
        // CB FE 0068
        gbc.setState(0x6a42, 0xd884, 0x60e0, 0x4cf, 0x6223, 0xfef2, 0x1, 0x1);
        gbc.writeMem(0x6a42, { 0xcb, 0xfe });
        gbc.writeMem(0xfef2, { 0x28 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd884, gbc.sp());
        EXPECT(0x6a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xfef2));
        // CB FE 0069
        gbc.setState(0xd57, 0xef23, 0x1170, 0x2430, 0xfa91, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0xd57, { 0xcb, 0xfe });
        gbc.writeMem(0xa1cc, { 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0xd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa1cc));
        // CB FE 006A
        gbc.setState(0x453, 0x2431, 0x85a0, 0x4e7e, 0x7bb5, 0xc569, 0x1, 0x1);
        gbc.writeMem(0x453, { 0xcb, 0xfe });
        gbc.writeMem(0xc569, { 0xcd });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc569));
        // CB FE 006B
        gbc.setState(0x996c, 0x1ff6, 0x220, 0x8e50, 0x488, 0x346a, 0x1, 0x1);
        gbc.writeMem(0x346a, { 0xa8 });
        gbc.writeMem(0x996c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1ff6, gbc.sp());
        EXPECT(0x996e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996c));
        EXPECT(0xfe, gbc.readMem(0x996d));
        // CB FE 006C
        gbc.setState(0x336, 0xf724, 0xd520, 0x4083, 0x7f86, 0xbfa3, 0x0, 0x1);
        gbc.writeMem(0x336, { 0xcb, 0xfe });
        gbc.writeMem(0xbfa3, { 0x90 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0x338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xbfa3));
        // CB FE 006D
        gbc.setState(0xceea, 0x1b8b, 0x13c0, 0xe06c, 0xe9af, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0x8d96, { 0x31 });
        gbc.writeMem(0xceea, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1b8b, gbc.sp());
        EXPECT(0xceec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x8d96));
        EXPECT(0xcb, gbc.readMem(0xceea));
        EXPECT(0xfe, gbc.readMem(0xceeb));
        // CB FE 006F
        gbc.setState(0xebdb, 0x86f3, 0xbf80, 0xfd90, 0xdd50, 0x291a, 0x1, 0x0);
        gbc.writeMem(0x291a, { 0x8f });
        gbc.writeMem(0xebdb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x86f3, gbc.sp());
        EXPECT(0xebdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebdb));
        EXPECT(0xfe, gbc.readMem(0xebdc));
        // CB FE 0070
        gbc.setState(0x339b, 0x48aa, 0xe8e0, 0x76a4, 0xc03, 0x5c50, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0xcb, 0xfe });
        gbc.writeMem(0x5c50, { 0x8c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x48aa, gbc.sp());
        EXPECT(0x339d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0071
        gbc.setState(0x12a6, 0x80f6, 0xa890, 0x4e6f, 0x2af8, 0xb464, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xcb, 0xfe });
        gbc.writeMem(0xb464, { 0xc0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xb464));
        // CB FE 0074
        gbc.setState(0x8246, 0xebc, 0xc0, 0x2937, 0x2375, 0xdc02, 0x1, 0x0);
        gbc.writeMem(0x8246, { 0xcb, 0xfe });
        gbc.writeMem(0xdc02, { 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0x8248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8246));
        EXPECT(0xfe, gbc.readMem(0x8247));
        EXPECT(0xb7, gbc.readMem(0xdc02));
        // CB FE 0075
        gbc.setState(0x1034, 0x701, 0xd9d0, 0x6c93, 0x7591, 0xdbab, 0x1, 0x1);
        gbc.writeMem(0x1034, { 0xcb, 0xfe });
        gbc.writeMem(0xdbab, { 0x46 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0x1036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdbab));
        // CB FE 0076
        gbc.setState(0x7b2f, 0x20f4, 0x5ae0, 0xdef0, 0x689, 0xb533, 0x1, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0xfe });
        gbc.writeMem(0xb533, { 0xe1 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb533));
        // CB FE 0079
        gbc.setState(0x2373, 0x19bc, 0x9980, 0xf836, 0x188e, 0x14a9, 0x0, 0x1);
        gbc.writeMem(0x14a9, { 0xe8 });
        gbc.writeMem(0x2373, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x19bc, gbc.sp());
        EXPECT(0x2375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 007A
        gbc.setState(0xe5bc, 0x7393, 0x6b0, 0x2f26, 0x4c6b, 0xe70a, 0x0, 0x1);
        gbc.writeMem(0xe5bc, { 0xcb, 0xfe });
        gbc.writeMem(0xe70a, { 0x3d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bc));
        EXPECT(0xfe, gbc.readMem(0xe5bd));
        EXPECT(0xbd, gbc.readMem(0xe70a));
        // CB FE 007B
        gbc.setState(0xae60, 0x44a, 0xef60, 0x757f, 0x9918, 0xf706, 0x1, 0x1);
        gbc.writeMem(0xae60, { 0xcb, 0xfe });
        gbc.writeMem(0xf706, { 0x55 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x44a, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae60));
        EXPECT(0xfe, gbc.readMem(0xae61));
        EXPECT(0xd5, gbc.readMem(0xf706));
        // CB FE 007D
        gbc.setState(0xcba5, 0xfcf3, 0x3670, 0x2af2, 0x92c2, 0x9c32, 0x0, 0x0);
        gbc.writeMem(0x9c32, { 0x18 });
        gbc.writeMem(0xcba5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0xcba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9c32));
        EXPECT(0xcb, gbc.readMem(0xcba5));
        EXPECT(0xfe, gbc.readMem(0xcba6));
        // CB FE 007E
        gbc.setState(0x2041, 0x8a8, 0x2a80, 0xfe68, 0xd413, 0x90dd, 0x1, 0x1);
        gbc.writeMem(0x2041, { 0xcb, 0xfe });
        gbc.writeMem(0x90dd, { 0x42 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8a8, gbc.sp());
        EXPECT(0x2043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x90dd));
        // CB FE 007F
        gbc.setState(0x5435, 0x7643, 0x4560, 0x496b, 0xd5c3, 0x64cc, 0x0, 0x1);
        gbc.writeMem(0x5435, { 0xcb, 0xfe });
        gbc.writeMem(0x64cc, { 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0x5437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0080
        gbc.setState(0x38cc, 0xaaad, 0x3480, 0x386b, 0xa787, 0xe1f2, 0x1, 0x1);
        gbc.writeMem(0x38cc, { 0xcb, 0xfe });
        gbc.writeMem(0xe1f2, { 0x2a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0x38ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xe1f2));
        // CB FE 0081
        gbc.setState(0x31fd, 0x1bd0, 0xd810, 0x96af, 0xf2b7, 0x737c, 0x1, 0x1);
        gbc.writeMem(0x31fd, { 0xcb, 0xfe });
        gbc.writeMem(0x737c, { 0xce });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1bd0, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0082
        gbc.setState(0xc73f, 0xa7d4, 0x51d0, 0x9881, 0x69e, 0x179e, 0x0, 0x0);
        gbc.writeMem(0x179e, { 0x88 });
        gbc.writeMem(0xc73f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa7d4, gbc.sp());
        EXPECT(0xc741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73f));
        EXPECT(0xfe, gbc.readMem(0xc740));
        // CB FE 0083
        gbc.setState(0xd125, 0x8b0d, 0x9b0, 0xf0b0, 0x8c25, 0xd9ce, 0x0, 0x0);
        gbc.writeMem(0xd125, { 0xcb, 0xfe });
        gbc.writeMem(0xd9ce, { 0xab });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8b0d, gbc.sp());
        EXPECT(0xd127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd125));
        EXPECT(0xfe, gbc.readMem(0xd126));
        EXPECT(0xab, gbc.readMem(0xd9ce));
        // CB FE 0087
        gbc.setState(0x8ddf, 0x22a4, 0xbc00, 0x9df6, 0xe2e4, 0x5f0d, 0x1, 0x0);
        gbc.writeMem(0x5f0d, { 0xcc });
        gbc.writeMem(0x8ddf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x8de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddf));
        EXPECT(0xfe, gbc.readMem(0x8de0));
        // CB FE 0088
        gbc.setState(0x9878, 0x9ce6, 0x4a20, 0xa574, 0x3b30, 0x70e1, 0x1, 0x0);
        gbc.writeMem(0x70e1, { 0xfb });
        gbc.writeMem(0x9878, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9878));
        EXPECT(0xfe, gbc.readMem(0x9879));
        // CB FE 0089
        gbc.setState(0x2222, 0xd121, 0x5090, 0xf285, 0x9cb3, 0x2a6d, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0xcb, 0xfe });
        gbc.writeMem(0x2a6d, { 0xb4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0x2224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 008A
        gbc.setState(0xaf13, 0x7fbb, 0x99c0, 0x5231, 0x87aa, 0xb0aa, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0xcb, 0xfe });
        gbc.writeMem(0xb0aa, { 0x51 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7fbb, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf13));
        EXPECT(0xfe, gbc.readMem(0xaf14));
        EXPECT(0xd1, gbc.readMem(0xb0aa));
        // CB FE 008B
        gbc.setState(0x663c, 0x170c, 0x680, 0x7a37, 0xf6c2, 0xaf3c, 0x0, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xfe });
        gbc.writeMem(0xaf3c, { 0x98 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x170c, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaf3c));
        // CB FE 008C
        gbc.setState(0x874e, 0xef8a, 0x950, 0xe946, 0x75e5, 0xea37, 0x0, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0xfe });
        gbc.writeMem(0xea37, { 0x42 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874e));
        EXPECT(0xfe, gbc.readMem(0x874f));
        EXPECT(0xc2, gbc.readMem(0xea37));
        // CB FE 008D
        gbc.setState(0x5d66, 0x6f8c, 0xfeb0, 0x5f32, 0xc108, 0x2ba3, 0x0, 0x0);
        gbc.writeMem(0x2ba3, { 0xe4 });
        gbc.writeMem(0x5d66, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f8c, gbc.sp());
        EXPECT(0x5d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 008F
        gbc.setState(0x6353, 0xfb3c, 0x66c0, 0xf399, 0xcf2d, 0x7932, 0x0, 0x1);
        gbc.writeMem(0x6353, { 0xcb, 0xfe });
        gbc.writeMem(0x7932, { 0x83 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0090
        gbc.setState(0xee7, 0x172e, 0xde80, 0x9e05, 0x9838, 0x63d2, 0x0, 0x0);
        gbc.writeMem(0xee7, { 0xcb, 0xfe });
        gbc.writeMem(0x63d2, { 0xc1 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x172e, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0092
        gbc.setState(0x8c5e, 0xc9fc, 0x4150, 0xd67c, 0xf188, 0xbb8b, 0x1, 0x0);
        gbc.writeMem(0x8c5e, { 0xcb, 0xfe });
        gbc.writeMem(0xbb8b, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5e));
        EXPECT(0xfe, gbc.readMem(0x8c5f));
        EXPECT(0xc1, gbc.readMem(0xbb8b));
        // CB FE 0093
        gbc.setState(0x50d1, 0xb088, 0xbc70, 0xfa94, 0xbb2d, 0xb967, 0x0, 0x1);
        gbc.writeMem(0x50d1, { 0xcb, 0xfe });
        gbc.writeMem(0xb967, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb088, gbc.sp());
        EXPECT(0x50d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb967));
        // CB FE 0094
        gbc.setState(0x9162, 0x4a91, 0xfc90, 0x93d3, 0xb200, 0x2410, 0x1, 0x0);
        gbc.writeMem(0x2410, { 0xfa });
        gbc.writeMem(0x9162, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4a91, gbc.sp());
        EXPECT(0x9164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9162));
        EXPECT(0xfe, gbc.readMem(0x9163));
        // CB FE 0095
        gbc.setState(0x19f4, 0x96de, 0x7250, 0x22d9, 0xd499, 0x7a17, 0x0, 0x1);
        gbc.writeMem(0x19f4, { 0xcb, 0xfe });
        gbc.writeMem(0x7a17, { 0xb4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x96de, gbc.sp());
        EXPECT(0x19f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0096
        gbc.setState(0xad86, 0xf0bb, 0x88c0, 0x173e, 0xccac, 0x699c, 0x1, 0x1);
        gbc.writeMem(0x699c, { 0xfe });
        gbc.writeMem(0xad86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf0bb, gbc.sp());
        EXPECT(0xad88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad86));
        EXPECT(0xfe, gbc.readMem(0xad87));
        // CB FE 0097
        gbc.setState(0x8a03, 0x3cbd, 0xea60, 0xa359, 0x3a84, 0x405f, 0x1, 0x1);
        gbc.writeMem(0x405f, { 0x9b });
        gbc.writeMem(0x8a03, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a03));
        EXPECT(0xfe, gbc.readMem(0x8a04));
        // CB FE 009B
        gbc.setState(0xda4e, 0x5ab6, 0x6e40, 0x9162, 0x30a2, 0xf095, 0x0, 0x0);
        gbc.writeMem(0xda4e, { 0xcb, 0xfe });
        gbc.writeMem(0xf095, { 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5ab6, gbc.sp());
        EXPECT(0xda50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4e));
        EXPECT(0xfe, gbc.readMem(0xda4f));
        EXPECT(0xcb, gbc.readMem(0xf095));
        // CB FE 009C
        gbc.setState(0x6a77, 0xd595, 0x5280, 0xca0d, 0x805f, 0xe4d4, 0x0, 0x1);
        gbc.writeMem(0x6a77, { 0xcb, 0xfe });
        gbc.writeMem(0xe4d4, { 0x3d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x6a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe4d4));
        // CB FE 009D
        gbc.setState(0xbb30, 0xbf8, 0x1d50, 0x9961, 0xfe03, 0xff65, 0x0, 0x1);
        gbc.writeMem(0xbb30, { 0xcb, 0xfe });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0xbb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb30));
        EXPECT(0xfe, gbc.readMem(0xbb31));
        EXPECT(0xae, gbc.readMem(0xff65));
        // CB FE 009F
        gbc.setState(0x19fd, 0xbe17, 0x74d0, 0x5379, 0x138a, 0x9d97, 0x1, 0x0);
        gbc.writeMem(0x19fd, { 0xcb, 0xfe });
        gbc.writeMem(0x9d97, { 0x41 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbe17, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9d97));
        // CB FE 00A0
        gbc.setState(0x5c03, 0x5a0b, 0x8d80, 0xf0a7, 0x2a10, 0x66b1, 0x0, 0x0);
        gbc.writeMem(0x5c03, { 0xcb, 0xfe });
        gbc.writeMem(0x66b1, { 0xc4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00A1
        gbc.setState(0x7fff, 0x1c3b, 0xf2e0, 0x8987, 0x4942, 0x4cd8, 0x0, 0x1);
        gbc.writeMem(0x4cd8, { 0xb2 });
        gbc.writeMem(0x7fff, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1c3b, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8000));
        // CB FE 00A2
        gbc.setState(0x561, 0xdaf1, 0x1490, 0x4136, 0x3a54, 0x8ffb, 0x0, 0x1);
        gbc.writeMem(0x561, { 0xcb, 0xfe });
        gbc.writeMem(0x8ffb, { 0x95 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdaf1, gbc.sp());
        EXPECT(0x563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8ffb));
        // CB FE 00A3
        gbc.setState(0x123c, 0x7f50, 0x56f0, 0x54ec, 0x5f96, 0x9e9c, 0x1, 0x1);
        gbc.writeMem(0x123c, { 0xcb, 0xfe });
        gbc.writeMem(0x9e9c, { 0x34 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f50, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x9e9c));
        // CB FE 00A7
        gbc.setState(0xd9a7, 0xc4d0, 0x87f0, 0xe262, 0xeec8, 0x9f22, 0x0, 0x1);
        gbc.writeMem(0x9f22, { 0x5f });
        gbc.writeMem(0xd9a7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc4d0, gbc.sp());
        EXPECT(0xd9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9f22));
        EXPECT(0xcb, gbc.readMem(0xd9a7));
        EXPECT(0xfe, gbc.readMem(0xd9a8));
        // CB FE 00A8
        gbc.setState(0x7b62, 0xf432, 0x3800, 0xd8ef, 0x83f8, 0xca04, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xfe });
        gbc.writeMem(0xca04, { 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xca04));
        // CB FE 00AD
        gbc.setState(0x5a1c, 0x5621, 0x2880, 0xf77a, 0xf645, 0x618d, 0x1, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0xfe });
        gbc.writeMem(0x618d, { 0xb3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00B0
        gbc.setState(0x5c82, 0xa1e4, 0x7660, 0xa081, 0xb256, 0xe19f, 0x1, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0xfe });
        gbc.writeMem(0xe19f, { 0xd6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa1e4, gbc.sp());
        EXPECT(0x5c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe19f));
        // CB FE 00B2
        gbc.setState(0x7a35, 0x9fd3, 0x7da0, 0xc6e3, 0xda04, 0xd411, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xcb, 0xfe });
        gbc.writeMem(0xd411, { 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9fd3, gbc.sp());
        EXPECT(0x7a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd411));
        // CB FE 00B3
        gbc.setState(0x906c, 0xf284, 0x93c0, 0xe512, 0x6ad, 0xc594, 0x0, 0x0);
        gbc.writeMem(0x906c, { 0xcb, 0xfe });
        gbc.writeMem(0xc594, { 0xea });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0x906e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906c));
        EXPECT(0xfe, gbc.readMem(0x906d));
        EXPECT(0xea, gbc.readMem(0xc594));
        // CB FE 00B4
        gbc.setState(0x4ae3, 0x7d83, 0xf410, 0xd66d, 0x9a9d, 0x5000, 0x0, 0x0);
        gbc.writeMem(0x4ae3, { 0xcb, 0xfe });
        gbc.writeMem(0x5000, { 0xc0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00B5
        gbc.setState(0x4eda, 0x9eed, 0x79e0, 0x2e61, 0x86f7, 0x394e, 0x1, 0x1);
        gbc.writeMem(0x394e, { 0xfc });
        gbc.writeMem(0x4eda, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00B6
        gbc.setState(0x2f8b, 0x38c2, 0x830, 0xa9c3, 0x469e, 0xf9ac, 0x1, 0x1);
        gbc.writeMem(0x2f8b, { 0xcb, 0xfe });
        gbc.writeMem(0xf9ac, { 0x50 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x38c2, gbc.sp());
        EXPECT(0x2f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf9ac));
        // CB FE 00B7
        gbc.setState(0x41d, 0x9ece, 0xbf10, 0x5b4a, 0x7e22, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0x41d, { 0xcb, 0xfe });
        gbc.writeMem(0xd8ef, { 0xd7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x41f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd8ef));
        // CB FE 00B9
        gbc.setState(0x676a, 0xcbf4, 0xa3f0, 0x64ed, 0x8e5a, 0x6290, 0x1, 0x1);
        gbc.writeMem(0x6290, { 0xf4 });
        gbc.writeMem(0x676a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcbf4, gbc.sp());
        EXPECT(0x676c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00BA
        gbc.setState(0x19a2, 0x6195, 0x9e00, 0xa4a0, 0xa596, 0x9c83, 0x1, 0x1);
        gbc.writeMem(0x19a2, { 0xcb, 0xfe });
        gbc.writeMem(0x9c83, { 0x85 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9c83));
        // CB FE 00BB
        gbc.setState(0xbaf0, 0xbf46, 0x8660, 0x3e59, 0xd3cb, 0x645b, 0x1, 0x0);
        gbc.writeMem(0x645b, { 0xae });
        gbc.writeMem(0xbaf0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf46, gbc.sp());
        EXPECT(0xbaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf0));
        EXPECT(0xfe, gbc.readMem(0xbaf1));
        // CB FE 00BC
        gbc.setState(0x9ceb, 0x29b1, 0x85c0, 0xf556, 0xf696, 0xbe2f, 0x1, 0x1);
        gbc.writeMem(0x9ceb, { 0xcb, 0xfe });
        gbc.writeMem(0xbe2f, { 0x75 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0x9ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ceb));
        EXPECT(0xfe, gbc.readMem(0x9cec));
        EXPECT(0xf5, gbc.readMem(0xbe2f));
        // CB FE 00BD
        gbc.setState(0x5d08, 0xa7bb, 0x2100, 0x26fb, 0xf675, 0xfc75, 0x0, 0x1);
        gbc.writeMem(0x5d08, { 0xcb, 0xfe });
        gbc.writeMem(0xfc75, { 0x4e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa7bb, gbc.sp());
        EXPECT(0x5d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xfc75));
        // CB FE 00BE
        gbc.setState(0x3c10, 0xb27, 0xabc0, 0x5a43, 0x9c87, 0x8f2a, 0x0, 0x0);
        gbc.writeMem(0x3c10, { 0xcb, 0xfe });
        gbc.writeMem(0x8f2a, { 0x63 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb27, gbc.sp());
        EXPECT(0x3c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8f2a));
        // CB FE 00BF
        gbc.setState(0xaa48, 0x1034, 0xeda0, 0xfa81, 0xc848, 0x6c0d, 0x1, 0x0);
        gbc.writeMem(0x6c0d, { 0xd6 });
        gbc.writeMem(0xaa48, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1034, gbc.sp());
        EXPECT(0xaa4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa48));
        EXPECT(0xfe, gbc.readMem(0xaa49));
        // CB FE 00C0
        gbc.setState(0x7281, 0xdf0c, 0x9740, 0xabcc, 0x2f02, 0xcb94, 0x1, 0x0);
        gbc.writeMem(0x7281, { 0xcb, 0xfe });
        gbc.writeMem(0xcb94, { 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0x7283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xcb94));
        // CB FE 00C1
        gbc.setState(0x4a41, 0x2cae, 0xb7c0, 0xf5fa, 0xd0c5, 0xaf4d, 0x1, 0x0);
        gbc.writeMem(0x4a41, { 0xcb, 0xfe });
        gbc.writeMem(0xaf4d, { 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2cae, gbc.sp());
        EXPECT(0x4a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf4d));
        // CB FE 00C2
        gbc.setState(0x374b, 0xd722, 0x4710, 0xe04e, 0xb930, 0x359b, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xfc });
        gbc.writeMem(0x374b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd722, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00C3
        gbc.setState(0x1c24, 0xef23, 0xb950, 0x80df, 0x4371, 0x76de, 0x1, 0x0);
        gbc.writeMem(0x1c24, { 0xcb, 0xfe });
        gbc.writeMem(0x76de, { 0xdc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0x1c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00C5
        gbc.setState(0x32fa, 0xad1f, 0x6400, 0x69a6, 0x5df7, 0x87f0, 0x0, 0x1);
        gbc.writeMem(0x32fa, { 0xcb, 0xfe });
        gbc.writeMem(0x87f0, { 0x3f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x87f0));
        // CB FE 00C6
        gbc.setState(0x771f, 0x3c54, 0xc00, 0x9031, 0xaf57, 0x921e, 0x1, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0xfe });
        gbc.writeMem(0x921e, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x921e));
        // CB FE 00C7
        gbc.setState(0x4036, 0xf5dd, 0xc4c0, 0x170f, 0xfd33, 0xe971, 0x1, 0x0);
        gbc.writeMem(0x4036, { 0xcb, 0xfe });
        gbc.writeMem(0xe971, { 0xdd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf5dd, gbc.sp());
        EXPECT(0x4038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe971));
        // CB FE 00C8
        gbc.setState(0x9fe1, 0x7082, 0xd530, 0x7b3b, 0x5214, 0xa554, 0x0, 0x1);
        gbc.writeMem(0x9fe1, { 0xcb, 0xfe });
        gbc.writeMem(0xa554, { 0x3f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7082, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe1));
        EXPECT(0xfe, gbc.readMem(0x9fe2));
        EXPECT(0xbf, gbc.readMem(0xa554));
        // CB FE 00C9
        gbc.setState(0xd62a, 0xe6f7, 0xd3d0, 0x402d, 0x4155, 0x732c, 0x1, 0x0);
        gbc.writeMem(0x732c, { 0xb1 });
        gbc.writeMem(0xd62a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0xd62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62a));
        EXPECT(0xfe, gbc.readMem(0xd62b));
        // CB FE 00CA
        gbc.setState(0xbd8b, 0x8682, 0x97f0, 0x5787, 0x6ac5, 0x1f40, 0x1, 0x0);
        gbc.writeMem(0x1f40, { 0xd8 });
        gbc.writeMem(0xbd8b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8682, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd8b));
        EXPECT(0xfe, gbc.readMem(0xbd8c));
        // CB FE 00CB
        gbc.setState(0x6ab7, 0x26dc, 0xbe70, 0x2c79, 0x6da1, 0xb677, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xfe });
        gbc.writeMem(0xb677, { 0x1b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x26dc, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb677));
        // CB FE 00D0
        gbc.setState(0x53c3, 0x1659, 0x2f50, 0x4d31, 0x7253, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0x53c3, { 0xcb, 0xfe });
        gbc.writeMem(0x8b84, { 0x70 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0x53c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8b84));
        // CB FE 00D1
        gbc.setState(0x2ee6, 0xc18, 0x4ac0, 0xf664, 0x15e8, 0x9ebe, 0x1, 0x1);
        gbc.writeMem(0x2ee6, { 0xcb, 0xfe });
        gbc.writeMem(0x9ebe, { 0xbe });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc18, gbc.sp());
        EXPECT(0x2ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9ebe));
        // CB FE 00D2
        gbc.setState(0x4802, 0xfb7, 0x16e0, 0x616, 0xc778, 0xb2b9, 0x0, 0x0);
        gbc.writeMem(0x4802, { 0xcb, 0xfe });
        gbc.writeMem(0xb2b9, { 0x3f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb2b9));
        // CB FE 00D3
        gbc.setState(0xb01c, 0xd997, 0x4700, 0xa69, 0xbe06, 0xdceb, 0x1, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0xfe });
        gbc.writeMem(0xdceb, { 0x87 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd997, gbc.sp());
        EXPECT(0xb01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01c));
        EXPECT(0xfe, gbc.readMem(0xb01d));
        EXPECT(0x87, gbc.readMem(0xdceb));
        // CB FE 00D5
        gbc.setState(0xb569, 0x23ba, 0xb780, 0x7b72, 0x8372, 0x3431, 0x0, 0x0);
        gbc.writeMem(0x3431, { 0xbf });
        gbc.writeMem(0xb569, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x23ba, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb569));
        EXPECT(0xfe, gbc.readMem(0xb56a));
        // CB FE 00D6
        gbc.setState(0xeac, 0x81f9, 0x9b80, 0xc927, 0x679e, 0xd3, 0x0, 0x0);
        gbc.writeMem(0xd3, { 0xc9 });
        gbc.writeMem(0xeac, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x81f9, gbc.sp());
        EXPECT(0xeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00D9
        gbc.setState(0xd208, 0x2db6, 0x4b90, 0x19cc, 0x8969, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x2c7f, { 0xa6 });
        gbc.writeMem(0xd208, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0xd20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd208));
        EXPECT(0xfe, gbc.readMem(0xd209));
        // CB FE 00DA
        gbc.setState(0x7670, 0xddc5, 0x2070, 0xf7ad, 0xf71a, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0x7670, { 0xcb, 0xfe });
        gbc.writeMem(0x9dee, { 0x48 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xddc5, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9dee));
        // CB FE 00DC
        gbc.setState(0xd245, 0x7f86, 0xe580, 0xc822, 0x9b26, 0x9981, 0x1, 0x1);
        gbc.writeMem(0x9981, { 0x7d });
        gbc.writeMem(0xd245, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7f86, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9981));
        EXPECT(0xcb, gbc.readMem(0xd245));
        EXPECT(0xfe, gbc.readMem(0xd246));
        // CB FE 00DE
        gbc.setState(0x7db1, 0xacec, 0x79b0, 0x3f2, 0xe3d9, 0xe2dd, 0x0, 0x0);
        gbc.writeMem(0x7db1, { 0xcb, 0xfe });
        gbc.writeMem(0xe2dd, { 0x8b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xacec, gbc.sp());
        EXPECT(0x7db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe2dd));
        // CB FE 00DF
        gbc.setState(0xd236, 0xeac8, 0x30, 0xda70, 0x3247, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0xb6bf, { 0x2d });
        gbc.writeMem(0xd236, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeac8, gbc.sp());
        EXPECT(0xd238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb6bf));
        EXPECT(0xcb, gbc.readMem(0xd236));
        EXPECT(0xfe, gbc.readMem(0xd237));
        // CB FE 00E0
        gbc.setState(0x3f9d, 0xcb5, 0xea0, 0x26c2, 0xe62f, 0xb981, 0x1, 0x1);
        gbc.writeMem(0x3f9d, { 0xcb, 0xfe });
        gbc.writeMem(0xb981, { 0x18 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcb5, gbc.sp());
        EXPECT(0x3f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb981));
        // CB FE 00E1
        gbc.setState(0x3f75, 0x6a7a, 0x6980, 0xe72d, 0x14d3, 0x6c96, 0x1, 0x0);
        gbc.writeMem(0x3f75, { 0xcb, 0xfe });
        gbc.writeMem(0x6c96, { 0xf6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6a7a, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00E2
        gbc.setState(0x80a5, 0x5f1, 0x4a90, 0x18e5, 0xc393, 0x90ce, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0xcb, 0xfe });
        gbc.writeMem(0x90ce, { 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5f1, gbc.sp());
        EXPECT(0x80a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a5));
        EXPECT(0xfe, gbc.readMem(0x80a6));
        EXPECT(0x8c, gbc.readMem(0x90ce));
        // CB FE 00E4
        gbc.setState(0x161c, 0x11ed, 0x6290, 0x86bb, 0x7f7d, 0x398a, 0x0, 0x0);
        gbc.writeMem(0x161c, { 0xcb, 0xfe });
        gbc.writeMem(0x398a, { 0xc8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x11ed, gbc.sp());
        EXPECT(0x161e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00E5
        gbc.setState(0x7633, 0xf585, 0x5000, 0x58e0, 0x60f7, 0xcbf8, 0x1, 0x0);
        gbc.writeMem(0x7633, { 0xcb, 0xfe });
        gbc.writeMem(0xcbf8, { 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf585, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcbf8));
        // CB FE 00E7
        gbc.setState(0x62e5, 0xc70c, 0x2440, 0x4dd0, 0xace9, 0x2b18, 0x1, 0x1);
        gbc.writeMem(0x2b18, { 0xfe });
        gbc.writeMem(0x62e5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc70c, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00E8
        gbc.setState(0x29a3, 0x3f01, 0x2c00, 0xabee, 0xc00d, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x29a3, { 0xcb, 0xfe });
        gbc.writeMem(0x99e0, { 0x3a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3f01, gbc.sp());
        EXPECT(0x29a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x99e0));
        // CB FE 00E9
        gbc.setState(0xd048, 0xbdf2, 0x2090, 0x7e75, 0x8fe4, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x9dcb, { 0xf6 });
        gbc.writeMem(0xd048, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbdf2, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9dcb));
        EXPECT(0xcb, gbc.readMem(0xd048));
        EXPECT(0xfe, gbc.readMem(0xd049));
        // CB FE 00EB
        gbc.setState(0x2cd6, 0x413c, 0x9420, 0x6ba0, 0x3c4d, 0xab0e, 0x1, 0x0);
        gbc.writeMem(0x2cd6, { 0xcb, 0xfe });
        gbc.writeMem(0xab0e, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x413c, gbc.sp());
        EXPECT(0x2cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xab0e));
        // CB FE 00EC
        gbc.setState(0x5c24, 0x7c55, 0x35f0, 0x4a17, 0x25df, 0x1104, 0x0, 0x1);
        gbc.writeMem(0x1104, { 0xe4 });
        gbc.writeMem(0x5c24, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x5c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00ED
        gbc.setState(0x2a32, 0x2c2c, 0xd3b0, 0xcf4f, 0xce33, 0x7345, 0x0, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0xfe });
        gbc.writeMem(0x7345, { 0xe3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2c2c, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 00EF
        gbc.setState(0x3a12, 0xabf8, 0x8960, 0xa7e3, 0x86d3, 0x2b4e, 0x1, 0x0);
        gbc.writeMem(0x2b4e, { 0xa8 });
        gbc.writeMem(0x3a12, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x3a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00F2
        gbc.setState(0x66a3, 0x17b5, 0xc880, 0x78e4, 0xa334, 0xb869, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0xcb, 0xfe });
        gbc.writeMem(0xb869, { 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb869));
        // CB FE 00F3
        gbc.setState(0xa9bf, 0x715c, 0xb3f0, 0xefd4, 0x9fe7, 0x7e0c, 0x0, 0x0);
        gbc.writeMem(0x7e0c, { 0xaa });
        gbc.writeMem(0xa9bf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bf));
        EXPECT(0xfe, gbc.readMem(0xa9c0));
        // CB FE 00F4
        gbc.setState(0x58e4, 0x13c2, 0xec50, 0x5dc0, 0xbf01, 0xd33d, 0x1, 0x0);
        gbc.writeMem(0x58e4, { 0xcb, 0xfe });
        gbc.writeMem(0xd33d, { 0x7c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd33d));
        // CB FE 00F5
        gbc.setState(0x887a, 0x741f, 0x5ec0, 0xf5e6, 0xcb0d, 0x2b7b, 0x1, 0x1);
        gbc.writeMem(0x2b7b, { 0xc7 });
        gbc.writeMem(0x887a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x887c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887a));
        EXPECT(0xfe, gbc.readMem(0x887b));
        // CB FE 00F6
        gbc.setState(0x73be, 0xa36e, 0xfa20, 0xde06, 0x4b2e, 0x4df1, 0x1, 0x0);
        gbc.writeMem(0x4df1, { 0xa6 });
        gbc.writeMem(0x73be, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0x73c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 00F8
        gbc.setState(0xc15f, 0x858a, 0xa9f0, 0x4baa, 0x7d41, 0x46dc, 0x1, 0x0);
        gbc.writeMem(0x46dc, { 0xf8 });
        gbc.writeMem(0xc15f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x858a, gbc.sp());
        EXPECT(0xc161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15f));
        EXPECT(0xfe, gbc.readMem(0xc160));
        // CB FE 00FA
        gbc.setState(0x6186, 0x1392, 0x5890, 0x42a1, 0x6d26, 0x82dc, 0x0, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0xfe });
        gbc.writeMem(0x82dc, { 0x1b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x82dc));
        // CB FE 00FB
        gbc.setState(0x24a6, 0xbf3f, 0x7e90, 0x6f8e, 0x4fdf, 0xe655, 0x1, 0x1);
        gbc.writeMem(0x24a6, { 0xcb, 0xfe });
        gbc.writeMem(0xe655, { 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbf3f, gbc.sp());
        EXPECT(0x24a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe655));
        // CB FE 00FC
        gbc.setState(0x90e6, 0x5efb, 0xf0d0, 0x85e2, 0xd092, 0xa429, 0x0, 0x0);
        gbc.writeMem(0x90e6, { 0xcb, 0xfe });
        gbc.writeMem(0xa429, { 0xae });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5efb, gbc.sp());
        EXPECT(0x90e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e6));
        EXPECT(0xfe, gbc.readMem(0x90e7));
        EXPECT(0xae, gbc.readMem(0xa429));
        // CB FE 00FD
        gbc.setState(0x8441, 0x70f0, 0xd250, 0x2ba5, 0x9d79, 0x1ada, 0x0, 0x1);
        gbc.writeMem(0x1ada, { 0xcd });
        gbc.writeMem(0x8441, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x8443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8441));
        EXPECT(0xfe, gbc.readMem(0x8442));
        // CB FE 00FE
        gbc.setState(0x9795, 0x4521, 0x1210, 0xde8e, 0x72f9, 0xbddb, 0x1, 0x1);
        gbc.writeMem(0x9795, { 0xcb, 0xfe });
        gbc.writeMem(0xbddb, { 0x5a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4521, gbc.sp());
        EXPECT(0x9797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9795));
        EXPECT(0xfe, gbc.readMem(0x9796));
        EXPECT(0xda, gbc.readMem(0xbddb));
        // CB FE 00FF
        gbc.setState(0xd7e8, 0xe98c, 0xb120, 0x5475, 0x469, 0x80e7, 0x1, 0x0);
        gbc.writeMem(0x80e7, { 0xb9 });
        gbc.writeMem(0xd7e8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x80e7));
        EXPECT(0xcb, gbc.readMem(0xd7e8));
        EXPECT(0xfe, gbc.readMem(0xd7e9));
        // CB FE 0100
        gbc.setState(0x3aab, 0x22fc, 0x73d0, 0x9fab, 0xf4de, 0xfd3a, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xfe });
        gbc.writeMem(0xfd3a, { 0x9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x22fc, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xfd3a));
        // CB FE 0102
        gbc.setState(0xbc7e, 0x9078, 0x57a0, 0x652c, 0x2526, 0xf232, 0x1, 0x0);
        gbc.writeMem(0xbc7e, { 0xcb, 0xfe });
        gbc.writeMem(0xf232, { 0xd6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9078, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7e));
        EXPECT(0xfe, gbc.readMem(0xbc7f));
        EXPECT(0xd6, gbc.readMem(0xf232));
        // CB FE 0103
        gbc.setState(0x5cf7, 0xfb27, 0xfc30, 0x5b02, 0xa529, 0x1e4e, 0x1, 0x1);
        gbc.writeMem(0x1e4e, { 0xdc });
        gbc.writeMem(0x5cf7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfb27, gbc.sp());
        EXPECT(0x5cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0106
        gbc.setState(0x17a4, 0xd767, 0x470, 0xead6, 0x35b9, 0x50fe, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xfe });
        gbc.writeMem(0x50fe, { 0xdf });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd767, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0107
        gbc.setState(0xa663, 0x3703, 0xbf30, 0xab81, 0x8d7e, 0xd373, 0x0, 0x0);
        gbc.writeMem(0xa663, { 0xcb, 0xfe });
        gbc.writeMem(0xd373, { 0xf4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3703, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa663));
        EXPECT(0xfe, gbc.readMem(0xa664));
        EXPECT(0xf4, gbc.readMem(0xd373));
        // CB FE 0108
        gbc.setState(0x594e, 0xaa6, 0x2500, 0xd1a8, 0x2b90, 0xafe4, 0x0, 0x1);
        gbc.writeMem(0x594e, { 0xcb, 0xfe });
        gbc.writeMem(0xafe4, { 0xa2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0x5950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xafe4));
        // CB FE 010A
        gbc.setState(0xefa, 0xaadc, 0x3c70, 0xfa, 0x6c15, 0xfe5b, 0x1, 0x0);
        gbc.writeMem(0xefa, { 0xcb, 0xfe });
        gbc.writeMem(0xfe5b, { 0xde });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0xefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xfe5b));
        // CB FE 010C
        gbc.setState(0x9da4, 0x6f5e, 0x7490, 0x1e87, 0xa283, 0x50d5, 0x1, 0x0);
        gbc.writeMem(0x50d5, { 0xa4 });
        gbc.writeMem(0x9da4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6f5e, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da4));
        EXPECT(0xfe, gbc.readMem(0x9da5));
        // CB FE 010D
        gbc.setState(0x96e9, 0xb4ef, 0x6420, 0xacc7, 0xd658, 0xa110, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0xcb, 0xfe });
        gbc.writeMem(0xa110, { 0x6f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb4ef, gbc.sp());
        EXPECT(0x96eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e9));
        EXPECT(0xfe, gbc.readMem(0x96ea));
        EXPECT(0xef, gbc.readMem(0xa110));
        // CB FE 010E
        gbc.setState(0xd629, 0x59f, 0xe620, 0x4830, 0xa0b6, 0xb70f, 0x0, 0x1);
        gbc.writeMem(0xb70f, { 0x8 });
        gbc.writeMem(0xd629, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0xd62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb70f));
        EXPECT(0xcb, gbc.readMem(0xd629));
        EXPECT(0xfe, gbc.readMem(0xd62a));
        // CB FE 010F
        gbc.setState(0x6837, 0xd67e, 0x9bb0, 0x4619, 0xd28f, 0x62fd, 0x1, 0x0);
        gbc.writeMem(0x62fd, { 0xd1 });
        gbc.writeMem(0x6837, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0110
        gbc.setState(0xc5f6, 0x616b, 0x8dd0, 0xdd3b, 0x3a9c, 0xf057, 0x0, 0x0);
        gbc.writeMem(0xc5f6, { 0xcb, 0xfe });
        gbc.writeMem(0xf057, { 0x60 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x616b, gbc.sp());
        EXPECT(0xc5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f6));
        EXPECT(0xfe, gbc.readMem(0xc5f7));
        EXPECT(0xe0, gbc.readMem(0xf057));
        // CB FE 0111
        gbc.setState(0x9568, 0xcc46, 0x7360, 0xec23, 0xcfe1, 0xeaa9, 0x0, 0x1);
        gbc.writeMem(0x9568, { 0xcb, 0xfe });
        gbc.writeMem(0xeaa9, { 0x84 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcc46, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0xfe, gbc.readMem(0x9569));
        EXPECT(0x84, gbc.readMem(0xeaa9));
        // CB FE 0113
        gbc.setState(0x8680, 0xedd7, 0x3280, 0x24cb, 0xa593, 0x457d, 0x1, 0x1);
        gbc.writeMem(0x457d, { 0xb0 });
        gbc.writeMem(0x8680, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0x8682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8680));
        EXPECT(0xfe, gbc.readMem(0x8681));
        // CB FE 0114
        gbc.setState(0xa5f6, 0x4c54, 0x2090, 0x1794, 0x8ecb, 0x8bc, 0x1, 0x1);
        gbc.writeMem(0x8bc, { 0xbc });
        gbc.writeMem(0xa5f6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4c54, gbc.sp());
        EXPECT(0xa5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f6));
        EXPECT(0xfe, gbc.readMem(0xa5f7));
        // CB FE 0116
        gbc.setState(0xb636, 0x7a6b, 0xbb60, 0xe9d8, 0xdd4e, 0x973e, 0x0, 0x1);
        gbc.writeMem(0x973e, { 0xe0 });
        gbc.writeMem(0xb636, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7a6b, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x973e));
        EXPECT(0xcb, gbc.readMem(0xb636));
        EXPECT(0xfe, gbc.readMem(0xb637));
        // CB FE 0117
        gbc.setState(0x610, 0x6186, 0xd440, 0xfa12, 0xd783, 0x799f, 0x1, 0x1);
        gbc.writeMem(0x610, { 0xcb, 0xfe });
        gbc.writeMem(0x799f, { 0xab });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6186, gbc.sp());
        EXPECT(0x612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0118
        gbc.setState(0x9d61, 0x33ec, 0x1720, 0x1e2, 0x31b5, 0x8aaa, 0x1, 0x0);
        gbc.writeMem(0x8aaa, { 0x1e });
        gbc.writeMem(0x9d61, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x33ec, gbc.sp());
        EXPECT(0x9d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8aaa));
        EXPECT(0xcb, gbc.readMem(0x9d61));
        EXPECT(0xfe, gbc.readMem(0x9d62));
        // CB FE 0119
        gbc.setState(0x1cdf, 0xce57, 0x7ff0, 0x398a, 0x5667, 0x59a8, 0x0, 0x0);
        gbc.writeMem(0x1cdf, { 0xcb, 0xfe });
        gbc.writeMem(0x59a8, { 0xda });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xce57, gbc.sp());
        EXPECT(0x1ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 011A
        gbc.setState(0x4ebd, 0x8b7f, 0xb360, 0x7a42, 0x9dfc, 0x2108, 0x1, 0x0);
        gbc.writeMem(0x2108, { 0xfd });
        gbc.writeMem(0x4ebd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b7f, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 011B
        gbc.setState(0xb079, 0xb3c5, 0x1bd0, 0x82bf, 0x4896, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0xfe });
        gbc.writeMem(0xc6ca, { 0x6e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb079));
        EXPECT(0xfe, gbc.readMem(0xb07a));
        EXPECT(0xee, gbc.readMem(0xc6ca));
        // CB FE 0124
        gbc.setState(0x99a3, 0x6e8e, 0x4740, 0x1fea, 0xdfc7, 0x758d, 0x0, 0x0);
        gbc.writeMem(0x758d, { 0xeb });
        gbc.writeMem(0x99a3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0x99a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a3));
        EXPECT(0xfe, gbc.readMem(0x99a4));
        // CB FE 0125
        gbc.setState(0x2e93, 0x147, 0x92f0, 0x5225, 0x1453, 0xa5cb, 0x0, 0x0);
        gbc.writeMem(0x2e93, { 0xcb, 0xfe });
        gbc.writeMem(0xa5cb, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5cb));
        // CB FE 0126
        gbc.setState(0x5414, 0x409d, 0xf320, 0xa836, 0xe06d, 0x8d99, 0x1, 0x0);
        gbc.writeMem(0x5414, { 0xcb, 0xfe });
        gbc.writeMem(0x8d99, { 0x59 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8d99));
        // CB FE 0127
        gbc.setState(0x917, 0x1e53, 0x6250, 0xc7ef, 0xbc22, 0xf9b4, 0x0, 0x0);
        gbc.writeMem(0x917, { 0xcb, 0xfe });
        gbc.writeMem(0xf9b4, { 0xf2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1e53, gbc.sp());
        EXPECT(0x919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xf9b4));
        // CB FE 0129
        gbc.setState(0xd10, 0x465d, 0xb0f0, 0xf7f0, 0x7fd, 0xf580, 0x0, 0x1);
        gbc.writeMem(0xd10, { 0xcb, 0xfe });
        gbc.writeMem(0xf580, { 0xeb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0xd12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xf580));
        // CB FE 012A
        gbc.setState(0xde83, 0x4051, 0xca40, 0xc378, 0x4ae5, 0x27ec, 0x0, 0x1);
        gbc.writeMem(0x27ec, { 0x98 });
        gbc.writeMem(0xde83, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde83));
        EXPECT(0xfe, gbc.readMem(0xde84));
        // CB FE 012B
        gbc.setState(0xded0, 0x8eb0, 0xeaf0, 0xfad6, 0x72ba, 0xa2f8, 0x1, 0x0);
        gbc.writeMem(0xa2f8, { 0x62 });
        gbc.writeMem(0xded0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8eb0, gbc.sp());
        EXPECT(0xded2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa2f8));
        EXPECT(0xcb, gbc.readMem(0xded0));
        EXPECT(0xfe, gbc.readMem(0xded1));
        // CB FE 012D
        gbc.setState(0x5498, 0xa1b0, 0x2ee0, 0x298a, 0x4c50, 0x7dff, 0x0, 0x0);
        gbc.writeMem(0x5498, { 0xcb, 0xfe });
        gbc.writeMem(0x7dff, { 0xd3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa1b0, gbc.sp());
        EXPECT(0x549a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 012F
        gbc.setState(0xedfb, 0x3cf0, 0x34a0, 0x4df2, 0xae8, 0xcd45, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0x51 });
        gbc.writeMem(0xedfb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3cf0, gbc.sp());
        EXPECT(0xedfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xcd45));
        EXPECT(0xcb, gbc.readMem(0xedfb));
        EXPECT(0xfe, gbc.readMem(0xedfc));
        // CB FE 0130
        gbc.setState(0x91c6, 0x1d02, 0x5610, 0x32a8, 0xee05, 0xb4e6, 0x0, 0x1);
        gbc.writeMem(0x91c6, { 0xcb, 0xfe });
        gbc.writeMem(0xb4e6, { 0xaa });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d02, gbc.sp());
        EXPECT(0x91c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c6));
        EXPECT(0xfe, gbc.readMem(0x91c7));
        EXPECT(0xaa, gbc.readMem(0xb4e6));
        // CB FE 0133
        gbc.setState(0xc66f, 0x95b8, 0xe9f0, 0x2daa, 0x3941, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0x6c5, { 0x80 });
        gbc.writeMem(0xc66f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0xc671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66f));
        EXPECT(0xfe, gbc.readMem(0xc670));
        // CB FE 0135
        gbc.setState(0xde46, 0x2ed4, 0x8100, 0xd5f4, 0x4661, 0xa54d, 0x1, 0x0);
        gbc.writeMem(0xa54d, { 0xd3 });
        gbc.writeMem(0xde46, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0xde48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xa54d));
        EXPECT(0xcb, gbc.readMem(0xde46));
        EXPECT(0xfe, gbc.readMem(0xde47));
        // CB FE 0137
        gbc.setState(0x256d, 0xf46f, 0xda60, 0x89ac, 0x11f1, 0x46b0, 0x1, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xfe });
        gbc.writeMem(0x46b0, { 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf46f, gbc.sp());
        EXPECT(0x256f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0138
        gbc.setState(0xd0a, 0x24b0, 0x5f30, 0x5bdf, 0xce45, 0x47c7, 0x0, 0x0);
        gbc.writeMem(0xd0a, { 0xcb, 0xfe });
        gbc.writeMem(0x47c7, { 0xd1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x24b0, gbc.sp());
        EXPECT(0xd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0139
        gbc.setState(0xaa60, 0x1705, 0xdae0, 0x824, 0xe40f, 0xcf74, 0x1, 0x0);
        gbc.writeMem(0xaa60, { 0xcb, 0xfe });
        gbc.writeMem(0xcf74, { 0x87 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa60));
        EXPECT(0xfe, gbc.readMem(0xaa61));
        EXPECT(0x87, gbc.readMem(0xcf74));
        // CB FE 013C
        gbc.setState(0x3acd, 0xa62a, 0xf190, 0xec77, 0x17f5, 0x3117, 0x0, 0x1);
        gbc.writeMem(0x3117, { 0xe7 });
        gbc.writeMem(0x3acd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0x3acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 013D
        gbc.setState(0x5691, 0x9caa, 0xe8b0, 0xe234, 0xee1d, 0x5634, 0x0, 0x1);
        gbc.writeMem(0x5634, { 0xac });
        gbc.writeMem(0x5691, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9caa, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 013E
        gbc.setState(0xe3b1, 0xb76b, 0xe000, 0xe08d, 0x9853, 0x2cfd, 0x0, 0x1);
        gbc.writeMem(0x2cfd, { 0xe1 });
        gbc.writeMem(0xe3b1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb76b, gbc.sp());
        EXPECT(0xe3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b1));
        EXPECT(0xfe, gbc.readMem(0xe3b2));
        // CB FE 013F
        gbc.setState(0x767c, 0x2f78, 0xe6e0, 0xbb5b, 0x85f7, 0xfa32, 0x0, 0x0);
        gbc.writeMem(0x767c, { 0xcb, 0xfe });
        gbc.writeMem(0xfa32, { 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2f78, gbc.sp());
        EXPECT(0x767e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xfa32));
        // CB FE 0140
        gbc.setState(0xe5b8, 0x8533, 0x80f0, 0x314d, 0x38d0, 0x2dcc, 0x0, 0x0);
        gbc.writeMem(0x2dcc, { 0xef });
        gbc.writeMem(0xe5b8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0xe5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b8));
        EXPECT(0xfe, gbc.readMem(0xe5b9));
        // CB FE 0142
        gbc.setState(0x4cd6, 0x6a49, 0xd7c0, 0xa3a7, 0xe0e, 0x6320, 0x1, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0xfe });
        gbc.writeMem(0x6320, { 0xef });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x4cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0144
        gbc.setState(0x2fc0, 0x3b0, 0x61a0, 0xc8e0, 0xd619, 0x5e34, 0x0, 0x1);
        gbc.writeMem(0x2fc0, { 0xcb, 0xfe });
        gbc.writeMem(0x5e34, { 0xde });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x2fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0145
        gbc.setState(0x942d, 0x9a92, 0x59c0, 0x73ba, 0x261e, 0xaf7d, 0x0, 0x0);
        gbc.writeMem(0x942d, { 0xcb, 0xfe });
        gbc.writeMem(0xaf7d, { 0xd1 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9a92, gbc.sp());
        EXPECT(0x942f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942d));
        EXPECT(0xfe, gbc.readMem(0x942e));
        EXPECT(0xd1, gbc.readMem(0xaf7d));
        // CB FE 0146
        gbc.setState(0x46d1, 0xa5f3, 0x3750, 0xf1e4, 0x66d2, 0x7e4c, 0x0, 0x0);
        gbc.writeMem(0x46d1, { 0xcb, 0xfe });
        gbc.writeMem(0x7e4c, { 0xb4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa5f3, gbc.sp());
        EXPECT(0x46d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0148
        gbc.setState(0x1706, 0xc476, 0xd290, 0xcb4a, 0x7d1e, 0x6d19, 0x1, 0x0);
        gbc.writeMem(0x1706, { 0xcb, 0xfe });
        gbc.writeMem(0x6d19, { 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc476, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0149
        gbc.setState(0x6ad6, 0x96f4, 0xcd30, 0xb06e, 0x8125, 0xe95e, 0x0, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0xfe });
        gbc.writeMem(0xe95e, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x96f4, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe95e));
        // CB FE 014B
        gbc.setState(0x3234, 0x1463, 0xc310, 0x6dc2, 0xe8ca, 0xe29c, 0x1, 0x0);
        gbc.writeMem(0x3234, { 0xcb, 0xfe });
        gbc.writeMem(0xe29c, { 0xd3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1463, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe29c));
        // CB FE 014C
        gbc.setState(0xede, 0x1819, 0xf580, 0x8f73, 0xbc7, 0x9bbb, 0x0, 0x0);
        gbc.writeMem(0xede, { 0xcb, 0xfe });
        gbc.writeMem(0x9bbb, { 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1819, gbc.sp());
        EXPECT(0xee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9bbb));
        // CB FE 014F
        gbc.setState(0x6079, 0xf948, 0x2b30, 0x42ba, 0xdc57, 0x86eb, 0x0, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0xfe });
        gbc.writeMem(0x86eb, { 0xd5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf948, gbc.sp());
        EXPECT(0x607b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x86eb));
        // CB FE 0150
        gbc.setState(0xcb2c, 0x7ca8, 0x41d0, 0xe8de, 0xf28f, 0xe88d, 0x0, 0x0);
        gbc.writeMem(0xcb2c, { 0xcb, 0xfe });
        gbc.writeMem(0xe88d, { 0xa1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2c));
        EXPECT(0xfe, gbc.readMem(0xcb2d));
        EXPECT(0xa1, gbc.readMem(0xe88d));
        // CB FE 0151
        gbc.setState(0xb99c, 0x27f9, 0xf620, 0x36dc, 0xc557, 0x945b, 0x1, 0x0);
        gbc.writeMem(0x945b, { 0xad });
        gbc.writeMem(0xb99c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x27f9, gbc.sp());
        EXPECT(0xb99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x945b));
        EXPECT(0xcb, gbc.readMem(0xb99c));
        EXPECT(0xfe, gbc.readMem(0xb99d));
        // CB FE 0152
        gbc.setState(0xc9a9, 0x2617, 0xa50, 0xcbf6, 0xe46, 0xc54b, 0x0, 0x1);
        gbc.writeMem(0xc54b, { 0xda });
        gbc.writeMem(0xc9a9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2617, gbc.sp());
        EXPECT(0xc9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc54b));
        EXPECT(0xcb, gbc.readMem(0xc9a9));
        EXPECT(0xfe, gbc.readMem(0xc9aa));
        // CB FE 0154
        gbc.setState(0xddc5, 0xc53e, 0xc6e0, 0xb1b8, 0xdd07, 0x65c, 0x0, 0x1);
        gbc.writeMem(0x65c, { 0x84 });
        gbc.writeMem(0xddc5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc53e, gbc.sp());
        EXPECT(0xddc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc5));
        EXPECT(0xfe, gbc.readMem(0xddc6));
        // CB FE 0156
        gbc.setState(0x4555, 0x58ad, 0x1f30, 0x3ce5, 0x2f89, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0x4555, { 0xcb, 0xfe });
        gbc.writeMem(0xf37c, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x58ad, gbc.sp());
        EXPECT(0x4557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xf37c));
        // CB FE 0157
        gbc.setState(0xad4b, 0x944c, 0xc050, 0x251, 0x6eb9, 0x84a3, 0x0, 0x0);
        gbc.writeMem(0x84a3, { 0xa6 });
        gbc.writeMem(0xad4b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x84a3));
        EXPECT(0xcb, gbc.readMem(0xad4b));
        EXPECT(0xfe, gbc.readMem(0xad4c));
        // CB FE 0158
        gbc.setState(0x6c73, 0xeed7, 0x1620, 0x4c77, 0xe226, 0x76fb, 0x0, 0x0);
        gbc.writeMem(0x6c73, { 0xcb, 0xfe });
        gbc.writeMem(0x76fb, { 0xfd });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeed7, gbc.sp());
        EXPECT(0x6c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 015C
        gbc.setState(0x7b54, 0xe82f, 0x1a20, 0xda90, 0x53c8, 0xfae6, 0x1, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0xfe });
        gbc.writeMem(0xfae6, { 0xe6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xfae6));
        // CB FE 015D
        gbc.setState(0x581f, 0xacb7, 0x5ea0, 0xb42b, 0x1674, 0xb80d, 0x1, 0x1);
        gbc.writeMem(0x581f, { 0xcb, 0xfe });
        gbc.writeMem(0xb80d, { 0x51 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0x5821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb80d));
        // CB FE 015E
        gbc.setState(0xb611, 0x781f, 0x5980, 0x877d, 0x337d, 0x213b, 0x0, 0x1);
        gbc.writeMem(0x213b, { 0xe8 });
        gbc.writeMem(0xb611, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x781f, gbc.sp());
        EXPECT(0xb613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb611));
        EXPECT(0xfe, gbc.readMem(0xb612));
        // CB FE 0160
        gbc.setState(0xbf46, 0x732c, 0xf080, 0x57ec, 0xe7f9, 0x38a9, 0x0, 0x1);
        gbc.writeMem(0x38a9, { 0x9b });
        gbc.writeMem(0xbf46, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf46));
        EXPECT(0xfe, gbc.readMem(0xbf47));
        // CB FE 0161
        gbc.setState(0x19d3, 0x4cb6, 0x9360, 0xc726, 0x937, 0xad69, 0x1, 0x1);
        gbc.writeMem(0x19d3, { 0xcb, 0xfe });
        gbc.writeMem(0xad69, { 0x3e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4cb6, gbc.sp());
        EXPECT(0x19d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xad69));
        // CB FE 0163
        gbc.setState(0xb588, 0x45a1, 0x62e0, 0xac78, 0x9ce6, 0xe247, 0x1, 0x0);
        gbc.writeMem(0xb588, { 0xcb, 0xfe });
        gbc.writeMem(0xe247, { 0x56 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x45a1, gbc.sp());
        EXPECT(0xb58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb588));
        EXPECT(0xfe, gbc.readMem(0xb589));
        EXPECT(0xd6, gbc.readMem(0xe247));
        // CB FE 0164
        gbc.setState(0x9e4b, 0x51fe, 0xf180, 0xd77d, 0x6c3a, 0x907e, 0x1, 0x1);
        gbc.writeMem(0x907e, { 0xc6 });
        gbc.writeMem(0x9e4b, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x907e));
        EXPECT(0xcb, gbc.readMem(0x9e4b));
        EXPECT(0xfe, gbc.readMem(0x9e4c));
        // CB FE 0169
        gbc.setState(0x282d, 0xefff, 0x1cf0, 0x9d27, 0x3b97, 0x342f, 0x0, 0x1);
        gbc.writeMem(0x282d, { 0xcb, 0xfe });
        gbc.writeMem(0x342f, { 0x96 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 016A
        gbc.setState(0x4cea, 0x94f0, 0x15b0, 0x5b74, 0x1a4, 0x9bd1, 0x1, 0x0);
        gbc.writeMem(0x4cea, { 0xcb, 0xfe });
        gbc.writeMem(0x9bd1, { 0x33 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x94f0, gbc.sp());
        EXPECT(0x4cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9bd1));
        // CB FE 016B
        gbc.setState(0xb701, 0x6e41, 0xab30, 0x8b9, 0x6eb3, 0x2170, 0x0, 0x0);
        gbc.writeMem(0x2170, { 0xef });
        gbc.writeMem(0xb701, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e41, gbc.sp());
        EXPECT(0xb703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb701));
        EXPECT(0xfe, gbc.readMem(0xb702));
        // CB FE 016C
        gbc.setState(0x62cb, 0xb8e3, 0x6f50, 0x8839, 0xbef8, 0x3324, 0x0, 0x0);
        gbc.writeMem(0x3324, { 0xde });
        gbc.writeMem(0x62cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb8e3, gbc.sp());
        EXPECT(0x62cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 016D
        gbc.setState(0x23e0, 0x3fae, 0xc630, 0x617b, 0x2329, 0x5cf9, 0x0, 0x0);
        gbc.writeMem(0x23e0, { 0xcb, 0xfe });
        gbc.writeMem(0x5cf9, { 0x80 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3fae, gbc.sp());
        EXPECT(0x23e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 016E
        gbc.setState(0x39c6, 0x2300, 0x7230, 0x951f, 0x4cd0, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x39c6, { 0xcb, 0xfe });
        gbc.writeMem(0x4ec2, { 0x90 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2300, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0171
        gbc.setState(0x9233, 0x2ff5, 0xd6f0, 0x1347, 0x1ecc, 0x9875, 0x0, 0x0);
        gbc.writeMem(0x9233, { 0xcb, 0xfe });
        gbc.writeMem(0x9875, { 0x1e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0xfe, gbc.readMem(0x9234));
        EXPECT(0x9e, gbc.readMem(0x9875));
        // CB FE 0172
        gbc.setState(0x4403, 0x8cf5, 0xc9b0, 0x5f1d, 0x297b, 0x4d95, 0x0, 0x1);
        gbc.writeMem(0x4403, { 0xcb, 0xfe });
        gbc.writeMem(0x4d95, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8cf5, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0173
        gbc.setState(0x40c8, 0xd31, 0x11c0, 0x5d2e, 0x6bcc, 0xcaad, 0x0, 0x1);
        gbc.writeMem(0x40c8, { 0xcb, 0xfe });
        gbc.writeMem(0xcaad, { 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd31, gbc.sp());
        EXPECT(0x40ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcaad));
        // CB FE 0176
        gbc.setState(0x4b38, 0x7cdd, 0xff10, 0xea8, 0x1299, 0x709f, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0xcb, 0xfe });
        gbc.writeMem(0x709f, { 0xef });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x4b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0177
        gbc.setState(0x16ca, 0x4ff5, 0x1120, 0x4f84, 0xd4cf, 0xfd69, 0x0, 0x1);
        gbc.writeMem(0x16ca, { 0xcb, 0xfe });
        gbc.writeMem(0xfd69, { 0xcc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4ff5, gbc.sp());
        EXPECT(0x16cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xfd69));
        // CB FE 0178
        gbc.setState(0x25e8, 0xc72d, 0x8aa0, 0xe1f5, 0x543b, 0xc637, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0xfe });
        gbc.writeMem(0xc637, { 0xf4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc72d, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc637));
        // CB FE 017A
        gbc.setState(0x5f16, 0xe5bb, 0xdc0, 0xf783, 0x2d4d, 0x7689, 0x0, 0x0);
        gbc.writeMem(0x5f16, { 0xcb, 0xfe });
        gbc.writeMem(0x7689, { 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe5bb, gbc.sp());
        EXPECT(0x5f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 017B
        gbc.setState(0xe543, 0xcb05, 0x9460, 0xbbc6, 0x19e0, 0xe56b, 0x0, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0xfe });
        gbc.writeMem(0xe56b, { 0xf5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe543));
        EXPECT(0xfe, gbc.readMem(0xe544));
        EXPECT(0xf5, gbc.readMem(0xe56b));
        // CB FE 017C
        gbc.setState(0xea0e, 0x7a3f, 0x87c0, 0x9b12, 0x186c, 0xe562, 0x1, 0x1);
        gbc.writeMem(0xe562, { 0x86 });
        gbc.writeMem(0xea0e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7a3f, gbc.sp());
        EXPECT(0xea10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe562));
        EXPECT(0xcb, gbc.readMem(0xea0e));
        EXPECT(0xfe, gbc.readMem(0xea0f));
        // CB FE 017F
        gbc.setState(0xa4de, 0xab21, 0x61f0, 0xafd0, 0xdc4a, 0xca02, 0x1, 0x1);
        gbc.writeMem(0xa4de, { 0xcb, 0xfe });
        gbc.writeMem(0xca02, { 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xab21, gbc.sp());
        EXPECT(0xa4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4de));
        EXPECT(0xfe, gbc.readMem(0xa4df));
        EXPECT(0x82, gbc.readMem(0xca02));
        // CB FE 0180
        gbc.setState(0xc0fd, 0xc92f, 0x2d00, 0xef7c, 0x8952, 0x4a67, 0x1, 0x0);
        gbc.writeMem(0x4a67, { 0x9f });
        gbc.writeMem(0xc0fd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0xc0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fd));
        EXPECT(0xfe, gbc.readMem(0xc0fe));
        // CB FE 0182
        gbc.setState(0xe7da, 0x35fc, 0xd150, 0x2eeb, 0x6ba9, 0xf757, 0x0, 0x1);
        gbc.writeMem(0xe7da, { 0xcb, 0xfe });
        gbc.writeMem(0xf757, { 0x4a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x35fc, gbc.sp());
        EXPECT(0xe7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7da));
        EXPECT(0xfe, gbc.readMem(0xe7db));
        EXPECT(0xca, gbc.readMem(0xf757));
        // CB FE 0183
        gbc.setState(0x2ff7, 0x9867, 0x63f0, 0xfb3, 0x5273, 0xa2a8, 0x0, 0x1);
        gbc.writeMem(0x2ff7, { 0xcb, 0xfe });
        gbc.writeMem(0xa2a8, { 0x6f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9867, gbc.sp());
        EXPECT(0x2ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa2a8));
        // CB FE 0185
        gbc.setState(0xa9f3, 0x6756, 0x3940, 0x792f, 0x256c, 0x83d1, 0x0, 0x1);
        gbc.writeMem(0x83d1, { 0x13 });
        gbc.writeMem(0xa9f3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6756, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x83d1));
        EXPECT(0xcb, gbc.readMem(0xa9f3));
        EXPECT(0xfe, gbc.readMem(0xa9f4));
        // CB FE 0186
        gbc.setState(0x12f3, 0x914c, 0x92b0, 0x4331, 0x4988, 0x605f, 0x1, 0x0);
        gbc.writeMem(0x12f3, { 0xcb, 0xfe });
        gbc.writeMem(0x605f, { 0xf3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x914c, gbc.sp());
        EXPECT(0x12f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0187
        gbc.setState(0x2c85, 0x3c22, 0x5bc0, 0xa00d, 0x2957, 0x91ef, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0xcb, 0xfe });
        gbc.writeMem(0x91ef, { 0x36 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3c22, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x91ef));
        // CB FE 018B
        gbc.setState(0x2b75, 0x4dc3, 0x95a0, 0xce00, 0xd642, 0x9f52, 0x1, 0x1);
        gbc.writeMem(0x2b75, { 0xcb, 0xfe });
        gbc.writeMem(0x9f52, { 0x25 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x9f52));
        // CB FE 018D
        gbc.setState(0xa01c, 0x7e95, 0xf070, 0x436b, 0xe226, 0x9756, 0x0, 0x1);
        gbc.writeMem(0x9756, { 0xf5 });
        gbc.writeMem(0xa01c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7e95, gbc.sp());
        EXPECT(0xa01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9756));
        EXPECT(0xcb, gbc.readMem(0xa01c));
        EXPECT(0xfe, gbc.readMem(0xa01d));
        // CB FE 018E
        gbc.setState(0xc2d, 0xcf23, 0xbe30, 0xba2b, 0xcf02, 0x35a6, 0x1, 0x1);
        gbc.writeMem(0xc2d, { 0xcb, 0xfe });
        gbc.writeMem(0x35a6, { 0xe8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0xc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 018F
        gbc.setState(0xe24e, 0xe139, 0xc830, 0x570d, 0xfca1, 0xafbb, 0x0, 0x1);
        gbc.writeMem(0xafbb, { 0xcf });
        gbc.writeMem(0xe24e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xe250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xafbb));
        EXPECT(0xcb, gbc.readMem(0xe24e));
        EXPECT(0xfe, gbc.readMem(0xe24f));
        // CB FE 0190
        gbc.setState(0x9a9f, 0x406e, 0x60e0, 0x6ea, 0x6929, 0x4d29, 0x1, 0x1);
        gbc.writeMem(0x4d29, { 0xdb });
        gbc.writeMem(0x9a9f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x406e, gbc.sp());
        EXPECT(0x9aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9f));
        EXPECT(0xfe, gbc.readMem(0x9aa0));
        // CB FE 0191
        gbc.setState(0xcb73, 0x5418, 0xe010, 0x10ed, 0x54ff, 0x3fed, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0x80 });
        gbc.writeMem(0xcb73, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0xcb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb73));
        EXPECT(0xfe, gbc.readMem(0xcb74));
        // CB FE 0192
        gbc.setState(0x54df, 0x9337, 0x2c10, 0x5936, 0x7c9c, 0xad74, 0x0, 0x0);
        gbc.writeMem(0x54df, { 0xcb, 0xfe });
        gbc.writeMem(0xad74, { 0x34 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x54e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xad74));
        // CB FE 0193
        gbc.setState(0xc3b0, 0xf9c6, 0xf50, 0x1c28, 0x5745, 0xa54e, 0x1, 0x0);
        gbc.writeMem(0xa54e, { 0x57 });
        gbc.writeMem(0xc3b0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf9c6, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa54e));
        EXPECT(0xcb, gbc.readMem(0xc3b0));
        EXPECT(0xfe, gbc.readMem(0xc3b1));
        // CB FE 0195
        gbc.setState(0x9938, 0x6069, 0x8390, 0x176b, 0x2b18, 0x4cc5, 0x0, 0x0);
        gbc.writeMem(0x4cc5, { 0x95 });
        gbc.writeMem(0x9938, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6069, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9938));
        EXPECT(0xfe, gbc.readMem(0x9939));
        // CB FE 0196
        gbc.setState(0x7e5c, 0x36f2, 0x3a60, 0xba88, 0x761f, 0xccb8, 0x1, 0x1);
        gbc.writeMem(0x7e5c, { 0xcb, 0xfe });
        gbc.writeMem(0xccb8, { 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x7e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xccb8));
        // CB FE 0197
        gbc.setState(0x88fc, 0xceb8, 0x2de0, 0xf150, 0xf4d6, 0x748f, 0x0, 0x0);
        gbc.writeMem(0x748f, { 0xbd });
        gbc.writeMem(0x88fc, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xceb8, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88fc));
        EXPECT(0xfe, gbc.readMem(0x88fd));
        // CB FE 019C
        gbc.setState(0xeb77, 0xcf51, 0x2130, 0x326e, 0xb44e, 0xc6b9, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0xc2 });
        gbc.writeMem(0xeb77, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcf51, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc6b9));
        EXPECT(0xcb, gbc.readMem(0xeb77));
        EXPECT(0xfe, gbc.readMem(0xeb78));
        // CB FE 019D
        gbc.setState(0xa9c8, 0xa25e, 0xee00, 0xaf5d, 0xb85b, 0xeec9, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0xcb, 0xfe });
        gbc.writeMem(0xeec9, { 0x9d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa25e, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c8));
        EXPECT(0xfe, gbc.readMem(0xa9c9));
        EXPECT(0x9d, gbc.readMem(0xeec9));
        // CB FE 019F
        gbc.setState(0x3a61, 0x4e78, 0x9000, 0xb9ff, 0xe2be, 0x2a91, 0x1, 0x1);
        gbc.writeMem(0x2a91, { 0xcd });
        gbc.writeMem(0x3a61, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4e78, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01A1
        gbc.setState(0xbb2a, 0x542c, 0xb50, 0x4e15, 0x73f4, 0xd1c3, 0x0, 0x1);
        gbc.writeMem(0xbb2a, { 0xcb, 0xfe });
        gbc.writeMem(0xd1c3, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0xbb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2a));
        EXPECT(0xfe, gbc.readMem(0xbb2b));
        EXPECT(0x98, gbc.readMem(0xd1c3));
        // CB FE 01A2
        gbc.setState(0x1a8a, 0x248e, 0x9650, 0xf518, 0x35bd, 0xeb3, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0xc2 });
        gbc.writeMem(0x1a8a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x248e, gbc.sp());
        EXPECT(0x1a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01A4
        gbc.setState(0x3cdb, 0x72de, 0x8cf0, 0x6391, 0x4f18, 0xbe62, 0x1, 0x0);
        gbc.writeMem(0x3cdb, { 0xcb, 0xfe });
        gbc.writeMem(0xbe62, { 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x72de, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xbe62));
        // CB FE 01A5
        gbc.setState(0xdf18, 0x5fd5, 0x1190, 0xd09e, 0x2fe, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xeb });
        gbc.writeMem(0xdf18, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5fd5, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa2f3));
        EXPECT(0xcb, gbc.readMem(0xdf18));
        EXPECT(0xfe, gbc.readMem(0xdf19));
        // CB FE 01A6
        gbc.setState(0xd3f1, 0xc0ba, 0x7f40, 0xe2e6, 0x6f44, 0xb58e, 0x1, 0x0);
        gbc.writeMem(0xb58e, { 0x56 });
        gbc.writeMem(0xd3f1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc0ba, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb58e));
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0xfe, gbc.readMem(0xd3f2));
        // CB FE 01A7
        gbc.setState(0x4e36, 0x4510, 0x9290, 0x79b5, 0x8a9f, 0xca9a, 0x1, 0x1);
        gbc.writeMem(0x4e36, { 0xcb, 0xfe });
        gbc.writeMem(0xca9a, { 0x8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4510, gbc.sp());
        EXPECT(0x4e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xca9a));
        // CB FE 01A8
        gbc.setState(0x4e6c, 0x8b03, 0xb90, 0x5a83, 0xe07f, 0xc7fa, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xcb, 0xfe });
        gbc.writeMem(0xc7fa, { 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc7fa));
        // CB FE 01A9
        gbc.setState(0xbd9f, 0x23a5, 0x95b0, 0xd549, 0x3e4c, 0x4bb2, 0x0, 0x0);
        gbc.writeMem(0x4bb2, { 0xd5 });
        gbc.writeMem(0xbd9f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0xfe, gbc.readMem(0xbda0));
        // CB FE 01AC
        gbc.setState(0x7317, 0x566c, 0x4420, 0xaacb, 0x52e9, 0x327c, 0x1, 0x1);
        gbc.writeMem(0x327c, { 0xfb });
        gbc.writeMem(0x7317, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x566c, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01AD
        gbc.setState(0x6475, 0x106a, 0xf690, 0x1294, 0x2979, 0x386c, 0x1, 0x0);
        gbc.writeMem(0x386c, { 0x8e });
        gbc.writeMem(0x6475, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x106a, gbc.sp());
        EXPECT(0x6477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01AE
        gbc.setState(0xe545, 0x9e6f, 0x58e0, 0x936e, 0x761c, 0x43b6, 0x1, 0x1);
        gbc.writeMem(0x43b6, { 0xb9 });
        gbc.writeMem(0xe545, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9e6f, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe545));
        EXPECT(0xfe, gbc.readMem(0xe546));
        // CB FE 01AF
        gbc.setState(0x6955, 0xc5b7, 0xf650, 0xa1d0, 0xd219, 0x73a9, 0x1, 0x0);
        gbc.writeMem(0x6955, { 0xcb, 0xfe });
        gbc.writeMem(0x73a9, { 0xf9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x6957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01B2
        gbc.setState(0xd5a4, 0x77bd, 0xf190, 0x7b14, 0x8feb, 0xf3fc, 0x0, 0x0);
        gbc.writeMem(0xd5a4, { 0xcb, 0xfe });
        gbc.writeMem(0xf3fc, { 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x77bd, gbc.sp());
        EXPECT(0xd5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a4));
        EXPECT(0xfe, gbc.readMem(0xd5a5));
        EXPECT(0xbc, gbc.readMem(0xf3fc));
        // CB FE 01B3
        gbc.setState(0x6d2e, 0x9172, 0x4b20, 0xdaf7, 0xfb6f, 0x9b44, 0x0, 0x1);
        gbc.writeMem(0x6d2e, { 0xcb, 0xfe });
        gbc.writeMem(0x9b44, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9b44));
        // CB FE 01B4
        gbc.setState(0x2bd8, 0x8d8b, 0x2170, 0x1f8b, 0x9995, 0x7643, 0x0, 0x1);
        gbc.writeMem(0x2bd8, { 0xcb, 0xfe });
        gbc.writeMem(0x7643, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0x2bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01B5
        gbc.setState(0x32, 0x148e, 0x7f70, 0x3cf1, 0xe1c, 0x560a, 0x1, 0x0);
        gbc.writeMem(0x32, { 0xcb, 0xfe });
        gbc.writeMem(0x560a, { 0xc5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01B6
        gbc.setState(0x8a15, 0xcc6a, 0xb290, 0x4462, 0x7813, 0xdca6, 0x1, 0x1);
        gbc.writeMem(0x8a15, { 0xcb, 0xfe });
        gbc.writeMem(0xdca6, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a15));
        EXPECT(0xfe, gbc.readMem(0x8a16));
        EXPECT(0xd0, gbc.readMem(0xdca6));
        // CB FE 01B7
        gbc.setState(0xd519, 0x9fb4, 0x5790, 0x1f2c, 0x5625, 0xa0ab, 0x0, 0x1);
        gbc.writeMem(0xa0ab, { 0xc2 });
        gbc.writeMem(0xd519, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0xd51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa0ab));
        EXPECT(0xcb, gbc.readMem(0xd519));
        EXPECT(0xfe, gbc.readMem(0xd51a));
        // CB FE 01B8
        gbc.setState(0x90d1, 0x5635, 0xaa80, 0xf539, 0x4288, 0x861e, 0x1, 0x0);
        gbc.writeMem(0x861e, { 0x18 });
        gbc.writeMem(0x90d1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5635, gbc.sp());
        EXPECT(0x90d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x861e));
        EXPECT(0xcb, gbc.readMem(0x90d1));
        EXPECT(0xfe, gbc.readMem(0x90d2));
        // CB FE 01B9
        gbc.setState(0x39c8, 0xeba, 0xa120, 0xfae1, 0x9a02, 0x1eb7, 0x0, 0x1);
        gbc.writeMem(0x1eb7, { 0x9b });
        gbc.writeMem(0x39c8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeba, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01BD
        gbc.setState(0x17bc, 0xf29, 0xff0, 0xae02, 0xb97d, 0xbcd6, 0x1, 0x1);
        gbc.writeMem(0x17bc, { 0xcb, 0xfe });
        gbc.writeMem(0xbcd6, { 0xd7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf29, gbc.sp());
        EXPECT(0x17be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xbcd6));
        // CB FE 01BE
        gbc.setState(0x3e07, 0xf1b4, 0x5770, 0x3962, 0xa3e5, 0x3ea9, 0x0, 0x1);
        gbc.writeMem(0x3e07, { 0xcb, 0xfe });
        gbc.writeMem(0x3ea9, { 0xf0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0x3e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01C0
        gbc.setState(0x352e, 0xc95f, 0x27e0, 0x4b5f, 0xc12, 0x7325, 0x1, 0x0);
        gbc.writeMem(0x352e, { 0xcb, 0xfe });
        gbc.writeMem(0x7325, { 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc95f, gbc.sp());
        EXPECT(0x3530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01C1
        gbc.setState(0x16ae, 0x6733, 0x92e0, 0xa7ec, 0x7850, 0x78e6, 0x0, 0x1);
        gbc.writeMem(0x16ae, { 0xcb, 0xfe });
        gbc.writeMem(0x78e6, { 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6733, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01C3
        gbc.setState(0x7c9a, 0x3aba, 0x2650, 0x5940, 0x62ea, 0x816f, 0x0, 0x0);
        gbc.writeMem(0x7c9a, { 0xcb, 0xfe });
        gbc.writeMem(0x816f, { 0x39 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3aba, gbc.sp());
        EXPECT(0x7c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x816f));
        // CB FE 01C4
        gbc.setState(0x4f17, 0x92b7, 0x8170, 0x335, 0xef8c, 0x6590, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0xcb, 0xfe });
        gbc.writeMem(0x6590, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01C5
        gbc.setState(0xb98e, 0xc552, 0xc270, 0x713a, 0x16f6, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0x5fdb, { 0x96 });
        gbc.writeMem(0xb98e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc552, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98e));
        EXPECT(0xfe, gbc.readMem(0xb98f));
        // CB FE 01C6
        gbc.setState(0x8d73, 0x54b3, 0x880, 0xfe1e, 0x20ba, 0x3af9, 0x1, 0x1);
        gbc.writeMem(0x3af9, { 0xdf });
        gbc.writeMem(0x8d73, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x54b3, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d73));
        EXPECT(0xfe, gbc.readMem(0x8d74));
        // CB FE 01C7
        gbc.setState(0x55bd, 0x9208, 0x4880, 0xce0e, 0x7693, 0xe89b, 0x0, 0x1);
        gbc.writeMem(0x55bd, { 0xcb, 0xfe });
        gbc.writeMem(0xe89b, { 0x40 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9208, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xe89b));
        // CB FE 01C8
        gbc.setState(0x7e2, 0x7cae, 0x5be0, 0x4906, 0x97d6, 0x2d9d, 0x1, 0x0);
        gbc.writeMem(0x7e2, { 0xcb, 0xfe });
        gbc.writeMem(0x2d9d, { 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7cae, gbc.sp());
        EXPECT(0x7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01CA
        gbc.setState(0x76c8, 0x79fa, 0x6060, 0x71cb, 0xc5d9, 0x4b86, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0xe8 });
        gbc.writeMem(0x76c8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0x76ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01CB
        gbc.setState(0x9b48, 0x7bac, 0x5cf0, 0x4285, 0x518e, 0xc321, 0x0, 0x0);
        gbc.writeMem(0x9b48, { 0xcb, 0xfe });
        gbc.writeMem(0xc321, { 0xb0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7bac, gbc.sp());
        EXPECT(0x9b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b48));
        EXPECT(0xfe, gbc.readMem(0x9b49));
        EXPECT(0xb0, gbc.readMem(0xc321));
        // CB FE 01CC
        gbc.setState(0xdb44, 0x15ad, 0xa570, 0xd2b2, 0xf1b, 0xa434, 0x1, 0x1);
        gbc.writeMem(0xa434, { 0x9c });
        gbc.writeMem(0xdb44, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x15ad, gbc.sp());
        EXPECT(0xdb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa434));
        EXPECT(0xcb, gbc.readMem(0xdb44));
        EXPECT(0xfe, gbc.readMem(0xdb45));
        // CB FE 01CD
        gbc.setState(0x7649, 0x457b, 0x3420, 0x695b, 0x446f, 0x513e, 0x1, 0x0);
        gbc.writeMem(0x513e, { 0xb5 });
        gbc.writeMem(0x7649, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x764b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01CE
        gbc.setState(0xad62, 0xb864, 0x8690, 0xeaf0, 0x6f30, 0x8a2a, 0x1, 0x1);
        gbc.writeMem(0x8a2a, { 0x97 });
        gbc.writeMem(0xad62, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0xad64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8a2a));
        EXPECT(0xcb, gbc.readMem(0xad62));
        EXPECT(0xfe, gbc.readMem(0xad63));
        // CB FE 01D0
        gbc.setState(0x3d26, 0x464, 0xb590, 0xd932, 0xf147, 0xe338, 0x1, 0x0);
        gbc.writeMem(0x3d26, { 0xcb, 0xfe });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x3d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe338));
        // CB FE 01D1
        gbc.setState(0x758d, 0x9701, 0xf330, 0x5bd, 0xd0f5, 0xde4, 0x0, 0x1);
        gbc.writeMem(0xde4, { 0x97 });
        gbc.writeMem(0x758d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9701, gbc.sp());
        EXPECT(0x758f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01D2
        gbc.setState(0xa2d4, 0x1149, 0xba60, 0xbe60, 0x4253, 0xd8e4, 0x0, 0x0);
        gbc.writeMem(0xa2d4, { 0xcb, 0xfe });
        gbc.writeMem(0xd8e4, { 0xf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0xa2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d4));
        EXPECT(0xfe, gbc.readMem(0xa2d5));
        EXPECT(0x8f, gbc.readMem(0xd8e4));
        // CB FE 01D3
        gbc.setState(0x121d, 0x289a, 0x2180, 0xcd19, 0x593a, 0x16e, 0x1, 0x1);
        gbc.writeMem(0x16e, { 0xe1 });
        gbc.writeMem(0x121d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x289a, gbc.sp());
        EXPECT(0x121f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01D4
        gbc.setState(0x700b, 0x4e1b, 0x5030, 0xdcca, 0xba77, 0xd8da, 0x1, 0x1);
        gbc.writeMem(0x700b, { 0xcb, 0xfe });
        gbc.writeMem(0xd8da, { 0xbe });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4e1b, gbc.sp());
        EXPECT(0x700d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd8da));
        // CB FE 01D5
        gbc.setState(0xd50, 0x61c0, 0x4d60, 0x4bc, 0x37c, 0x8a0e, 0x0, 0x0);
        gbc.writeMem(0xd50, { 0xcb, 0xfe });
        gbc.writeMem(0x8a0e, { 0x2a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8a0e));
        // CB FE 01D6
        gbc.setState(0xe44d, 0x237e, 0xa9b0, 0xa689, 0xed0a, 0x241d, 0x1, 0x1);
        gbc.writeMem(0x241d, { 0x9c });
        gbc.writeMem(0xe44d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0xe44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe44d));
        EXPECT(0xfe, gbc.readMem(0xe44e));
        // CB FE 01D7
        gbc.setState(0xc1ba, 0x9d, 0x28c0, 0xc5b8, 0x5ed0, 0xa137, 0x1, 0x1);
        gbc.writeMem(0xa137, { 0x1e });
        gbc.writeMem(0xc1ba, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9d, gbc.sp());
        EXPECT(0xc1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa137));
        EXPECT(0xcb, gbc.readMem(0xc1ba));
        EXPECT(0xfe, gbc.readMem(0xc1bb));
        // CB FE 01D9
        gbc.setState(0x70bf, 0x8e8e, 0xc6b0, 0x1020, 0x1579, 0xe3eb, 0x1, 0x0);
        gbc.writeMem(0x70bf, { 0xcb, 0xfe });
        gbc.writeMem(0xe3eb, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8e8e, gbc.sp());
        EXPECT(0x70c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe3eb));
        // CB FE 01DA
        gbc.setState(0x21ec, 0xba7f, 0x90e0, 0xc88d, 0xf0bc, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x21ec, { 0xcb, 0xfe });
        gbc.writeMem(0x59b6, { 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0x21ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01DD
        gbc.setState(0x848f, 0xe52d, 0xa4a0, 0x270f, 0x36d6, 0x58c9, 0x0, 0x0);
        gbc.writeMem(0x58c9, { 0x87 });
        gbc.writeMem(0x848f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0x8491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848f));
        EXPECT(0xfe, gbc.readMem(0x8490));
        // CB FE 01DE
        gbc.setState(0x2bc8, 0xbea7, 0xcc0, 0xbf64, 0x7de6, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0x2bc8, { 0xcb, 0xfe });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbea7, gbc.sp());
        EXPECT(0x2bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc82e));
        // CB FE 01DF
        gbc.setState(0x3011, 0x7518, 0xb9b0, 0x7af4, 0xe600, 0x7f11, 0x1, 0x0);
        gbc.writeMem(0x3011, { 0xcb, 0xfe });
        gbc.writeMem(0x7f11, { 0xf3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7518, gbc.sp());
        EXPECT(0x3013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01E2
        gbc.setState(0x2e9a, 0xdc9a, 0x5290, 0x76fd, 0x5570, 0xf04a, 0x1, 0x1);
        gbc.writeMem(0x2e9a, { 0xcb, 0xfe });
        gbc.writeMem(0xf04a, { 0x62 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0x2e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf04a));
        // CB FE 01E6
        gbc.setState(0x56fe, 0xfd3c, 0x2720, 0x6336, 0x16fd, 0x868a, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xfe });
        gbc.writeMem(0x868a, { 0x39 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfd3c, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x868a));
        // CB FE 01E7
        gbc.setState(0x9918, 0x3e07, 0xba80, 0xf2bc, 0xc553, 0x37ed, 0x0, 0x0);
        gbc.writeMem(0x37ed, { 0xaf });
        gbc.writeMem(0x9918, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3e07, gbc.sp());
        EXPECT(0x991a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9918));
        EXPECT(0xfe, gbc.readMem(0x9919));
        // CB FE 01E8
        gbc.setState(0x3d46, 0x3e55, 0x23f0, 0x4fe, 0xa46b, 0xc3e6, 0x1, 0x0);
        gbc.writeMem(0x3d46, { 0xcb, 0xfe });
        gbc.writeMem(0xc3e6, { 0x4e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x3d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc3e6));
        // CB FE 01EA
        gbc.setState(0x7f8e, 0xd8c, 0x5ff0, 0xb745, 0x74, 0xf018, 0x1, 0x1);
        gbc.writeMem(0x7f8e, { 0xcb, 0xfe });
        gbc.writeMem(0xf018, { 0xe2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd8c, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf018));
        // CB FE 01EB
        gbc.setState(0x9e66, 0xa393, 0xddd0, 0xdbb7, 0xaf01, 0x80a8, 0x1, 0x1);
        gbc.writeMem(0x80a8, { 0x81 });
        gbc.writeMem(0x9e66, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa393, gbc.sp());
        EXPECT(0x9e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x80a8));
        EXPECT(0xcb, gbc.readMem(0x9e66));
        EXPECT(0xfe, gbc.readMem(0x9e67));
        // CB FE 01EC
        gbc.setState(0xb59, 0x784, 0x7b40, 0x66c5, 0xedb3, 0xe8de, 0x0, 0x1);
        gbc.writeMem(0xb59, { 0xcb, 0xfe });
        gbc.writeMem(0xe8de, { 0x5a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0xb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe8de));
        // CB FE 01ED
        gbc.setState(0x1431, 0x4d76, 0x46d0, 0x4dec, 0x1772, 0x707f, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0xcb, 0xfe });
        gbc.writeMem(0x707f, { 0xfe });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4d76, gbc.sp());
        EXPECT(0x1433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01EE
        gbc.setState(0x7067, 0x7b2, 0xd050, 0x1d3e, 0x37f4, 0x887a, 0x1, 0x0);
        gbc.writeMem(0x7067, { 0xcb, 0xfe });
        gbc.writeMem(0x887a, { 0xf1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0x7069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x887a));
        // CB FE 01EF
        gbc.setState(0x5a25, 0x141e, 0x5740, 0xeba1, 0x7d35, 0x84f4, 0x1, 0x1);
        gbc.writeMem(0x5a25, { 0xcb, 0xfe });
        gbc.writeMem(0x84f4, { 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x141e, gbc.sp());
        EXPECT(0x5a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x84f4));
        // CB FE 01F1
        gbc.setState(0xb0a4, 0x367d, 0x1860, 0xf133, 0xbcc6, 0xf124, 0x0, 0x1);
        gbc.writeMem(0xb0a4, { 0xcb, 0xfe });
        gbc.writeMem(0xf124, { 0x4c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a4));
        EXPECT(0xfe, gbc.readMem(0xb0a5));
        EXPECT(0xcc, gbc.readMem(0xf124));
        // CB FE 01F2
        gbc.setState(0x6901, 0x5002, 0x74a0, 0xe2dc, 0xf30d, 0x3909, 0x1, 0x0);
        gbc.writeMem(0x3909, { 0xd3 });
        gbc.writeMem(0x6901, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x6903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 01F3
        gbc.setState(0xf82, 0x164e, 0x20e0, 0xc8cd, 0x48aa, 0x8562, 0x0, 0x0);
        gbc.writeMem(0xf82, { 0xcb, 0xfe });
        gbc.writeMem(0x8562, { 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x164e, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8562));
        // CB FE 01F5
        gbc.setState(0xb4ec, 0x73c8, 0x39b0, 0x372d, 0xa101, 0xa075, 0x0, 0x1);
        gbc.writeMem(0xa075, { 0xc0 });
        gbc.writeMem(0xb4ec, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0xb4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa075));
        EXPECT(0xcb, gbc.readMem(0xb4ec));
        EXPECT(0xfe, gbc.readMem(0xb4ed));
        // CB FE 01F6
        gbc.setState(0x69c2, 0x1e8f, 0x3930, 0xff57, 0xbed6, 0x2675, 0x1, 0x0);
        gbc.writeMem(0x2675, { 0xfe });
        gbc.writeMem(0x69c2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1e8f, gbc.sp());
        EXPECT(0x69c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01F7
        gbc.setState(0x799a, 0xab1c, 0xf680, 0x7d1, 0x5d9f, 0xaa49, 0x0, 0x0);
        gbc.writeMem(0x799a, { 0xcb, 0xfe });
        gbc.writeMem(0xaa49, { 0xd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xab1c, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaa49));
        // CB FE 01F8
        gbc.setState(0xa87, 0xa552, 0xd240, 0x6b3f, 0xb6b9, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0xa87, { 0xcb, 0xfe });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0xa89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc82e));
        // CB FE 01F9
        gbc.setState(0x8498, 0xd782, 0xa360, 0xd030, 0xd9ce, 0x63f2, 0x1, 0x1);
        gbc.writeMem(0x63f2, { 0xde });
        gbc.writeMem(0x8498, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd782, gbc.sp());
        EXPECT(0x849a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8498));
        EXPECT(0xfe, gbc.readMem(0x8499));
        // CB FE 01FC
        gbc.setState(0x7fd8, 0x24d, 0xb790, 0xfc8e, 0x5e3f, 0xf215, 0x0, 0x0);
        gbc.writeMem(0x7fd8, { 0xcb, 0xfe });
        gbc.writeMem(0xf215, { 0xa3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x24d, gbc.sp());
        EXPECT(0x7fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xf215));
        // CB FE 01FE
        gbc.setState(0x2c26, 0xf2ce, 0x4cb0, 0xfeac, 0xe41d, 0x782d, 0x0, 0x1);
        gbc.writeMem(0x2c26, { 0xcb, 0xfe });
        gbc.writeMem(0x782d, { 0xa9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf2ce, gbc.sp());
        EXPECT(0x2c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 01FF
        gbc.setState(0x603d, 0xcb79, 0x5f30, 0x9c44, 0x831c, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0xfe });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xfba5));
        // CB FE 0201
        gbc.setState(0x3b75, 0xced, 0x12e0, 0x81ca, 0x5382, 0xe546, 0x0, 0x1);
        gbc.writeMem(0x3b75, { 0xcb, 0xfe });
        gbc.writeMem(0xe546, { 0x16 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0x3b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xe546));
        // CB FE 0202
        gbc.setState(0x35ce, 0xeb14, 0xe080, 0xc49c, 0x800c, 0x7eab, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0xfe });
        gbc.writeMem(0x7eab, { 0xdf });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeb14, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0203
        gbc.setState(0xab9a, 0x4d95, 0x9b10, 0xc63f, 0xd5b3, 0x9730, 0x0, 0x1);
        gbc.writeMem(0x9730, { 0xd4 });
        gbc.writeMem(0xab9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9730));
        EXPECT(0xcb, gbc.readMem(0xab9a));
        EXPECT(0xfe, gbc.readMem(0xab9b));
        // CB FE 0204
        gbc.setState(0x7d2, 0xd5e5, 0x3bb0, 0x8448, 0xfe69, 0xd2ad, 0x1, 0x0);
        gbc.writeMem(0x7d2, { 0xcb, 0xfe });
        gbc.writeMem(0xd2ad, { 0x52 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd5e5, gbc.sp());
        EXPECT(0x7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd2ad));
        // CB FE 0205
        gbc.setState(0x5fe, 0x444e, 0x49b0, 0x2b9b, 0x1d89, 0xf48f, 0x0, 0x1);
        gbc.writeMem(0x5fe, { 0xcb, 0xfe });
        gbc.writeMem(0xf48f, { 0x17 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x444e, gbc.sp());
        EXPECT(0x600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf48f));
        // CB FE 0206
        gbc.setState(0xe931, 0x9446, 0x7660, 0xff62, 0x8a73, 0x3f55, 0x1, 0x0);
        gbc.writeMem(0x3f55, { 0xc5 });
        gbc.writeMem(0xe931, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0xe933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe931));
        EXPECT(0xfe, gbc.readMem(0xe932));
        // CB FE 0207
        gbc.setState(0x3b56, 0x4d68, 0x86d0, 0x714c, 0xbc3e, 0x6ebb, 0x0, 0x1);
        gbc.writeMem(0x3b56, { 0xcb, 0xfe });
        gbc.writeMem(0x6ebb, { 0xce });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0208
        gbc.setState(0xa4f7, 0x3e7f, 0xbab0, 0xa2e7, 0x523a, 0x6001, 0x1, 0x0);
        gbc.writeMem(0x6001, { 0xcd });
        gbc.writeMem(0xa4f7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f7));
        EXPECT(0xfe, gbc.readMem(0xa4f8));
        // CB FE 0209
        gbc.setState(0x2227, 0xc99a, 0xc420, 0x3e28, 0x32b6, 0xf770, 0x1, 0x0);
        gbc.writeMem(0x2227, { 0xcb, 0xfe });
        gbc.writeMem(0xf770, { 0xc8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xf770));
        // CB FE 020A
        gbc.setState(0xa15d, 0xc797, 0xc940, 0xf94a, 0x71b7, 0xb350, 0x0, 0x1);
        gbc.writeMem(0xa15d, { 0xcb, 0xfe });
        gbc.writeMem(0xb350, { 0x74 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0xa15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15d));
        EXPECT(0xfe, gbc.readMem(0xa15e));
        EXPECT(0xf4, gbc.readMem(0xb350));
        // CB FE 020B
        gbc.setState(0x5d27, 0x5da2, 0x6100, 0x7772, 0x1e1, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0x5d27, { 0xcb, 0xfe });
        gbc.writeMem(0x9b19, { 0x9e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5da2, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b19));
        // CB FE 020C
        gbc.setState(0x14e9, 0xc555, 0xce80, 0xa713, 0x25d3, 0x4419, 0x1, 0x1);
        gbc.writeMem(0x14e9, { 0xcb, 0xfe });
        gbc.writeMem(0x4419, { 0xc6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc555, gbc.sp());
        EXPECT(0x14eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 020D
        gbc.setState(0xac89, 0xec14, 0x730, 0xe9d3, 0x9688, 0x3796, 0x0, 0x1);
        gbc.writeMem(0x3796, { 0x8f });
        gbc.writeMem(0xac89, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xec14, gbc.sp());
        EXPECT(0xac8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac89));
        EXPECT(0xfe, gbc.readMem(0xac8a));
        // CB FE 020E
        gbc.setState(0x93e4, 0x92d8, 0x5fc0, 0xf924, 0x536d, 0xb14f, 0x0, 0x1);
        gbc.writeMem(0x93e4, { 0xcb, 0xfe });
        gbc.writeMem(0xb14f, { 0xd6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x92d8, gbc.sp());
        EXPECT(0x93e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e4));
        EXPECT(0xfe, gbc.readMem(0x93e5));
        EXPECT(0xd6, gbc.readMem(0xb14f));
        // CB FE 0210
        gbc.setState(0x6d8d, 0xd614, 0x2e10, 0xe761, 0x7111, 0xbb62, 0x1, 0x0);
        gbc.writeMem(0x6d8d, { 0xcb, 0xfe });
        gbc.writeMem(0xbb62, { 0x2a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd614, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbb62));
        // CB FE 0211
        gbc.setState(0xd7e6, 0x13d5, 0xd740, 0x2c84, 0x356f, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0xb9f9, { 0x9b });
        gbc.writeMem(0xd7e6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x13d5, gbc.sp());
        EXPECT(0xd7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb9f9));
        EXPECT(0xcb, gbc.readMem(0xd7e6));
        EXPECT(0xfe, gbc.readMem(0xd7e7));
        // CB FE 0212
        gbc.setState(0x4997, 0x8532, 0x4630, 0xb50a, 0x7478, 0xeeb1, 0x1, 0x1);
        gbc.writeMem(0x4997, { 0xcb, 0xfe });
        gbc.writeMem(0xeeb1, { 0x43 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8532, gbc.sp());
        EXPECT(0x4999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xeeb1));
        // CB FE 0213
        gbc.setState(0x9fc3, 0xfbca, 0x3330, 0x81d, 0xdec0, 0xacdf, 0x1, 0x0);
        gbc.writeMem(0x9fc3, { 0xcb, 0xfe });
        gbc.writeMem(0xacdf, { 0xc3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfbca, gbc.sp());
        EXPECT(0x9fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc3));
        EXPECT(0xfe, gbc.readMem(0x9fc4));
        EXPECT(0xc3, gbc.readMem(0xacdf));
        // CB FE 0215
        gbc.setState(0x54cf, 0x3bb, 0x7f80, 0x1062, 0xce1, 0xeb47, 0x0, 0x1);
        gbc.writeMem(0x54cf, { 0xcb, 0xfe });
        gbc.writeMem(0xeb47, { 0x12 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xeb47));
        // CB FE 0216
        gbc.setState(0x8344, 0x97a9, 0x3540, 0x6920, 0xe1f2, 0x3aa2, 0x1, 0x0);
        gbc.writeMem(0x3aa2, { 0xec });
        gbc.writeMem(0x8344, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8344));
        EXPECT(0xfe, gbc.readMem(0x8345));
        // CB FE 0217
        gbc.setState(0x8615, 0xd6ad, 0x8f10, 0xcfc0, 0x240a, 0x9804, 0x1, 0x1);
        gbc.writeMem(0x8615, { 0xcb, 0xfe });
        gbc.writeMem(0x9804, { 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x8617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8615));
        EXPECT(0xfe, gbc.readMem(0x8616));
        EXPECT(0xcd, gbc.readMem(0x9804));
        // CB FE 0218
        gbc.setState(0x9841, 0x16b0, 0x640, 0x9aba, 0xa29a, 0x77f1, 0x1, 0x0);
        gbc.writeMem(0x77f1, { 0xd5 });
        gbc.writeMem(0x9841, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0x9843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9841));
        EXPECT(0xfe, gbc.readMem(0x9842));
        // CB FE 0219
        gbc.setState(0x35ce, 0x90a4, 0x5f90, 0xd503, 0x27b1, 0x9e10, 0x0, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0xfe });
        gbc.writeMem(0x9e10, { 0xde });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x90a4, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9e10));
        // CB FE 021C
        gbc.setState(0x12a6, 0x825c, 0xe070, 0xc248, 0x51eb, 0x43c8, 0x0, 0x1);
        gbc.writeMem(0x12a6, { 0xcb, 0xfe });
        gbc.writeMem(0x43c8, { 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 021E
        gbc.setState(0xc693, 0x12f0, 0x6e20, 0x55f3, 0xa313, 0x33ee, 0x1, 0x0);
        gbc.writeMem(0x33ee, { 0x96 });
        gbc.writeMem(0xc693, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x12f0, gbc.sp());
        EXPECT(0xc695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc693));
        EXPECT(0xfe, gbc.readMem(0xc694));
        // CB FE 021F
        gbc.setState(0x80a2, 0x1f05, 0x6470, 0x543d, 0xda64, 0x57bc, 0x1, 0x1);
        gbc.writeMem(0x57bc, { 0xd1 });
        gbc.writeMem(0x80a2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1f05, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a2));
        EXPECT(0xfe, gbc.readMem(0x80a3));
        // CB FE 0220
        gbc.setState(0x1e9c, 0x699f, 0xdbc0, 0x9c38, 0xfdc, 0xa5c9, 0x1, 0x0);
        gbc.writeMem(0x1e9c, { 0xcb, 0xfe });
        gbc.writeMem(0xa5c9, { 0x7c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x699f, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa5c9));
        // CB FE 0221
        gbc.setState(0x4611, 0xe30d, 0x7c40, 0x9707, 0xe8b9, 0xec4c, 0x0, 0x0);
        gbc.writeMem(0x4611, { 0xcb, 0xfe });
        gbc.writeMem(0xec4c, { 0xc7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xec4c));
        // CB FE 0222
        gbc.setState(0xd629, 0x79b6, 0xd8d0, 0xfeab, 0x2ef0, 0xf93b, 0x0, 0x1);
        gbc.writeMem(0xd629, { 0xcb, 0xfe });
        gbc.writeMem(0xf93b, { 0x68 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79b6, gbc.sp());
        EXPECT(0xd62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd629));
        EXPECT(0xfe, gbc.readMem(0xd62a));
        EXPECT(0xe8, gbc.readMem(0xf93b));
        // CB FE 0223
        gbc.setState(0x7049, 0x2c82, 0x2a0, 0x4e47, 0x29f8, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0x7049, { 0xcb, 0xfe });
        gbc.writeMem(0x7f47, { 0x8b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0224
        gbc.setState(0x88d, 0x2a93, 0x5170, 0x78a, 0x38d8, 0xa07c, 0x0, 0x0);
        gbc.writeMem(0x88d, { 0xcb, 0xfe });
        gbc.writeMem(0xa07c, { 0x5a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2a93, gbc.sp());
        EXPECT(0x88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa07c));
        // CB FE 0225
        gbc.setState(0x656d, 0xdc2, 0x40, 0xbd54, 0x367b, 0xc59f, 0x1, 0x0);
        gbc.writeMem(0x656d, { 0xcb, 0xfe });
        gbc.writeMem(0xc59f, { 0xce });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdc2, gbc.sp());
        EXPECT(0x656f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc59f));
        // CB FE 0227
        gbc.setState(0xb7ef, 0xd74d, 0x7140, 0x5ca9, 0xd46a, 0x3851, 0x1, 0x0);
        gbc.writeMem(0x3851, { 0xef });
        gbc.writeMem(0xb7ef, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ef));
        EXPECT(0xfe, gbc.readMem(0xb7f0));
        // CB FE 0228
        gbc.setState(0xaaba, 0x7a39, 0xedb0, 0x9094, 0xfd84, 0xe3d2, 0x1, 0x1);
        gbc.writeMem(0xaaba, { 0xcb, 0xfe });
        gbc.writeMem(0xe3d2, { 0x3a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0xaabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaba));
        EXPECT(0xfe, gbc.readMem(0xaabb));
        EXPECT(0xba, gbc.readMem(0xe3d2));
        // CB FE 0229
        gbc.setState(0x7a80, 0xf062, 0x31a0, 0xa5a2, 0xb398, 0xc94e, 0x0, 0x1);
        gbc.writeMem(0x7a80, { 0xcb, 0xfe });
        gbc.writeMem(0xc94e, { 0x5b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0x7a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc94e));
        // CB FE 022A
        gbc.setState(0x37c6, 0xc906, 0x67d0, 0x7dad, 0xfc45, 0xa76b, 0x0, 0x1);
        gbc.writeMem(0x37c6, { 0xcb, 0xfe });
        gbc.writeMem(0xa76b, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc906, gbc.sp());
        EXPECT(0x37c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa76b));
        // CB FE 022C
        gbc.setState(0xd739, 0xdc17, 0x8ac0, 0xfa21, 0x8a26, 0x84cc, 0x0, 0x1);
        gbc.writeMem(0x84cc, { 0xc5 });
        gbc.writeMem(0xd739, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x84cc));
        EXPECT(0xcb, gbc.readMem(0xd739));
        EXPECT(0xfe, gbc.readMem(0xd73a));
        // CB FE 022F
        gbc.setState(0xd23a, 0x5dc8, 0xa680, 0x7a62, 0x405d, 0xc1ac, 0x1, 0x1);
        gbc.writeMem(0xc1ac, { 0x7d });
        gbc.writeMem(0xd23a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5dc8, gbc.sp());
        EXPECT(0xd23c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xc1ac));
        EXPECT(0xcb, gbc.readMem(0xd23a));
        EXPECT(0xfe, gbc.readMem(0xd23b));
        // CB FE 0230
        gbc.setState(0xee9a, 0xb7ab, 0xf420, 0x779c, 0xe1d5, 0xa2a6, 0x1, 0x1);
        gbc.writeMem(0xa2a6, { 0x9e });
        gbc.writeMem(0xee9a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa2a6));
        EXPECT(0xcb, gbc.readMem(0xee9a));
        EXPECT(0xfe, gbc.readMem(0xee9b));
        // CB FE 0232
        gbc.setState(0xa20a, 0xbfda, 0x40c0, 0x2c4d, 0xd7c9, 0x57b4, 0x0, 0x0);
        gbc.writeMem(0x57b4, { 0xe9 });
        gbc.writeMem(0xa20a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbfda, gbc.sp());
        EXPECT(0xa20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20a));
        EXPECT(0xfe, gbc.readMem(0xa20b));
        // CB FE 0233
        gbc.setState(0xfe6, 0xdc74, 0xc6c0, 0xefaa, 0x3292, 0x45a1, 0x0, 0x0);
        gbc.writeMem(0xfe6, { 0xcb, 0xfe });
        gbc.writeMem(0x45a1, { 0xd7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0xfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0235
        gbc.setState(0xa95c, 0x7180, 0x390, 0xc04, 0xdac6, 0xac73, 0x1, 0x0);
        gbc.writeMem(0xa95c, { 0xcb, 0xfe });
        gbc.writeMem(0xac73, { 0x3e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7180, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95c));
        EXPECT(0xfe, gbc.readMem(0xa95d));
        EXPECT(0xbe, gbc.readMem(0xac73));
        // CB FE 0236
        gbc.setState(0xe086, 0x201, 0xf210, 0xa051, 0xf982, 0x9a05, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0xd9 });
        gbc.writeMem(0xe086, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x201, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a05));
        EXPECT(0xcb, gbc.readMem(0xe086));
        EXPECT(0xfe, gbc.readMem(0xe087));
        // CB FE 0239
        gbc.setState(0x603d, 0x41a0, 0x38c0, 0x55a9, 0xbf64, 0x8a4a, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0xfe });
        gbc.writeMem(0x8a4a, { 0x6b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x41a0, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x8a4a));
        // CB FE 023A
        gbc.setState(0x7d3d, 0xe724, 0x6090, 0x7694, 0x4e7, 0x27dc, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xb4 });
        gbc.writeMem(0x7d3d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0x7d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 023B
        gbc.setState(0x9a45, 0xad2e, 0x3930, 0xc4a3, 0x6e8b, 0x70d8, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0xe3 });
        gbc.writeMem(0x9a45, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xad2e, gbc.sp());
        EXPECT(0x9a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a45));
        EXPECT(0xfe, gbc.readMem(0x9a46));
        // CB FE 023C
        gbc.setState(0x6fef, 0x8810, 0x6070, 0xe160, 0xde9, 0x5b94, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0xe1 });
        gbc.writeMem(0x6fef, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8810, gbc.sp());
        EXPECT(0x6ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 023D
        gbc.setState(0xd2a4, 0x1b5b, 0xfb0, 0xc6f6, 0x53cb, 0x5481, 0x1, 0x0);
        gbc.writeMem(0x5481, { 0xe7 });
        gbc.writeMem(0xd2a4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0xd2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a4));
        EXPECT(0xfe, gbc.readMem(0xd2a5));
        // CB FE 0240
        gbc.setState(0x61c, 0xdbf, 0xcef0, 0x3c63, 0x7c0e, 0xe05d, 0x1, 0x0);
        gbc.writeMem(0x61c, { 0xcb, 0xfe });
        gbc.writeMem(0xe05d, { 0xff });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdbf, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe05d));
        // CB FE 0241
        gbc.setState(0x8843, 0x2f1d, 0x84e0, 0x802c, 0xe3d8, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0x39d4, { 0xca });
        gbc.writeMem(0x8843, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8843));
        EXPECT(0xfe, gbc.readMem(0x8844));
        // CB FE 0242
        gbc.setState(0x49e6, 0x18b2, 0xdfa0, 0xfe40, 0x2f21, 0xf9ff, 0x0, 0x1);
        gbc.writeMem(0x49e6, { 0xcb, 0xfe });
        gbc.writeMem(0xf9ff, { 0x6a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xf9ff));
        // CB FE 0244
        gbc.setState(0xc9f0, 0xc5cc, 0x41b0, 0xd83, 0x8097, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0xbdde, { 0xc9 });
        gbc.writeMem(0xc9f0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc5cc, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbdde));
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0xfe, gbc.readMem(0xc9f1));
        // CB FE 0245
        gbc.setState(0x6ca1, 0x2599, 0x6de0, 0x90c0, 0x4ff4, 0xbfdc, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0xfe });
        gbc.writeMem(0xbfdc, { 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2599, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbfdc));
        // CB FE 0247
        gbc.setState(0x2fab, 0x1531, 0xa320, 0x34d0, 0x7f80, 0x91ed, 0x1, 0x1);
        gbc.writeMem(0x2fab, { 0xcb, 0xfe });
        gbc.writeMem(0x91ed, { 0x9e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1531, gbc.sp());
        EXPECT(0x2fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x91ed));
        // CB FE 0248
        gbc.setState(0xeaaa, 0x73bc, 0x6a60, 0x967e, 0xf0cb, 0xe08b, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xd6 });
        gbc.writeMem(0xeaaa, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x73bc, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xe08b));
        EXPECT(0xcb, gbc.readMem(0xeaaa));
        EXPECT(0xfe, gbc.readMem(0xeaab));
        // CB FE 0249
        gbc.setState(0xbcdd, 0xaf9b, 0x6510, 0x2712, 0x1d76, 0x86c3, 0x0, 0x1);
        gbc.writeMem(0x86c3, { 0xbd });
        gbc.writeMem(0xbcdd, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0xbcdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x86c3));
        EXPECT(0xcb, gbc.readMem(0xbcdd));
        EXPECT(0xfe, gbc.readMem(0xbcde));
        // CB FE 024A
        gbc.setState(0xb222, 0x3200, 0x6bb0, 0x74dd, 0x97b6, 0x931b, 0x1, 0x1);
        gbc.writeMem(0x931b, { 0x62 });
        gbc.writeMem(0xb222, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x931b));
        EXPECT(0xcb, gbc.readMem(0xb222));
        EXPECT(0xfe, gbc.readMem(0xb223));
        // CB FE 024F
        gbc.setState(0x8b1e, 0x9ef1, 0x10, 0xd5b4, 0x9f7, 0x4f44, 0x1, 0x0);
        gbc.writeMem(0x4f44, { 0xc5 });
        gbc.writeMem(0x8b1e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9ef1, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1e));
        EXPECT(0xfe, gbc.readMem(0x8b1f));
        // CB FE 0250
        gbc.setState(0x8043, 0x3045, 0x4a40, 0x882c, 0x30d0, 0x99c7, 0x1, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xfe });
        gbc.writeMem(0x99c7, { 0x64 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3045, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8043));
        EXPECT(0xfe, gbc.readMem(0x8044));
        EXPECT(0xe4, gbc.readMem(0x99c7));
        // CB FE 0251
        gbc.setState(0x8364, 0x5e69, 0x5da0, 0x8edf, 0x8c05, 0xf112, 0x1, 0x0);
        gbc.writeMem(0x8364, { 0xcb, 0xfe });
        gbc.writeMem(0xf112, { 0x1e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5e69, gbc.sp());
        EXPECT(0x8366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8364));
        EXPECT(0xfe, gbc.readMem(0x8365));
        EXPECT(0x9e, gbc.readMem(0xf112));
        // CB FE 0252
        gbc.setState(0xaf0f, 0x5a3c, 0xc840, 0x118e, 0x44bd, 0x4455, 0x0, 0x0);
        gbc.writeMem(0x4455, { 0xed });
        gbc.writeMem(0xaf0f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5a3c, gbc.sp());
        EXPECT(0xaf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0f));
        EXPECT(0xfe, gbc.readMem(0xaf10));
        // CB FE 0253
        gbc.setState(0x9a48, 0x1927, 0x500, 0x439f, 0xf47e, 0xa81e, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0xfe });
        gbc.writeMem(0xa81e, { 0x73 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1927, gbc.sp());
        EXPECT(0x9a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a48));
        EXPECT(0xfe, gbc.readMem(0x9a49));
        EXPECT(0xf3, gbc.readMem(0xa81e));
        // CB FE 0254
        gbc.setState(0x8857, 0xf287, 0x29f0, 0x1b01, 0xeaf8, 0xa2dc, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0xfe });
        gbc.writeMem(0xa2dc, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8857));
        EXPECT(0xfe, gbc.readMem(0x8858));
        EXPECT(0xb7, gbc.readMem(0xa2dc));
        // CB FE 0255
        gbc.setState(0x6f86, 0x18a8, 0x8b0, 0x587, 0xb942, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0xc6 });
        gbc.writeMem(0x6f86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0x6f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0256
        gbc.setState(0xdd36, 0x62da, 0x7560, 0x9d38, 0x163a, 0x6591, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xdc });
        gbc.writeMem(0xdd36, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0xdd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd36));
        EXPECT(0xfe, gbc.readMem(0xdd37));
        // CB FE 0257
        gbc.setState(0x7a9d, 0x8f05, 0x7430, 0xc47, 0xba6e, 0x1d30, 0x0, 0x0);
        gbc.writeMem(0x1d30, { 0xc5 });
        gbc.writeMem(0x7a9d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0x7a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 025C
        gbc.setState(0x64fb, 0xce18, 0x8cd0, 0xf577, 0x9e3a, 0xc2c9, 0x0, 0x0);
        gbc.writeMem(0x64fb, { 0xcb, 0xfe });
        gbc.writeMem(0xc2c9, { 0xf3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0x64fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xc2c9));
        // CB FE 025E
        gbc.setState(0xa356, 0xf3ec, 0x6a90, 0xc2d4, 0xdf73, 0x8ecd, 0x1, 0x1);
        gbc.writeMem(0x8ecd, { 0x1b });
        gbc.writeMem(0xa356, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8ecd));
        EXPECT(0xcb, gbc.readMem(0xa356));
        EXPECT(0xfe, gbc.readMem(0xa357));
        // CB FE 025F
        gbc.setState(0xb61, 0xdaa9, 0xafa0, 0x1189, 0xdc7d, 0x824e, 0x1, 0x1);
        gbc.writeMem(0xb61, { 0xcb, 0xfe });
        gbc.writeMem(0x824e, { 0x8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0xb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x824e));
        // CB FE 0260
        gbc.setState(0x3043, 0xc69c, 0xa560, 0x3b2a, 0xe9e3, 0xef49, 0x0, 0x0);
        gbc.writeMem(0x3043, { 0xcb, 0xfe });
        gbc.writeMem(0xef49, { 0x12 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc69c, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xef49));
        // CB FE 0261
        gbc.setState(0x126c, 0x748a, 0x4b10, 0xf64d, 0xcaf6, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0x126c, { 0xcb, 0xfe });
        gbc.writeMem(0x9fff, { 0x22 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x126e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9fff));
        // CB FE 0264
        gbc.setState(0x2a79, 0xec17, 0xca90, 0xaf9a, 0xd391, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x2a79, { 0xcb, 0xfe });
        gbc.writeMem(0x4269, { 0xf7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xec17, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0265
        gbc.setState(0xdbf, 0x6d36, 0x6590, 0x963a, 0x371a, 0xdab0, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0xcb, 0xfe });
        gbc.writeMem(0xdab0, { 0xf0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d36, gbc.sp());
        EXPECT(0xdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xdab0));
        // CB FE 0267
        gbc.setState(0xae27, 0xee0a, 0x42e0, 0x34f3, 0x88b0, 0x5ce6, 0x0, 0x1);
        gbc.writeMem(0x5ce6, { 0x8a });
        gbc.writeMem(0xae27, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee0a, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae27));
        EXPECT(0xfe, gbc.readMem(0xae28));
        // CB FE 0268
        gbc.setState(0x9172, 0x161a, 0x4890, 0x5894, 0xef4e, 0xe499, 0x1, 0x1);
        gbc.writeMem(0x9172, { 0xcb, 0xfe });
        gbc.writeMem(0xe499, { 0x7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x9174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9172));
        EXPECT(0xfe, gbc.readMem(0x9173));
        EXPECT(0x87, gbc.readMem(0xe499));
        // CB FE 0269
        gbc.setState(0x7c3c, 0xeede, 0xd830, 0xada, 0x3d6e, 0xe678, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0xcb, 0xfe });
        gbc.writeMem(0xe678, { 0x84 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeede, gbc.sp());
        EXPECT(0x7c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe678));
        // CB FE 026B
        gbc.setState(0xac28, 0xe0f7, 0xbbb0, 0xc6b6, 0x1d9b, 0x83c2, 0x1, 0x1);
        gbc.writeMem(0x83c2, { 0xe1 });
        gbc.writeMem(0xac28, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x83c2));
        EXPECT(0xcb, gbc.readMem(0xac28));
        EXPECT(0xfe, gbc.readMem(0xac29));
        // CB FE 026C
        gbc.setState(0xb2f2, 0x71cc, 0x61b0, 0x1bba, 0x31e2, 0x8abd, 0x0, 0x0);
        gbc.writeMem(0x8abd, { 0x99 });
        gbc.writeMem(0xb2f2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x71cc, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8abd));
        EXPECT(0xcb, gbc.readMem(0xb2f2));
        EXPECT(0xfe, gbc.readMem(0xb2f3));
        // CB FE 026D
        gbc.setState(0x48ae, 0x2e9e, 0x1df0, 0x22f5, 0x4aba, 0xe8c3, 0x1, 0x0);
        gbc.writeMem(0x48ae, { 0xcb, 0xfe });
        gbc.writeMem(0xe8c3, { 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2e9e, gbc.sp());
        EXPECT(0x48b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe8c3));
        // CB FE 026E
        gbc.setState(0x356, 0xd97d, 0x4a20, 0xd6b, 0xfc78, 0x268f, 0x0, 0x1);
        gbc.writeMem(0x356, { 0xcb, 0xfe });
        gbc.writeMem(0x268f, { 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 026F
        gbc.setState(0x295, 0x10fa, 0x86e0, 0xe049, 0xbd75, 0x7c99, 0x1, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0xfe });
        gbc.writeMem(0x7c99, { 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0x297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0270
        gbc.setState(0x66e2, 0x975c, 0x9a50, 0x389e, 0x4d0c, 0x3ffb, 0x1, 0x0);
        gbc.writeMem(0x3ffb, { 0xc7 });
        gbc.writeMem(0x66e2, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x975c, gbc.sp());
        EXPECT(0x66e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0272
        gbc.setState(0x61b0, 0xe109, 0x8be0, 0x9b23, 0xa2f9, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x61b0, { 0xcb, 0xfe });
        gbc.writeMem(0x93d5, { 0xa5 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x93d5));
        // CB FE 0273
        gbc.setState(0x17c6, 0xe5b6, 0x46f0, 0x5bf1, 0x5298, 0xc901, 0x0, 0x0);
        gbc.writeMem(0x17c6, { 0xcb, 0xfe });
        gbc.writeMem(0xc901, { 0x2f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe5b6, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc901));
        // CB FE 0274
        gbc.setState(0xa012, 0x26d0, 0xc080, 0x23bc, 0x9992, 0xe3cc, 0x1, 0x0);
        gbc.writeMem(0xa012, { 0xcb, 0xfe });
        gbc.writeMem(0xe3cc, { 0xcc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x26d0, gbc.sp());
        EXPECT(0xa014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa012));
        EXPECT(0xfe, gbc.readMem(0xa013));
        EXPECT(0xcc, gbc.readMem(0xe3cc));
        // CB FE 0275
        gbc.setState(0x5f4c, 0x974b, 0x41b0, 0xb3c4, 0x9dc0, 0xbda6, 0x1, 0x1);
        gbc.writeMem(0x5f4c, { 0xcb, 0xfe });
        gbc.writeMem(0xbda6, { 0x24 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x974b, gbc.sp());
        EXPECT(0x5f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbda6));
        // CB FE 0276
        gbc.setState(0x5adf, 0xb13f, 0x8f0, 0x7049, 0x291, 0x9e16, 0x1, 0x1);
        gbc.writeMem(0x5adf, { 0xcb, 0xfe });
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x9e16));
        // CB FE 0278
        gbc.setState(0x10a2, 0xc33b, 0xfe80, 0x21d7, 0x7950, 0xaaf7, 0x0, 0x0);
        gbc.writeMem(0x10a2, { 0xcb, 0xfe });
        gbc.writeMem(0xaaf7, { 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xaaf7));
        // CB FE 027A
        gbc.setState(0x8772, 0x694c, 0x67f0, 0x9591, 0x15e0, 0x6765, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0x98 });
        gbc.writeMem(0x8772, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x8774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8772));
        EXPECT(0xfe, gbc.readMem(0x8773));
        // CB FE 027B
        gbc.setState(0x6ab5, 0x4362, 0x5a90, 0xbb77, 0x56dc, 0x1a7c, 0x1, 0x0);
        gbc.writeMem(0x1a7c, { 0xc2 });
        gbc.writeMem(0x6ab5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 027C
        gbc.setState(0x28a2, 0xa57a, 0x35f0, 0xd405, 0xa323, 0xbe34, 0x0, 0x0);
        gbc.writeMem(0x28a2, { 0xcb, 0xfe });
        gbc.writeMem(0xbe34, { 0xbe });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0x28a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xbe34));
        // CB FE 027D
        gbc.setState(0x18ca, 0x946e, 0x4c20, 0x9db8, 0xd90b, 0x32e7, 0x0, 0x0);
        gbc.writeMem(0x18ca, { 0xcb, 0xfe });
        gbc.writeMem(0x32e7, { 0x92 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x946e, gbc.sp());
        EXPECT(0x18cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 027E
        gbc.setState(0xbde4, 0xf5e2, 0xd8b0, 0x3f70, 0x7e8e, 0x2be1, 0x0, 0x0);
        gbc.writeMem(0x2be1, { 0xf6 });
        gbc.writeMem(0xbde4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf5e2, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde4));
        EXPECT(0xfe, gbc.readMem(0xbde5));
        // CB FE 027F
        gbc.setState(0x35a0, 0x497c, 0x860, 0x260f, 0xa51, 0xcbc, 0x1, 0x1);
        gbc.writeMem(0xcbc, { 0xaa });
        gbc.writeMem(0x35a0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0x35a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0281
        gbc.setState(0x9cd6, 0xc601, 0xd3f0, 0x9545, 0x4042, 0xb63f, 0x1, 0x1);
        gbc.writeMem(0x9cd6, { 0xcb, 0xfe });
        gbc.writeMem(0xb63f, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc601, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd6));
        EXPECT(0xfe, gbc.readMem(0x9cd7));
        EXPECT(0xaf, gbc.readMem(0xb63f));
        // CB FE 0282
        gbc.setState(0x9ee0, 0x60ca, 0x6f70, 0xf747, 0xca02, 0xa025, 0x1, 0x1);
        gbc.writeMem(0x9ee0, { 0xcb, 0xfe });
        gbc.writeMem(0xa025, { 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x60ca, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee0));
        EXPECT(0xfe, gbc.readMem(0x9ee1));
        EXPECT(0xad, gbc.readMem(0xa025));
        // CB FE 0284
        gbc.setState(0x62f2, 0x74ee, 0x4cf0, 0xd0dc, 0x45cc, 0xa2e2, 0x1, 0x0);
        gbc.writeMem(0x62f2, { 0xcb, 0xfe });
        gbc.writeMem(0xa2e2, { 0x67 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa2e2));
        // CB FE 0285
        gbc.setState(0xc48d, 0x4c4a, 0x9700, 0xb25b, 0x18bb, 0xa25, 0x1, 0x1);
        gbc.writeMem(0xa25, { 0xf4 });
        gbc.writeMem(0xc48d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c4a, gbc.sp());
        EXPECT(0xc48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48d));
        EXPECT(0xfe, gbc.readMem(0xc48e));
        // CB FE 0286
        gbc.setState(0x9613, 0xfbb4, 0x6a70, 0x569b, 0xa490, 0x2a9a, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0x84 });
        gbc.writeMem(0x9613, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0x9615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9613));
        EXPECT(0xfe, gbc.readMem(0x9614));
        // CB FE 0288
        gbc.setState(0x91c2, 0x3b3b, 0xc8f0, 0xa81b, 0xb786, 0xd226, 0x1, 0x1);
        gbc.writeMem(0x91c2, { 0xcb, 0xfe });
        gbc.writeMem(0xd226, { 0x49 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3b3b, gbc.sp());
        EXPECT(0x91c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c2));
        EXPECT(0xfe, gbc.readMem(0x91c3));
        EXPECT(0xc9, gbc.readMem(0xd226));
        // CB FE 0289
        gbc.setState(0x3208, 0x8bbe, 0xfe70, 0xe2a2, 0x38bf, 0xc8f8, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0xcb, 0xfe });
        gbc.writeMem(0xc8f8, { 0x52 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8bbe, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc8f8));
        // CB FE 028A
        gbc.setState(0x2617, 0xe55a, 0x6aa0, 0x2a20, 0x7b9f, 0xaf7e, 0x0, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0xfe });
        gbc.writeMem(0xaf7e, { 0x25 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe55a, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xaf7e));
        // CB FE 028D
        gbc.setState(0xc287, 0x4c4f, 0xfea0, 0xe34c, 0xbf5b, 0xcc09, 0x1, 0x1);
        gbc.writeMem(0xc287, { 0xcb, 0xfe });
        gbc.writeMem(0xcc09, { 0x1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4c4f, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc287));
        EXPECT(0xfe, gbc.readMem(0xc288));
        EXPECT(0x81, gbc.readMem(0xcc09));
        // CB FE 028E
        gbc.setState(0x460f, 0xa601, 0xd0c0, 0xc509, 0x3d02, 0xc246, 0x1, 0x1);
        gbc.writeMem(0x460f, { 0xcb, 0xfe });
        gbc.writeMem(0xc246, { 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc246));
        // CB FE 0290
        gbc.setState(0x963f, 0xcc84, 0x76b0, 0xe84, 0x6fc2, 0xe8e8, 0x1, 0x1);
        gbc.writeMem(0x963f, { 0xcb, 0xfe });
        gbc.writeMem(0xe8e8, { 0x79 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcc84, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963f));
        EXPECT(0xfe, gbc.readMem(0x9640));
        EXPECT(0xf9, gbc.readMem(0xe8e8));
        // CB FE 0291
        gbc.setState(0xc8d7, 0xfe1e, 0x9680, 0x3a1e, 0x27ef, 0x98c0, 0x1, 0x0);
        gbc.writeMem(0x98c0, { 0x47 });
        gbc.writeMem(0xc8d7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0xc8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x98c0));
        EXPECT(0xcb, gbc.readMem(0xc8d7));
        EXPECT(0xfe, gbc.readMem(0xc8d8));
        // CB FE 0293
        gbc.setState(0x530c, 0x6121, 0xcc70, 0xfc38, 0xcda4, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x530c, { 0xcb, 0xfe });
        gbc.writeMem(0x942e, { 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6121, gbc.sp());
        EXPECT(0x530e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x942e));
        // CB FE 0294
        gbc.setState(0x469a, 0xd1f6, 0x8060, 0x396a, 0xe8cb, 0xf8f5, 0x0, 0x0);
        gbc.writeMem(0x469a, { 0xcb, 0xfe });
        gbc.writeMem(0xf8f5, { 0x97 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd1f6, gbc.sp());
        EXPECT(0x469c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf8f5));
        // CB FE 0295
        gbc.setState(0xd293, 0x94b8, 0xc570, 0x5e85, 0x2904, 0x9d73, 0x1, 0x1);
        gbc.writeMem(0x9d73, { 0x2f });
        gbc.writeMem(0xd293, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x9d73));
        EXPECT(0xcb, gbc.readMem(0xd293));
        EXPECT(0xfe, gbc.readMem(0xd294));
        // CB FE 0296
        gbc.setState(0xca9a, 0x3446, 0x10c0, 0x7e26, 0xa125, 0xe6e4, 0x1, 0x0);
        gbc.writeMem(0xca9a, { 0xcb, 0xfe });
        gbc.writeMem(0xe6e4, { 0x15 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3446, gbc.sp());
        EXPECT(0xca9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9a));
        EXPECT(0xfe, gbc.readMem(0xca9b));
        EXPECT(0x95, gbc.readMem(0xe6e4));
        // CB FE 0299
        gbc.setState(0x2535, 0xa363, 0x9e40, 0x1bf8, 0xcd12, 0xc410, 0x0, 0x0);
        gbc.writeMem(0x2535, { 0xcb, 0xfe });
        gbc.writeMem(0xc410, { 0xf0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0x2537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc410));
        // CB FE 029A
        gbc.setState(0xb12c, 0xc1a2, 0xe670, 0x2615, 0x30af, 0xc469, 0x0, 0x1);
        gbc.writeMem(0xb12c, { 0xcb, 0xfe });
        gbc.writeMem(0xc469, { 0xfa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0xb12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12c));
        EXPECT(0xfe, gbc.readMem(0xb12d));
        EXPECT(0xfa, gbc.readMem(0xc469));
        // CB FE 029B
        gbc.setState(0x8394, 0xb149, 0x7930, 0x2495, 0x9ad9, 0x91ec, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xcb, 0xfe });
        gbc.writeMem(0x91ec, { 0x77 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb149, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8394));
        EXPECT(0xfe, gbc.readMem(0x8395));
        EXPECT(0xf7, gbc.readMem(0x91ec));
        // CB FE 029C
        gbc.setState(0xe988, 0x5ce4, 0x42d0, 0x5667, 0x878f, 0xd5f3, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xf });
        gbc.writeMem(0xe988, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5ce4, gbc.sp());
        EXPECT(0xe98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd5f3));
        EXPECT(0xcb, gbc.readMem(0xe988));
        EXPECT(0xfe, gbc.readMem(0xe989));
        // CB FE 029E
        gbc.setState(0x6822, 0x7306, 0x4bc0, 0x20eb, 0xf124, 0x6b94, 0x0, 0x1);
        gbc.writeMem(0x6822, { 0xcb, 0xfe });
        gbc.writeMem(0x6b94, { 0xc0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 029F
        gbc.setState(0x6e99, 0xf0b0, 0xe470, 0x67ad, 0x5072, 0x6c25, 0x0, 0x0);
        gbc.writeMem(0x6c25, { 0xe3 });
        gbc.writeMem(0x6e99, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf0b0, gbc.sp());
        EXPECT(0x6e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02A0
        gbc.setState(0x1a8f, 0xec87, 0x8450, 0x7199, 0xaa81, 0x7572, 0x1, 0x0);
        gbc.writeMem(0x1a8f, { 0xcb, 0xfe });
        gbc.writeMem(0x7572, { 0x96 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xec87, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02A1
        gbc.setState(0x9e56, 0x1978, 0xe960, 0x353a, 0x194b, 0xf346, 0x1, 0x1);
        gbc.writeMem(0x9e56, { 0xcb, 0xfe });
        gbc.writeMem(0xf346, { 0x11 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x9e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e56));
        EXPECT(0xfe, gbc.readMem(0x9e57));
        EXPECT(0x91, gbc.readMem(0xf346));
        // CB FE 02A2
        gbc.setState(0x78e1, 0xcc02, 0x8520, 0x908d, 0xcd87, 0x8eed, 0x0, 0x0);
        gbc.writeMem(0x78e1, { 0xcb, 0xfe });
        gbc.writeMem(0x8eed, { 0x38 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcc02, gbc.sp());
        EXPECT(0x78e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8eed));
        // CB FE 02A4
        gbc.setState(0x57ae, 0xd869, 0xc510, 0xba15, 0x25b4, 0x1bda, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xac });
        gbc.writeMem(0x57ae, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02A5
        gbc.setState(0x3d5c, 0xe69a, 0x38a0, 0xfce0, 0xf3cf, 0x6f70, 0x0, 0x0);
        gbc.writeMem(0x3d5c, { 0xcb, 0xfe });
        gbc.writeMem(0x6f70, { 0xc2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe69a, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02A6
        gbc.setState(0x3bad, 0x2069, 0xe9b0, 0xa8dc, 0x99cb, 0x5ea5, 0x1, 0x0);
        gbc.writeMem(0x3bad, { 0xcb, 0xfe });
        gbc.writeMem(0x5ea5, { 0xde });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2069, gbc.sp());
        EXPECT(0x3baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02A7
        gbc.setState(0x4e36, 0x6326, 0x8cc0, 0xf2ea, 0x6d71, 0x93f4, 0x0, 0x0);
        gbc.writeMem(0x4e36, { 0xcb, 0xfe });
        gbc.writeMem(0x93f4, { 0xe7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6326, gbc.sp());
        EXPECT(0x4e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x93f4));
        // CB FE 02A8
        gbc.setState(0x201e, 0x75bf, 0x9810, 0xc5bb, 0x91c3, 0x8fc3, 0x1, 0x0);
        gbc.writeMem(0x201e, { 0xcb, 0xfe });
        gbc.writeMem(0x8fc3, { 0xda });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x75bf, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8fc3));
        // CB FE 02AA
        gbc.setState(0x2619, 0xe6ae, 0xf0c0, 0x6bd7, 0xc906, 0xb041, 0x1, 0x1);
        gbc.writeMem(0x2619, { 0xcb, 0xfe });
        gbc.writeMem(0xb041, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0x261b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb041));
        // CB FE 02AC
        gbc.setState(0x753, 0x2e08, 0x920, 0xc72, 0xcb44, 0x3079, 0x1, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0xfe });
        gbc.writeMem(0x3079, { 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02AE
        gbc.setState(0x87b4, 0xc571, 0x670, 0x485c, 0x8c86, 0xc134, 0x1, 0x0);
        gbc.writeMem(0x87b4, { 0xcb, 0xfe });
        gbc.writeMem(0xc134, { 0x7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0x87b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b4));
        EXPECT(0xfe, gbc.readMem(0x87b5));
        EXPECT(0x87, gbc.readMem(0xc134));
        // CB FE 02AF
        gbc.setState(0x371f, 0xed38, 0x50b0, 0x9185, 0xc74, 0xf570, 0x1, 0x1);
        gbc.writeMem(0x371f, { 0xcb, 0xfe });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf570));
        // CB FE 02B0
        gbc.setState(0x76cb, 0xcca8, 0xf320, 0xed3c, 0x99bf, 0x1a6e, 0x0, 0x1);
        gbc.writeMem(0x1a6e, { 0xc1 });
        gbc.writeMem(0x76cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0x76cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02B2
        gbc.setState(0x90d3, 0x2a3f, 0x5090, 0x22cd, 0x341f, 0x8807, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xdb });
        gbc.writeMem(0x90d3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2a3f, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8807));
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0xfe, gbc.readMem(0x90d4));
        // CB FE 02B3
        gbc.setState(0xa4df, 0xf76f, 0xb200, 0x40f1, 0x2663, 0xccfd, 0x1, 0x1);
        gbc.writeMem(0xa4df, { 0xcb, 0xfe });
        gbc.writeMem(0xccfd, { 0xc6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf76f, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4df));
        EXPECT(0xfe, gbc.readMem(0xa4e0));
        EXPECT(0xc6, gbc.readMem(0xccfd));
        // CB FE 02B5
        gbc.setState(0x9f86, 0x42a7, 0xe560, 0xdd46, 0xf7f3, 0x3c3d, 0x1, 0x0);
        gbc.writeMem(0x3c3d, { 0xa7 });
        gbc.writeMem(0x9f86, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x42a7, gbc.sp());
        EXPECT(0x9f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f86));
        EXPECT(0xfe, gbc.readMem(0x9f87));
        // CB FE 02B6
        gbc.setState(0xdde5, 0xe877, 0xb90, 0xa2cf, 0x3aec, 0xfaf3, 0x0, 0x0);
        gbc.writeMem(0xdde5, { 0xcb, 0xfe });
        gbc.writeMem(0xfaf3, { 0x87 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe877, gbc.sp());
        EXPECT(0xdde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde5));
        EXPECT(0xfe, gbc.readMem(0xdde6));
        EXPECT(0x87, gbc.readMem(0xfaf3));
        // CB FE 02B8
        gbc.setState(0x892c, 0x2963, 0x9190, 0x8c17, 0x80d9, 0x3996, 0x1, 0x0);
        gbc.writeMem(0x3996, { 0x84 });
        gbc.writeMem(0x892c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892c));
        EXPECT(0xfe, gbc.readMem(0x892d));
        // CB FE 02BB
        gbc.setState(0x50f4, 0xdf05, 0x8ea0, 0xc7c6, 0x6d15, 0xb2c4, 0x0, 0x1);
        gbc.writeMem(0x50f4, { 0xcb, 0xfe });
        gbc.writeMem(0xb2c4, { 0xd6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdf05, gbc.sp());
        EXPECT(0x50f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb2c4));
        // CB FE 02BC
        gbc.setState(0xe56e, 0xda27, 0x4860, 0x5310, 0x8cc3, 0xb226, 0x1, 0x1);
        gbc.writeMem(0xb226, { 0xad });
        gbc.writeMem(0xe56e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xda27, gbc.sp());
        EXPECT(0xe570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb226));
        EXPECT(0xcb, gbc.readMem(0xe56e));
        EXPECT(0xfe, gbc.readMem(0xe56f));
        // CB FE 02BE
        gbc.setState(0xb16f, 0xf41f, 0x4630, 0x655f, 0x7967, 0xbe76, 0x1, 0x1);
        gbc.writeMem(0xb16f, { 0xcb, 0xfe });
        gbc.writeMem(0xbe76, { 0x4d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf41f, gbc.sp());
        EXPECT(0xb171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16f));
        EXPECT(0xfe, gbc.readMem(0xb170));
        EXPECT(0xcd, gbc.readMem(0xbe76));
        // CB FE 02BF
        gbc.setState(0x2570, 0x7da8, 0x8d40, 0x1c9e, 0xb9b9, 0xdbab, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0xfe });
        gbc.writeMem(0xdbab, { 0x46 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdbab));
        // CB FE 02C0
        gbc.setState(0xb0e2, 0x3929, 0x9b50, 0xfce6, 0xea7d, 0xd7cd, 0x0, 0x0);
        gbc.writeMem(0xb0e2, { 0xcb, 0xfe });
        gbc.writeMem(0xd7cd, { 0x78 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0xb0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e2));
        EXPECT(0xfe, gbc.readMem(0xb0e3));
        EXPECT(0xf8, gbc.readMem(0xd7cd));
        // CB FE 02C1
        gbc.setState(0xa09d, 0x8c73, 0x4fd0, 0x1c51, 0x3318, 0x6b9d, 0x1, 0x1);
        gbc.writeMem(0x6b9d, { 0x9c });
        gbc.writeMem(0xa09d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8c73, gbc.sp());
        EXPECT(0xa09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09d));
        EXPECT(0xfe, gbc.readMem(0xa09e));
        // CB FE 02C2
        gbc.setState(0xda33, 0xdbb9, 0x47f0, 0xee91, 0xe041, 0x3e6f, 0x0, 0x0);
        gbc.writeMem(0x3e6f, { 0xad });
        gbc.writeMem(0xda33, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdbb9, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0xfe, gbc.readMem(0xda34));
        // CB FE 02C7
        gbc.setState(0x9c8e, 0x410c, 0x3b40, 0xa99c, 0x5ac8, 0x1ab3, 0x0, 0x1);
        gbc.writeMem(0x1ab3, { 0xb8 });
        gbc.writeMem(0x9c8e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0x9c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8e));
        EXPECT(0xfe, gbc.readMem(0x9c8f));
        // CB FE 02C8
        gbc.setState(0x12f7, 0xd522, 0x1150, 0xc23c, 0xa39f, 0x9a30, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0xcb, 0xfe });
        gbc.writeMem(0x9a30, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9a30));
        // CB FE 02CA
        gbc.setState(0xee90, 0xde7b, 0xfd00, 0x7057, 0xa076, 0x9328, 0x0, 0x0);
        gbc.writeMem(0x9328, { 0x4b });
        gbc.writeMem(0xee90, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xde7b, gbc.sp());
        EXPECT(0xee92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9328));
        EXPECT(0xcb, gbc.readMem(0xee90));
        EXPECT(0xfe, gbc.readMem(0xee91));
        // CB FE 02CC
        gbc.setState(0x2571, 0x982a, 0x3300, 0xac63, 0x3c89, 0x4908, 0x1, 0x0);
        gbc.writeMem(0x2571, { 0xcb, 0xfe });
        gbc.writeMem(0x4908, { 0xa6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x982a, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02CE
        gbc.setState(0xaa5f, 0x5d8d, 0x2c80, 0x48a5, 0xe894, 0xe69f, 0x1, 0x0);
        gbc.writeMem(0xaa5f, { 0xcb, 0xfe });
        gbc.writeMem(0xe69f, { 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5d8d, gbc.sp());
        EXPECT(0xaa61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5f));
        EXPECT(0xfe, gbc.readMem(0xaa60));
        EXPECT(0xfb, gbc.readMem(0xe69f));
        // CB FE 02CF
        gbc.setState(0x454f, 0x41b, 0x840, 0x55d2, 0x4e6e, 0xf821, 0x1, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0xfe });
        gbc.writeMem(0xf821, { 0x83 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x41b, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xf821));
        // CB FE 02D0
        gbc.setState(0x7d42, 0x49bd, 0x6220, 0x4e91, 0x32c, 0xe310, 0x1, 0x1);
        gbc.writeMem(0x7d42, { 0xcb, 0xfe });
        gbc.writeMem(0xe310, { 0xb0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0x7d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xe310));
        // CB FE 02D1
        gbc.setState(0xc342, 0xf1b6, 0x2be0, 0xc0a0, 0xa961, 0xf037, 0x1, 0x0);
        gbc.writeMem(0xc342, { 0xcb, 0xfe });
        gbc.writeMem(0xf037, { 0x1f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0xc344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc342));
        EXPECT(0xfe, gbc.readMem(0xc343));
        EXPECT(0x9f, gbc.readMem(0xf037));
        // CB FE 02D3
        gbc.setState(0x6176, 0xf4e7, 0x85c0, 0x304d, 0x8f48, 0xc5f8, 0x0, 0x1);
        gbc.writeMem(0x6176, { 0xcb, 0xfe });
        gbc.writeMem(0xc5f8, { 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf4e7, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xc5f8));
        // CB FE 02D4
        gbc.setState(0x5a05, 0x6eae, 0x1df0, 0x2fb0, 0x3a06, 0x771f, 0x1, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0xfe });
        gbc.writeMem(0x771f, { 0xb6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02D6
        gbc.setState(0x7312, 0xfdb3, 0xd840, 0x2f42, 0x930b, 0xe439, 0x0, 0x0);
        gbc.writeMem(0x7312, { 0xcb, 0xfe });
        gbc.writeMem(0xe439, { 0x64 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfdb3, gbc.sp());
        EXPECT(0x7314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe439));
        // CB FE 02D8
        gbc.setState(0x60fb, 0x7dea, 0xec50, 0xe8a7, 0x147d, 0x77cd, 0x1, 0x1);
        gbc.writeMem(0x60fb, { 0xcb, 0xfe });
        gbc.writeMem(0x77cd, { 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0x60fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02DA
        gbc.setState(0xf72, 0x7f6d, 0x3d0, 0x5c47, 0xe7a8, 0xb0f9, 0x1, 0x0);
        gbc.writeMem(0xf72, { 0xcb, 0xfe });
        gbc.writeMem(0xb0f9, { 0x21 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0xf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb0f9));
        // CB FE 02DB
        gbc.setState(0xa47, 0x2782, 0x1740, 0x66c6, 0x3f7f, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0xa47, { 0xcb, 0xfe });
        gbc.writeMem(0x3b37, { 0x83 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02DC
        gbc.setState(0x7c9e, 0x242a, 0xa010, 0xa76c, 0x1f21, 0xb620, 0x0, 0x0);
        gbc.writeMem(0x7c9e, { 0xcb, 0xfe });
        gbc.writeMem(0xb620, { 0x5b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x242a, gbc.sp());
        EXPECT(0x7ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb620));
        // CB FE 02DD
        gbc.setState(0xab5a, 0x6b64, 0xc210, 0xb00d, 0x7404, 0xdb1a, 0x1, 0x1);
        gbc.writeMem(0xab5a, { 0xcb, 0xfe });
        gbc.writeMem(0xdb1a, { 0xf9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6b64, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5a));
        EXPECT(0xfe, gbc.readMem(0xab5b));
        EXPECT(0xf9, gbc.readMem(0xdb1a));
        // CB FE 02DE
        gbc.setState(0x6e02, 0x65d3, 0x3f60, 0xb9e2, 0x5461, 0xad6f, 0x1, 0x0);
        gbc.writeMem(0x6e02, { 0xcb, 0xfe });
        gbc.writeMem(0xad6f, { 0x27 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x65d3, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xad6f));
        // CB FE 02E0
        gbc.setState(0xe4c1, 0xc46d, 0x6e0, 0x6bc2, 0x97ea, 0xd431, 0x0, 0x1);
        gbc.writeMem(0xd431, { 0x86 });
        gbc.writeMem(0xe4c1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0xe4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd431));
        EXPECT(0xcb, gbc.readMem(0xe4c1));
        EXPECT(0xfe, gbc.readMem(0xe4c2));
        // CB FE 02E1
        gbc.setState(0xd7d0, 0x1239, 0x7700, 0x689b, 0xe7ae, 0xa5c1, 0x1, 0x0);
        gbc.writeMem(0xa5c1, { 0x16 });
        gbc.writeMem(0xd7d0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1239, gbc.sp());
        EXPECT(0xd7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa5c1));
        EXPECT(0xcb, gbc.readMem(0xd7d0));
        EXPECT(0xfe, gbc.readMem(0xd7d1));
        // CB FE 02E2
        gbc.setState(0x7ff0, 0xbda4, 0x2d60, 0xa301, 0x877c, 0xaadf, 0x1, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0xfe });
        gbc.writeMem(0xaadf, { 0xd7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xaadf));
        // CB FE 02E3
        gbc.setState(0xaa15, 0xe159, 0xb430, 0x7720, 0xabcd, 0xf6c9, 0x0, 0x0);
        gbc.writeMem(0xaa15, { 0xcb, 0xfe });
        gbc.writeMem(0xf6c9, { 0x6c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe159, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa15));
        EXPECT(0xfe, gbc.readMem(0xaa16));
        EXPECT(0xec, gbc.readMem(0xf6c9));
        // CB FE 02E4
        gbc.setState(0x582, 0x12da, 0x91f0, 0x6c1b, 0xcb0d, 0x9941, 0x0, 0x0);
        gbc.writeMem(0x582, { 0xcb, 0xfe });
        gbc.writeMem(0x9941, { 0xc5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x12da, gbc.sp());
        EXPECT(0x584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9941));
        // CB FE 02E5
        gbc.setState(0xa1d3, 0x963c, 0xbde0, 0xae08, 0xe0ce, 0x8cb1, 0x1, 0x0);
        gbc.writeMem(0x8cb1, { 0xa1 });
        gbc.writeMem(0xa1d3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8cb1));
        EXPECT(0xcb, gbc.readMem(0xa1d3));
        EXPECT(0xfe, gbc.readMem(0xa1d4));
        // CB FE 02E7
        gbc.setState(0x26d4, 0x1dee, 0xe50, 0x12f8, 0xa99a, 0xd343, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0xcb, 0xfe });
        gbc.writeMem(0xd343, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd343));
        // CB FE 02E8
        gbc.setState(0x251, 0xe986, 0x4b10, 0x913c, 0xfa03, 0xbe32, 0x0, 0x1);
        gbc.writeMem(0x251, { 0xcb, 0xfe });
        gbc.writeMem(0xbe32, { 0x9e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe986, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbe32));
        // CB FE 02E9
        gbc.setState(0x65b, 0x5c76, 0xf5f0, 0x1436, 0xb16f, 0x798c, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0xfe });
        gbc.writeMem(0x798c, { 0x99 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02EC
        gbc.setState(0x1d51, 0x10cf, 0x4640, 0x2956, 0x205e, 0xaaef, 0x0, 0x1);
        gbc.writeMem(0x1d51, { 0xcb, 0xfe });
        gbc.writeMem(0xaaef, { 0xca });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x10cf, gbc.sp());
        EXPECT(0x1d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xaaef));
        // CB FE 02EE
        gbc.setState(0x8d88, 0xc017, 0x9210, 0xd786, 0x4b6d, 0xfaf2, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0xcb, 0xfe });
        gbc.writeMem(0xfaf2, { 0x70 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0x8d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d88));
        EXPECT(0xfe, gbc.readMem(0x8d89));
        EXPECT(0xf0, gbc.readMem(0xfaf2));
        // CB FE 02F1
        gbc.setState(0xd99e, 0xfa4e, 0x3610, 0x821a, 0x8db7, 0x9433, 0x0, 0x1);
        gbc.writeMem(0x9433, { 0xd4 });
        gbc.writeMem(0xd99e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa4e, gbc.sp());
        EXPECT(0xd9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9433));
        EXPECT(0xcb, gbc.readMem(0xd99e));
        EXPECT(0xfe, gbc.readMem(0xd99f));
        // CB FE 02F2
        gbc.setState(0x55e9, 0x5595, 0x8ed0, 0xd080, 0x2014, 0x9e16, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0xfe });
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x9e16));
        // CB FE 02F3
        gbc.setState(0x476d, 0x1c9a, 0x2a70, 0x55ea, 0x6fa1, 0x1281, 0x1, 0x1);
        gbc.writeMem(0x1281, { 0xf3 });
        gbc.writeMem(0x476d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 02F4
        gbc.setState(0x49cf, 0x58b4, 0x5210, 0x69d5, 0xfa63, 0x8219, 0x1, 0x1);
        gbc.writeMem(0x49cf, { 0xcb, 0xfe });
        gbc.writeMem(0x8219, { 0x27 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0x49d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8219));
        // CB FE 02F5
        gbc.setState(0x157c, 0x7a49, 0xbba0, 0x8f5c, 0xf33a, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x157c, { 0xcb, 0xfe });
        gbc.writeMem(0xacef, { 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7a49, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xacef));
        // CB FE 02F6
        gbc.setState(0xbe2c, 0x3fa0, 0x6ac0, 0x20e5, 0x5744, 0x9af, 0x1, 0x1);
        gbc.writeMem(0x9af, { 0xe7 });
        gbc.writeMem(0xbe2c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0xbe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2c));
        EXPECT(0xfe, gbc.readMem(0xbe2d));
        // CB FE 02F8
        gbc.setState(0x2285, 0x2b68, 0x1e00, 0xb5e9, 0xce7b, 0x697a, 0x0, 0x1);
        gbc.writeMem(0x2285, { 0xcb, 0xfe });
        gbc.writeMem(0x697a, { 0xd6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b68, gbc.sp());
        EXPECT(0x2287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02F9
        gbc.setState(0xe7b6, 0x6627, 0xd000, 0xe28e, 0xbc92, 0x92b9, 0x1, 0x1);
        gbc.writeMem(0x92b9, { 0x68 });
        gbc.writeMem(0xe7b6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6627, gbc.sp());
        EXPECT(0xe7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x92b9));
        EXPECT(0xcb, gbc.readMem(0xe7b6));
        EXPECT(0xfe, gbc.readMem(0xe7b7));
        // CB FE 02FB
        gbc.setState(0x619e, 0x5840, 0x2b0, 0x73f9, 0xe6a0, 0x9d60, 0x0, 0x1);
        gbc.writeMem(0x619e, { 0xcb, 0xfe });
        gbc.writeMem(0x9d60, { 0xbf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5840, gbc.sp());
        EXPECT(0x61a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9d60));
        // CB FE 02FC
        gbc.setState(0x61ca, 0x450b, 0x6a50, 0x6a04, 0x8ff2, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x61ca, { 0xcb, 0xfe });
        gbc.writeMem(0xf943, { 0x3f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0x61cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xf943));
        // CB FE 02FD
        gbc.setState(0xad68, 0xf7a0, 0x3260, 0x1a50, 0x4563, 0x891f, 0x1, 0x1);
        gbc.writeMem(0x891f, { 0x6a });
        gbc.writeMem(0xad68, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0xad6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x891f));
        EXPECT(0xcb, gbc.readMem(0xad68));
        EXPECT(0xfe, gbc.readMem(0xad69));
        // CB FE 02FE
        gbc.setState(0xe8, 0x9f9c, 0xfac0, 0x730d, 0x7a4, 0x5183, 0x1, 0x0);
        gbc.writeMem(0xe8, { 0xcb, 0xfe });
        gbc.writeMem(0x5183, { 0x8d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9f9c, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 02FF
        gbc.setState(0x44ba, 0x303e, 0xde50, 0xbdf3, 0x9c3a, 0xf6a2, 0x0, 0x1);
        gbc.writeMem(0x44ba, { 0xcb, 0xfe });
        gbc.writeMem(0xf6a2, { 0x7f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x303e, gbc.sp());
        EXPECT(0x44bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xf6a2));
        // CB FE 0300
        gbc.setState(0x35c2, 0x5318, 0xc0e0, 0x681a, 0x25d, 0xeaf4, 0x0, 0x0);
        gbc.writeMem(0x35c2, { 0xcb, 0xfe });
        gbc.writeMem(0xeaf4, { 0x81 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xeaf4));
        // CB FE 0301
        gbc.setState(0x92e1, 0x7946, 0x2610, 0x14b3, 0x917e, 0x200b, 0x0, 0x0);
        gbc.writeMem(0x200b, { 0xc1 });
        gbc.writeMem(0x92e1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0x92e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e1));
        EXPECT(0xfe, gbc.readMem(0x92e2));
        // CB FE 0302
        gbc.setState(0x739f, 0xe601, 0x77f0, 0xe87b, 0xf572, 0x6ea1, 0x0, 0x1);
        gbc.writeMem(0x6ea1, { 0xeb });
        gbc.writeMem(0x739f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0x73a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0303
        gbc.setState(0xe411, 0xe94c, 0x5620, 0x7c6c, 0x804f, 0xeb7d, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0xfe });
        gbc.writeMem(0xeb7d, { 0xfd });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe411));
        EXPECT(0xfe, gbc.readMem(0xe412));
        EXPECT(0xfd, gbc.readMem(0xeb7d));
        // CB FE 0304
        gbc.setState(0x2508, 0x8c72, 0x1220, 0x4566, 0x799c, 0x39af, 0x0, 0x1);
        gbc.writeMem(0x2508, { 0xcb, 0xfe });
        gbc.writeMem(0x39af, { 0xd4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0305
        gbc.setState(0x2321, 0x7066, 0xfa40, 0x1bda, 0xf5dc, 0xebe5, 0x0, 0x1);
        gbc.writeMem(0x2321, { 0xcb, 0xfe });
        gbc.writeMem(0xebe5, { 0xd8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7066, gbc.sp());
        EXPECT(0x2323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xebe5));
        // CB FE 0306
        gbc.setState(0xb261, 0xddfa, 0x5330, 0xf536, 0x83aa, 0xcc0e, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xfe });
        gbc.writeMem(0xcc0e, { 0xb6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xddfa, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0xfe, gbc.readMem(0xb262));
        EXPECT(0xb6, gbc.readMem(0xcc0e));
        // CB FE 0307
        gbc.setState(0xc7d, 0x1a35, 0x5f10, 0x6f50, 0x2384, 0x6e55, 0x1, 0x1);
        gbc.writeMem(0xc7d, { 0xcb, 0xfe });
        gbc.writeMem(0x6e55, { 0xbe });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1a35, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0308
        gbc.setState(0x1ad1, 0x1b7c, 0x87a0, 0x880c, 0x7313, 0x6ee2, 0x0, 0x0);
        gbc.writeMem(0x1ad1, { 0xcb, 0xfe });
        gbc.writeMem(0x6ee2, { 0x84 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1b7c, gbc.sp());
        EXPECT(0x1ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 030B
        gbc.setState(0x532, 0x5fe4, 0xb5e0, 0x46d1, 0x99bc, 0xcee2, 0x0, 0x0);
        gbc.writeMem(0x532, { 0xcb, 0xfe });
        gbc.writeMem(0xcee2, { 0x41 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5fe4, gbc.sp());
        EXPECT(0x534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xcee2));
        // CB FE 030C
        gbc.setState(0x4a7e, 0x5f15, 0x5990, 0x234d, 0xafb3, 0x78b, 0x0, 0x1);
        gbc.writeMem(0x78b, { 0xae });
        gbc.writeMem(0x4a7e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 030E
        gbc.setState(0xc62c, 0x2b2c, 0x6bc0, 0x2d56, 0x7e62, 0xe444, 0x1, 0x0);
        gbc.writeMem(0xc62c, { 0xcb, 0xfe });
        gbc.writeMem(0xe444, { 0x41 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2b2c, gbc.sp());
        EXPECT(0xc62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62c));
        EXPECT(0xfe, gbc.readMem(0xc62d));
        EXPECT(0xc1, gbc.readMem(0xe444));
        // CB FE 030F
        gbc.setState(0x67c7, 0x3acd, 0xf1f0, 0xfbed, 0xabf9, 0xff16, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0xcb, 0xfe });
        gbc.writeMem(0xff16, { 0xad });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3acd, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff16));
        // CB FE 0310
        gbc.setState(0x39d9, 0x4d98, 0x3230, 0xe413, 0xa5b7, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0x39d9, { 0xcb, 0xfe });
        gbc.writeMem(0xd05b, { 0x30 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d98, gbc.sp());
        EXPECT(0x39db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd05b));
        // CB FE 0311
        gbc.setState(0x47b, 0x1520, 0xc30, 0x3e45, 0xa946, 0xb7d2, 0x0, 0x0);
        gbc.writeMem(0x47b, { 0xcb, 0xfe });
        gbc.writeMem(0xb7d2, { 0x4d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1520, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb7d2));
        // CB FE 0314
        gbc.setState(0xdc1d, 0xb5fe, 0x6c50, 0x3a17, 0x8d23, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0xb5fd, { 0xc3 });
        gbc.writeMem(0xdc1d, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0xdc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb5fd));
        EXPECT(0xcb, gbc.readMem(0xdc1d));
        EXPECT(0xfe, gbc.readMem(0xdc1e));
        // CB FE 0315
        gbc.setState(0x6f5d, 0x7790, 0xb610, 0x9d65, 0x1507, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0x6f5d, { 0xcb, 0xfe });
        gbc.writeMem(0xf6eb, { 0x81 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7790, gbc.sp());
        EXPECT(0x6f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xf6eb));
        // CB FE 0318
        gbc.setState(0x4cf3, 0x4c8b, 0x7f00, 0x6e7a, 0xea7e, 0xa165, 0x0, 0x0);
        gbc.writeMem(0x4cf3, { 0xcb, 0xfe });
        gbc.writeMem(0xa165, { 0x55 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4c8b, gbc.sp());
        EXPECT(0x4cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa165));
        // CB FE 0319
        gbc.setState(0x326, 0xdd72, 0xd160, 0x23df, 0xa22a, 0xfa17, 0x0, 0x0);
        gbc.writeMem(0x326, { 0xcb, 0xfe });
        gbc.writeMem(0xfa17, { 0xfc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0x328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfa17));
        // CB FE 031A
        gbc.setState(0x1c3e, 0xd935, 0x2f70, 0x8438, 0x3bb3, 0x73ed, 0x1, 0x1);
        gbc.writeMem(0x1c3e, { 0xcb, 0xfe });
        gbc.writeMem(0x73ed, { 0xe8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd935, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 031B
        gbc.setState(0xc2e1, 0x5523, 0x3d80, 0x9aaf, 0x494c, 0xa976, 0x0, 0x0);
        gbc.writeMem(0xa976, { 0x44 });
        gbc.writeMem(0xc2e1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa976));
        EXPECT(0xcb, gbc.readMem(0xc2e1));
        EXPECT(0xfe, gbc.readMem(0xc2e2));
        // CB FE 031C
        gbc.setState(0x689d, 0xd275, 0xfdb0, 0xbdf, 0xf23a, 0xb979, 0x0, 0x1);
        gbc.writeMem(0x689d, { 0xcb, 0xfe });
        gbc.writeMem(0xb979, { 0xec });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd275, gbc.sp());
        EXPECT(0x689f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xb979));
        // CB FE 031E
        gbc.setState(0xa16f, 0xe7b2, 0x6cb0, 0xc6a2, 0x7976, 0x965e, 0x0, 0x1);
        gbc.writeMem(0x965e, { 0x5 });
        gbc.writeMem(0xa16f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x965e));
        EXPECT(0xcb, gbc.readMem(0xa16f));
        EXPECT(0xfe, gbc.readMem(0xa170));
        // CB FE 031F
        gbc.setState(0x967e, 0x77fe, 0xfc70, 0xb979, 0x6d3f, 0x9182, 0x1, 0x1);
        gbc.writeMem(0x9182, { 0xf3 });
        gbc.writeMem(0x967e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x77fe, gbc.sp());
        EXPECT(0x9680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x9182));
        EXPECT(0xcb, gbc.readMem(0x967e));
        EXPECT(0xfe, gbc.readMem(0x967f));
        // CB FE 0321
        gbc.setState(0x49df, 0xfc1f, 0xc2f0, 0x1a2c, 0xbee8, 0xbaad, 0x0, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0xfe });
        gbc.writeMem(0xbaad, { 0x28 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfc1f, gbc.sp());
        EXPECT(0x49e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xbaad));
        // CB FE 0323
        gbc.setState(0x51a, 0x419d, 0xb530, 0xd1f, 0xac2b, 0x17e, 0x0, 0x0);
        gbc.writeMem(0x17e, { 0x85 });
        gbc.writeMem(0x51a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x419d, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0324
        gbc.setState(0x4bb6, 0xa592, 0x5f20, 0xf7da, 0xeecb, 0xe1d5, 0x1, 0x1);
        gbc.writeMem(0x4bb6, { 0xcb, 0xfe });
        gbc.writeMem(0xe1d5, { 0xf4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe1d5));
        // CB FE 0325
        gbc.setState(0xbbe5, 0xe0cd, 0x7c80, 0x883f, 0xfa43, 0xe6f3, 0x1, 0x1);
        gbc.writeMem(0xbbe5, { 0xcb, 0xfe });
        gbc.writeMem(0xe6f3, { 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe0cd, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe5));
        EXPECT(0xfe, gbc.readMem(0xbbe6));
        EXPECT(0xf7, gbc.readMem(0xe6f3));
        // CB FE 0327
        gbc.setState(0x2b6c, 0xc05, 0x63b0, 0xfa06, 0xfec3, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0x2b6c, { 0xcb, 0xfe });
        gbc.writeMem(0xa24b, { 0xb2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc05, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xa24b));
        // CB FE 032A
        gbc.setState(0xabe4, 0xef6a, 0xc900, 0x4258, 0x4e7, 0x3ee, 0x1, 0x0);
        gbc.writeMem(0x3ee, { 0xa7 });
        gbc.writeMem(0xabe4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe4));
        EXPECT(0xfe, gbc.readMem(0xabe5));
        // CB FE 032C
        gbc.setState(0x7ef0, 0x561d, 0x49e0, 0xf792, 0xc541, 0xbe6d, 0x0, 0x1);
        gbc.writeMem(0x7ef0, { 0xcb, 0xfe });
        gbc.writeMem(0xbe6d, { 0x5d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x561d, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xbe6d));
        // CB FE 032D
        gbc.setState(0x5cb2, 0x65d5, 0x5990, 0xa300, 0xe874, 0x8cc3, 0x1, 0x0);
        gbc.writeMem(0x5cb2, { 0xcb, 0xfe });
        gbc.writeMem(0x8cc3, { 0x40 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8cc3));
        // CB FE 0330
        gbc.setState(0xa250, 0xf601, 0x91e0, 0x101f, 0x6e0f, 0x4eb0, 0x1, 0x0);
        gbc.writeMem(0x4eb0, { 0xf9 });
        gbc.writeMem(0xa250, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf601, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa250));
        EXPECT(0xfe, gbc.readMem(0xa251));
        // CB FE 0331
        gbc.setState(0xe3d0, 0x1934, 0x3d00, 0x55f, 0x3f1d, 0xab38, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0x34 });
        gbc.writeMem(0xe3d0, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1934, gbc.sp());
        EXPECT(0xe3d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xab38));
        EXPECT(0xcb, gbc.readMem(0xe3d0));
        EXPECT(0xfe, gbc.readMem(0xe3d1));
        // CB FE 0332
        gbc.setState(0x4319, 0xd75f, 0xf480, 0x87ee, 0xcc11, 0x1fd8, 0x1, 0x0);
        gbc.writeMem(0x1fd8, { 0xf5 });
        gbc.writeMem(0x4319, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0x431b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0333
        gbc.setState(0x7c5d, 0x8396, 0x60f0, 0xe351, 0x6c16, 0xb712, 0x1, 0x1);
        gbc.writeMem(0x7c5d, { 0xcb, 0xfe });
        gbc.writeMem(0xb712, { 0xb8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8396, gbc.sp());
        EXPECT(0x7c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb712));
        // CB FE 0334
        gbc.setState(0xef19, 0x2194, 0xc3e0, 0xca4b, 0x25e5, 0x5481, 0x1, 0x1);
        gbc.writeMem(0x5481, { 0xe7 });
        gbc.writeMem(0xef19, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0xef1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef19));
        EXPECT(0xfe, gbc.readMem(0xef1a));
        // CB FE 0335
        gbc.setState(0x5586, 0xec63, 0x8df0, 0x61dc, 0x771b, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xfe });
        gbc.writeMem(0xd8b9, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xec63, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd8b9));
        // CB FE 0336
        gbc.setState(0xd33a, 0x94cd, 0x30c0, 0x8111, 0xeda5, 0xd0d3, 0x0, 0x1);
        gbc.writeMem(0xd0d3, { 0x70 });
        gbc.writeMem(0xd33a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x94cd, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd0d3));
        EXPECT(0xcb, gbc.readMem(0xd33a));
        EXPECT(0xfe, gbc.readMem(0xd33b));
        // CB FE 033B
        gbc.setState(0x606a, 0xc622, 0xf450, 0x5518, 0xfeb0, 0x3739, 0x1, 0x1);
        gbc.writeMem(0x3739, { 0xdb });
        gbc.writeMem(0x606a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 033C
        gbc.setState(0xabd8, 0xafd2, 0x6da0, 0x1ae7, 0xe3a5, 0x368a, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xf6 });
        gbc.writeMem(0xabd8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xafd2, gbc.sp());
        EXPECT(0xabda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd8));
        EXPECT(0xfe, gbc.readMem(0xabd9));
        // CB FE 033D
        gbc.setState(0x76d4, 0xd173, 0x7860, 0x61a0, 0x2fa1, 0x380f, 0x0, 0x1);
        gbc.writeMem(0x380f, { 0x81 });
        gbc.writeMem(0x76d4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd173, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 033F
        gbc.setState(0x6f85, 0x25e9, 0xe320, 0x2497, 0x2b7b, 0xaaa6, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0xcb, 0xfe });
        gbc.writeMem(0xaaa6, { 0xe1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xaaa6));
        // CB FE 0341
        gbc.setState(0x135a, 0x4b58, 0x1400, 0x5881, 0x2eea, 0x9f66, 0x1, 0x0);
        gbc.writeMem(0x135a, { 0xcb, 0xfe });
        gbc.writeMem(0x9f66, { 0xbf });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4b58, gbc.sp());
        EXPECT(0x135c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f66));
        // CB FE 0342
        gbc.setState(0x43c1, 0x9d5, 0x1800, 0x1daa, 0x9fbb, 0xad38, 0x0, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0xfe });
        gbc.writeMem(0xad38, { 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9d5, gbc.sp());
        EXPECT(0x43c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xad38));
        // CB FE 0343
        gbc.setState(0x36f1, 0x8e56, 0x2e0, 0xdf53, 0x4c94, 0x98a6, 0x1, 0x1);
        gbc.writeMem(0x36f1, { 0xcb, 0xfe });
        gbc.writeMem(0x98a6, { 0x1f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8e56, gbc.sp());
        EXPECT(0x36f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x98a6));
        // CB FE 0344
        gbc.setState(0xad09, 0xcd8d, 0x4fd0, 0xd7d3, 0xce35, 0xebd3, 0x1, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0xfe });
        gbc.writeMem(0xebd3, { 0xde });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0xad0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad09));
        EXPECT(0xfe, gbc.readMem(0xad0a));
        EXPECT(0xde, gbc.readMem(0xebd3));
        // CB FE 0347
        gbc.setState(0xe2f7, 0xe733, 0x6e20, 0x765b, 0xe364, 0xa2b7, 0x1, 0x1);
        gbc.writeMem(0xa2b7, { 0xf });
        gbc.writeMem(0xe2f7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0xe2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa2b7));
        EXPECT(0xcb, gbc.readMem(0xe2f7));
        EXPECT(0xfe, gbc.readMem(0xe2f8));
        // CB FE 0348
        gbc.setState(0x928d, 0x8be7, 0xa100, 0xd00f, 0x4bb3, 0xf360, 0x0, 0x0);
        gbc.writeMem(0x928d, { 0xcb, 0xfe });
        gbc.writeMem(0xf360, { 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8be7, gbc.sp());
        EXPECT(0x928f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928d));
        EXPECT(0xfe, gbc.readMem(0x928e));
        EXPECT(0xfa, gbc.readMem(0xf360));
        // CB FE 034A
        gbc.setState(0x2579, 0x5a3d, 0x5220, 0xaddd, 0x6706, 0xbd13, 0x0, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0xfe });
        gbc.writeMem(0xbd13, { 0x33 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5a3d, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xbd13));
        // CB FE 034D
        gbc.setState(0x75e, 0x59a1, 0x3d30, 0x7973, 0xcc97, 0xc4a8, 0x1, 0x0);
        gbc.writeMem(0x75e, { 0xcb, 0xfe });
        gbc.writeMem(0xc4a8, { 0x1e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x59a1, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc4a8));
        // CB FE 034E
        gbc.setState(0x93d1, 0x7d64, 0x57d0, 0x6d8e, 0x70e6, 0x811d, 0x0, 0x1);
        gbc.writeMem(0x811d, { 0xce });
        gbc.writeMem(0x93d1, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7d64, gbc.sp());
        EXPECT(0x93d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x811d));
        EXPECT(0xcb, gbc.readMem(0x93d1));
        EXPECT(0xfe, gbc.readMem(0x93d2));
        // CB FE 0351
        gbc.setState(0x2f11, 0xd5f, 0xbb40, 0xd804, 0xf555, 0x87ec, 0x0, 0x0);
        gbc.writeMem(0x2f11, { 0xcb, 0xfe });
        gbc.writeMem(0x87ec, { 0x2e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x87ec));
        // CB FE 0353
        gbc.setState(0x45de, 0xf51f, 0x7fe0, 0x2fdb, 0xfd39, 0xe98c, 0x0, 0x1);
        gbc.writeMem(0x45de, { 0xcb, 0xfe });
        gbc.writeMem(0xe98c, { 0x6f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x45e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xe98c));
        // CB FE 0354
        gbc.setState(0x19ad, 0xd1ff, 0x79b0, 0x7ff, 0x6802, 0x8107, 0x1, 0x1);
        gbc.writeMem(0x19ad, { 0xcb, 0xfe });
        gbc.writeMem(0x8107, { 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd1ff, gbc.sp());
        EXPECT(0x19af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8107));
        // CB FE 0355
        gbc.setState(0xb35, 0x1d59, 0xff00, 0x2c19, 0x73d6, 0xf9a5, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0xfe });
        gbc.writeMem(0xf9a5, { 0x6d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1d59, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xf9a5));
        // CB FE 0356
        gbc.setState(0x4808, 0x2fb6, 0x41f0, 0x109d, 0x27a8, 0x4bf2, 0x0, 0x0);
        gbc.writeMem(0x4808, { 0xcb, 0xfe });
        gbc.writeMem(0x4bf2, { 0xe6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0x480a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0358
        gbc.setState(0xb4bf, 0xd964, 0xfe90, 0x3915, 0x9efd, 0x6797, 0x1, 0x0);
        gbc.writeMem(0x6797, { 0xf4 });
        gbc.writeMem(0xb4bf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd964, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bf));
        EXPECT(0xfe, gbc.readMem(0xb4c0));
        // CB FE 0359
        gbc.setState(0xcea6, 0xe2c4, 0xee00, 0x4848, 0xa7b7, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x9590, { 0xce });
        gbc.writeMem(0xcea6, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe2c4, gbc.sp());
        EXPECT(0xcea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9590));
        EXPECT(0xcb, gbc.readMem(0xcea6));
        EXPECT(0xfe, gbc.readMem(0xcea7));
        // CB FE 035A
        gbc.setState(0x4bf9, 0x9ccb, 0x2170, 0xdc20, 0x7b82, 0xee3f, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0xfe });
        gbc.writeMem(0xee3f, { 0x4a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x4bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xee3f));
        // CB FE 035B
        gbc.setState(0x5caf, 0xf68, 0xffb0, 0x41df, 0x5e5a, 0x31d8, 0x1, 0x0);
        gbc.writeMem(0x31d8, { 0xae });
        gbc.writeMem(0x5caf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0x5cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 035C
        gbc.setState(0xc05c, 0x33eb, 0xdad0, 0x8d18, 0x9af1, 0x89c9, 0x1, 0x1);
        gbc.writeMem(0x89c9, { 0x48 });
        gbc.writeMem(0xc05c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x33eb, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x89c9));
        EXPECT(0xcb, gbc.readMem(0xc05c));
        EXPECT(0xfe, gbc.readMem(0xc05d));
        // CB FE 035F
        gbc.setState(0x47ba, 0x585e, 0xbb70, 0xcc02, 0x8cd1, 0x927d, 0x0, 0x0);
        gbc.writeMem(0x47ba, { 0xcb, 0xfe });
        gbc.writeMem(0x927d, { 0x20 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x585e, gbc.sp());
        EXPECT(0x47bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x927d));
        // CB FE 0360
        gbc.setState(0x82b7, 0xde90, 0x92c0, 0xb73e, 0xc291, 0x5f50, 0x0, 0x1);
        gbc.writeMem(0x5f50, { 0xb5 });
        gbc.writeMem(0x82b7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x82b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b7));
        EXPECT(0xfe, gbc.readMem(0x82b8));
        // CB FE 0361
        gbc.setState(0x6a04, 0xbacc, 0x6a0, 0x3ae, 0x5de9, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0x6a04, { 0xcb, 0xfe });
        gbc.writeMem(0xdec6, { 0x54 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0x6a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdec6));
        // CB FE 0362
        gbc.setState(0x3636, 0x1ef1, 0x4090, 0x7402, 0x1866, 0xdfb, 0x0, 0x1);
        gbc.writeMem(0xdfb, { 0x88 });
        gbc.writeMem(0x3636, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0364
        gbc.setState(0xbbdf, 0x85ef, 0x6290, 0x8a21, 0x412f, 0x1fdb, 0x0, 0x1);
        gbc.writeMem(0x1fdb, { 0xd5 });
        gbc.writeMem(0xbbdf, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x85ef, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0xfe, gbc.readMem(0xbbe0));
        // CB FE 0365
        gbc.setState(0x568c, 0x9abc, 0x240, 0x985d, 0xc1fc, 0x2eda, 0x0, 0x0);
        gbc.writeMem(0x2eda, { 0xbb });
        gbc.writeMem(0x568c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0366
        gbc.setState(0x8a6f, 0xaa6e, 0xbc30, 0xaed7, 0xdad7, 0x3224, 0x1, 0x1);
        gbc.writeMem(0x3224, { 0xb2 });
        gbc.writeMem(0x8a6f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaa6e, gbc.sp());
        EXPECT(0x8a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6f));
        EXPECT(0xfe, gbc.readMem(0x8a70));
        // CB FE 0367
        gbc.setState(0x80fd, 0xeca9, 0x95f0, 0x1cce, 0x595c, 0x84bc, 0x1, 0x1);
        gbc.writeMem(0x80fd, { 0xcb, 0xfe });
        gbc.writeMem(0x84bc, { 0xdf });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0x80ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fd));
        EXPECT(0xfe, gbc.readMem(0x80fe));
        EXPECT(0xdf, gbc.readMem(0x84bc));
        // CB FE 0368
        gbc.setState(0x8bb7, 0x935e, 0xab40, 0x2093, 0x1414, 0x4d3b, 0x1, 0x0);
        gbc.writeMem(0x4d3b, { 0xfa });
        gbc.writeMem(0x8bb7, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x935e, gbc.sp());
        EXPECT(0x8bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb7));
        EXPECT(0xfe, gbc.readMem(0x8bb8));
        // CB FE 0369
        gbc.setState(0x6686, 0x9a7a, 0x52e0, 0x2ac4, 0xf210, 0x53a7, 0x1, 0x0);
        gbc.writeMem(0x53a7, { 0x8b });
        gbc.writeMem(0x6686, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9a7a, gbc.sp());
        EXPECT(0x6688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 036A
        gbc.setState(0x54c4, 0x9613, 0x8d30, 0x3a0e, 0xfa7e, 0x8050, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0xfe });
        gbc.writeMem(0x8050, { 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8050));
        // CB FE 036D
        gbc.setState(0x2a0, 0xfc59, 0x7730, 0xd98d, 0xdd9c, 0xbf37, 0x0, 0x1);
        gbc.writeMem(0x2a0, { 0xcb, 0xfe });
        gbc.writeMem(0xbf37, { 0xca });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xbf37));
        // CB FE 036F
        gbc.setState(0x533, 0x9ce6, 0x9cf0, 0xefa4, 0x8b96, 0xfad0, 0x1, 0x1);
        gbc.writeMem(0x533, { 0xcb, 0xfe });
        gbc.writeMem(0xfad0, { 0x6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xfad0));
        // CB FE 0371
        gbc.setState(0xe092, 0xcbe7, 0xfc80, 0xab3a, 0x4a6b, 0x7694, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0xad });
        gbc.writeMem(0xe092, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0xe094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe092));
        EXPECT(0xfe, gbc.readMem(0xe093));
        // CB FE 0372
        gbc.setState(0xee96, 0xb6bf, 0xfec0, 0xfeac, 0xe514, 0x5030, 0x0, 0x0);
        gbc.writeMem(0x5030, { 0xd6 });
        gbc.writeMem(0xee96, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee96));
        EXPECT(0xfe, gbc.readMem(0xee97));
        // CB FE 0373
        gbc.setState(0xabc, 0x8cc1, 0x7d80, 0x32b9, 0xebf4, 0x420f, 0x1, 0x1);
        gbc.writeMem(0xabc, { 0xcb, 0xfe });
        gbc.writeMem(0x420f, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0xabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0374
        gbc.setState(0x1e9e, 0x87cd, 0xf340, 0x551e, 0xa1e9, 0xebf9, 0x1, 0x1);
        gbc.writeMem(0x1e9e, { 0xcb, 0xfe });
        gbc.writeMem(0xebf9, { 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x1ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xebf9));
        // CB FE 0375
        gbc.setState(0xd2e9, 0x8a59, 0xa900, 0x5e10, 0x27ac, 0xfbf9, 0x0, 0x0);
        gbc.writeMem(0xd2e9, { 0xcb, 0xfe });
        gbc.writeMem(0xfbf9, { 0x74 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a59, gbc.sp());
        EXPECT(0xd2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e9));
        EXPECT(0xfe, gbc.readMem(0xd2ea));
        EXPECT(0xf4, gbc.readMem(0xfbf9));
        // CB FE 0376
        gbc.setState(0x1a68, 0x6b6f, 0x2dc0, 0xebd9, 0xde33, 0xa3d1, 0x0, 0x0);
        gbc.writeMem(0x1a68, { 0xcb, 0xfe });
        gbc.writeMem(0xa3d1, { 0x16 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6b6f, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa3d1));
        // CB FE 0377
        gbc.setState(0x3f5f, 0xe340, 0xffc0, 0xca2a, 0x7640, 0x9515, 0x0, 0x0);
        gbc.writeMem(0x3f5f, { 0xcb, 0xfe });
        gbc.writeMem(0x9515, { 0xa7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe340, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9515));
        // CB FE 0378
        gbc.setState(0xabe4, 0x964e, 0x4b80, 0x6b1c, 0x8bf1, 0x8871, 0x0, 0x0);
        gbc.writeMem(0x8871, { 0xd5 });
        gbc.writeMem(0xabe4, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x964e, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8871));
        EXPECT(0xcb, gbc.readMem(0xabe4));
        EXPECT(0xfe, gbc.readMem(0xabe5));
        // CB FE 0379
        gbc.setState(0x8dea, 0xbb5, 0xe780, 0x10a4, 0xbd18, 0x97f3, 0x1, 0x1);
        gbc.writeMem(0x8dea, { 0xcb, 0xfe });
        gbc.writeMem(0x97f3, { 0x8e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbb5, gbc.sp());
        EXPECT(0x8dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dea));
        EXPECT(0xfe, gbc.readMem(0x8deb));
        EXPECT(0x8e, gbc.readMem(0x97f3));
        // CB FE 037A
        gbc.setState(0xd41c, 0xd267, 0x7f60, 0x80c9, 0x7f2, 0xdcba, 0x0, 0x1);
        gbc.writeMem(0xd41c, { 0xcb, 0xfe });
        gbc.writeMem(0xdcba, { 0xc8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd267, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41c));
        EXPECT(0xfe, gbc.readMem(0xd41d));
        EXPECT(0xc8, gbc.readMem(0xdcba));
        // CB FE 037B
        gbc.setState(0x8d4b, 0xd4ad, 0x3e80, 0x6d10, 0xa4f, 0xe8a5, 0x0, 0x0);
        gbc.writeMem(0x8d4b, { 0xcb, 0xfe });
        gbc.writeMem(0xe8a5, { 0x1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd4ad, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4b));
        EXPECT(0xfe, gbc.readMem(0x8d4c));
        EXPECT(0x81, gbc.readMem(0xe8a5));
        // CB FE 037D
        gbc.setState(0xb994, 0xe9b4, 0xb750, 0x62d2, 0x2e4b, 0x9bba, 0x0, 0x0);
        gbc.writeMem(0x9bba, { 0xc9 });
        gbc.writeMem(0xb994, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0xb996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9bba));
        EXPECT(0xcb, gbc.readMem(0xb994));
        EXPECT(0xfe, gbc.readMem(0xb995));
        // CB FE 037E
        gbc.setState(0xddf, 0xd98f, 0x36a0, 0x50b, 0x8285, 0xa44a, 0x1, 0x1);
        gbc.writeMem(0xddf, { 0xcb, 0xfe });
        gbc.writeMem(0xa44a, { 0x6e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa44a));
        // CB FE 0380
        gbc.setState(0x4b0c, 0x7fdc, 0x7420, 0xe72, 0x332b, 0x20c5, 0x1, 0x1);
        gbc.writeMem(0x20c5, { 0xfe });
        gbc.writeMem(0x4b0c, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7fdc, gbc.sp());
        EXPECT(0x4b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 0381
        gbc.setState(0x3f3d, 0x12, 0x3310, 0x5564, 0xd95b, 0x8cd4, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0xfe });
        gbc.writeMem(0x8cd4, { 0x8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x12, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8cd4));
        // CB FE 0382
        gbc.setState(0xa8e3, 0xbf91, 0xc420, 0xba36, 0x37c9, 0xb514, 0x0, 0x0);
        gbc.writeMem(0xa8e3, { 0xcb, 0xfe });
        gbc.writeMem(0xb514, { 0x7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e3));
        EXPECT(0xfe, gbc.readMem(0xa8e4));
        EXPECT(0x87, gbc.readMem(0xb514));
        // CB FE 0384
        gbc.setState(0xbdb1, 0xddd6, 0xd490, 0x7ad1, 0xdd03, 0xd08a, 0x1, 0x0);
        gbc.writeMem(0xbdb1, { 0xcb, 0xfe });
        gbc.writeMem(0xd08a, { 0xd8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xddd6, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb1));
        EXPECT(0xfe, gbc.readMem(0xbdb2));
        EXPECT(0xd8, gbc.readMem(0xd08a));
        // CB FE 0385
        gbc.setState(0x27d, 0xccf3, 0x36d0, 0xd71f, 0xeedd, 0x5b68, 0x0, 0x1);
        gbc.writeMem(0x27d, { 0xcb, 0xfe });
        gbc.writeMem(0x5b68, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xccf3, gbc.sp());
        EXPECT(0x27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0386
        gbc.setState(0x11d7, 0xbef0, 0xefe0, 0xf489, 0x3f9e, 0x8991, 0x0, 0x1);
        gbc.writeMem(0x11d7, { 0xcb, 0xfe });
        gbc.writeMem(0x8991, { 0x4d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbef0, gbc.sp());
        EXPECT(0x11d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8991));
        // CB FE 0387
        gbc.setState(0x7865, 0x5ef4, 0xeb50, 0x9217, 0xaf44, 0xe234, 0x0, 0x0);
        gbc.writeMem(0x7865, { 0xcb, 0xfe });
        gbc.writeMem(0xe234, { 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5ef4, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe234));
        // CB FE 0388
        gbc.setState(0x3985, 0x3352, 0x3380, 0x7697, 0x8823, 0xdf3f, 0x0, 0x0);
        gbc.writeMem(0x3985, { 0xcb, 0xfe });
        gbc.writeMem(0xdf3f, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3352, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdf3f));
        // CB FE 038A
        gbc.setState(0x67b4, 0xc7e9, 0x41e0, 0x224b, 0x2f34, 0xf194, 0x1, 0x0);
        gbc.writeMem(0x67b4, { 0xcb, 0xfe });
        gbc.writeMem(0xf194, { 0x5b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc7e9, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf194));
        // CB FE 038B
        gbc.setState(0x18bf, 0xd4f0, 0x6250, 0xf93b, 0x683c, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x18bf, { 0xcb, 0xfe });
        gbc.writeMem(0x7d06, { 0xc2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 038C
        gbc.setState(0x4be8, 0xe419, 0xcfd0, 0x900b, 0x69e2, 0xc6b3, 0x1, 0x0);
        gbc.writeMem(0x4be8, { 0xcb, 0xfe });
        gbc.writeMem(0xc6b3, { 0x14 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe419, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc6b3));
        // CB FE 038D
        gbc.setState(0xd7e5, 0x5174, 0x5d80, 0x3c10, 0xad0a, 0xd222, 0x1, 0x1);
        gbc.writeMem(0xd222, { 0x89 });
        gbc.writeMem(0xd7e5, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5174, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd222));
        EXPECT(0xcb, gbc.readMem(0xd7e5));
        EXPECT(0xfe, gbc.readMem(0xd7e6));
        // CB FE 038E
        gbc.setState(0xaef2, 0xb88e, 0x53a0, 0xd956, 0x1b20, 0xb61d, 0x0, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0xfe });
        gbc.writeMem(0xb61d, { 0xbd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0xaef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef2));
        EXPECT(0xfe, gbc.readMem(0xaef3));
        EXPECT(0xbd, gbc.readMem(0xb61d));
        // CB FE 038F
        gbc.setState(0xb32d, 0x5c0d, 0xef70, 0xcc3b, 0xee60, 0xf7a8, 0x1, 0x0);
        gbc.writeMem(0xb32d, { 0xcb, 0xfe });
        gbc.writeMem(0xf7a8, { 0x3f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0xb32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32d));
        EXPECT(0xfe, gbc.readMem(0xb32e));
        EXPECT(0xbf, gbc.readMem(0xf7a8));
        // CB FE 0390
        gbc.setState(0x71a8, 0xbe5a, 0xd0b0, 0x7287, 0x7001, 0xba11, 0x0, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xfe });
        gbc.writeMem(0xba11, { 0xae });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xba11));
        // CB FE 0391
        gbc.setState(0xe4c9, 0x9d3b, 0xafc0, 0xf87d, 0x1172, 0xad0, 0x1, 0x1);
        gbc.writeMem(0xad0, { 0xaf });
        gbc.writeMem(0xe4c9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c9));
        EXPECT(0xfe, gbc.readMem(0xe4ca));
        // CB FE 0392
        gbc.setState(0xc60e, 0x2686, 0xc220, 0x71f7, 0x5192, 0xbd00, 0x1, 0x0);
        gbc.writeMem(0xbd00, { 0x99 });
        gbc.writeMem(0xc60e, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0xc610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbd00));
        EXPECT(0xcb, gbc.readMem(0xc60e));
        EXPECT(0xfe, gbc.readMem(0xc60f));
        // CB FE 0393
        gbc.setState(0x4494, 0xb2bc, 0x1b50, 0x54be, 0xf8cc, 0x6104, 0x0, 0x1);
        gbc.writeMem(0x4494, { 0xcb, 0xfe });
        gbc.writeMem(0x6104, { 0xa4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0x4496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 0394
        gbc.setState(0xb2f1, 0x12fd, 0x1b30, 0x506f, 0x34e5, 0xe3ae, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0xfe });
        gbc.writeMem(0xe3ae, { 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x12fd, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0xfe, gbc.readMem(0xb2f2));
        EXPECT(0xf8, gbc.readMem(0xe3ae));
        // CB FE 0395
        gbc.setState(0x9e78, 0xe811, 0xf550, 0xfaa7, 0x27ae, 0xf8c3, 0x1, 0x0);
        gbc.writeMem(0x9e78, { 0xcb, 0xfe });
        gbc.writeMem(0xf8c3, { 0x45 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe811, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e78));
        EXPECT(0xfe, gbc.readMem(0x9e79));
        EXPECT(0xc5, gbc.readMem(0xf8c3));
        // CB FE 0396
        gbc.setState(0x42aa, 0x8a93, 0x41d0, 0xaa, 0x636d, 0x8aaf, 0x0, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0xfe });
        gbc.writeMem(0x8aaf, { 0xf1 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8a93, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8aaf));
        // CB FE 0397
        gbc.setState(0x7700, 0x9228, 0xca30, 0xb001, 0xe910, 0xd683, 0x0, 0x0);
        gbc.writeMem(0x7700, { 0xcb, 0xfe });
        gbc.writeMem(0xd683, { 0xea });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9228, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xd683));
        // CB FE 0398
        gbc.setState(0x5055, 0xf9ec, 0xe0a0, 0x5d30, 0x82de, 0x9c0a, 0x1, 0x1);
        gbc.writeMem(0x5055, { 0xcb, 0xfe });
        gbc.writeMem(0x9c0a, { 0xf4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf9ec, gbc.sp());
        EXPECT(0x5057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9c0a));
        // CB FE 0399
        gbc.setState(0x5cfe, 0x143e, 0x6710, 0xb84e, 0xb7d7, 0x9089, 0x0, 0x1);
        gbc.writeMem(0x5cfe, { 0xcb, 0xfe });
        gbc.writeMem(0x9089, { 0xb7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x143e, gbc.sp());
        EXPECT(0x5d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9089));
        // CB FE 039A
        gbc.setState(0xbce6, 0x3843, 0x3ea0, 0x1476, 0xf504, 0xf9f4, 0x1, 0x0);
        gbc.writeMem(0xbce6, { 0xcb, 0xfe });
        gbc.writeMem(0xf9f4, { 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3843, gbc.sp());
        EXPECT(0xbce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce6));
        EXPECT(0xfe, gbc.readMem(0xbce7));
        EXPECT(0xe8, gbc.readMem(0xf9f4));
        // CB FE 039B
        gbc.setState(0x60f1, 0x66f2, 0x45a0, 0xbbbf, 0xb51f, 0x7d47, 0x1, 0x0);
        gbc.writeMem(0x60f1, { 0xcb, 0xfe });
        gbc.writeMem(0x7d47, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0x60f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 039C
        gbc.setState(0x4a17, 0x9132, 0x160, 0xde37, 0x901c, 0xa89f, 0x1, 0x0);
        gbc.writeMem(0x4a17, { 0xcb, 0xfe });
        gbc.writeMem(0xa89f, { 0x4a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9132, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa89f));
        // CB FE 039D
        gbc.setState(0x2f74, 0xafe8, 0x26a0, 0xafed, 0xb62b, 0x3c13, 0x1, 0x1);
        gbc.writeMem(0x2f74, { 0xcb, 0xfe });
        gbc.writeMem(0x3c13, { 0xcc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 039E
        gbc.setState(0xa015, 0xc75d, 0x5230, 0xeff3, 0x3226, 0xff98, 0x0, 0x0);
        gbc.writeMem(0xa015, { 0xcb, 0xfe });
        gbc.writeMem(0xff98, { 0x95 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc75d, gbc.sp());
        EXPECT(0xa017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa015));
        EXPECT(0xfe, gbc.readMem(0xa016));
        EXPECT(0x95, gbc.readMem(0xff98));
        // CB FE 03A0
        gbc.setState(0xb32a, 0x51e5, 0x3d20, 0xfbb7, 0xad7f, 0x1d86, 0x0, 0x1);
        gbc.writeMem(0x1d86, { 0x8a });
        gbc.writeMem(0xb32a, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x51e5, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xfe, gbc.readMem(0xb32b));
        // CB FE 03A1
        gbc.setState(0x5cb0, 0xcd93, 0x8780, 0x461e, 0xb494, 0x7933, 0x1, 0x0);
        gbc.writeMem(0x5cb0, { 0xcb, 0xfe });
        gbc.writeMem(0x7933, { 0xb6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcd93, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03A3
        gbc.setState(0x3e3e, 0xcdb7, 0xb7b0, 0xeb0a, 0x4070, 0xa81b, 0x1, 0x0);
        gbc.writeMem(0x3e3e, { 0xcb, 0xfe });
        gbc.writeMem(0xa81b, { 0x12 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcdb7, gbc.sp());
        EXPECT(0x3e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa81b));
        // CB FE 03A4
        gbc.setState(0x25bd, 0xc850, 0xa10, 0xfc57, 0x8ae1, 0x9b14, 0x1, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0xfe });
        gbc.writeMem(0x9b14, { 0xbb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b14));
        // CB FE 03A6
        gbc.setState(0x5045, 0x5b31, 0x1200, 0xb8c5, 0x4f41, 0x6993, 0x0, 0x0);
        gbc.writeMem(0x5045, { 0xcb, 0xfe });
        gbc.writeMem(0x6993, { 0xa5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x5047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03A7
        gbc.setState(0x36c4, 0xd875, 0xe220, 0xfa80, 0xbaf5, 0x579e, 0x1, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0xfe });
        gbc.writeMem(0x579e, { 0xf4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03A8
        gbc.setState(0xd227, 0xab5f, 0x1000, 0x3974, 0xce15, 0xf922, 0x1, 0x1);
        gbc.writeMem(0xd227, { 0xcb, 0xfe });
        gbc.writeMem(0xf922, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab5f, gbc.sp());
        EXPECT(0xd229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd227));
        EXPECT(0xfe, gbc.readMem(0xd228));
        EXPECT(0xd0, gbc.readMem(0xf922));
        // CB FE 03A9
        gbc.setState(0xccb3, 0xa1ef, 0x2790, 0xeecd, 0xba23, 0xb73c, 0x1, 0x1);
        gbc.writeMem(0xb73c, { 0x43 });
        gbc.writeMem(0xccb3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xb73c));
        EXPECT(0xcb, gbc.readMem(0xccb3));
        EXPECT(0xfe, gbc.readMem(0xccb4));
        // CB FE 03AA
        gbc.setState(0xe870, 0xd15e, 0x1ad0, 0x566b, 0xdac3, 0x4df, 0x1, 0x1);
        gbc.writeMem(0x4df, { 0x88 });
        gbc.writeMem(0xe870, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd15e, gbc.sp());
        EXPECT(0xe872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe870));
        EXPECT(0xfe, gbc.readMem(0xe871));
        // CB FE 03AB
        gbc.setState(0x8b76, 0xdbde, 0x10, 0xfc3a, 0x7f57, 0xe83e, 0x1, 0x1);
        gbc.writeMem(0x8b76, { 0xcb, 0xfe });
        gbc.writeMem(0xe83e, { 0xc8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdbde, gbc.sp());
        EXPECT(0x8b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b76));
        EXPECT(0xfe, gbc.readMem(0x8b77));
        EXPECT(0xc8, gbc.readMem(0xe83e));
        // CB FE 03AC
        gbc.setState(0x7b62, 0x584, 0xa360, 0xc695, 0x1c34, 0x80a2, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xfe });
        gbc.writeMem(0x80a2, { 0xe7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x80a2));
        // CB FE 03AF
        gbc.setState(0x50cb, 0xbf49, 0xd420, 0x7655, 0x280d, 0x32d5, 0x0, 0x0);
        gbc.writeMem(0x32d5, { 0xde });
        gbc.writeMem(0x50cb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf49, gbc.sp());
        EXPECT(0x50cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03B1
        gbc.setState(0xaf7f, 0xaa06, 0xb740, 0x5fcb, 0xbb9d, 0x2fd4, 0x1, 0x1);
        gbc.writeMem(0x2fd4, { 0xde });
        gbc.writeMem(0xaf7f, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaa06, gbc.sp());
        EXPECT(0xaf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7f));
        EXPECT(0xfe, gbc.readMem(0xaf80));
        // CB FE 03B2
        gbc.setState(0x7afb, 0x1290, 0x60e0, 0x2ad2, 0xee91, 0x89f2, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0xfe });
        gbc.writeMem(0x89f2, { 0x74 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x89f2));
        // CB FE 03B3
        gbc.setState(0xa9a3, 0xdd02, 0x6750, 0x9126, 0x5f2e, 0x25ba, 0x0, 0x1);
        gbc.writeMem(0x25ba, { 0xf1 });
        gbc.writeMem(0xa9a3, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdd02, gbc.sp());
        EXPECT(0xa9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a3));
        EXPECT(0xfe, gbc.readMem(0xa9a4));
        // CB FE 03B4
        gbc.setState(0xe4f5, 0x8c74, 0x4790, 0x732, 0x3a72, 0xeb44, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0xcb, 0xfe });
        gbc.writeMem(0xeb44, { 0x97 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8c74, gbc.sp());
        EXPECT(0xe4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f5));
        EXPECT(0xfe, gbc.readMem(0xe4f6));
        EXPECT(0x97, gbc.readMem(0xeb44));
        // CB FE 03B7
        gbc.setState(0xd488, 0x6263, 0xd520, 0xa78e, 0x9c3c, 0x46fb, 0x1, 0x0);
        gbc.writeMem(0x46fb, { 0xa1 });
        gbc.writeMem(0xd488, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6263, gbc.sp());
        EXPECT(0xd48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd488));
        EXPECT(0xfe, gbc.readMem(0xd489));
        // CB FE 03B8
        gbc.setState(0x5868, 0x8b35, 0xb100, 0x7aff, 0x5ca6, 0x40b5, 0x0, 0x0);
        gbc.writeMem(0x40b5, { 0x90 });
        gbc.writeMem(0x5868, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8b35, gbc.sp());
        EXPECT(0x586a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03BB
        gbc.setState(0x85eb, 0xcc62, 0x2020, 0xa5b9, 0x932e, 0x778e, 0x1, 0x1);
        gbc.writeMem(0x778e, { 0xed });
        gbc.writeMem(0x85eb, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85eb));
        EXPECT(0xfe, gbc.readMem(0x85ec));
        // CB FE 03BC
        gbc.setState(0x3ee5, 0x858c, 0x5980, 0x6091, 0xfb4, 0x4f6f, 0x0, 0x1);
        gbc.writeMem(0x3ee5, { 0xcb, 0xfe });
        gbc.writeMem(0x4f6f, { 0x8c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x858c, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03BE
        gbc.setState(0x3251, 0x102e, 0x17b0, 0xcfab, 0xedc5, 0xe58, 0x1, 0x0);
        gbc.writeMem(0xe58, { 0xd5 });
        gbc.writeMem(0x3251, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x102e, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 03BF
        gbc.setState(0xb5a8, 0x675, 0x8c80, 0x8024, 0x227a, 0x546a, 0x1, 0x0);
        gbc.writeMem(0x546a, { 0xac });
        gbc.writeMem(0xb5a8, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0xb5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a8));
        EXPECT(0xfe, gbc.readMem(0xb5a9));
        // CB FE 03C0
        gbc.setState(0x9066, 0x370e, 0x26f0, 0xbcd3, 0x11d4, 0x6162, 0x1, 0x1);
        gbc.writeMem(0x6162, { 0xfa });
        gbc.writeMem(0x9066, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x370e, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9066));
        EXPECT(0xfe, gbc.readMem(0x9067));
        // CB FE 03C1
        gbc.setState(0x61d9, 0x9092, 0x2c70, 0xd20a, 0xc6f4, 0xed7e, 0x0, 0x1);
        gbc.writeMem(0x61d9, { 0xcb, 0xfe });
        gbc.writeMem(0xed7e, { 0xc6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0x61db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xed7e));
        // CB FE 03C4
        gbc.setState(0x1865, 0x2dca, 0x9be0, 0x1b9d, 0x7071, 0xef09, 0x0, 0x0);
        gbc.writeMem(0x1865, { 0xcb, 0xfe });
        gbc.writeMem(0xef09, { 0x66 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2dca, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xef09));
        // CB FE 03C6
        gbc.setState(0x9767, 0x19cf, 0xa3b0, 0x2a7b, 0x126b, 0xf3c, 0x0, 0x0);
        gbc.writeMem(0xf3c, { 0xeb });
        gbc.writeMem(0x9767, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x19cf, gbc.sp());
        EXPECT(0x9769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9767));
        EXPECT(0xfe, gbc.readMem(0x9768));
        // CB FE 03C7
        gbc.setState(0x1872, 0x6552, 0x940, 0x9995, 0xe916, 0x8076, 0x0, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0xfe });
        gbc.writeMem(0x8076, { 0x4a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6552, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8076));
        // CB FE 03C9
        gbc.setState(0x8a9, 0x7074, 0xd5e0, 0x2041, 0xfbb5, 0x85fd, 0x0, 0x0);
        gbc.writeMem(0x8a9, { 0xcb, 0xfe });
        gbc.writeMem(0x85fd, { 0x90 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7074, gbc.sp());
        EXPECT(0x8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x85fd));
        // CB FE 03CB
        gbc.setState(0x292a, 0xe692, 0x78c0, 0x9acd, 0xe4e0, 0x589d, 0x0, 0x1);
        gbc.writeMem(0x292a, { 0xcb, 0xfe });
        gbc.writeMem(0x589d, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe692, gbc.sp());
        EXPECT(0x292c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03CC
        gbc.setState(0x59d3, 0x5e82, 0xda0, 0x2ffb, 0x5a5e, 0x5b10, 0x1, 0x0);
        gbc.writeMem(0x59d3, { 0xcb, 0xfe });
        gbc.writeMem(0x5b10, { 0xbc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5e82, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03CD
        gbc.setState(0x5a10, 0x4d6c, 0x3c60, 0x5d7b, 0x9090, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x5a10, { 0xcb, 0xfe });
        gbc.writeMem(0xe0ba, { 0xa3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4d6c, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe0ba));
        // CB FE 03CF
        gbc.setState(0x5ae1, 0xafb, 0x9a0, 0xd2e, 0x4f64, 0x9229, 0x1, 0x0);
        gbc.writeMem(0x5ae1, { 0xcb, 0xfe });
        gbc.writeMem(0x9229, { 0xfa });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x5ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9229));
        // CB FE 03D0
        gbc.setState(0x35d, 0x201a, 0x2340, 0x990c, 0xf786, 0xfae9, 0x0, 0x0);
        gbc.writeMem(0x35d, { 0xcb, 0xfe });
        gbc.writeMem(0xfae9, { 0x53 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0x35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xfae9));
        // CB FE 03D1
        gbc.setState(0x53ef, 0x7010, 0xbd90, 0x214a, 0x3b89, 0x6708, 0x0, 0x0);
        gbc.writeMem(0x53ef, { 0xcb, 0xfe });
        gbc.writeMem(0x6708, { 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FE 03D2
        gbc.setState(0x1655, 0x2f16, 0xd70, 0xb461, 0x2944, 0x83ed, 0x1, 0x1);
        gbc.writeMem(0x1655, { 0xcb, 0xfe });
        gbc.writeMem(0x83ed, { 0x18 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x83ed));
        // CB FE 03D5
        gbc.setState(0x3def, 0x4b4a, 0x7da0, 0x9a12, 0xd6c7, 0xa940, 0x1, 0x1);
        gbc.writeMem(0x3def, { 0xcb, 0xfe });
        gbc.writeMem(0xa940, { 0xf8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4b4a, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa940));
        // CB FE 03D6
        gbc.setState(0x1e65, 0xbda0, 0x1940, 0xd311, 0x7a0c, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xcb, 0xfe });
        gbc.writeMem(0x6668, { 0xf7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0x1e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03D7
        gbc.setState(0xaa84, 0xad8e, 0xb7a0, 0x69e7, 0xfabe, 0xa6ab, 0x1, 0x0);
        gbc.writeMem(0xa6ab, { 0x10 });
        gbc.writeMem(0xaa84, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa6ab));
        EXPECT(0xcb, gbc.readMem(0xaa84));
        EXPECT(0xfe, gbc.readMem(0xaa85));
        // CB FE 03D8
        gbc.setState(0x44a9, 0x6226, 0xd290, 0x5b0f, 0x5564, 0xcd63, 0x1, 0x1);
        gbc.writeMem(0x44a9, { 0xcb, 0xfe });
        gbc.writeMem(0xcd63, { 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0x44ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xcd63));
        // CB FE 03D9
        gbc.setState(0x677f, 0x71dc, 0x4930, 0xecc9, 0xc925, 0x95d1, 0x1, 0x1);
        gbc.writeMem(0x677f, { 0xcb, 0xfe });
        gbc.writeMem(0x95d1, { 0x9b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x71dc, gbc.sp());
        EXPECT(0x6781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x95d1));
        // CB FE 03DA
        gbc.setState(0x20c4, 0x62d8, 0xc840, 0xa2a6, 0xa5e9, 0xd3cc, 0x0, 0x1);
        gbc.writeMem(0x20c4, { 0xcb, 0xfe });
        gbc.writeMem(0xd3cc, { 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x20c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd3cc));
        // CB FE 03DB
        gbc.setState(0x16b, 0x81d2, 0xe820, 0xa6e2, 0x8c91, 0x2982, 0x0, 0x0);
        gbc.writeMem(0x16b, { 0xcb, 0xfe });
        gbc.writeMem(0x2982, { 0xad });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x81d2, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03DD
        gbc.setState(0x5fc4, 0x40d7, 0xfbd0, 0xd190, 0x9d48, 0xc1a2, 0x0, 0x0);
        gbc.writeMem(0x5fc4, { 0xcb, 0xfe });
        gbc.writeMem(0xc1a2, { 0x3b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x40d7, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc1a2));
        // CB FE 03DF
        gbc.setState(0x869c, 0xf04d, 0x15c0, 0x2376, 0x8e46, 0x887f, 0x1, 0x0);
        gbc.writeMem(0x869c, { 0xcb, 0xfe });
        gbc.writeMem(0x887f, { 0x3a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf04d, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869c));
        EXPECT(0xfe, gbc.readMem(0x869d));
        EXPECT(0xba, gbc.readMem(0x887f));
        // CB FE 03E0
        gbc.setState(0x4a6a, 0x1eea, 0x56e0, 0x9592, 0x590c, 0x6c0a, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xcb, 0xfe });
        gbc.writeMem(0x6c0a, { 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FE 03E1
        gbc.setState(0x36ca, 0x4fd0, 0x9290, 0xc30e, 0x6798, 0xb298, 0x1, 0x0);
        gbc.writeMem(0x36ca, { 0xcb, 0xfe });
        gbc.writeMem(0xb298, { 0xca });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4fd0, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb298));
        // CB FE 03E2
        gbc.setState(0xad81, 0x633a, 0xe430, 0x502f, 0x2888, 0x1d80, 0x1, 0x0);
        gbc.writeMem(0x1d80, { 0xbb });
        gbc.writeMem(0xad81, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0xad83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad81));
        EXPECT(0xfe, gbc.readMem(0xad82));
        // CB FE 03E5
        gbc.setState(0x95e9, 0xc850, 0xa4a0, 0xf7da, 0xaf26, 0xc098, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0xfe });
        gbc.writeMem(0xc098, { 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc850, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e9));
        EXPECT(0xfe, gbc.readMem(0x95ea));
        EXPECT(0xb0, gbc.readMem(0xc098));
        // CB FE 03E6
        gbc.setState(0xd5e9, 0xd0a7, 0xc730, 0x4b39, 0x6438, 0x2871, 0x1, 0x0);
        gbc.writeMem(0x2871, { 0xdb });
        gbc.writeMem(0xd5e9, { 0xcb, 0xfe });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e9));
        EXPECT(0xfe, gbc.readMem(0xd5ea));
        // CB FE 03E7
        gbc.setState(0x22e8, 0x4728, 0x9f20, 0x3ee1, 0xa9cb, 0xf420, 0x0, 0x1);
        gbc.writeMem(0x22e8, { 0xcb, 0xfe });
        gbc.writeMem(0xf420, { 0x31 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4728, gbc.sp());
        EXPECT(0x22ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf420));
    }
