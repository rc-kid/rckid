    TEST(gbcemu, opcode_a3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A3 0001
        gbc.setState(0x5e8, 0xbaba, 0xf850, 0x47be, 0x9e48, 0x1a2b, 0x1, 0x0);
        gbc.writeMem(0x5e8, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0002
        gbc.setState(0x4d2e, 0xf3a1, 0x4860, 0x2284, 0xb341, 0x1968, 0x0, 0x1);
        gbc.writeMem(0x4d2e, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf3a1, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0003
        gbc.setState(0x8585, 0xe82b, 0x91c0, 0xa44, 0x54e9, 0x540a, 0x1, 0x1);
        gbc.writeMem(0x8585, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8585));
        // A3 0004
        gbc.setState(0xc8f5, 0xb2a3, 0xb10, 0xfbce, 0xf70b, 0x6d71, 0x0, 0x1);
        gbc.writeMem(0xc8f5, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc8f5));
        // A3 0005
        gbc.setState(0x3d82, 0x3df8, 0x6190, 0x6096, 0x3898, 0xda89, 0x0, 0x0);
        gbc.writeMem(0x3d82, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3df8, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0006
        gbc.setState(0x6bc7, 0x66e7, 0xb2e0, 0x7100, 0x26a2, 0xd6e6, 0x0, 0x1);
        gbc.writeMem(0x6bc7, { 0xa3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x66e7, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0007
        gbc.setState(0x2746, 0xf296, 0xbcf0, 0x9245, 0xa147, 0x5c54, 0x1, 0x0);
        gbc.writeMem(0x2746, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf296, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0008
        gbc.setState(0xfa7, 0x1446, 0x46e0, 0x773a, 0xdc73, 0x2391, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1446, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0009
        gbc.setState(0x6942, 0x61c4, 0xb350, 0x3d37, 0x6492, 0x1543, 0x1, 0x0);
        gbc.writeMem(0x6942, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x61c4, gbc.sp());
        EXPECT(0x6943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 000A
        gbc.setState(0x8b, 0xdab, 0x2d20, 0x4c1f, 0x643e, 0x4d53, 0x1, 0x0);
        gbc.writeMem(0x8b, { 0xa3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 000C
        gbc.setState(0x123a, 0xb9cf, 0x5e0, 0x25f1, 0x72d2, 0x2870, 0x1, 0x1);
        gbc.writeMem(0x123a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 000D
        gbc.setState(0x66a3, 0x3be6, 0xec60, 0xcabe, 0x760b, 0x7dea, 0x1, 0x1);
        gbc.writeMem(0x66a3, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x66a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 000E
        gbc.setState(0x762b, 0xcb10, 0x5e50, 0xe75f, 0xcf26, 0xcfff, 0x0, 0x1);
        gbc.writeMem(0x762b, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb10, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 000F
        gbc.setState(0x7623, 0x3365, 0x3180, 0xa401, 0x53a0, 0xc390, 0x0, 0x0);
        gbc.writeMem(0x7623, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3365, gbc.sp());
        EXPECT(0x7624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0010
        gbc.setState(0x9336, 0xe07c, 0xc7d0, 0x983, 0xc68b, 0x682, 0x1, 0x1);
        gbc.writeMem(0x9336, { 0xa3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe07c, gbc.sp());
        EXPECT(0x9337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9336));
        // A3 0011
        gbc.setState(0x5cba, 0xa541, 0x31b0, 0x92, 0x77bd, 0xdb83, 0x1, 0x1);
        gbc.writeMem(0x5cba, { 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa541, gbc.sp());
        EXPECT(0x5cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0012
        gbc.setState(0xc9a9, 0x718b, 0xcc00, 0x75ae, 0xbbd8, 0x8845, 0x0, 0x1);
        gbc.writeMem(0xc9a9, { 0xa3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x718b, gbc.sp());
        EXPECT(0xc9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc9a9));
        // A3 0013
        gbc.setState(0xcffb, 0xcdaa, 0x9810, 0xfe8, 0x411f, 0x6ab7, 0x1, 0x0);
        gbc.writeMem(0xcffb, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcdaa, gbc.sp());
        EXPECT(0xcffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcffb));
        // A3 0014
        gbc.setState(0x632e, 0x20c2, 0xec80, 0xacce, 0x95b, 0x6409, 0x0, 0x0);
        gbc.writeMem(0x632e, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x20c2, gbc.sp());
        EXPECT(0x632f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0015
        gbc.setState(0xf90, 0x81ed, 0x9170, 0xdb40, 0x2544, 0x47a8, 0x1, 0x0);
        gbc.writeMem(0xf90, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x81ed, gbc.sp());
        EXPECT(0xf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0016
        gbc.setState(0xca3d, 0x8468, 0xaac0, 0xcc0, 0x19ea, 0xb7f, 0x0, 0x0);
        gbc.writeMem(0xca3d, { 0xa3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0xca3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xca3d));
        // A3 0017
        gbc.setState(0x245d, 0xe7b6, 0xc960, 0x251e, 0x2e9e, 0x1473, 0x1, 0x1);
        gbc.writeMem(0x245d, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0018
        gbc.setState(0xae08, 0x9a3f, 0xd320, 0xfd5e, 0x7cbd, 0xef65, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9a3f, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xae08));
        // A3 0019
        gbc.setState(0x1fee, 0xa917, 0x9a80, 0xf09e, 0xff74, 0x744b, 0x0, 0x1);
        gbc.writeMem(0x1fee, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa917, gbc.sp());
        EXPECT(0x1fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 001A
        gbc.setState(0xc365, 0x5154, 0xeec0, 0xf549, 0x11e0, 0x139d, 0x1, 0x1);
        gbc.writeMem(0xc365, { 0xa3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5154, gbc.sp());
        EXPECT(0xc366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc365));
        // A3 001B
        gbc.setState(0x1c78, 0x14e7, 0x6930, 0x7fd5, 0xbc6b, 0x62b4, 0x1, 0x1);
        gbc.writeMem(0x1c78, { 0xa3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x14e7, gbc.sp());
        EXPECT(0x1c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 001C
        gbc.setState(0x719e, 0xb1e3, 0x4850, 0x987f, 0x4a26, 0x3a3a, 0x1, 0x1);
        gbc.writeMem(0x719e, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb1e3, gbc.sp());
        EXPECT(0x719f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 001D
        gbc.setState(0x545, 0x26c6, 0xbc90, 0xb004, 0x6ffc, 0xe698, 0x1, 0x0);
        gbc.writeMem(0x545, { 0xa3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x26c6, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 001E
        gbc.setState(0xdf27, 0xf2d6, 0x21b0, 0xa89, 0x50e, 0x7150, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf2d6, gbc.sp());
        EXPECT(0xdf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdf27));
        // A3 001F
        gbc.setState(0x602c, 0x9651, 0x30f0, 0x82c4, 0xbc01, 0x669, 0x1, 0x1);
        gbc.writeMem(0x602c, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9651, gbc.sp());
        EXPECT(0x602d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0020
        gbc.setState(0x5c0d, 0x1e6c, 0x1bc0, 0x2640, 0xbcaf, 0xb14d, 0x0, 0x0);
        gbc.writeMem(0x5c0d, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0021
        gbc.setState(0xa369, 0xc4c3, 0xa590, 0x637d, 0x146, 0x29ef, 0x0, 0x0);
        gbc.writeMem(0xa369, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc4c3, gbc.sp());
        EXPECT(0xa36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa369));
        // A3 0022
        gbc.setState(0x4977, 0x2cca, 0x3890, 0xa483, 0x38d4, 0x21b5, 0x1, 0x1);
        gbc.writeMem(0x4977, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2cca, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0023
        gbc.setState(0x3ea8, 0x131f, 0xb7c0, 0x5a5, 0x3671, 0x1bea, 0x0, 0x0);
        gbc.writeMem(0x3ea8, { 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x131f, gbc.sp());
        EXPECT(0x3ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0024
        gbc.setState(0xf6a, 0x4648, 0x6550, 0x6339, 0xe75d, 0xd47c, 0x1, 0x1);
        gbc.writeMem(0xf6a, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4648, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0025
        gbc.setState(0xebad, 0xf087, 0xeb30, 0x2e51, 0x4eb3, 0x7f80, 0x1, 0x0);
        gbc.writeMem(0xebad, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf087, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xebad));
        // A3 0026
        gbc.setState(0x9620, 0x167c, 0xfa00, 0x863, 0x9293, 0x9fa6, 0x0, 0x0);
        gbc.writeMem(0x9620, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9620));
        // A3 0027
        gbc.setState(0x1bbf, 0x1c24, 0x660, 0x7aa7, 0xe497, 0x938, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1c24, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0028
        gbc.setState(0x8c77, 0x1b6e, 0xb140, 0xf36a, 0xda85, 0x7818, 0x1, 0x1);
        gbc.writeMem(0x8c77, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1b6e, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8c77));
        // A3 0029
        gbc.setState(0x4cce, 0x7d29, 0xf3b0, 0xe449, 0x5c1f, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0x4cce, { 0xa3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7d29, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 002A
        gbc.setState(0xc579, 0x1bec, 0xb950, 0xea9c, 0x35, 0x9150, 0x1, 0x0);
        gbc.writeMem(0xc579, { 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1bec, gbc.sp());
        EXPECT(0xc57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc579));
        // A3 002B
        gbc.setState(0xccfd, 0x602e, 0x5020, 0x2c00, 0xdcf, 0x5171, 0x0, 0x0);
        gbc.writeMem(0xccfd, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x602e, gbc.sp());
        EXPECT(0xccfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xccfd));
        // A3 002C
        gbc.setState(0xdf47, 0x938f, 0xe2b0, 0x9a4, 0x3aa3, 0x316b, 0x1, 0x1);
        gbc.writeMem(0xdf47, { 0xa3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x938f, gbc.sp());
        EXPECT(0xdf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdf47));
        // A3 002D
        gbc.setState(0x34a8, 0x512, 0xe3f0, 0x8a12, 0xae53, 0x758f, 0x0, 0x0);
        gbc.writeMem(0x34a8, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x512, gbc.sp());
        EXPECT(0x34a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 002F
        gbc.setState(0xcb8d, 0xbc43, 0x2c60, 0x6c45, 0xc3f4, 0x27df, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0xcb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcb8d));
        // A3 0031
        gbc.setState(0x5ba0, 0x2884, 0x3b40, 0xa12c, 0x82db, 0xfefb, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0xa3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2884, gbc.sp());
        EXPECT(0x5ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0032
        gbc.setState(0xded0, 0x86a2, 0xa5f0, 0xb8db, 0xb10d, 0xe34c, 0x1, 0x1);
        gbc.writeMem(0xded0, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x86a2, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xded0));
        // A3 0033
        gbc.setState(0x363, 0xef11, 0xe880, 0x22b2, 0xde9b, 0xd8b9, 0x1, 0x0);
        gbc.writeMem(0x363, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xef11, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0034
        gbc.setState(0xc87, 0x23b0, 0xd170, 0xcd2f, 0x830d, 0xdb6c, 0x1, 0x1);
        gbc.writeMem(0xc87, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x23b0, gbc.sp());
        EXPECT(0xc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0035
        gbc.setState(0xc2f8, 0x9cd1, 0xedf0, 0xa72a, 0x5ade, 0x63ea, 0x1, 0x1);
        gbc.writeMem(0xc2f8, { 0xa3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0xc2f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc2f8));
        // A3 0036
        gbc.setState(0xb25b, 0x3c6e, 0x74d0, 0x4570, 0x204c, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0xb25b, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3c6e, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb25b));
        // A3 0037
        gbc.setState(0x602, 0x67fd, 0xc820, 0xd6d, 0x12f1, 0x5ec9, 0x0, 0x1);
        gbc.writeMem(0x602, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0x603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0038
        gbc.setState(0xb38b, 0xd7c5, 0x7de0, 0x6163, 0xb157, 0x3b82, 0x0, 0x1);
        gbc.writeMem(0xb38b, { 0xa3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0xb38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb38b));
        // A3 0039
        gbc.setState(0x7fdc, 0x327, 0xcca0, 0x8bd7, 0x607c, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x7fdc, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 003A
        gbc.setState(0x1d96, 0xec74, 0x4500, 0xccaf, 0x9f0b, 0x60ed, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 003B
        gbc.setState(0x5ce, 0x24a9, 0xd5c0, 0xf794, 0x2cfa, 0x5720, 0x1, 0x1);
        gbc.writeMem(0x5ce, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 003C
        gbc.setState(0x2594, 0x3b82, 0xa790, 0x9926, 0xd4f2, 0x2104, 0x1, 0x0);
        gbc.writeMem(0x2594, { 0xa3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0x2595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 003D
        gbc.setState(0xcbef, 0x36af, 0x720, 0x9ffd, 0x9878, 0xa20b, 0x1, 0x0);
        gbc.writeMem(0xcbef, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x36af, gbc.sp());
        EXPECT(0xcbf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcbef));
        // A3 003E
        gbc.setState(0xc3b8, 0x3593, 0x7f0, 0x603a, 0x8275, 0x1549, 0x1, 0x1);
        gbc.writeMem(0xc3b8, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3593, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc3b8));
        // A3 003F
        gbc.setState(0x6bdb, 0xfa62, 0xa690, 0x55, 0x45e3, 0x75f, 0x0, 0x0);
        gbc.writeMem(0x6bdb, { 0xa3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfa62, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0041
        gbc.setState(0xe40e, 0x7c4c, 0x29e0, 0x1a0b, 0x2615, 0x78bd, 0x0, 0x0);
        gbc.writeMem(0xe40e, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0xe40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe40e));
        // A3 0042
        gbc.setState(0x4c87, 0xd14e, 0xfca0, 0x2c1d, 0x78df, 0xa1f4, 0x0, 0x1);
        gbc.writeMem(0x4c87, { 0xa3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x4c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0043
        gbc.setState(0xc582, 0xdb25, 0xca00, 0x97b5, 0xfb3e, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0xc582, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0xc583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc582));
        // A3 0044
        gbc.setState(0x8bf1, 0xd307, 0x26e0, 0xa504, 0xaefa, 0x34e6, 0x1, 0x1);
        gbc.writeMem(0x8bf1, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd307, gbc.sp());
        EXPECT(0x8bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8bf1));
        // A3 0045
        gbc.setState(0xe6fa, 0xce9d, 0xa550, 0x4491, 0x1b8d, 0x9056, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0xa3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0xe6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe6fa));
        // A3 0046
        gbc.setState(0x5aaf, 0x7359, 0x39d0, 0x8226, 0xf7b1, 0xb380, 0x0, 0x0);
        gbc.writeMem(0x5aaf, { 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7359, gbc.sp());
        EXPECT(0x5ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0047
        gbc.setState(0x790f, 0x9332, 0xc50, 0x8cc1, 0x4c8, 0xfa3c, 0x0, 0x0);
        gbc.writeMem(0x790f, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9332, gbc.sp());
        EXPECT(0x7910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0048
        gbc.setState(0xce5f, 0x2f19, 0xe420, 0xac99, 0x41e3, 0x9e3, 0x1, 0x0);
        gbc.writeMem(0xce5f, { 0xa3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xce60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xce5f));
        // A3 0049
        gbc.setState(0xab19, 0xdcb0, 0xd330, 0x8377, 0x2016, 0x859a, 0x0, 0x1);
        gbc.writeMem(0xab19, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdcb0, gbc.sp());
        EXPECT(0xab1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xab19));
        // A3 004A
        gbc.setState(0x7e50, 0xc260, 0x4570, 0xc0fc, 0xc81d, 0x2dc, 0x1, 0x0);
        gbc.writeMem(0x7e50, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc260, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 004B
        gbc.setState(0xea98, 0xd27f, 0xad10, 0x46d2, 0x6668, 0xa4a8, 0x0, 0x1);
        gbc.writeMem(0xea98, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd27f, gbc.sp());
        EXPECT(0xea99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xea98));
        // A3 004C
        gbc.setState(0xef01, 0x28d4, 0xccd0, 0x51a7, 0x7667, 0xd93e, 0x0, 0x0);
        gbc.writeMem(0xef01, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xef01));
        // A3 004D
        gbc.setState(0x19c2, 0x506d, 0xe860, 0xa5ac, 0x4898, 0x7989, 0x0, 0x0);
        gbc.writeMem(0x19c2, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x506d, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 004F
        gbc.setState(0x52, 0x85c5, 0xe310, 0xbc66, 0x8643, 0x3ad3, 0x0, 0x1);
        gbc.writeMem(0x52, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0050
        gbc.setState(0x7b7e, 0x500b, 0xdbd0, 0x9e8c, 0xc996, 0x3040, 0x1, 0x0);
        gbc.writeMem(0x7b7e, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x500b, gbc.sp());
        EXPECT(0x7b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0051
        gbc.setState(0x73db, 0x1f2e, 0xabf0, 0xd81c, 0x330, 0x4bcc, 0x1, 0x0);
        gbc.writeMem(0x73db, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1f2e, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0052
        gbc.setState(0xfd2, 0xd3e5, 0xb6e0, 0x78d8, 0x4191, 0xbd8f, 0x1, 0x0);
        gbc.writeMem(0xfd2, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd3e5, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0053
        gbc.setState(0xcad7, 0x9a75, 0xf1e0, 0xe5d4, 0xcb1d, 0x9d02, 0x0, 0x1);
        gbc.writeMem(0xcad7, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcad7));
        // A3 0054
        gbc.setState(0x16bd, 0xa508, 0x6b80, 0xe567, 0x1a51, 0x300f, 0x1, 0x1);
        gbc.writeMem(0x16bd, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0055
        gbc.setState(0x53c5, 0x7c70, 0xb830, 0x804d, 0x6973, 0x5c40, 0x1, 0x1);
        gbc.writeMem(0x53c5, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7c70, gbc.sp());
        EXPECT(0x53c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0056
        gbc.setState(0x2ce6, 0x6aca, 0x5000, 0x4d0f, 0x4e1f, 0x7372, 0x1, 0x1);
        gbc.writeMem(0x2ce6, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6aca, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0057
        gbc.setState(0xcabf, 0x2017, 0xbe0, 0xce8e, 0x1f65, 0xadc7, 0x1, 0x1);
        gbc.writeMem(0xcabf, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0xcac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcabf));
        // A3 0058
        gbc.setState(0x6bb7, 0x3293, 0x6650, 0x9116, 0xff6b, 0xd1a3, 0x0, 0x0);
        gbc.writeMem(0x6bb7, { 0xa3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3293, gbc.sp());
        EXPECT(0x6bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0059
        gbc.setState(0x2be, 0x8f08, 0x5c0, 0x5537, 0xc700, 0x4170, 0x0, 0x1);
        gbc.writeMem(0x2be, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8f08, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 005A
        gbc.setState(0x9538, 0xaa70, 0xe860, 0x2b7d, 0xdf8e, 0x6c2f, 0x0, 0x1);
        gbc.writeMem(0x9538, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaa70, gbc.sp());
        EXPECT(0x9539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9538));
        // A3 005B
        gbc.setState(0x455f, 0xbeee, 0x6790, 0xd3e7, 0xee41, 0xa310, 0x0, 0x0);
        gbc.writeMem(0x455f, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 005C
        gbc.setState(0xc0f9, 0xcbba, 0x2b50, 0x6a14, 0xcf0f, 0x2c7f, 0x0, 0x1);
        gbc.writeMem(0xc0f9, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcbba, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc0f9));
        // A3 005D
        gbc.setState(0xa693, 0x9a86, 0xf400, 0xe070, 0xd201, 0x8c1b, 0x0, 0x0);
        gbc.writeMem(0xa693, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9a86, gbc.sp());
        EXPECT(0xa694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa693));
        // A3 005E
        gbc.setState(0x7dc6, 0x5fe3, 0x7170, 0x50fc, 0x9d5c, 0x1779, 0x0, 0x0);
        gbc.writeMem(0x7dc6, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5fe3, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 005F
        gbc.setState(0x80eb, 0xf67c, 0x3520, 0x7555, 0xfe62, 0x1c9a, 0x0, 0x1);
        gbc.writeMem(0x80eb, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x80eb));
        // A3 0060
        gbc.setState(0xd917, 0xe557, 0x9a40, 0x13fe, 0xe374, 0xa9d6, 0x1, 0x1);
        gbc.writeMem(0xd917, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0xd918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd917));
        // A3 0062
        gbc.setState(0x36d, 0x429b, 0xc090, 0xd62, 0x6db5, 0x72d5, 0x1, 0x1);
        gbc.writeMem(0x36d, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x429b, gbc.sp());
        EXPECT(0x36e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0063
        gbc.setState(0x6058, 0x816e, 0xac20, 0xf1d9, 0x6c4a, 0x45a9, 0x1, 0x0);
        gbc.writeMem(0x6058, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x816e, gbc.sp());
        EXPECT(0x6059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0064
        gbc.setState(0xadae, 0x9ddf, 0x5dd0, 0x5703, 0xd32, 0xb5a7, 0x1, 0x0);
        gbc.writeMem(0xadae, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xadae));
        // A3 0065
        gbc.setState(0x3adb, 0xe3e8, 0xfa20, 0x8e55, 0x6829, 0xaa84, 0x1, 0x0);
        gbc.writeMem(0x3adb, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe3e8, gbc.sp());
        EXPECT(0x3adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0066
        gbc.setState(0xc48a, 0xdd4d, 0x6fc0, 0x73e1, 0x3e9e, 0xb0b9, 0x1, 0x0);
        gbc.writeMem(0xc48a, { 0xa3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdd4d, gbc.sp());
        EXPECT(0xc48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc48a));
        // A3 0067
        gbc.setState(0x78b5, 0x2266, 0x2c20, 0x676c, 0xc064, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0x78b5, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0x78b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0068
        gbc.setState(0xc4fa, 0x457f, 0x4610, 0x60b1, 0xfcea, 0x276a, 0x0, 0x0);
        gbc.writeMem(0xc4fa, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc4fa));
        // A3 0069
        gbc.setState(0xdbb1, 0xacf, 0xfb00, 0xac5d, 0x939c, 0x911a, 0x1, 0x0);
        gbc.writeMem(0xdbb1, { 0xa3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xacf, gbc.sp());
        EXPECT(0xdbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdbb1));
        // A3 006A
        gbc.setState(0x4bdf, 0xe60a, 0xfc00, 0xdd92, 0xd062, 0xd2e8, 0x0, 0x0);
        gbc.writeMem(0x4bdf, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0x4be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 006B
        gbc.setState(0x1ceb, 0xb854, 0x4500, 0x4436, 0xf0f7, 0x113d, 0x1, 0x1);
        gbc.writeMem(0x1ceb, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb854, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 006C
        gbc.setState(0xba0d, 0x89e, 0xf5d0, 0xadcd, 0xa9f0, 0x6430, 0x1, 0x1);
        gbc.writeMem(0xba0d, { 0xa3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0xba0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xba0d));
        // A3 006D
        gbc.setState(0x68d1, 0xbc38, 0xff00, 0x35c, 0x7c1f, 0x4d95, 0x1, 0x0);
        gbc.writeMem(0x68d1, { 0xa3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbc38, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 006E
        gbc.setState(0x4484, 0x11a5, 0xfff0, 0x8b28, 0x7042, 0xc8c7, 0x1, 0x0);
        gbc.writeMem(0x4484, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x11a5, gbc.sp());
        EXPECT(0x4485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 006F
        gbc.setState(0xe659, 0x387, 0xf030, 0x4532, 0xc2d5, 0x2849, 0x1, 0x1);
        gbc.writeMem(0xe659, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x387, gbc.sp());
        EXPECT(0xe65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe659));
        // A3 0070
        gbc.setState(0xa050, 0x403e, 0xc890, 0xaa9d, 0xc77a, 0x8263, 0x1, 0x1);
        gbc.writeMem(0xa050, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x403e, gbc.sp());
        EXPECT(0xa051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa050));
        // A3 0071
        gbc.setState(0x9f95, 0xbeae, 0x6cf0, 0x80b7, 0xec3a, 0x64ed, 0x1, 0x0);
        gbc.writeMem(0x9f95, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbeae, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9f95));
        // A3 0072
        gbc.setState(0xc507, 0xed26, 0xc420, 0xecff, 0x13f1, 0xb5de, 0x0, 0x1);
        gbc.writeMem(0xc507, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xed26, gbc.sp());
        EXPECT(0xc508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc507));
        // A3 0073
        gbc.setState(0x667, 0x5217, 0xb90, 0xefe6, 0xd595, 0xc63b, 0x0, 0x1);
        gbc.writeMem(0x667, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5217, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0074
        gbc.setState(0x2c02, 0x4c83, 0x1270, 0x8b80, 0x1151, 0x3f99, 0x0, 0x0);
        gbc.writeMem(0x2c02, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0075
        gbc.setState(0x1d1c, 0xdbf1, 0x9190, 0x9e74, 0x7616, 0x5ff3, 0x0, 0x1);
        gbc.writeMem(0x1d1c, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0x1d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0076
        gbc.setState(0xb1bf, 0x5b36, 0x4110, 0x7370, 0x6048, 0xaf14, 0x0, 0x1);
        gbc.writeMem(0xb1bf, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5b36, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb1bf));
        // A3 0077
        gbc.setState(0x2ae2, 0x9d03, 0x1ec0, 0x7767, 0x84db, 0xd753, 0x0, 0x1);
        gbc.writeMem(0x2ae2, { 0xa3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9d03, gbc.sp());
        EXPECT(0x2ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0078
        gbc.setState(0x3c41, 0x1503, 0x9030, 0x6a00, 0x7232, 0x15c3, 0x1, 0x0);
        gbc.writeMem(0x3c41, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0079
        gbc.setState(0x7523, 0xb3cd, 0x4720, 0x22c0, 0x81fe, 0xa91e, 0x1, 0x0);
        gbc.writeMem(0x7523, { 0xa3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb3cd, gbc.sp());
        EXPECT(0x7524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 007A
        gbc.setState(0x702c, 0x50a6, 0x6a20, 0x8c5f, 0x1437, 0x2797, 0x0, 0x0);
        gbc.writeMem(0x702c, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x702d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 007B
        gbc.setState(0x2032, 0x6821, 0xd80, 0x26b0, 0xe236, 0x58c1, 0x0, 0x1);
        gbc.writeMem(0x2032, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6821, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 007C
        gbc.setState(0x1675, 0x972c, 0x5940, 0x18d, 0x59bc, 0x4bde, 0x1, 0x0);
        gbc.writeMem(0x1675, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0x1676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 007E
        gbc.setState(0x7b9d, 0xf2fb, 0xf3c0, 0x9706, 0xd02b, 0xb5b3, 0x0, 0x1);
        gbc.writeMem(0x7b9d, { 0xa3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf2fb, gbc.sp());
        EXPECT(0x7b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 007F
        gbc.setState(0xe5b5, 0xb81d, 0x5040, 0xf836, 0x5663, 0xaa28, 0x1, 0x1);
        gbc.writeMem(0xe5b5, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe5b5));
        // A3 0080
        gbc.setState(0x800b, 0xdda3, 0xe80, 0x9ee, 0x7b68, 0x6ad5, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdda3, gbc.sp());
        EXPECT(0x800c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x800b));
        // A3 0081
        gbc.setState(0xe1a5, 0x361b, 0xcd20, 0xa996, 0x927c, 0x5b8a, 0x1, 0x1);
        gbc.writeMem(0xe1a5, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0xe1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1a5));
        // A3 0082
        gbc.setState(0xacec, 0xe523, 0x39e0, 0x874d, 0xd4d1, 0x28a9, 0x1, 0x0);
        gbc.writeMem(0xacec, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0xaced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xacec));
        // A3 0084
        gbc.setState(0x3883, 0x5eef, 0xa590, 0xb3ae, 0x96e6, 0x9cae, 0x1, 0x0);
        gbc.writeMem(0x3883, { 0xa3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5eef, gbc.sp());
        EXPECT(0x3884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0085
        gbc.setState(0xbde4, 0x33e, 0xf5d0, 0x237, 0xa6fc, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0xbde4, { 0xa3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x33e, gbc.sp());
        EXPECT(0xbde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbde4));
        // A3 0087
        gbc.setState(0xc1e7, 0xc02, 0xc600, 0x5a7, 0xf8d3, 0xc441, 0x1, 0x1);
        gbc.writeMem(0xc1e7, { 0xa3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc02, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc1e7));
        // A3 0088
        gbc.setState(0x20ce, 0x85c1, 0xb400, 0xca2e, 0xff93, 0x66cc, 0x1, 0x1);
        gbc.writeMem(0x20ce, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x85c1, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0089
        gbc.setState(0x658a, 0xce2b, 0x12e0, 0x1c41, 0x95f1, 0x6bf, 0x0, 0x1);
        gbc.writeMem(0x658a, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x658b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 008A
        gbc.setState(0x54ff, 0xe33d, 0xc7e0, 0x6177, 0xdbd8, 0xb0be, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe33d, gbc.sp());
        EXPECT(0x5500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 008B
        gbc.setState(0xb183, 0x8d83, 0xa7d0, 0x4cfa, 0x74b3, 0x250d, 0x0, 0x0);
        gbc.writeMem(0xb183, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8d83, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb183));
        // A3 008C
        gbc.setState(0xd3f, 0x8094, 0xe860, 0x56e, 0x99b7, 0x4c46, 0x0, 0x1);
        gbc.writeMem(0xd3f, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8094, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 008D
        gbc.setState(0xe96a, 0x870a, 0x22d0, 0x13af, 0xd96e, 0x1412, 0x1, 0x1);
        gbc.writeMem(0xe96a, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe96a));
        // A3 008E
        gbc.setState(0x5794, 0xe5da, 0xa170, 0x2106, 0xb1af, 0xf2b9, 0x0, 0x1);
        gbc.writeMem(0x5794, { 0xa3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 008F
        gbc.setState(0x4acb, 0x3d6b, 0x590, 0x4b49, 0xf52c, 0x3d00, 0x1, 0x1);
        gbc.writeMem(0x4acb, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x4acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0090
        gbc.setState(0x798a, 0x62b4, 0x9720, 0x8e5f, 0x3efa, 0x40ab, 0x0, 0x0);
        gbc.writeMem(0x798a, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0x798b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0091
        gbc.setState(0x2118, 0xaf99, 0x91a0, 0x10fd, 0x2024, 0xa8ad, 0x1, 0x1);
        gbc.writeMem(0x2118, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaf99, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0092
        gbc.setState(0xa34a, 0x308b, 0x4050, 0xed2e, 0xf4e, 0x2487, 0x1, 0x0);
        gbc.writeMem(0xa34a, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0xa34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa34a));
        // A3 0093
        gbc.setState(0xbeb2, 0xcb9, 0x63d0, 0xb98d, 0x6a30, 0x3637, 0x0, 0x1);
        gbc.writeMem(0xbeb2, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb9, gbc.sp());
        EXPECT(0xbeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbeb2));
        // A3 0094
        gbc.setState(0x9720, 0xa61a, 0xe480, 0x5b8d, 0x502f, 0xe6a2, 0x0, 0x1);
        gbc.writeMem(0x9720, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa61a, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9720));
        // A3 0095
        gbc.setState(0xdd63, 0x954d, 0xd2b0, 0x7600, 0xe99, 0x4b4, 0x1, 0x0);
        gbc.writeMem(0xdd63, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x954d, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdd63));
        // A3 0096
        gbc.setState(0x6c00, 0xa005, 0x9350, 0xe354, 0x9445, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0x6c00, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa005, gbc.sp());
        EXPECT(0x6c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0097
        gbc.setState(0x9e79, 0x319e, 0x3640, 0x12a9, 0xa4c9, 0x34b4, 0x0, 0x1);
        gbc.writeMem(0x9e79, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x319e, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9e79));
        // A3 0098
        gbc.setState(0x3e44, 0xc545, 0x25a0, 0x21b9, 0x1de9, 0x946a, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0x3e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0099
        gbc.setState(0x277a, 0x5c75, 0x8a60, 0x2a14, 0xa6f9, 0x7f6c, 0x0, 0x0);
        gbc.writeMem(0x277a, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x277b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 009A
        gbc.setState(0x4250, 0x537b, 0x8260, 0x1e26, 0xdfc1, 0x936d, 0x0, 0x0);
        gbc.writeMem(0x4250, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x537b, gbc.sp());
        EXPECT(0x4251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 009B
        gbc.setState(0x527a, 0x21d3, 0x2280, 0xed4, 0x38c9, 0x9175, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x21d3, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 009C
        gbc.setState(0xd18b, 0x6677, 0xcb40, 0xc828, 0x1d6a, 0x8c91, 0x0, 0x0);
        gbc.writeMem(0xd18b, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd18b));
        // A3 009D
        gbc.setState(0xdc27, 0x472e, 0x1860, 0xcfc5, 0x63f, 0x1758, 0x1, 0x0);
        gbc.writeMem(0xdc27, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0xdc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc27));
        // A3 009E
        gbc.setState(0xa721, 0x17e4, 0xd7a0, 0x556, 0x75b7, 0x2fb0, 0x1, 0x0);
        gbc.writeMem(0xa721, { 0xa3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x17e4, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa721));
        // A3 009F
        gbc.setState(0xa032, 0xa394, 0x4330, 0x9585, 0xff5f, 0x87a, 0x1, 0x1);
        gbc.writeMem(0xa032, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa394, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa032));
        // A3 00A0
        gbc.setState(0x536f, 0xf87a, 0x7200, 0x71b3, 0xc2a3, 0x164d, 0x1, 0x0);
        gbc.writeMem(0x536f, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00A2
        gbc.setState(0x11b2, 0x2a01, 0xc140, 0xf325, 0xb20a, 0x7ca7, 0x0, 0x0);
        gbc.writeMem(0x11b2, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2a01, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00A3
        gbc.setState(0xe65f, 0xb68f, 0x490, 0xd8b8, 0xb4f1, 0x6de8, 0x1, 0x0);
        gbc.writeMem(0xe65f, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb68f, gbc.sp());
        EXPECT(0xe660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe65f));
        // A3 00A4
        gbc.setState(0x59d8, 0xcfac, 0xea50, 0x6ca9, 0x53a, 0x96a2, 0x0, 0x1);
        gbc.writeMem(0x59d8, { 0xa3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcfac, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00A5
        gbc.setState(0xa217, 0xb450, 0x180, 0xc5b2, 0x1617, 0x701c, 0x1, 0x1);
        gbc.writeMem(0xa217, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0xa218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa217));
        // A3 00A6
        gbc.setState(0xcc16, 0x9187, 0xfd40, 0x3ca9, 0xace5, 0xe218, 0x1, 0x1);
        gbc.writeMem(0xcc16, { 0xa3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9187, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcc16));
        // A3 00A7
        gbc.setState(0x7d64, 0x75b1, 0x7330, 0xeca9, 0x4a6b, 0x4899, 0x1, 0x0);
        gbc.writeMem(0x7d64, { 0xa3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75b1, gbc.sp());
        EXPECT(0x7d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00A8
        gbc.setState(0x2a88, 0xc8df, 0x8fa0, 0x524c, 0x3b35, 0xaa04, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc8df, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00A9
        gbc.setState(0xeae9, 0x7ffa, 0x200, 0x42a7, 0xe728, 0x4029, 0x0, 0x1);
        gbc.writeMem(0xeae9, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeae9));
        // A3 00AA
        gbc.setState(0xbd46, 0xeca2, 0x96a0, 0x2834, 0xcd25, 0x5083, 0x0, 0x0);
        gbc.writeMem(0xbd46, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeca2, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbd46));
        // A3 00AB
        gbc.setState(0xaf38, 0x9d1e, 0xe820, 0x6d40, 0x4147, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0xaf38, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9d1e, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaf38));
        // A3 00AC
        gbc.setState(0x5fdd, 0xf837, 0xeda0, 0xf80a, 0x61d1, 0x7669, 0x1, 0x0);
        gbc.writeMem(0x5fdd, { 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf837, gbc.sp());
        EXPECT(0x5fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00AD
        gbc.setState(0xe5e4, 0x51b8, 0x6ee0, 0x4b45, 0xdac9, 0x6e06, 0x1, 0x0);
        gbc.writeMem(0xe5e4, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x51b8, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe5e4));
        // A3 00AE
        gbc.setState(0x7946, 0xb708, 0xb0, 0x3355, 0x65e9, 0x2e2b, 0x0, 0x0);
        gbc.writeMem(0x7946, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb708, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00AF
        gbc.setState(0xe437, 0x813c, 0xf790, 0x7847, 0x6cea, 0xa310, 0x0, 0x1);
        gbc.writeMem(0xe437, { 0xa3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x813c, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe437));
        // A3 00B0
        gbc.setState(0xe1d1, 0xfc6d, 0xa2e0, 0x90b6, 0x299b, 0x4c6e, 0x1, 0x0);
        gbc.writeMem(0xe1d1, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1d1));
        // A3 00B1
        gbc.setState(0xafd, 0x92a5, 0x7030, 0x4ed1, 0x7af3, 0x64b3, 0x0, 0x0);
        gbc.writeMem(0xafd, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92a5, gbc.sp());
        EXPECT(0xafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B2
        gbc.setState(0xab99, 0x22bc, 0x7dc0, 0xd775, 0x425c, 0x3e29, 0x1, 0x0);
        gbc.writeMem(0xab99, { 0xa3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x22bc, gbc.sp());
        EXPECT(0xab9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xab99));
        // A3 00B3
        gbc.setState(0x52dd, 0xe4b3, 0xaf40, 0xbb07, 0x8d3d, 0x2bde, 0x1, 0x1);
        gbc.writeMem(0x52dd, { 0xa3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe4b3, gbc.sp());
        EXPECT(0x52de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B4
        gbc.setState(0x3bf0, 0x6a8d, 0x53d0, 0xae17, 0x311d, 0x34b8, 0x1, 0x1);
        gbc.writeMem(0x3bf0, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a8d, gbc.sp());
        EXPECT(0x3bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B5
        gbc.setState(0x28b0, 0xafc, 0x8ed0, 0xe793, 0x4243, 0x147b, 0x0, 0x0);
        gbc.writeMem(0x28b0, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B6
        gbc.setState(0x16e0, 0xceeb, 0x3980, 0xfdb6, 0xd4b8, 0xba69, 0x0, 0x1);
        gbc.writeMem(0x16e0, { 0xa3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xceeb, gbc.sp());
        EXPECT(0x16e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B7
        gbc.setState(0x3bde, 0xd9d2, 0xac30, 0x9f4b, 0xbcf3, 0x50fc, 0x1, 0x0);
        gbc.writeMem(0x3bde, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd9d2, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00B8
        gbc.setState(0xd563, 0xcc46, 0xe530, 0xf4a, 0xe6e8, 0x1732, 0x0, 0x0);
        gbc.writeMem(0xd563, { 0xa3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcc46, gbc.sp());
        EXPECT(0xd564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd563));
        // A3 00B9
        gbc.setState(0x6c1d, 0xf08, 0x31d0, 0x8ed8, 0xe054, 0xe6f1, 0x0, 0x1);
        gbc.writeMem(0x6c1d, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00BA
        gbc.setState(0xb39d, 0x5dc7, 0x26c0, 0x42f9, 0x2660, 0xb344, 0x1, 0x1);
        gbc.writeMem(0xb39d, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0xb39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb39d));
        // A3 00BB
        gbc.setState(0x9335, 0xf2e6, 0x1dc0, 0xf247, 0x1ad3, 0x411c, 0x0, 0x1);
        gbc.writeMem(0x9335, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9335));
        // A3 00BC
        gbc.setState(0x122e, 0xda3e, 0x33a0, 0xbf06, 0xc377, 0xbf8e, 0x0, 0x1);
        gbc.writeMem(0x122e, { 0xa3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0x122f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00BD
        gbc.setState(0xd0ac, 0xce7f, 0x5290, 0xcf6d, 0xa1ce, 0xbb15, 0x1, 0x0);
        gbc.writeMem(0xd0ac, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce7f, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd0ac));
        // A3 00BE
        gbc.setState(0x4f9e, 0x78c4, 0x8950, 0xdcbd, 0xacbf, 0x82bf, 0x0, 0x0);
        gbc.writeMem(0x4f9e, { 0xa3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00BF
        gbc.setState(0x98e7, 0xc73, 0x8250, 0xe02d, 0x40c2, 0x1f76, 0x1, 0x0);
        gbc.writeMem(0x98e7, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x98e7));
        // A3 00C0
        gbc.setState(0xe032, 0xd9fb, 0xf020, 0x9462, 0xc036, 0xf58a, 0x1, 0x0);
        gbc.writeMem(0xe032, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd9fb, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe032));
        // A3 00C1
        gbc.setState(0x30fc, 0x86a7, 0xe460, 0x55b6, 0xabc2, 0x287d, 0x1, 0x0);
        gbc.writeMem(0x30fc, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x86a7, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00C3
        gbc.setState(0xbaf5, 0x93db, 0x51c0, 0x18ee, 0xd5b6, 0x5bcb, 0x0, 0x0);
        gbc.writeMem(0xbaf5, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0xbaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbaf5));
        // A3 00C4
        gbc.setState(0xd779, 0x13c7, 0x7070, 0x212e, 0x9179, 0x23c1, 0x0, 0x0);
        gbc.writeMem(0xd779, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x13c7, gbc.sp());
        EXPECT(0xd77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd779));
        // A3 00C5
        gbc.setState(0x7ee3, 0xbd5, 0xf7f0, 0xf92d, 0x8390, 0xca60, 0x0, 0x1);
        gbc.writeMem(0x7ee3, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbd5, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00C6
        gbc.setState(0x8ea1, 0xe0f, 0xc1f0, 0x2d55, 0x7b66, 0x5667, 0x0, 0x0);
        gbc.writeMem(0x8ea1, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8ea1));
        // A3 00C7
        gbc.setState(0xdcc9, 0xf122, 0x5b0, 0x9541, 0x4e2b, 0xe998, 0x1, 0x1);
        gbc.writeMem(0xdcc9, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf122, gbc.sp());
        EXPECT(0xdcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdcc9));
        // A3 00C8
        gbc.setState(0x9e16, 0x36de, 0x93b0, 0xb1e4, 0xc608, 0xc8fc, 0x1, 0x1);
        gbc.writeMem(0x9e16, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x36de, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9e16));
        // A3 00C9
        gbc.setState(0x199c, 0xfe9c, 0x2700, 0x4c06, 0xc905, 0xb047, 0x1, 0x1);
        gbc.writeMem(0x199c, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x199d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00CA
        gbc.setState(0x2879, 0x730, 0x9350, 0xe35d, 0x65ae, 0x96e5, 0x1, 0x0);
        gbc.writeMem(0x2879, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00CB
        gbc.setState(0x1887, 0x4bef, 0xe30, 0xdfb1, 0x18d9, 0x9eac, 0x1, 0x0);
        gbc.writeMem(0x1887, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4bef, gbc.sp());
        EXPECT(0x1888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00CC
        gbc.setState(0x7f6b, 0x165e, 0xac20, 0x2af9, 0x3909, 0x54e7, 0x0, 0x0);
        gbc.writeMem(0x7f6b, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x165e, gbc.sp());
        EXPECT(0x7f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00CD
        gbc.setState(0xde84, 0x1c9c, 0x9090, 0xa065, 0xc6fd, 0xe30f, 0x0, 0x1);
        gbc.writeMem(0xde84, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xde84));
        // A3 00CE
        gbc.setState(0xdeb, 0x6ac3, 0x9d50, 0xa889, 0x33c0, 0x829c, 0x1, 0x1);
        gbc.writeMem(0xdeb, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0xdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00CF
        gbc.setState(0xc53a, 0x2582, 0x41c0, 0x274, 0x83d3, 0x4695, 0x1, 0x0);
        gbc.writeMem(0xc53a, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2582, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc53a));
        // A3 00D0
        gbc.setState(0x3d9b, 0x3beb, 0x5d30, 0x541b, 0x1663, 0x72fd, 0x1, 0x0);
        gbc.writeMem(0x3d9b, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3beb, gbc.sp());
        EXPECT(0x3d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00D1
        gbc.setState(0xadc1, 0x96e5, 0x5b40, 0x1ec6, 0xcc92, 0x9b25, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x96e5, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xadc1));
        // A3 00D2
        gbc.setState(0x30e2, 0xac41, 0xd800, 0x138a, 0x5fd6, 0x3b0, 0x1, 0x1);
        gbc.writeMem(0x30e2, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xac41, gbc.sp());
        EXPECT(0x30e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00D4
        gbc.setState(0x6743, 0x9f54, 0x7960, 0x4a66, 0x5e9c, 0x82ca, 0x0, 0x1);
        gbc.writeMem(0x6743, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f54, gbc.sp());
        EXPECT(0x6744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00D5
        gbc.setState(0x8408, 0xcf09, 0xbe30, 0xe441, 0xef1c, 0xffdb, 0x1, 0x0);
        gbc.writeMem(0x8408, { 0xa3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x8409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8408));
        // A3 00D6
        gbc.setState(0x9412, 0x4df6, 0x3610, 0xd2cd, 0x4c26, 0xbea1, 0x1, 0x1);
        gbc.writeMem(0x9412, { 0xa3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4df6, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9412));
        // A3 00D7
        gbc.setState(0x4696, 0x509d, 0x7dc0, 0x54f, 0x913a, 0x4a86, 0x0, 0x0);
        gbc.writeMem(0x4696, { 0xa3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0x4697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00D8
        gbc.setState(0xac58, 0x506c, 0x1520, 0xa606, 0xe0c9, 0x8964, 0x1, 0x1);
        gbc.writeMem(0xac58, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x506c, gbc.sp());
        EXPECT(0xac59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xac58));
        // A3 00D9
        gbc.setState(0x5b9c, 0x76bd, 0x3d70, 0x3a17, 0x4486, 0xb58d, 0x0, 0x1);
        gbc.writeMem(0x5b9c, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0x5b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00DA
        gbc.setState(0x9e86, 0xc020, 0x89e0, 0xf4f9, 0x9e07, 0xf6f7, 0x1, 0x0);
        gbc.writeMem(0x9e86, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc020, gbc.sp());
        EXPECT(0x9e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9e86));
        // A3 00DB
        gbc.setState(0x9082, 0xcc68, 0xd6c0, 0x13c2, 0xa133, 0x47e6, 0x1, 0x1);
        gbc.writeMem(0x9082, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc68, gbc.sp());
        EXPECT(0x9083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9082));
        // A3 00DC
        gbc.setState(0xb41, 0x83dd, 0x3ee0, 0xf335, 0xa5e, 0x33f, 0x0, 0x1);
        gbc.writeMem(0xb41, { 0xa3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00DD
        gbc.setState(0x6080, 0xf538, 0x3b20, 0xc83d, 0x3d66, 0xd2a3, 0x1, 0x1);
        gbc.writeMem(0x6080, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf538, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00DE
        gbc.setState(0xef47, 0xd0e8, 0xdc20, 0xa249, 0x8aeb, 0x10f4, 0x1, 0x1);
        gbc.writeMem(0xef47, { 0xa3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xef47));
        // A3 00DF
        gbc.setState(0xd0f8, 0x9aa0, 0xdf20, 0x5a81, 0x3d89, 0x43cb, 0x0, 0x0);
        gbc.writeMem(0xd0f8, { 0xa3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9aa0, gbc.sp());
        EXPECT(0xd0f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd0f8));
        // A3 00E0
        gbc.setState(0xe3db, 0xd534, 0x1c20, 0x515f, 0xb501, 0xe3db, 0x0, 0x1);
        gbc.writeMem(0xe3db, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd534, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe3db));
        // A3 00E1
        gbc.setState(0xc27b, 0x8ca4, 0x3850, 0xcfd5, 0x772c, 0x701, 0x1, 0x1);
        gbc.writeMem(0xc27b, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8ca4, gbc.sp());
        EXPECT(0xc27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc27b));
        // A3 00E2
        gbc.setState(0xeff2, 0x2334, 0x5710, 0x4523, 0x14e3, 0x4186, 0x0, 0x1);
        gbc.writeMem(0xeff2, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0xeff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeff2));
        // A3 00E3
        gbc.setState(0xad44, 0x462d, 0x3180, 0x4b70, 0x610a, 0xc022, 0x0, 0x1);
        gbc.writeMem(0xad44, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xad45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad44));
        // A3 00E4
        gbc.setState(0x8aa9, 0x616f, 0xe250, 0xcc0c, 0x97f0, 0x35c7, 0x1, 0x0);
        gbc.writeMem(0x8aa9, { 0xa3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0x8aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8aa9));
        // A3 00E5
        gbc.setState(0x42a1, 0xdb43, 0x78f0, 0xec11, 0xb05f, 0x9d99, 0x0, 0x1);
        gbc.writeMem(0x42a1, { 0xa3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00E6
        gbc.setState(0xa8ef, 0xaccf, 0x2ab0, 0x8060, 0xe8c1, 0xa25d, 0x0, 0x1);
        gbc.writeMem(0xa8ef, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaccf, gbc.sp());
        EXPECT(0xa8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa8ef));
        // A3 00E7
        gbc.setState(0x840, 0xdddd, 0xc270, 0xdaba, 0xfe78, 0x1617, 0x0, 0x1);
        gbc.writeMem(0x840, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdddd, gbc.sp());
        EXPECT(0x841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00E8
        gbc.setState(0x3216, 0xfeeb, 0x8620, 0xa453, 0x764a, 0x3601, 0x0, 0x0);
        gbc.writeMem(0x3216, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0x3217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00E9
        gbc.setState(0xc3a9, 0xd8c3, 0xa980, 0xa97a, 0xa8de, 0xcf82, 0x1, 0x1);
        gbc.writeMem(0xc3a9, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd8c3, gbc.sp());
        EXPECT(0xc3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc3a9));
        // A3 00EA
        gbc.setState(0x5409, 0xb927, 0x9960, 0xef96, 0xd0b8, 0xd779, 0x0, 0x1);
        gbc.writeMem(0x5409, { 0xa3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb927, gbc.sp());
        EXPECT(0x540a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00EB
        gbc.setState(0x2cc2, 0xf5a4, 0xd9f0, 0x4037, 0xc1d0, 0xb921, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf5a4, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00EC
        gbc.setState(0x7a33, 0x8e23, 0xeab0, 0xd61c, 0x4ddf, 0x8a8d, 0x1, 0x1);
        gbc.writeMem(0x7a33, { 0xa3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00ED
        gbc.setState(0x6c7f, 0x55d2, 0xd1e0, 0xde34, 0x9910, 0xa716, 0x0, 0x1);
        gbc.writeMem(0x6c7f, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x55d2, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00EE
        gbc.setState(0xe9d1, 0x6698, 0x9c40, 0xb0be, 0xcba7, 0xfced, 0x1, 0x1);
        gbc.writeMem(0xe9d1, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6698, gbc.sp());
        EXPECT(0xe9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe9d1));
        // A3 00EF
        gbc.setState(0x3773, 0xdc49, 0x18c0, 0x933a, 0x808a, 0xd77f, 0x1, 0x0);
        gbc.writeMem(0x3773, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F1
        gbc.setState(0x46df, 0x6831, 0xf7e0, 0x2402, 0xc127, 0x8e9b, 0x0, 0x0);
        gbc.writeMem(0x46df, { 0xa3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6831, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F2
        gbc.setState(0x3b74, 0x94b3, 0x1bc0, 0x65b4, 0xf5e7, 0xf9bf, 0x0, 0x1);
        gbc.writeMem(0x3b74, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F3
        gbc.setState(0x956c, 0xd459, 0xd080, 0x804f, 0x2d71, 0xc568, 0x0, 0x1);
        gbc.writeMem(0x956c, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0x956d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x956c));
        // A3 00F4
        gbc.setState(0x2d0, 0x96b4, 0xcc10, 0x4beb, 0x1ca9, 0xcab, 0x0, 0x1);
        gbc.writeMem(0x2d0, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x96b4, gbc.sp());
        EXPECT(0x2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F5
        gbc.setState(0x1adb, 0x90f9, 0xc760, 0xccc3, 0x472b, 0xd15, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F6
        gbc.setState(0x5271, 0x219c, 0x3b00, 0x147a, 0x76cd, 0x626b, 0x0, 0x0);
        gbc.writeMem(0x5271, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x219c, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F8
        gbc.setState(0xc84, 0x83af, 0xecb0, 0x2579, 0x5454, 0xd2af, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x83af, gbc.sp());
        EXPECT(0xc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00F9
        gbc.setState(0xb40c, 0x8cd9, 0x1440, 0xa954, 0x585c, 0x2c4b, 0x1, 0x1);
        gbc.writeMem(0xb40c, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0xb40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb40c));
        // A3 00FB
        gbc.setState(0xcdf8, 0x70ef, 0x4110, 0x71b9, 0x2d4d, 0x7f3d, 0x0, 0x0);
        gbc.writeMem(0xcdf8, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0xcdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcdf8));
        // A3 00FC
        gbc.setState(0x6138, 0x872b, 0x3c70, 0x6f8e, 0x1b67, 0x36af, 0x0, 0x0);
        gbc.writeMem(0x6138, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x872b, gbc.sp());
        EXPECT(0x6139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00FD
        gbc.setState(0xaf47, 0xbac9, 0x2f50, 0x1d6, 0xa87f, 0x59d3, 0x0, 0x1);
        gbc.writeMem(0xaf47, { 0xa3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbac9, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaf47));
        // A3 00FE
        gbc.setState(0x78c4, 0x66c9, 0xfd40, 0x8744, 0x9bcd, 0xf957, 0x0, 0x1);
        gbc.writeMem(0x78c4, { 0xa3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x66c9, gbc.sp());
        EXPECT(0x78c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 00FF
        gbc.setState(0xc6d9, 0x7311, 0x7c70, 0xe713, 0xed57, 0x909a, 0x0, 0x1);
        gbc.writeMem(0xc6d9, { 0xa3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0xc6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc6d9));
        // A3 0101
        gbc.setState(0xd5e2, 0x99a, 0xcda0, 0x7f43, 0x78c7, 0xd242, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xa3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0xd5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd5e2));
        // A3 0102
        gbc.setState(0x6600, 0xb6d7, 0x80c0, 0x336b, 0x42d0, 0xb663, 0x1, 0x1);
        gbc.writeMem(0x6600, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb6d7, gbc.sp());
        EXPECT(0x6601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0103
        gbc.setState(0xa2f6, 0x23c5, 0xd190, 0xe981, 0x9b66, 0xe641, 0x1, 0x0);
        gbc.writeMem(0xa2f6, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa2f6));
        // A3 0104
        gbc.setState(0x3694, 0xf137, 0x53a0, 0x2df7, 0x171a, 0xa06c, 0x1, 0x1);
        gbc.writeMem(0x3694, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf137, gbc.sp());
        EXPECT(0x3695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0105
        gbc.setState(0xcf6f, 0x81a3, 0xefb0, 0x166, 0xab78, 0xc27f, 0x1, 0x1);
        gbc.writeMem(0xcf6f, { 0xa3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x81a3, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcf6f));
        // A3 0106
        gbc.setState(0x1064, 0xc421, 0x9720, 0xabb1, 0x9945, 0x94f9, 0x1, 0x0);
        gbc.writeMem(0x1064, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc421, gbc.sp());
        EXPECT(0x1065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0107
        gbc.setState(0x5ba5, 0xc76d, 0xc920, 0x6554, 0xe558, 0x87ed, 0x0, 0x1);
        gbc.writeMem(0x5ba5, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc76d, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0108
        gbc.setState(0x97bc, 0x4a14, 0xd70, 0x454f, 0xeff0, 0x4a91, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4a14, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x97bc));
        // A3 0109
        gbc.setState(0x7d06, 0xc862, 0x5150, 0x6ca3, 0x991b, 0xc446, 0x1, 0x0);
        gbc.writeMem(0x7d06, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc862, gbc.sp());
        EXPECT(0x7d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 010A
        gbc.setState(0x5e40, 0xc12d, 0xa480, 0xb92b, 0xc363, 0xb736, 0x0, 0x1);
        gbc.writeMem(0x5e40, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc12d, gbc.sp());
        EXPECT(0x5e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 010B
        gbc.setState(0xb323, 0xecd5, 0x26a0, 0x61ed, 0x11b0, 0x8451, 0x1, 0x0);
        gbc.writeMem(0xb323, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0xb324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb323));
        // A3 010D
        gbc.setState(0xd8c4, 0x31b, 0x60a0, 0xcc78, 0x5d78, 0x2066, 0x1, 0x1);
        gbc.writeMem(0xd8c4, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0xd8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd8c4));
        // A3 010E
        gbc.setState(0xc262, 0x4aef, 0x630, 0x9d08, 0x7b9a, 0x8c7, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4aef, gbc.sp());
        EXPECT(0xc263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc262));
        // A3 010F
        gbc.setState(0xeb18, 0x40ba, 0xeb20, 0x12b4, 0xc95d, 0x889d, 0x1, 0x1);
        gbc.writeMem(0xeb18, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x40ba, gbc.sp());
        EXPECT(0xeb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeb18));
        // A3 0114
        gbc.setState(0x17b0, 0xc45b, 0xf990, 0x21af, 0x88d, 0xc1c6, 0x0, 0x1);
        gbc.writeMem(0x17b0, { 0xa3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x17b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0115
        gbc.setState(0xd0b0, 0x8e7, 0xa2e0, 0xb56e, 0x2a5c, 0x3a1d, 0x1, 0x0);
        gbc.writeMem(0xd0b0, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8e7, gbc.sp());
        EXPECT(0xd0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd0b0));
        // A3 0116
        gbc.setState(0x2c06, 0x90b4, 0x5ed0, 0x2098, 0x734e, 0xe477, 0x1, 0x0);
        gbc.writeMem(0x2c06, { 0xa3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0x2c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0117
        gbc.setState(0x644, 0x13b0, 0x14d0, 0x96f9, 0x4afa, 0x57e8, 0x0, 0x0);
        gbc.writeMem(0x644, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x13b0, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0118
        gbc.setState(0x8676, 0xfe1a, 0x90f0, 0x935d, 0xa1cf, 0xbc52, 0x1, 0x1);
        gbc.writeMem(0x8676, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0x8677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8676));
        // A3 0119
        gbc.setState(0xd412, 0x49ed, 0xea60, 0x377b, 0x9b9f, 0xac1e, 0x1, 0x1);
        gbc.writeMem(0xd412, { 0xa3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0xd413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd412));
        // A3 011A
        gbc.setState(0x94fa, 0x84c2, 0x67d0, 0x2d87, 0xafb3, 0x4df2, 0x0, 0x1);
        gbc.writeMem(0x94fa, { 0xa3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x84c2, gbc.sp());
        EXPECT(0x94fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x94fa));
        // A3 011B
        gbc.setState(0x4160, 0x82e7, 0xd940, 0x9f04, 0x1b4, 0xc92f, 0x1, 0x1);
        gbc.writeMem(0x4160, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x82e7, gbc.sp());
        EXPECT(0x4161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 011C
        gbc.setState(0x25be, 0x89e8, 0x5b30, 0x2ab3, 0x511d, 0x8135, 0x1, 0x1);
        gbc.writeMem(0x25be, { 0xa3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 011D
        gbc.setState(0x3ae3, 0x4a40, 0x3130, 0xa765, 0xad93, 0x2ed, 0x1, 0x1);
        gbc.writeMem(0x3ae3, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a40, gbc.sp());
        EXPECT(0x3ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 011E
        gbc.setState(0x5d6e, 0x784d, 0x4a10, 0xf8c3, 0x6758, 0xd6ab, 0x1, 0x0);
        gbc.writeMem(0x5d6e, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0x5d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 011F
        gbc.setState(0x92cf, 0xfcc9, 0x1940, 0xb41f, 0x34d7, 0x3f73, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfcc9, gbc.sp());
        EXPECT(0x92d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x92cf));
        // A3 0120
        gbc.setState(0x20fc, 0x3c1f, 0xafd0, 0x6f49, 0x48e4, 0xcc52, 0x1, 0x0);
        gbc.writeMem(0x20fc, { 0xa3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0x20fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0121
        gbc.setState(0xc1f1, 0x3280, 0x7730, 0xf67d, 0x6e12, 0x8670, 0x1, 0x0);
        gbc.writeMem(0xc1f1, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3280, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc1f1));
        // A3 0122
        gbc.setState(0xdae8, 0xe638, 0xc260, 0x3ee8, 0xd009, 0xb97d, 0x0, 0x1);
        gbc.writeMem(0xdae8, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdae8));
        // A3 0123
        gbc.setState(0x3713, 0x764b, 0x6c20, 0xe5c5, 0xe053, 0x22cf, 0x1, 0x0);
        gbc.writeMem(0x3713, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0124
        gbc.setState(0x68aa, 0x5915, 0xde20, 0x3c8c, 0x3155, 0xb913, 0x1, 0x1);
        gbc.writeMem(0x68aa, { 0xa3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5915, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0125
        gbc.setState(0x7631, 0xf2b8, 0xd8d0, 0x6e89, 0x2116, 0xd458, 0x1, 0x0);
        gbc.writeMem(0x7631, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0126
        gbc.setState(0x1313, 0x236e, 0x71b0, 0xf44b, 0xa7c4, 0xb59e, 0x0, 0x1);
        gbc.writeMem(0x1313, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x236e, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0127
        gbc.setState(0x9647, 0xa70, 0x94e0, 0x78dc, 0x3d70, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0x9647, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0x9648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9647));
        // A3 0128
        gbc.setState(0x6e7d, 0x44c8, 0xc960, 0x6994, 0x8cc6, 0x1bf3, 0x0, 0x0);
        gbc.writeMem(0x6e7d, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0129
        gbc.setState(0x855b, 0x3711, 0x22b0, 0xd0cd, 0x2f6a, 0xcd84, 0x0, 0x0);
        gbc.writeMem(0x855b, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3711, gbc.sp());
        EXPECT(0x855c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x855b));
        // A3 012B
        gbc.setState(0x4251, 0x8be7, 0xff30, 0x9c34, 0xb6d8, 0x1ae3, 0x0, 0x0);
        gbc.writeMem(0x4251, { 0xa3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8be7, gbc.sp());
        EXPECT(0x4252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 012C
        gbc.setState(0x5be1, 0xb5d8, 0xb240, 0x5df0, 0xdd4b, 0xf87c, 0x0, 0x0);
        gbc.writeMem(0x5be1, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x5be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 012D
        gbc.setState(0xa9bd, 0x17ec, 0x21b0, 0xcfcf, 0x259d, 0x6c10, 0x1, 0x1);
        gbc.writeMem(0xa9bd, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x17ec, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa9bd));
        // A3 012E
        gbc.setState(0x37dc, 0x3618, 0x4d60, 0x6e93, 0x76b9, 0x283d, 0x1, 0x1);
        gbc.writeMem(0x37dc, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 012F
        gbc.setState(0xc013, 0x3757, 0xcb50, 0xda02, 0x5191, 0x890a, 0x0, 0x1);
        gbc.writeMem(0xc013, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3757, gbc.sp());
        EXPECT(0xc014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc013));
        // A3 0130
        gbc.setState(0xbf49, 0xa3c, 0x8ba0, 0x9fd8, 0x681, 0x8528, 0x0, 0x0);
        gbc.writeMem(0xbf49, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0xbf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbf49));
        // A3 0131
        gbc.setState(0x5556, 0xb6be, 0x4c10, 0x397a, 0xb30d, 0x223e, 0x1, 0x0);
        gbc.writeMem(0x5556, { 0xa3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb6be, gbc.sp());
        EXPECT(0x5557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0132
        gbc.setState(0xb9a3, 0x280b, 0xa3c0, 0x18e7, 0x53e3, 0x8c7f, 0x0, 0x1);
        gbc.writeMem(0xb9a3, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x280b, gbc.sp());
        EXPECT(0xb9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb9a3));
        // A3 0133
        gbc.setState(0xd3bf, 0x446f, 0x9dd0, 0x3bfe, 0xf62, 0x9a33, 0x1, 0x1);
        gbc.writeMem(0xd3bf, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3bf));
        // A3 0134
        gbc.setState(0xebc0, 0xbb08, 0xb9e0, 0x9121, 0x42a4, 0x25d2, 0x0, 0x0);
        gbc.writeMem(0xebc0, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0xebc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xebc0));
        // A3 0136
        gbc.setState(0x9286, 0x1c77, 0x8600, 0x78fb, 0x387c, 0x8cbe, 0x1, 0x1);
        gbc.writeMem(0x9286, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1c77, gbc.sp());
        EXPECT(0x9287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9286));
        // A3 0137
        gbc.setState(0xd3da, 0xb437, 0xd790, 0xa926, 0xe695, 0x31c2, 0x1, 0x1);
        gbc.writeMem(0xd3da, { 0xa3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb437, gbc.sp());
        EXPECT(0xd3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3da));
        // A3 0138
        gbc.setState(0x5b0e, 0xaa56, 0x45a0, 0x843c, 0xe83a, 0x1285, 0x1, 0x1);
        gbc.writeMem(0x5b0e, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x5b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 013A
        gbc.setState(0xb8fe, 0xea9c, 0x71b0, 0x8eb8, 0x5882, 0x1163, 0x1, 0x1);
        gbc.writeMem(0xb8fe, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb8fe));
        // A3 013B
        gbc.setState(0xac18, 0x765, 0xee80, 0xfee0, 0x2758, 0x2fde, 0x0, 0x0);
        gbc.writeMem(0xac18, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x765, gbc.sp());
        EXPECT(0xac19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xac18));
        // A3 013C
        gbc.setState(0xc793, 0x582d, 0xb380, 0xf5c4, 0x3159, 0x5712, 0x0, 0x1);
        gbc.writeMem(0xc793, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x582d, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc793));
        // A3 013D
        gbc.setState(0x28c8, 0xf895, 0x5b30, 0xf023, 0xc1a4, 0x4c5d, 0x0, 0x0);
        gbc.writeMem(0x28c8, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x28c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 013E
        gbc.setState(0xc9f3, 0x7b6, 0xa140, 0x95a6, 0x1b37, 0x70a6, 0x0, 0x1);
        gbc.writeMem(0xc9f3, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc9f3));
        // A3 0140
        gbc.setState(0x959, 0x49a4, 0x4d40, 0x95c9, 0x3bf8, 0x919f, 0x0, 0x0);
        gbc.writeMem(0x959, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x49a4, gbc.sp());
        EXPECT(0x95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0141
        gbc.setState(0x7746, 0x7e9a, 0x5dc0, 0xdb41, 0x2d69, 0xf72a, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0142
        gbc.setState(0x15ec, 0x1614, 0x8190, 0x1dc1, 0x58cf, 0xc486, 0x0, 0x1);
        gbc.writeMem(0x15ec, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1614, gbc.sp());
        EXPECT(0x15ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0143
        gbc.setState(0x8d36, 0x57b9, 0x86a0, 0xc60f, 0x5ca, 0x3163, 0x1, 0x1);
        gbc.writeMem(0x8d36, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x57b9, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8d36));
        // A3 0144
        gbc.setState(0x143e, 0x1084, 0x6ba0, 0xc463, 0x658a, 0x5ef1, 0x0, 0x1);
        gbc.writeMem(0x143e, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1084, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0145
        gbc.setState(0x7e46, 0x95d9, 0x8a40, 0x5323, 0x7791, 0x1f09, 0x0, 0x1);
        gbc.writeMem(0x7e46, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x95d9, gbc.sp());
        EXPECT(0x7e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0146
        gbc.setState(0xc2b5, 0x758d, 0x5a00, 0xa077, 0x7608, 0xc76e, 0x1, 0x0);
        gbc.writeMem(0xc2b5, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x758d, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc2b5));
        // A3 0147
        gbc.setState(0x980a, 0x1588, 0xc4e0, 0x1820, 0x9c30, 0x12a4, 0x0, 0x0);
        gbc.writeMem(0x980a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x980b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x980a));
        // A3 0148
        gbc.setState(0x6e9c, 0x2025, 0x1a00, 0xf4f2, 0xf4ac, 0xf4db, 0x1, 0x0);
        gbc.writeMem(0x6e9c, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x6e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0149
        gbc.setState(0x55d1, 0x785a, 0x5cd0, 0xe427, 0xda1b, 0x7e7a, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0x55d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 014A
        gbc.setState(0xd599, 0x2534, 0x9f30, 0x8a0a, 0x19d8, 0x4e05, 0x1, 0x0);
        gbc.writeMem(0xd599, { 0xa3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2534, gbc.sp());
        EXPECT(0xd59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd599));
        // A3 014B
        gbc.setState(0xdb85, 0x820b, 0xae80, 0x4044, 0xa05f, 0xc1f4, 0x1, 0x0);
        gbc.writeMem(0xdb85, { 0xa3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x820b, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdb85));
        // A3 014C
        gbc.setState(0xa7f1, 0x595e, 0xf6f0, 0x90e2, 0xb089, 0xecd0, 0x0, 0x0);
        gbc.writeMem(0xa7f1, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x595e, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa7f1));
        // A3 014D
        gbc.setState(0xd03f, 0xcfc5, 0x4c90, 0xc804, 0x1fee, 0x1bd4, 0x1, 0x1);
        gbc.writeMem(0xd03f, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcfc5, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd03f));
        // A3 014E
        gbc.setState(0x9428, 0x2262, 0x2a0, 0xbc1f, 0x787d, 0xfba0, 0x1, 0x1);
        gbc.writeMem(0x9428, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2262, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9428));
        // A3 014F
        gbc.setState(0x5bf2, 0xc673, 0xd930, 0x8b5, 0x9b71, 0xa722, 0x0, 0x1);
        gbc.writeMem(0x5bf2, { 0xa3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc673, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0150
        gbc.setState(0xc11f, 0x906, 0xf20, 0xdcfe, 0xf916, 0x52d4, 0x0, 0x1);
        gbc.writeMem(0xc11f, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x906, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc11f));
        // A3 0151
        gbc.setState(0x28c3, 0x3243, 0xd7d0, 0x2a6e, 0xecf2, 0xe50b, 0x0, 0x1);
        gbc.writeMem(0x28c3, { 0xa3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3243, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0152
        gbc.setState(0xd633, 0xe3f2, 0x1250, 0x8d80, 0x5ea0, 0xe8ea, 0x0, 0x0);
        gbc.writeMem(0xd633, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe3f2, gbc.sp());
        EXPECT(0xd634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd633));
        // A3 0153
        gbc.setState(0xec63, 0x2641, 0xdba0, 0xb18d, 0xf6e1, 0xb43b, 0x0, 0x0);
        gbc.writeMem(0xec63, { 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2641, gbc.sp());
        EXPECT(0xec64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xec63));
        // A3 0154
        gbc.setState(0x77b0, 0xed62, 0x40, 0x29dc, 0x552, 0x4187, 0x1, 0x0);
        gbc.writeMem(0x77b0, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xed62, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0155
        gbc.setState(0xad8a, 0x6a55, 0x4c40, 0xc838, 0x9cc, 0xeee8, 0x0, 0x0);
        gbc.writeMem(0xad8a, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a55, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad8a));
        // A3 0156
        gbc.setState(0x3e9d, 0x2f3, 0x2b10, 0xcaa7, 0xf705, 0x9f5f, 0x0, 0x1);
        gbc.writeMem(0x3e9d, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2f3, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0157
        gbc.setState(0xa64c, 0xf789, 0x4a30, 0x2ff5, 0x645, 0xb656, 0x1, 0x0);
        gbc.writeMem(0xa64c, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf789, gbc.sp());
        EXPECT(0xa64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa64c));
        // A3 0158
        gbc.setState(0x4a00, 0xf6b1, 0xa080, 0xd128, 0x66f9, 0x51fc, 0x1, 0x0);
        gbc.writeMem(0x4a00, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0159
        gbc.setState(0xce5d, 0xeec5, 0x7c00, 0x574e, 0xf3c5, 0x214a, 0x0, 0x1);
        gbc.writeMem(0xce5d, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeec5, gbc.sp());
        EXPECT(0xce5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xce5d));
        // A3 015A
        gbc.setState(0x9438, 0x46d9, 0xd600, 0xda0a, 0xc12, 0xdcd3, 0x0, 0x0);
        gbc.writeMem(0x9438, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x46d9, gbc.sp());
        EXPECT(0x9439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9438));
        // A3 015B
        gbc.setState(0x15c7, 0xb917, 0x8e60, 0xd5d7, 0x6543, 0x30fb, 0x1, 0x1);
        gbc.writeMem(0x15c7, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0x15c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 015D
        gbc.setState(0x8314, 0x7ecc, 0x8250, 0x38a1, 0x3ad5, 0xc6e5, 0x0, 0x1);
        gbc.writeMem(0x8314, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7ecc, gbc.sp());
        EXPECT(0x8315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8314));
        // A3 015E
        gbc.setState(0xd8cc, 0x9e6f, 0xc8d0, 0x5b9e, 0x15f8, 0x63cf, 0x0, 0x0);
        gbc.writeMem(0xd8cc, { 0xa3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9e6f, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd8cc));
        // A3 015F
        gbc.setState(0xaa5f, 0x58fd, 0x6be0, 0xa179, 0xf5e1, 0x3deb, 0x1, 0x1);
        gbc.writeMem(0xaa5f, { 0xa3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaa5f));
        // A3 0160
        gbc.setState(0x7619, 0x998, 0x3470, 0xf4e6, 0xaf28, 0xae58, 0x1, 0x0);
        gbc.writeMem(0x7619, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x998, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0161
        gbc.setState(0xd232, 0xb840, 0x8e10, 0x4d03, 0xb397, 0x4198, 0x0, 0x0);
        gbc.writeMem(0xd232, { 0xa3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd232));
        // A3 0162
        gbc.setState(0xbe86, 0x9c77, 0x9bb0, 0x1d1d, 0x53c1, 0xd28c, 0x1, 0x1);
        gbc.writeMem(0xbe86, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9c77, gbc.sp());
        EXPECT(0xbe87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbe86));
        // A3 0163
        gbc.setState(0x2041, 0xf972, 0xe700, 0x8afc, 0x71b5, 0x5557, 0x1, 0x1);
        gbc.writeMem(0x2041, { 0xa3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf972, gbc.sp());
        EXPECT(0x2042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0164
        gbc.setState(0xbff3, 0xbce7, 0xf0a0, 0x6ef5, 0x340c, 0x1498, 0x0, 0x1);
        gbc.writeMem(0xbff3, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbff3));
        // A3 0165
        gbc.setState(0x1d17, 0x6c61, 0x20e0, 0xc5c, 0xeb4f, 0x2523, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6c61, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0166
        gbc.setState(0x7ed2, 0xf47b, 0xb7c0, 0x85eb, 0xc56d, 0x5d8d, 0x1, 0x0);
        gbc.writeMem(0x7ed2, { 0xa3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0167
        gbc.setState(0x6feb, 0xe2f4, 0xa400, 0x2298, 0x8469, 0x3fd2, 0x0, 0x0);
        gbc.writeMem(0x6feb, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0168
        gbc.setState(0x3a23, 0x7ab3, 0x3440, 0x8c5e, 0x1ca5, 0x7910, 0x0, 0x0);
        gbc.writeMem(0x3a23, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0x3a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0169
        gbc.setState(0xbe02, 0x9230, 0x7950, 0xa0e9, 0xea98, 0x681d, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0xbe03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbe02));
        // A3 016A
        gbc.setState(0xb6cd, 0x350e, 0x4ba0, 0x4c2d, 0x4765, 0x4182, 0x1, 0x0);
        gbc.writeMem(0xb6cd, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb6cd));
        // A3 016B
        gbc.setState(0xdd3f, 0xe29d, 0x1b30, 0xa38d, 0xdbeb, 0xe943, 0x1, 0x0);
        gbc.writeMem(0xdd3f, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdd3f));
        // A3 016D
        gbc.setState(0xd4b5, 0xb66d, 0x7ba0, 0xf3af, 0x81e1, 0xbe63, 0x0, 0x1);
        gbc.writeMem(0xd4b5, { 0xa3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb66d, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd4b5));
        // A3 016E
        gbc.setState(0xd112, 0xbb16, 0x4f60, 0x610, 0xa7f1, 0x23d6, 0x1, 0x0);
        gbc.writeMem(0xd112, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbb16, gbc.sp());
        EXPECT(0xd113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd112));
        // A3 016F
        gbc.setState(0x41d1, 0x167c, 0x1ed0, 0x455d, 0x4095, 0x7e33, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0170
        gbc.setState(0xc336, 0x34c3, 0x2b90, 0x3de9, 0x2623, 0xea0c, 0x1, 0x1);
        gbc.writeMem(0xc336, { 0xa3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x34c3, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc336));
        // A3 0171
        gbc.setState(0xe81b, 0x8ebd, 0x1330, 0xf802, 0x825d, 0x8c2f, 0x1, 0x0);
        gbc.writeMem(0xe81b, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8ebd, gbc.sp());
        EXPECT(0xe81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe81b));
        // A3 0172
        gbc.setState(0xcc1f, 0x7480, 0x9580, 0x674d, 0x4d0f, 0x2b8a, 0x1, 0x1);
        gbc.writeMem(0xcc1f, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0xcc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcc1f));
        // A3 0173
        gbc.setState(0x906e, 0x7bd3, 0x4d40, 0x527f, 0x576, 0xb7e3, 0x1, 0x0);
        gbc.writeMem(0x906e, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x906e));
        // A3 0174
        gbc.setState(0xa6c, 0xfaf9, 0x8880, 0x4dbd, 0x528b, 0xbb2c, 0x0, 0x0);
        gbc.writeMem(0xa6c, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfaf9, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0175
        gbc.setState(0xa756, 0x3e48, 0x1290, 0xfd78, 0x6f35, 0xf6c9, 0x0, 0x1);
        gbc.writeMem(0xa756, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e48, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa756));
        // A3 0176
        gbc.setState(0xeaa, 0xb5ab, 0x8fe0, 0x3c1, 0x26f1, 0xcaf3, 0x1, 0x0);
        gbc.writeMem(0xeaa, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb5ab, gbc.sp());
        EXPECT(0xeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0177
        gbc.setState(0x7f50, 0xf19b, 0x2880, 0xe173, 0xc5b5, 0x80c, 0x1, 0x1);
        gbc.writeMem(0x7f50, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf19b, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0178
        gbc.setState(0xc8, 0x37bb, 0x21a0, 0xff9b, 0xef26, 0xe91c, 0x1, 0x1);
        gbc.writeMem(0xc8, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0179
        gbc.setState(0x4017, 0x5507, 0x2a80, 0x503b, 0xb6ea, 0x34ee, 0x0, 0x1);
        gbc.writeMem(0x4017, { 0xa3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 017A
        gbc.setState(0xe0e2, 0x54e5, 0x1310, 0x4a37, 0xa78d, 0x11d9, 0x0, 0x1);
        gbc.writeMem(0xe0e2, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0xe0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe0e2));
        // A3 017B
        gbc.setState(0x4cdb, 0x427b, 0x22a0, 0xea97, 0xde0b, 0x49c9, 0x1, 0x1);
        gbc.writeMem(0x4cdb, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 017C
        gbc.setState(0x877a, 0x3d0c, 0x9250, 0xa347, 0x7b2c, 0x1da2, 0x1, 0x0);
        gbc.writeMem(0x877a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3d0c, gbc.sp());
        EXPECT(0x877b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x877a));
        // A3 017D
        gbc.setState(0x6613, 0x3afd, 0xcf50, 0x3ea6, 0xc2e4, 0x9c9f, 0x0, 0x0);
        gbc.writeMem(0x6613, { 0xa3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3afd, gbc.sp());
        EXPECT(0x6614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 017E
        gbc.setState(0xced4, 0x5625, 0xd480, 0x8146, 0x7934, 0x32d1, 0x1, 0x1);
        gbc.writeMem(0xced4, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0xced5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xced4));
        // A3 017F
        gbc.setState(0xd5ab, 0xbff9, 0xd430, 0x78f9, 0xa313, 0xb5f2, 0x1, 0x1);
        gbc.writeMem(0xd5ab, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbff9, gbc.sp());
        EXPECT(0xd5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd5ab));
        // A3 0180
        gbc.setState(0x5925, 0xf4b4, 0x3280, 0x3ef9, 0x5fb7, 0x2dd4, 0x0, 0x0);
        gbc.writeMem(0x5925, { 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf4b4, gbc.sp());
        EXPECT(0x5926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0181
        gbc.setState(0x47b4, 0x6c01, 0x5a40, 0x8636, 0x64cb, 0xabf6, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6c01, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0182
        gbc.setState(0xdc43, 0xb948, 0xed50, 0xbccb, 0x91d7, 0x28f0, 0x0, 0x0);
        gbc.writeMem(0xdc43, { 0xa3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc43));
        // A3 0183
        gbc.setState(0x309f, 0x8826, 0xf330, 0x897a, 0x4dfb, 0x286d, 0x1, 0x1);
        gbc.writeMem(0x309f, { 0xa3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x30a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0184
        gbc.setState(0x286b, 0x42cc, 0xc540, 0xd2b6, 0xcafe, 0x57fc, 0x0, 0x1);
        gbc.writeMem(0x286b, { 0xa3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x42cc, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0185
        gbc.setState(0x7ac7, 0x39da, 0x9bb0, 0xff30, 0x8d87, 0xee46, 0x1, 0x1);
        gbc.writeMem(0x7ac7, { 0xa3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0186
        gbc.setState(0xb2bf, 0x776c, 0xe60, 0x71f, 0x6b39, 0xb14f, 0x0, 0x0);
        gbc.writeMem(0xb2bf, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0xb2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb2bf));
        // A3 0187
        gbc.setState(0xa3b6, 0x9892, 0x63d0, 0x1d27, 0x56bd, 0x6902, 0x1, 0x0);
        gbc.writeMem(0xa3b6, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9892, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa3b6));
        // A3 0188
        gbc.setState(0xe10e, 0x3261, 0x8e30, 0xf6ed, 0x8583, 0x79c4, 0x1, 0x0);
        gbc.writeMem(0xe10e, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe10e));
        // A3 0189
        gbc.setState(0xccd3, 0xe886, 0x94a0, 0xcc90, 0xb6b, 0x8143, 0x1, 0x0);
        gbc.writeMem(0xccd3, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe886, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xccd3));
        // A3 018A
        gbc.setState(0xec2e, 0x66bd, 0xd890, 0x2c76, 0xf7eb, 0x8e9, 0x1, 0x0);
        gbc.writeMem(0xec2e, { 0xa3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x66bd, gbc.sp());
        EXPECT(0xec2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xec2e));
        // A3 018C
        gbc.setState(0xeea4, 0x51e4, 0xeb80, 0x504, 0xbe0c, 0xe91d, 0x0, 0x0);
        gbc.writeMem(0xeea4, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeea4));
        // A3 018D
        gbc.setState(0x957, 0x21f6, 0xbf0, 0xf358, 0x7409, 0xd766, 0x0, 0x1);
        gbc.writeMem(0x957, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x21f6, gbc.sp());
        EXPECT(0x958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 018E
        gbc.setState(0x7511, 0x2709, 0x72d0, 0x673f, 0xb0cd, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0x7511, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 018F
        gbc.setState(0x34cd, 0x6a26, 0x81b0, 0x2f54, 0x2b55, 0xe5a2, 0x0, 0x0);
        gbc.writeMem(0x34cd, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6a26, gbc.sp());
        EXPECT(0x34ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0190
        gbc.setState(0x2b81, 0x1eee, 0xd6f0, 0xea13, 0x90b0, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0x2b81, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0191
        gbc.setState(0x6ded, 0xc96e, 0x1110, 0xf7b9, 0x5c0b, 0x533b, 0x0, 0x1);
        gbc.writeMem(0x6ded, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc96e, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0192
        gbc.setState(0x354, 0x86f8, 0x26a0, 0x5d36, 0x6331, 0x3596, 0x1, 0x1);
        gbc.writeMem(0x354, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0x355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0193
        gbc.setState(0x536a, 0x978d, 0x89f0, 0x9c91, 0x1998, 0xce7f, 0x0, 0x1);
        gbc.writeMem(0x536a, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0x536b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0194
        gbc.setState(0x6cee, 0xb7, 0xb120, 0xac08, 0xf26e, 0xeff4, 0x0, 0x1);
        gbc.writeMem(0x6cee, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb7, gbc.sp());
        EXPECT(0x6cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0195
        gbc.setState(0x5b9d, 0xae14, 0x2580, 0xbaab, 0xc6be, 0x74e3, 0x0, 0x1);
        gbc.writeMem(0x5b9d, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0x5b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0196
        gbc.setState(0xe9e9, 0x66f2, 0x6a0, 0x1d30, 0x2970, 0x5b62, 0x0, 0x1);
        gbc.writeMem(0xe9e9, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0xe9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe9e9));
        // A3 0198
        gbc.setState(0x525e, 0x9b5a, 0x4150, 0xd90a, 0x46c9, 0x4aaa, 0x0, 0x1);
        gbc.writeMem(0x525e, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9b5a, gbc.sp());
        EXPECT(0x525f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0199
        gbc.setState(0x165, 0xf56e, 0xf2c0, 0xe409, 0xbd6b, 0x9775, 0x1, 0x0);
        gbc.writeMem(0x165, { 0xa3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf56e, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 019A
        gbc.setState(0x210a, 0x6091, 0x6420, 0xdda2, 0xf9bd, 0x9cc5, 0x1, 0x1);
        gbc.writeMem(0x210a, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6091, gbc.sp());
        EXPECT(0x210b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 019C
        gbc.setState(0xe0be, 0x7fb2, 0x6320, 0x69c7, 0xc194, 0x3b9e, 0x0, 0x0);
        gbc.writeMem(0xe0be, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe0be));
        // A3 019D
        gbc.setState(0x1837, 0xdea4, 0xf3b0, 0xde9d, 0x28a5, 0xddf1, 0x1, 0x1);
        gbc.writeMem(0x1837, { 0xa3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdea4, gbc.sp());
        EXPECT(0x1838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 019E
        gbc.setState(0x54b2, 0x5433, 0x4520, 0x902e, 0x5ebb, 0x85de, 0x1, 0x0);
        gbc.writeMem(0x54b2, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0x54b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 019F
        gbc.setState(0x3f52, 0xede4, 0xe770, 0x7a3e, 0xf7e7, 0xc94c, 0x1, 0x1);
        gbc.writeMem(0x3f52, { 0xa3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xede4, gbc.sp());
        EXPECT(0x3f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01A0
        gbc.setState(0x47ae, 0x1b40, 0xec80, 0x228d, 0xcd88, 0x5c76, 0x0, 0x1);
        gbc.writeMem(0x47ae, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01A1
        gbc.setState(0x9c16, 0x6bbd, 0x67e0, 0x5c8d, 0xba23, 0x242, 0x0, 0x1);
        gbc.writeMem(0x9c16, { 0xa3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6bbd, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9c16));
        // A3 01A2
        gbc.setState(0xb86f, 0xda83, 0x5460, 0xa184, 0x932e, 0x18, 0x0, 0x1);
        gbc.writeMem(0xb86f, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xda83, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb86f));
        // A3 01A3
        gbc.setState(0xb1bf, 0xf1e9, 0x3200, 0x30, 0xb3e5, 0x8171, 0x1, 0x1);
        gbc.writeMem(0xb1bf, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb1bf));
        // A3 01A4
        gbc.setState(0x72fb, 0x9f73, 0xe0e0, 0x8c10, 0x8a76, 0x8bbf, 0x0, 0x0);
        gbc.writeMem(0x72fb, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9f73, gbc.sp());
        EXPECT(0x72fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01A6
        gbc.setState(0x9e15, 0xb8e7, 0xc6d0, 0x7ee5, 0xb99, 0x3703, 0x0, 0x0);
        gbc.writeMem(0x9e15, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x9e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9e15));
        // A3 01A7
        gbc.setState(0x3238, 0x1ae9, 0x9e50, 0x4847, 0x6002, 0x754e, 0x0, 0x1);
        gbc.writeMem(0x3238, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1ae9, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01A8
        gbc.setState(0x98b5, 0x9639, 0x6340, 0xd13a, 0x5640, 0x2721, 0x0, 0x0);
        gbc.writeMem(0x98b5, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0x98b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x98b5));
        // A3 01A9
        gbc.setState(0x8454, 0x7633, 0x6310, 0xabc1, 0x1e06, 0xcd09, 0x1, 0x1);
        gbc.writeMem(0x8454, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7633, gbc.sp());
        EXPECT(0x8455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8454));
        // A3 01AA
        gbc.setState(0x1680, 0x5a63, 0xfb70, 0xeb6a, 0xcd6b, 0x40bb, 0x1, 0x0);
        gbc.writeMem(0x1680, { 0xa3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x1681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01AB
        gbc.setState(0x171e, 0xcd2f, 0xc9a0, 0x80d8, 0x6dde, 0xab95, 0x1, 0x1);
        gbc.writeMem(0x171e, { 0xa3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01AC
        gbc.setState(0x99c2, 0x6d22, 0x4b80, 0xb98, 0x7e26, 0x9ef5, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x99c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x99c2));
        // A3 01AD
        gbc.setState(0xa42b, 0x4141, 0x7a0, 0xcf04, 0x37f5, 0xb522, 0x0, 0x1);
        gbc.writeMem(0xa42b, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa42b));
        // A3 01AE
        gbc.setState(0xda7f, 0x8b67, 0xa3a0, 0xf4ab, 0x2817, 0x579f, 0x0, 0x1);
        gbc.writeMem(0xda7f, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8b67, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xda7f));
        // A3 01AF
        gbc.setState(0xe1d2, 0x78bc, 0x4840, 0x75c0, 0xb636, 0x8dd6, 0x0, 0x0);
        gbc.writeMem(0xe1d2, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x78bc, gbc.sp());
        EXPECT(0xe1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1d2));
        // A3 01B0
        gbc.setState(0x33c7, 0x479c, 0xb040, 0xd4b0, 0xaf8a, 0x5adc, 0x1, 0x0);
        gbc.writeMem(0x33c7, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0x33c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01B1
        gbc.setState(0xcd92, 0xcb62, 0x9520, 0xe5d9, 0x29ac, 0x2193, 0x1, 0x1);
        gbc.writeMem(0xcd92, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcb62, gbc.sp());
        EXPECT(0xcd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcd92));
        // A3 01B2
        gbc.setState(0x27c0, 0x920f, 0xdd00, 0x77f7, 0xc109, 0x5742, 0x1, 0x1);
        gbc.writeMem(0x27c0, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x920f, gbc.sp());
        EXPECT(0x27c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01B3
        gbc.setState(0xa335, 0x8e52, 0x6620, 0x2d50, 0x59e0, 0x2943, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8e52, gbc.sp());
        EXPECT(0xa336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa335));
        // A3 01B4
        gbc.setState(0xda46, 0x6460, 0xeff0, 0x9f87, 0x9424, 0x9361, 0x0, 0x1);
        gbc.writeMem(0xda46, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0xda47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xda46));
        // A3 01B5
        gbc.setState(0xa76b, 0xa9fd, 0xc6d0, 0xa7f9, 0x7976, 0x678, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0xa3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa9fd, gbc.sp());
        EXPECT(0xa76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa76b));
        // A3 01B6
        gbc.setState(0x288e, 0x9d74, 0x1b50, 0xac67, 0xb838, 0x7d0d, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9d74, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01B7
        gbc.setState(0x4063, 0xdc, 0x9a90, 0x1d6, 0xd702, 0xdc32, 0x1, 0x0);
        gbc.writeMem(0x4063, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0x4064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01B8
        gbc.setState(0x76a3, 0xb32f, 0xa220, 0x1703, 0x7292, 0x4b07, 0x1, 0x0);
        gbc.writeMem(0x76a3, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0x76a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01B9
        gbc.setState(0x1451, 0x5097, 0xd8c0, 0x423, 0xfd87, 0xeb0d, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5097, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01BA
        gbc.setState(0xdf02, 0xc21d, 0xc230, 0x6bee, 0x6906, 0xd240, 0x0, 0x0);
        gbc.writeMem(0xdf02, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdf02));
        // A3 01BB
        gbc.setState(0xb0ed, 0x9c07, 0x2110, 0x9866, 0x3abe, 0xe833, 0x0, 0x1);
        gbc.writeMem(0xb0ed, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9c07, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb0ed));
        // A3 01BC
        gbc.setState(0x185e, 0xda34, 0x7580, 0xbed, 0x3b53, 0x4c59, 0x1, 0x0);
        gbc.writeMem(0x185e, { 0xa3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xda34, gbc.sp());
        EXPECT(0x185f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01BD
        gbc.setState(0x1b67, 0x53ea, 0x74b0, 0x8179, 0xa5d2, 0xdccc, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x53ea, gbc.sp());
        EXPECT(0x1b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01BE
        gbc.setState(0x5772, 0x4432, 0x9ad0, 0x232c, 0x3fad, 0xddc, 0x0, 0x1);
        gbc.writeMem(0x5772, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4432, gbc.sp());
        EXPECT(0x5773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01C0
        gbc.setState(0xed1c, 0xeb9d, 0x210, 0xd39a, 0x2cb8, 0x20ff, 0x0, 0x1);
        gbc.writeMem(0xed1c, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xed1c));
        // A3 01C1
        gbc.setState(0x8bc2, 0x11d0, 0xd4e0, 0x2641, 0x6a01, 0x2004, 0x0, 0x1);
        gbc.writeMem(0x8bc2, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x11d0, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8bc2));
        // A3 01C2
        gbc.setState(0x12c3, 0x1242, 0xd5b0, 0x96c9, 0x8, 0xc793, 0x1, 0x1);
        gbc.writeMem(0x12c3, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1242, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01C3
        gbc.setState(0x2111, 0x2db9, 0x7170, 0x8bdc, 0xbc86, 0x1b0c, 0x0, 0x0);
        gbc.writeMem(0x2111, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2db9, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01C4
        gbc.setState(0xc76, 0xadb4, 0xfb70, 0x4985, 0x6f7a, 0xde5, 0x0, 0x0);
        gbc.writeMem(0xc76, { 0xa3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xadb4, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01C5
        gbc.setState(0xc57d, 0xa085, 0x9580, 0xa1e4, 0x5aa4, 0x3465, 0x0, 0x0);
        gbc.writeMem(0xc57d, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa085, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc57d));
        // A3 01C6
        gbc.setState(0x2198, 0x5563, 0xe30, 0xfc50, 0x6f40, 0xd069, 0x0, 0x0);
        gbc.writeMem(0x2198, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5563, gbc.sp());
        EXPECT(0x2199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01C7
        gbc.setState(0xba8e, 0xa696, 0xe790, 0xf5fc, 0xb024, 0x225b, 0x0, 0x0);
        gbc.writeMem(0xba8e, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa696, gbc.sp());
        EXPECT(0xba8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xba8e));
        // A3 01C8
        gbc.setState(0x9eb1, 0xf31e, 0x8260, 0x5b2e, 0x866e, 0x80f9, 0x1, 0x0);
        gbc.writeMem(0x9eb1, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf31e, gbc.sp());
        EXPECT(0x9eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9eb1));
        // A3 01C9
        gbc.setState(0xe60, 0xa596, 0x150, 0xd973, 0xf63a, 0x38e6, 0x1, 0x1);
        gbc.writeMem(0xe60, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa596, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01CA
        gbc.setState(0x2f3b, 0x7486, 0xc5e0, 0xd14d, 0x152b, 0xa674, 0x0, 0x0);
        gbc.writeMem(0x2f3b, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7486, gbc.sp());
        EXPECT(0x2f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01CB
        gbc.setState(0xb758, 0x8428, 0x5ca0, 0x9ab1, 0xe72e, 0x39ce, 0x1, 0x1);
        gbc.writeMem(0xb758, { 0xa3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0xb759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb758));
        // A3 01CC
        gbc.setState(0xacc6, 0x6fb6, 0xa490, 0x6322, 0x13e7, 0xda06, 0x0, 0x0);
        gbc.writeMem(0xacc6, { 0xa3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6fb6, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xacc6));
        // A3 01CD
        gbc.setState(0xe1cf, 0x4f59, 0x98f0, 0xd988, 0xd68a, 0x5d6a, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0xe1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1cf));
        // A3 01CE
        gbc.setState(0x9a22, 0x4053, 0x6b90, 0xabec, 0xccad, 0x7c96, 0x0, 0x1);
        gbc.writeMem(0x9a22, { 0xa3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4053, gbc.sp());
        EXPECT(0x9a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9a22));
        // A3 01CF
        gbc.setState(0xbc03, 0x7636, 0xd080, 0xc8ad, 0xe5f, 0xcf1a, 0x1, 0x0);
        gbc.writeMem(0xbc03, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7636, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbc03));
        // A3 01D0
        gbc.setState(0xe5a8, 0xcb66, 0xdcc0, 0x3793, 0x64b4, 0xd346, 0x1, 0x1);
        gbc.writeMem(0xe5a8, { 0xa3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0xe5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe5a8));
        // A3 01D1
        gbc.setState(0x36f, 0xfbea, 0x2260, 0x39f6, 0x8522, 0x92b, 0x0, 0x1);
        gbc.writeMem(0x36f, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfbea, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01D2
        gbc.setState(0x7f97, 0xcc98, 0xb0f0, 0xef87, 0x1fe, 0x8d74, 0x0, 0x1);
        gbc.writeMem(0x7f97, { 0xa3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcc98, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01D3
        gbc.setState(0xb0cf, 0xcc71, 0x85d0, 0xaee0, 0x171f, 0x6003, 0x0, 0x1);
        gbc.writeMem(0xb0cf, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcc71, gbc.sp());
        EXPECT(0xb0d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb0cf));
        // A3 01D4
        gbc.setState(0x9cc0, 0x7a8f, 0xc440, 0xea13, 0x6f4, 0x744d, 0x0, 0x1);
        gbc.writeMem(0x9cc0, { 0xa3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9cc0));
        // A3 01D5
        gbc.setState(0x766c, 0xf8e6, 0xf760, 0x7049, 0x8e64, 0x1216, 0x1, 0x0);
        gbc.writeMem(0x766c, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf8e6, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01D6
        gbc.setState(0x97ac, 0x84fa, 0xed50, 0x525d, 0x5d8b, 0x6495, 0x1, 0x0);
        gbc.writeMem(0x97ac, { 0xa3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x84fa, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x97ac));
        // A3 01D7
        gbc.setState(0xefb0, 0x7d20, 0x7b40, 0xc4d5, 0xd39, 0x9a7e, 0x0, 0x0);
        gbc.writeMem(0xefb0, { 0xa3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7d20, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xefb0));
        // A3 01D8
        gbc.setState(0x9a70, 0xa5d2, 0x9980, 0xa3be, 0xcce7, 0xd86d, 0x0, 0x0);
        gbc.writeMem(0x9a70, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa5d2, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9a70));
        // A3 01D9
        gbc.setState(0x2f6b, 0x72a4, 0xbf0, 0xefb7, 0x50cd, 0x92ea, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x72a4, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01DA
        gbc.setState(0x8c6b, 0x1550, 0x3800, 0xedff, 0xa15, 0x8c62, 0x1, 0x1);
        gbc.writeMem(0x8c6b, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8c6b));
        // A3 01DB
        gbc.setState(0xae08, 0x4083, 0x7730, 0x1eff, 0xf681, 0x6dea, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xae08));
        // A3 01DC
        gbc.setState(0x2768, 0x9974, 0xff0, 0x1ddb, 0x90c, 0x56d3, 0x1, 0x1);
        gbc.writeMem(0x2768, { 0xa3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x2769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01DD
        gbc.setState(0xb0f1, 0x637f, 0x4120, 0x84e8, 0xc5bc, 0x1b4a, 0x0, 0x1);
        gbc.writeMem(0xb0f1, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x637f, gbc.sp());
        EXPECT(0xb0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb0f1));
        // A3 01DE
        gbc.setState(0x1667, 0x8d2f, 0x5400, 0xd9a1, 0x40d4, 0xe131, 0x1, 0x0);
        gbc.writeMem(0x1667, { 0xa3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8d2f, gbc.sp());
        EXPECT(0x1668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01DF
        gbc.setState(0xcb73, 0xe600, 0x9b70, 0xda26, 0x4703, 0x371, 0x1, 0x0);
        gbc.writeMem(0xcb73, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe600, gbc.sp());
        EXPECT(0xcb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcb73));
        // A3 01E0
        gbc.setState(0x427d, 0x59d8, 0xbc30, 0xc447, 0x348b, 0x7ae1, 0x0, 0x1);
        gbc.writeMem(0x427d, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x59d8, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01E1
        gbc.setState(0x1ea5, 0xe3b2, 0xd430, 0x3b3a, 0xfa36, 0x4255, 0x0, 0x1);
        gbc.writeMem(0x1ea5, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01E2
        gbc.setState(0xdb7b, 0x8659, 0xb710, 0x404f, 0xc20b, 0xeeac, 0x1, 0x0);
        gbc.writeMem(0xdb7b, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8659, gbc.sp());
        EXPECT(0xdb7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdb7b));
        // A3 01E3
        gbc.setState(0x1170, 0x2e5a, 0x2530, 0xb2b3, 0x2b1a, 0x7a7e, 0x1, 0x0);
        gbc.writeMem(0x1170, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x1171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01E4
        gbc.setState(0xeac8, 0xb24a, 0xb310, 0x4914, 0x3cd5, 0x5ad7, 0x0, 0x1);
        gbc.writeMem(0xeac8, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0xeac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeac8));
        // A3 01E5
        gbc.setState(0xd7f3, 0x7267, 0x6600, 0xfd0, 0xbe2, 0x37bd, 0x1, 0x1);
        gbc.writeMem(0xd7f3, { 0xa3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7267, gbc.sp());
        EXPECT(0xd7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd7f3));
        // A3 01E6
        gbc.setState(0x42e1, 0x10a, 0x5530, 0x7250, 0x3ec2, 0xa8cd, 0x0, 0x0);
        gbc.writeMem(0x42e1, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x10a, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01E7
        gbc.setState(0x2ace, 0x5acf, 0xfb50, 0xcb1f, 0x1211, 0x1fca, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5acf, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01E8
        gbc.setState(0xcd23, 0x1fa2, 0xc140, 0xeb90, 0x164d, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0xcd23, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1fa2, gbc.sp());
        EXPECT(0xcd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcd23));
        // A3 01E9
        gbc.setState(0x4ef3, 0x49c, 0x54a0, 0x36d8, 0x4570, 0x5fbb, 0x0, 0x0);
        gbc.writeMem(0x4ef3, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x49c, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01EA
        gbc.setState(0x8b6e, 0x6099, 0x3d90, 0x363e, 0xb637, 0x8f0a, 0x1, 0x0);
        gbc.writeMem(0x8b6e, { 0xa3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6099, gbc.sp());
        EXPECT(0x8b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8b6e));
        // A3 01EB
        gbc.setState(0x40b6, 0x4716, 0x6890, 0xeacb, 0x3804, 0xfee4, 0x1, 0x1);
        gbc.writeMem(0x40b6, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0x40b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01EC
        gbc.setState(0x238c, 0xc293, 0x5280, 0x2b12, 0xf4f2, 0x203e, 0x0, 0x1);
        gbc.writeMem(0x238c, { 0xa3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc293, gbc.sp());
        EXPECT(0x238d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01ED
        gbc.setState(0x8f82, 0xcd55, 0x60d0, 0x99bb, 0x9cc0, 0xaedb, 0x1, 0x0);
        gbc.writeMem(0x8f82, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8f82));
        // A3 01EE
        gbc.setState(0xdd0, 0x43a6, 0x23e0, 0x6b18, 0x5956, 0x8731, 0x1, 0x1);
        gbc.writeMem(0xdd0, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x43a6, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01EF
        gbc.setState(0x2edf, 0x66e6, 0xc6d0, 0x17c4, 0x7a73, 0xdc48, 0x1, 0x0);
        gbc.writeMem(0x2edf, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x66e6, gbc.sp());
        EXPECT(0x2ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F0
        gbc.setState(0xa6f7, 0x9290, 0x1e0, 0xf088, 0xc2a5, 0x9176, 0x1, 0x0);
        gbc.writeMem(0xa6f7, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0xa6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa6f7));
        // A3 01F1
        gbc.setState(0x3dcf, 0x8cd, 0xebe0, 0x1c72, 0x7e47, 0x2c5e, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8cd, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F2
        gbc.setState(0xc060, 0xdec8, 0x4140, 0x24a5, 0x38c0, 0xeedb, 0x0, 0x0);
        gbc.writeMem(0xc060, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0xc061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc060));
        // A3 01F3
        gbc.setState(0xc32, 0x1efe, 0x1760, 0x9916, 0x7d6a, 0xe932, 0x0, 0x0);
        gbc.writeMem(0xc32, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1efe, gbc.sp());
        EXPECT(0xc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F4
        gbc.setState(0xeaf, 0x2930, 0x6390, 0x9695, 0x5b5e, 0xe8, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0xeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F5
        gbc.setState(0x79d1, 0x8720, 0x91b0, 0xf375, 0x2d93, 0x54b6, 0x0, 0x1);
        gbc.writeMem(0x79d1, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8720, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F6
        gbc.setState(0xad43, 0x806b, 0x7060, 0x283, 0xeca9, 0xe328, 0x0, 0x1);
        gbc.writeMem(0xad43, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0xad44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad43));
        // A3 01F7
        gbc.setState(0xb9f4, 0x289a, 0x97e0, 0x2461, 0x5f3f, 0x80f3, 0x1, 0x1);
        gbc.writeMem(0xb9f4, { 0xa3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x289a, gbc.sp());
        EXPECT(0xb9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb9f4));
        // A3 01F8
        gbc.setState(0x5e8f, 0x2ecf, 0xead0, 0x4ba5, 0x2f6b, 0xc5da, 0x1, 0x1);
        gbc.writeMem(0x5e8f, { 0xa3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0x5e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01F9
        gbc.setState(0x305e, 0x99ad, 0x3e10, 0x6f3a, 0xfebd, 0x2493, 0x1, 0x1);
        gbc.writeMem(0x305e, { 0xa3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x99ad, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01FA
        gbc.setState(0x7ad, 0x24a, 0xbf10, 0x6a10, 0xbec2, 0xac8, 0x0, 0x1);
        gbc.writeMem(0x7ad, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0x7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01FB
        gbc.setState(0x8ba4, 0x431d, 0x9a0, 0x5ec0, 0xd826, 0xb5e, 0x0, 0x1);
        gbc.writeMem(0x8ba4, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x431d, gbc.sp());
        EXPECT(0x8ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8ba4));
        // A3 01FC
        gbc.setState(0x7411, 0x5a50, 0xc2f0, 0xfec6, 0xf7d8, 0x26ef, 0x0, 0x0);
        gbc.writeMem(0x7411, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5a50, gbc.sp());
        EXPECT(0x7412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01FE
        gbc.setState(0x2f9d, 0x2cd6, 0xf060, 0x2fb9, 0x8912, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x2f9d, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cd6, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 01FF
        gbc.setState(0xe8d3, 0x65ff, 0x4830, 0x7c75, 0xbbe9, 0x89a4, 0x1, 0x1);
        gbc.writeMem(0xe8d3, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x65ff, gbc.sp());
        EXPECT(0xe8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe8d3));
        // A3 0200
        gbc.setState(0x5b55, 0x87b7, 0x2f00, 0xa256, 0x7381, 0xfa2d, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x87b7, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0201
        gbc.setState(0x5195, 0x53ed, 0xc70, 0x3ab3, 0xf91d, 0xb197, 0x0, 0x1);
        gbc.writeMem(0x5195, { 0xa3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x53ed, gbc.sp());
        EXPECT(0x5196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0203
        gbc.setState(0x1852, 0xa57b, 0x5230, 0x85c0, 0x78cd, 0x8990, 0x0, 0x1);
        gbc.writeMem(0x1852, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa57b, gbc.sp());
        EXPECT(0x1853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0204
        gbc.setState(0x2bff, 0x40f0, 0x70b0, 0x61a6, 0xc7c5, 0xf8ec, 0x1, 0x1);
        gbc.writeMem(0x2bff, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0x2c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0205
        gbc.setState(0x8455, 0xd5f1, 0xf2b0, 0x5545, 0xd37c, 0x16a2, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd5f1, gbc.sp());
        EXPECT(0x8456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8455));
        // A3 0206
        gbc.setState(0x868a, 0x83b1, 0x5d20, 0x6951, 0x16c5, 0xcb4c, 0x1, 0x1);
        gbc.writeMem(0x868a, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0x868b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x868a));
        // A3 0207
        gbc.setState(0x7916, 0x53c, 0xd7a0, 0xcc01, 0x8450, 0x3e6, 0x1, 0x0);
        gbc.writeMem(0x7916, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x53c, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0208
        gbc.setState(0x55c, 0xf97a, 0x72f0, 0x7013, 0xb0ec, 0x4ec, 0x1, 0x1);
        gbc.writeMem(0x55c, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf97a, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0209
        gbc.setState(0x7f39, 0x4421, 0x19f0, 0x3773, 0x1392, 0x125f, 0x0, 0x0);
        gbc.writeMem(0x7f39, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4421, gbc.sp());
        EXPECT(0x7f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 020A
        gbc.setState(0x3785, 0xd9b0, 0xc1c0, 0x4000, 0xed8f, 0x388, 0x0, 0x0);
        gbc.writeMem(0x3785, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd9b0, gbc.sp());
        EXPECT(0x3786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 020B
        gbc.setState(0x18e5, 0xd18c, 0x3ef0, 0x9888, 0xbd32, 0xe297, 0x0, 0x0);
        gbc.writeMem(0x18e5, { 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0x18e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 020D
        gbc.setState(0x956f, 0x3e45, 0x4370, 0xc284, 0x43d, 0x5866, 0x0, 0x0);
        gbc.writeMem(0x956f, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0x9570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x956f));
        // A3 020E
        gbc.setState(0x979a, 0x7021, 0x65e0, 0x9980, 0xc556, 0x79ce, 0x0, 0x0);
        gbc.writeMem(0x979a, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7021, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x979a));
        // A3 020F
        gbc.setState(0x4cc4, 0xe690, 0x7c00, 0x19f, 0x67d0, 0x1424, 0x1, 0x0);
        gbc.writeMem(0x4cc4, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe690, gbc.sp());
        EXPECT(0x4cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0210
        gbc.setState(0x9865, 0x62b0, 0xac20, 0xbdb4, 0x78fc, 0xe486, 0x1, 0x1);
        gbc.writeMem(0x9865, { 0xa3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9865));
        // A3 0211
        gbc.setState(0x5cf, 0xffa8, 0x5840, 0x6fe9, 0x4028, 0x1c43, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0212
        gbc.setState(0x7bde, 0x39fe, 0x1e90, 0x3cac, 0x2b76, 0x91c9, 0x1, 0x1);
        gbc.writeMem(0x7bde, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x39fe, gbc.sp());
        EXPECT(0x7bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0213
        gbc.setState(0xdc51, 0xb94a, 0xe650, 0x2767, 0xe63f, 0xfd6f, 0x0, 0x1);
        gbc.writeMem(0xdc51, { 0xa3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0xdc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc51));
        // A3 0214
        gbc.setState(0x552a, 0x97f5, 0x8980, 0xa915, 0x9b7a, 0x71db, 0x0, 0x0);
        gbc.writeMem(0x552a, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x97f5, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0215
        gbc.setState(0x9759, 0xa6c, 0xfc10, 0x7b8, 0x1f90, 0xcfa8, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa6c, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9759));
        // A3 0216
        gbc.setState(0xeb6f, 0xc733, 0x3c0, 0xf478, 0x4e9f, 0xfa2c, 0x0, 0x0);
        gbc.writeMem(0xeb6f, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc733, gbc.sp());
        EXPECT(0xeb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeb6f));
        // A3 0218
        gbc.setState(0xbb0d, 0xce7, 0xc750, 0x1aaa, 0xb670, 0x447b, 0x1, 0x1);
        gbc.writeMem(0xbb0d, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xbb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbb0d));
        // A3 0219
        gbc.setState(0x9d4b, 0xb3d0, 0x27b0, 0xefe3, 0xb1a1, 0x9b37, 0x0, 0x0);
        gbc.writeMem(0x9d4b, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0x9d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9d4b));
        // A3 021A
        gbc.setState(0x9ba5, 0xc08b, 0x2e60, 0x8ba8, 0xc685, 0x82e0, 0x0, 0x0);
        gbc.writeMem(0x9ba5, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc08b, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9ba5));
        // A3 021B
        gbc.setState(0x2207, 0x39f3, 0x7940, 0xa6f5, 0x7836, 0x5de6, 0x1, 0x0);
        gbc.writeMem(0x2207, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x39f3, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 021C
        gbc.setState(0x60a9, 0x764f, 0xe9e0, 0x205f, 0x0, 0xcc04, 0x0, 0x0);
        gbc.writeMem(0x60a9, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 021D
        gbc.setState(0x309d, 0x6f9d, 0xe390, 0xf534, 0xa035, 0x6d45, 0x0, 0x0);
        gbc.writeMem(0x309d, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6f9d, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 021E
        gbc.setState(0x34e1, 0x92c1, 0x8360, 0x5cf7, 0x6697, 0x1e32, 0x1, 0x1);
        gbc.writeMem(0x34e1, { 0xa3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92c1, gbc.sp());
        EXPECT(0x34e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 021F
        gbc.setState(0x1554, 0x72d9, 0xc900, 0xe262, 0xa85b, 0xb8bb, 0x1, 0x0);
        gbc.writeMem(0x1554, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0220
        gbc.setState(0x3462, 0x5b1b, 0x7680, 0xc0c5, 0xe4ba, 0xbfe4, 0x0, 0x0);
        gbc.writeMem(0x3462, { 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0221
        gbc.setState(0x57ad, 0x711b, 0x7b60, 0xe68f, 0xda1d, 0xc78e, 0x1, 0x0);
        gbc.writeMem(0x57ad, { 0xa3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x711b, gbc.sp());
        EXPECT(0x57ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0222
        gbc.setState(0xc8e, 0x83e6, 0x5b80, 0x6f1c, 0x706d, 0x8f10, 0x1, 0x0);
        gbc.writeMem(0xc8e, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0223
        gbc.setState(0x264a, 0x932, 0x4c20, 0x58db, 0x9b23, 0x89c4, 0x0, 0x0);
        gbc.writeMem(0x264a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x932, gbc.sp());
        EXPECT(0x264b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0224
        gbc.setState(0x5f2a, 0x1da5, 0x6b30, 0x196a, 0xab6b, 0x9fb3, 0x1, 0x1);
        gbc.writeMem(0x5f2a, { 0xa3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1da5, gbc.sp());
        EXPECT(0x5f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0225
        gbc.setState(0x5249, 0x6ba7, 0x2e40, 0x16c2, 0x64d3, 0x78c3, 0x1, 0x0);
        gbc.writeMem(0x5249, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0x524a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0226
        gbc.setState(0x6fee, 0x87f4, 0x24f0, 0x13e3, 0xbd01, 0x8fa1, 0x1, 0x1);
        gbc.writeMem(0x6fee, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x87f4, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0227
        gbc.setState(0x8393, 0xcf0b, 0x3cb0, 0x2fc7, 0x7cdb, 0xd0e3, 0x1, 0x1);
        gbc.writeMem(0x8393, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcf0b, gbc.sp());
        EXPECT(0x8394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8393));
        // A3 0228
        gbc.setState(0x9271, 0x3188, 0x1ad0, 0x741, 0x74d4, 0xd70a, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9271));
        // A3 0229
        gbc.setState(0x92b9, 0x8349, 0xb190, 0xb4b3, 0xae4f, 0xcf3b, 0x0, 0x1);
        gbc.writeMem(0x92b9, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x92b9));
        // A3 022A
        gbc.setState(0x2fc6, 0xf6e1, 0xafa0, 0xd490, 0x8aae, 0xe1a9, 0x1, 0x0);
        gbc.writeMem(0x2fc6, { 0xa3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 022B
        gbc.setState(0x2543, 0xfe9c, 0x94c0, 0xb70d, 0x72f9, 0x5c01, 0x1, 0x1);
        gbc.writeMem(0x2543, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 022C
        gbc.setState(0x6f3b, 0x466b, 0x8190, 0x2661, 0x3b9c, 0xfb76, 0x0, 0x1);
        gbc.writeMem(0x6f3b, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0x6f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 022D
        gbc.setState(0xc89e, 0xb98f, 0x77c0, 0x8af4, 0x828c, 0xae43, 0x1, 0x0);
        gbc.writeMem(0xc89e, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb98f, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc89e));
        // A3 022E
        gbc.setState(0x9d7c, 0x4abf, 0xd350, 0x92aa, 0x2d9d, 0x746, 0x1, 0x1);
        gbc.writeMem(0x9d7c, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4abf, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9d7c));
        // A3 022F
        gbc.setState(0x1fee, 0xaf8c, 0x6fa0, 0xe8cd, 0x441b, 0x344a, 0x1, 0x1);
        gbc.writeMem(0x1fee, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaf8c, gbc.sp());
        EXPECT(0x1fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0230
        gbc.setState(0x8b31, 0xd150, 0xe8b0, 0x28fa, 0x32fc, 0xcb3, 0x0, 0x1);
        gbc.writeMem(0x8b31, { 0xa3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd150, gbc.sp());
        EXPECT(0x8b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8b31));
        // A3 0232
        gbc.setState(0x4b3f, 0x1ce2, 0x1160, 0xc44, 0x7487, 0x78b8, 0x0, 0x1);
        gbc.writeMem(0x4b3f, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1ce2, gbc.sp());
        EXPECT(0x4b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0233
        gbc.setState(0x1f6d, 0x76d6, 0x9ad0, 0xc1e6, 0x9684, 0x419f, 0x0, 0x1);
        gbc.writeMem(0x1f6d, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x76d6, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0234
        gbc.setState(0x7761, 0x43b7, 0x8f30, 0x1372, 0x4bc1, 0xcd16, 0x1, 0x1);
        gbc.writeMem(0x7761, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x43b7, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0236
        gbc.setState(0xe8e9, 0x7f88, 0x5aa0, 0x96f8, 0x1f72, 0xfe5e, 0x0, 0x1);
        gbc.writeMem(0xe8e9, { 0xa3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7f88, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe8e9));
        // A3 0237
        gbc.setState(0x5061, 0xce44, 0x2360, 0x6bcf, 0x9474, 0x7631, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0238
        gbc.setState(0xeab3, 0xf42f, 0x4980, 0x6106, 0xbba8, 0xdcd7, 0x0, 0x0);
        gbc.writeMem(0xeab3, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf42f, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeab3));
        // A3 0239
        gbc.setState(0xd4cc, 0xfbaa, 0x2e20, 0x171f, 0x5f2c, 0x88d5, 0x1, 0x1);
        gbc.writeMem(0xd4cc, { 0xa3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0xd4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd4cc));
        // A3 023A
        gbc.setState(0x6c95, 0x2a4a, 0xfff0, 0x8328, 0x30ce, 0x554, 0x0, 0x1);
        gbc.writeMem(0x6c95, { 0xa3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2a4a, gbc.sp());
        EXPECT(0x6c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 023B
        gbc.setState(0x785c, 0x1919, 0x2bd0, 0x3d8f, 0x6391, 0xcbcc, 0x0, 0x0);
        gbc.writeMem(0x785c, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1919, gbc.sp());
        EXPECT(0x785d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 023C
        gbc.setState(0x9d4, 0x68d2, 0x2080, 0xddd1, 0x6052, 0x4d2f, 0x1, 0x0);
        gbc.writeMem(0x9d4, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x68d2, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 023E
        gbc.setState(0x4810, 0xd22, 0x30c0, 0xfe41, 0x881f, 0x319f, 0x0, 0x1);
        gbc.writeMem(0x4810, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x4811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0240
        gbc.setState(0xafab, 0x4017, 0x60e0, 0x4722, 0xde0c, 0x75b8, 0x0, 0x0);
        gbc.writeMem(0xafab, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xafab));
        // A3 0241
        gbc.setState(0xa551, 0xffe8, 0x3330, 0xf832, 0xa80e, 0xc587, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xffe8, gbc.sp());
        EXPECT(0xa552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa551));
        // A3 0242
        gbc.setState(0x86c4, 0xf4dd, 0x7b70, 0xf2a4, 0xd424, 0x184d, 0x0, 0x1);
        gbc.writeMem(0x86c4, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf4dd, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x86c4));
        // A3 0243
        gbc.setState(0x45c9, 0x93f9, 0x4be0, 0xb70e, 0xbc53, 0x71e3, 0x1, 0x0);
        gbc.writeMem(0x45c9, { 0xa3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0245
        gbc.setState(0x551e, 0x7785, 0xb820, 0xf889, 0x18bb, 0xfb4d, 0x0, 0x1);
        gbc.writeMem(0x551e, { 0xa3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x551f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0246
        gbc.setState(0x761c, 0x3a6f, 0x5730, 0x5b30, 0x1191, 0x23cb, 0x1, 0x0);
        gbc.writeMem(0x761c, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3a6f, gbc.sp());
        EXPECT(0x761d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0247
        gbc.setState(0xa1f1, 0xda16, 0xc170, 0x9488, 0x81bc, 0x8caa, 0x0, 0x0);
        gbc.writeMem(0xa1f1, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xda16, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa1f1));
        // A3 0248
        gbc.setState(0x4466, 0x21ff, 0x81c0, 0x352b, 0x5cd6, 0x7ebe, 0x0, 0x1);
        gbc.writeMem(0x4466, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x21ff, gbc.sp());
        EXPECT(0x4467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0249
        gbc.setState(0x9d4b, 0x8a8e, 0x46c0, 0xbee7, 0xa5bb, 0xca64, 0x1, 0x0);
        gbc.writeMem(0x9d4b, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8a8e, gbc.sp());
        EXPECT(0x9d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9d4b));
        // A3 024A
        gbc.setState(0x6629, 0x4f37, 0x5110, 0x1ff1, 0xe14, 0x316c, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4f37, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 024B
        gbc.setState(0x55ad, 0x1738, 0xcf80, 0x2dc6, 0x47af, 0x1cd0, 0x1, 0x0);
        gbc.writeMem(0x55ad, { 0xa3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1738, gbc.sp());
        EXPECT(0x55ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 024C
        gbc.setState(0x1f5, 0xc0d6, 0xb6a0, 0xe6dd, 0xe887, 0xb8a9, 0x0, 0x0);
        gbc.writeMem(0x1f5, { 0xa3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc0d6, gbc.sp());
        EXPECT(0x1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 024D
        gbc.setState(0xee77, 0xaa60, 0x6080, 0xb0c7, 0x201e, 0x9d25, 0x0, 0x1);
        gbc.writeMem(0xee77, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0xee78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xee77));
        // A3 024E
        gbc.setState(0x4537, 0x926f, 0x22f0, 0x2901, 0xfc53, 0x20af, 0x0, 0x1);
        gbc.writeMem(0x4537, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x4538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0250
        gbc.setState(0x7d85, 0xa1a4, 0x7810, 0x7156, 0x7aa7, 0xb166, 0x1, 0x0);
        gbc.writeMem(0x7d85, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa1a4, gbc.sp());
        EXPECT(0x7d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0251
        gbc.setState(0xbd99, 0xd89d, 0xa050, 0x2288, 0x5b98, 0x9950, 0x0, 0x0);
        gbc.writeMem(0xbd99, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd89d, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbd99));
        // A3 0252
        gbc.setState(0x12a4, 0x27e1, 0x7de0, 0x3b7c, 0x568d, 0xe7df, 0x0, 0x1);
        gbc.writeMem(0x12a4, { 0xa3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x27e1, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0253
        gbc.setState(0x3049, 0x4050, 0x9dd0, 0x85b8, 0x2748, 0x617d, 0x1, 0x0);
        gbc.writeMem(0x3049, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4050, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0254
        gbc.setState(0x2180, 0xbd84, 0xeea0, 0x5a7c, 0x775b, 0xf784, 0x0, 0x0);
        gbc.writeMem(0x2180, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbd84, gbc.sp());
        EXPECT(0x2181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0257
        gbc.setState(0xaac6, 0xd6cf, 0x9a10, 0x7312, 0x778b, 0x2456, 0x1, 0x0);
        gbc.writeMem(0xaac6, { 0xa3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaac6));
        // A3 0258
        gbc.setState(0x5660, 0xf6f2, 0xc000, 0x229c, 0x370a, 0xd3f, 0x1, 0x1);
        gbc.writeMem(0x5660, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf6f2, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0259
        gbc.setState(0x233b, 0x43ff, 0x2ba0, 0xc2d8, 0xfd20, 0x6f6d, 0x1, 0x1);
        gbc.writeMem(0x233b, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x43ff, gbc.sp());
        EXPECT(0x233c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 025A
        gbc.setState(0xe1b2, 0xe4a8, 0x13d0, 0xbd29, 0x3e9a, 0xe552, 0x0, 0x1);
        gbc.writeMem(0xe1b2, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1b2));
        // A3 025B
        gbc.setState(0x573f, 0x7c7b, 0xd1a0, 0xc27, 0x1126, 0xd9c9, 0x1, 0x0);
        gbc.writeMem(0x573f, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c7b, gbc.sp());
        EXPECT(0x5740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 025C
        gbc.setState(0x1c3b, 0x98b9, 0x9ba0, 0x559e, 0x8e5c, 0xab01, 0x1, 0x1);
        gbc.writeMem(0x1c3b, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x98b9, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 025D
        gbc.setState(0xda25, 0x1a1b, 0xa4c0, 0x5300, 0x36dc, 0x4bb1, 0x1, 0x1);
        gbc.writeMem(0xda25, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1a1b, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xda25));
        // A3 025E
        gbc.setState(0x1637, 0x6055, 0xfa90, 0xdf33, 0xdd1a, 0x1bb4, 0x0, 0x0);
        gbc.writeMem(0x1637, { 0xa3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6055, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 025F
        gbc.setState(0x46b0, 0x4780, 0x4910, 0xbc83, 0xf85f, 0x627a, 0x1, 0x0);
        gbc.writeMem(0x46b0, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4780, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0260
        gbc.setState(0x70b1, 0xcaf8, 0xd760, 0xe3be, 0x34d, 0x2d8c, 0x1, 0x0);
        gbc.writeMem(0x70b1, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcaf8, gbc.sp());
        EXPECT(0x70b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0262
        gbc.setState(0x95f1, 0xa2e2, 0x4a80, 0x2d1c, 0x7731, 0x58ee, 0x0, 0x1);
        gbc.writeMem(0x95f1, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa2e2, gbc.sp());
        EXPECT(0x95f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x95f1));
        // A3 0263
        gbc.setState(0x6803, 0xf3f9, 0x6a00, 0x3cc9, 0xdeed, 0xb5af, 0x0, 0x1);
        gbc.writeMem(0x6803, { 0xa3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf3f9, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0264
        gbc.setState(0xe6e0, 0x338b, 0x14a0, 0x13d8, 0x763c, 0x88f5, 0x0, 0x1);
        gbc.writeMem(0xe6e0, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x338b, gbc.sp());
        EXPECT(0xe6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe6e0));
        // A3 0265
        gbc.setState(0xbf00, 0xaf7c, 0xdfd0, 0x4251, 0x7fb2, 0xb433, 0x0, 0x0);
        gbc.writeMem(0xbf00, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0xbf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbf00));
        // A3 0267
        gbc.setState(0x2b1a, 0x87c6, 0x3ae0, 0x45a5, 0x1f10, 0xbb01, 0x1, 0x0);
        gbc.writeMem(0x2b1a, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0x2b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0268
        gbc.setState(0xc118, 0x1bc6, 0x7730, 0xadfd, 0xd57d, 0x5bcc, 0x0, 0x0);
        gbc.writeMem(0xc118, { 0xa3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc118));
        // A3 0269
        gbc.setState(0x63f8, 0xb06e, 0x6420, 0x97d2, 0x6af6, 0xc834, 0x1, 0x0);
        gbc.writeMem(0x63f8, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb06e, gbc.sp());
        EXPECT(0x63f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 026A
        gbc.setState(0x2327, 0xb17b, 0x1d0, 0x66f6, 0xcdc7, 0xc97b, 0x1, 0x0);
        gbc.writeMem(0x2327, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb17b, gbc.sp());
        EXPECT(0x2328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 026B
        gbc.setState(0xc3e6, 0xf5f8, 0x1d0, 0x3fcc, 0x8244, 0x553f, 0x0, 0x1);
        gbc.writeMem(0xc3e6, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf5f8, gbc.sp());
        EXPECT(0xc3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc3e6));
        // A3 026C
        gbc.setState(0x4c33, 0xbf83, 0xf8e0, 0xff9d, 0x744, 0x15cc, 0x0, 0x0);
        gbc.writeMem(0x4c33, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbf83, gbc.sp());
        EXPECT(0x4c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 026D
        gbc.setState(0xca2, 0x2aa4, 0xbec0, 0xfd96, 0x6cce, 0xd332, 0x0, 0x1);
        gbc.writeMem(0xca2, { 0xa3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2aa4, gbc.sp());
        EXPECT(0xca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 026E
        gbc.setState(0x82e8, 0xaf91, 0x1f70, 0x2111, 0xefb6, 0x1fc6, 0x1, 0x1);
        gbc.writeMem(0x82e8, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0x82e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x82e8));
        // A3 026F
        gbc.setState(0xdfc8, 0x173d, 0x6290, 0x2ec5, 0xbb1c, 0x9f02, 0x1, 0x0);
        gbc.writeMem(0xdfc8, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0xdfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdfc8));
        // A3 0270
        gbc.setState(0xd342, 0x21d1, 0x4750, 0xbcb7, 0x7633, 0x8895, 0x1, 0x0);
        gbc.writeMem(0xd342, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd342));
        // A3 0271
        gbc.setState(0x517b, 0x5031, 0x4c10, 0x9a04, 0x485, 0xb34d, 0x1, 0x0);
        gbc.writeMem(0x517b, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5031, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0272
        gbc.setState(0xa935, 0x89e3, 0x2930, 0xf191, 0x1d9d, 0x6762, 0x0, 0x1);
        gbc.writeMem(0xa935, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0xa936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa935));
        // A3 0273
        gbc.setState(0x83ae, 0x416e, 0x2f0, 0xc99c, 0x539d, 0x43f4, 0x1, 0x1);
        gbc.writeMem(0x83ae, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x416e, gbc.sp());
        EXPECT(0x83af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x83ae));
        // A3 0274
        gbc.setState(0x796d, 0xf48, 0x5f40, 0x44a7, 0x46f3, 0x92be, 0x1, 0x0);
        gbc.writeMem(0x796d, { 0xa3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf48, gbc.sp());
        EXPECT(0x796e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0275
        gbc.setState(0x6bac, 0xb594, 0x90c0, 0x4d0a, 0xe058, 0x978d, 0x1, 0x0);
        gbc.writeMem(0x6bac, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0276
        gbc.setState(0x946f, 0x7762, 0x94d0, 0x5a32, 0xf75c, 0xcb1f, 0x0, 0x0);
        gbc.writeMem(0x946f, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7762, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x946f));
        // A3 0277
        gbc.setState(0x4e28, 0xc94f, 0x540, 0x91c4, 0x9098, 0xf58c, 0x1, 0x1);
        gbc.writeMem(0x4e28, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc94f, gbc.sp());
        EXPECT(0x4e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0278
        gbc.setState(0x42c9, 0x9038, 0xb240, 0xe5aa, 0xfa5c, 0xa1af, 0x1, 0x1);
        gbc.writeMem(0x42c9, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0x42ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0279
        gbc.setState(0xa146, 0xb5e, 0xffd0, 0xdf98, 0x1116, 0x7639, 0x0, 0x0);
        gbc.writeMem(0xa146, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0xa147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa146));
        // A3 027A
        gbc.setState(0xdbff, 0x69e6, 0xd4a0, 0x7c58, 0xbaf0, 0xaf5b, 0x0, 0x0);
        gbc.writeMem(0xdbff, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdbff));
        // A3 027B
        gbc.setState(0x6f0b, 0xe4f6, 0x79b0, 0x4cc5, 0x3e26, 0xac65, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe4f6, gbc.sp());
        EXPECT(0x6f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 027C
        gbc.setState(0x969a, 0x9bfe, 0xcf0, 0x4aa9, 0xd2f9, 0x832c, 0x0, 0x1);
        gbc.writeMem(0x969a, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9bfe, gbc.sp());
        EXPECT(0x969b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x969a));
        // A3 027D
        gbc.setState(0x37b0, 0xfbaa, 0xd670, 0xce2f, 0xad33, 0xd07a, 0x0, 0x0);
        gbc.writeMem(0x37b0, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfbaa, gbc.sp());
        EXPECT(0x37b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 027E
        gbc.setState(0xb014, 0xe98c, 0x35c0, 0x8f39, 0x3d66, 0xadc8, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0xb015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb014));
        // A3 027F
        gbc.setState(0x700f, 0x6dbd, 0xc660, 0x33ae, 0xc12c, 0x8e70, 0x0, 0x1);
        gbc.writeMem(0x700f, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6dbd, gbc.sp());
        EXPECT(0x7010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0280
        gbc.setState(0x4b8b, 0xb015, 0xdf20, 0xea29, 0xa198, 0xcf56, 0x1, 0x0);
        gbc.writeMem(0x4b8b, { 0xa3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0x4b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0281
        gbc.setState(0x7424, 0x22d1, 0x7e50, 0x8ee8, 0x214f, 0x5d8a, 0x1, 0x0);
        gbc.writeMem(0x7424, { 0xa3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0282
        gbc.setState(0xd499, 0xc6b5, 0x760, 0x850d, 0xaf31, 0xf93, 0x0, 0x0);
        gbc.writeMem(0xd499, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd499));
        // A3 0283
        gbc.setState(0x7354, 0x4038, 0xaac0, 0xcb21, 0xdfe1, 0xec4a, 0x0, 0x0);
        gbc.writeMem(0x7354, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4038, gbc.sp());
        EXPECT(0x7355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0284
        gbc.setState(0xb371, 0xdf29, 0x97a0, 0x3f54, 0xccd6, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0xb371, { 0xa3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0xb372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb371));
        // A3 0285
        gbc.setState(0xbf86, 0xca48, 0x9e20, 0xe386, 0x8122, 0xadf5, 0x0, 0x1);
        gbc.writeMem(0xbf86, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca48, gbc.sp());
        EXPECT(0xbf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbf86));
        // A3 0286
        gbc.setState(0x77eb, 0xbe1f, 0x1720, 0xe0ca, 0x5b96, 0x2ed3, 0x0, 0x0);
        gbc.writeMem(0x77eb, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0287
        gbc.setState(0xd63d, 0x7e8d, 0xb990, 0x7861, 0xbe01, 0xcf8c, 0x0, 0x0);
        gbc.writeMem(0xd63d, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd63d));
        // A3 0288
        gbc.setState(0x3bac, 0xa98a, 0x90, 0xd9ca, 0x1468, 0x6e36, 0x0, 0x0);
        gbc.writeMem(0x3bac, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0x3bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0289
        gbc.setState(0xd87c, 0x61b1, 0xb80, 0x6e13, 0xc275, 0xf0a4, 0x0, 0x0);
        gbc.writeMem(0xd87c, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x61b1, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd87c));
        // A3 028A
        gbc.setState(0xa7e0, 0xc973, 0xb9a0, 0x7e97, 0x57d4, 0xd70, 0x0, 0x1);
        gbc.writeMem(0xa7e0, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc973, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa7e0));
        // A3 028B
        gbc.setState(0x8f73, 0xb878, 0x5110, 0x100, 0x6a5d, 0xa145, 0x0, 0x1);
        gbc.writeMem(0x8f73, { 0xa3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb878, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8f73));
        // A3 028C
        gbc.setState(0x8b36, 0xd536, 0xd9a0, 0xd25b, 0x4a81, 0xc9bc, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd536, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8b36));
        // A3 028D
        gbc.setState(0xe7c, 0x4ece, 0xa6c0, 0x5d20, 0x6135, 0x41b7, 0x1, 0x1);
        gbc.writeMem(0xe7c, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4ece, gbc.sp());
        EXPECT(0xe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 028E
        gbc.setState(0x88b5, 0xa905, 0x1680, 0x412f, 0x9665, 0xe77b, 0x1, 0x0);
        gbc.writeMem(0x88b5, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x88b5));
        // A3 028F
        gbc.setState(0x2a57, 0x4dc6, 0x5b70, 0xd6a1, 0xe883, 0x392a, 0x0, 0x1);
        gbc.writeMem(0x2a57, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4dc6, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0290
        gbc.setState(0x5ff0, 0xf6d5, 0x5150, 0x51dc, 0xa7, 0x439, 0x0, 0x0);
        gbc.writeMem(0x5ff0, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0291
        gbc.setState(0xd74e, 0xd78c, 0xd590, 0x1f6d, 0x2ea3, 0x4324, 0x1, 0x0);
        gbc.writeMem(0xd74e, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd78c, gbc.sp());
        EXPECT(0xd74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd74e));
        // A3 0292
        gbc.setState(0x2f70, 0x4789, 0xe170, 0x1765, 0x86c3, 0x837c, 0x0, 0x0);
        gbc.writeMem(0x2f70, { 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4789, gbc.sp());
        EXPECT(0x2f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0293
        gbc.setState(0xe5bf, 0xa631, 0x17a0, 0xec06, 0x402e, 0x9fa6, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa631, gbc.sp());
        EXPECT(0xe5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe5bf));
        // A3 0294
        gbc.setState(0x7806, 0x632b, 0xa110, 0xf3a5, 0x8135, 0xd95e, 0x0, 0x1);
        gbc.writeMem(0x7806, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x632b, gbc.sp());
        EXPECT(0x7807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0295
        gbc.setState(0x6ad3, 0xc288, 0x9c20, 0xff4d, 0x473, 0x8a93, 0x1, 0x1);
        gbc.writeMem(0x6ad3, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0296
        gbc.setState(0xd3e3, 0xe884, 0x1770, 0x761, 0x9fcd, 0x831b, 0x0, 0x0);
        gbc.writeMem(0xd3e3, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0xd3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3e3));
        // A3 0298
        gbc.setState(0x2f10, 0x724c, 0x6b90, 0x88d1, 0x723f, 0x4172, 0x1, 0x1);
        gbc.writeMem(0x2f10, { 0xa3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x2f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0299
        gbc.setState(0x790c, 0x47d1, 0x26d0, 0x47b9, 0xcdb3, 0xea95, 0x1, 0x1);
        gbc.writeMem(0x790c, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x47d1, gbc.sp());
        EXPECT(0x790d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 029A
        gbc.setState(0x39b5, 0x8cda, 0xf060, 0xdd61, 0xb7b5, 0x7734, 0x0, 0x1);
        gbc.writeMem(0x39b5, { 0xa3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x39b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 029B
        gbc.setState(0x389, 0x6cf4, 0xfdb0, 0xb7c5, 0x69ad, 0x42d7, 0x1, 0x0);
        gbc.writeMem(0x389, { 0xa3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6cf4, gbc.sp());
        EXPECT(0x38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 029C
        gbc.setState(0x23f4, 0x1a59, 0x3840, 0xc015, 0x652, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0x23f4, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 029D
        gbc.setState(0x1d65, 0x154a, 0xfb80, 0x1e60, 0x1e42, 0xf1c5, 0x0, 0x0);
        gbc.writeMem(0x1d65, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x154a, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 029E
        gbc.setState(0xc1be, 0xd3c3, 0x7ae0, 0xe76d, 0x57fc, 0x9663, 0x0, 0x1);
        gbc.writeMem(0xc1be, { 0xa3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0xc1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc1be));
        // A3 029F
        gbc.setState(0xb41a, 0x4ce5, 0x7700, 0x96d8, 0xf7, 0x75d4, 0x0, 0x0);
        gbc.writeMem(0xb41a, { 0xa3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4ce5, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb41a));
        // A3 02A0
        gbc.setState(0xc666, 0x725b, 0xbb00, 0xd03e, 0x24d1, 0x56c1, 0x0, 0x1);
        gbc.writeMem(0xc666, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x725b, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc666));
        // A3 02A2
        gbc.setState(0x14af, 0x56a2, 0x55e0, 0xbb55, 0x92df, 0xc549, 0x0, 0x0);
        gbc.writeMem(0x14af, { 0xa3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0x14b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02A3
        gbc.setState(0x1367, 0xe0ed, 0xe7c0, 0x4bc0, 0xc700, 0x8767, 0x0, 0x1);
        gbc.writeMem(0x1367, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe0ed, gbc.sp());
        EXPECT(0x1368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02A4
        gbc.setState(0x78f, 0x9043, 0x4430, 0x6714, 0xdb62, 0x44e5, 0x0, 0x0);
        gbc.writeMem(0x78f, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9043, gbc.sp());
        EXPECT(0x790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02A5
        gbc.setState(0x363a, 0xdf73, 0x7a10, 0x833b, 0x1749, 0xa96a, 0x1, 0x1);
        gbc.writeMem(0x363a, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdf73, gbc.sp());
        EXPECT(0x363b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02A6
        gbc.setState(0xe55f, 0x453, 0xdc60, 0x201d, 0xe36e, 0x6876, 0x0, 0x1);
        gbc.writeMem(0xe55f, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0xe560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe55f));
        // A3 02A7
        gbc.setState(0x9f55, 0xd310, 0xdaf0, 0x6243, 0xc0f4, 0x56e0, 0x0, 0x1);
        gbc.writeMem(0x9f55, { 0xa3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd310, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9f55));
        // A3 02A8
        gbc.setState(0xc9eb, 0x35ec, 0x27f0, 0x6fac, 0xd810, 0x1145, 0x1, 0x0);
        gbc.writeMem(0xc9eb, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0xc9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc9eb));
        // A3 02A9
        gbc.setState(0x5278, 0x446a, 0x400, 0x90d6, 0x8f4a, 0xdcf7, 0x1, 0x0);
        gbc.writeMem(0x5278, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02AA
        gbc.setState(0xb38e, 0x336d, 0x8350, 0x9202, 0x3e58, 0x46a, 0x0, 0x1);
        gbc.writeMem(0xb38e, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x336d, gbc.sp());
        EXPECT(0xb38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb38e));
        // A3 02AB
        gbc.setState(0x4919, 0x3582, 0xc510, 0x56ed, 0x4dfb, 0xe24e, 0x1, 0x1);
        gbc.writeMem(0x4919, { 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02AC
        gbc.setState(0xa4d7, 0x151b, 0xfe30, 0x41d2, 0x30b7, 0x6733, 0x0, 0x0);
        gbc.writeMem(0xa4d7, { 0xa3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0xa4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa4d7));
        // A3 02AD
        gbc.setState(0x30ae, 0xabf, 0x6c10, 0x651d, 0xf6e7, 0x961a, 0x0, 0x0);
        gbc.writeMem(0x30ae, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xabf, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02AF
        gbc.setState(0x4618, 0x5bde, 0x57b0, 0xe856, 0x71e2, 0xd8b, 0x1, 0x0);
        gbc.writeMem(0x4618, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5bde, gbc.sp());
        EXPECT(0x4619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02B0
        gbc.setState(0x9c43, 0xf24b, 0x58f0, 0x259b, 0x4ad9, 0x3cd9, 0x1, 0x0);
        gbc.writeMem(0x9c43, { 0xa3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x9c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9c43));
        // A3 02B1
        gbc.setState(0x5b7c, 0xd543, 0xd3c0, 0xf219, 0xf1c0, 0x44fc, 0x1, 0x1);
        gbc.writeMem(0x5b7c, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0x5b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02B2
        gbc.setState(0x9cd6, 0x2eb0, 0xdf90, 0x9141, 0x6027, 0xcfe9, 0x0, 0x0);
        gbc.writeMem(0x9cd6, { 0xa3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2eb0, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9cd6));
        // A3 02B3
        gbc.setState(0xea89, 0x9699, 0x2a90, 0xe3f, 0x25ac, 0x3fdd, 0x0, 0x0);
        gbc.writeMem(0xea89, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xea89));
        // A3 02B4
        gbc.setState(0x877a, 0xb812, 0x80e0, 0xb960, 0x8144, 0xd1a3, 0x0, 0x0);
        gbc.writeMem(0x877a, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb812, gbc.sp());
        EXPECT(0x877b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x877a));
        // A3 02B6
        gbc.setState(0x3632, 0x3a7a, 0xff60, 0xff03, 0x5b0, 0x2fd9, 0x0, 0x1);
        gbc.writeMem(0x3632, { 0xa3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3a7a, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02B7
        gbc.setState(0xefa6, 0x227a, 0x67e0, 0xfb7d, 0xb581, 0xd503, 0x1, 0x0);
        gbc.writeMem(0xefa6, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x227a, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xefa6));
        // A3 02B8
        gbc.setState(0xc893, 0x6da0, 0xa620, 0x9b8f, 0x237e, 0xfbc2, 0x1, 0x1);
        gbc.writeMem(0xc893, { 0xa3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6da0, gbc.sp());
        EXPECT(0xc894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc893));
        // A3 02B9
        gbc.setState(0x5d89, 0x9021, 0xda60, 0x68c1, 0xdcfe, 0x7e78, 0x1, 0x1);
        gbc.writeMem(0x5d89, { 0xa3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02BA
        gbc.setState(0x4758, 0x443c, 0x7660, 0xf12e, 0x8c1, 0xcc13, 0x0, 0x0);
        gbc.writeMem(0x4758, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x443c, gbc.sp());
        EXPECT(0x4759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02BB
        gbc.setState(0x3f3f, 0xabc, 0x14d0, 0x2e82, 0xda52, 0xe1, 0x0, 0x0);
        gbc.writeMem(0x3f3f, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xabc, gbc.sp());
        EXPECT(0x3f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02BC
        gbc.setState(0x6feb, 0x7237, 0x2b40, 0x140b, 0x586a, 0x73bf, 0x1, 0x0);
        gbc.writeMem(0x6feb, { 0xa3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7237, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02BD
        gbc.setState(0x1144, 0x4c79, 0x92a0, 0xad19, 0x764, 0x24b7, 0x0, 0x0);
        gbc.writeMem(0x1144, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02BE
        gbc.setState(0xecc8, 0x4b1b, 0x43d0, 0x820b, 0x7915, 0x2ca5, 0x0, 0x0);
        gbc.writeMem(0xecc8, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4b1b, gbc.sp());
        EXPECT(0xecc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xecc8));
        // A3 02BF
        gbc.setState(0x6c05, 0x5bc6, 0x6a10, 0xcff3, 0xa0bf, 0xbddc, 0x0, 0x1);
        gbc.writeMem(0x6c05, { 0xa3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5bc6, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C0
        gbc.setState(0x9c98, 0x79e9, 0x7240, 0xb884, 0xb04d, 0x29bb, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9c98));
        // A3 02C1
        gbc.setState(0x55d5, 0xf9de, 0x6400, 0x9d9, 0xb9a7, 0x37aa, 0x1, 0x0);
        gbc.writeMem(0x55d5, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf9de, gbc.sp());
        EXPECT(0x55d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C2
        gbc.setState(0x3203, 0x46ce, 0x3a20, 0x595c, 0x491c, 0xd27, 0x0, 0x0);
        gbc.writeMem(0x3203, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0x3204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C3
        gbc.setState(0x3a65, 0xfcd2, 0x47c0, 0xc77d, 0x7414, 0x9700, 0x0, 0x1);
        gbc.writeMem(0x3a65, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfcd2, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C4
        gbc.setState(0xa4ab, 0xf319, 0xeca0, 0x7df5, 0x944e, 0x689f, 0x1, 0x0);
        gbc.writeMem(0xa4ab, { 0xa3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf319, gbc.sp());
        EXPECT(0xa4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa4ab));
        // A3 02C5
        gbc.setState(0x1cad, 0xf60d, 0xb630, 0x57a1, 0x4232, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x1cad, { 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf60d, gbc.sp());
        EXPECT(0x1cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C6
        gbc.setState(0x3401, 0xbbcb, 0x90a0, 0x9ac6, 0xb5d4, 0x90d9, 0x0, 0x1);
        gbc.writeMem(0x3401, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbbcb, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C7
        gbc.setState(0x504, 0x5e0, 0x4630, 0x474b, 0x5b8b, 0xe3bb, 0x1, 0x1);
        gbc.writeMem(0x504, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5e0, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C8
        gbc.setState(0x2bac, 0x9020, 0x1fa0, 0xaaf5, 0xd2d, 0x8e06, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0xa3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9020, gbc.sp());
        EXPECT(0x2bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02C9
        gbc.setState(0xe53a, 0x7221, 0xe60, 0x296e, 0x725b, 0x5704, 0x1, 0x0);
        gbc.writeMem(0xe53a, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe53a));
        // A3 02CA
        gbc.setState(0x3f6b, 0x4a0a, 0x8670, 0xfa68, 0x8f91, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0x3f6b, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02CB
        gbc.setState(0x1853, 0xfb15, 0x5e20, 0xf2d4, 0x3a6a, 0xbb74, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfb15, gbc.sp());
        EXPECT(0x1854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02CC
        gbc.setState(0x51f5, 0x6018, 0x7c40, 0x66b6, 0x1e9e, 0x858a, 0x0, 0x0);
        gbc.writeMem(0x51f5, { 0xa3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6018, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02CD
        gbc.setState(0x847c, 0xb8e2, 0x1730, 0x5e40, 0xd70d, 0xc1ea, 0x1, 0x0);
        gbc.writeMem(0x847c, { 0xa3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x847c));
        // A3 02CE
        gbc.setState(0x76a2, 0xfc59, 0x5230, 0xc5e0, 0x6097, 0x2dfc, 0x1, 0x1);
        gbc.writeMem(0x76a2, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02CF
        gbc.setState(0x7498, 0x689b, 0x3890, 0x2871, 0xd44e, 0x7e04, 0x1, 0x1);
        gbc.writeMem(0x7498, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0x7499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D0
        gbc.setState(0x5010, 0x25ac, 0x4ea0, 0xcbda, 0xd4b9, 0x3a57, 0x1, 0x0);
        gbc.writeMem(0x5010, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x5011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D1
        gbc.setState(0x74e9, 0xb0dd, 0x2660, 0x9afd, 0xe214, 0x6115, 0x0, 0x1);
        gbc.writeMem(0x74e9, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb0dd, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D3
        gbc.setState(0x1c2d, 0x887b, 0x76e0, 0xd298, 0x28f8, 0x4057, 0x0, 0x1);
        gbc.writeMem(0x1c2d, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D4
        gbc.setState(0x447f, 0x7d0, 0x73c0, 0xe7d3, 0x49dd, 0x67d8, 0x1, 0x1);
        gbc.writeMem(0x447f, { 0xa3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0x4480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D5
        gbc.setState(0x45db, 0xbc58, 0xda00, 0xa95f, 0x9a43, 0x319a, 0x1, 0x0);
        gbc.writeMem(0x45db, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbc58, gbc.sp());
        EXPECT(0x45dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02D7
        gbc.setState(0x967b, 0x29ff, 0xe1d0, 0x7789, 0xb5bb, 0x221c, 0x1, 0x1);
        gbc.writeMem(0x967b, { 0xa3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x29ff, gbc.sp());
        EXPECT(0x967c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x967b));
        // A3 02D8
        gbc.setState(0x8edb, 0x57e9, 0x2fc0, 0x5d11, 0x3519, 0xf515, 0x0, 0x1);
        gbc.writeMem(0x8edb, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x8edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8edb));
        // A3 02D9
        gbc.setState(0x307, 0xeff8, 0x460, 0xbc1b, 0xb848, 0x9d3, 0x0, 0x0);
        gbc.writeMem(0x307, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0x308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02DA
        gbc.setState(0xa523, 0x545b, 0x17c0, 0xb6f0, 0x94f3, 0xee93, 0x0, 0x0);
        gbc.writeMem(0xa523, { 0xa3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x545b, gbc.sp());
        EXPECT(0xa524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa523));
        // A3 02DB
        gbc.setState(0xf5, 0x3d76, 0xcf20, 0x819d, 0x8d70, 0xc1e8, 0x1, 0x1);
        gbc.writeMem(0xf5, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3d76, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02DC
        gbc.setState(0xb17e, 0x92fb, 0x2130, 0xf035, 0x1fdb, 0xafe, 0x0, 0x1);
        gbc.writeMem(0xb17e, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x92fb, gbc.sp());
        EXPECT(0xb17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb17e));
        // A3 02DD
        gbc.setState(0xa34c, 0x803c, 0xaa90, 0x4e8, 0x6b45, 0xa4cf, 0x0, 0x0);
        gbc.writeMem(0xa34c, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa34c));
        // A3 02DF
        gbc.setState(0xd4dd, 0xd36d, 0x31b0, 0x9d84, 0xbed, 0xb1df, 0x0, 0x0);
        gbc.writeMem(0xd4dd, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0xd4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd4dd));
        // A3 02E0
        gbc.setState(0x72f9, 0x9380, 0xeee0, 0x2dfc, 0x8e68, 0xb682, 0x0, 0x1);
        gbc.writeMem(0x72f9, { 0xa3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9380, gbc.sp());
        EXPECT(0x72fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02E1
        gbc.setState(0xc3a2, 0xb8ef, 0xcd0, 0xb7c9, 0xe31f, 0x31d3, 0x1, 0x0);
        gbc.writeMem(0xc3a2, { 0xa3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb8ef, gbc.sp());
        EXPECT(0xc3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc3a2));
        // A3 02E2
        gbc.setState(0xd3b2, 0x7445, 0xdcb0, 0x29a3, 0xfc3a, 0x90e1, 0x1, 0x1);
        gbc.writeMem(0xd3b2, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7445, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3b2));
        // A3 02E3
        gbc.setState(0x289f, 0x46a6, 0x5d50, 0xc2ee, 0xca20, 0x1586, 0x0, 0x1);
        gbc.writeMem(0x289f, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x46a6, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02E4
        gbc.setState(0xe2da, 0x921c, 0xe7c0, 0xb85f, 0x234f, 0x3301, 0x0, 0x0);
        gbc.writeMem(0xe2da, { 0xa3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x921c, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe2da));
        // A3 02E5
        gbc.setState(0x4f7f, 0x9383, 0x9550, 0x7860, 0x1cbf, 0xd95f, 0x1, 0x0);
        gbc.writeMem(0x4f7f, { 0xa3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02E6
        gbc.setState(0xa4fa, 0x925c, 0x20e0, 0x840b, 0x7b3e, 0xf31c, 0x0, 0x0);
        gbc.writeMem(0xa4fa, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa4fa));
        // A3 02E7
        gbc.setState(0x7843, 0x6e3f, 0x39c0, 0xd2ab, 0x79eb, 0x93f7, 0x1, 0x1);
        gbc.writeMem(0x7843, { 0xa3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x7844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02E8
        gbc.setState(0x3c85, 0x85d0, 0xb230, 0xf85, 0xa390, 0x24e0, 0x1, 0x0);
        gbc.writeMem(0x3c85, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0x3c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02E9
        gbc.setState(0x11bf, 0xecc8, 0xb20, 0xc3d2, 0x6a26, 0xe614, 0x1, 0x1);
        gbc.writeMem(0x11bf, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xecc8, gbc.sp());
        EXPECT(0x11c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02EA
        gbc.setState(0x1231, 0xc7b9, 0xaba0, 0x9daf, 0x578d, 0x3af, 0x1, 0x1);
        gbc.writeMem(0x1231, { 0xa3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc7b9, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02EB
        gbc.setState(0x884f, 0x2d44, 0xa920, 0xeeb7, 0xef7, 0x8a5, 0x0, 0x1);
        gbc.writeMem(0x884f, { 0xa3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2d44, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x884f));
        // A3 02EC
        gbc.setState(0x7177, 0xd227, 0x62e0, 0xac26, 0x6481, 0x6024, 0x1, 0x1);
        gbc.writeMem(0x7177, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0x7178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02ED
        gbc.setState(0xa604, 0x64bc, 0x15c0, 0x5780, 0xf1f7, 0x69f3, 0x0, 0x1);
        gbc.writeMem(0xa604, { 0xa3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x64bc, gbc.sp());
        EXPECT(0xa605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa604));
        // A3 02EE
        gbc.setState(0xb69e, 0xc754, 0x3830, 0xdc95, 0x9ce6, 0x13c8, 0x1, 0x0);
        gbc.writeMem(0xb69e, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc754, gbc.sp());
        EXPECT(0xb69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb69e));
        // A3 02EF
        gbc.setState(0xc2d, 0x4d15, 0x4a50, 0xa47c, 0xa124, 0x55ff, 0x1, 0x1);
        gbc.writeMem(0xc2d, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4d15, gbc.sp());
        EXPECT(0xc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02F0
        gbc.setState(0x4cbd, 0xb18, 0x60c0, 0xf0f6, 0x69ab, 0x9367, 0x0, 0x0);
        gbc.writeMem(0x4cbd, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02F1
        gbc.setState(0xcc4e, 0xc68b, 0x7330, 0x7d1b, 0xd068, 0x8a89, 0x0, 0x1);
        gbc.writeMem(0xcc4e, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc68b, gbc.sp());
        EXPECT(0xcc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcc4e));
        // A3 02F2
        gbc.setState(0xe42e, 0x9205, 0x1bb0, 0xcf73, 0xec27, 0xa355, 0x0, 0x0);
        gbc.writeMem(0xe42e, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9205, gbc.sp());
        EXPECT(0xe42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe42e));
        // A3 02F3
        gbc.setState(0x5790, 0x52e1, 0x360, 0xbd8b, 0xa873, 0x262, 0x0, 0x1);
        gbc.writeMem(0x5790, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x52e1, gbc.sp());
        EXPECT(0x5791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02F4
        gbc.setState(0x799e, 0x77d0, 0x5df0, 0xaa12, 0x9921, 0xaac5, 0x1, 0x1);
        gbc.writeMem(0x799e, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x77d0, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02F5
        gbc.setState(0x561b, 0x9545, 0x2a10, 0xfb3e, 0x176d, 0xff7f, 0x1, 0x1);
        gbc.writeMem(0x561b, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9545, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02F6
        gbc.setState(0xd060, 0xa234, 0x9f0, 0x890e, 0x2675, 0x6170, 0x1, 0x0);
        gbc.writeMem(0xd060, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa234, gbc.sp());
        EXPECT(0xd061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd060));
        // A3 02F7
        gbc.setState(0xe191, 0xa367, 0xc00, 0x4ea, 0x704a, 0xf465, 0x0, 0x1);
        gbc.writeMem(0xe191, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe191));
        // A3 02F8
        gbc.setState(0xb4a6, 0xed05, 0x3bd0, 0xe4f2, 0x909, 0xf26e, 0x0, 0x1);
        gbc.writeMem(0xb4a6, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xed05, gbc.sp());
        EXPECT(0xb4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb4a6));
        // A3 02F9
        gbc.setState(0x3d6e, 0x5a6b, 0x9650, 0xbf06, 0x2095, 0xed8a, 0x0, 0x0);
        gbc.writeMem(0x3d6e, { 0xa3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5a6b, gbc.sp());
        EXPECT(0x3d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 02FA
        gbc.setState(0x8a35, 0x5bc7, 0xed70, 0x88bc, 0xb0f0, 0x1d7a, 0x1, 0x0);
        gbc.writeMem(0x8a35, { 0xa3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5bc7, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8a35));
        // A3 02FC
        gbc.setState(0x806e, 0x344b, 0x630, 0x7edb, 0x8764, 0x6cad, 0x1, 0x0);
        gbc.writeMem(0x806e, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x806e));
        // A3 02FD
        gbc.setState(0xa19f, 0xf9da, 0x6a0, 0x57e7, 0x2999, 0x89d5, 0x1, 0x0);
        gbc.writeMem(0xa19f, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf9da, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa19f));
        // A3 02FE
        gbc.setState(0xa2ac, 0x5af7, 0x9720, 0x47ad, 0xa55b, 0x4fa8, 0x0, 0x1);
        gbc.writeMem(0xa2ac, { 0xa3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5af7, gbc.sp());
        EXPECT(0xa2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa2ac));
        // A3 02FF
        gbc.setState(0x4ccc, 0xa9c6, 0xa4e0, 0xbb0b, 0xc89b, 0x2a86, 0x0, 0x0);
        gbc.writeMem(0x4ccc, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0300
        gbc.setState(0x5c8a, 0xb929, 0x5d40, 0x28f6, 0x26ca, 0xda39, 0x1, 0x1);
        gbc.writeMem(0x5c8a, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb929, gbc.sp());
        EXPECT(0x5c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0301
        gbc.setState(0xb986, 0x749, 0x2340, 0xf3eb, 0xe1a3, 0x4cda, 0x0, 0x0);
        gbc.writeMem(0xb986, { 0xa3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0xb987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb986));
        // A3 0302
        gbc.setState(0x1747, 0x8be9, 0x4730, 0x3f1e, 0xca74, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x1747, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8be9, gbc.sp());
        EXPECT(0x1748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0303
        gbc.setState(0xd11, 0xcdd0, 0xd690, 0xd430, 0x6068, 0x7e36, 0x1, 0x1);
        gbc.writeMem(0xd11, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0xd12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0304
        gbc.setState(0x5e31, 0x7b93, 0xef20, 0xcdae, 0x780d, 0xe965, 0x1, 0x1);
        gbc.writeMem(0x5e31, { 0xa3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0x5e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0305
        gbc.setState(0xfff, 0x17b4, 0xc660, 0xd19f, 0x18e, 0x6167, 0x0, 0x0);
        gbc.writeMem(0xfff, { 0xa3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0306
        gbc.setState(0xab7e, 0x6b25, 0xbad0, 0x897f, 0xcda, 0x97b9, 0x1, 0x1);
        gbc.writeMem(0xab7e, { 0xa3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6b25, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xab7e));
        // A3 0307
        gbc.setState(0x7b43, 0x3042, 0x1610, 0x621e, 0x6b3f, 0xa62, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3042, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0308
        gbc.setState(0x8a8e, 0x301, 0x5e90, 0xf7e4, 0x2431, 0x6980, 0x0, 0x0);
        gbc.writeMem(0x8a8e, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x301, gbc.sp());
        EXPECT(0x8a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8a8e));
        // A3 0309
        gbc.setState(0xdbf2, 0xccb8, 0x1390, 0x674, 0x9be4, 0x1cc5, 0x1, 0x1);
        gbc.writeMem(0xdbf2, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xccb8, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdbf2));
        // A3 030B
        gbc.setState(0x2cf, 0x95f3, 0xc740, 0x6378, 0x93e6, 0x634f, 0x1, 0x1);
        gbc.writeMem(0x2cf, { 0xa3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x95f3, gbc.sp());
        EXPECT(0x2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 030C
        gbc.setState(0x1231, 0x444e, 0xe8a0, 0xc66d, 0x38ef, 0x3094, 0x1, 0x1);
        gbc.writeMem(0x1231, { 0xa3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x444e, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 030D
        gbc.setState(0x40a5, 0x8170, 0x32a0, 0x1494, 0x7ac0, 0x5b0d, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 030E
        gbc.setState(0x7b3b, 0x874b, 0xdcc0, 0x7a12, 0x97bc, 0x134, 0x1, 0x1);
        gbc.writeMem(0x7b3b, { 0xa3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x874b, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 030F
        gbc.setState(0xd2e4, 0x1e97, 0xaab0, 0x60fd, 0x1ec0, 0x4320, 0x0, 0x1);
        gbc.writeMem(0xd2e4, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1e97, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd2e4));
        // A3 0310
        gbc.setState(0x63fa, 0x835d, 0x6440, 0xe2b0, 0x313f, 0x2504, 0x1, 0x0);
        gbc.writeMem(0x63fa, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x835d, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0311
        gbc.setState(0x803b, 0x7693, 0xea80, 0x47e1, 0x7a6a, 0xf687, 0x0, 0x0);
        gbc.writeMem(0x803b, { 0xa3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7693, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x803b));
        // A3 0312
        gbc.setState(0xb706, 0xd1fd, 0x2f90, 0x4043, 0x3fee, 0x41df, 0x0, 0x1);
        gbc.writeMem(0xb706, { 0xa3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd1fd, gbc.sp());
        EXPECT(0xb707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb706));
        // A3 0313
        gbc.setState(0x8240, 0x46a6, 0x9250, 0xaf6d, 0x1431, 0xa1a, 0x1, 0x1);
        gbc.writeMem(0x8240, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x46a6, gbc.sp());
        EXPECT(0x8241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8240));
        // A3 0314
        gbc.setState(0xb3fc, 0x8d7a, 0x13d0, 0xc79d, 0x89c1, 0xea85, 0x1, 0x1);
        gbc.writeMem(0xb3fc, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8d7a, gbc.sp());
        EXPECT(0xb3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb3fc));
        // A3 0315
        gbc.setState(0x6292, 0x94b2, 0x3430, 0x7b01, 0xcb82, 0xa838, 0x1, 0x0);
        gbc.writeMem(0x6292, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0316
        gbc.setState(0x27ea, 0xb787, 0x8b20, 0xe954, 0x4df, 0x695c, 0x0, 0x0);
        gbc.writeMem(0x27ea, { 0xa3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb787, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0317
        gbc.setState(0xd6f6, 0xfbd6, 0x5640, 0x58d8, 0xb400, 0x844e, 0x1, 0x0);
        gbc.writeMem(0xd6f6, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfbd6, gbc.sp());
        EXPECT(0xd6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd6f6));
        // A3 0318
        gbc.setState(0x3962, 0x4aa9, 0x1b0, 0x5c9, 0xab56, 0xb9c8, 0x0, 0x1);
        gbc.writeMem(0x3962, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4aa9, gbc.sp());
        EXPECT(0x3963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0319
        gbc.setState(0x3ae6, 0x458a, 0x75a0, 0x4b5d, 0xf59f, 0xad25, 0x0, 0x0);
        gbc.writeMem(0x3ae6, { 0xa3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x458a, gbc.sp());
        EXPECT(0x3ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 031A
        gbc.setState(0xe49b, 0x76f0, 0x1bc0, 0xd2c0, 0x1b77, 0x8b57, 0x0, 0x1);
        gbc.writeMem(0xe49b, { 0xa3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0xe49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe49b));
        // A3 031B
        gbc.setState(0x41a2, 0xee6, 0x1a60, 0x6e06, 0x59f, 0xaca3, 0x0, 0x0);
        gbc.writeMem(0x41a2, { 0xa3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xee6, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 031C
        gbc.setState(0xf0a, 0xc2, 0xbfa0, 0xe44d, 0xef58, 0xb854, 0x0, 0x1);
        gbc.writeMem(0xf0a, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc2, gbc.sp());
        EXPECT(0xf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 031D
        gbc.setState(0xdc07, 0xa9d0, 0x3ca0, 0xc43f, 0xc9de, 0x8298, 0x0, 0x0);
        gbc.writeMem(0xdc07, { 0xa3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc07));
        // A3 031E
        gbc.setState(0xc9a9, 0xf8b2, 0xee30, 0xd9c9, 0x7886, 0x7598, 0x0, 0x0);
        gbc.writeMem(0xc9a9, { 0xa3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf8b2, gbc.sp());
        EXPECT(0xc9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc9a9));
        // A3 031F
        gbc.setState(0xce23, 0x7d03, 0x88e0, 0x9e77, 0xbcc8, 0x71ad, 0x1, 0x0);
        gbc.writeMem(0xce23, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7d03, gbc.sp());
        EXPECT(0xce24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xce23));
        // A3 0320
        gbc.setState(0x7331, 0xafb6, 0x94c0, 0xe68f, 0xc9ab, 0x7e6d, 0x0, 0x1);
        gbc.writeMem(0x7331, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0321
        gbc.setState(0x8b9f, 0xddad, 0x6f80, 0xb3d2, 0xe547, 0xbbf8, 0x1, 0x0);
        gbc.writeMem(0x8b9f, { 0xa3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xddad, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8b9f));
        // A3 0322
        gbc.setState(0x54bd, 0xb5bd, 0xb800, 0x6d13, 0x21c4, 0x97ea, 0x1, 0x0);
        gbc.writeMem(0x54bd, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb5bd, gbc.sp());
        EXPECT(0x54be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0323
        gbc.setState(0xc3af, 0xd73a, 0x20b0, 0xae0d, 0xd90e, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0xc3af, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd73a, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc3af));
        // A3 0324
        gbc.setState(0x128e, 0xbd5b, 0xe3b0, 0x7721, 0xe3fd, 0xc165, 0x1, 0x0);
        gbc.writeMem(0x128e, { 0xa3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbd5b, gbc.sp());
        EXPECT(0x128f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0325
        gbc.setState(0x7804, 0x1b0, 0x3250, 0x32c2, 0x3a65, 0x7f54, 0x0, 0x1);
        gbc.writeMem(0x7804, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1b0, gbc.sp());
        EXPECT(0x7805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0326
        gbc.setState(0xe159, 0x7018, 0xbaf0, 0x63b8, 0xf97c, 0x8bcf, 0x1, 0x0);
        gbc.writeMem(0xe159, { 0xa3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7018, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe159));
        // A3 0327
        gbc.setState(0x7bea, 0x478f, 0xbde0, 0x5203, 0xffaa, 0xfe6f, 0x0, 0x0);
        gbc.writeMem(0x7bea, { 0xa3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x478f, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0328
        gbc.setState(0x9b01, 0xf0c6, 0x2120, 0x7d29, 0x552f, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x9b01, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf0c6, gbc.sp());
        EXPECT(0x9b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9b01));
        // A3 0329
        gbc.setState(0x538e, 0x6803, 0x5d40, 0x290f, 0xdbbb, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0x538e, { 0xa3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6803, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 032B
        gbc.setState(0xe392, 0xd6e2, 0xf670, 0x6c2b, 0xe814, 0xc920, 0x0, 0x1);
        gbc.writeMem(0xe392, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd6e2, gbc.sp());
        EXPECT(0xe393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe392));
        // A3 032C
        gbc.setState(0xb2a8, 0xcdb2, 0x7020, 0x642, 0xf312, 0x9ae7, 0x1, 0x0);
        gbc.writeMem(0xb2a8, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcdb2, gbc.sp());
        EXPECT(0xb2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb2a8));
        // A3 032D
        gbc.setState(0x2c57, 0xa57f, 0x26c0, 0x7d76, 0xd6ae, 0xa988, 0x1, 0x1);
        gbc.writeMem(0x2c57, { 0xa3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa57f, gbc.sp());
        EXPECT(0x2c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 032E
        gbc.setState(0xbd58, 0x62e9, 0x1800, 0xb36c, 0x21e2, 0x4ad6, 0x1, 0x0);
        gbc.writeMem(0xbd58, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x62e9, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbd58));
        // A3 032F
        gbc.setState(0xa162, 0x8a2f, 0x7e90, 0x693b, 0x5139, 0x19d2, 0x1, 0x1);
        gbc.writeMem(0xa162, { 0xa3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8a2f, gbc.sp());
        EXPECT(0xa163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa162));
        // A3 0330
        gbc.setState(0xe3a1, 0xacae, 0xba0, 0xa734, 0xfcde, 0x6386, 0x1, 0x0);
        gbc.writeMem(0xe3a1, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xacae, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe3a1));
        // A3 0331
        gbc.setState(0xd95f, 0xaea1, 0x980, 0xb6d0, 0xfb9e, 0xbfe6, 0x0, 0x0);
        gbc.writeMem(0xd95f, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd95f));
        // A3 0333
        gbc.setState(0x4a73, 0xe0f7, 0x21a0, 0x7b4b, 0x2ef1, 0xc621, 0x0, 0x1);
        gbc.writeMem(0x4a73, { 0xa3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0334
        gbc.setState(0x753d, 0xa9c3, 0x1fb0, 0x9b75, 0x9781, 0xb413, 0x1, 0x1);
        gbc.writeMem(0x753d, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa9c3, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0335
        gbc.setState(0x163f, 0x6565, 0x9c40, 0x6086, 0xcba4, 0xb5bf, 0x0, 0x0);
        gbc.writeMem(0x163f, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6565, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0336
        gbc.setState(0x468b, 0x4a82, 0x5ac0, 0x4021, 0x7832, 0xa349, 0x0, 0x0);
        gbc.writeMem(0x468b, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a82, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0337
        gbc.setState(0xe1c0, 0x4d72, 0x4ff0, 0xf88e, 0xc916, 0x4e6d, 0x1, 0x0);
        gbc.writeMem(0xe1c0, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4d72, gbc.sp());
        EXPECT(0xe1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe1c0));
        // A3 0338
        gbc.setState(0x6028, 0xcb04, 0x3f00, 0x7377, 0xf23e, 0xe7dd, 0x0, 0x0);
        gbc.writeMem(0x6028, { 0xa3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x6029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0339
        gbc.setState(0x34e, 0x9c68, 0x9fd0, 0xd317, 0xaa8c, 0xe038, 0x1, 0x0);
        gbc.writeMem(0x34e, { 0xa3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9c68, gbc.sp());
        EXPECT(0x34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 033B
        gbc.setState(0x8109, 0x2834, 0xe590, 0xa7b, 0x6f6c, 0x519c, 0x0, 0x1);
        gbc.writeMem(0x8109, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2834, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8109));
        // A3 033C
        gbc.setState(0x707b, 0xf92c, 0x8660, 0x3dcc, 0xd007, 0x4b28, 0x0, 0x1);
        gbc.writeMem(0x707b, { 0xa3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0x707c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 033D
        gbc.setState(0x9ada, 0x82e2, 0x4ca0, 0x4901, 0x1483, 0x7cef, 0x0, 0x0);
        gbc.writeMem(0x9ada, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x82e2, gbc.sp());
        EXPECT(0x9adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9ada));
        // A3 033E
        gbc.setState(0x9a12, 0x57dd, 0x2920, 0x7ba4, 0x7ea4, 0x1af2, 0x0, 0x0);
        gbc.writeMem(0x9a12, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x57dd, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9a12));
        // A3 033F
        gbc.setState(0xa8fa, 0xc058, 0xb020, 0x43f3, 0x5399, 0xae25, 0x1, 0x0);
        gbc.writeMem(0xa8fa, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0xa8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa8fa));
        // A3 0340
        gbc.setState(0xd7d2, 0x908b, 0x41b0, 0xe579, 0xcd7d, 0xe9, 0x1, 0x0);
        gbc.writeMem(0xd7d2, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd7d2));
        // A3 0341
        gbc.setState(0x59e9, 0xe0e1, 0x1770, 0x9ce0, 0x52f1, 0xcd51, 0x0, 0x1);
        gbc.writeMem(0x59e9, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe0e1, gbc.sp());
        EXPECT(0x59ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0342
        gbc.setState(0xcb9f, 0xc315, 0x6c70, 0xce0f, 0x4bc, 0xb4a, 0x0, 0x1);
        gbc.writeMem(0xcb9f, { 0xa3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc315, gbc.sp());
        EXPECT(0xcba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcb9f));
        // A3 0343
        gbc.setState(0x17e7, 0xf7e8, 0x67c0, 0xb8bb, 0xb6e8, 0x666a, 0x0, 0x0);
        gbc.writeMem(0x17e7, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0x17e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0345
        gbc.setState(0x1167, 0xf6d1, 0xf500, 0x4b49, 0x9238, 0xf725, 0x0, 0x0);
        gbc.writeMem(0x1167, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0347
        gbc.setState(0x3b0, 0xc1ea, 0xf170, 0x5ad, 0x6f96, 0x5cc5, 0x1, 0x0);
        gbc.writeMem(0x3b0, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0x3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0348
        gbc.setState(0xa7d4, 0x217a, 0x5420, 0xc767, 0xa564, 0x8598, 0x1, 0x0);
        gbc.writeMem(0xa7d4, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0xa7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa7d4));
        // A3 0349
        gbc.setState(0x82c9, 0x6957, 0x8970, 0x6dc4, 0x755a, 0xb8f8, 0x0, 0x0);
        gbc.writeMem(0x82c9, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0x82ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x82c9));
        // A3 034A
        gbc.setState(0xc19d, 0x3bb, 0xe450, 0xd718, 0x911d, 0xe2f, 0x0, 0x1);
        gbc.writeMem(0xc19d, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0xc19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc19d));
        // A3 034B
        gbc.setState(0x57e, 0x886f, 0x3100, 0x844d, 0x590e, 0x4f03, 0x0, 0x1);
        gbc.writeMem(0x57e, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0x57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 034C
        gbc.setState(0xca99, 0xa23, 0x88f0, 0x8248, 0xaba7, 0x9fee, 0x1, 0x1);
        gbc.writeMem(0xca99, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa23, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xca99));
        // A3 034D
        gbc.setState(0x2d65, 0x51c, 0xd4f0, 0x4dfb, 0xfe87, 0xa323, 0x1, 0x1);
        gbc.writeMem(0x2d65, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x51c, gbc.sp());
        EXPECT(0x2d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 034E
        gbc.setState(0xb310, 0xd723, 0x5d0, 0xbafa, 0xc8ce, 0xfa06, 0x1, 0x0);
        gbc.writeMem(0xb310, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd723, gbc.sp());
        EXPECT(0xb311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb310));
        // A3 0350
        gbc.setState(0xb4c, 0xc726, 0x7010, 0x9811, 0x479a, 0x26f7, 0x1, 0x0);
        gbc.writeMem(0xb4c, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0xb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0351
        gbc.setState(0x2ae4, 0xaa5c, 0xa360, 0x7527, 0x29f8, 0x1792, 0x0, 0x1);
        gbc.writeMem(0x2ae4, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaa5c, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0352
        gbc.setState(0x15d9, 0x24d8, 0x63b0, 0xc31c, 0x6983, 0xefc7, 0x0, 0x1);
        gbc.writeMem(0x15d9, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x24d8, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0353
        gbc.setState(0xc6f6, 0xd4d1, 0x6530, 0xf742, 0xda82, 0xd34b, 0x0, 0x0);
        gbc.writeMem(0xc6f6, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd4d1, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc6f6));
        // A3 0354
        gbc.setState(0xa91e, 0xed3e, 0x4e60, 0xd6b0, 0xbfa, 0xca08, 0x0, 0x0);
        gbc.writeMem(0xa91e, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xed3e, gbc.sp());
        EXPECT(0xa91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa91e));
        // A3 0355
        gbc.setState(0x1dbc, 0x2b16, 0x8950, 0x661a, 0x2b1b, 0x3db9, 0x1, 0x1);
        gbc.writeMem(0x1dbc, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0x1dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0356
        gbc.setState(0x8ee, 0xd657, 0x1720, 0x8f38, 0xd233, 0xbf65, 0x1, 0x0);
        gbc.writeMem(0x8ee, { 0xa3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0357
        gbc.setState(0x2928, 0xc3e, 0xc660, 0xeb19, 0x1529, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0x2928, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc3e, gbc.sp());
        EXPECT(0x2929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0358
        gbc.setState(0xa16e, 0xfa96, 0xb130, 0x2add, 0xb9ae, 0x9690, 0x0, 0x1);
        gbc.writeMem(0xa16e, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfa96, gbc.sp());
        EXPECT(0xa16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa16e));
        // A3 0359
        gbc.setState(0x8165, 0xf43, 0x5490, 0xdcc7, 0x64c1, 0x7c3d, 0x0, 0x1);
        gbc.writeMem(0x8165, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf43, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8165));
        // A3 035A
        gbc.setState(0xc809, 0x6503, 0x3620, 0x5bf4, 0x9b9f, 0xb2be, 0x0, 0x1);
        gbc.writeMem(0xc809, { 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6503, gbc.sp());
        EXPECT(0xc80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc809));
        // A3 035B
        gbc.setState(0x852c, 0xb25e, 0x3520, 0x45b3, 0xaf2, 0x142f, 0x0, 0x1);
        gbc.writeMem(0x852c, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x852c));
        // A3 035C
        gbc.setState(0xa2ea, 0xf89c, 0x7010, 0xbdbf, 0xd866, 0xad3a, 0x0, 0x0);
        gbc.writeMem(0xa2ea, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf89c, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa2ea));
        // A3 035D
        gbc.setState(0x8190, 0x4566, 0xdf70, 0x35c5, 0x32c1, 0x4aa2, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8190));
        // A3 035F
        gbc.setState(0xb478, 0x2c74, 0x7320, 0xc6f8, 0x6ff7, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0xb478, { 0xa3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2c74, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb478));
        // A3 0360
        gbc.setState(0x31a4, 0x76fc, 0x77d0, 0x4151, 0x641, 0xfcc1, 0x0, 0x0);
        gbc.writeMem(0x31a4, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0361
        gbc.setState(0x2b2d, 0x4822, 0x8e40, 0x3491, 0xb95e, 0x251c, 0x1, 0x1);
        gbc.writeMem(0x2b2d, { 0xa3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4822, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0362
        gbc.setState(0xc03e, 0x5c69, 0x60b0, 0x200b, 0xe137, 0xb4d6, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5c69, gbc.sp());
        EXPECT(0xc03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc03e));
        // A3 0364
        gbc.setState(0xd3d3, 0xe842, 0x91a0, 0x1590, 0xec98, 0x6e04, 0x1, 0x1);
        gbc.writeMem(0xd3d3, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe842, gbc.sp());
        EXPECT(0xd3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd3d3));
        // A3 0365
        gbc.setState(0x5a4, 0x2ef0, 0xaff0, 0xaa4, 0x8f5a, 0x27ce, 0x1, 0x1);
        gbc.writeMem(0x5a4, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0366
        gbc.setState(0x6853, 0x196a, 0xf250, 0xa9f2, 0xd0c6, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0x6853, { 0xa3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0367
        gbc.setState(0x3baa, 0xfeb1, 0xec60, 0x31f4, 0x4bac, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x3baa, { 0xa3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0x3bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0368
        gbc.setState(0x2574, 0xd1a, 0x3af0, 0x364d, 0x3689, 0x5498, 0x0, 0x1);
        gbc.writeMem(0x2574, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0369
        gbc.setState(0x62f2, 0x8aea, 0x8220, 0xcb92, 0x92f8, 0xbd80, 0x1, 0x1);
        gbc.writeMem(0x62f2, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0x62f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 036A
        gbc.setState(0xcda6, 0xd801, 0x4d00, 0x1277, 0x676, 0x9b0, 0x1, 0x0);
        gbc.writeMem(0xcda6, { 0xa3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd801, gbc.sp());
        EXPECT(0xcda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcda6));
        // A3 036B
        gbc.setState(0x44e, 0xe097, 0x4400, 0xc048, 0x82eb, 0x951c, 0x1, 0x1);
        gbc.writeMem(0x44e, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 036C
        gbc.setState(0x5b50, 0x71ea, 0xce40, 0xc1b4, 0xe9e7, 0x36b5, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0xa3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x71ea, gbc.sp());
        EXPECT(0x5b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 036D
        gbc.setState(0xc48, 0x98b4, 0x24f0, 0xf525, 0xfc18, 0x7d90, 0x0, 0x0);
        gbc.writeMem(0xc48, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 036E
        gbc.setState(0xf31, 0xabd7, 0xac60, 0xea0d, 0x1429, 0xd18b, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 036F
        gbc.setState(0x620f, 0xb02e, 0x2a20, 0x94da, 0x8f44, 0xa009, 0x1, 0x0);
        gbc.writeMem(0x620f, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb02e, gbc.sp());
        EXPECT(0x6210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0370
        gbc.setState(0x6522, 0x5c34, 0xec10, 0x7775, 0xe264, 0xd4e3, 0x1, 0x1);
        gbc.writeMem(0x6522, { 0xa3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5c34, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0371
        gbc.setState(0x48e9, 0x6fe6, 0x94a0, 0x195e, 0x97ad, 0xd103, 0x0, 0x1);
        gbc.writeMem(0x48e9, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6fe6, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0372
        gbc.setState(0x612, 0x275, 0x9b60, 0x7f17, 0x8c1c, 0xbec1, 0x0, 0x1);
        gbc.writeMem(0x612, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x275, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0373
        gbc.setState(0x8467, 0x11e0, 0x95c0, 0xb8fc, 0x10b2, 0x134b, 0x1, 0x0);
        gbc.writeMem(0x8467, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11e0, gbc.sp());
        EXPECT(0x8468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8467));
        // A3 0375
        gbc.setState(0x2d2d, 0xce5e, 0x82f0, 0x58c6, 0x128d, 0xe601, 0x0, 0x0);
        gbc.writeMem(0x2d2d, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0376
        gbc.setState(0xd045, 0x230, 0xeb20, 0x9101, 0x611f, 0xdd2f, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x230, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd045));
        // A3 0377
        gbc.setState(0x730d, 0xa779, 0x34b0, 0x2f08, 0xe291, 0xa10, 0x0, 0x0);
        gbc.writeMem(0x730d, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa779, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0378
        gbc.setState(0x1593, 0xeeef, 0x60d0, 0x6e53, 0xf0c8, 0x5cb0, 0x0, 0x0);
        gbc.writeMem(0x1593, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0x1594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0379
        gbc.setState(0x77da, 0x2b58, 0xd7b0, 0xf197, 0xb452, 0x10c6, 0x0, 0x0);
        gbc.writeMem(0x77da, { 0xa3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2b58, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 037A
        gbc.setState(0xa6ef, 0x121b, 0x6fe0, 0x351a, 0x90ed, 0x89ba, 0x0, 0x1);
        gbc.writeMem(0xa6ef, { 0xa3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa6ef));
        // A3 037B
        gbc.setState(0x6b05, 0xfa8a, 0xc110, 0x8cf0, 0x5e1d, 0xa8cc, 0x1, 0x1);
        gbc.writeMem(0x6b05, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfa8a, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 037C
        gbc.setState(0x9ce5, 0x7bd3, 0xc980, 0x23ca, 0xb80f, 0xa9e, 0x1, 0x1);
        gbc.writeMem(0x9ce5, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x9ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9ce5));
        // A3 037D
        gbc.setState(0x8741, 0xb1fa, 0xf90, 0xffb4, 0x1f29, 0x7c96, 0x1, 0x1);
        gbc.writeMem(0x8741, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0x8742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8741));
        // A3 037E
        gbc.setState(0xbdd0, 0xd983, 0x92f0, 0x9165, 0x7edd, 0x5764, 0x0, 0x0);
        gbc.writeMem(0xbdd0, { 0xa3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd983, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbdd0));
        // A3 037F
        gbc.setState(0x1d19, 0xd920, 0x9c90, 0x7de1, 0x2e1a, 0x8b8c, 0x0, 0x0);
        gbc.writeMem(0x1d19, { 0xa3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd920, gbc.sp());
        EXPECT(0x1d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0380
        gbc.setState(0xbb4a, 0xf9d4, 0x84d0, 0xae73, 0x51ab, 0x102a, 0x0, 0x1);
        gbc.writeMem(0xbb4a, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf9d4, gbc.sp());
        EXPECT(0xbb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbb4a));
        // A3 0381
        gbc.setState(0x89de, 0x724d, 0xe200, 0xc581, 0xf9be, 0x73bb, 0x1, 0x1);
        gbc.writeMem(0x89de, { 0xa3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x724d, gbc.sp());
        EXPECT(0x89df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x89de));
        // A3 0382
        gbc.setState(0x78cf, 0x8c4b, 0x86f0, 0xc830, 0xec2, 0xc8b8, 0x1, 0x0);
        gbc.writeMem(0x78cf, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c4b, gbc.sp());
        EXPECT(0x78d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0385
        gbc.setState(0x4566, 0x4519, 0x3fd0, 0xfbe5, 0x83c1, 0x906f, 0x0, 0x0);
        gbc.writeMem(0x4566, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4519, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0386
        gbc.setState(0x6d19, 0xd95b, 0x4b10, 0xec75, 0xaf71, 0xa4d6, 0x1, 0x0);
        gbc.writeMem(0x6d19, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd95b, gbc.sp());
        EXPECT(0x6d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0387
        gbc.setState(0x55bb, 0xeab6, 0x91d0, 0x2e1d, 0x6ab5, 0x1aac, 0x1, 0x1);
        gbc.writeMem(0x55bb, { 0xa3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x55bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0388
        gbc.setState(0xa79f, 0x6e41, 0xae40, 0xd839, 0x5bdb, 0x9c34, 0x1, 0x1);
        gbc.writeMem(0xa79f, { 0xa3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e41, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa79f));
        // A3 0389
        gbc.setState(0xdbed, 0x2c2e, 0xb8d0, 0xa643, 0x7e22, 0xc8c6, 0x0, 0x1);
        gbc.writeMem(0xdbed, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2c2e, gbc.sp());
        EXPECT(0xdbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdbed));
        // A3 038A
        gbc.setState(0xad7d, 0x3ec3, 0x7f20, 0xe521, 0xe571, 0xbbca, 0x0, 0x0);
        gbc.writeMem(0xad7d, { 0xa3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3ec3, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad7d));
        // A3 038B
        gbc.setState(0xbe52, 0xca50, 0x4ff0, 0x9b39, 0x5f2a, 0x81e7, 0x1, 0x0);
        gbc.writeMem(0xbe52, { 0xa3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca50, gbc.sp());
        EXPECT(0xbe53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbe52));
        // A3 038C
        gbc.setState(0x6579, 0x5289, 0xea60, 0x383e, 0xeb5e, 0x3406, 0x0, 0x1);
        gbc.writeMem(0x6579, { 0xa3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5289, gbc.sp());
        EXPECT(0x657a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 038D
        gbc.setState(0x2ef3, 0x3dc2, 0x8ca0, 0x88aa, 0xe88, 0x32f, 0x0, 0x1);
        gbc.writeMem(0x2ef3, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3dc2, gbc.sp());
        EXPECT(0x2ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 038E
        gbc.setState(0xa5ba, 0xae3e, 0xf530, 0x9c5b, 0x751a, 0xfd36, 0x1, 0x0);
        gbc.writeMem(0xa5ba, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xa5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa5ba));
        // A3 038F
        gbc.setState(0xb5ee, 0x4916, 0x3a0, 0x2c38, 0x81ef, 0x2b29, 0x1, 0x1);
        gbc.writeMem(0xb5ee, { 0xa3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb5ee));
        // A3 0390
        gbc.setState(0x75f9, 0x8233, 0xc740, 0xa654, 0xda91, 0xdddf, 0x0, 0x1);
        gbc.writeMem(0x75f9, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0x75fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0391
        gbc.setState(0x415c, 0x6e69, 0x35d0, 0x8d80, 0x7f1a, 0x2e6c, 0x0, 0x0);
        gbc.writeMem(0x415c, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6e69, gbc.sp());
        EXPECT(0x415d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0392
        gbc.setState(0x73f6, 0xa5d7, 0x2780, 0xded1, 0x6ef5, 0x564c, 0x0, 0x1);
        gbc.writeMem(0x73f6, { 0xa3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0393
        gbc.setState(0xdd75, 0xfb00, 0x9020, 0xb7bc, 0x239, 0xe51e, 0x1, 0x0);
        gbc.writeMem(0xdd75, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb00, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdd75));
        // A3 0394
        gbc.setState(0x6c10, 0x7c4e, 0x1430, 0xd452, 0xbd5c, 0xdfd, 0x1, 0x1);
        gbc.writeMem(0x6c10, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7c4e, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0395
        gbc.setState(0x24ae, 0x3146, 0x5720, 0x3a33, 0xbded, 0xae0c, 0x1, 0x0);
        gbc.writeMem(0x24ae, { 0xa3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3146, gbc.sp());
        EXPECT(0x24af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0396
        gbc.setState(0x57ee, 0x9eaf, 0xf2c0, 0x45e8, 0x15e, 0xe52a, 0x1, 0x1);
        gbc.writeMem(0x57ee, { 0xa3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x57ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0397
        gbc.setState(0x2a69, 0x8d1b, 0x24d0, 0x3be9, 0x4201, 0xc677, 0x0, 0x0);
        gbc.writeMem(0x2a69, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8d1b, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 0398
        gbc.setState(0xee6a, 0x75e8, 0x2800, 0xb9cd, 0x70bf, 0x5b7f, 0x0, 0x0);
        gbc.writeMem(0xee6a, { 0xa3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x75e8, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xee6a));
        // A3 039A
        gbc.setState(0x34dd, 0x1068, 0x8cc0, 0x4f67, 0x34e5, 0x8310, 0x0, 0x0);
        gbc.writeMem(0x34dd, { 0xa3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0x34de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 039B
        gbc.setState(0x4c8b, 0xf52c, 0x4350, 0x2661, 0x879, 0xc093, 0x1, 0x0);
        gbc.writeMem(0x4c8b, { 0xa3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf52c, gbc.sp());
        EXPECT(0x4c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 039C
        gbc.setState(0xaa38, 0x424, 0x3e50, 0x736f, 0x439f, 0x2c3c, 0x0, 0x1);
        gbc.writeMem(0xaa38, { 0xa3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x424, gbc.sp());
        EXPECT(0xaa39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xaa38));
        // A3 039D
        gbc.setState(0x48f4, 0x7305, 0xf7d0, 0xc19, 0x3f56, 0x6217, 0x1, 0x0);
        gbc.writeMem(0x48f4, { 0xa3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7305, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 039E
        gbc.setState(0xdca9, 0x1837, 0xb230, 0x877b, 0x197e, 0x5716, 0x1, 0x1);
        gbc.writeMem(0xdca9, { 0xa3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0xdcaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdca9));
        // A3 039F
        gbc.setState(0x3da3, 0xcc1e, 0x92c0, 0x88d9, 0x8bdb, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x3da3, { 0xa3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcc1e, gbc.sp());
        EXPECT(0x3da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A0
        gbc.setState(0x464f, 0x8945, 0xe570, 0xdbf4, 0x76e6, 0x1b21, 0x0, 0x0);
        gbc.writeMem(0x464f, { 0xa3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0x4650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A1
        gbc.setState(0xbeda, 0xcc4e, 0x950, 0xd65a, 0xb48f, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0xbeda, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0xbedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbeda));
        // A3 03A2
        gbc.setState(0x3ac, 0x4725, 0x89b0, 0x501f, 0x8e69, 0x7ae1, 0x0, 0x0);
        gbc.writeMem(0x3ac, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4725, gbc.sp());
        EXPECT(0x3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A3
        gbc.setState(0x3a25, 0x6d2b, 0xb070, 0x876b, 0x9d78, 0xfdde, 0x0, 0x0);
        gbc.writeMem(0x3a25, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6d2b, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A4
        gbc.setState(0xb3d, 0x4194, 0x4fb0, 0x7604, 0xb64b, 0x636, 0x0, 0x0);
        gbc.writeMem(0xb3d, { 0xa3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4194, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A6
        gbc.setState(0xebe3, 0x6300, 0x3f00, 0x6f90, 0xd171, 0xadac, 0x1, 0x0);
        gbc.writeMem(0xebe3, { 0xa3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6300, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xebe3));
        // A3 03A7
        gbc.setState(0x6891, 0xc5c8, 0x5490, 0x8d23, 0xe6af, 0x6e2c, 0x0, 0x1);
        gbc.writeMem(0x6891, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc5c8, gbc.sp());
        EXPECT(0x6892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A8
        gbc.setState(0x4d55, 0x3571, 0x3710, 0x85f5, 0xd7a4, 0x44b3, 0x1, 0x1);
        gbc.writeMem(0x4d55, { 0xa3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03A9
        gbc.setState(0x13a, 0xb149, 0x4a40, 0xc05f, 0x4b36, 0xf5b1, 0x1, 0x0);
        gbc.writeMem(0x13a, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb149, gbc.sp());
        EXPECT(0x13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03AA
        gbc.setState(0x1269, 0xf57b, 0xea20, 0xd8e0, 0x6b64, 0xef9f, 0x1, 0x0);
        gbc.writeMem(0x1269, { 0xa3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf57b, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03AB
        gbc.setState(0x9e50, 0x7973, 0x33e0, 0xaaf2, 0x29bf, 0x1276, 0x0, 0x1);
        gbc.writeMem(0x9e50, { 0xa3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9e50));
        // A3 03AD
        gbc.setState(0x983f, 0x84cf, 0xc840, 0xa7b, 0xe2b8, 0x530d, 0x0, 0x1);
        gbc.writeMem(0x983f, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x9840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x983f));
        // A3 03AE
        gbc.setState(0xcbd8, 0x68c0, 0xb5e0, 0x744c, 0x83ea, 0xa58a, 0x0, 0x1);
        gbc.writeMem(0xcbd8, { 0xa3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x68c0, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcbd8));
        // A3 03AF
        gbc.setState(0x8308, 0xf91f, 0x5940, 0x3eec, 0x74d2, 0xced5, 0x1, 0x1);
        gbc.writeMem(0x8308, { 0xa3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf91f, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8308));
        // A3 03B0
        gbc.setState(0x92e7, 0xbe9a, 0xa060, 0xc331, 0x23d2, 0x196c, 0x0, 0x0);
        gbc.writeMem(0x92e7, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x92e7));
        // A3 03B1
        gbc.setState(0x1c62, 0xa851, 0x4b40, 0x6993, 0x9fa1, 0xb4ad, 0x1, 0x0);
        gbc.writeMem(0x1c62, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B2
        gbc.setState(0x7a02, 0xc100, 0x8d80, 0xfaa3, 0xfbb7, 0x5fac, 0x0, 0x0);
        gbc.writeMem(0x7a02, { 0xa3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B3
        gbc.setState(0xc23, 0xd48b, 0xd500, 0xefb6, 0x414a, 0x274c, 0x0, 0x1);
        gbc.writeMem(0xc23, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd48b, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B4
        gbc.setState(0xc490, 0xd285, 0x8570, 0x2bce, 0x8ea1, 0x67af, 0x0, 0x0);
        gbc.writeMem(0xc490, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd285, gbc.sp());
        EXPECT(0xc491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc490));
        // A3 03B5
        gbc.setState(0xeab, 0x6e89, 0x4d90, 0x1fe2, 0xd8cb, 0x35d4, 0x0, 0x1);
        gbc.writeMem(0xeab, { 0xa3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e89, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B6
        gbc.setState(0x3ac1, 0x81e7, 0x4230, 0xd192, 0xda36, 0x3192, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x81e7, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B7
        gbc.setState(0x791e, 0x5979, 0x9b90, 0xa127, 0xd5a8, 0xce01, 0x1, 0x0);
        gbc.writeMem(0x791e, { 0xa3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B8
        gbc.setState(0x30fe, 0x9ed2, 0x9a10, 0xacea, 0xae87, 0x80b1, 0x1, 0x0);
        gbc.writeMem(0x30fe, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03B9
        gbc.setState(0x1903, 0x812c, 0x94d0, 0x9af8, 0x1652, 0xe749, 0x0, 0x1);
        gbc.writeMem(0x1903, { 0xa3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x812c, gbc.sp());
        EXPECT(0x1904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03BB
        gbc.setState(0x349a, 0x6aed, 0xd9a0, 0xa998, 0xd72b, 0x2dcc, 0x1, 0x1);
        gbc.writeMem(0x349a, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6aed, gbc.sp());
        EXPECT(0x349b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03BC
        gbc.setState(0xe53b, 0x9aca, 0x8c40, 0x2e16, 0x911a, 0x50fb, 0x0, 0x1);
        gbc.writeMem(0xe53b, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9aca, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe53b));
        // A3 03BD
        gbc.setState(0x287d, 0x7207, 0x8150, 0xad6b, 0xdbde, 0x5839, 0x0, 0x1);
        gbc.writeMem(0x287d, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7207, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03BE
        gbc.setState(0xdbe6, 0x23e6, 0xfc10, 0x93ae, 0x7471, 0x4809, 0x0, 0x0);
        gbc.writeMem(0xdbe6, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x23e6, gbc.sp());
        EXPECT(0xdbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdbe6));
        // A3 03BF
        gbc.setState(0xad4b, 0xf991, 0x9840, 0xee1f, 0x4928, 0x1b6d, 0x0, 0x0);
        gbc.writeMem(0xad4b, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf991, gbc.sp());
        EXPECT(0xad4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad4b));
        // A3 03C1
        gbc.setState(0xeec3, 0x7b4c, 0x5180, 0xeb5e, 0x3151, 0x5054, 0x1, 0x0);
        gbc.writeMem(0xeec3, { 0xa3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b4c, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xeec3));
        // A3 03C2
        gbc.setState(0xb6fb, 0x94f8, 0x8af0, 0x1a50, 0x734, 0x1b4a, 0x0, 0x0);
        gbc.writeMem(0xb6fb, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb6fb));
        // A3 03C3
        gbc.setState(0x9feb, 0x6879, 0xce50, 0x9a92, 0x12f0, 0x4042, 0x1, 0x0);
        gbc.writeMem(0x9feb, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x9fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9feb));
        // A3 03C5
        gbc.setState(0xabc6, 0x4457, 0x6fb0, 0x46c3, 0xc0ea, 0x8178, 0x0, 0x1);
        gbc.writeMem(0xabc6, { 0xa3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4457, gbc.sp());
        EXPECT(0xabc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xabc6));
        // A3 03C6
        gbc.setState(0xe43d, 0xa019, 0x74f0, 0xf4c6, 0xd673, 0x3439, 0x1, 0x0);
        gbc.writeMem(0xe43d, { 0xa3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0xe43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe43d));
        // A3 03C7
        gbc.setState(0xcdc0, 0x9081, 0x31e0, 0x243f, 0x6d91, 0x6393, 0x1, 0x1);
        gbc.writeMem(0xcdc0, { 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0xcdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcdc0));
        // A3 03C8
        gbc.setState(0x705f, 0x8b37, 0x62c0, 0x7df3, 0x73bf, 0xfc0, 0x1, 0x1);
        gbc.writeMem(0x705f, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8b37, gbc.sp());
        EXPECT(0x7060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03CA
        gbc.setState(0xa929, 0x51b, 0xbdc0, 0x1730, 0x4f14, 0xe523, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xa3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x51b, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa929));
        // A3 03CB
        gbc.setState(0x1753, 0xca7b, 0xe260, 0x52f6, 0xcc1c, 0x5bdd, 0x0, 0x0);
        gbc.writeMem(0x1753, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0x1754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03CC
        gbc.setState(0x23b1, 0x4ff9, 0x5350, 0xe577, 0x5546, 0x6769, 0x0, 0x1);
        gbc.writeMem(0x23b1, { 0xa3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4ff9, gbc.sp());
        EXPECT(0x23b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03CD
        gbc.setState(0xb82a, 0x8b03, 0x6e60, 0x722b, 0x487e, 0x2ee3, 0x1, 0x0);
        gbc.writeMem(0xb82a, { 0xa3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8b03, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb82a));
        // A3 03CE
        gbc.setState(0xcfc7, 0x2922, 0xb060, 0xebab, 0xd621, 0x72d2, 0x1, 0x1);
        gbc.writeMem(0xcfc7, { 0xa3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2922, gbc.sp());
        EXPECT(0xcfc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcfc7));
        // A3 03CF
        gbc.setState(0xdea9, 0x9952, 0x4cf0, 0x34a9, 0x2c93, 0xa08b, 0x1, 0x1);
        gbc.writeMem(0xdea9, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0xdeaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdea9));
        // A3 03D0
        gbc.setState(0xe6c8, 0x43f4, 0xe720, 0x5e65, 0x713a, 0x5254, 0x1, 0x1);
        gbc.writeMem(0xe6c8, { 0xa3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x43f4, gbc.sp());
        EXPECT(0xe6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe6c8));
        // A3 03D1
        gbc.setState(0x333a, 0xb94a, 0xfa10, 0x6f2e, 0xfe4d, 0xd322, 0x0, 0x0);
        gbc.writeMem(0x333a, { 0xa3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0x333b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D2
        gbc.setState(0x60c0, 0xf912, 0xcbe0, 0xbdc2, 0x89a6, 0xb51d, 0x0, 0x1);
        gbc.writeMem(0x60c0, { 0xa3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D3
        gbc.setState(0x2254, 0x4db0, 0xa9f0, 0x3593, 0x9b0c, 0x4b58, 0x0, 0x0);
        gbc.writeMem(0x2254, { 0xa3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4db0, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D4
        gbc.setState(0x71c5, 0xedc5, 0x1c50, 0x90fc, 0x97ff, 0xb6a9, 0x1, 0x0);
        gbc.writeMem(0x71c5, { 0xa3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x71c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D5
        gbc.setState(0xc97, 0x7dd4, 0xd7c0, 0xe3f1, 0x2f4, 0x1186, 0x1, 0x0);
        gbc.writeMem(0xc97, { 0xa3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7dd4, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D6
        gbc.setState(0xebc1, 0x5adb, 0xb10, 0xc12a, 0x953f, 0x1e60, 0x1, 0x1);
        gbc.writeMem(0xebc1, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5adb, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xebc1));
        // A3 03D7
        gbc.setState(0xdfdd, 0xf8b, 0x9b70, 0x1196, 0x58c5, 0x4cb9, 0x0, 0x0);
        gbc.writeMem(0xdfdd, { 0xa3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0xdfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdfdd));
        // A3 03D8
        gbc.setState(0x798d, 0xe6aa, 0xee10, 0x884c, 0x2b7d, 0x8c3a, 0x1, 0x0);
        gbc.writeMem(0x798d, { 0xa3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe6aa, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03D9
        gbc.setState(0x89cc, 0x8129, 0xff80, 0x2441, 0x8bdc, 0xd3ff, 0x1, 0x0);
        gbc.writeMem(0x89cc, { 0xa3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x89cc));
        // A3 03DA
        gbc.setState(0x9664, 0x4ea, 0x4ee0, 0x2a5b, 0xbdd1, 0x2e3d, 0x0, 0x0);
        gbc.writeMem(0x9664, { 0xa3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9664));
        // A3 03DB
        gbc.setState(0x4e8b, 0xb8ac, 0x1e0, 0x4f4, 0x4f13, 0x8a1d, 0x0, 0x0);
        gbc.writeMem(0x4e8b, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb8ac, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03DC
        gbc.setState(0xe335, 0x1571, 0x7c50, 0x9139, 0xb231, 0x51c6, 0x1, 0x1);
        gbc.writeMem(0xe335, { 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1571, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe335));
        // A3 03DD
        gbc.setState(0x4ac4, 0xcb95, 0xc7f0, 0x8bb2, 0x81c5, 0x2324, 0x1, 0x0);
        gbc.writeMem(0x4ac4, { 0xa3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcb95, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03DE
        gbc.setState(0xb31d, 0xa659, 0x8080, 0xc2f1, 0xefe1, 0xac73, 0x1, 0x0);
        gbc.writeMem(0xb31d, { 0xa3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xb31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb31d));
        // A3 03DF
        gbc.setState(0xe4bd, 0x7bd2, 0xf8a0, 0xfad, 0xf9b8, 0xb044, 0x0, 0x0);
        gbc.writeMem(0xe4bd, { 0xa3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe4bd));
        // A3 03E0
        gbc.setState(0x9521, 0x3377, 0xff90, 0x4716, 0x9dd9, 0xb660, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0xa3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9521));
        // A3 03E1
        gbc.setState(0x13ae, 0x7f00, 0xb4a0, 0xd1bf, 0x18df, 0x9cd9, 0x1, 0x0);
        gbc.writeMem(0x13ae, { 0xa3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A3 03E2
        gbc.setState(0x95c4, 0x75ec, 0xb6a0, 0xa5ff, 0x4f01, 0x7fa0, 0x0, 0x1);
        gbc.writeMem(0x95c4, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0x95c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x95c4));
        // A3 03E3
        gbc.setState(0xbc62, 0xd710, 0x42c0, 0xcec0, 0x7e1b, 0x6512, 0x1, 0x1);
        gbc.writeMem(0xbc62, { 0xa3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0xbc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbc62));
        // A3 03E4
        gbc.setState(0xb675, 0xbc0b, 0x2da0, 0x4053, 0xff90, 0xb8f8, 0x0, 0x1);
        gbc.writeMem(0xb675, { 0xa3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0xb676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb675));
        // A3 03E5
        gbc.setState(0xcf5d, 0x81c5, 0xdf90, 0xa5fd, 0xa4e0, 0x1049, 0x1, 0x1);
        gbc.writeMem(0xcf5d, { 0xa3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xcf5d));
        // A3 03E6
        gbc.setState(0xa35a, 0x12bb, 0xabc0, 0x7566, 0x9759, 0x2b7e, 0x0, 0x1);
        gbc.writeMem(0xa35a, { 0xa3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x12bb, gbc.sp());
        EXPECT(0xa35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa35a));
        // A3 03E7
        gbc.setState(0xce1f, 0x7ebc, 0x5990, 0x7d61, 0x2a7, 0x2070, 0x0, 0x1);
        gbc.writeMem(0xce1f, { 0xa3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ebc, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xce1f));
    }
