    TEST(gbcemu, opcode_cb_da) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DA 0000
        gbc.setState(0xe975, 0xdffd, 0x5300, 0x6fd3, 0xb94, 0x77dc, 0x0, 0x0);
        gbc.writeMem(0xe975, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdffd);
        EXPECT(gbc.pc(), 0xe977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe975), 0xcb);
        EXPECT(gbc.readMem(0xe976), 0xda);
        // CB DA 0001
        gbc.setState(0x78c2, 0xe642, 0xfec0, 0x38db, 0x5a43, 0x9cbe, 0x1, 0x1);
        gbc.writeMem(0x78c2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe642);
        EXPECT(gbc.pc(), 0x78c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0002
        gbc.setState(0x5c7, 0x6182, 0x6ab0, 0x1d67, 0x1721, 0xfacb, 0x0, 0x0);
        gbc.writeMem(0x5c7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6182);
        EXPECT(gbc.pc(), 0x5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0003
        gbc.setState(0x9fb5, 0xa32a, 0xf4f0, 0x5060, 0xa505, 0x9dd, 0x1, 0x0);
        gbc.writeMem(0x9fb5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa32a);
        EXPECT(gbc.pc(), 0x9fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb5), 0xcb);
        EXPECT(gbc.readMem(0x9fb6), 0xda);
        // CB DA 0004
        gbc.setState(0x10b8, 0xe70, 0x7e00, 0x11f7, 0xbfbf, 0x50fc, 0x0, 0x1);
        gbc.writeMem(0x10b8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe70);
        EXPECT(gbc.pc(), 0x10ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0005
        gbc.setState(0x3df6, 0xcadd, 0x6660, 0x547d, 0xbeff, 0xea8e, 0x1, 0x0);
        gbc.writeMem(0x3df6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcadd);
        EXPECT(gbc.pc(), 0x3df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0006
        gbc.setState(0x36bf, 0x5f36, 0x5ff0, 0x1237, 0x8329, 0x206, 0x1, 0x1);
        gbc.writeMem(0x36bf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0x36c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0007
        gbc.setState(0xceaf, 0xcf5e, 0x580, 0xdee0, 0xe3cf, 0x6f49, 0x1, 0x0);
        gbc.writeMem(0xceaf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcf5e);
        EXPECT(gbc.pc(), 0xceb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaf), 0xcb);
        EXPECT(gbc.readMem(0xceb0), 0xda);
        // CB DA 0008
        gbc.setState(0x44c4, 0x3502, 0x5280, 0xc7ec, 0xc44e, 0x5e3c, 0x0, 0x1);
        gbc.writeMem(0x44c4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3502);
        EXPECT(gbc.pc(), 0x44c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 000A
        gbc.setState(0xe5b7, 0xee9c, 0x3140, 0x29df, 0xc54f, 0xb7c1, 0x0, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0xe5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b7), 0xcb);
        EXPECT(gbc.readMem(0xe5b8), 0xda);
        // CB DA 000B
        gbc.setState(0x752c, 0x9b, 0x9fe0, 0xe569, 0xfa2d, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x752c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9b);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 000C
        gbc.setState(0xc2c1, 0xa400, 0xbdd0, 0xe758, 0x5fa2, 0xb749, 0x0, 0x1);
        gbc.writeMem(0xc2c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa400);
        EXPECT(gbc.pc(), 0xc2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c1), 0xcb);
        EXPECT(gbc.readMem(0xc2c2), 0xda);
        // CB DA 000D
        gbc.setState(0xdd4c, 0xa09b, 0x51d0, 0x4c46, 0x7c94, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0xdd4c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa09b);
        EXPECT(gbc.pc(), 0xdd4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4c), 0xcb);
        EXPECT(gbc.readMem(0xdd4d), 0xda);
        // CB DA 000E
        gbc.setState(0x3b2d, 0x724a, 0x70c0, 0x5f0f, 0x13af, 0xecfe, 0x0, 0x0);
        gbc.writeMem(0x3b2d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x724a);
        EXPECT(gbc.pc(), 0x3b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 000F
        gbc.setState(0xd97e, 0xe03f, 0xe740, 0xf7ec, 0x7a2e, 0x961e, 0x1, 0x1);
        gbc.writeMem(0xd97e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe03f);
        EXPECT(gbc.pc(), 0xd980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97e), 0xcb);
        EXPECT(gbc.readMem(0xd97f), 0xda);
        // CB DA 0010
        gbc.setState(0x57f1, 0xe5e5, 0x5210, 0x8e71, 0x61a6, 0xb811, 0x0, 0x0);
        gbc.writeMem(0x57f1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe5e5);
        EXPECT(gbc.pc(), 0x57f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0012
        gbc.setState(0xacc9, 0xa07c, 0xd390, 0x24c7, 0x5b5e, 0x49af, 0x1, 0x0);
        gbc.writeMem(0xacc9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0xaccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc9), 0xcb);
        EXPECT(gbc.readMem(0xacca), 0xda);
        // CB DA 0013
        gbc.setState(0x765b, 0xded3, 0x2840, 0xd3b7, 0x8cd4, 0xcb15, 0x0, 0x0);
        gbc.writeMem(0x765b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xded3);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0014
        gbc.setState(0x7df0, 0x4567, 0x8fa0, 0xf93, 0x63cc, 0x653d, 0x1, 0x1);
        gbc.writeMem(0x7df0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0x7df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0016
        gbc.setState(0x6857, 0x27b, 0xd590, 0xa021, 0x7da5, 0xe628, 0x0, 0x0);
        gbc.writeMem(0x6857, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x27b);
        EXPECT(gbc.pc(), 0x6859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0018
        gbc.setState(0x4023, 0x8ad2, 0xff90, 0xb0e4, 0xab18, 0x4976, 0x1, 0x0);
        gbc.writeMem(0x4023, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8ad2);
        EXPECT(gbc.pc(), 0x4025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0019
        gbc.setState(0xae10, 0x9801, 0xcb70, 0x1462, 0x38e7, 0x40, 0x1, 0x0);
        gbc.writeMem(0xae10, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9801);
        EXPECT(gbc.pc(), 0xae12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae10), 0xcb);
        EXPECT(gbc.readMem(0xae11), 0xda);
        // CB DA 001A
        gbc.setState(0x2ca9, 0x2cef, 0x290, 0x9187, 0x308b, 0xb98d, 0x0, 0x1);
        gbc.writeMem(0x2ca9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2cef);
        EXPECT(gbc.pc(), 0x2cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 001B
        gbc.setState(0x6d66, 0x63a0, 0xc6d0, 0x3588, 0xfa78, 0x1761, 0x0, 0x1);
        gbc.writeMem(0x6d66, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x63a0);
        EXPECT(gbc.pc(), 0x6d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 001C
        gbc.setState(0xae0d, 0x2001, 0xeb50, 0x8cee, 0x4ea1, 0xe12, 0x1, 0x0);
        gbc.writeMem(0xae0d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2001);
        EXPECT(gbc.pc(), 0xae0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0d), 0xcb);
        EXPECT(gbc.readMem(0xae0e), 0xda);
        // CB DA 001D
        gbc.setState(0x667d, 0x86a1, 0x8a40, 0xffaf, 0xc067, 0xf130, 0x0, 0x0);
        gbc.writeMem(0x667d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x86a1);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 001E
        gbc.setState(0x83f7, 0x1159, 0xa90, 0x644f, 0xa0e1, 0x2df4, 0x0, 0x1);
        gbc.writeMem(0x83f7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1159);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f7), 0xcb);
        EXPECT(gbc.readMem(0x83f8), 0xda);
        // CB DA 001F
        gbc.setState(0xdb1e, 0x4d4f, 0x3a10, 0x8ac5, 0x24d3, 0xd22, 0x0, 0x1);
        gbc.writeMem(0xdb1e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d4f);
        EXPECT(gbc.pc(), 0xdb20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1e), 0xcb);
        EXPECT(gbc.readMem(0xdb1f), 0xda);
        // CB DA 0020
        gbc.setState(0xbbf9, 0x22d5, 0x2420, 0x1328, 0xbe9b, 0x28aa, 0x0, 0x0);
        gbc.writeMem(0xbbf9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x22d5);
        EXPECT(gbc.pc(), 0xbbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf9), 0xcb);
        EXPECT(gbc.readMem(0xbbfa), 0xda);
        // CB DA 0021
        gbc.setState(0xe697, 0xaacc, 0xfbd0, 0x950f, 0x28f, 0x406f, 0x0, 0x0);
        gbc.writeMem(0xe697, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaacc);
        EXPECT(gbc.pc(), 0xe699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe697), 0xcb);
        EXPECT(gbc.readMem(0xe698), 0xda);
        // CB DA 0022
        gbc.setState(0x112a, 0x4c42, 0x3690, 0x8881, 0xe104, 0xab27, 0x1, 0x1);
        gbc.writeMem(0x112a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4c42);
        EXPECT(gbc.pc(), 0x112c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0023
        gbc.setState(0xdf7d, 0x6283, 0x5120, 0xf43d, 0x3410, 0xd5db, 0x0, 0x0);
        gbc.writeMem(0xdf7d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6283);
        EXPECT(gbc.pc(), 0xdf7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7d), 0xcb);
        EXPECT(gbc.readMem(0xdf7e), 0xda);
        // CB DA 0024
        gbc.setState(0x5663, 0xd831, 0x28c0, 0xb0ae, 0x69b4, 0x3d89, 0x1, 0x1);
        gbc.writeMem(0x5663, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0x5665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0025
        gbc.setState(0x474c, 0x6340, 0x4b70, 0x7f9a, 0xf70, 0xe663, 0x1, 0x1);
        gbc.writeMem(0x474c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6340);
        EXPECT(gbc.pc(), 0x474e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0026
        gbc.setState(0xd40f, 0xe6e3, 0x7870, 0x30d7, 0xc5ed, 0x72e3, 0x0, 0x1);
        gbc.writeMem(0xd40f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe6e3);
        EXPECT(gbc.pc(), 0xd411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40f), 0xcb);
        EXPECT(gbc.readMem(0xd410), 0xda);
        // CB DA 0027
        gbc.setState(0xab99, 0x85e1, 0xeb30, 0x56cd, 0xc29f, 0x8730, 0x0, 0x0);
        gbc.writeMem(0xab99, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x85e1);
        EXPECT(gbc.pc(), 0xab9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab99), 0xcb);
        EXPECT(gbc.readMem(0xab9a), 0xda);
        // CB DA 0028
        gbc.setState(0xbe4, 0x27e8, 0xfb30, 0xf3b0, 0xcff5, 0xc864, 0x0, 0x0);
        gbc.writeMem(0xbe4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x27e8);
        EXPECT(gbc.pc(), 0xbe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0029
        gbc.setState(0x317c, 0xd0fc, 0x2ac0, 0x1df6, 0xfbbd, 0xf24b, 0x1, 0x1);
        gbc.writeMem(0x317c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd0fc);
        EXPECT(gbc.pc(), 0x317e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 002A
        gbc.setState(0x7790, 0x6731, 0xf040, 0xe2bc, 0x24ae, 0x47b0, 0x1, 0x0);
        gbc.writeMem(0x7790, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6731);
        EXPECT(gbc.pc(), 0x7792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 002B
        gbc.setState(0xc0b6, 0xa95e, 0x3c10, 0x529, 0x9290, 0x834a, 0x1, 0x1);
        gbc.writeMem(0xc0b6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0xc0b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b6), 0xcb);
        EXPECT(gbc.readMem(0xc0b7), 0xda);
        // CB DA 002C
        gbc.setState(0x5224, 0x2e09, 0xb380, 0x14d0, 0x10fa, 0xdddd, 0x0, 0x1);
        gbc.writeMem(0x5224, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2e09);
        EXPECT(gbc.pc(), 0x5226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 002D
        gbc.setState(0xb045, 0xa078, 0x6390, 0x66bb, 0xa083, 0x14cb, 0x0, 0x0);
        gbc.writeMem(0xb045, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa078);
        EXPECT(gbc.pc(), 0xb047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb045), 0xcb);
        EXPECT(gbc.readMem(0xb046), 0xda);
        // CB DA 002E
        gbc.setState(0x2294, 0xeb6b, 0x5fe0, 0x403e, 0x73ae, 0xa12a, 0x0, 0x0);
        gbc.writeMem(0x2294, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeb6b);
        EXPECT(gbc.pc(), 0x2296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 002F
        gbc.setState(0x54bb, 0x77e5, 0x88e0, 0xd3c9, 0x79e, 0x4623, 0x1, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x77e5);
        EXPECT(gbc.pc(), 0x54bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0030
        gbc.setState(0xd299, 0x29b9, 0x5170, 0x7f8f, 0x5cbc, 0xfa58, 0x1, 0x1);
        gbc.writeMem(0xd299, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x29b9);
        EXPECT(gbc.pc(), 0xd29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd299), 0xcb);
        EXPECT(gbc.readMem(0xd29a), 0xda);
        // CB DA 0031
        gbc.setState(0x30f2, 0xdd45, 0xace0, 0xa17b, 0x9052, 0xbdbe, 0x1, 0x0);
        gbc.writeMem(0x30f2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdd45);
        EXPECT(gbc.pc(), 0x30f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0032
        gbc.setState(0x10c7, 0x7219, 0x4380, 0x3f4a, 0xf8dc, 0x7c01, 0x1, 0x0);
        gbc.writeMem(0x10c7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x10c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0033
        gbc.setState(0x78d1, 0xb819, 0xd500, 0x24f, 0x466f, 0xe716, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0x78d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0034
        gbc.setState(0x1c2d, 0x4aee, 0x14a0, 0xad59, 0xe75b, 0x25fa, 0x1, 0x1);
        gbc.writeMem(0x1c2d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0x1c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0035
        gbc.setState(0xab6, 0x38cb, 0xf020, 0x11f6, 0x58b0, 0xb3c5, 0x0, 0x1);
        gbc.writeMem(0xab6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x38cb);
        EXPECT(gbc.pc(), 0xab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0036
        gbc.setState(0xcbd0, 0xa82e, 0x81f0, 0xa433, 0x8e24, 0xd660, 0x1, 0x0);
        gbc.writeMem(0xcbd0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0xcbd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd0), 0xcb);
        EXPECT(gbc.readMem(0xcbd1), 0xda);
        // CB DA 0038
        gbc.setState(0x40c4, 0x8ba0, 0x3900, 0x71db, 0x7218, 0xad48, 0x0, 0x0);
        gbc.writeMem(0x40c4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8ba0);
        EXPECT(gbc.pc(), 0x40c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0039
        gbc.setState(0x544f, 0xb3e, 0xb050, 0x42a7, 0xb4cf, 0xe8d3, 0x0, 0x1);
        gbc.writeMem(0x544f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb3e);
        EXPECT(gbc.pc(), 0x5451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 003A
        gbc.setState(0x4ca2, 0x9293, 0x8e70, 0xc204, 0x828b, 0xc364, 0x0, 0x1);
        gbc.writeMem(0x4ca2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9293);
        EXPECT(gbc.pc(), 0x4ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 003B
        gbc.setState(0x853c, 0x897c, 0x3550, 0xade5, 0xebb0, 0xab81, 0x0, 0x0);
        gbc.writeMem(0x853c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x897c);
        EXPECT(gbc.pc(), 0x853e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x853c), 0xcb);
        EXPECT(gbc.readMem(0x853d), 0xda);
        // CB DA 003C
        gbc.setState(0x110f, 0x1a4b, 0x71e0, 0xe4a5, 0xcc5f, 0x1fe4, 0x0, 0x1);
        gbc.writeMem(0x110f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1a4b);
        EXPECT(gbc.pc(), 0x1111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 003D
        gbc.setState(0x6c21, 0xdc1, 0xebd0, 0x402c, 0x71df, 0x117c, 0x1, 0x0);
        gbc.writeMem(0x6c21, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdc1);
        EXPECT(gbc.pc(), 0x6c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 003E
        gbc.setState(0xa39e, 0x7435, 0x2800, 0x337f, 0x76bc, 0x6f46, 0x0, 0x1);
        gbc.writeMem(0xa39e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7435);
        EXPECT(gbc.pc(), 0xa3a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39e), 0xcb);
        EXPECT(gbc.readMem(0xa39f), 0xda);
        // CB DA 003F
        gbc.setState(0x3007, 0x6eeb, 0x5b30, 0x73c2, 0xf3ec, 0xd85a, 0x1, 0x1);
        gbc.writeMem(0x3007, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6eeb);
        EXPECT(gbc.pc(), 0x3009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0040
        gbc.setState(0xde80, 0xd84b, 0xa7b0, 0x7f33, 0xd437, 0xe9bd, 0x1, 0x0);
        gbc.writeMem(0xde80, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0xde82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde80), 0xcb);
        EXPECT(gbc.readMem(0xde81), 0xda);
        // CB DA 0041
        gbc.setState(0x5b26, 0x4db1, 0x5a90, 0x77ce, 0xa8ff, 0xd063, 0x1, 0x0);
        gbc.writeMem(0x5b26, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4db1);
        EXPECT(gbc.pc(), 0x5b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0042
        gbc.setState(0x6138, 0x1992, 0xa4d0, 0x2548, 0x34af, 0x4712, 0x1, 0x1);
        gbc.writeMem(0x6138, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1992);
        EXPECT(gbc.pc(), 0x613a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0043
        gbc.setState(0xde3c, 0xee1, 0xdf30, 0xeb29, 0x1bdd, 0x24ab, 0x0, 0x1);
        gbc.writeMem(0xde3c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xee1);
        EXPECT(gbc.pc(), 0xde3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3c), 0xcb);
        EXPECT(gbc.readMem(0xde3d), 0xda);
        // CB DA 0044
        gbc.setState(0x9ec8, 0xc7a0, 0x9d20, 0x3a2a, 0xc637, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0x9ec8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc7a0);
        EXPECT(gbc.pc(), 0x9eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec8), 0xcb);
        EXPECT(gbc.readMem(0x9ec9), 0xda);
        // CB DA 0045
        gbc.setState(0x2839, 0xc8d3, 0x7f10, 0xc32b, 0xd5ff, 0xe957, 0x0, 0x0);
        gbc.writeMem(0x2839, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc8d3);
        EXPECT(gbc.pc(), 0x283b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0046
        gbc.setState(0xb72, 0x6dda, 0xcb20, 0xdc7a, 0xe739, 0x8858, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6dda);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0048
        gbc.setState(0xd977, 0x69c9, 0x3cb0, 0xfde8, 0x7ed0, 0x1799, 0x1, 0x0);
        gbc.writeMem(0xd977, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x69c9);
        EXPECT(gbc.pc(), 0xd979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd977), 0xcb);
        EXPECT(gbc.readMem(0xd978), 0xda);
        // CB DA 0049
        gbc.setState(0x6f4, 0xfc39, 0x2940, 0x510a, 0x8095, 0x8121, 0x0, 0x1);
        gbc.writeMem(0x6f4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfc39);
        EXPECT(gbc.pc(), 0x6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 004A
        gbc.setState(0x436, 0x2976, 0xa030, 0xdc04, 0xb2e0, 0x3840, 0x1, 0x0);
        gbc.writeMem(0x436, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2976);
        EXPECT(gbc.pc(), 0x438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 004B
        gbc.setState(0x4986, 0xc9ac, 0xfcb0, 0xc7a5, 0xe4ef, 0x85ae, 0x0, 0x0);
        gbc.writeMem(0x4986, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc9ac);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 004C
        gbc.setState(0x8264, 0xe5c3, 0x9720, 0x153b, 0xfbc7, 0x36b4, 0x0, 0x0);
        gbc.writeMem(0x8264, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe5c3);
        EXPECT(gbc.pc(), 0x8266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8264), 0xcb);
        EXPECT(gbc.readMem(0x8265), 0xda);
        // CB DA 004E
        gbc.setState(0x865d, 0xc609, 0xed00, 0x302c, 0x9353, 0x7967, 0x0, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc609);
        EXPECT(gbc.pc(), 0x865f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865d), 0xcb);
        EXPECT(gbc.readMem(0x865e), 0xda);
        // CB DA 0050
        gbc.setState(0x5568, 0xe57c, 0x95e0, 0xf7b1, 0x8611, 0x159e, 0x1, 0x0);
        gbc.writeMem(0x5568, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe57c);
        EXPECT(gbc.pc(), 0x556a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0051
        gbc.setState(0xd61f, 0x68ac, 0x8170, 0x6398, 0x4052, 0x8d19, 0x0, 0x1);
        gbc.writeMem(0xd61f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x68ac);
        EXPECT(gbc.pc(), 0xd621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61f), 0xcb);
        EXPECT(gbc.readMem(0xd620), 0xda);
        // CB DA 0052
        gbc.setState(0x5ef4, 0xfb3c, 0xe760, 0x364e, 0xdb72, 0xd45d, 0x1, 0x1);
        gbc.writeMem(0x5ef4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfb3c);
        EXPECT(gbc.pc(), 0x5ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0054
        gbc.setState(0x35dd, 0x6892, 0xac20, 0x605b, 0x39f3, 0xa803, 0x1, 0x1);
        gbc.writeMem(0x35dd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6892);
        EXPECT(gbc.pc(), 0x35df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0055
        gbc.setState(0xd9b, 0xa182, 0x3b20, 0xdd81, 0xe73, 0xcd44, 0x1, 0x0);
        gbc.writeMem(0xd9b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0xd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0056
        gbc.setState(0x8076, 0xad25, 0x8790, 0x18b2, 0xf0e5, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xad25);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xda);
        // CB DA 0057
        gbc.setState(0x325a, 0xd32e, 0xe2a0, 0x3d80, 0xee4a, 0x630f, 0x1, 0x1);
        gbc.writeMem(0x325a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd32e);
        EXPECT(gbc.pc(), 0x325c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0058
        gbc.setState(0xd2b1, 0x1574, 0xd070, 0xdd93, 0xcfe9, 0xfc57, 0x0, 0x1);
        gbc.writeMem(0xd2b1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1574);
        EXPECT(gbc.pc(), 0xd2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b1), 0xcb);
        EXPECT(gbc.readMem(0xd2b2), 0xda);
        // CB DA 0059
        gbc.setState(0x9af1, 0xee61, 0xb480, 0x4390, 0x21a7, 0xb06c, 0x0, 0x1);
        gbc.writeMem(0x9af1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xee61);
        EXPECT(gbc.pc(), 0x9af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af1), 0xcb);
        EXPECT(gbc.readMem(0x9af2), 0xda);
        // CB DA 005A
        gbc.setState(0xaf6d, 0xaab, 0x6310, 0xe8c7, 0xdb93, 0x4b3f, 0x0, 0x1);
        gbc.writeMem(0xaf6d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaab);
        EXPECT(gbc.pc(), 0xaf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6d), 0xcb);
        EXPECT(gbc.readMem(0xaf6e), 0xda);
        // CB DA 005B
        gbc.setState(0x590e, 0xfe14, 0x7e00, 0x2ddf, 0xc047, 0xf5, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfe14);
        EXPECT(gbc.pc(), 0x5910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 005C
        gbc.setState(0x974a, 0x69fd, 0x9d0, 0xc740, 0xea2a, 0x31ae, 0x0, 0x0);
        gbc.writeMem(0x974a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x69fd);
        EXPECT(gbc.pc(), 0x974c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974a), 0xcb);
        EXPECT(gbc.readMem(0x974b), 0xda);
        // CB DA 005D
        gbc.setState(0xc631, 0x9fea, 0x4680, 0x8d53, 0x34ba, 0x52f2, 0x1, 0x1);
        gbc.writeMem(0xc631, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9fea);
        EXPECT(gbc.pc(), 0xc633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc631), 0xcb);
        EXPECT(gbc.readMem(0xc632), 0xda);
        // CB DA 005E
        gbc.setState(0xca93, 0xc03c, 0x3130, 0x4521, 0xe756, 0x8b16, 0x0, 0x0);
        gbc.writeMem(0xca93, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc03c);
        EXPECT(gbc.pc(), 0xca95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca93), 0xcb);
        EXPECT(gbc.readMem(0xca94), 0xda);
        // CB DA 005F
        gbc.setState(0x1d20, 0x4858, 0x3060, 0x8735, 0x4e74, 0xb909, 0x0, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4858);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0060
        gbc.setState(0x9349, 0x512b, 0x6710, 0xa27e, 0x454c, 0x97b6, 0x0, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x512b);
        EXPECT(gbc.pc(), 0x934b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9349), 0xcb);
        EXPECT(gbc.readMem(0x934a), 0xda);
        // CB DA 0061
        gbc.setState(0xa188, 0x6883, 0x9f50, 0xe628, 0xd7c1, 0xa244, 0x1, 0x0);
        gbc.writeMem(0xa188, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0xa18a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa188), 0xcb);
        EXPECT(gbc.readMem(0xa189), 0xda);
        // CB DA 0062
        gbc.setState(0xc7cf, 0x67b2, 0xcf20, 0x7198, 0x9624, 0xab59, 0x1, 0x1);
        gbc.writeMem(0xc7cf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x67b2);
        EXPECT(gbc.pc(), 0xc7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7cf), 0xcb);
        EXPECT(gbc.readMem(0xc7d0), 0xda);
        // CB DA 0063
        gbc.setState(0x8fc3, 0x2b0a, 0x1b90, 0x86fb, 0xd197, 0x4f9f, 0x1, 0x1);
        gbc.writeMem(0x8fc3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2b0a);
        EXPECT(gbc.pc(), 0x8fc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc3), 0xcb);
        EXPECT(gbc.readMem(0x8fc4), 0xda);
        // CB DA 0064
        gbc.setState(0x133e, 0x48f0, 0x3910, 0xa0db, 0x7790, 0xadeb, 0x0, 0x1);
        gbc.writeMem(0x133e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x48f0);
        EXPECT(gbc.pc(), 0x1340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0066
        gbc.setState(0xd172, 0xec1b, 0xf0e0, 0xf7a4, 0xf397, 0x5b6f, 0x1, 0x0);
        gbc.writeMem(0xd172, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xec1b);
        EXPECT(gbc.pc(), 0xd174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd172), 0xcb);
        EXPECT(gbc.readMem(0xd173), 0xda);
        // CB DA 0067
        gbc.setState(0x95aa, 0xa0bf, 0x6d40, 0x76f6, 0x3296, 0xfac6, 0x1, 0x0);
        gbc.writeMem(0x95aa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa0bf);
        EXPECT(gbc.pc(), 0x95ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95aa), 0xcb);
        EXPECT(gbc.readMem(0x95ab), 0xda);
        // CB DA 0068
        gbc.setState(0x4043, 0xee4c, 0xfe80, 0x78b8, 0x4cb4, 0x2b59, 0x0, 0x1);
        gbc.writeMem(0x4043, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xee4c);
        EXPECT(gbc.pc(), 0x4045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0069
        gbc.setState(0x989b, 0xfbc0, 0xec50, 0xf919, 0xcdb5, 0x9215, 0x0, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfbc0);
        EXPECT(gbc.pc(), 0x989d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x989b), 0xcb);
        EXPECT(gbc.readMem(0x989c), 0xda);
        // CB DA 006B
        gbc.setState(0xd83c, 0xc50a, 0x1f0, 0x94c0, 0xa00b, 0xfb9d, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0xda);
        // CB DA 006C
        gbc.setState(0xe22c, 0xc5b2, 0x9ea0, 0x8585, 0x2ab3, 0xff99, 0x1, 0x1);
        gbc.writeMem(0xe22c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc5b2);
        EXPECT(gbc.pc(), 0xe22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe22c), 0xcb);
        EXPECT(gbc.readMem(0xe22d), 0xda);
        // CB DA 006D
        gbc.setState(0xc3fe, 0xf4c4, 0xdbe0, 0x1397, 0x6542, 0xc75e, 0x1, 0x0);
        gbc.writeMem(0xc3fe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf4c4);
        EXPECT(gbc.pc(), 0xc400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3fe), 0xcb);
        EXPECT(gbc.readMem(0xc3ff), 0xda);
        // CB DA 006E
        gbc.setState(0xd6d8, 0xfabb, 0x4a0, 0x971, 0x5d2b, 0xf335, 0x0, 0x1);
        gbc.writeMem(0xd6d8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfabb);
        EXPECT(gbc.pc(), 0xd6da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d8), 0xcb);
        EXPECT(gbc.readMem(0xd6d9), 0xda);
        // CB DA 006F
        gbc.setState(0xabda, 0x52f1, 0x4320, 0x2dd6, 0x56df, 0x89a8, 0x1, 0x0);
        gbc.writeMem(0xabda, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x52f1);
        EXPECT(gbc.pc(), 0xabdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabda), 0xcb);
        EXPECT(gbc.readMem(0xabdb), 0xda);
        // CB DA 0070
        gbc.setState(0xc656, 0x3e8e, 0x6770, 0xc8ff, 0xb4da, 0xe3c3, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3e8e);
        EXPECT(gbc.pc(), 0xc658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc656), 0xcb);
        EXPECT(gbc.readMem(0xc657), 0xda);
        // CB DA 0071
        gbc.setState(0xadd2, 0x47c, 0x9db0, 0xaa26, 0x51b, 0xece9, 0x1, 0x1);
        gbc.writeMem(0xadd2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x47c);
        EXPECT(gbc.pc(), 0xadd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd2), 0xcb);
        EXPECT(gbc.readMem(0xadd3), 0xda);
        // CB DA 0072
        gbc.setState(0x799b, 0x3eef, 0xcaf0, 0xc252, 0xe798, 0x1d16, 0x1, 0x0);
        gbc.writeMem(0x799b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3eef);
        EXPECT(gbc.pc(), 0x799d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0073
        gbc.setState(0x64c1, 0x2d12, 0x8bb0, 0x4334, 0x3e59, 0x7ebd, 0x0, 0x0);
        gbc.writeMem(0x64c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2d12);
        EXPECT(gbc.pc(), 0x64c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0074
        gbc.setState(0x4f02, 0x965, 0x2f70, 0xb3ff, 0xf422, 0xdab8, 0x1, 0x0);
        gbc.writeMem(0x4f02, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x965);
        EXPECT(gbc.pc(), 0x4f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0075
        gbc.setState(0x8d6e, 0x30d6, 0x8af0, 0x83d1, 0xabe4, 0xc771, 0x1, 0x0);
        gbc.writeMem(0x8d6e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x30d6);
        EXPECT(gbc.pc(), 0x8d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6e), 0xcb);
        EXPECT(gbc.readMem(0x8d6f), 0xda);
        // CB DA 0076
        gbc.setState(0x58ef, 0x7f22, 0xae90, 0xaa0, 0xa1a, 0xa484, 0x0, 0x0);
        gbc.writeMem(0x58ef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7f22);
        EXPECT(gbc.pc(), 0x58f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0077
        gbc.setState(0xd1ea, 0xabb3, 0xdb80, 0x384b, 0x624b, 0x67bc, 0x0, 0x0);
        gbc.writeMem(0xd1ea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xabb3);
        EXPECT(gbc.pc(), 0xd1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ea), 0xcb);
        EXPECT(gbc.readMem(0xd1eb), 0xda);
        // CB DA 0079
        gbc.setState(0x269f, 0x39f4, 0xfdf0, 0xd226, 0xfcf7, 0x3d8c, 0x1, 0x1);
        gbc.writeMem(0x269f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x39f4);
        EXPECT(gbc.pc(), 0x26a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 007A
        gbc.setState(0x3dc5, 0x46ce, 0xd00, 0x7058, 0xac, 0x7449, 0x0, 0x1);
        gbc.writeMem(0x3dc5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x46ce);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 007B
        gbc.setState(0x3435, 0xb637, 0x150, 0x9c40, 0x79d8, 0xc81e, 0x1, 0x1);
        gbc.writeMem(0x3435, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb637);
        EXPECT(gbc.pc(), 0x3437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 007C
        gbc.setState(0x85af, 0x4e99, 0xd1d0, 0x33bd, 0x8129, 0xc478, 0x1, 0x0);
        gbc.writeMem(0x85af, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4e99);
        EXPECT(gbc.pc(), 0x85b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85af), 0xcb);
        EXPECT(gbc.readMem(0x85b0), 0xda);
        // CB DA 007D
        gbc.setState(0x7060, 0x7a69, 0xbe10, 0x5136, 0x5ae7, 0x8df7, 0x0, 0x1);
        gbc.writeMem(0x7060, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0x7062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 007E
        gbc.setState(0xb03b, 0xbf27, 0xcfd0, 0x2bff, 0xdf32, 0x8b1b, 0x0, 0x1);
        gbc.writeMem(0xb03b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbf27);
        EXPECT(gbc.pc(), 0xb03d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03b), 0xcb);
        EXPECT(gbc.readMem(0xb03c), 0xda);
        // CB DA 007F
        gbc.setState(0x2441, 0xad03, 0xbf90, 0xed21, 0x2f5e, 0xdc79, 0x0, 0x1);
        gbc.writeMem(0x2441, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x2443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0080
        gbc.setState(0x84fc, 0x1a20, 0x73a0, 0xcfd2, 0x176, 0x54c4, 0x1, 0x0);
        gbc.writeMem(0x84fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1a20);
        EXPECT(gbc.pc(), 0x84fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fc), 0xcb);
        EXPECT(gbc.readMem(0x84fd), 0xda);
        // CB DA 0081
        gbc.setState(0x6d51, 0xfd5, 0x3600, 0xc99b, 0xf850, 0x29cb, 0x1, 0x1);
        gbc.writeMem(0x6d51, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfd5);
        EXPECT(gbc.pc(), 0x6d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0083
        gbc.setState(0xc2cf, 0x7ed5, 0xcce0, 0x7be6, 0xf9c7, 0x52a8, 0x0, 0x0);
        gbc.writeMem(0xc2cf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7ed5);
        EXPECT(gbc.pc(), 0xc2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2cf), 0xcb);
        EXPECT(gbc.readMem(0xc2d0), 0xda);
        // CB DA 0084
        gbc.setState(0xed16, 0xb376, 0x9580, 0xb7aa, 0xfa8c, 0xb5c7, 0x1, 0x0);
        gbc.writeMem(0xed16, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb376);
        EXPECT(gbc.pc(), 0xed18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed16), 0xcb);
        EXPECT(gbc.readMem(0xed17), 0xda);
        // CB DA 0085
        gbc.setState(0x3d56, 0xcd90, 0xe0b0, 0xf2c4, 0x573b, 0xbab1, 0x0, 0x1);
        gbc.writeMem(0x3d56, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcd90);
        EXPECT(gbc.pc(), 0x3d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0086
        gbc.setState(0xc25f, 0x4af3, 0x9e90, 0x7789, 0xf69a, 0xa47e, 0x0, 0x0);
        gbc.writeMem(0xc25f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4af3);
        EXPECT(gbc.pc(), 0xc261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc25f), 0xcb);
        EXPECT(gbc.readMem(0xc260), 0xda);
        // CB DA 0087
        gbc.setState(0xe201, 0x45de, 0xf840, 0x5c0f, 0xc497, 0xece5, 0x1, 0x0);
        gbc.writeMem(0xe201, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x45de);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe201), 0xcb);
        EXPECT(gbc.readMem(0xe202), 0xda);
        // CB DA 0088
        gbc.setState(0x5c17, 0x72df, 0x7200, 0xde01, 0x7733, 0x8d6c, 0x1, 0x0);
        gbc.writeMem(0x5c17, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x72df);
        EXPECT(gbc.pc(), 0x5c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0089
        gbc.setState(0xb4f6, 0x1187, 0xf1a0, 0xfbc8, 0xe29b, 0x4682, 0x0, 0x0);
        gbc.writeMem(0xb4f6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1187);
        EXPECT(gbc.pc(), 0xb4f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f6), 0xcb);
        EXPECT(gbc.readMem(0xb4f7), 0xda);
        // CB DA 008A
        gbc.setState(0xc764, 0xbfff, 0xea0, 0x353c, 0xe906, 0x46f4, 0x1, 0x0);
        gbc.writeMem(0xc764, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbfff);
        EXPECT(gbc.pc(), 0xc766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc764), 0xcb);
        EXPECT(gbc.readMem(0xc765), 0xda);
        // CB DA 008B
        gbc.setState(0x9370, 0xe415, 0xc6f0, 0xc873, 0x5729, 0xafed, 0x1, 0x0);
        gbc.writeMem(0x9370, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe415);
        EXPECT(gbc.pc(), 0x9372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9370), 0xcb);
        EXPECT(gbc.readMem(0x9371), 0xda);
        // CB DA 008C
        gbc.setState(0x3666, 0x2fba, 0xe5d0, 0xa1c8, 0x4755, 0xf29e, 0x0, 0x0);
        gbc.writeMem(0x3666, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2fba);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 008D
        gbc.setState(0x9bfe, 0x6a0f, 0x7f40, 0xe365, 0x5d2d, 0x8546, 0x1, 0x1);
        gbc.writeMem(0x9bfe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6a0f);
        EXPECT(gbc.pc(), 0x9c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfe), 0xcb);
        EXPECT(gbc.readMem(0x9bff), 0xda);
        // CB DA 008E
        gbc.setState(0xc053, 0x8fb4, 0xba30, 0x1ac5, 0x1065, 0xb20b, 0x1, 0x1);
        gbc.writeMem(0xc053, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8fb4);
        EXPECT(gbc.pc(), 0xc055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc053), 0xcb);
        EXPECT(gbc.readMem(0xc054), 0xda);
        // CB DA 008F
        gbc.setState(0xb3c, 0x97f0, 0x7b60, 0xd49, 0x9e0b, 0xa886, 0x0, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x97f0);
        EXPECT(gbc.pc(), 0xb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0090
        gbc.setState(0x8e74, 0x22, 0xa890, 0x91ad, 0x1b25, 0x47a7, 0x0, 0x1);
        gbc.writeMem(0x8e74, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x22);
        EXPECT(gbc.pc(), 0x8e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e74), 0xcb);
        EXPECT(gbc.readMem(0x8e75), 0xda);
        // CB DA 0091
        gbc.setState(0xe32a, 0x4284, 0xda20, 0x5280, 0x28a7, 0x3403, 0x1, 0x0);
        gbc.writeMem(0xe32a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4284);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32a), 0xcb);
        EXPECT(gbc.readMem(0xe32b), 0xda);
        // CB DA 0092
        gbc.setState(0x6027, 0xa9e5, 0x35b0, 0xd301, 0x7b58, 0x51f0, 0x0, 0x0);
        gbc.writeMem(0x6027, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa9e5);
        EXPECT(gbc.pc(), 0x6029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0093
        gbc.setState(0x8fe6, 0xd731, 0x3a50, 0x84d4, 0xc411, 0x3f2d, 0x0, 0x1);
        gbc.writeMem(0x8fe6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd731);
        EXPECT(gbc.pc(), 0x8fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fe6), 0xcb);
        EXPECT(gbc.readMem(0x8fe7), 0xda);
        // CB DA 0094
        gbc.setState(0xacea, 0x93a6, 0xb910, 0x7a26, 0x3c26, 0x8363, 0x1, 0x1);
        gbc.writeMem(0xacea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x93a6);
        EXPECT(gbc.pc(), 0xacec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacea), 0xcb);
        EXPECT(gbc.readMem(0xaceb), 0xda);
        // CB DA 0095
        gbc.setState(0xe579, 0xdcbe, 0x8f60, 0x6f88, 0x2e22, 0x44db, 0x1, 0x1);
        gbc.writeMem(0xe579, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdcbe);
        EXPECT(gbc.pc(), 0xe57b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe579), 0xcb);
        EXPECT(gbc.readMem(0xe57a), 0xda);
        // CB DA 0097
        gbc.setState(0x6fda, 0x7bfe, 0xfd0, 0x934f, 0x81ff, 0xc1d2, 0x0, 0x1);
        gbc.writeMem(0x6fda, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7bfe);
        EXPECT(gbc.pc(), 0x6fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0098
        gbc.setState(0xbbbc, 0xd0e6, 0x4ac0, 0x78db, 0x11e9, 0x226, 0x1, 0x0);
        gbc.writeMem(0xbbbc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd0e6);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbc), 0xcb);
        EXPECT(gbc.readMem(0xbbbd), 0xda);
        // CB DA 0099
        gbc.setState(0xc897, 0xb2f4, 0xf70, 0x7b43, 0xfa2e, 0x8f86, 0x1, 0x1);
        gbc.writeMem(0xc897, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb2f4);
        EXPECT(gbc.pc(), 0xc899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc897), 0xcb);
        EXPECT(gbc.readMem(0xc898), 0xda);
        // CB DA 009A
        gbc.setState(0x4b84, 0x6316, 0x5d40, 0x5c0f, 0x89eb, 0xf11f, 0x0, 0x0);
        gbc.writeMem(0x4b84, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6316);
        EXPECT(gbc.pc(), 0x4b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 009B
        gbc.setState(0x5c2a, 0x37c5, 0xd580, 0xb6e9, 0x3304, 0x44c8, 0x1, 0x1);
        gbc.writeMem(0x5c2a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x37c5);
        EXPECT(gbc.pc(), 0x5c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 009C
        gbc.setState(0xeb41, 0x90de, 0x3630, 0x890e, 0x8e74, 0xec26, 0x1, 0x0);
        gbc.writeMem(0xeb41, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x90de);
        EXPECT(gbc.pc(), 0xeb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb41), 0xcb);
        EXPECT(gbc.readMem(0xeb42), 0xda);
        // CB DA 009D
        gbc.setState(0xa14c, 0xee0d, 0xa0d0, 0x251d, 0x18d, 0xd7eb, 0x1, 0x1);
        gbc.writeMem(0xa14c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xee0d);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0xda);
        // CB DA 009E
        gbc.setState(0x8738, 0x6dfa, 0x9050, 0xd47, 0xa113, 0xfa75, 0x1, 0x1);
        gbc.writeMem(0x8738, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6dfa);
        EXPECT(gbc.pc(), 0x873a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8738), 0xcb);
        EXPECT(gbc.readMem(0x8739), 0xda);
        // CB DA 009F
        gbc.setState(0x5f80, 0x147a, 0x6f30, 0x48d9, 0xe05c, 0x5c78, 0x1, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x147a);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00A0
        gbc.setState(0xc610, 0xc080, 0xffe0, 0x900b, 0x6938, 0x519, 0x0, 0x0);
        gbc.writeMem(0xc610, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc080);
        EXPECT(gbc.pc(), 0xc612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc610), 0xcb);
        EXPECT(gbc.readMem(0xc611), 0xda);
        // CB DA 00A1
        gbc.setState(0x6873, 0x2917, 0xefd0, 0x59c9, 0x4350, 0x8451, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2917);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00A2
        gbc.setState(0xa3c0, 0x407b, 0xee90, 0xb2f9, 0xfd54, 0x34d4, 0x1, 0x0);
        gbc.writeMem(0xa3c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x407b);
        EXPECT(gbc.pc(), 0xa3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c0), 0xcb);
        EXPECT(gbc.readMem(0xa3c1), 0xda);
        // CB DA 00A3
        gbc.setState(0xa02, 0xc851, 0xb030, 0x9d27, 0xda10, 0x2bfc, 0x0, 0x0);
        gbc.writeMem(0xa02, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc851);
        EXPECT(gbc.pc(), 0xa04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00A4
        gbc.setState(0x91ad, 0xbe59, 0x54a0, 0xfbed, 0xbf27, 0xd965, 0x0, 0x1);
        gbc.writeMem(0x91ad, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbe59);
        EXPECT(gbc.pc(), 0x91af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ad), 0xcb);
        EXPECT(gbc.readMem(0x91ae), 0xda);
        // CB DA 00A5
        gbc.setState(0xb87a, 0x16ff, 0x8da0, 0x46d3, 0xa337, 0x95d6, 0x0, 0x0);
        gbc.writeMem(0xb87a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x16ff);
        EXPECT(gbc.pc(), 0xb87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87a), 0xcb);
        EXPECT(gbc.readMem(0xb87b), 0xda);
        // CB DA 00A6
        gbc.setState(0xe75b, 0xb9b7, 0x3d20, 0xf116, 0x4c18, 0xfdb7, 0x0, 0x0);
        gbc.writeMem(0xe75b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb9b7);
        EXPECT(gbc.pc(), 0xe75d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75b), 0xcb);
        EXPECT(gbc.readMem(0xe75c), 0xda);
        // CB DA 00A7
        gbc.setState(0xd30e, 0x3bd6, 0x4500, 0xa1a4, 0xefe7, 0xe097, 0x0, 0x1);
        gbc.writeMem(0xd30e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0xd310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30e), 0xcb);
        EXPECT(gbc.readMem(0xd30f), 0xda);
        // CB DA 00A8
        gbc.setState(0xd5f8, 0xb77e, 0xa320, 0xb519, 0x46d8, 0xe312, 0x0, 0x1);
        gbc.writeMem(0xd5f8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0xd5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f8), 0xcb);
        EXPECT(gbc.readMem(0xd5f9), 0xda);
        // CB DA 00A9
        gbc.setState(0xeea7, 0x7796, 0xc880, 0x3bcf, 0x35bb, 0xd537, 0x0, 0x0);
        gbc.writeMem(0xeea7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7796);
        EXPECT(gbc.pc(), 0xeea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea7), 0xcb);
        EXPECT(gbc.readMem(0xeea8), 0xda);
        // CB DA 00AA
        gbc.setState(0xbe24, 0x124f, 0x7330, 0xc47, 0x1c3a, 0x6149, 0x1, 0x1);
        gbc.writeMem(0xbe24, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x124f);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0xda);
        // CB DA 00AB
        gbc.setState(0x4a0a, 0xdde1, 0x27f0, 0x2444, 0xb35e, 0x3247, 0x0, 0x0);
        gbc.writeMem(0x4a0a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdde1);
        EXPECT(gbc.pc(), 0x4a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00AC
        gbc.setState(0x5349, 0x9908, 0xfe70, 0xf865, 0x486b, 0x695a, 0x1, 0x1);
        gbc.writeMem(0x5349, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9908);
        EXPECT(gbc.pc(), 0x534b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00AE
        gbc.setState(0x5307, 0xc3ec, 0x53d0, 0xea29, 0x125e, 0x9899, 0x1, 0x1);
        gbc.writeMem(0x5307, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc3ec);
        EXPECT(gbc.pc(), 0x5309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00AF
        gbc.setState(0xdd12, 0xd175, 0x90b0, 0xed68, 0x64ff, 0xd667, 0x0, 0x0);
        gbc.writeMem(0xdd12, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd175);
        EXPECT(gbc.pc(), 0xdd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd12), 0xcb);
        EXPECT(gbc.readMem(0xdd13), 0xda);
        // CB DA 00B0
        gbc.setState(0xc4, 0x3b40, 0x7880, 0xabfb, 0xb6cb, 0x3624, 0x1, 0x1);
        gbc.writeMem(0xc4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3b40);
        EXPECT(gbc.pc(), 0xc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00B1
        gbc.setState(0x4421, 0xc278, 0x290, 0xd223, 0x14bf, 0x1178, 0x1, 0x1);
        gbc.writeMem(0x4421, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc278);
        EXPECT(gbc.pc(), 0x4423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00B2
        gbc.setState(0x4493, 0x554f, 0x8f50, 0x1113, 0x3aaa, 0x26c2, 0x1, 0x1);
        gbc.writeMem(0x4493, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x554f);
        EXPECT(gbc.pc(), 0x4495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00B3
        gbc.setState(0x6b2b, 0x80fa, 0x33a0, 0xac3c, 0xcea7, 0x8c57, 0x0, 0x1);
        gbc.writeMem(0x6b2b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x80fa);
        EXPECT(gbc.pc(), 0x6b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00B4
        gbc.setState(0xac0c, 0x64b1, 0xf180, 0x5373, 0x1852, 0xaf40, 0x1, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x64b1);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0xda);
        // CB DA 00B5
        gbc.setState(0x2983, 0xe71e, 0xa470, 0xb94d, 0xf734, 0xee49, 0x0, 0x0);
        gbc.writeMem(0x2983, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe71e);
        EXPECT(gbc.pc(), 0x2985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00B6
        gbc.setState(0x675b, 0x35ad, 0xb210, 0xca0e, 0xfef1, 0xc0f6, 0x1, 0x0);
        gbc.writeMem(0x675b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0x675d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00B7
        gbc.setState(0x84c9, 0xd788, 0xc5a0, 0xa3c5, 0xbc5b, 0x633a, 0x1, 0x1);
        gbc.writeMem(0x84c9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0x84cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c9), 0xcb);
        EXPECT(gbc.readMem(0x84ca), 0xda);
        // CB DA 00B8
        gbc.setState(0xcb47, 0x4feb, 0xf610, 0x546f, 0x5e95, 0x8f79, 0x1, 0x1);
        gbc.writeMem(0xcb47, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4feb);
        EXPECT(gbc.pc(), 0xcb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb47), 0xcb);
        EXPECT(gbc.readMem(0xcb48), 0xda);
        // CB DA 00B9
        gbc.setState(0x1fae, 0x1a39, 0x8c50, 0x5c61, 0xf50, 0xb512, 0x1, 0x0);
        gbc.writeMem(0x1fae, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1a39);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00BA
        gbc.setState(0xdacf, 0xf6e2, 0x7440, 0x2f2b, 0x5e02, 0xc51c, 0x0, 0x1);
        gbc.writeMem(0xdacf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf6e2);
        EXPECT(gbc.pc(), 0xdad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacf), 0xcb);
        EXPECT(gbc.readMem(0xdad0), 0xda);
        // CB DA 00BB
        gbc.setState(0x48cd, 0x90dc, 0x4250, 0xfc5d, 0xec3d, 0x83fa, 0x1, 0x0);
        gbc.writeMem(0x48cd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x90dc);
        EXPECT(gbc.pc(), 0x48cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00BC
        gbc.setState(0xe608, 0xceb3, 0xd60, 0xd9e4, 0xc1a7, 0x49a6, 0x1, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xceb3);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0xda);
        // CB DA 00BD
        gbc.setState(0x1825, 0xe6ac, 0x2ee0, 0x91b, 0x24b6, 0xea72, 0x1, 0x1);
        gbc.writeMem(0x1825, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe6ac);
        EXPECT(gbc.pc(), 0x1827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00BE
        gbc.setState(0xe7c0, 0x827d, 0xec80, 0xda05, 0x9976, 0x1860, 0x1, 0x0);
        gbc.writeMem(0xe7c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x827d);
        EXPECT(gbc.pc(), 0xe7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c0), 0xcb);
        EXPECT(gbc.readMem(0xe7c1), 0xda);
        // CB DA 00BF
        gbc.setState(0xc443, 0x171f, 0x7670, 0xd0f9, 0x830c, 0x4057, 0x1, 0x1);
        gbc.writeMem(0xc443, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x171f);
        EXPECT(gbc.pc(), 0xc445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc443), 0xcb);
        EXPECT(gbc.readMem(0xc444), 0xda);
        // CB DA 00C0
        gbc.setState(0x73d7, 0x1c97, 0x4cd0, 0xb9a8, 0xfd, 0xea4a, 0x0, 0x1);
        gbc.writeMem(0x73d7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c97);
        EXPECT(gbc.pc(), 0x73d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00C1
        gbc.setState(0x6a73, 0x8879, 0x99c0, 0xbc4d, 0x2973, 0x4bac, 0x0, 0x0);
        gbc.writeMem(0x6a73, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8879);
        EXPECT(gbc.pc(), 0x6a75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00C2
        gbc.setState(0xd81b, 0x8f2f, 0x6280, 0x1a19, 0x14e5, 0x51c6, 0x1, 0x0);
        gbc.writeMem(0xd81b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8f2f);
        EXPECT(gbc.pc(), 0xd81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81b), 0xcb);
        EXPECT(gbc.readMem(0xd81c), 0xda);
        // CB DA 00C3
        gbc.setState(0x11f4, 0x8d3f, 0xd8e0, 0x99a9, 0xce7a, 0x5c5e, 0x1, 0x0);
        gbc.writeMem(0x11f4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8d3f);
        EXPECT(gbc.pc(), 0x11f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00C4
        gbc.setState(0xa4c0, 0x3308, 0x1e90, 0x318e, 0x2602, 0x76f0, 0x1, 0x1);
        gbc.writeMem(0xa4c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0xa4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c0), 0xcb);
        EXPECT(gbc.readMem(0xa4c1), 0xda);
        // CB DA 00C5
        gbc.setState(0xea31, 0xa80d, 0x6210, 0x8e12, 0x10, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0xea31, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0xea33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea31), 0xcb);
        EXPECT(gbc.readMem(0xea32), 0xda);
        // CB DA 00C6
        gbc.setState(0x39a5, 0x28cb, 0xe500, 0x1580, 0x26a8, 0x3a01, 0x0, 0x0);
        gbc.writeMem(0x39a5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x28cb);
        EXPECT(gbc.pc(), 0x39a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00C7
        gbc.setState(0x1dad, 0x1c88, 0x9b00, 0xa9b, 0xc639, 0x8178, 0x0, 0x1);
        gbc.writeMem(0x1dad, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1c88);
        EXPECT(gbc.pc(), 0x1daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00C8
        gbc.setState(0x4ef, 0x863e, 0x8e00, 0x2163, 0x97b7, 0x8d2d, 0x1, 0x0);
        gbc.writeMem(0x4ef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x863e);
        EXPECT(gbc.pc(), 0x4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00C9
        gbc.setState(0xb623, 0x3fec, 0x4000, 0xfd0b, 0xbc68, 0x242d, 0x0, 0x1);
        gbc.writeMem(0xb623, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3fec);
        EXPECT(gbc.pc(), 0xb625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb623), 0xcb);
        EXPECT(gbc.readMem(0xb624), 0xda);
        // CB DA 00CA
        gbc.setState(0x2d7a, 0xb194, 0x290, 0xfcf1, 0x25f5, 0xd8bb, 0x0, 0x0);
        gbc.writeMem(0x2d7a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb194);
        EXPECT(gbc.pc(), 0x2d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00CB
        gbc.setState(0xb4ba, 0x33f6, 0x3f50, 0xd606, 0x6b59, 0x2268, 0x1, 0x0);
        gbc.writeMem(0xb4ba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x33f6);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ba), 0xcb);
        EXPECT(gbc.readMem(0xb4bb), 0xda);
        // CB DA 00CC
        gbc.setState(0x92c6, 0x21ef, 0xbf0, 0x94e4, 0x85ae, 0x3e84, 0x1, 0x0);
        gbc.writeMem(0x92c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x21ef);
        EXPECT(gbc.pc(), 0x92c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c6), 0xcb);
        EXPECT(gbc.readMem(0x92c7), 0xda);
        // CB DA 00CD
        gbc.setState(0x2aeb, 0x76ee, 0x9360, 0xfdbd, 0x9426, 0x1146, 0x0, 0x0);
        gbc.writeMem(0x2aeb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x76ee);
        EXPECT(gbc.pc(), 0x2aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00CE
        gbc.setState(0x54c1, 0xb870, 0x8600, 0x9ea0, 0xdb4d, 0xb295, 0x1, 0x0);
        gbc.writeMem(0x54c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb870);
        EXPECT(gbc.pc(), 0x54c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00CF
        gbc.setState(0xeb05, 0xb3b1, 0xc2c0, 0x8af2, 0xc4d2, 0x2a79, 0x1, 0x1);
        gbc.writeMem(0xeb05, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb3b1);
        EXPECT(gbc.pc(), 0xeb07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb05), 0xcb);
        EXPECT(gbc.readMem(0xeb06), 0xda);
        // CB DA 00D0
        gbc.setState(0xef08, 0x3db7, 0xfd10, 0xba68, 0x2ef0, 0x89df, 0x0, 0x1);
        gbc.writeMem(0xef08, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3db7);
        EXPECT(gbc.pc(), 0xef0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef08), 0xcb);
        EXPECT(gbc.readMem(0xef09), 0xda);
        // CB DA 00D1
        gbc.setState(0xe586, 0x32ea, 0x7520, 0x940f, 0x4250, 0x2c64, 0x1, 0x1);
        gbc.writeMem(0xe586, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x32ea);
        EXPECT(gbc.pc(), 0xe588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe586), 0xcb);
        EXPECT(gbc.readMem(0xe587), 0xda);
        // CB DA 00D3
        gbc.setState(0x716b, 0x9cf, 0x3780, 0xdb68, 0x1fb4, 0x415e, 0x1, 0x0);
        gbc.writeMem(0x716b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9cf);
        EXPECT(gbc.pc(), 0x716d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00D4
        gbc.setState(0x8a39, 0xe0dd, 0x8c60, 0x55f5, 0x464a, 0xc0d3, 0x1, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe0dd);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0xda);
        // CB DA 00D5
        gbc.setState(0x92da, 0x99e7, 0x470, 0x9e9c, 0xb61a, 0xda37, 0x0, 0x0);
        gbc.writeMem(0x92da, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x99e7);
        EXPECT(gbc.pc(), 0x92dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92da), 0xcb);
        EXPECT(gbc.readMem(0x92db), 0xda);
        // CB DA 00D6
        gbc.setState(0x5a50, 0x308, 0xc8d0, 0x1ec3, 0x2c40, 0x9369, 0x1, 0x0);
        gbc.writeMem(0x5a50, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x308);
        EXPECT(gbc.pc(), 0x5a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00D7
        gbc.setState(0xc397, 0x41c, 0x16d0, 0xee87, 0x2d04, 0x13fd, 0x0, 0x0);
        gbc.writeMem(0xc397, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x41c);
        EXPECT(gbc.pc(), 0xc399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc397), 0xcb);
        EXPECT(gbc.readMem(0xc398), 0xda);
        // CB DA 00D8
        gbc.setState(0xaedf, 0xa434, 0xe730, 0x2e0e, 0x75c8, 0xfd62, 0x0, 0x0);
        gbc.writeMem(0xaedf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa434);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedf), 0xcb);
        EXPECT(gbc.readMem(0xaee0), 0xda);
        // CB DA 00D9
        gbc.setState(0x17ea, 0x1c05, 0x8e90, 0x3bea, 0x3e03, 0x5ae0, 0x1, 0x0);
        gbc.writeMem(0x17ea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1c05);
        EXPECT(gbc.pc(), 0x17ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00DA
        gbc.setState(0xcbd9, 0xebfb, 0xdb0, 0x307c, 0x120a, 0xde4b, 0x1, 0x0);
        gbc.writeMem(0xcbd9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xebfb);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd9), 0xcb);
        EXPECT(gbc.readMem(0xcbda), 0xda);
        // CB DA 00DB
        gbc.setState(0x8fba, 0x8dc9, 0xb9b0, 0x2c88, 0x74c0, 0x5c73, 0x1, 0x0);
        gbc.writeMem(0x8fba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8dc9);
        EXPECT(gbc.pc(), 0x8fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fba), 0xcb);
        EXPECT(gbc.readMem(0x8fbb), 0xda);
        // CB DA 00DC
        gbc.setState(0xa679, 0xbc88, 0x5f20, 0xec3f, 0xb7bf, 0x5cce, 0x0, 0x1);
        gbc.writeMem(0xa679, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbc88);
        EXPECT(gbc.pc(), 0xa67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa679), 0xcb);
        EXPECT(gbc.readMem(0xa67a), 0xda);
        // CB DA 00DD
        gbc.setState(0x64cb, 0xd38d, 0x38e0, 0x1615, 0x93c6, 0x5061, 0x1, 0x0);
        gbc.writeMem(0x64cb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd38d);
        EXPECT(gbc.pc(), 0x64cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00DE
        gbc.setState(0x916, 0x4d44, 0xffe0, 0x4219, 0x6873, 0x8a9f, 0x0, 0x0);
        gbc.writeMem(0x916, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4d44);
        EXPECT(gbc.pc(), 0x918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00DF
        gbc.setState(0xb2a4, 0x4e9d, 0xeab0, 0xee1d, 0x7480, 0x4762, 0x0, 0x1);
        gbc.writeMem(0xb2a4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0xb2a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a4), 0xcb);
        EXPECT(gbc.readMem(0xb2a5), 0xda);
        // CB DA 00E1
        gbc.setState(0x88d0, 0x7172, 0x7630, 0x1da3, 0x1aeb, 0x81cf, 0x1, 0x1);
        gbc.writeMem(0x88d0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7172);
        EXPECT(gbc.pc(), 0x88d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d0), 0xcb);
        EXPECT(gbc.readMem(0x88d1), 0xda);
        // CB DA 00E2
        gbc.setState(0x8613, 0xfbff, 0x1b80, 0x5a5b, 0xe1bc, 0xecda, 0x1, 0x0);
        gbc.writeMem(0x8613, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfbff);
        EXPECT(gbc.pc(), 0x8615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8613), 0xcb);
        EXPECT(gbc.readMem(0x8614), 0xda);
        // CB DA 00E3
        gbc.setState(0x26d9, 0xa405, 0x1460, 0x3e18, 0x6aa1, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0x26d9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa405);
        EXPECT(gbc.pc(), 0x26db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00E4
        gbc.setState(0x5ae4, 0x9207, 0xf450, 0x85d, 0x2d49, 0x33e1, 0x1, 0x0);
        gbc.writeMem(0x5ae4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9207);
        EXPECT(gbc.pc(), 0x5ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00E5
        gbc.setState(0x22af, 0xc807, 0x66a0, 0x73e4, 0x7e92, 0xfbcd, 0x0, 0x0);
        gbc.writeMem(0x22af, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc807);
        EXPECT(gbc.pc(), 0x22b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00E6
        gbc.setState(0xc4f6, 0xd753, 0x83f0, 0x6ff2, 0xea4d, 0x4301, 0x0, 0x0);
        gbc.writeMem(0xc4f6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd753);
        EXPECT(gbc.pc(), 0xc4f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4f6), 0xcb);
        EXPECT(gbc.readMem(0xc4f7), 0xda);
        // CB DA 00E7
        gbc.setState(0xdd1e, 0xdaff, 0x8250, 0xb144, 0xc472, 0x7d42, 0x0, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdaff);
        EXPECT(gbc.pc(), 0xdd20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1e), 0xcb);
        EXPECT(gbc.readMem(0xdd1f), 0xda);
        // CB DA 00E8
        gbc.setState(0x7eaa, 0x7b24, 0x41f0, 0x1f16, 0x9ab4, 0xb7f3, 0x0, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7b24);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00E9
        gbc.setState(0xe018, 0xcfbb, 0xff10, 0xd241, 0xe879, 0xa8f1, 0x1, 0x1);
        gbc.writeMem(0xe018, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcfbb);
        EXPECT(gbc.pc(), 0xe01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe018), 0xcb);
        EXPECT(gbc.readMem(0xe019), 0xda);
        // CB DA 00EA
        gbc.setState(0x5f4d, 0xc13c, 0x11d0, 0x70f, 0xcf29, 0x2fa4, 0x1, 0x0);
        gbc.writeMem(0x5f4d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc13c);
        EXPECT(gbc.pc(), 0x5f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00EB
        gbc.setState(0x270b, 0xc4de, 0x14b0, 0xdc5f, 0x6727, 0x6766, 0x0, 0x1);
        gbc.writeMem(0x270b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0x270d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00EC
        gbc.setState(0x9060, 0xf74b, 0xffb0, 0x7a46, 0x8057, 0xd751, 0x0, 0x1);
        gbc.writeMem(0x9060, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf74b);
        EXPECT(gbc.pc(), 0x9062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9060), 0xcb);
        EXPECT(gbc.readMem(0x9061), 0xda);
        // CB DA 00ED
        gbc.setState(0x1a86, 0x661b, 0x6be0, 0xb41d, 0xde58, 0x446, 0x1, 0x1);
        gbc.writeMem(0x1a86, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x661b);
        EXPECT(gbc.pc(), 0x1a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00EE
        gbc.setState(0xe281, 0xd813, 0xfbb0, 0xc417, 0x5671, 0x3941, 0x1, 0x1);
        gbc.writeMem(0xe281, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd813);
        EXPECT(gbc.pc(), 0xe283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe281), 0xcb);
        EXPECT(gbc.readMem(0xe282), 0xda);
        // CB DA 00EF
        gbc.setState(0x1b99, 0x9f72, 0x8460, 0x9ef2, 0xfccc, 0x536f, 0x0, 0x1);
        gbc.writeMem(0x1b99, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9f72);
        EXPECT(gbc.pc(), 0x1b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00F0
        gbc.setState(0xa341, 0x303b, 0x8d00, 0x7caf, 0xbb99, 0xfb68, 0x0, 0x0);
        gbc.writeMem(0xa341, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x303b);
        EXPECT(gbc.pc(), 0xa343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa341), 0xcb);
        EXPECT(gbc.readMem(0xa342), 0xda);
        // CB DA 00F1
        gbc.setState(0x7be9, 0xb34, 0xb60, 0x934b, 0x75ea, 0x7a08, 0x1, 0x1);
        gbc.writeMem(0x7be9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb34);
        EXPECT(gbc.pc(), 0x7beb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00F2
        gbc.setState(0x325a, 0x1413, 0xf5c0, 0xa22c, 0x9932, 0x3f6c, 0x0, 0x1);
        gbc.writeMem(0x325a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1413);
        EXPECT(gbc.pc(), 0x325c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00F3
        gbc.setState(0xbff2, 0xbf11, 0xb40, 0x3581, 0xa260, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0xbff2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbf11);
        EXPECT(gbc.pc(), 0xbff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff2), 0xcb);
        EXPECT(gbc.readMem(0xbff3), 0xda);
        // CB DA 00F4
        gbc.setState(0xe65f, 0x9cfa, 0xc440, 0x1615, 0x6d10, 0x55c4, 0x1, 0x1);
        gbc.writeMem(0xe65f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0xe661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65f), 0xcb);
        EXPECT(gbc.readMem(0xe660), 0xda);
        // CB DA 00F5
        gbc.setState(0x7cf5, 0x3b89, 0x4840, 0xd568, 0x7087, 0x9305, 0x1, 0x0);
        gbc.writeMem(0x7cf5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3b89);
        EXPECT(gbc.pc(), 0x7cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00F6
        gbc.setState(0x2b47, 0xcbb, 0x81d0, 0x18ae, 0x4f8e, 0xe1c6, 0x1, 0x1);
        gbc.writeMem(0x2b47, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcbb);
        EXPECT(gbc.pc(), 0x2b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00F7
        gbc.setState(0xae1, 0xf544, 0x7610, 0x7d8e, 0x756, 0x80d1, 0x0, 0x0);
        gbc.writeMem(0xae1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf544);
        EXPECT(gbc.pc(), 0xae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00F8
        gbc.setState(0x8e7c, 0x7f9f, 0x3720, 0xa479, 0x2b57, 0xd1fa, 0x1, 0x1);
        gbc.writeMem(0x8e7c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7f9f);
        EXPECT(gbc.pc(), 0x8e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7c), 0xcb);
        EXPECT(gbc.readMem(0x8e7d), 0xda);
        // CB DA 00F9
        gbc.setState(0x8c79, 0x3c5f, 0x3cc0, 0xb9ab, 0xc0ae, 0x3c8, 0x0, 0x0);
        gbc.writeMem(0x8c79, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3c5f);
        EXPECT(gbc.pc(), 0x8c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c79), 0xcb);
        EXPECT(gbc.readMem(0x8c7a), 0xda);
        // CB DA 00FA
        gbc.setState(0x88cd, 0x16ea, 0x1970, 0x9008, 0xaac3, 0xae24, 0x0, 0x0);
        gbc.writeMem(0x88cd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x16ea);
        EXPECT(gbc.pc(), 0x88cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cd), 0xcb);
        EXPECT(gbc.readMem(0x88ce), 0xda);
        // CB DA 00FB
        gbc.setState(0x6210, 0xee8b, 0x2570, 0xf53b, 0x3e34, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0x6210, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xee8b);
        EXPECT(gbc.pc(), 0x6212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 00FC
        gbc.setState(0x1463, 0xa0f3, 0x38c0, 0xddc5, 0xf953, 0x3bd4, 0x1, 0x0);
        gbc.writeMem(0x1463, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa0f3);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00FD
        gbc.setState(0x439f, 0xcf6f, 0x9b20, 0xd986, 0x9614, 0x4f73, 0x0, 0x1);
        gbc.writeMem(0x439f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcf6f);
        EXPECT(gbc.pc(), 0x43a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 00FE
        gbc.setState(0x9fe6, 0xd2d6, 0xca0, 0x8032, 0x7973, 0xdf4d, 0x0, 0x1);
        gbc.writeMem(0x9fe6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd2d6);
        EXPECT(gbc.pc(), 0x9fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe6), 0xcb);
        EXPECT(gbc.readMem(0x9fe7), 0xda);
        // CB DA 00FF
        gbc.setState(0xba50, 0xb3ab, 0x24e0, 0xf55, 0x5578, 0xd96f, 0x0, 0x1);
        gbc.writeMem(0xba50, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb3ab);
        EXPECT(gbc.pc(), 0xba52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba50), 0xcb);
        EXPECT(gbc.readMem(0xba51), 0xda);
        // CB DA 0100
        gbc.setState(0x2740, 0x5e95, 0xaa40, 0x5afa, 0x3bb5, 0xdca, 0x1, 0x0);
        gbc.writeMem(0x2740, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5e95);
        EXPECT(gbc.pc(), 0x2742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0101
        gbc.setState(0x5443, 0x3a2f, 0x4710, 0xfbb3, 0x7d4, 0x6181, 0x1, 0x1);
        gbc.writeMem(0x5443, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3a2f);
        EXPECT(gbc.pc(), 0x5445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0102
        gbc.setState(0xd4d4, 0xf4a, 0x1120, 0x5226, 0x94e4, 0xd15d, 0x0, 0x0);
        gbc.writeMem(0xd4d4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf4a);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d4), 0xcb);
        EXPECT(gbc.readMem(0xd4d5), 0xda);
        // CB DA 0103
        gbc.setState(0x1735, 0x2ed4, 0xd2c0, 0x4fd, 0x8b09, 0x3355, 0x0, 0x1);
        gbc.writeMem(0x1735, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2ed4);
        EXPECT(gbc.pc(), 0x1737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0104
        gbc.setState(0x5664, 0xd1df, 0x1160, 0x36fa, 0xdbd3, 0x33e5, 0x1, 0x1);
        gbc.writeMem(0x5664, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd1df);
        EXPECT(gbc.pc(), 0x5666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0106
        gbc.setState(0x8c72, 0x6213, 0x61f0, 0x6a40, 0x9d09, 0xa46f, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6213);
        EXPECT(gbc.pc(), 0x8c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c72), 0xcb);
        EXPECT(gbc.readMem(0x8c73), 0xda);
        // CB DA 0107
        gbc.setState(0x1060, 0x1c87, 0x1b0, 0xd725, 0x34c4, 0xac2d, 0x1, 0x1);
        gbc.writeMem(0x1060, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1c87);
        EXPECT(gbc.pc(), 0x1062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0108
        gbc.setState(0xa9f5, 0x6422, 0x5430, 0xc542, 0x1249, 0xe568, 0x0, 0x0);
        gbc.writeMem(0xa9f5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6422);
        EXPECT(gbc.pc(), 0xa9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f5), 0xcb);
        EXPECT(gbc.readMem(0xa9f6), 0xda);
        // CB DA 0109
        gbc.setState(0x228e, 0x3486, 0xbaf0, 0xcfb0, 0xbb90, 0xaad6, 0x0, 0x0);
        gbc.writeMem(0x228e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3486);
        EXPECT(gbc.pc(), 0x2290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 010A
        gbc.setState(0x5768, 0xa9f7, 0xef00, 0x1fcd, 0x2b2a, 0x58f9, 0x1, 0x1);
        gbc.writeMem(0x5768, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa9f7);
        EXPECT(gbc.pc(), 0x576a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 010B
        gbc.setState(0x9931, 0xd7d0, 0x1f0, 0x526f, 0xb4e6, 0x9004, 0x1, 0x0);
        gbc.writeMem(0x9931, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd7d0);
        EXPECT(gbc.pc(), 0x9933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0xcb);
        EXPECT(gbc.readMem(0x9932), 0xda);
        // CB DA 010D
        gbc.setState(0x63d3, 0x1893, 0x9f30, 0x5d80, 0xce8b, 0xb377, 0x1, 0x1);
        gbc.writeMem(0x63d3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1893);
        EXPECT(gbc.pc(), 0x63d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 010E
        gbc.setState(0x28ab, 0x1fd2, 0x36d0, 0x8a7b, 0xc4b6, 0x58cf, 0x1, 0x0);
        gbc.writeMem(0x28ab, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1fd2);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 010F
        gbc.setState(0xcc54, 0xdfeb, 0x8650, 0x3b4a, 0xbffb, 0x4af7, 0x0, 0x0);
        gbc.writeMem(0xcc54, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdfeb);
        EXPECT(gbc.pc(), 0xcc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc54), 0xcb);
        EXPECT(gbc.readMem(0xcc55), 0xda);
        // CB DA 0110
        gbc.setState(0xeab7, 0x8e32, 0x8a30, 0xecdc, 0x4d90, 0xcf45, 0x1, 0x0);
        gbc.writeMem(0xeab7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0xeab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab7), 0xcb);
        EXPECT(gbc.readMem(0xeab8), 0xda);
        // CB DA 0111
        gbc.setState(0xcd5d, 0xbe77, 0x3e30, 0x1197, 0xfd17, 0x1395, 0x1, 0x1);
        gbc.writeMem(0xcd5d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbe77);
        EXPECT(gbc.pc(), 0xcd5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd5d), 0xcb);
        EXPECT(gbc.readMem(0xcd5e), 0xda);
        // CB DA 0113
        gbc.setState(0x977b, 0xa0b7, 0x13c0, 0x3abb, 0x2aba, 0x98d, 0x1, 0x0);
        gbc.writeMem(0x977b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa0b7);
        EXPECT(gbc.pc(), 0x977d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977b), 0xcb);
        EXPECT(gbc.readMem(0x977c), 0xda);
        // CB DA 0114
        gbc.setState(0xa578, 0xbb3e, 0xda60, 0x55f0, 0x867b, 0x233b, 0x1, 0x0);
        gbc.writeMem(0xa578, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb3e);
        EXPECT(gbc.pc(), 0xa57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa578), 0xcb);
        EXPECT(gbc.readMem(0xa579), 0xda);
        // CB DA 0115
        gbc.setState(0x3a8e, 0x3e95, 0xdc50, 0x31ff, 0x8fde, 0x713e, 0x1, 0x0);
        gbc.writeMem(0x3a8e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3e95);
        EXPECT(gbc.pc(), 0x3a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0116
        gbc.setState(0x29d8, 0xd8cd, 0x4820, 0xf3de, 0xde47, 0x3f96, 0x0, 0x0);
        gbc.writeMem(0x29d8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd8cd);
        EXPECT(gbc.pc(), 0x29da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0117
        gbc.setState(0x6acd, 0x75e4, 0x6030, 0x59b0, 0xa549, 0xce03, 0x0, 0x0);
        gbc.writeMem(0x6acd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x75e4);
        EXPECT(gbc.pc(), 0x6acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0118
        gbc.setState(0x9e53, 0x84fc, 0x9d70, 0x88ba, 0x93db, 0x834b, 0x1, 0x1);
        gbc.writeMem(0x9e53, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x84fc);
        EXPECT(gbc.pc(), 0x9e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e53), 0xcb);
        EXPECT(gbc.readMem(0x9e54), 0xda);
        // CB DA 0119
        gbc.setState(0x6bd7, 0x2a39, 0x760, 0xf6e7, 0xee71, 0x5e6c, 0x0, 0x1);
        gbc.writeMem(0x6bd7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2a39);
        EXPECT(gbc.pc(), 0x6bd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 011A
        gbc.setState(0xca0b, 0x2571, 0x3f00, 0xd3d5, 0x47ce, 0x491d, 0x1, 0x1);
        gbc.writeMem(0xca0b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2571);
        EXPECT(gbc.pc(), 0xca0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0b), 0xcb);
        EXPECT(gbc.readMem(0xca0c), 0xda);
        // CB DA 011B
        gbc.setState(0x785f, 0x6606, 0xf060, 0x9471, 0x8bdf, 0x52b6, 0x1, 0x1);
        gbc.writeMem(0x785f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0x7861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 011C
        gbc.setState(0x5fbb, 0x518f, 0xdd00, 0x696d, 0x253f, 0xe510, 0x0, 0x0);
        gbc.writeMem(0x5fbb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x518f);
        EXPECT(gbc.pc(), 0x5fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 011D
        gbc.setState(0x1e63, 0xbbb7, 0x41f0, 0x8dd7, 0xf6df, 0x2691, 0x0, 0x1);
        gbc.writeMem(0x1e63, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbbb7);
        EXPECT(gbc.pc(), 0x1e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 011E
        gbc.setState(0xcfe5, 0xe321, 0x1fd0, 0x3b2d, 0xd44a, 0xf200, 0x0, 0x1);
        gbc.writeMem(0xcfe5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe321);
        EXPECT(gbc.pc(), 0xcfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe5), 0xcb);
        EXPECT(gbc.readMem(0xcfe6), 0xda);
        // CB DA 011F
        gbc.setState(0x7914, 0x93bc, 0xb790, 0xe6be, 0x24fc, 0x867e, 0x1, 0x0);
        gbc.writeMem(0x7914, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x93bc);
        EXPECT(gbc.pc(), 0x7916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0120
        gbc.setState(0xec73, 0x6a2, 0x3280, 0x66e4, 0xd04c, 0x96a4, 0x0, 0x1);
        gbc.writeMem(0xec73, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6a2);
        EXPECT(gbc.pc(), 0xec75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec73), 0xcb);
        EXPECT(gbc.readMem(0xec74), 0xda);
        // CB DA 0121
        gbc.setState(0x335f, 0xa179, 0x1e30, 0x96b9, 0xed21, 0xcbf5, 0x0, 0x1);
        gbc.writeMem(0x335f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa179);
        EXPECT(gbc.pc(), 0x3361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0122
        gbc.setState(0x5a12, 0x35e2, 0x85f0, 0xb671, 0x1d79, 0xc47e, 0x1, 0x0);
        gbc.writeMem(0x5a12, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x35e2);
        EXPECT(gbc.pc(), 0x5a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0123
        gbc.setState(0xcc0f, 0x89ac, 0xc050, 0xce90, 0x2441, 0xeb8f, 0x1, 0x0);
        gbc.writeMem(0xcc0f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x89ac);
        EXPECT(gbc.pc(), 0xcc11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0f), 0xcb);
        EXPECT(gbc.readMem(0xcc10), 0xda);
        // CB DA 0124
        gbc.setState(0xcf92, 0xabed, 0x1340, 0xa299, 0x46ce, 0x2d8b, 0x1, 0x0);
        gbc.writeMem(0xcf92, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xabed);
        EXPECT(gbc.pc(), 0xcf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf92), 0xcb);
        EXPECT(gbc.readMem(0xcf93), 0xda);
        // CB DA 0125
        gbc.setState(0xeb5, 0x6163, 0x8ba0, 0xca22, 0x1609, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0xeb5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0xeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0126
        gbc.setState(0x19a0, 0xf104, 0x6320, 0xec34, 0x558, 0xa0a8, 0x0, 0x1);
        gbc.writeMem(0x19a0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf104);
        EXPECT(gbc.pc(), 0x19a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0127
        gbc.setState(0xd175, 0xd234, 0xdeb0, 0x6e1a, 0xa155, 0x21de, 0x0, 0x1);
        gbc.writeMem(0xd175, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd234);
        EXPECT(gbc.pc(), 0xd177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd175), 0xcb);
        EXPECT(gbc.readMem(0xd176), 0xda);
        // CB DA 0128
        gbc.setState(0x4729, 0x7cd5, 0x4360, 0x374d, 0xd9, 0xd0fe, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7cd5);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0129
        gbc.setState(0x68d4, 0x33e7, 0x920, 0xdb7e, 0xa80a, 0x6849, 0x1, 0x1);
        gbc.writeMem(0x68d4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x33e7);
        EXPECT(gbc.pc(), 0x68d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 012A
        gbc.setState(0x1c5c, 0x41c0, 0xbb50, 0x7f2a, 0x560b, 0xf98f, 0x0, 0x0);
        gbc.writeMem(0x1c5c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x41c0);
        EXPECT(gbc.pc(), 0x1c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 012B
        gbc.setState(0xc808, 0x8ff6, 0x8e30, 0x93cd, 0x5fe9, 0x561f, 0x1, 0x0);
        gbc.writeMem(0xc808, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0xc80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc808), 0xcb);
        EXPECT(gbc.readMem(0xc809), 0xda);
        // CB DA 012C
        gbc.setState(0x1547, 0x4a85, 0x4be0, 0x5f3b, 0x9dab, 0x8aa5, 0x1, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4a85);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 012D
        gbc.setState(0xe9c6, 0x3e8a, 0xa610, 0x5fb9, 0xe5a7, 0x190b, 0x0, 0x1);
        gbc.writeMem(0xe9c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3e8a);
        EXPECT(gbc.pc(), 0xe9c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c6), 0xcb);
        EXPECT(gbc.readMem(0xe9c7), 0xda);
        // CB DA 012F
        gbc.setState(0x6b42, 0xf3b0, 0x5630, 0x202d, 0x34f0, 0x8554, 0x0, 0x0);
        gbc.writeMem(0x6b42, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf3b0);
        EXPECT(gbc.pc(), 0x6b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0130
        gbc.setState(0x2919, 0x910f, 0xcdb0, 0xf783, 0xbfe7, 0x6a08, 0x1, 0x0);
        gbc.writeMem(0x2919, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x910f);
        EXPECT(gbc.pc(), 0x291b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0131
        gbc.setState(0x41a1, 0x7098, 0x2020, 0x3990, 0xbb93, 0xba7e, 0x0, 0x0);
        gbc.writeMem(0x41a1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7098);
        EXPECT(gbc.pc(), 0x41a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0132
        gbc.setState(0x1520, 0x9c69, 0xb100, 0xcd71, 0xdc55, 0xee52, 0x1, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9c69);
        EXPECT(gbc.pc(), 0x1522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0133
        gbc.setState(0xbfd6, 0x9afc, 0x7a60, 0xb60, 0x82fb, 0xe4e2, 0x0, 0x0);
        gbc.writeMem(0xbfd6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9afc);
        EXPECT(gbc.pc(), 0xbfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd6), 0xcb);
        EXPECT(gbc.readMem(0xbfd7), 0xda);
        // CB DA 0134
        gbc.setState(0x3b0a, 0x5d4b, 0xf000, 0xd3b3, 0xe068, 0xbf7f, 0x1, 0x1);
        gbc.writeMem(0x3b0a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5d4b);
        EXPECT(gbc.pc(), 0x3b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0136
        gbc.setState(0x23f2, 0x3b36, 0x5bf0, 0x8a94, 0x541f, 0x4e8f, 0x0, 0x1);
        gbc.writeMem(0x23f2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3b36);
        EXPECT(gbc.pc(), 0x23f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0137
        gbc.setState(0x2932, 0x936b, 0x5fa0, 0x99fb, 0xcacf, 0xbeb7, 0x0, 0x0);
        gbc.writeMem(0x2932, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x936b);
        EXPECT(gbc.pc(), 0x2934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0138
        gbc.setState(0x772, 0xfa14, 0x4550, 0xb04, 0x22d6, 0x8d4b, 0x1, 0x1);
        gbc.writeMem(0x772, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xfa14);
        EXPECT(gbc.pc(), 0x774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0139
        gbc.setState(0x6a00, 0xc1bf, 0xebf0, 0x2ffe, 0x4fc8, 0xb160, 0x0, 0x0);
        gbc.writeMem(0x6a00, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc1bf);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 013A
        gbc.setState(0x72ca, 0xcc55, 0xa990, 0xe500, 0x55a3, 0x41f3, 0x1, 0x0);
        gbc.writeMem(0x72ca, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcc55);
        EXPECT(gbc.pc(), 0x72cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 013C
        gbc.setState(0x2222, 0x2814, 0x6600, 0x8370, 0xd8c6, 0x9839, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2814);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 013D
        gbc.setState(0x40f, 0x5bf2, 0x3240, 0x49b5, 0x492b, 0x275c, 0x0, 0x1);
        gbc.writeMem(0x40f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5bf2);
        EXPECT(gbc.pc(), 0x411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 013E
        gbc.setState(0x17a3, 0x8eea, 0x7690, 0xa3d5, 0x3389, 0x421, 0x0, 0x0);
        gbc.writeMem(0x17a3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8eea);
        EXPECT(gbc.pc(), 0x17a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 013F
        gbc.setState(0xe9d4, 0x50d5, 0x5cb0, 0x473a, 0xfa1c, 0x3a0f, 0x0, 0x1);
        gbc.writeMem(0xe9d4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x50d5);
        EXPECT(gbc.pc(), 0xe9d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d4), 0xcb);
        EXPECT(gbc.readMem(0xe9d5), 0xda);
        // CB DA 0140
        gbc.setState(0x598, 0xfc6f, 0x8d70, 0x7157, 0x7543, 0x9406, 0x1, 0x1);
        gbc.writeMem(0x598, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfc6f);
        EXPECT(gbc.pc(), 0x59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0141
        gbc.setState(0x281, 0xb9b7, 0xb690, 0x3812, 0x4029, 0xf140, 0x0, 0x1);
        gbc.writeMem(0x281, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb9b7);
        EXPECT(gbc.pc(), 0x283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0142
        gbc.setState(0x9adb, 0x1bec, 0x3400, 0x92d, 0xb8d6, 0x7bd9, 0x1, 0x0);
        gbc.writeMem(0x9adb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1bec);
        EXPECT(gbc.pc(), 0x9add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9adb), 0xcb);
        EXPECT(gbc.readMem(0x9adc), 0xda);
        // CB DA 0143
        gbc.setState(0x5927, 0x73ce, 0x4f80, 0x9dc7, 0xfc1a, 0x1f18, 0x1, 0x1);
        gbc.writeMem(0x5927, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x73ce);
        EXPECT(gbc.pc(), 0x5929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0144
        gbc.setState(0x8bee, 0x3aa9, 0xf670, 0xd6b0, 0xf359, 0x712, 0x0, 0x0);
        gbc.writeMem(0x8bee, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3aa9);
        EXPECT(gbc.pc(), 0x8bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bee), 0xcb);
        EXPECT(gbc.readMem(0x8bef), 0xda);
        // CB DA 0145
        gbc.setState(0xc9b1, 0xc285, 0x4a40, 0xfac, 0x913a, 0x2ebc, 0x0, 0x0);
        gbc.writeMem(0xc9b1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc285);
        EXPECT(gbc.pc(), 0xc9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b1), 0xcb);
        EXPECT(gbc.readMem(0xc9b2), 0xda);
        // CB DA 0146
        gbc.setState(0x389c, 0x8fb7, 0xd70, 0xb91a, 0x58b2, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x389c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8fb7);
        EXPECT(gbc.pc(), 0x389e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0147
        gbc.setState(0xb5ee, 0x65b0, 0xa0, 0xa641, 0x4e94, 0x2048, 0x0, 0x1);
        gbc.writeMem(0xb5ee, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x65b0);
        EXPECT(gbc.pc(), 0xb5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ee), 0xcb);
        EXPECT(gbc.readMem(0xb5ef), 0xda);
        // CB DA 0148
        gbc.setState(0x49f6, 0xe7f0, 0x3780, 0x2b17, 0xe92a, 0xb961, 0x1, 0x1);
        gbc.writeMem(0x49f6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe7f0);
        EXPECT(gbc.pc(), 0x49f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0149
        gbc.setState(0xab3d, 0xac19, 0x80f0, 0xe0d5, 0x98b3, 0x7b4a, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xac19);
        EXPECT(gbc.pc(), 0xab3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3d), 0xcb);
        EXPECT(gbc.readMem(0xab3e), 0xda);
        // CB DA 014A
        gbc.setState(0xdb82, 0x38dc, 0xd2e0, 0x7ae5, 0xcd96, 0x4232, 0x1, 0x1);
        gbc.writeMem(0xdb82, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x38dc);
        EXPECT(gbc.pc(), 0xdb84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb82), 0xcb);
        EXPECT(gbc.readMem(0xdb83), 0xda);
        // CB DA 014B
        gbc.setState(0x8ebf, 0x8d58, 0xc600, 0x53da, 0x9ba, 0x149e, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8d58);
        EXPECT(gbc.pc(), 0x8ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebf), 0xcb);
        EXPECT(gbc.readMem(0x8ec0), 0xda);
        // CB DA 014D
        gbc.setState(0x6881, 0xcd76, 0x90b0, 0xf4f5, 0x7f51, 0x9fde, 0x1, 0x1);
        gbc.writeMem(0x6881, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcd76);
        EXPECT(gbc.pc(), 0x6883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 014E
        gbc.setState(0x47e9, 0x9445, 0x2c20, 0x4aa7, 0xaf7b, 0xce4, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9445);
        EXPECT(gbc.pc(), 0x47eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 014F
        gbc.setState(0x8f74, 0x6663, 0x6ee0, 0xbb82, 0x842d, 0xbee6, 0x1, 0x1);
        gbc.writeMem(0x8f74, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6663);
        EXPECT(gbc.pc(), 0x8f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f74), 0xcb);
        EXPECT(gbc.readMem(0x8f75), 0xda);
        // CB DA 0150
        gbc.setState(0xe247, 0x55be, 0x6700, 0x4e2d, 0x627d, 0x8a1, 0x1, 0x0);
        gbc.writeMem(0xe247, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x55be);
        EXPECT(gbc.pc(), 0xe249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe247), 0xcb);
        EXPECT(gbc.readMem(0xe248), 0xda);
        // CB DA 0151
        gbc.setState(0x8c0e, 0x9665, 0xde40, 0x8e64, 0x3ac1, 0x7b22, 0x0, 0x1);
        gbc.writeMem(0x8c0e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9665);
        EXPECT(gbc.pc(), 0x8c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0e), 0xcb);
        EXPECT(gbc.readMem(0x8c0f), 0xda);
        // CB DA 0152
        gbc.setState(0x2095, 0xdc9a, 0xd3f0, 0x46da, 0xe936, 0xf63d, 0x0, 0x1);
        gbc.writeMem(0x2095, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdc9a);
        EXPECT(gbc.pc(), 0x2097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0153
        gbc.setState(0x1aa5, 0x1e5d, 0xe000, 0xe3b5, 0xbc6a, 0x71fb, 0x0, 0x0);
        gbc.writeMem(0x1aa5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1e5d);
        EXPECT(gbc.pc(), 0x1aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0154
        gbc.setState(0xb283, 0x86ec, 0x4c50, 0xb45b, 0x61f4, 0xcff, 0x1, 0x1);
        gbc.writeMem(0xb283, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x86ec);
        EXPECT(gbc.pc(), 0xb285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb283), 0xcb);
        EXPECT(gbc.readMem(0xb284), 0xda);
        // CB DA 0155
        gbc.setState(0xb8bb, 0x9dc9, 0x7cd0, 0xdeb8, 0x23c3, 0xbd16, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9dc9);
        EXPECT(gbc.pc(), 0xb8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8bb), 0xcb);
        EXPECT(gbc.readMem(0xb8bc), 0xda);
        // CB DA 0156
        gbc.setState(0x1635, 0xaf3f, 0x8450, 0xa1b9, 0xab5e, 0x9c72, 0x1, 0x1);
        gbc.writeMem(0x1635, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xaf3f);
        EXPECT(gbc.pc(), 0x1637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0157
        gbc.setState(0x404c, 0xba0e, 0x5940, 0xd4c3, 0xd2d0, 0x4b1a, 0x1, 0x1);
        gbc.writeMem(0x404c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xba0e);
        EXPECT(gbc.pc(), 0x404e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0158
        gbc.setState(0x86d4, 0x4a, 0xa780, 0x2d84, 0x3d4e, 0x0, 0x0, 0x1);
        gbc.writeMem(0x86d4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4a);
        EXPECT(gbc.pc(), 0x86d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d4), 0xcb);
        EXPECT(gbc.readMem(0x86d5), 0xda);
        // CB DA 0159
        gbc.setState(0x41, 0xec2c, 0x5800, 0x7713, 0x62a3, 0x803a, 0x0, 0x0);
        gbc.writeMem(0x41, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xec2c);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 015B
        gbc.setState(0xeadd, 0x44b0, 0xa970, 0x15c4, 0x2d50, 0x4c0d, 0x1, 0x1);
        gbc.writeMem(0xeadd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x44b0);
        EXPECT(gbc.pc(), 0xeadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeadd), 0xcb);
        EXPECT(gbc.readMem(0xeade), 0xda);
        // CB DA 015C
        gbc.setState(0xd786, 0xbb3, 0xbfd0, 0x167e, 0xfd2e, 0x4736, 0x1, 0x0);
        gbc.writeMem(0xd786, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbb3);
        EXPECT(gbc.pc(), 0xd788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd786), 0xcb);
        EXPECT(gbc.readMem(0xd787), 0xda);
        // CB DA 015D
        gbc.setState(0x86fe, 0x7cb7, 0xf700, 0x2c4d, 0xd48f, 0xae34, 0x1, 0x0);
        gbc.writeMem(0x86fe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7cb7);
        EXPECT(gbc.pc(), 0x8700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fe), 0xcb);
        EXPECT(gbc.readMem(0x86ff), 0xda);
        // CB DA 015E
        gbc.setState(0x3403, 0x6500, 0x6cb0, 0x4ab3, 0x56af, 0xc803, 0x1, 0x0);
        gbc.writeMem(0x3403, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6500);
        EXPECT(gbc.pc(), 0x3405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0160
        gbc.setState(0xdbe0, 0x7752, 0x940, 0xc16c, 0x7425, 0x8a23, 0x0, 0x0);
        gbc.writeMem(0xdbe0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7752);
        EXPECT(gbc.pc(), 0xdbe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe0), 0xcb);
        EXPECT(gbc.readMem(0xdbe1), 0xda);
        // CB DA 0161
        gbc.setState(0xd1c1, 0x1b87, 0x1dc0, 0x2cb, 0x8aab, 0xa01, 0x1, 0x0);
        gbc.writeMem(0xd1c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1b87);
        EXPECT(gbc.pc(), 0xd1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c1), 0xcb);
        EXPECT(gbc.readMem(0xd1c2), 0xda);
        // CB DA 0162
        gbc.setState(0x4f7e, 0xdfc9, 0xcaa0, 0x984f, 0xaa95, 0x4480, 0x0, 0x0);
        gbc.writeMem(0x4f7e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdfc9);
        EXPECT(gbc.pc(), 0x4f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0163
        gbc.setState(0x2536, 0xae1f, 0x4f50, 0x9da5, 0xdf80, 0x963f, 0x0, 0x0);
        gbc.writeMem(0x2536, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xae1f);
        EXPECT(gbc.pc(), 0x2538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0165
        gbc.setState(0x3659, 0x4422, 0x9f70, 0x397b, 0x4b75, 0xac7c, 0x0, 0x1);
        gbc.writeMem(0x3659, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4422);
        EXPECT(gbc.pc(), 0x365b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0166
        gbc.setState(0x7abd, 0xef0a, 0xb300, 0xc129, 0xa7c5, 0xebed, 0x1, 0x1);
        gbc.writeMem(0x7abd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xef0a);
        EXPECT(gbc.pc(), 0x7abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0167
        gbc.setState(0xeb92, 0x7f16, 0x5e00, 0xe273, 0x9dce, 0xa0ca, 0x0, 0x0);
        gbc.writeMem(0xeb92, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7f16);
        EXPECT(gbc.pc(), 0xeb94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb92), 0xcb);
        EXPECT(gbc.readMem(0xeb93), 0xda);
        // CB DA 0168
        gbc.setState(0x6ad6, 0xe973, 0xa6e0, 0xb97f, 0x72b2, 0x43c8, 0x1, 0x1);
        gbc.writeMem(0x6ad6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe973);
        EXPECT(gbc.pc(), 0x6ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0169
        gbc.setState(0xd3c5, 0xd8c3, 0x6ef0, 0x8ad1, 0xfa19, 0xd4c4, 0x0, 0x0);
        gbc.writeMem(0xd3c5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd8c3);
        EXPECT(gbc.pc(), 0xd3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c5), 0xcb);
        EXPECT(gbc.readMem(0xd3c6), 0xda);
        // CB DA 016A
        gbc.setState(0x7c7f, 0xa174, 0x6990, 0x84e2, 0xdf5b, 0x80b5, 0x0, 0x0);
        gbc.writeMem(0x7c7f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa174);
        EXPECT(gbc.pc(), 0x7c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 016B
        gbc.setState(0x9b84, 0xf757, 0x5bb0, 0xfc7c, 0xe155, 0x4f58, 0x0, 0x0);
        gbc.writeMem(0x9b84, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf757);
        EXPECT(gbc.pc(), 0x9b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b84), 0xcb);
        EXPECT(gbc.readMem(0x9b85), 0xda);
        // CB DA 016D
        gbc.setState(0x5031, 0x9ca6, 0x31b0, 0xc307, 0x65d3, 0xaffe, 0x0, 0x1);
        gbc.writeMem(0x5031, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9ca6);
        EXPECT(gbc.pc(), 0x5033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 016E
        gbc.setState(0x5488, 0x4799, 0xbd30, 0x1ec6, 0xa050, 0xdc34, 0x1, 0x0);
        gbc.writeMem(0x5488, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4799);
        EXPECT(gbc.pc(), 0x548a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 016F
        gbc.setState(0xbb5b, 0xe291, 0xf610, 0xcb2c, 0x7748, 0x1a51, 0x1, 0x0);
        gbc.writeMem(0xbb5b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe291);
        EXPECT(gbc.pc(), 0xbb5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5b), 0xcb);
        EXPECT(gbc.readMem(0xbb5c), 0xda);
        // CB DA 0170
        gbc.setState(0xb0d0, 0xf2cc, 0xeda0, 0x6456, 0x2bd, 0x496c, 0x0, 0x0);
        gbc.writeMem(0xb0d0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf2cc);
        EXPECT(gbc.pc(), 0xb0d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d0), 0xcb);
        EXPECT(gbc.readMem(0xb0d1), 0xda);
        // CB DA 0171
        gbc.setState(0x9ce4, 0x85d7, 0xa850, 0x1792, 0xa1ed, 0x6f82, 0x1, 0x0);
        gbc.writeMem(0x9ce4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x85d7);
        EXPECT(gbc.pc(), 0x9ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce4), 0xcb);
        EXPECT(gbc.readMem(0x9ce5), 0xda);
        // CB DA 0172
        gbc.setState(0x87f4, 0x612e, 0x25d0, 0x6169, 0xb5a9, 0xef0d, 0x0, 0x0);
        gbc.writeMem(0x87f4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x612e);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f4), 0xcb);
        EXPECT(gbc.readMem(0x87f5), 0xda);
        // CB DA 0173
        gbc.setState(0xa16c, 0xa4a4, 0xfee0, 0xbded, 0xbc1, 0x8a5, 0x1, 0x1);
        gbc.writeMem(0xa16c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa4a4);
        EXPECT(gbc.pc(), 0xa16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16c), 0xcb);
        EXPECT(gbc.readMem(0xa16d), 0xda);
        // CB DA 0174
        gbc.setState(0x4a0d, 0x1ee0, 0x5f50, 0xa6fa, 0xd0e1, 0xf9d7, 0x0, 0x1);
        gbc.writeMem(0x4a0d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1ee0);
        EXPECT(gbc.pc(), 0x4a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0175
        gbc.setState(0xd696, 0x1c41, 0xf850, 0xe7c1, 0x333a, 0xfd4a, 0x1, 0x0);
        gbc.writeMem(0xd696, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c41);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0xcb);
        EXPECT(gbc.readMem(0xd697), 0xda);
        // CB DA 0176
        gbc.setState(0x33ad, 0xcfbc, 0x8990, 0xc785, 0x5217, 0xa5c3, 0x1, 0x1);
        gbc.writeMem(0x33ad, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcfbc);
        EXPECT(gbc.pc(), 0x33af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0177
        gbc.setState(0x9c5a, 0x868a, 0x8f00, 0x32a9, 0x3df4, 0x486e, 0x1, 0x1);
        gbc.writeMem(0x9c5a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x868a);
        EXPECT(gbc.pc(), 0x9c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5a), 0xcb);
        EXPECT(gbc.readMem(0x9c5b), 0xda);
        // CB DA 0178
        gbc.setState(0xe2dd, 0x1038, 0xec90, 0xeb30, 0xd790, 0xb777, 0x1, 0x1);
        gbc.writeMem(0xe2dd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1038);
        EXPECT(gbc.pc(), 0xe2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2dd), 0xcb);
        EXPECT(gbc.readMem(0xe2de), 0xda);
        // CB DA 0179
        gbc.setState(0x897, 0x2706, 0x9220, 0x998d, 0x8b25, 0x5209, 0x0, 0x0);
        gbc.writeMem(0x897, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2706);
        EXPECT(gbc.pc(), 0x899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 017B
        gbc.setState(0x2489, 0x368e, 0xdde0, 0x4be4, 0x329, 0x930c, 0x1, 0x0);
        gbc.writeMem(0x2489, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x368e);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 017C
        gbc.setState(0x9373, 0xf504, 0xefa0, 0x2b03, 0x778f, 0x3c03, 0x0, 0x1);
        gbc.writeMem(0x9373, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf504);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9373), 0xcb);
        EXPECT(gbc.readMem(0x9374), 0xda);
        // CB DA 017D
        gbc.setState(0x366f, 0x303d, 0x1500, 0x536d, 0xe69d, 0x5d5a, 0x0, 0x0);
        gbc.writeMem(0x366f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x303d);
        EXPECT(gbc.pc(), 0x3671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 017E
        gbc.setState(0x3394, 0x40d9, 0x6bc0, 0xc1e1, 0x50a7, 0x65f1, 0x0, 0x0);
        gbc.writeMem(0x3394, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x40d9);
        EXPECT(gbc.pc(), 0x3396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 017F
        gbc.setState(0xe98c, 0xc8c1, 0x6950, 0x666d, 0xd569, 0x226c, 0x1, 0x1);
        gbc.writeMem(0xe98c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc8c1);
        EXPECT(gbc.pc(), 0xe98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98c), 0xcb);
        EXPECT(gbc.readMem(0xe98d), 0xda);
        // CB DA 0180
        gbc.setState(0xabb2, 0x80c9, 0x8570, 0x232a, 0x10f2, 0x91ac, 0x1, 0x1);
        gbc.writeMem(0xabb2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0xabb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb2), 0xcb);
        EXPECT(gbc.readMem(0xabb3), 0xda);
        // CB DA 0181
        gbc.setState(0x96e1, 0x31d1, 0xb0b0, 0xe31d, 0xa4df, 0x803b, 0x1, 0x0);
        gbc.writeMem(0x96e1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x31d1);
        EXPECT(gbc.pc(), 0x96e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e1), 0xcb);
        EXPECT(gbc.readMem(0x96e2), 0xda);
        // CB DA 0182
        gbc.setState(0x13b3, 0x257f, 0xab00, 0x499f, 0xadf1, 0xfcff, 0x0, 0x1);
        gbc.writeMem(0x13b3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x257f);
        EXPECT(gbc.pc(), 0x13b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0183
        gbc.setState(0xa14c, 0xb0d4, 0xf110, 0x86a7, 0x1700, 0x668b, 0x0, 0x1);
        gbc.writeMem(0xa14c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb0d4);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0xda);
        // CB DA 0184
        gbc.setState(0x204c, 0xc3ea, 0x7d0, 0xcb60, 0xa235, 0xbc3, 0x0, 0x1);
        gbc.writeMem(0x204c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc3ea);
        EXPECT(gbc.pc(), 0x204e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0185
        gbc.setState(0x6c1a, 0x6c58, 0x9ea0, 0xdc13, 0xfeae, 0x8f03, 0x1, 0x1);
        gbc.writeMem(0x6c1a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6c58);
        EXPECT(gbc.pc(), 0x6c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0186
        gbc.setState(0xdc45, 0xedc2, 0xf4c0, 0xe65a, 0xb771, 0x4b0a, 0x1, 0x1);
        gbc.writeMem(0xdc45, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xedc2);
        EXPECT(gbc.pc(), 0xdc47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc45), 0xcb);
        EXPECT(gbc.readMem(0xdc46), 0xda);
        // CB DA 0187
        gbc.setState(0x710d, 0xe93, 0x5d60, 0xe454, 0x4a5c, 0xd386, 0x0, 0x1);
        gbc.writeMem(0x710d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe93);
        EXPECT(gbc.pc(), 0x710f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0188
        gbc.setState(0x3db8, 0x590d, 0xdbb0, 0xcbd5, 0xc40f, 0x5dd9, 0x1, 0x0);
        gbc.writeMem(0x3db8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0x3dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0189
        gbc.setState(0x2b3f, 0xd891, 0xd9a0, 0x8f0c, 0xfaf8, 0xe703, 0x0, 0x1);
        gbc.writeMem(0x2b3f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd891);
        EXPECT(gbc.pc(), 0x2b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 018A
        gbc.setState(0x3afe, 0xa11e, 0x8c90, 0x9a06, 0x1f74, 0x29f2, 0x0, 0x1);
        gbc.writeMem(0x3afe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa11e);
        EXPECT(gbc.pc(), 0x3b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 018C
        gbc.setState(0x60f4, 0xc947, 0x8bf0, 0x241c, 0x5aeb, 0xc04a, 0x1, 0x0);
        gbc.writeMem(0x60f4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc947);
        EXPECT(gbc.pc(), 0x60f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 018D
        gbc.setState(0x3e8f, 0x638c, 0xf380, 0x5214, 0x155c, 0xc8a2, 0x0, 0x1);
        gbc.writeMem(0x3e8f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x638c);
        EXPECT(gbc.pc(), 0x3e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 018E
        gbc.setState(0x2aa4, 0xd2b8, 0xfeb0, 0x1ad5, 0xd00e, 0x18bd, 0x0, 0x0);
        gbc.writeMem(0x2aa4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd2b8);
        EXPECT(gbc.pc(), 0x2aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 018F
        gbc.setState(0x40f1, 0x8f64, 0xb70, 0x358a, 0xdd2a, 0xc1a3, 0x0, 0x0);
        gbc.writeMem(0x40f1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8f64);
        EXPECT(gbc.pc(), 0x40f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0190
        gbc.setState(0x94e4, 0xe8c3, 0xa090, 0xea7b, 0x519a, 0xbd36, 0x0, 0x1);
        gbc.writeMem(0x94e4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe8c3);
        EXPECT(gbc.pc(), 0x94e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e4), 0xcb);
        EXPECT(gbc.readMem(0x94e5), 0xda);
        // CB DA 0192
        gbc.setState(0x8485, 0x5e55, 0xbc50, 0xf4e1, 0xca56, 0xb19f, 0x1, 0x0);
        gbc.writeMem(0x8485, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5e55);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8485), 0xcb);
        EXPECT(gbc.readMem(0x8486), 0xda);
        // CB DA 0193
        gbc.setState(0xe4ca, 0x753f, 0x4f20, 0x407e, 0x3a1f, 0x89f5, 0x1, 0x1);
        gbc.writeMem(0xe4ca, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x753f);
        EXPECT(gbc.pc(), 0xe4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ca), 0xcb);
        EXPECT(gbc.readMem(0xe4cb), 0xda);
        // CB DA 0194
        gbc.setState(0x29d1, 0x6511, 0x2ae0, 0xe13e, 0x7ca4, 0x3207, 0x0, 0x1);
        gbc.writeMem(0x29d1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6511);
        EXPECT(gbc.pc(), 0x29d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0195
        gbc.setState(0x63e7, 0xfa72, 0x9a20, 0x7033, 0xad9b, 0xf503, 0x1, 0x0);
        gbc.writeMem(0x63e7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x63e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0197
        gbc.setState(0xe093, 0xd15c, 0x8920, 0xd870, 0x2068, 0x558c, 0x0, 0x1);
        gbc.writeMem(0xe093, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd15c);
        EXPECT(gbc.pc(), 0xe095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe093), 0xcb);
        EXPECT(gbc.readMem(0xe094), 0xda);
        // CB DA 0198
        gbc.setState(0x428b, 0xacd6, 0xd740, 0xd716, 0xd1d, 0xeeee, 0x1, 0x1);
        gbc.writeMem(0x428b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xacd6);
        EXPECT(gbc.pc(), 0x428d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0199
        gbc.setState(0x349, 0x4fa6, 0x4e60, 0x7ce, 0x498d, 0xf100, 0x1, 0x0);
        gbc.writeMem(0x349, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4fa6);
        EXPECT(gbc.pc(), 0x34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 019A
        gbc.setState(0xab7b, 0x4cfd, 0x4240, 0x6e42, 0xc51c, 0x6275, 0x0, 0x0);
        gbc.writeMem(0xab7b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4cfd);
        EXPECT(gbc.pc(), 0xab7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7b), 0xcb);
        EXPECT(gbc.readMem(0xab7c), 0xda);
        // CB DA 019B
        gbc.setState(0xd2d6, 0xd5de, 0xda30, 0xfa47, 0x72fe, 0x9b51, 0x1, 0x1);
        gbc.writeMem(0xd2d6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd5de);
        EXPECT(gbc.pc(), 0xd2d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2d6), 0xcb);
        EXPECT(gbc.readMem(0xd2d7), 0xda);
        // CB DA 019C
        gbc.setState(0x256b, 0x838f, 0x3630, 0x21ba, 0xd82f, 0x5451, 0x1, 0x0);
        gbc.writeMem(0x256b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0x256d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 019D
        gbc.setState(0xc994, 0xf316, 0x93f0, 0x9d90, 0x2132, 0xb5e8, 0x0, 0x0);
        gbc.writeMem(0xc994, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0xc996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc994), 0xcb);
        EXPECT(gbc.readMem(0xc995), 0xda);
        // CB DA 019E
        gbc.setState(0x9a72, 0x6acf, 0xf350, 0x4ba7, 0x3256, 0x361, 0x1, 0x1);
        gbc.writeMem(0x9a72, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0x9a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a72), 0xcb);
        EXPECT(gbc.readMem(0x9a73), 0xda);
        // CB DA 019F
        gbc.setState(0x2968, 0x4c5c, 0xc0b0, 0x5a8a, 0x50f6, 0x34aa, 0x1, 0x0);
        gbc.writeMem(0x2968, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4c5c);
        EXPECT(gbc.pc(), 0x296a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01A0
        gbc.setState(0xc1fd, 0xee81, 0xee40, 0x80a9, 0x7fcd, 0x87c5, 0x0, 0x1);
        gbc.writeMem(0xc1fd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0xc1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fd), 0xcb);
        EXPECT(gbc.readMem(0xc1fe), 0xda);
        // CB DA 01A1
        gbc.setState(0xb453, 0x876f, 0xcc40, 0xbba1, 0x6aaa, 0x7e57, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x876f);
        EXPECT(gbc.pc(), 0xb455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb453), 0xcb);
        EXPECT(gbc.readMem(0xb454), 0xda);
        // CB DA 01A2
        gbc.setState(0x294, 0x820b, 0x7320, 0xc124, 0xc571, 0x530f, 0x1, 0x1);
        gbc.writeMem(0x294, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x820b);
        EXPECT(gbc.pc(), 0x296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01A3
        gbc.setState(0x8701, 0xa4aa, 0xacb0, 0x50e2, 0xf4b1, 0x6b74, 0x0, 0x1);
        gbc.writeMem(0x8701, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa4aa);
        EXPECT(gbc.pc(), 0x8703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8701), 0xcb);
        EXPECT(gbc.readMem(0x8702), 0xda);
        // CB DA 01A4
        gbc.setState(0x9b28, 0xc6ab, 0x9770, 0xa88a, 0x8908, 0x579b, 0x1, 0x0);
        gbc.writeMem(0x9b28, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0x9b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b28), 0xcb);
        EXPECT(gbc.readMem(0x9b29), 0xda);
        // CB DA 01A5
        gbc.setState(0xd0a6, 0x569a, 0x6820, 0xf26a, 0x5e80, 0xe401, 0x0, 0x1);
        gbc.writeMem(0xd0a6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x569a);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a6), 0xcb);
        EXPECT(gbc.readMem(0xd0a7), 0xda);
        // CB DA 01A7
        gbc.setState(0x4e2, 0xb060, 0xab00, 0xdb7f, 0xc645, 0xc67, 0x1, 0x1);
        gbc.writeMem(0x4e2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb060);
        EXPECT(gbc.pc(), 0x4e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01A8
        gbc.setState(0x12cd, 0xac66, 0xd6b0, 0xdc25, 0xe18f, 0x288b, 0x0, 0x1);
        gbc.writeMem(0x12cd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x12cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01AA
        gbc.setState(0xd0, 0xe1e9, 0x9d10, 0x9853, 0x4386, 0x63f, 0x0, 0x0);
        gbc.writeMem(0xd0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0xd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01AB
        gbc.setState(0xd7cf, 0x6092, 0x15f0, 0x9f13, 0xcc0, 0xe86a, 0x1, 0x0);
        gbc.writeMem(0xd7cf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6092);
        EXPECT(gbc.pc(), 0xd7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7cf), 0xcb);
        EXPECT(gbc.readMem(0xd7d0), 0xda);
        // CB DA 01AC
        gbc.setState(0x33b5, 0xa650, 0xb450, 0x1673, 0x6146, 0xdf1c, 0x1, 0x1);
        gbc.writeMem(0x33b5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa650);
        EXPECT(gbc.pc(), 0x33b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01AD
        gbc.setState(0xe8a6, 0xfd1, 0x13f0, 0x1cbf, 0x3838, 0x7209, 0x1, 0x0);
        gbc.writeMem(0xe8a6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfd1);
        EXPECT(gbc.pc(), 0xe8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a6), 0xcb);
        EXPECT(gbc.readMem(0xe8a7), 0xda);
        // CB DA 01AE
        gbc.setState(0x7a75, 0xe6e6, 0x500, 0x4b9f, 0xeada, 0xd554, 0x1, 0x0);
        gbc.writeMem(0x7a75, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe6e6);
        EXPECT(gbc.pc(), 0x7a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01AF
        gbc.setState(0xa7b2, 0x33f, 0xb190, 0x6243, 0xb9a4, 0x9ef2, 0x0, 0x0);
        gbc.writeMem(0xa7b2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x33f);
        EXPECT(gbc.pc(), 0xa7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b2), 0xcb);
        EXPECT(gbc.readMem(0xa7b3), 0xda);
        // CB DA 01B0
        gbc.setState(0xe45, 0x8999, 0xb430, 0xa956, 0xc85c, 0x2f02, 0x1, 0x0);
        gbc.writeMem(0xe45, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0xe47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01B1
        gbc.setState(0x666a, 0xdb7, 0x52d0, 0x74b4, 0x64, 0x11d4, 0x1, 0x0);
        gbc.writeMem(0x666a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdb7);
        EXPECT(gbc.pc(), 0x666c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01B2
        gbc.setState(0xa574, 0x7b62, 0xb630, 0xe2e1, 0x25f, 0xe2dd, 0x0, 0x1);
        gbc.writeMem(0xa574, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7b62);
        EXPECT(gbc.pc(), 0xa576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa574), 0xcb);
        EXPECT(gbc.readMem(0xa575), 0xda);
        // CB DA 01B3
        gbc.setState(0xd13a, 0x296e, 0xeea0, 0x808c, 0xa3, 0x158b, 0x1, 0x1);
        gbc.writeMem(0xd13a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x296e);
        EXPECT(gbc.pc(), 0xd13c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13a), 0xcb);
        EXPECT(gbc.readMem(0xd13b), 0xda);
        // CB DA 01B4
        gbc.setState(0x490d, 0x4f94, 0xbb50, 0xa63a, 0x73f0, 0x61a3, 0x1, 0x1);
        gbc.writeMem(0x490d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4f94);
        EXPECT(gbc.pc(), 0x490f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01B5
        gbc.setState(0x7dff, 0xf204, 0x39a0, 0x9af2, 0xefbb, 0x1323, 0x0, 0x0);
        gbc.writeMem(0x7dff, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf204);
        EXPECT(gbc.pc(), 0x7e01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01B6
        gbc.setState(0xdc28, 0x401, 0xe970, 0xaef, 0x5ef9, 0xd528, 0x1, 0x0);
        gbc.writeMem(0xdc28, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x401);
        EXPECT(gbc.pc(), 0xdc2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc28), 0xcb);
        EXPECT(gbc.readMem(0xdc29), 0xda);
        // CB DA 01B7
        gbc.setState(0xc52e, 0xc47e, 0xcd60, 0x28d7, 0x6d4f, 0x44f7, 0x1, 0x1);
        gbc.writeMem(0xc52e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc47e);
        EXPECT(gbc.pc(), 0xc530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52e), 0xcb);
        EXPECT(gbc.readMem(0xc52f), 0xda);
        // CB DA 01B8
        gbc.setState(0x115a, 0xd01f, 0x3770, 0x675b, 0xbaae, 0x45f0, 0x1, 0x1);
        gbc.writeMem(0x115a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0x115c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01B9
        gbc.setState(0xd89c, 0x3533, 0xd630, 0x251c, 0x1eab, 0x3124, 0x0, 0x1);
        gbc.writeMem(0xd89c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3533);
        EXPECT(gbc.pc(), 0xd89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89c), 0xcb);
        EXPECT(gbc.readMem(0xd89d), 0xda);
        // CB DA 01BA
        gbc.setState(0x2f24, 0xcd9d, 0xb5b0, 0x628b, 0xe2a4, 0x1ec2, 0x1, 0x1);
        gbc.writeMem(0x2f24, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcd9d);
        EXPECT(gbc.pc(), 0x2f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01BB
        gbc.setState(0x87ae, 0x813b, 0xd070, 0x3aea, 0x5ae9, 0xee1f, 0x0, 0x1);
        gbc.writeMem(0x87ae, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x813b);
        EXPECT(gbc.pc(), 0x87b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ae), 0xcb);
        EXPECT(gbc.readMem(0x87af), 0xda);
        // CB DA 01BC
        gbc.setState(0x724, 0x56a8, 0x4960, 0xaadd, 0x16d9, 0x6ddb, 0x1, 0x0);
        gbc.writeMem(0x724, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0x726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01BD
        gbc.setState(0xcaa0, 0xbc45, 0x490, 0x388d, 0x3e28, 0x575d, 0x0, 0x1);
        gbc.writeMem(0xcaa0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0xcaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa0), 0xcb);
        EXPECT(gbc.readMem(0xcaa1), 0xda);
        // CB DA 01BF
        gbc.setState(0xc9ba, 0xd622, 0x4280, 0x3300, 0x602b, 0xc3a3, 0x1, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0xc9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ba), 0xcb);
        EXPECT(gbc.readMem(0xc9bb), 0xda);
        // CB DA 01C0
        gbc.setState(0xefe4, 0xabb5, 0x7c40, 0x6861, 0xf5df, 0xfb27, 0x0, 0x1);
        gbc.writeMem(0xefe4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xabb5);
        EXPECT(gbc.pc(), 0xefe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe4), 0xcb);
        EXPECT(gbc.readMem(0xefe5), 0xda);
        // CB DA 01C1
        gbc.setState(0xc308, 0x892, 0x7dd0, 0xf674, 0x91f, 0xb709, 0x0, 0x1);
        gbc.writeMem(0xc308, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x892);
        EXPECT(gbc.pc(), 0xc30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc308), 0xcb);
        EXPECT(gbc.readMem(0xc309), 0xda);
        // CB DA 01C3
        gbc.setState(0x8130, 0x557b, 0x9d00, 0xa35c, 0xb0dd, 0xb20f, 0x0, 0x1);
        gbc.writeMem(0x8130, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x557b);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        EXPECT(gbc.readMem(0x8131), 0xda);
        // CB DA 01C4
        gbc.setState(0x3faa, 0xacf, 0x6360, 0x200e, 0x6623, 0x6841, 0x1, 0x1);
        gbc.writeMem(0x3faa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xacf);
        EXPECT(gbc.pc(), 0x3fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01C5
        gbc.setState(0xdc45, 0xf19f, 0x6500, 0xe19c, 0x711e, 0x96f3, 0x0, 0x1);
        gbc.writeMem(0xdc45, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf19f);
        EXPECT(gbc.pc(), 0xdc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc45), 0xcb);
        EXPECT(gbc.readMem(0xdc46), 0xda);
        // CB DA 01C6
        gbc.setState(0x9098, 0xd5b4, 0xa140, 0xf11f, 0x9a64, 0x4e8a, 0x1, 0x1);
        gbc.writeMem(0x9098, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd5b4);
        EXPECT(gbc.pc(), 0x909a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9098), 0xcb);
        EXPECT(gbc.readMem(0x9099), 0xda);
        // CB DA 01C7
        gbc.setState(0xdea, 0x1680, 0xe610, 0x869e, 0x3856, 0x175a, 0x0, 0x1);
        gbc.writeMem(0xdea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0xdec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01C8
        gbc.setState(0xd089, 0x60f5, 0x2260, 0xb8c5, 0x78fc, 0xbaf7, 0x0, 0x1);
        gbc.writeMem(0xd089, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x60f5);
        EXPECT(gbc.pc(), 0xd08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd089), 0xcb);
        EXPECT(gbc.readMem(0xd08a), 0xda);
        // CB DA 01C9
        gbc.setState(0x3f17, 0xbc5d, 0x1900, 0xcaa5, 0xae9a, 0xb541, 0x1, 0x1);
        gbc.writeMem(0x3f17, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbc5d);
        EXPECT(gbc.pc(), 0x3f19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01CA
        gbc.setState(0xe996, 0x574e, 0xeac0, 0xbb94, 0xb99c, 0x89a9, 0x1, 0x0);
        gbc.writeMem(0xe996, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x574e);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe996), 0xcb);
        EXPECT(gbc.readMem(0xe997), 0xda);
        // CB DA 01CB
        gbc.setState(0xac89, 0x1da8, 0xd170, 0x8c01, 0xfef5, 0x662e, 0x1, 0x0);
        gbc.writeMem(0xac89, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1da8);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0xda);
        // CB DA 01CC
        gbc.setState(0xca8c, 0x221b, 0x6d50, 0x1caf, 0x7be3, 0xef49, 0x1, 0x1);
        gbc.writeMem(0xca8c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x221b);
        EXPECT(gbc.pc(), 0xca8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8c), 0xcb);
        EXPECT(gbc.readMem(0xca8d), 0xda);
        // CB DA 01CD
        gbc.setState(0xd16, 0x5a98, 0x8820, 0xb7a5, 0xf721, 0x2d55, 0x1, 0x0);
        gbc.writeMem(0xd16, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5a98);
        EXPECT(gbc.pc(), 0xd18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01CE
        gbc.setState(0xcd5f, 0xecb2, 0x8240, 0xb463, 0x69be, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0xcd5f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xecb2);
        EXPECT(gbc.pc(), 0xcd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5f), 0xcb);
        EXPECT(gbc.readMem(0xcd60), 0xda);
        // CB DA 01CF
        gbc.setState(0x407f, 0x4bb2, 0x8b20, 0xccac, 0xd3e9, 0xed3a, 0x0, 0x0);
        gbc.writeMem(0x407f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4bb2);
        EXPECT(gbc.pc(), 0x4081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01D0
        gbc.setState(0xab6e, 0x1772, 0x9a30, 0x6251, 0x7103, 0xe717, 0x0, 0x1);
        gbc.writeMem(0xab6e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1772);
        EXPECT(gbc.pc(), 0xab70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6e), 0xcb);
        EXPECT(gbc.readMem(0xab6f), 0xda);
        // CB DA 01D1
        gbc.setState(0x41fc, 0x7df7, 0xda40, 0x31af, 0x579b, 0xbe5e, 0x0, 0x1);
        gbc.writeMem(0x41fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7df7);
        EXPECT(gbc.pc(), 0x41fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01D2
        gbc.setState(0xd3f0, 0xea94, 0x8750, 0x1f9e, 0xcfeb, 0x95, 0x0, 0x1);
        gbc.writeMem(0xd3f0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea94);
        EXPECT(gbc.pc(), 0xd3f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f0), 0xcb);
        EXPECT(gbc.readMem(0xd3f1), 0xda);
        // CB DA 01D3
        gbc.setState(0x3792, 0x72ae, 0x6b70, 0xb84, 0xcc49, 0xef51, 0x0, 0x1);
        gbc.writeMem(0x3792, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x72ae);
        EXPECT(gbc.pc(), 0x3794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01D4
        gbc.setState(0x83df, 0x2293, 0xe8f0, 0x9d49, 0xe64d, 0xf192, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2293);
        EXPECT(gbc.pc(), 0x83e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83df), 0xcb);
        EXPECT(gbc.readMem(0x83e0), 0xda);
        // CB DA 01D6
        gbc.setState(0xe7d3, 0x2460, 0x6490, 0xd3d6, 0x270a, 0x9707, 0x0, 0x1);
        gbc.writeMem(0xe7d3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2460);
        EXPECT(gbc.pc(), 0xe7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d3), 0xcb);
        EXPECT(gbc.readMem(0xe7d4), 0xda);
        // CB DA 01D7
        gbc.setState(0x76a, 0x1a61, 0x8ef0, 0x1fa8, 0x9228, 0xb669, 0x1, 0x0);
        gbc.writeMem(0x76a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1a61);
        EXPECT(gbc.pc(), 0x76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01D8
        gbc.setState(0x45da, 0x53c7, 0xfbd0, 0xd384, 0x17f3, 0x5109, 0x1, 0x1);
        gbc.writeMem(0x45da, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x53c7);
        EXPECT(gbc.pc(), 0x45dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01DA
        gbc.setState(0x67c5, 0xfc80, 0xd9b0, 0xa8e8, 0x4382, 0xc20e, 0x0, 0x0);
        gbc.writeMem(0x67c5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfc80);
        EXPECT(gbc.pc(), 0x67c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01DB
        gbc.setState(0x870d, 0x5474, 0x3e80, 0xc0e8, 0xa6a2, 0x9fdd, 0x1, 0x0);
        gbc.writeMem(0x870d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5474);
        EXPECT(gbc.pc(), 0x870f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870d), 0xcb);
        EXPECT(gbc.readMem(0x870e), 0xda);
        // CB DA 01DC
        gbc.setState(0xc262, 0xd833, 0xde10, 0x997, 0x3eee, 0x42c1, 0x0, 0x0);
        gbc.writeMem(0xc262, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0xc264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc262), 0xcb);
        EXPECT(gbc.readMem(0xc263), 0xda);
        // CB DA 01DD
        gbc.setState(0x9e9, 0xdcd7, 0xdda0, 0x27a2, 0x1a9d, 0x8971, 0x0, 0x1);
        gbc.writeMem(0x9e9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdcd7);
        EXPECT(gbc.pc(), 0x9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01DE
        gbc.setState(0x1b14, 0x9c66, 0xf830, 0x2b49, 0xb3c6, 0x7938, 0x1, 0x1);
        gbc.writeMem(0x1b14, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c66);
        EXPECT(gbc.pc(), 0x1b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01DF
        gbc.setState(0x447f, 0xd039, 0xa250, 0x614a, 0x805c, 0xefc4, 0x0, 0x1);
        gbc.writeMem(0x447f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd039);
        EXPECT(gbc.pc(), 0x4481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01E0
        gbc.setState(0x6fe, 0x157a, 0xce60, 0xd2e8, 0x4ac0, 0x65a4, 0x1, 0x1);
        gbc.writeMem(0x6fe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x157a);
        EXPECT(gbc.pc(), 0x700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01E1
        gbc.setState(0x4246, 0xcfe6, 0xcdb0, 0xdfb3, 0x2b1e, 0xa81, 0x1, 0x0);
        gbc.writeMem(0x4246, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcfe6);
        EXPECT(gbc.pc(), 0x4248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01E2
        gbc.setState(0xb2f2, 0x8ff1, 0x24d0, 0x7ffc, 0x6cbc, 0x2ac6, 0x0, 0x1);
        gbc.writeMem(0xb2f2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8ff1);
        EXPECT(gbc.pc(), 0xb2f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f2), 0xcb);
        EXPECT(gbc.readMem(0xb2f3), 0xda);
        // CB DA 01E3
        gbc.setState(0x13b3, 0x5747, 0xdf60, 0x5651, 0xa6a9, 0x58b, 0x0, 0x0);
        gbc.writeMem(0x13b3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5747);
        EXPECT(gbc.pc(), 0x13b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01E4
        gbc.setState(0x364d, 0x9cb1, 0x4b10, 0x3451, 0xc992, 0x2e44, 0x0, 0x0);
        gbc.writeMem(0x364d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9cb1);
        EXPECT(gbc.pc(), 0x364f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01E5
        gbc.setState(0x9985, 0x52e1, 0xccb0, 0xc029, 0x6c20, 0x69b1, 0x0, 0x0);
        gbc.writeMem(0x9985, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x52e1);
        EXPECT(gbc.pc(), 0x9987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9985), 0xcb);
        EXPECT(gbc.readMem(0x9986), 0xda);
        // CB DA 01E6
        gbc.setState(0x7fa1, 0x1d15, 0xa7e0, 0xbefe, 0x836a, 0xad6f, 0x0, 0x1);
        gbc.writeMem(0x7fa1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1d15);
        EXPECT(gbc.pc(), 0x7fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01E7
        gbc.setState(0x5394, 0xfb71, 0xb9d0, 0x8d7d, 0xe568, 0x2f65, 0x1, 0x0);
        gbc.writeMem(0x5394, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfb71);
        EXPECT(gbc.pc(), 0x5396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01E8
        gbc.setState(0x1279, 0x5423, 0x16a0, 0xd14, 0xf65a, 0x5f4e, 0x1, 0x1);
        gbc.writeMem(0x1279, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5423);
        EXPECT(gbc.pc(), 0x127b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01E9
        gbc.setState(0xafde, 0x87e5, 0xf3f0, 0x77a4, 0x5b46, 0x36ab, 0x0, 0x1);
        gbc.writeMem(0xafde, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x87e5);
        EXPECT(gbc.pc(), 0xafe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafde), 0xcb);
        EXPECT(gbc.readMem(0xafdf), 0xda);
        // CB DA 01EA
        gbc.setState(0xd6f3, 0xea1d, 0x16e0, 0xd2a8, 0xacf7, 0xf956, 0x0, 0x0);
        gbc.writeMem(0xd6f3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xea1d);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0xda);
        // CB DA 01EB
        gbc.setState(0xcc7f, 0x1efe, 0x6b00, 0x99d7, 0xcb82, 0xf0dc, 0x0, 0x0);
        gbc.writeMem(0xcc7f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1efe);
        EXPECT(gbc.pc(), 0xcc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7f), 0xcb);
        EXPECT(gbc.readMem(0xcc80), 0xda);
        // CB DA 01EC
        gbc.setState(0xb991, 0xd043, 0x1670, 0x857b, 0x6fff, 0x83d6, 0x0, 0x0);
        gbc.writeMem(0xb991, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd043);
        EXPECT(gbc.pc(), 0xb993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb991), 0xcb);
        EXPECT(gbc.readMem(0xb992), 0xda);
        // CB DA 01ED
        gbc.setState(0xe0e0, 0x2b36, 0x5d50, 0x87bb, 0x41d, 0xf4af, 0x0, 0x0);
        gbc.writeMem(0xe0e0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0xe0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e0), 0xcb);
        EXPECT(gbc.readMem(0xe0e1), 0xda);
        // CB DA 01EE
        gbc.setState(0x8df4, 0xfe7d, 0x3020, 0x6d49, 0x7bbf, 0xa9c9, 0x0, 0x1);
        gbc.writeMem(0x8df4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0x8df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df4), 0xcb);
        EXPECT(gbc.readMem(0x8df5), 0xda);
        // CB DA 01EF
        gbc.setState(0xd7f9, 0xa0c7, 0x5d20, 0x3c6f, 0xf607, 0x4286, 0x0, 0x0);
        gbc.writeMem(0xd7f9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa0c7);
        EXPECT(gbc.pc(), 0xd7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f9), 0xcb);
        EXPECT(gbc.readMem(0xd7fa), 0xda);
        // CB DA 01F0
        gbc.setState(0x6cfc, 0xafa4, 0xbe40, 0xd2a0, 0x4b17, 0x7243, 0x1, 0x1);
        gbc.writeMem(0x6cfc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xafa4);
        EXPECT(gbc.pc(), 0x6cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01F1
        gbc.setState(0xbe93, 0xdfcb, 0xb710, 0xff2b, 0x6079, 0x6dcb, 0x0, 0x0);
        gbc.writeMem(0xbe93, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdfcb);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe93), 0xcb);
        EXPECT(gbc.readMem(0xbe94), 0xda);
        // CB DA 01F2
        gbc.setState(0x7f9, 0x44fa, 0xe370, 0x2477, 0x62c9, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0x7f9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x44fa);
        EXPECT(gbc.pc(), 0x7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01F3
        gbc.setState(0x7964, 0xa581, 0xe410, 0x8a6, 0x10cc, 0x4385, 0x0, 0x1);
        gbc.writeMem(0x7964, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa581);
        EXPECT(gbc.pc(), 0x7966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01F4
        gbc.setState(0x1a97, 0x48f7, 0x9580, 0xb83d, 0x16fd, 0xe9e7, 0x1, 0x1);
        gbc.writeMem(0x1a97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x48f7);
        EXPECT(gbc.pc(), 0x1a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01F5
        gbc.setState(0xe7f0, 0x2adb, 0xc270, 0xfc76, 0x1adf, 0x63cf, 0x0, 0x0);
        gbc.writeMem(0xe7f0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2adb);
        EXPECT(gbc.pc(), 0xe7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7f0), 0xcb);
        EXPECT(gbc.readMem(0xe7f1), 0xda);
        // CB DA 01F6
        gbc.setState(0xe118, 0x9241, 0x5890, 0x423f, 0x324d, 0xa3bd, 0x1, 0x1);
        gbc.writeMem(0xe118, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9241);
        EXPECT(gbc.pc(), 0xe11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe118), 0xcb);
        EXPECT(gbc.readMem(0xe119), 0xda);
        // CB DA 01F7
        gbc.setState(0x273b, 0x29a, 0x4f50, 0xca8f, 0x9fe0, 0x410f, 0x1, 0x0);
        gbc.writeMem(0x273b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x29a);
        EXPECT(gbc.pc(), 0x273d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01F8
        gbc.setState(0x1b1b, 0x84c7, 0x87a0, 0xf9cb, 0x7b18, 0x7d12, 0x0, 0x0);
        gbc.writeMem(0x1b1b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x84c7);
        EXPECT(gbc.pc(), 0x1b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01FA
        gbc.setState(0x7143, 0x65de, 0x2b20, 0x12db, 0x5cf1, 0xb084, 0x1, 0x0);
        gbc.writeMem(0x7143, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x65de);
        EXPECT(gbc.pc(), 0x7145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01FB
        gbc.setState(0x1dc6, 0x25c8, 0x7f00, 0xe152, 0x2a51, 0xe48d, 0x0, 0x1);
        gbc.writeMem(0x1dc6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x25c8);
        EXPECT(gbc.pc(), 0x1dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01FC
        gbc.setState(0x65ae, 0x54ac, 0xae70, 0x9f4c, 0x3d27, 0x87b0, 0x0, 0x0);
        gbc.writeMem(0x65ae, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x54ac);
        EXPECT(gbc.pc(), 0x65b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 01FD
        gbc.setState(0x1987, 0x690c, 0xade0, 0xd89a, 0xa951, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x1987, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x690c);
        EXPECT(gbc.pc(), 0x1989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 01FE
        gbc.setState(0xa40c, 0x6d6d, 0x8820, 0x109, 0x69cf, 0xdae, 0x1, 0x0);
        gbc.writeMem(0xa40c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6d6d);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40c), 0xcb);
        EXPECT(gbc.readMem(0xa40d), 0xda);
        // CB DA 01FF
        gbc.setState(0x6d18, 0xee29, 0x2700, 0x9049, 0xda81, 0xf51f, 0x1, 0x1);
        gbc.writeMem(0x6d18, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xee29);
        EXPECT(gbc.pc(), 0x6d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0200
        gbc.setState(0x1f29, 0x78cb, 0x65d0, 0xef0f, 0xabb6, 0x426e, 0x0, 0x1);
        gbc.writeMem(0x1f29, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x78cb);
        EXPECT(gbc.pc(), 0x1f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0201
        gbc.setState(0x704e, 0xd5fd, 0x9c80, 0x44b9, 0xa8ec, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x704e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd5fd);
        EXPECT(gbc.pc(), 0x7050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0202
        gbc.setState(0xea53, 0x70f4, 0xf830, 0xca19, 0xc191, 0x1163, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x70f4);
        EXPECT(gbc.pc(), 0xea55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea53), 0xcb);
        EXPECT(gbc.readMem(0xea54), 0xda);
        // CB DA 0203
        gbc.setState(0xb3aa, 0x37fd, 0x1880, 0xd12b, 0xcd60, 0x4653, 0x0, 0x1);
        gbc.writeMem(0xb3aa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x37fd);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3aa), 0xcb);
        EXPECT(gbc.readMem(0xb3ab), 0xda);
        // CB DA 0204
        gbc.setState(0xed15, 0xf4f9, 0x9cd0, 0xd042, 0x5049, 0x78be, 0x1, 0x0);
        gbc.writeMem(0xed15, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf4f9);
        EXPECT(gbc.pc(), 0xed17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed15), 0xcb);
        EXPECT(gbc.readMem(0xed16), 0xda);
        // CB DA 0205
        gbc.setState(0xa2e6, 0xbf13, 0x250, 0xccf9, 0xd104, 0xff4a, 0x1, 0x0);
        gbc.writeMem(0xa2e6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbf13);
        EXPECT(gbc.pc(), 0xa2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e6), 0xcb);
        EXPECT(gbc.readMem(0xa2e7), 0xda);
        // CB DA 0206
        gbc.setState(0x8d9d, 0xbb50, 0x2910, 0x6580, 0x92cf, 0x3198, 0x1, 0x1);
        gbc.writeMem(0x8d9d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbb50);
        EXPECT(gbc.pc(), 0x8d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9d), 0xcb);
        EXPECT(gbc.readMem(0x8d9e), 0xda);
        // CB DA 0207
        gbc.setState(0xa4, 0x5282, 0xc30, 0x685c, 0xcbc4, 0x4af1, 0x1, 0x1);
        gbc.writeMem(0xa4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5282);
        EXPECT(gbc.pc(), 0xa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0208
        gbc.setState(0xcb41, 0xf4e4, 0x8bf0, 0x6532, 0x7586, 0x6dfc, 0x0, 0x1);
        gbc.writeMem(0xcb41, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf4e4);
        EXPECT(gbc.pc(), 0xcb43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb41), 0xcb);
        EXPECT(gbc.readMem(0xcb42), 0xda);
        // CB DA 0209
        gbc.setState(0x7d12, 0xc9ac, 0xde0, 0xfb3, 0x39a9, 0x7398, 0x1, 0x0);
        gbc.writeMem(0x7d12, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc9ac);
        EXPECT(gbc.pc(), 0x7d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 020A
        gbc.setState(0x913a, 0x674d, 0xc870, 0xe9c8, 0xa0f6, 0x44be, 0x1, 0x1);
        gbc.writeMem(0x913a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x674d);
        EXPECT(gbc.pc(), 0x913c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913a), 0xcb);
        EXPECT(gbc.readMem(0x913b), 0xda);
        // CB DA 020C
        gbc.setState(0x7cc2, 0x4e51, 0xf970, 0xfe8e, 0x7f5b, 0xbec6, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4e51);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 020D
        gbc.setState(0x8a78, 0xe951, 0x9150, 0x396c, 0x2a05, 0x2f03, 0x1, 0x1);
        gbc.writeMem(0x8a78, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe951);
        EXPECT(gbc.pc(), 0x8a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a78), 0xcb);
        EXPECT(gbc.readMem(0x8a79), 0xda);
        // CB DA 0210
        gbc.setState(0x1eeb, 0xcd98, 0x34b0, 0xf144, 0xc9b2, 0x8423, 0x1, 0x0);
        gbc.writeMem(0x1eeb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcd98);
        EXPECT(gbc.pc(), 0x1eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0211
        gbc.setState(0x22cc, 0x2f2f, 0x92f0, 0xc34d, 0x9423, 0xfa1f, 0x1, 0x1);
        gbc.writeMem(0x22cc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2f2f);
        EXPECT(gbc.pc(), 0x22ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0212
        gbc.setState(0x91a9, 0xbdb7, 0x7810, 0x3ec3, 0xc46c, 0x94a, 0x1, 0x1);
        gbc.writeMem(0x91a9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbdb7);
        EXPECT(gbc.pc(), 0x91ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0xcb);
        EXPECT(gbc.readMem(0x91aa), 0xda);
        // CB DA 0214
        gbc.setState(0x307d, 0xdecd, 0x9780, 0xc6f, 0x9eb9, 0x68a6, 0x0, 0x1);
        gbc.writeMem(0x307d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xdecd);
        EXPECT(gbc.pc(), 0x307f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0215
        gbc.setState(0x8b12, 0x6674, 0xd490, 0xff52, 0xf1c8, 0x2fb2, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0x8b14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b12), 0xcb);
        EXPECT(gbc.readMem(0x8b13), 0xda);
        // CB DA 0216
        gbc.setState(0xcf46, 0x6bc9, 0x640, 0x8cd, 0x5e82, 0xe470, 0x1, 0x1);
        gbc.writeMem(0xcf46, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6bc9);
        EXPECT(gbc.pc(), 0xcf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf46), 0xcb);
        EXPECT(gbc.readMem(0xcf47), 0xda);
        // CB DA 0218
        gbc.setState(0x8de9, 0xddef, 0xad70, 0x7c6, 0xff0, 0xfde2, 0x0, 0x1);
        gbc.writeMem(0x8de9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xddef);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de9), 0xcb);
        EXPECT(gbc.readMem(0x8dea), 0xda);
        // CB DA 0219
        gbc.setState(0x1f3b, 0x1062, 0xa820, 0x900b, 0xe286, 0x778a, 0x0, 0x1);
        gbc.writeMem(0x1f3b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1062);
        EXPECT(gbc.pc(), 0x1f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 021A
        gbc.setState(0x7212, 0x48b1, 0x4100, 0x31cb, 0x8aaa, 0xb47c, 0x1, 0x1);
        gbc.writeMem(0x7212, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x48b1);
        EXPECT(gbc.pc(), 0x7214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 021B
        gbc.setState(0x6db, 0xf49d, 0x2d40, 0xac3c, 0xe63a, 0x64f5, 0x0, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf49d);
        EXPECT(gbc.pc(), 0x6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 021C
        gbc.setState(0x2ab3, 0xa8db, 0xeff0, 0x23e3, 0x56c1, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa8db);
        EXPECT(gbc.pc(), 0x2ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 021D
        gbc.setState(0x804d, 0x5135, 0x5940, 0x88e6, 0x6b12, 0x3454, 0x0, 0x0);
        gbc.writeMem(0x804d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5135);
        EXPECT(gbc.pc(), 0x804f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804d), 0xcb);
        EXPECT(gbc.readMem(0x804e), 0xda);
        // CB DA 021E
        gbc.setState(0x5f75, 0x8f20, 0x6200, 0xe14a, 0x193c, 0x8cac, 0x1, 0x1);
        gbc.writeMem(0x5f75, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8f20);
        EXPECT(gbc.pc(), 0x5f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 021F
        gbc.setState(0x1629, 0xd114, 0x1660, 0xcedc, 0x5048, 0x59ad, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd114);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0220
        gbc.setState(0xc295, 0xd77e, 0xb20, 0x90c7, 0x9eb4, 0x4f54, 0x0, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd77e);
        EXPECT(gbc.pc(), 0xc297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc295), 0xcb);
        EXPECT(gbc.readMem(0xc296), 0xda);
        // CB DA 0221
        gbc.setState(0x7368, 0x3c3b, 0xe8a0, 0x877c, 0x9ea1, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3c3b);
        EXPECT(gbc.pc(), 0x736a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0222
        gbc.setState(0x59bf, 0x7ee7, 0xc000, 0x82d7, 0xf14c, 0x9390, 0x0, 0x0);
        gbc.writeMem(0x59bf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0x59c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0223
        gbc.setState(0xcc06, 0x32eb, 0x2ec0, 0x871, 0x5a65, 0x297c, 0x1, 0x1);
        gbc.writeMem(0xcc06, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x32eb);
        EXPECT(gbc.pc(), 0xcc08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc06), 0xcb);
        EXPECT(gbc.readMem(0xcc07), 0xda);
        // CB DA 0224
        gbc.setState(0x2bd5, 0x328, 0xd9d0, 0x9be1, 0x4f5c, 0xad10, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x328);
        EXPECT(gbc.pc(), 0x2bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0225
        gbc.setState(0xe2b4, 0x97df, 0xdce0, 0xc845, 0xbbf1, 0xc5e5, 0x1, 0x0);
        gbc.writeMem(0xe2b4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x97df);
        EXPECT(gbc.pc(), 0xe2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b4), 0xcb);
        EXPECT(gbc.readMem(0xe2b5), 0xda);
        // CB DA 0227
        gbc.setState(0x14d3, 0xfb70, 0x6880, 0xce72, 0xd0e6, 0x2174, 0x0, 0x1);
        gbc.writeMem(0x14d3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfb70);
        EXPECT(gbc.pc(), 0x14d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0228
        gbc.setState(0x323, 0x3abe, 0xe000, 0x20ca, 0x7713, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x323, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3abe);
        EXPECT(gbc.pc(), 0x325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0229
        gbc.setState(0xb257, 0x671d, 0x9e20, 0xba6f, 0x30bc, 0xc357, 0x1, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0xb259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb257), 0xcb);
        EXPECT(gbc.readMem(0xb258), 0xda);
        // CB DA 022A
        gbc.setState(0xcf3d, 0x8d8d, 0x8be0, 0x4c35, 0x3e39, 0xb5fc, 0x0, 0x1);
        gbc.writeMem(0xcf3d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8d8d);
        EXPECT(gbc.pc(), 0xcf3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3d), 0xcb);
        EXPECT(gbc.readMem(0xcf3e), 0xda);
        // CB DA 022B
        gbc.setState(0x807c, 0x27be, 0x9aa0, 0xaa9a, 0xdcfb, 0x325e, 0x1, 0x1);
        gbc.writeMem(0x807c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x27be);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807c), 0xcb);
        EXPECT(gbc.readMem(0x807d), 0xda);
        // CB DA 022C
        gbc.setState(0x48f9, 0x400e, 0xdf0, 0x8522, 0xfe42, 0x8fc6, 0x0, 0x1);
        gbc.writeMem(0x48f9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x400e);
        EXPECT(gbc.pc(), 0x48fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 022D
        gbc.setState(0xcb53, 0x3bac, 0x5880, 0xf38a, 0x6b61, 0x28d7, 0x0, 0x1);
        gbc.writeMem(0xcb53, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3bac);
        EXPECT(gbc.pc(), 0xcb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb53), 0xcb);
        EXPECT(gbc.readMem(0xcb54), 0xda);
        // CB DA 022E
        gbc.setState(0x2d50, 0xe408, 0x2850, 0xef2e, 0xf205, 0x1b37, 0x1, 0x0);
        gbc.writeMem(0x2d50, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe408);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0230
        gbc.setState(0x9503, 0xc0fd, 0x28e0, 0x7198, 0xf21, 0xf81a, 0x1, 0x0);
        gbc.writeMem(0x9503, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc0fd);
        EXPECT(gbc.pc(), 0x9505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9503), 0xcb);
        EXPECT(gbc.readMem(0x9504), 0xda);
        // CB DA 0231
        gbc.setState(0xbbdd, 0x38a3, 0x6060, 0xe408, 0x6d79, 0x28e0, 0x0, 0x0);
        gbc.writeMem(0xbbdd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0xbbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdd), 0xcb);
        EXPECT(gbc.readMem(0xbbde), 0xda);
        // CB DA 0232
        gbc.setState(0x2801, 0x8ed9, 0x43d0, 0x702, 0xee4d, 0x6e8f, 0x1, 0x0);
        gbc.writeMem(0x2801, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8ed9);
        EXPECT(gbc.pc(), 0x2803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0233
        gbc.setState(0x1868, 0x7ea0, 0xe3f0, 0x59d3, 0xa9f2, 0x8dbe, 0x0, 0x1);
        gbc.writeMem(0x1868, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7ea0);
        EXPECT(gbc.pc(), 0x186a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0234
        gbc.setState(0x576d, 0xa28c, 0x260, 0x9152, 0x721f, 0x9a84, 0x1, 0x1);
        gbc.writeMem(0x576d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa28c);
        EXPECT(gbc.pc(), 0x576f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0235
        gbc.setState(0xe2f8, 0x6a64, 0x2a00, 0x3241, 0x2e75, 0x265, 0x1, 0x1);
        gbc.writeMem(0xe2f8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6a64);
        EXPECT(gbc.pc(), 0xe2fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f8), 0xcb);
        EXPECT(gbc.readMem(0xe2f9), 0xda);
        // CB DA 0236
        gbc.setState(0xa83, 0x4f5c, 0x4010, 0xf6a4, 0x10ac, 0x1b3a, 0x0, 0x0);
        gbc.writeMem(0xa83, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4f5c);
        EXPECT(gbc.pc(), 0xa85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0237
        gbc.setState(0x9f41, 0xb766, 0x2c90, 0xf5fb, 0xb918, 0x86e, 0x1, 0x1);
        gbc.writeMem(0x9f41, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb766);
        EXPECT(gbc.pc(), 0x9f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f41), 0xcb);
        EXPECT(gbc.readMem(0x9f42), 0xda);
        // CB DA 0238
        gbc.setState(0x4e60, 0xc367, 0x52f0, 0x86da, 0xd2f5, 0x4ab6, 0x0, 0x0);
        gbc.writeMem(0x4e60, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc367);
        EXPECT(gbc.pc(), 0x4e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0239
        gbc.setState(0x6246, 0xc6, 0x6a50, 0xa1c7, 0xa194, 0x7f16, 0x1, 0x1);
        gbc.writeMem(0x6246, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc6);
        EXPECT(gbc.pc(), 0x6248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 023A
        gbc.setState(0xccdc, 0x53a2, 0xb160, 0xc81b, 0x26e, 0x284c, 0x0, 0x0);
        gbc.writeMem(0xccdc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x53a2);
        EXPECT(gbc.pc(), 0xccde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccdc), 0xcb);
        EXPECT(gbc.readMem(0xccdd), 0xda);
        // CB DA 023B
        gbc.setState(0x14b0, 0x3f2, 0xdab0, 0x63ac, 0x5710, 0x7cd6, 0x0, 0x0);
        gbc.writeMem(0x14b0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3f2);
        EXPECT(gbc.pc(), 0x14b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 023C
        gbc.setState(0x6f89, 0xbcdf, 0x14b0, 0x772, 0xb717, 0xb30c, 0x1, 0x1);
        gbc.writeMem(0x6f89, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbcdf);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 023D
        gbc.setState(0xccbb, 0x6e02, 0xcf0, 0xb40a, 0xacbd, 0x763b, 0x1, 0x0);
        gbc.writeMem(0xccbb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6e02);
        EXPECT(gbc.pc(), 0xccbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbb), 0xcb);
        EXPECT(gbc.readMem(0xccbc), 0xda);
        // CB DA 023E
        gbc.setState(0xa15a, 0x62a3, 0xd0f0, 0xd33e, 0x77d5, 0xba17, 0x0, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x62a3);
        EXPECT(gbc.pc(), 0xa15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15a), 0xcb);
        EXPECT(gbc.readMem(0xa15b), 0xda);
        // CB DA 023F
        gbc.setState(0x3089, 0x7337, 0x6d40, 0x7694, 0x6d0f, 0xcf, 0x1, 0x0);
        gbc.writeMem(0x3089, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7337);
        EXPECT(gbc.pc(), 0x308b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0240
        gbc.setState(0x8cc4, 0xec1, 0x1720, 0xacf9, 0x246a, 0x25e, 0x1, 0x0);
        gbc.writeMem(0x8cc4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xec1);
        EXPECT(gbc.pc(), 0x8cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc4), 0xcb);
        EXPECT(gbc.readMem(0x8cc5), 0xda);
        // CB DA 0241
        gbc.setState(0x9e8e, 0x332a, 0xc90, 0x6e89, 0xb405, 0xa157, 0x0, 0x1);
        gbc.writeMem(0x9e8e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x332a);
        EXPECT(gbc.pc(), 0x9e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8e), 0xcb);
        EXPECT(gbc.readMem(0x9e8f), 0xda);
        // CB DA 0242
        gbc.setState(0x6103, 0xfa28, 0x7930, 0xa4c9, 0xb2b3, 0x42d9, 0x1, 0x0);
        gbc.writeMem(0x6103, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfa28);
        EXPECT(gbc.pc(), 0x6105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0243
        gbc.setState(0x57ee, 0x4212, 0xfc50, 0xc0dd, 0xf32b, 0xe663, 0x1, 0x0);
        gbc.writeMem(0x57ee, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4212);
        EXPECT(gbc.pc(), 0x57f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0244
        gbc.setState(0x512, 0x954b, 0xe8a0, 0x8564, 0xc1a7, 0xc991, 0x1, 0x0);
        gbc.writeMem(0x512, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0245
        gbc.setState(0x3702, 0x7101, 0xdd00, 0x35c4, 0x25c4, 0xe715, 0x1, 0x1);
        gbc.writeMem(0x3702, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7101);
        EXPECT(gbc.pc(), 0x3704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0246
        gbc.setState(0x3eb7, 0x43b7, 0xda90, 0x3ac0, 0xcf2b, 0xa978, 0x1, 0x0);
        gbc.writeMem(0x3eb7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x43b7);
        EXPECT(gbc.pc(), 0x3eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0247
        gbc.setState(0xd39, 0x23a4, 0xae60, 0x1e88, 0x91b9, 0xb9bb, 0x0, 0x0);
        gbc.writeMem(0xd39, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x23a4);
        EXPECT(gbc.pc(), 0xd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0248
        gbc.setState(0x45d8, 0x56f1, 0x9200, 0xa1be, 0x655c, 0xa364, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x56f1);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0249
        gbc.setState(0x3684, 0x74a9, 0x7610, 0x2748, 0x8338, 0xfb45, 0x0, 0x0);
        gbc.writeMem(0x3684, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x74a9);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 024A
        gbc.setState(0x8902, 0x1ace, 0x7340, 0xeee, 0xd025, 0x885a, 0x1, 0x0);
        gbc.writeMem(0x8902, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1ace);
        EXPECT(gbc.pc(), 0x8904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8902), 0xcb);
        EXPECT(gbc.readMem(0x8903), 0xda);
        // CB DA 024B
        gbc.setState(0xa581, 0x73b, 0x4770, 0x16c4, 0x4c63, 0x49aa, 0x1, 0x0);
        gbc.writeMem(0xa581, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x73b);
        EXPECT(gbc.pc(), 0xa583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa581), 0xcb);
        EXPECT(gbc.readMem(0xa582), 0xda);
        // CB DA 024C
        gbc.setState(0x8be4, 0x5a97, 0x6380, 0x25ea, 0xd0f9, 0xf5f2, 0x0, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5a97);
        EXPECT(gbc.pc(), 0x8be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be4), 0xcb);
        EXPECT(gbc.readMem(0x8be5), 0xda);
        // CB DA 024D
        gbc.setState(0xa8cd, 0xb3bd, 0x4590, 0xd5a4, 0x71b4, 0xf450, 0x0, 0x1);
        gbc.writeMem(0xa8cd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb3bd);
        EXPECT(gbc.pc(), 0xa8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cd), 0xcb);
        EXPECT(gbc.readMem(0xa8ce), 0xda);
        // CB DA 024E
        gbc.setState(0x28e5, 0x59a8, 0x1400, 0xde31, 0xe8e2, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x59a8);
        EXPECT(gbc.pc(), 0x28e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 024F
        gbc.setState(0x4e5, 0xb0e5, 0xb780, 0x9b2b, 0x2bd6, 0x124e, 0x0, 0x0);
        gbc.writeMem(0x4e5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb0e5);
        EXPECT(gbc.pc(), 0x4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0250
        gbc.setState(0x1d26, 0x1f19, 0xb9b0, 0x9187, 0x5ce0, 0x5eb3, 0x0, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1f19);
        EXPECT(gbc.pc(), 0x1d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0251
        gbc.setState(0x2fe2, 0x2ce6, 0x64a0, 0x3622, 0xce43, 0xe636, 0x1, 0x1);
        gbc.writeMem(0x2fe2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2ce6);
        EXPECT(gbc.pc(), 0x2fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0252
        gbc.setState(0xce3, 0x5d19, 0xdf70, 0xa885, 0xb835, 0x42c7, 0x0, 0x1);
        gbc.writeMem(0xce3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5d19);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0253
        gbc.setState(0xb8c9, 0x1077, 0x11a0, 0x3028, 0x141f, 0x1a16, 0x0, 0x0);
        gbc.writeMem(0xb8c9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0xb8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c9), 0xcb);
        EXPECT(gbc.readMem(0xb8ca), 0xda);
        // CB DA 0254
        gbc.setState(0xda28, 0x7c09, 0x14c0, 0xfd72, 0xb709, 0x1538, 0x1, 0x0);
        gbc.writeMem(0xda28, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7c09);
        EXPECT(gbc.pc(), 0xda2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda28), 0xcb);
        EXPECT(gbc.readMem(0xda29), 0xda);
        // CB DA 0255
        gbc.setState(0xef88, 0x534e, 0x5fa0, 0x6cf0, 0x8baf, 0x386e, 0x1, 0x0);
        gbc.writeMem(0xef88, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x534e);
        EXPECT(gbc.pc(), 0xef8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef88), 0xcb);
        EXPECT(gbc.readMem(0xef89), 0xda);
        // CB DA 0256
        gbc.setState(0x74eb, 0xeee5, 0xcd00, 0xc2df, 0xd6a9, 0x9976, 0x1, 0x0);
        gbc.writeMem(0x74eb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xeee5);
        EXPECT(gbc.pc(), 0x74ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0257
        gbc.setState(0x68ad, 0x7961, 0xa1e0, 0x501c, 0x51e4, 0xf2c9, 0x0, 0x1);
        gbc.writeMem(0x68ad, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7961);
        EXPECT(gbc.pc(), 0x68af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0259
        gbc.setState(0x5b97, 0xf77d, 0xc680, 0x5a8b, 0xcec1, 0x9165, 0x0, 0x0);
        gbc.writeMem(0x5b97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf77d);
        EXPECT(gbc.pc(), 0x5b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 025A
        gbc.setState(0xba17, 0x5d3e, 0xf7b0, 0x860a, 0xc5d2, 0x7823, 0x0, 0x1);
        gbc.writeMem(0xba17, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5d3e);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba17), 0xcb);
        EXPECT(gbc.readMem(0xba18), 0xda);
        // CB DA 025B
        gbc.setState(0xeb89, 0xf475, 0x87f0, 0xb27f, 0xd3e7, 0xc6af, 0x0, 0x1);
        gbc.writeMem(0xeb89, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf475);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0xda);
        // CB DA 025C
        gbc.setState(0x4cd6, 0xa715, 0x630, 0xcdae, 0x15a8, 0xd1c9, 0x1, 0x0);
        gbc.writeMem(0x4cd6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa715);
        EXPECT(gbc.pc(), 0x4cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 025D
        gbc.setState(0xa3a8, 0xa553, 0x3790, 0xfec0, 0xb00c, 0xf33e, 0x0, 0x0);
        gbc.writeMem(0xa3a8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa553);
        EXPECT(gbc.pc(), 0xa3aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a8), 0xcb);
        EXPECT(gbc.readMem(0xa3a9), 0xda);
        // CB DA 025F
        gbc.setState(0x3d1f, 0x52f4, 0xeae0, 0xb030, 0x4236, 0x8538, 0x0, 0x0);
        gbc.writeMem(0x3d1f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x52f4);
        EXPECT(gbc.pc(), 0x3d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0260
        gbc.setState(0x9443, 0x83d6, 0x5e90, 0x9d5f, 0xa795, 0xddc4, 0x1, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x83d6);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xda);
        // CB DA 0261
        gbc.setState(0xdac9, 0x64e0, 0x3500, 0xf2, 0x8206, 0x906a, 0x1, 0x1);
        gbc.writeMem(0xdac9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x64e0);
        EXPECT(gbc.pc(), 0xdacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac9), 0xcb);
        EXPECT(gbc.readMem(0xdaca), 0xda);
        // CB DA 0262
        gbc.setState(0xa5c3, 0x6e89, 0xd4c0, 0x7984, 0xdc48, 0xdfdf, 0x0, 0x1);
        gbc.writeMem(0xa5c3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6e89);
        EXPECT(gbc.pc(), 0xa5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c3), 0xcb);
        EXPECT(gbc.readMem(0xa5c4), 0xda);
        // CB DA 0263
        gbc.setState(0xf38, 0x2f0e, 0x6e30, 0x2a94, 0xbd1c, 0x1ef6, 0x1, 0x0);
        gbc.writeMem(0xf38, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2f0e);
        EXPECT(gbc.pc(), 0xf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0264
        gbc.setState(0x6f59, 0xc350, 0x7320, 0xcb8a, 0x8d7a, 0x49a, 0x0, 0x1);
        gbc.writeMem(0x6f59, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc350);
        EXPECT(gbc.pc(), 0x6f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0265
        gbc.setState(0x214b, 0xf1e, 0x9d40, 0x5a82, 0x871, 0xa438, 0x0, 0x0);
        gbc.writeMem(0x214b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf1e);
        EXPECT(gbc.pc(), 0x214d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0266
        gbc.setState(0x1429, 0xd1b4, 0x4d90, 0x22e5, 0xa226, 0x1bae, 0x0, 0x0);
        gbc.writeMem(0x1429, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd1b4);
        EXPECT(gbc.pc(), 0x142b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0267
        gbc.setState(0x5afd, 0x1e83, 0xe290, 0x1f10, 0x92d4, 0xc587, 0x1, 0x0);
        gbc.writeMem(0x5afd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1e83);
        EXPECT(gbc.pc(), 0x5aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0268
        gbc.setState(0x4cc6, 0x407, 0x4b00, 0x622, 0x1f32, 0x8c15, 0x0, 0x0);
        gbc.writeMem(0x4cc6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x407);
        EXPECT(gbc.pc(), 0x4cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0269
        gbc.setState(0xc481, 0xe309, 0xe580, 0xbfa6, 0x74d1, 0xecf5, 0x0, 0x1);
        gbc.writeMem(0xc481, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe309);
        EXPECT(gbc.pc(), 0xc483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc481), 0xcb);
        EXPECT(gbc.readMem(0xc482), 0xda);
        // CB DA 026A
        gbc.setState(0x53d3, 0x6b41, 0xa080, 0x894a, 0xc7fc, 0x2db3, 0x0, 0x0);
        gbc.writeMem(0x53d3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6b41);
        EXPECT(gbc.pc(), 0x53d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 026B
        gbc.setState(0x4c4d, 0x5025, 0xb490, 0xd69f, 0xa4f5, 0x72ba, 0x0, 0x0);
        gbc.writeMem(0x4c4d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5025);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 026C
        gbc.setState(0x647b, 0xae30, 0xbdd0, 0x7827, 0xedb9, 0x4b41, 0x1, 0x0);
        gbc.writeMem(0x647b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xae30);
        EXPECT(gbc.pc(), 0x647d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 026D
        gbc.setState(0xa91e, 0x521a, 0x2b40, 0x487e, 0x5ea7, 0xb64c, 0x1, 0x1);
        gbc.writeMem(0xa91e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x521a);
        EXPECT(gbc.pc(), 0xa920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91e), 0xcb);
        EXPECT(gbc.readMem(0xa91f), 0xda);
        // CB DA 026E
        gbc.setState(0x6eba, 0xabeb, 0xd030, 0x20b0, 0x3a54, 0xc04a, 0x1, 0x0);
        gbc.writeMem(0x6eba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xabeb);
        EXPECT(gbc.pc(), 0x6ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 026F
        gbc.setState(0x324a, 0x7b1b, 0xb770, 0xc408, 0xcfb7, 0x42db, 0x1, 0x1);
        gbc.writeMem(0x324a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7b1b);
        EXPECT(gbc.pc(), 0x324c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0270
        gbc.setState(0xc4fe, 0x7617, 0x56a0, 0xf4d3, 0xf504, 0xfefa, 0x0, 0x0);
        gbc.writeMem(0xc4fe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7617);
        EXPECT(gbc.pc(), 0xc500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fe), 0xcb);
        EXPECT(gbc.readMem(0xc4ff), 0xda);
        // CB DA 0271
        gbc.setState(0x6462, 0x62e1, 0xe820, 0x2794, 0x1d16, 0xb591, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x62e1);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0272
        gbc.setState(0x3b9c, 0x70e5, 0x820, 0x23fa, 0xffc9, 0xbcda, 0x0, 0x1);
        gbc.writeMem(0x3b9c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x70e5);
        EXPECT(gbc.pc(), 0x3b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0273
        gbc.setState(0xad94, 0xfe6e, 0x7cb0, 0x6ded, 0xda86, 0x4088, 0x1, 0x0);
        gbc.writeMem(0xad94, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfe6e);
        EXPECT(gbc.pc(), 0xad96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad94), 0xcb);
        EXPECT(gbc.readMem(0xad95), 0xda);
        // CB DA 0274
        gbc.setState(0x5216, 0x301c, 0x9a50, 0xa421, 0x6146, 0x3bba, 0x1, 0x1);
        gbc.writeMem(0x5216, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x301c);
        EXPECT(gbc.pc(), 0x5218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0275
        gbc.setState(0xee97, 0x2d32, 0x20a0, 0x4816, 0x2c14, 0xc1f3, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2d32);
        EXPECT(gbc.pc(), 0xee99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee97), 0xcb);
        EXPECT(gbc.readMem(0xee98), 0xda);
        // CB DA 0276
        gbc.setState(0x3094, 0xbebc, 0xffd0, 0xa2ab, 0xed33, 0xa7a1, 0x1, 0x1);
        gbc.writeMem(0x3094, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbebc);
        EXPECT(gbc.pc(), 0x3096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0277
        gbc.setState(0x8536, 0x92e, 0x4a10, 0xfcd9, 0x6134, 0xd4cf, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x92e);
        EXPECT(gbc.pc(), 0x8538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8536), 0xcb);
        EXPECT(gbc.readMem(0x8537), 0xda);
        // CB DA 0278
        gbc.setState(0xdebd, 0xa27, 0xa9f0, 0x5c3c, 0xd0b, 0x78fd, 0x0, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebd), 0xcb);
        EXPECT(gbc.readMem(0xdebe), 0xda);
        // CB DA 0279
        gbc.setState(0x846c, 0xe2d6, 0xb560, 0x69d7, 0x7094, 0x391e, 0x1, 0x0);
        gbc.writeMem(0x846c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe2d6);
        EXPECT(gbc.pc(), 0x846e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846c), 0xcb);
        EXPECT(gbc.readMem(0x846d), 0xda);
        // CB DA 027A
        gbc.setState(0x19aa, 0xf9f5, 0x42f0, 0xb745, 0x3910, 0xbb8d, 0x0, 0x1);
        gbc.writeMem(0x19aa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf9f5);
        EXPECT(gbc.pc(), 0x19ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 027B
        gbc.setState(0x79ea, 0x5f61, 0x1480, 0xd3e, 0x7420, 0xe454, 0x1, 0x1);
        gbc.writeMem(0x79ea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5f61);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 027C
        gbc.setState(0x4e87, 0x463e, 0xad0, 0x6800, 0x872, 0x62a2, 0x0, 0x0);
        gbc.writeMem(0x4e87, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x463e);
        EXPECT(gbc.pc(), 0x4e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 027D
        gbc.setState(0xb75, 0x6d8c, 0x4cf0, 0x8f9c, 0x70f3, 0x877c, 0x1, 0x1);
        gbc.writeMem(0xb75, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6d8c);
        EXPECT(gbc.pc(), 0xb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 027E
        gbc.setState(0x8b62, 0x58af, 0x2d80, 0xc20f, 0xa35d, 0xa58e, 0x0, 0x0);
        gbc.writeMem(0x8b62, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x58af);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b62), 0xcb);
        EXPECT(gbc.readMem(0x8b63), 0xda);
        // CB DA 027F
        gbc.setState(0x56c3, 0x827c, 0x7fd0, 0x6900, 0x597b, 0x228b, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x827c);
        EXPECT(gbc.pc(), 0x56c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0280
        gbc.setState(0xe544, 0x2683, 0x78a0, 0xef07, 0x759c, 0xffec, 0x0, 0x0);
        gbc.writeMem(0xe544, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2683);
        EXPECT(gbc.pc(), 0xe546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe544), 0xcb);
        EXPECT(gbc.readMem(0xe545), 0xda);
        // CB DA 0281
        gbc.setState(0x984e, 0x5d74, 0x90b0, 0x7d61, 0x1d32, 0x1c0d, 0x1, 0x0);
        gbc.writeMem(0x984e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5d74);
        EXPECT(gbc.pc(), 0x9850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984e), 0xcb);
        EXPECT(gbc.readMem(0x984f), 0xda);
        // CB DA 0282
        gbc.setState(0x87fe, 0x23a8, 0x93b0, 0x4b19, 0x7133, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x87fe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x23a8);
        EXPECT(gbc.pc(), 0x8800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fe), 0xcb);
        EXPECT(gbc.readMem(0x87ff), 0xda);
        // CB DA 0283
        gbc.setState(0xde6f, 0xf300, 0xbc0, 0x6294, 0x457c, 0x6257, 0x0, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf300);
        EXPECT(gbc.pc(), 0xde71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde6f), 0xcb);
        EXPECT(gbc.readMem(0xde70), 0xda);
        // CB DA 0284
        gbc.setState(0x4760, 0xa02c, 0xfe20, 0xe306, 0x1b48, 0x2d8c, 0x0, 0x1);
        gbc.writeMem(0x4760, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa02c);
        EXPECT(gbc.pc(), 0x4762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0285
        gbc.setState(0x1759, 0x3e0f, 0xe9f0, 0x9fe5, 0xc34c, 0x2fa8, 0x0, 0x1);
        gbc.writeMem(0x1759, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3e0f);
        EXPECT(gbc.pc(), 0x175b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0286
        gbc.setState(0x1de4, 0x84ca, 0x8440, 0x6c1d, 0x7518, 0xf4e3, 0x1, 0x1);
        gbc.writeMem(0x1de4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x84ca);
        EXPECT(gbc.pc(), 0x1de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0287
        gbc.setState(0x8b84, 0x4ca0, 0xa50, 0x4928, 0x9913, 0x9a8e, 0x1, 0x0);
        gbc.writeMem(0x8b84, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4ca0);
        EXPECT(gbc.pc(), 0x8b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b84), 0xcb);
        EXPECT(gbc.readMem(0x8b85), 0xda);
        // CB DA 0288
        gbc.setState(0xaff1, 0xc82a, 0xcca0, 0xee3e, 0xbd3a, 0x373c, 0x0, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc82a);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0xda);
        // CB DA 0289
        gbc.setState(0xd92d, 0xaca3, 0xe920, 0xc1d8, 0x797f, 0x3ba, 0x0, 0x0);
        gbc.writeMem(0xd92d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xaca3);
        EXPECT(gbc.pc(), 0xd92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92d), 0xcb);
        EXPECT(gbc.readMem(0xd92e), 0xda);
        // CB DA 028A
        gbc.setState(0x6366, 0x6dba, 0x8e60, 0x731c, 0x5b1a, 0x184d, 0x0, 0x0);
        gbc.writeMem(0x6366, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6dba);
        EXPECT(gbc.pc(), 0x6368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 028B
        gbc.setState(0x913b, 0x3c77, 0x4380, 0xba99, 0xdd91, 0x11ac, 0x0, 0x0);
        gbc.writeMem(0x913b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3c77);
        EXPECT(gbc.pc(), 0x913d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913b), 0xcb);
        EXPECT(gbc.readMem(0x913c), 0xda);
        // CB DA 028E
        gbc.setState(0xa27f, 0xac3d, 0xab50, 0x2c2b, 0x17fa, 0xe8f2, 0x1, 0x1);
        gbc.writeMem(0xa27f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xac3d);
        EXPECT(gbc.pc(), 0xa281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa27f), 0xcb);
        EXPECT(gbc.readMem(0xa280), 0xda);
        // CB DA 028F
        gbc.setState(0x5ab7, 0xbd10, 0xb090, 0xbee0, 0xe33a, 0xead6, 0x0, 0x0);
        gbc.writeMem(0x5ab7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbd10);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0290
        gbc.setState(0xe19e, 0xd21a, 0xcf10, 0x1b66, 0xd402, 0x5248, 0x1, 0x0);
        gbc.writeMem(0xe19e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd21a);
        EXPECT(gbc.pc(), 0xe1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19e), 0xcb);
        EXPECT(gbc.readMem(0xe19f), 0xda);
        // CB DA 0291
        gbc.setState(0x2899, 0x2b9a, 0xac0, 0xce9c, 0x5470, 0xd923, 0x1, 0x0);
        gbc.writeMem(0x2899, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2b9a);
        EXPECT(gbc.pc(), 0x289b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0292
        gbc.setState(0x1f32, 0x1e4f, 0x2fa0, 0x5556, 0x2d7f, 0x7708, 0x0, 0x1);
        gbc.writeMem(0x1f32, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1e4f);
        EXPECT(gbc.pc(), 0x1f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0294
        gbc.setState(0x632, 0x9238, 0x49e0, 0x5b28, 0xb10d, 0xa103, 0x1, 0x0);
        gbc.writeMem(0x632, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0295
        gbc.setState(0x5a8e, 0x61e5, 0xc6d0, 0xd5bd, 0x9eed, 0x4e44, 0x0, 0x1);
        gbc.writeMem(0x5a8e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x61e5);
        EXPECT(gbc.pc(), 0x5a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0296
        gbc.setState(0x3830, 0x4b94, 0xf6b0, 0x9aa, 0x8fca, 0x1dcc, 0x1, 0x0);
        gbc.writeMem(0x3830, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4b94);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0297
        gbc.setState(0x5d57, 0x179b, 0xd10, 0x399, 0x506, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x5d57, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x179b);
        EXPECT(gbc.pc(), 0x5d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0298
        gbc.setState(0x3823, 0x5d51, 0x9e90, 0x4df3, 0x7522, 0x5d7f, 0x0, 0x0);
        gbc.writeMem(0x3823, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5d51);
        EXPECT(gbc.pc(), 0x3825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0299
        gbc.setState(0xe22c, 0x858e, 0x1e40, 0x6713, 0xe15d, 0x9ee6, 0x1, 0x1);
        gbc.writeMem(0xe22c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x858e);
        EXPECT(gbc.pc(), 0xe22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe22c), 0xcb);
        EXPECT(gbc.readMem(0xe22d), 0xda);
        // CB DA 029A
        gbc.setState(0x26e5, 0x3cae, 0x9d00, 0x6579, 0x5333, 0x3b13, 0x1, 0x0);
        gbc.writeMem(0x26e5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3cae);
        EXPECT(gbc.pc(), 0x26e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 029B
        gbc.setState(0x5db8, 0xde1, 0x5920, 0x4541, 0x8554, 0xc261, 0x1, 0x0);
        gbc.writeMem(0x5db8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x5dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 029C
        gbc.setState(0x6d27, 0x4369, 0x5b10, 0xc33c, 0x7856, 0x3fc, 0x1, 0x1);
        gbc.writeMem(0x6d27, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4369);
        EXPECT(gbc.pc(), 0x6d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 029D
        gbc.setState(0x7538, 0xa59d, 0xcd0, 0xb35a, 0xb472, 0x39c2, 0x1, 0x1);
        gbc.writeMem(0x7538, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa59d);
        EXPECT(gbc.pc(), 0x753a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 029E
        gbc.setState(0x6702, 0x1b1c, 0x2cc0, 0xc190, 0x8991, 0xc23b, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1b1c);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 029F
        gbc.setState(0xee7a, 0xb8cf, 0xe700, 0xceaa, 0xb039, 0xba7, 0x1, 0x1);
        gbc.writeMem(0xee7a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb8cf);
        EXPECT(gbc.pc(), 0xee7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee7a), 0xcb);
        EXPECT(gbc.readMem(0xee7b), 0xda);
        // CB DA 02A0
        gbc.setState(0x2276, 0x729d, 0x7120, 0xa86, 0x9bbe, 0xba1a, 0x1, 0x0);
        gbc.writeMem(0x2276, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x729d);
        EXPECT(gbc.pc(), 0x2278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02A1
        gbc.setState(0xae7e, 0x35dc, 0x3180, 0x47dd, 0xf36b, 0xf07b, 0x0, 0x1);
        gbc.writeMem(0xae7e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x35dc);
        EXPECT(gbc.pc(), 0xae80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae7e), 0xcb);
        EXPECT(gbc.readMem(0xae7f), 0xda);
        // CB DA 02A2
        gbc.setState(0x4112, 0x2d36, 0x7b20, 0xd3ee, 0xa2d7, 0xecab, 0x1, 0x1);
        gbc.writeMem(0x4112, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2d36);
        EXPECT(gbc.pc(), 0x4114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02A3
        gbc.setState(0x1c6c, 0xf717, 0x6660, 0x95b9, 0x50db, 0x1587, 0x0, 0x0);
        gbc.writeMem(0x1c6c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf717);
        EXPECT(gbc.pc(), 0x1c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02A4
        gbc.setState(0x730c, 0x3089, 0xd4d0, 0xf9ec, 0xd897, 0xae01, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3089);
        EXPECT(gbc.pc(), 0x730e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02A5
        gbc.setState(0x54c8, 0x7a95, 0xd800, 0xa508, 0x65a1, 0x2fdb, 0x0, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7a95);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02A6
        gbc.setState(0x45a9, 0x4776, 0x3b80, 0x4d22, 0x54c1, 0x9f55, 0x1, 0x0);
        gbc.writeMem(0x45a9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4776);
        EXPECT(gbc.pc(), 0x45ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02A7
        gbc.setState(0xe47e, 0xecae, 0x2370, 0xbbfe, 0xb41e, 0x12e1, 0x0, 0x1);
        gbc.writeMem(0xe47e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xecae);
        EXPECT(gbc.pc(), 0xe480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47e), 0xcb);
        EXPECT(gbc.readMem(0xe47f), 0xda);
        // CB DA 02A8
        gbc.setState(0x6b65, 0x5e24, 0xf370, 0x428b, 0xd60, 0x674a, 0x0, 0x0);
        gbc.writeMem(0x6b65, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5e24);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02A9
        gbc.setState(0xaa31, 0x9c29, 0xe570, 0xb112, 0x2889, 0xdf86, 0x1, 0x1);
        gbc.writeMem(0xaa31, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9c29);
        EXPECT(gbc.pc(), 0xaa33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa31), 0xcb);
        EXPECT(gbc.readMem(0xaa32), 0xda);
        // CB DA 02AA
        gbc.setState(0xd3c0, 0x5925, 0x73c0, 0xecee, 0xc3ba, 0x83fd, 0x1, 0x0);
        gbc.writeMem(0xd3c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0xd3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c0), 0xcb);
        EXPECT(gbc.readMem(0xd3c1), 0xda);
        // CB DA 02AB
        gbc.setState(0xe25a, 0x1640, 0x57f0, 0x602c, 0xcdd3, 0xd248, 0x0, 0x1);
        gbc.writeMem(0xe25a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1640);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25a), 0xcb);
        EXPECT(gbc.readMem(0xe25b), 0xda);
        // CB DA 02AC
        gbc.setState(0xa713, 0x99de, 0x4da0, 0xd657, 0x2f12, 0x316e, 0x1, 0x0);
        gbc.writeMem(0xa713, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x99de);
        EXPECT(gbc.pc(), 0xa715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa713), 0xcb);
        EXPECT(gbc.readMem(0xa714), 0xda);
        // CB DA 02AD
        gbc.setState(0x819b, 0x47bd, 0x9760, 0x3929, 0x19a5, 0x7058, 0x0, 0x1);
        gbc.writeMem(0x819b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x47bd);
        EXPECT(gbc.pc(), 0x819d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819b), 0xcb);
        EXPECT(gbc.readMem(0x819c), 0xda);
        // CB DA 02AE
        gbc.setState(0x7cc9, 0x9ccd, 0xcd90, 0xfc8f, 0xe9df, 0x84a8, 0x0, 0x0);
        gbc.writeMem(0x7cc9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9ccd);
        EXPECT(gbc.pc(), 0x7ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02AF
        gbc.setState(0x6d1c, 0xcf09, 0x11a0, 0x1fd2, 0x256d, 0x33b9, 0x0, 0x0);
        gbc.writeMem(0x6d1c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcf09);
        EXPECT(gbc.pc(), 0x6d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02B0
        gbc.setState(0x2101, 0xb753, 0xa730, 0xc867, 0xc834, 0x652e, 0x0, 0x0);
        gbc.writeMem(0x2101, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb753);
        EXPECT(gbc.pc(), 0x2103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B1
        gbc.setState(0x5b94, 0xc218, 0xc4b0, 0xf62d, 0xd5e, 0x643, 0x0, 0x1);
        gbc.writeMem(0x5b94, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc218);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B2
        gbc.setState(0x23ca, 0xa66d, 0x4b30, 0x6d67, 0x14e0, 0xebfa, 0x0, 0x1);
        gbc.writeMem(0x23ca, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa66d);
        EXPECT(gbc.pc(), 0x23cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B3
        gbc.setState(0x3138, 0x8cc3, 0x3090, 0x9956, 0xc424, 0x7abd, 0x1, 0x0);
        gbc.writeMem(0x3138, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8cc3);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B4
        gbc.setState(0x66b7, 0xf8aa, 0xe170, 0x9e5, 0x8944, 0xbbe1, 0x1, 0x1);
        gbc.writeMem(0x66b7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf8aa);
        EXPECT(gbc.pc(), 0x66b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B5
        gbc.setState(0x8f8f, 0xc83b, 0x2760, 0x958c, 0x5f6d, 0xe802, 0x0, 0x1);
        gbc.writeMem(0x8f8f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc83b);
        EXPECT(gbc.pc(), 0x8f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8f), 0xcb);
        EXPECT(gbc.readMem(0x8f90), 0xda);
        // CB DA 02B6
        gbc.setState(0x8f35, 0xb00f, 0xe7c0, 0x4472, 0x9fc6, 0x29f9, 0x1, 0x0);
        gbc.writeMem(0x8f35, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb00f);
        EXPECT(gbc.pc(), 0x8f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f35), 0xcb);
        EXPECT(gbc.readMem(0x8f36), 0xda);
        // CB DA 02B7
        gbc.setState(0x821f, 0x53d, 0x160, 0x8b02, 0x151c, 0xdf6b, 0x0, 0x0);
        gbc.writeMem(0x821f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53d);
        EXPECT(gbc.pc(), 0x8221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821f), 0xcb);
        EXPECT(gbc.readMem(0x8220), 0xda);
        // CB DA 02B8
        gbc.setState(0x572d, 0xff9a, 0xf970, 0x6de6, 0xa521, 0x282d, 0x1, 0x0);
        gbc.writeMem(0x572d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xff9a);
        EXPECT(gbc.pc(), 0x572f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02B9
        gbc.setState(0x61c8, 0xa50b, 0x70, 0x8b5d, 0x3ca6, 0x5890, 0x1, 0x0);
        gbc.writeMem(0x61c8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa50b);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02BA
        gbc.setState(0xe79c, 0x1673, 0x9e10, 0x6ad0, 0x9c25, 0x3a44, 0x1, 0x1);
        gbc.writeMem(0xe79c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1673);
        EXPECT(gbc.pc(), 0xe79e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79c), 0xcb);
        EXPECT(gbc.readMem(0xe79d), 0xda);
        // CB DA 02BB
        gbc.setState(0xe625, 0xcf49, 0x8340, 0x42bc, 0x6acf, 0xfdb6, 0x1, 0x0);
        gbc.writeMem(0xe625, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcf49);
        EXPECT(gbc.pc(), 0xe627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe625), 0xcb);
        EXPECT(gbc.readMem(0xe626), 0xda);
        // CB DA 02BC
        gbc.setState(0xab00, 0xb5f0, 0x4a0, 0x6b6f, 0xc88e, 0xa1b3, 0x0, 0x1);
        gbc.writeMem(0xab00, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb5f0);
        EXPECT(gbc.pc(), 0xab02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab00), 0xcb);
        EXPECT(gbc.readMem(0xab01), 0xda);
        // CB DA 02BD
        gbc.setState(0xca8b, 0x7083, 0xfdd0, 0x2726, 0x8751, 0x604d, 0x1, 0x0);
        gbc.writeMem(0xca8b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7083);
        EXPECT(gbc.pc(), 0xca8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8b), 0xcb);
        EXPECT(gbc.readMem(0xca8c), 0xda);
        // CB DA 02BE
        gbc.setState(0xe08b, 0xc835, 0x3e50, 0xf19, 0x1dba, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0xe08b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc835);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08b), 0xcb);
        EXPECT(gbc.readMem(0xe08c), 0xda);
        // CB DA 02BF
        gbc.setState(0x8b01, 0x8c49, 0x5610, 0x75bf, 0xc601, 0x41a8, 0x1, 0x0);
        gbc.writeMem(0x8b01, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x8b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b01), 0xcb);
        EXPECT(gbc.readMem(0x8b02), 0xda);
        // CB DA 02C0
        gbc.setState(0x253, 0xad3, 0xf040, 0xff07, 0x9bf7, 0xe70c, 0x1, 0x1);
        gbc.writeMem(0x253, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xad3);
        EXPECT(gbc.pc(), 0x255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02C1
        gbc.setState(0xd355, 0xaca0, 0xb020, 0x4106, 0x124a, 0x92b, 0x1, 0x0);
        gbc.writeMem(0xd355, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaca0);
        EXPECT(gbc.pc(), 0xd357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd355), 0xcb);
        EXPECT(gbc.readMem(0xd356), 0xda);
        // CB DA 02C2
        gbc.setState(0x7424, 0xfc3a, 0xdd30, 0x2f0d, 0x469f, 0xbe49, 0x1, 0x1);
        gbc.writeMem(0x7424, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfc3a);
        EXPECT(gbc.pc(), 0x7426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02C3
        gbc.setState(0xd948, 0x2dd6, 0x3bd0, 0x5a0a, 0x8a71, 0xbbe, 0x0, 0x1);
        gbc.writeMem(0xd948, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2dd6);
        EXPECT(gbc.pc(), 0xd94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd948), 0xcb);
        EXPECT(gbc.readMem(0xd949), 0xda);
        // CB DA 02C5
        gbc.setState(0x9d93, 0xac86, 0x4f90, 0x9438, 0x17c2, 0xac74, 0x0, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xac86);
        EXPECT(gbc.pc(), 0x9d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d93), 0xcb);
        EXPECT(gbc.readMem(0x9d94), 0xda);
        // CB DA 02C6
        gbc.setState(0x1a93, 0xa1e6, 0xff50, 0x610c, 0x9cd3, 0x1206, 0x1, 0x0);
        gbc.writeMem(0x1a93, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa1e6);
        EXPECT(gbc.pc(), 0x1a95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02C7
        gbc.setState(0xa6df, 0xb4f8, 0x2f00, 0x4616, 0xec95, 0x7e33, 0x0, 0x0);
        gbc.writeMem(0xa6df, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0xa6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6df), 0xcb);
        EXPECT(gbc.readMem(0xa6e0), 0xda);
        // CB DA 02C8
        gbc.setState(0x124d, 0x353f, 0xddc0, 0xfdae, 0x4886, 0x6ca, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x353f);
        EXPECT(gbc.pc(), 0x124f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02C9
        gbc.setState(0x6236, 0x599, 0x74e0, 0x70fd, 0x5d22, 0x2f14, 0x1, 0x1);
        gbc.writeMem(0x6236, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x599);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02CA
        gbc.setState(0xdd69, 0xa9c2, 0x3080, 0x7147, 0xe316, 0xd475, 0x1, 0x1);
        gbc.writeMem(0xdd69, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa9c2);
        EXPECT(gbc.pc(), 0xdd6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd69), 0xcb);
        EXPECT(gbc.readMem(0xdd6a), 0xda);
        // CB DA 02CB
        gbc.setState(0x12ba, 0x112e, 0x5910, 0x256f, 0xc53, 0x6b25, 0x0, 0x1);
        gbc.writeMem(0x12ba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x112e);
        EXPECT(gbc.pc(), 0x12bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02CC
        gbc.setState(0xc61c, 0x58ed, 0x3db0, 0xc3fe, 0x9ecc, 0xb03e, 0x1, 0x0);
        gbc.writeMem(0xc61c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x58ed);
        EXPECT(gbc.pc(), 0xc61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61c), 0xcb);
        EXPECT(gbc.readMem(0xc61d), 0xda);
        // CB DA 02CD
        gbc.setState(0x8fc4, 0xc725, 0x90e0, 0x376b, 0xa839, 0x6be9, 0x0, 0x1);
        gbc.writeMem(0x8fc4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc725);
        EXPECT(gbc.pc(), 0x8fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc4), 0xcb);
        EXPECT(gbc.readMem(0x8fc5), 0xda);
        // CB DA 02CE
        gbc.setState(0xe99a, 0x8ce9, 0x89d0, 0x3a99, 0xecee, 0x209b, 0x1, 0x0);
        gbc.writeMem(0xe99a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8ce9);
        EXPECT(gbc.pc(), 0xe99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe99a), 0xcb);
        EXPECT(gbc.readMem(0xe99b), 0xda);
        // CB DA 02CF
        gbc.setState(0x4630, 0x4459, 0x6280, 0xf2d8, 0xcaa6, 0x7f88, 0x0, 0x0);
        gbc.writeMem(0x4630, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4459);
        EXPECT(gbc.pc(), 0x4632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02D0
        gbc.setState(0xaaee, 0x74f8, 0x2b30, 0xabbd, 0x9126, 0x22d1, 0x0, 0x0);
        gbc.writeMem(0xaaee, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x74f8);
        EXPECT(gbc.pc(), 0xaaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaee), 0xcb);
        EXPECT(gbc.readMem(0xaaef), 0xda);
        // CB DA 02D1
        gbc.setState(0xa8c4, 0xf5fc, 0x8470, 0x55a4, 0x9e, 0x8a74, 0x1, 0x1);
        gbc.writeMem(0xa8c4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf5fc);
        EXPECT(gbc.pc(), 0xa8c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c4), 0xcb);
        EXPECT(gbc.readMem(0xa8c5), 0xda);
        // CB DA 02D2
        gbc.setState(0xd44a, 0xe1e5, 0xec70, 0x5b97, 0x99, 0x888e, 0x0, 0x1);
        gbc.writeMem(0xd44a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe1e5);
        EXPECT(gbc.pc(), 0xd44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd44a), 0xcb);
        EXPECT(gbc.readMem(0xd44b), 0xda);
        // CB DA 02D3
        gbc.setState(0xbc1c, 0x22b0, 0xf400, 0xecc4, 0x7526, 0xe5c4, 0x1, 0x0);
        gbc.writeMem(0xbc1c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x22b0);
        EXPECT(gbc.pc(), 0xbc1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1c), 0xcb);
        EXPECT(gbc.readMem(0xbc1d), 0xda);
        // CB DA 02D5
        gbc.setState(0xa587, 0x194b, 0x9630, 0xacd, 0xf513, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0xa587, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x194b);
        EXPECT(gbc.pc(), 0xa589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa587), 0xcb);
        EXPECT(gbc.readMem(0xa588), 0xda);
        // CB DA 02D6
        gbc.setState(0x8216, 0x5e3e, 0xf40, 0x859d, 0xebad, 0xdf9b, 0x0, 0x0);
        gbc.writeMem(0x8216, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0x8218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8216), 0xcb);
        EXPECT(gbc.readMem(0x8217), 0xda);
        // CB DA 02D7
        gbc.setState(0x60f3, 0xeeed, 0x3160, 0x3acb, 0x578d, 0xa284, 0x1, 0x0);
        gbc.writeMem(0x60f3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xeeed);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02D8
        gbc.setState(0x75db, 0xc632, 0x5ae0, 0x8318, 0x41a2, 0xea18, 0x0, 0x1);
        gbc.writeMem(0x75db, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc632);
        EXPECT(gbc.pc(), 0x75dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02D9
        gbc.setState(0xe3ef, 0x86c1, 0x8c70, 0x4e49, 0x6fd5, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xe3ef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x86c1);
        EXPECT(gbc.pc(), 0xe3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ef), 0xcb);
        EXPECT(gbc.readMem(0xe3f0), 0xda);
        // CB DA 02DB
        gbc.setState(0x9a5, 0x9c35, 0xa660, 0x583f, 0x96bd, 0xe890, 0x0, 0x0);
        gbc.writeMem(0x9a5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9c35);
        EXPECT(gbc.pc(), 0x9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02DC
        gbc.setState(0x3511, 0x32b2, 0xd0d0, 0xef06, 0x15db, 0x8253, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x32b2);
        EXPECT(gbc.pc(), 0x3513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02DD
        gbc.setState(0xc738, 0x79a3, 0x3680, 0x9469, 0x5d1e, 0xec51, 0x0, 0x1);
        gbc.writeMem(0xc738, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x79a3);
        EXPECT(gbc.pc(), 0xc73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc738), 0xcb);
        EXPECT(gbc.readMem(0xc739), 0xda);
        // CB DA 02DE
        gbc.setState(0xbc2c, 0xae7f, 0x8090, 0x572, 0x23f3, 0xf287, 0x1, 0x1);
        gbc.writeMem(0xbc2c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xae7f);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2c), 0xcb);
        EXPECT(gbc.readMem(0xbc2d), 0xda);
        // CB DA 02DF
        gbc.setState(0xa57, 0x8376, 0xa850, 0xc1a1, 0xab9c, 0x5fea, 0x0, 0x0);
        gbc.writeMem(0xa57, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8376);
        EXPECT(gbc.pc(), 0xa59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02E0
        gbc.setState(0x3e02, 0xe602, 0xe2e0, 0x9c40, 0x5b05, 0xb9c9, 0x0, 0x0);
        gbc.writeMem(0x3e02, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe602);
        EXPECT(gbc.pc(), 0x3e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02E1
        gbc.setState(0x818f, 0x59df, 0xb8c0, 0x4704, 0x6411, 0xf8f9, 0x1, 0x1);
        gbc.writeMem(0x818f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x59df);
        EXPECT(gbc.pc(), 0x8191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818f), 0xcb);
        EXPECT(gbc.readMem(0x8190), 0xda);
        // CB DA 02E2
        gbc.setState(0xadf0, 0xd328, 0x4a60, 0x544e, 0x23d5, 0x6a8c, 0x0, 0x0);
        gbc.writeMem(0xadf0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd328);
        EXPECT(gbc.pc(), 0xadf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf0), 0xcb);
        EXPECT(gbc.readMem(0xadf1), 0xda);
        // CB DA 02E3
        gbc.setState(0xacf2, 0x2fbe, 0x4480, 0x6096, 0x21fd, 0x7bc3, 0x0, 0x1);
        gbc.writeMem(0xacf2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2fbe);
        EXPECT(gbc.pc(), 0xacf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf2), 0xcb);
        EXPECT(gbc.readMem(0xacf3), 0xda);
        // CB DA 02E4
        gbc.setState(0x464c, 0xe467, 0xef20, 0x3f3e, 0x9844, 0x8cfd, 0x1, 0x1);
        gbc.writeMem(0x464c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe467);
        EXPECT(gbc.pc(), 0x464e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02E5
        gbc.setState(0x12a, 0x4710, 0x1b60, 0xc926, 0x3df4, 0x8a0c, 0x0, 0x1);
        gbc.writeMem(0x12a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4710);
        EXPECT(gbc.pc(), 0x12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02E6
        gbc.setState(0x938b, 0xdb3f, 0x84e0, 0xe862, 0xbff6, 0x473e, 0x1, 0x1);
        gbc.writeMem(0x938b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdb3f);
        EXPECT(gbc.pc(), 0x938d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938b), 0xcb);
        EXPECT(gbc.readMem(0x938c), 0xda);
        // CB DA 02E7
        gbc.setState(0xa40a, 0xd3dd, 0xcd0, 0x5d97, 0x7a7d, 0xdce4, 0x1, 0x0);
        gbc.writeMem(0xa40a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd3dd);
        EXPECT(gbc.pc(), 0xa40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40a), 0xcb);
        EXPECT(gbc.readMem(0xa40b), 0xda);
        // CB DA 02E8
        gbc.setState(0x4aba, 0x2bb2, 0xbfe0, 0x30ab, 0x7fe4, 0x99c6, 0x1, 0x1);
        gbc.writeMem(0x4aba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2bb2);
        EXPECT(gbc.pc(), 0x4abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02E9
        gbc.setState(0xcb0f, 0xbe41, 0x69f0, 0x5a29, 0x65f9, 0xe0b6, 0x0, 0x1);
        gbc.writeMem(0xcb0f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0xcb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0f), 0xcb);
        EXPECT(gbc.readMem(0xcb10), 0xda);
        // CB DA 02EA
        gbc.setState(0x556, 0xfe7, 0x2c70, 0x9111, 0x1641, 0x3375, 0x0, 0x0);
        gbc.writeMem(0x556, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfe7);
        EXPECT(gbc.pc(), 0x558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02EB
        gbc.setState(0x2d73, 0x7e6b, 0xcc30, 0xbe6a, 0xccca, 0xf018, 0x1, 0x1);
        gbc.writeMem(0x2d73, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7e6b);
        EXPECT(gbc.pc(), 0x2d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02EC
        gbc.setState(0xb16e, 0xc175, 0x9f50, 0x7543, 0x8901, 0xed4, 0x1, 0x0);
        gbc.writeMem(0xb16e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc175);
        EXPECT(gbc.pc(), 0xb170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16e), 0xcb);
        EXPECT(gbc.readMem(0xb16f), 0xda);
        // CB DA 02ED
        gbc.setState(0x7e4b, 0x761, 0xd090, 0xa4fc, 0x91a4, 0x7f8e, 0x1, 0x1);
        gbc.writeMem(0x7e4b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x761);
        EXPECT(gbc.pc(), 0x7e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02EE
        gbc.setState(0x2185, 0x32d5, 0x5c60, 0xad45, 0xfa7e, 0x5405, 0x0, 0x1);
        gbc.writeMem(0x2185, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x32d5);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02EF
        gbc.setState(0xc2c6, 0xb18f, 0x3170, 0x5510, 0xf908, 0xbb24, 0x0, 0x1);
        gbc.writeMem(0xc2c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb18f);
        EXPECT(gbc.pc(), 0xc2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c6), 0xcb);
        EXPECT(gbc.readMem(0xc2c7), 0xda);
        // CB DA 02F0
        gbc.setState(0x2762, 0x2cfb, 0x27f0, 0x3197, 0x1e6c, 0x6d2c, 0x0, 0x1);
        gbc.writeMem(0x2762, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2cfb);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02F2
        gbc.setState(0xcf16, 0xa815, 0x810, 0x65a1, 0x6590, 0xe2cf, 0x0, 0x1);
        gbc.writeMem(0xcf16, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0xcf18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf16), 0xcb);
        EXPECT(gbc.readMem(0xcf17), 0xda);
        // CB DA 02F3
        gbc.setState(0x806c, 0x3510, 0xcec0, 0x9792, 0x6312, 0xfb44, 0x1, 0x0);
        gbc.writeMem(0x806c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3510);
        EXPECT(gbc.pc(), 0x806e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806c), 0xcb);
        EXPECT(gbc.readMem(0x806d), 0xda);
        // CB DA 02F4
        gbc.setState(0x17a5, 0xde49, 0x860, 0xca99, 0xf1e5, 0x1f5b, 0x0, 0x1);
        gbc.writeMem(0x17a5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xde49);
        EXPECT(gbc.pc(), 0x17a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02F5
        gbc.setState(0x12a8, 0xbf12, 0x2240, 0x1183, 0x4bba, 0xf619, 0x1, 0x0);
        gbc.writeMem(0x12a8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbf12);
        EXPECT(gbc.pc(), 0x12aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02F6
        gbc.setState(0xa157, 0xb341, 0xd2a0, 0x3d7e, 0xa32d, 0x887d, 0x0, 0x0);
        gbc.writeMem(0xa157, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb341);
        EXPECT(gbc.pc(), 0xa159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa157), 0xcb);
        EXPECT(gbc.readMem(0xa158), 0xda);
        // CB DA 02F7
        gbc.setState(0xd351, 0x1c78, 0x2da0, 0xaed, 0x64, 0xdf51, 0x0, 0x0);
        gbc.writeMem(0xd351, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1c78);
        EXPECT(gbc.pc(), 0xd353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd351), 0xcb);
        EXPECT(gbc.readMem(0xd352), 0xda);
        // CB DA 02F8
        gbc.setState(0x4737, 0x9938, 0xb810, 0xd2ee, 0x7277, 0x9e1b, 0x0, 0x1);
        gbc.writeMem(0x4737, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9938);
        EXPECT(gbc.pc(), 0x4739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02F9
        gbc.setState(0x4f7c, 0xb987, 0x56c0, 0x5cd4, 0xeac3, 0x13e9, 0x1, 0x1);
        gbc.writeMem(0x4f7c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb987);
        EXPECT(gbc.pc(), 0x4f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 02FA
        gbc.setState(0x1a1, 0x81bb, 0xed0, 0x518d, 0x78da, 0x9222, 0x1, 0x1);
        gbc.writeMem(0x1a1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x81bb);
        EXPECT(gbc.pc(), 0x1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02FB
        gbc.setState(0x767d, 0xa192, 0xe630, 0xcf15, 0x8605, 0x4904, 0x0, 0x1);
        gbc.writeMem(0x767d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa192);
        EXPECT(gbc.pc(), 0x767f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02FC
        gbc.setState(0x2be1, 0x7f97, 0xc930, 0xc5b0, 0xbebb, 0x7527, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7f97);
        EXPECT(gbc.pc(), 0x2be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 02FD
        gbc.setState(0xc81e, 0xc14e, 0x8380, 0xb898, 0x3322, 0xe6b8, 0x0, 0x0);
        gbc.writeMem(0xc81e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc14e);
        EXPECT(gbc.pc(), 0xc820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc81e), 0xcb);
        EXPECT(gbc.readMem(0xc81f), 0xda);
        // CB DA 02FE
        gbc.setState(0xda1a, 0x2875, 0x7520, 0x95c, 0xcd03, 0x6c62, 0x1, 0x0);
        gbc.writeMem(0xda1a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0xda1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1a), 0xcb);
        EXPECT(gbc.readMem(0xda1b), 0xda);
        // CB DA 02FF
        gbc.setState(0xeab7, 0xb326, 0x3f0, 0xce7e, 0xbdba, 0x103e, 0x1, 0x0);
        gbc.writeMem(0xeab7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb326);
        EXPECT(gbc.pc(), 0xeab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab7), 0xcb);
        EXPECT(gbc.readMem(0xeab8), 0xda);
        // CB DA 0300
        gbc.setState(0xa0c1, 0x9ac3, 0x3280, 0xeaf2, 0x56ab, 0x2764, 0x0, 0x0);
        gbc.writeMem(0xa0c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9ac3);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c1), 0xcb);
        EXPECT(gbc.readMem(0xa0c2), 0xda);
        // CB DA 0301
        gbc.setState(0x344a, 0xad39, 0x9be0, 0x9a9, 0xa464, 0x5f31, 0x0, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xad39);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0302
        gbc.setState(0x9ce1, 0xc42, 0xbda0, 0x961f, 0xab39, 0xbd63, 0x1, 0x1);
        gbc.writeMem(0x9ce1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc42);
        EXPECT(gbc.pc(), 0x9ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce1), 0xcb);
        EXPECT(gbc.readMem(0x9ce2), 0xda);
        // CB DA 0303
        gbc.setState(0xa8b7, 0x3e93, 0x2700, 0xe291, 0xc86f, 0xc8c7, 0x0, 0x1);
        gbc.writeMem(0xa8b7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3e93);
        EXPECT(gbc.pc(), 0xa8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b7), 0xcb);
        EXPECT(gbc.readMem(0xa8b8), 0xda);
        // CB DA 0304
        gbc.setState(0x10aa, 0xb27, 0x3750, 0x845b, 0xa714, 0x96d0, 0x0, 0x1);
        gbc.writeMem(0x10aa, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb27);
        EXPECT(gbc.pc(), 0x10ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0305
        gbc.setState(0xb0ea, 0x21cc, 0x99a0, 0xbfa9, 0x4060, 0xa7c8, 0x1, 0x0);
        gbc.writeMem(0xb0ea, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x21cc);
        EXPECT(gbc.pc(), 0xb0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ea), 0xcb);
        EXPECT(gbc.readMem(0xb0eb), 0xda);
        // CB DA 0306
        gbc.setState(0x169e, 0xe16e, 0xd100, 0x1971, 0xf5bc, 0x5972, 0x1, 0x1);
        gbc.writeMem(0x169e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe16e);
        EXPECT(gbc.pc(), 0x16a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0309
        gbc.setState(0x8fc, 0x4af0, 0xd040, 0x947c, 0xd184, 0x33d6, 0x1, 0x0);
        gbc.writeMem(0x8fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4af0);
        EXPECT(gbc.pc(), 0x8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 030B
        gbc.setState(0xc590, 0xed6e, 0x2be0, 0x85ab, 0x12a8, 0x7f18, 0x1, 0x0);
        gbc.writeMem(0xc590, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xed6e);
        EXPECT(gbc.pc(), 0xc592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc590), 0xcb);
        EXPECT(gbc.readMem(0xc591), 0xda);
        // CB DA 030C
        gbc.setState(0x7199, 0xb4bc, 0xe420, 0xe393, 0x3f33, 0xe0e, 0x1, 0x0);
        gbc.writeMem(0x7199, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb4bc);
        EXPECT(gbc.pc(), 0x719b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 030D
        gbc.setState(0xcbb4, 0x38db, 0x8610, 0x250a, 0x95cf, 0x5c08, 0x0, 0x0);
        gbc.writeMem(0xcbb4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x38db);
        EXPECT(gbc.pc(), 0xcbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb4), 0xcb);
        EXPECT(gbc.readMem(0xcbb5), 0xda);
        // CB DA 030E
        gbc.setState(0xd578, 0xc9f1, 0x7f50, 0x1fca, 0x869b, 0xcbb4, 0x0, 0x0);
        gbc.writeMem(0xd578, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc9f1);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd578), 0xcb);
        EXPECT(gbc.readMem(0xd579), 0xda);
        // CB DA 030F
        gbc.setState(0x1ceb, 0x1cc6, 0xc580, 0x35e4, 0x428c, 0x2c2, 0x0, 0x0);
        gbc.writeMem(0x1ceb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1cc6);
        EXPECT(gbc.pc(), 0x1ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0310
        gbc.setState(0x70f2, 0x510e, 0xd1e0, 0x87be, 0xa1f6, 0xe2a3, 0x0, 0x1);
        gbc.writeMem(0x70f2, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x510e);
        EXPECT(gbc.pc(), 0x70f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0311
        gbc.setState(0xd357, 0xdbcc, 0x1350, 0xa374, 0x93db, 0xfc39, 0x0, 0x0);
        gbc.writeMem(0xd357, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdbcc);
        EXPECT(gbc.pc(), 0xd359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd357), 0xcb);
        EXPECT(gbc.readMem(0xd358), 0xda);
        // CB DA 0312
        gbc.setState(0x78e0, 0x13c, 0xcad0, 0x49cc, 0x8686, 0xe360, 0x1, 0x0);
        gbc.writeMem(0x78e0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x13c);
        EXPECT(gbc.pc(), 0x78e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0313
        gbc.setState(0x19a3, 0x9150, 0x4800, 0xe4fa, 0x592c, 0x7557, 0x0, 0x1);
        gbc.writeMem(0x19a3, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9150);
        EXPECT(gbc.pc(), 0x19a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0314
        gbc.setState(0x1a66, 0xa575, 0x9000, 0x21ab, 0x8c83, 0x5068, 0x0, 0x0);
        gbc.writeMem(0x1a66, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa575);
        EXPECT(gbc.pc(), 0x1a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0315
        gbc.setState(0xee39, 0x8919, 0xd640, 0xe497, 0x10dd, 0x15c7, 0x0, 0x0);
        gbc.writeMem(0xee39, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0xee3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee39), 0xcb);
        EXPECT(gbc.readMem(0xee3a), 0xda);
        // CB DA 0316
        gbc.setState(0x30fc, 0xffed, 0xbbb0, 0x1883, 0x969c, 0xfa39, 0x0, 0x1);
        gbc.writeMem(0x30fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xffed);
        EXPECT(gbc.pc(), 0x30fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0317
        gbc.setState(0x5f14, 0x7cb, 0x55d0, 0xc2e, 0xa1b5, 0xbfc1, 0x0, 0x0);
        gbc.writeMem(0x5f14, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7cb);
        EXPECT(gbc.pc(), 0x5f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0318
        gbc.setState(0x5206, 0x353d, 0x73f0, 0x4884, 0xa84c, 0x96ce, 0x0, 0x1);
        gbc.writeMem(0x5206, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x353d);
        EXPECT(gbc.pc(), 0x5208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0319
        gbc.setState(0x8ddd, 0xa639, 0x7290, 0x73d8, 0x9bad, 0x5daa, 0x1, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa639);
        EXPECT(gbc.pc(), 0x8ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ddd), 0xcb);
        EXPECT(gbc.readMem(0x8dde), 0xda);
        // CB DA 031B
        gbc.setState(0x1ac9, 0x2138, 0xebc0, 0xcb3d, 0xd94f, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x1ac9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0x1acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 031C
        gbc.setState(0x1aef, 0x8d76, 0xfaf0, 0x1b2a, 0x28a0, 0xf4c3, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8d76);
        EXPECT(gbc.pc(), 0x1af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 031D
        gbc.setState(0x71ba, 0xde1a, 0x0, 0xd54d, 0xc101, 0x54a3, 0x0, 0x1);
        gbc.writeMem(0x71ba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xde1a);
        EXPECT(gbc.pc(), 0x71bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 031E
        gbc.setState(0x4c25, 0xd84, 0xe430, 0x8fa0, 0x6c2d, 0x7154, 0x0, 0x1);
        gbc.writeMem(0x4c25, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd84);
        EXPECT(gbc.pc(), 0x4c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 031F
        gbc.setState(0x985a, 0xdae0, 0xe600, 0x41a5, 0xebc3, 0x403e, 0x1, 0x1);
        gbc.writeMem(0x985a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdae0);
        EXPECT(gbc.pc(), 0x985c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985a), 0xcb);
        EXPECT(gbc.readMem(0x985b), 0xda);
        // CB DA 0320
        gbc.setState(0xe97, 0x1828, 0x8fc0, 0x5d04, 0x852b, 0x6161, 0x1, 0x1);
        gbc.writeMem(0xe97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1828);
        EXPECT(gbc.pc(), 0xe99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0321
        gbc.setState(0x498e, 0x39ee, 0x450, 0x764e, 0x36c5, 0x6fbd, 0x0, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x39ee);
        EXPECT(gbc.pc(), 0x4990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0322
        gbc.setState(0x4cb8, 0xffb6, 0x6500, 0x42df, 0x9b1e, 0x98f0, 0x0, 0x0);
        gbc.writeMem(0x4cb8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xffb6);
        EXPECT(gbc.pc(), 0x4cba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0324
        gbc.setState(0x92c1, 0x6d90, 0x9080, 0x6b06, 0x98bd, 0x73e2, 0x0, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0xda);
        // CB DA 0325
        gbc.setState(0x27d7, 0xacf3, 0x3400, 0x578d, 0xc96f, 0xe2ae, 0x1, 0x0);
        gbc.writeMem(0x27d7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xacf3);
        EXPECT(gbc.pc(), 0x27d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0326
        gbc.setState(0xc872, 0xf23d, 0xc190, 0x9d8e, 0x7da, 0x84d5, 0x0, 0x1);
        gbc.writeMem(0xc872, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf23d);
        EXPECT(gbc.pc(), 0xc874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc872), 0xcb);
        EXPECT(gbc.readMem(0xc873), 0xda);
        // CB DA 0327
        gbc.setState(0x154d, 0xf12a, 0xb150, 0x4e75, 0x6136, 0xc25, 0x1, 0x0);
        gbc.writeMem(0x154d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf12a);
        EXPECT(gbc.pc(), 0x154f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0328
        gbc.setState(0x9ba7, 0x38e3, 0x88b0, 0xd5c, 0xe38, 0x8c1e, 0x1, 0x0);
        gbc.writeMem(0x9ba7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x38e3);
        EXPECT(gbc.pc(), 0x9ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba7), 0xcb);
        EXPECT(gbc.readMem(0x9ba8), 0xda);
        // CB DA 0329
        gbc.setState(0x3b04, 0x7c2, 0x6000, 0x70e5, 0x70e2, 0x64a9, 0x1, 0x0);
        gbc.writeMem(0x3b04, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7c2);
        EXPECT(gbc.pc(), 0x3b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 032A
        gbc.setState(0xcb26, 0xff31, 0x670, 0x2cb4, 0xc792, 0xfa64, 0x0, 0x0);
        gbc.writeMem(0xcb26, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xff31);
        EXPECT(gbc.pc(), 0xcb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb26), 0xcb);
        EXPECT(gbc.readMem(0xcb27), 0xda);
        // CB DA 032B
        gbc.setState(0x1c9a, 0x411c, 0xda0, 0xa50c, 0x8d59, 0x48af, 0x1, 0x0);
        gbc.writeMem(0x1c9a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x411c);
        EXPECT(gbc.pc(), 0x1c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 032C
        gbc.setState(0x524e, 0xa329, 0x2110, 0x1bca, 0x7a71, 0x2733, 0x0, 0x0);
        gbc.writeMem(0x524e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa329);
        EXPECT(gbc.pc(), 0x5250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 032D
        gbc.setState(0xe03e, 0xdd, 0x33e0, 0x5db, 0x5aa, 0x3716, 0x1, 0x0);
        gbc.writeMem(0xe03e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0xe040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03e), 0xcb);
        EXPECT(gbc.readMem(0xe03f), 0xda);
        // CB DA 032F
        gbc.setState(0x89df, 0xa204, 0xb4f0, 0xce93, 0xa6cc, 0xa9b3, 0x1, 0x1);
        gbc.writeMem(0x89df, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa204);
        EXPECT(gbc.pc(), 0x89e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89df), 0xcb);
        EXPECT(gbc.readMem(0x89e0), 0xda);
        // CB DA 0330
        gbc.setState(0xb4da, 0x7dc5, 0xdcc0, 0xde06, 0x49f3, 0x6337, 0x1, 0x1);
        gbc.writeMem(0xb4da, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7dc5);
        EXPECT(gbc.pc(), 0xb4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4da), 0xcb);
        EXPECT(gbc.readMem(0xb4db), 0xda);
        // CB DA 0331
        gbc.setState(0x677d, 0x3ccb, 0x4e90, 0xe4b9, 0x89b3, 0x4bd4, 0x0, 0x1);
        gbc.writeMem(0x677d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3ccb);
        EXPECT(gbc.pc(), 0x677f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0332
        gbc.setState(0x59e9, 0x9fbf, 0x2010, 0xbb80, 0xaf17, 0xc678, 0x0, 0x0);
        gbc.writeMem(0x59e9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9fbf);
        EXPECT(gbc.pc(), 0x59eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0333
        gbc.setState(0x522, 0xfebe, 0x9e40, 0x9cc, 0x34bd, 0x3689, 0x1, 0x1);
        gbc.writeMem(0x522, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfebe);
        EXPECT(gbc.pc(), 0x524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0334
        gbc.setState(0xef19, 0x84a9, 0x1cb0, 0x59b, 0x4f67, 0xe667, 0x0, 0x0);
        gbc.writeMem(0xef19, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x84a9);
        EXPECT(gbc.pc(), 0xef1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef19), 0xcb);
        EXPECT(gbc.readMem(0xef1a), 0xda);
        // CB DA 0335
        gbc.setState(0xa49a, 0x1c3a, 0xb330, 0x76ce, 0x63df, 0xa005, 0x1, 0x0);
        gbc.writeMem(0xa49a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1c3a);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0xda);
        // CB DA 0336
        gbc.setState(0x85dc, 0x531c, 0x2dc0, 0xa570, 0xeeb4, 0xa98, 0x0, 0x1);
        gbc.writeMem(0x85dc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x531c);
        EXPECT(gbc.pc(), 0x85de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85dc), 0xcb);
        EXPECT(gbc.readMem(0x85dd), 0xda);
        // CB DA 0337
        gbc.setState(0x2521, 0xea7f, 0x7e60, 0x5022, 0x5643, 0x910, 0x1, 0x1);
        gbc.writeMem(0x2521, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xea7f);
        EXPECT(gbc.pc(), 0x2523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0338
        gbc.setState(0xb13b, 0x63f, 0x2ec0, 0xba5, 0xd790, 0x6af1, 0x1, 0x1);
        gbc.writeMem(0xb13b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x63f);
        EXPECT(gbc.pc(), 0xb13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13b), 0xcb);
        EXPECT(gbc.readMem(0xb13c), 0xda);
        // CB DA 0339
        gbc.setState(0x3078, 0x71fa, 0xcdf0, 0xf2de, 0x2493, 0x8e78, 0x1, 0x0);
        gbc.writeMem(0x3078, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x71fa);
        EXPECT(gbc.pc(), 0x307a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 033A
        gbc.setState(0x8259, 0xe38, 0x6960, 0xe653, 0xc1e9, 0x3634, 0x1, 0x0);
        gbc.writeMem(0x8259, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe38);
        EXPECT(gbc.pc(), 0x825b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8259), 0xcb);
        EXPECT(gbc.readMem(0x825a), 0xda);
        // CB DA 033B
        gbc.setState(0x74c9, 0xd37d, 0x9720, 0xab61, 0x9726, 0x8c25, 0x1, 0x1);
        gbc.writeMem(0x74c9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd37d);
        EXPECT(gbc.pc(), 0x74cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 033C
        gbc.setState(0x7cef, 0x650c, 0xd970, 0xd6c2, 0x9329, 0x616b, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x650c);
        EXPECT(gbc.pc(), 0x7cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 033D
        gbc.setState(0xb03f, 0x29eb, 0x8f80, 0xbf2a, 0x48d8, 0x8da7, 0x0, 0x1);
        gbc.writeMem(0xb03f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x29eb);
        EXPECT(gbc.pc(), 0xb041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03f), 0xcb);
        EXPECT(gbc.readMem(0xb040), 0xda);
        // CB DA 033E
        gbc.setState(0xecdf, 0x96f, 0x1990, 0x4d7e, 0xee81, 0x9afd, 0x1, 0x0);
        gbc.writeMem(0xecdf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x96f);
        EXPECT(gbc.pc(), 0xece1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecdf), 0xcb);
        EXPECT(gbc.readMem(0xece0), 0xda);
        // CB DA 033F
        gbc.setState(0x700, 0xc4b9, 0x9db0, 0x498, 0xde21, 0xebbf, 0x0, 0x1);
        gbc.writeMem(0x700, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc4b9);
        EXPECT(gbc.pc(), 0x702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0340
        gbc.setState(0x97, 0x262a, 0xc070, 0x8161, 0xfc24, 0x3d1, 0x0, 0x0);
        gbc.writeMem(0x97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0341
        gbc.setState(0x1b33, 0xc24e, 0x32a0, 0x65e6, 0x73bb, 0x84f5, 0x0, 0x1);
        gbc.writeMem(0x1b33, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc24e);
        EXPECT(gbc.pc(), 0x1b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0342
        gbc.setState(0x8463, 0x6b18, 0x2ee0, 0x62d4, 0xd, 0x27b7, 0x1, 0x0);
        gbc.writeMem(0x8463, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6b18);
        EXPECT(gbc.pc(), 0x8465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8463), 0xcb);
        EXPECT(gbc.readMem(0x8464), 0xda);
        // CB DA 0343
        gbc.setState(0xa583, 0xf429, 0xbdd0, 0x6dcf, 0x328c, 0x164a, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf429);
        EXPECT(gbc.pc(), 0xa585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa583), 0xcb);
        EXPECT(gbc.readMem(0xa584), 0xda);
        // CB DA 0344
        gbc.setState(0x3e3d, 0x7b16, 0x2040, 0xa62d, 0xc110, 0x9a76, 0x1, 0x0);
        gbc.writeMem(0x3e3d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7b16);
        EXPECT(gbc.pc(), 0x3e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0345
        gbc.setState(0x303a, 0x7a76, 0x73c0, 0x6bd9, 0x6b05, 0x3103, 0x1, 0x0);
        gbc.writeMem(0x303a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7a76);
        EXPECT(gbc.pc(), 0x303c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0347
        gbc.setState(0x470a, 0x92d6, 0xa550, 0x2558, 0x2b21, 0xe8d3, 0x1, 0x1);
        gbc.writeMem(0x470a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x92d6);
        EXPECT(gbc.pc(), 0x470c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0348
        gbc.setState(0x826a, 0xc544, 0x3b20, 0xb540, 0xe159, 0x563a, 0x1, 0x1);
        gbc.writeMem(0x826a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc544);
        EXPECT(gbc.pc(), 0x826c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826a), 0xcb);
        EXPECT(gbc.readMem(0x826b), 0xda);
        // CB DA 0349
        gbc.setState(0xc5af, 0xed3, 0x4da0, 0xdacb, 0xc2e6, 0x82a0, 0x1, 0x0);
        gbc.writeMem(0xc5af, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xed3);
        EXPECT(gbc.pc(), 0xc5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5af), 0xcb);
        EXPECT(gbc.readMem(0xc5b0), 0xda);
        // CB DA 034A
        gbc.setState(0xa99a, 0x255d, 0xc510, 0xa14a, 0x9c21, 0x9fea, 0x1, 0x0);
        gbc.writeMem(0xa99a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x255d);
        EXPECT(gbc.pc(), 0xa99c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa99a), 0xcb);
        EXPECT(gbc.readMem(0xa99b), 0xda);
        // CB DA 034B
        gbc.setState(0xe41a, 0xabe4, 0x7c30, 0xf1d7, 0xa359, 0xecc6, 0x1, 0x0);
        gbc.writeMem(0xe41a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xabe4);
        EXPECT(gbc.pc(), 0xe41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41a), 0xcb);
        EXPECT(gbc.readMem(0xe41b), 0xda);
        // CB DA 034C
        gbc.setState(0x7a6c, 0x6e2d, 0xe9b0, 0x20d7, 0xe77, 0x25d3, 0x1, 0x1);
        gbc.writeMem(0x7a6c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6e2d);
        EXPECT(gbc.pc(), 0x7a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 034D
        gbc.setState(0x1cbd, 0xd955, 0xc440, 0x196c, 0x85ce, 0xb531, 0x1, 0x1);
        gbc.writeMem(0x1cbd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd955);
        EXPECT(gbc.pc(), 0x1cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 034E
        gbc.setState(0x535d, 0x3e23, 0x3310, 0x38b, 0x7651, 0x2cb3, 0x1, 0x1);
        gbc.writeMem(0x535d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3e23);
        EXPECT(gbc.pc(), 0x535f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 034F
        gbc.setState(0xbfba, 0x4b71, 0x2970, 0x5c46, 0xf566, 0xb247, 0x1, 0x0);
        gbc.writeMem(0xbfba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4b71);
        EXPECT(gbc.pc(), 0xbfbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfba), 0xcb);
        EXPECT(gbc.readMem(0xbfbb), 0xda);
        // CB DA 0350
        gbc.setState(0x8775, 0x4204, 0xe0b0, 0xa0ed, 0x6a8f, 0xe6d1, 0x1, 0x0);
        gbc.writeMem(0x8775, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4204);
        EXPECT(gbc.pc(), 0x8777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8775), 0xcb);
        EXPECT(gbc.readMem(0x8776), 0xda);
        // CB DA 0351
        gbc.setState(0xe3f8, 0xbc48, 0xa8b0, 0xd2f, 0x4fef, 0xb403, 0x0, 0x0);
        gbc.writeMem(0xe3f8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbc48);
        EXPECT(gbc.pc(), 0xe3fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f8), 0xcb);
        EXPECT(gbc.readMem(0xe3f9), 0xda);
        // CB DA 0352
        gbc.setState(0x9fa0, 0xfd2f, 0xd640, 0xe3b, 0x4369, 0x50e1, 0x0, 0x1);
        gbc.writeMem(0x9fa0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfd2f);
        EXPECT(gbc.pc(), 0x9fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa0), 0xcb);
        EXPECT(gbc.readMem(0x9fa1), 0xda);
        // CB DA 0353
        gbc.setState(0x2532, 0x8f0a, 0xc690, 0xe77d, 0xd5ba, 0x3ce4, 0x0, 0x0);
        gbc.writeMem(0x2532, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f0a);
        EXPECT(gbc.pc(), 0x2534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0354
        gbc.setState(0xcd89, 0x55b3, 0xe360, 0xd149, 0x3cb0, 0xdda9, 0x0, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x55b3);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd89), 0xcb);
        EXPECT(gbc.readMem(0xcd8a), 0xda);
        // CB DA 0355
        gbc.setState(0x5863, 0x9a86, 0x7ec0, 0x42f9, 0x813, 0xef3a, 0x0, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9a86);
        EXPECT(gbc.pc(), 0x5865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0356
        gbc.setState(0xd66, 0x465a, 0x3950, 0x48e6, 0x4e35, 0x29fc, 0x1, 0x1);
        gbc.writeMem(0xd66, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x465a);
        EXPECT(gbc.pc(), 0xd68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0357
        gbc.setState(0xb9a4, 0xf6af, 0x6810, 0xc521, 0x41e7, 0x850b, 0x1, 0x1);
        gbc.writeMem(0xb9a4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf6af);
        EXPECT(gbc.pc(), 0xb9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a4), 0xcb);
        EXPECT(gbc.readMem(0xb9a5), 0xda);
        // CB DA 0358
        gbc.setState(0xd908, 0xb270, 0x4690, 0x762e, 0x93a3, 0x9a9b, 0x1, 0x0);
        gbc.writeMem(0xd908, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb270);
        EXPECT(gbc.pc(), 0xd90a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd908), 0xcb);
        EXPECT(gbc.readMem(0xd909), 0xda);
        // CB DA 0359
        gbc.setState(0x4651, 0xc733, 0xce0, 0xdda0, 0x7bd, 0x5ee4, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc733);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 035A
        gbc.setState(0x1467, 0xe01c, 0x2d80, 0x9e2f, 0xad5, 0x1def, 0x1, 0x0);
        gbc.writeMem(0x1467, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe01c);
        EXPECT(gbc.pc(), 0x1469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 035B
        gbc.setState(0x2a80, 0xf2fd, 0x86e0, 0xd7a7, 0xc103, 0x95ea, 0x1, 0x0);
        gbc.writeMem(0x2a80, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf2fd);
        EXPECT(gbc.pc(), 0x2a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 035C
        gbc.setState(0x20e6, 0x7d6, 0x6330, 0xcb28, 0xbe06, 0x88cf, 0x0, 0x0);
        gbc.writeMem(0x20e6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7d6);
        EXPECT(gbc.pc(), 0x20e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 035D
        gbc.setState(0xe3ef, 0x7162, 0x71d0, 0xba4, 0x5e40, 0x9645, 0x0, 0x1);
        gbc.writeMem(0xe3ef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7162);
        EXPECT(gbc.pc(), 0xe3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ef), 0xcb);
        EXPECT(gbc.readMem(0xe3f0), 0xda);
        // CB DA 035E
        gbc.setState(0xce4d, 0xcf37, 0x6ba0, 0x5a1a, 0x80b2, 0xbc42, 0x1, 0x0);
        gbc.writeMem(0xce4d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcf37);
        EXPECT(gbc.pc(), 0xce4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4d), 0xcb);
        EXPECT(gbc.readMem(0xce4e), 0xda);
        // CB DA 035F
        gbc.setState(0x3ff, 0x6c22, 0xebe0, 0x4c81, 0x621c, 0x19a4, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6c22);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0360
        gbc.setState(0x6b1d, 0x363, 0x75f0, 0x417e, 0x1403, 0x50f4, 0x0, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x363);
        EXPECT(gbc.pc(), 0x6b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0361
        gbc.setState(0x944b, 0x18bc, 0x5ab0, 0x8868, 0xbf10, 0x38f3, 0x1, 0x0);
        gbc.writeMem(0x944b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x18bc);
        EXPECT(gbc.pc(), 0x944d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944b), 0xcb);
        EXPECT(gbc.readMem(0x944c), 0xda);
        // CB DA 0362
        gbc.setState(0x67f0, 0xd58a, 0xe8a0, 0xaf97, 0xbc60, 0x3969, 0x1, 0x1);
        gbc.writeMem(0x67f0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0x67f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0363
        gbc.setState(0x3a88, 0x6de, 0x9530, 0xb461, 0x1aa7, 0x9c40, 0x0, 0x1);
        gbc.writeMem(0x3a88, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6de);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0364
        gbc.setState(0x3e56, 0xd06b, 0x1c00, 0x8870, 0x66c7, 0xd373, 0x0, 0x0);
        gbc.writeMem(0x3e56, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd06b);
        EXPECT(gbc.pc(), 0x3e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0365
        gbc.setState(0xe384, 0xd448, 0xc40, 0x6eba, 0x29bf, 0x7e48, 0x1, 0x1);
        gbc.writeMem(0xe384, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd448);
        EXPECT(gbc.pc(), 0xe386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe384), 0xcb);
        EXPECT(gbc.readMem(0xe385), 0xda);
        // CB DA 0366
        gbc.setState(0x921f, 0x2e57, 0x3b30, 0x73b7, 0x1660, 0x1309, 0x0, 0x1);
        gbc.writeMem(0x921f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2e57);
        EXPECT(gbc.pc(), 0x9221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921f), 0xcb);
        EXPECT(gbc.readMem(0x9220), 0xda);
        // CB DA 0367
        gbc.setState(0xe565, 0x1a50, 0xa400, 0x6928, 0x8616, 0x4c15, 0x0, 0x1);
        gbc.writeMem(0xe565, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1a50);
        EXPECT(gbc.pc(), 0xe567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe565), 0xcb);
        EXPECT(gbc.readMem(0xe566), 0xda);
        // CB DA 0368
        gbc.setState(0x7b0c, 0x2e03, 0x96a0, 0xf2d8, 0x6550, 0xa2da, 0x0, 0x0);
        gbc.writeMem(0x7b0c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2e03);
        EXPECT(gbc.pc(), 0x7b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0369
        gbc.setState(0xb423, 0x4f51, 0x6a0, 0x7060, 0x3fe5, 0x1c8e, 0x1, 0x1);
        gbc.writeMem(0xb423, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4f51);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb423), 0xcb);
        EXPECT(gbc.readMem(0xb424), 0xda);
        // CB DA 036A
        gbc.setState(0xd6c6, 0x5641, 0xcf00, 0xb1fa, 0x5229, 0xeb76, 0x0, 0x0);
        gbc.writeMem(0xd6c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5641);
        EXPECT(gbc.pc(), 0xd6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c6), 0xcb);
        EXPECT(gbc.readMem(0xd6c7), 0xda);
        // CB DA 036B
        gbc.setState(0xa023, 0x4ca5, 0x90c0, 0x23de, 0x55a5, 0xa050, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4ca5);
        EXPECT(gbc.pc(), 0xa025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa023), 0xcb);
        EXPECT(gbc.readMem(0xa024), 0xda);
        // CB DA 036C
        gbc.setState(0x57ad, 0x906, 0x5170, 0xba70, 0xb909, 0xdf65, 0x0, 0x0);
        gbc.writeMem(0x57ad, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x906);
        EXPECT(gbc.pc(), 0x57af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 036D
        gbc.setState(0xcd78, 0x29a0, 0x8c20, 0x4cf0, 0xddb, 0xc56a, 0x1, 0x0);
        gbc.writeMem(0xcd78, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x29a0);
        EXPECT(gbc.pc(), 0xcd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd78), 0xcb);
        EXPECT(gbc.readMem(0xcd79), 0xda);
        // CB DA 036E
        gbc.setState(0x1b19, 0x8520, 0x12b0, 0x1663, 0xd545, 0xcd45, 0x0, 0x0);
        gbc.writeMem(0x1b19, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8520);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 036F
        gbc.setState(0xc22a, 0x7cad, 0x6eb0, 0x4a24, 0x6420, 0xc5f3, 0x1, 0x0);
        gbc.writeMem(0xc22a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7cad);
        EXPECT(gbc.pc(), 0xc22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22a), 0xcb);
        EXPECT(gbc.readMem(0xc22b), 0xda);
        // CB DA 0370
        gbc.setState(0xdbd0, 0x3b1, 0x5120, 0x5ff4, 0x5e1f, 0xdfee, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3b1);
        EXPECT(gbc.pc(), 0xdbd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd0), 0xcb);
        EXPECT(gbc.readMem(0xdbd1), 0xda);
        // CB DA 0371
        gbc.setState(0x88e9, 0xb9ee, 0x4ba0, 0x2b38, 0xa0b3, 0xd0cd, 0x1, 0x1);
        gbc.writeMem(0x88e9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0x88eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e9), 0xcb);
        EXPECT(gbc.readMem(0x88ea), 0xda);
        // CB DA 0372
        gbc.setState(0x5598, 0x4b4a, 0x7330, 0x92af, 0x9b1f, 0xbc09, 0x0, 0x0);
        gbc.writeMem(0x5598, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4b4a);
        EXPECT(gbc.pc(), 0x559a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0373
        gbc.setState(0x8f5c, 0xb21e, 0xe8d0, 0xb88, 0xe5f9, 0xab80, 0x1, 0x0);
        gbc.writeMem(0x8f5c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb21e);
        EXPECT(gbc.pc(), 0x8f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5c), 0xcb);
        EXPECT(gbc.readMem(0x8f5d), 0xda);
        // CB DA 0374
        gbc.setState(0x207f, 0xcbf5, 0xa2f0, 0x59d4, 0x5e08, 0x1852, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcbf5);
        EXPECT(gbc.pc(), 0x2081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0375
        gbc.setState(0x5943, 0xacd2, 0x4880, 0x807f, 0xd874, 0x984, 0x0, 0x0);
        gbc.writeMem(0x5943, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xacd2);
        EXPECT(gbc.pc(), 0x5945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0376
        gbc.setState(0xcc04, 0xa303, 0x4310, 0x73bd, 0x589c, 0x9b36, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa303);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc04), 0xcb);
        EXPECT(gbc.readMem(0xcc05), 0xda);
        // CB DA 0377
        gbc.setState(0x1d03, 0xa881, 0xb560, 0xa3a2, 0xf661, 0x8f78, 0x0, 0x1);
        gbc.writeMem(0x1d03, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa881);
        EXPECT(gbc.pc(), 0x1d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0378
        gbc.setState(0x3c8, 0x9d93, 0xbe0, 0x56e6, 0x2ce3, 0x4164, 0x1, 0x0);
        gbc.writeMem(0x3c8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9d93);
        EXPECT(gbc.pc(), 0x3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0379
        gbc.setState(0x3d8b, 0xec14, 0x1a30, 0xf9fb, 0x6fe4, 0x8e8a, 0x0, 0x0);
        gbc.writeMem(0x3d8b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xec14);
        EXPECT(gbc.pc(), 0x3d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 037A
        gbc.setState(0x115a, 0x8ba4, 0x65a0, 0x114f, 0x7af5, 0x217f, 0x1, 0x1);
        gbc.writeMem(0x115a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8ba4);
        EXPECT(gbc.pc(), 0x115c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 037B
        gbc.setState(0x73da, 0xcbb9, 0x4d10, 0xa4e7, 0xa2c8, 0xc7c7, 0x0, 0x1);
        gbc.writeMem(0x73da, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcbb9);
        EXPECT(gbc.pc(), 0x73dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 037D
        gbc.setState(0x4568, 0xedf2, 0x700, 0xf3ce, 0x3876, 0x72f, 0x1, 0x0);
        gbc.writeMem(0x4568, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xedf2);
        EXPECT(gbc.pc(), 0x456a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 037E
        gbc.setState(0x13c0, 0xdfb4, 0xbe70, 0x3ca7, 0xfac2, 0x2cac, 0x0, 0x1);
        gbc.writeMem(0x13c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdfb4);
        EXPECT(gbc.pc(), 0x13c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 037F
        gbc.setState(0x9d28, 0x1da7, 0x8400, 0xd582, 0xe1c, 0xaa6d, 0x0, 0x0);
        gbc.writeMem(0x9d28, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0x9d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d28), 0xcb);
        EXPECT(gbc.readMem(0x9d29), 0xda);
        // CB DA 0380
        gbc.setState(0x38be, 0xd4be, 0x530, 0x6547, 0x6509, 0x8f5c, 0x0, 0x1);
        gbc.writeMem(0x38be, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd4be);
        EXPECT(gbc.pc(), 0x38c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0381
        gbc.setState(0xe619, 0x5959, 0xa120, 0x7267, 0x2014, 0xb0bc, 0x0, 0x0);
        gbc.writeMem(0xe619, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5959);
        EXPECT(gbc.pc(), 0xe61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe619), 0xcb);
        EXPECT(gbc.readMem(0xe61a), 0xda);
        // CB DA 0382
        gbc.setState(0x4ab9, 0x1b9, 0xc170, 0x118e, 0xc809, 0x2455, 0x0, 0x0);
        gbc.writeMem(0x4ab9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1b9);
        EXPECT(gbc.pc(), 0x4abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0383
        gbc.setState(0xac9b, 0x7246, 0xcf30, 0x2aa9, 0x8378, 0xdaf6, 0x0, 0x1);
        gbc.writeMem(0xac9b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7246);
        EXPECT(gbc.pc(), 0xac9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9b), 0xcb);
        EXPECT(gbc.readMem(0xac9c), 0xda);
        // CB DA 0384
        gbc.setState(0xe740, 0xda79, 0x33e0, 0x7ce6, 0xb5dd, 0xb3d4, 0x0, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xda79);
        EXPECT(gbc.pc(), 0xe742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe740), 0xcb);
        EXPECT(gbc.readMem(0xe741), 0xda);
        // CB DA 0385
        gbc.setState(0xc1a5, 0x7da2, 0x9030, 0x91d3, 0x4837, 0xfed, 0x0, 0x1);
        gbc.writeMem(0xc1a5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7da2);
        EXPECT(gbc.pc(), 0xc1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a5), 0xcb);
        EXPECT(gbc.readMem(0xc1a6), 0xda);
        // CB DA 0386
        gbc.setState(0x5875, 0xe4ce, 0x7cf0, 0x4c23, 0x5c4e, 0xf55c, 0x0, 0x1);
        gbc.writeMem(0x5875, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe4ce);
        EXPECT(gbc.pc(), 0x5877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0387
        gbc.setState(0x16de, 0x35f8, 0x9e80, 0x2095, 0x4091, 0xdba1, 0x0, 0x0);
        gbc.writeMem(0x16de, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x35f8);
        EXPECT(gbc.pc(), 0x16e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0388
        gbc.setState(0x317c, 0x330a, 0xdee0, 0xe4f0, 0x50ff, 0xe996, 0x0, 0x0);
        gbc.writeMem(0x317c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x330a);
        EXPECT(gbc.pc(), 0x317e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0389
        gbc.setState(0xe6fc, 0xec96, 0xc600, 0xd223, 0xf61, 0x1cb, 0x0, 0x0);
        gbc.writeMem(0xe6fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xec96);
        EXPECT(gbc.pc(), 0xe6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6fc), 0xcb);
        EXPECT(gbc.readMem(0xe6fd), 0xda);
        // CB DA 038A
        gbc.setState(0x6ab6, 0xcda7, 0xf1e0, 0x7f5f, 0xc234, 0xcb62, 0x1, 0x0);
        gbc.writeMem(0x6ab6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcda7);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 038B
        gbc.setState(0x2ac8, 0x626a, 0x4ab0, 0x2be5, 0x320c, 0xa980, 0x1, 0x0);
        gbc.writeMem(0x2ac8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x626a);
        EXPECT(gbc.pc(), 0x2aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 038C
        gbc.setState(0xc126, 0x9e46, 0x62e0, 0xf535, 0x8723, 0xb3b1, 0x0, 0x1);
        gbc.writeMem(0xc126, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9e46);
        EXPECT(gbc.pc(), 0xc128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc126), 0xcb);
        EXPECT(gbc.readMem(0xc127), 0xda);
        // CB DA 038D
        gbc.setState(0xd68f, 0x4103, 0xb210, 0xdfb8, 0x77ed, 0x5540, 0x0, 0x1);
        gbc.writeMem(0xd68f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4103);
        EXPECT(gbc.pc(), 0xd691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0xcb);
        EXPECT(gbc.readMem(0xd690), 0xda);
        // CB DA 038E
        gbc.setState(0x3d98, 0x1e94, 0xe210, 0x3d98, 0x2e90, 0x2145, 0x0, 0x1);
        gbc.writeMem(0x3d98, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1e94);
        EXPECT(gbc.pc(), 0x3d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 038F
        gbc.setState(0x26f8, 0x9678, 0xca00, 0x3211, 0x9eff, 0xf1dc, 0x0, 0x1);
        gbc.writeMem(0x26f8, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9678);
        EXPECT(gbc.pc(), 0x26fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0390
        gbc.setState(0x2336, 0x1d66, 0xb9c0, 0xce01, 0x7007, 0xa51e, 0x0, 0x1);
        gbc.writeMem(0x2336, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1d66);
        EXPECT(gbc.pc(), 0x2338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0391
        gbc.setState(0xe23, 0xefc2, 0xa0c0, 0x4b98, 0x5cbe, 0x6d8b, 0x1, 0x0);
        gbc.writeMem(0xe23, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xefc2);
        EXPECT(gbc.pc(), 0xe25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0392
        gbc.setState(0x9b5e, 0xb94, 0xd770, 0xb30f, 0x2e8e, 0x94f8, 0x0, 0x1);
        gbc.writeMem(0x9b5e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb94);
        EXPECT(gbc.pc(), 0x9b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5e), 0xcb);
        EXPECT(gbc.readMem(0x9b5f), 0xda);
        // CB DA 0393
        gbc.setState(0x7aa4, 0xdfa6, 0x5a30, 0x938b, 0x6c76, 0xc0ca, 0x0, 0x0);
        gbc.writeMem(0x7aa4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdfa6);
        EXPECT(gbc.pc(), 0x7aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0394
        gbc.setState(0x4b3e, 0xa6bd, 0xd220, 0x4298, 0x3222, 0x9874, 0x1, 0x1);
        gbc.writeMem(0x4b3e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa6bd);
        EXPECT(gbc.pc(), 0x4b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0395
        gbc.setState(0x4b36, 0xd115, 0x50c0, 0x1663, 0x2e20, 0xcf66, 0x1, 0x1);
        gbc.writeMem(0x4b36, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd115);
        EXPECT(gbc.pc(), 0x4b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0396
        gbc.setState(0x46cc, 0x339b, 0x25f0, 0xdab3, 0x3ca5, 0x4103, 0x0, 0x0);
        gbc.writeMem(0x46cc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x339b);
        EXPECT(gbc.pc(), 0x46ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 0397
        gbc.setState(0x35ed, 0xa7c7, 0xfe80, 0xb5d7, 0xee07, 0x39f, 0x0, 0x1);
        gbc.writeMem(0x35ed, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa7c7);
        EXPECT(gbc.pc(), 0x35ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 0398
        gbc.setState(0xb0c6, 0x49e7, 0x27b0, 0xfbb, 0x7e87, 0x517c, 0x0, 0x0);
        gbc.writeMem(0xb0c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x49e7);
        EXPECT(gbc.pc(), 0xb0c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c6), 0xcb);
        EXPECT(gbc.readMem(0xb0c7), 0xda);
        // CB DA 039A
        gbc.setState(0x8b53, 0x3fa4, 0xba00, 0x3b8c, 0xd9f0, 0x3827, 0x1, 0x1);
        gbc.writeMem(0x8b53, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3fa4);
        EXPECT(gbc.pc(), 0x8b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b53), 0xcb);
        EXPECT(gbc.readMem(0x8b54), 0xda);
        // CB DA 039B
        gbc.setState(0x23d0, 0x436d, 0xdf60, 0x7e9b, 0x9033, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x23d0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x436d);
        EXPECT(gbc.pc(), 0x23d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 039C
        gbc.setState(0x5eb0, 0xe3c4, 0x6690, 0xc885, 0x359a, 0xc4e2, 0x1, 0x1);
        gbc.writeMem(0x5eb0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe3c4);
        EXPECT(gbc.pc(), 0x5eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 039D
        gbc.setState(0xbc08, 0xeb3, 0x30c0, 0x67da, 0xbd7b, 0x7986, 0x0, 0x1);
        gbc.writeMem(0xbc08, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xeb3);
        EXPECT(gbc.pc(), 0xbc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc08), 0xcb);
        EXPECT(gbc.readMem(0xbc09), 0xda);
        // CB DA 039E
        gbc.setState(0x8add, 0x3ea8, 0x8ec0, 0x1cbe, 0x365f, 0xa29b, 0x0, 0x1);
        gbc.writeMem(0x8add, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3ea8);
        EXPECT(gbc.pc(), 0x8adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8add), 0xcb);
        EXPECT(gbc.readMem(0x8ade), 0xda);
        // CB DA 039F
        gbc.setState(0x82f, 0x9c6, 0x2d10, 0xdfec, 0xe493, 0x9bb7, 0x0, 0x0);
        gbc.writeMem(0x82f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9c6);
        EXPECT(gbc.pc(), 0x831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03A0
        gbc.setState(0xa74f, 0xc6cd, 0x3430, 0x961c, 0xa0fb, 0x3e75, 0x0, 0x1);
        gbc.writeMem(0xa74f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc6cd);
        EXPECT(gbc.pc(), 0xa751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74f), 0xcb);
        EXPECT(gbc.readMem(0xa750), 0xda);
        // CB DA 03A1
        gbc.setState(0x86b0, 0x624, 0xc1e0, 0xc50f, 0x4814, 0xa01a, 0x1, 0x0);
        gbc.writeMem(0x86b0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x624);
        EXPECT(gbc.pc(), 0x86b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b0), 0xcb);
        EXPECT(gbc.readMem(0x86b1), 0xda);
        // CB DA 03A2
        gbc.setState(0x1e0c, 0xe787, 0x4910, 0xae02, 0x6848, 0xf52e, 0x1, 0x0);
        gbc.writeMem(0x1e0c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe787);
        EXPECT(gbc.pc(), 0x1e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03A3
        gbc.setState(0xdcf7, 0xfae9, 0x7470, 0xa319, 0xb9f2, 0xa4ea, 0x1, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfae9);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf7), 0xcb);
        EXPECT(gbc.readMem(0xdcf8), 0xda);
        // CB DA 03A4
        gbc.setState(0x455b, 0xef48, 0xddf0, 0xdf4a, 0x4dc2, 0xced7, 0x0, 0x0);
        gbc.writeMem(0x455b, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xef48);
        EXPECT(gbc.pc(), 0x455d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03A5
        gbc.setState(0x3c3f, 0x2aa5, 0x3ee0, 0x2e17, 0x90f, 0x154d, 0x1, 0x1);
        gbc.writeMem(0x3c3f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2aa5);
        EXPECT(gbc.pc(), 0x3c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03A6
        gbc.setState(0xc995, 0x7c1e, 0x1090, 0x9b21, 0xf6d7, 0xab20, 0x1, 0x0);
        gbc.writeMem(0xc995, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7c1e);
        EXPECT(gbc.pc(), 0xc997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc995), 0xcb);
        EXPECT(gbc.readMem(0xc996), 0xda);
        // CB DA 03A7
        gbc.setState(0x3cbd, 0x32e1, 0x28b0, 0xc7e0, 0xd681, 0x2677, 0x0, 0x0);
        gbc.writeMem(0x3cbd, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x32e1);
        EXPECT(gbc.pc(), 0x3cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03A8
        gbc.setState(0x6c24, 0x9178, 0x7640, 0x3859, 0xdd99, 0x2c9b, 0x1, 0x0);
        gbc.writeMem(0x6c24, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9178);
        EXPECT(gbc.pc(), 0x6c26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03A9
        gbc.setState(0x8f95, 0xb5a5, 0x2fd0, 0x1994, 0x74bf, 0xf134, 0x0, 0x0);
        gbc.writeMem(0x8f95, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb5a5);
        EXPECT(gbc.pc(), 0x8f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f95), 0xcb);
        EXPECT(gbc.readMem(0x8f96), 0xda);
        // CB DA 03AA
        gbc.setState(0x7876, 0xfc1f, 0x7080, 0xfd88, 0xb415, 0x9f13, 0x1, 0x0);
        gbc.writeMem(0x7876, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfc1f);
        EXPECT(gbc.pc(), 0x7878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03AB
        gbc.setState(0xe97e, 0xe515, 0x64f0, 0x9666, 0x980d, 0x5744, 0x1, 0x1);
        gbc.writeMem(0xe97e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0xe980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97e), 0xcb);
        EXPECT(gbc.readMem(0xe97f), 0xda);
        // CB DA 03AC
        gbc.setState(0x9896, 0xf6b3, 0xba90, 0x49df, 0x4364, 0x759, 0x1, 0x1);
        gbc.writeMem(0x9896, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf6b3);
        EXPECT(gbc.pc(), 0x9898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9896), 0xcb);
        EXPECT(gbc.readMem(0x9897), 0xda);
        // CB DA 03AD
        gbc.setState(0x1ec7, 0xc4cb, 0x3ed0, 0xb9de, 0xffbd, 0xf4d, 0x0, 0x0);
        gbc.writeMem(0x1ec7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc4cb);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03AE
        gbc.setState(0xaf0d, 0x2fa3, 0xd030, 0x704e, 0xde07, 0x9af0, 0x1, 0x1);
        gbc.writeMem(0xaf0d, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2fa3);
        EXPECT(gbc.pc(), 0xaf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf0d), 0xcb);
        EXPECT(gbc.readMem(0xaf0e), 0xda);
        // CB DA 03AF
        gbc.setState(0xdfc9, 0xb5ed, 0x1f00, 0x84d7, 0x5ec3, 0x9648, 0x0, 0x1);
        gbc.writeMem(0xdfc9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb5ed);
        EXPECT(gbc.pc(), 0xdfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc9), 0xcb);
        EXPECT(gbc.readMem(0xdfca), 0xda);
        // CB DA 03B0
        gbc.setState(0x6758, 0x142f, 0x5cd0, 0x3f7b, 0x89f7, 0xfa04, 0x1, 0x1);
        gbc.writeMem(0x6758, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x142f);
        EXPECT(gbc.pc(), 0x675a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03B1
        gbc.setState(0xd3e7, 0x643c, 0xc3a0, 0x2466, 0x8d94, 0xad5d, 0x0, 0x0);
        gbc.writeMem(0xd3e7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x643c);
        EXPECT(gbc.pc(), 0xd3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e7), 0xcb);
        EXPECT(gbc.readMem(0xd3e8), 0xda);
        // CB DA 03B2
        gbc.setState(0xcd97, 0x7733, 0x98a0, 0xd18, 0xdb00, 0xb4ef, 0x1, 0x1);
        gbc.writeMem(0xcd97, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7733);
        EXPECT(gbc.pc(), 0xcd99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd97), 0xcb);
        EXPECT(gbc.readMem(0xcd98), 0xda);
        // CB DA 03B3
        gbc.setState(0xac4e, 0x2c7b, 0x3120, 0x326f, 0x65f9, 0x7190, 0x0, 0x0);
        gbc.writeMem(0xac4e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2c7b);
        EXPECT(gbc.pc(), 0xac50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4e), 0xcb);
        EXPECT(gbc.readMem(0xac4f), 0xda);
        // CB DA 03B4
        gbc.setState(0xb278, 0x1d95, 0xa910, 0x9678, 0x4f4e, 0xba7, 0x1, 0x1);
        gbc.writeMem(0xb278, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1d95);
        EXPECT(gbc.pc(), 0xb27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb278), 0xcb);
        EXPECT(gbc.readMem(0xb279), 0xda);
        // CB DA 03B5
        gbc.setState(0x18dc, 0x46ea, 0xf40, 0x9f0b, 0x4d2a, 0xfdb5, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x46ea);
        EXPECT(gbc.pc(), 0x18de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03B6
        gbc.setState(0x633c, 0x837f, 0xa350, 0x1949, 0x6f6c, 0x3f9f, 0x1, 0x1);
        gbc.writeMem(0x633c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x837f);
        EXPECT(gbc.pc(), 0x633e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03B7
        gbc.setState(0x84cf, 0xdbab, 0x17e0, 0x1d2f, 0xb75e, 0x21d, 0x0, 0x1);
        gbc.writeMem(0x84cf, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdbab);
        EXPECT(gbc.pc(), 0x84d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cf), 0xcb);
        EXPECT(gbc.readMem(0x84d0), 0xda);
        // CB DA 03B8
        gbc.setState(0x165, 0xa607, 0xe0b0, 0xc706, 0x5806, 0x5fa1, 0x1, 0x1);
        gbc.writeMem(0x165, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa607);
        EXPECT(gbc.pc(), 0x167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03B9
        gbc.setState(0xabc4, 0x5f3f, 0x5db0, 0xb073, 0x1a81, 0xda98, 0x1, 0x1);
        gbc.writeMem(0xabc4, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5f3f);
        EXPECT(gbc.pc(), 0xabc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc4), 0xcb);
        EXPECT(gbc.readMem(0xabc5), 0xda);
        // CB DA 03BA
        gbc.setState(0x2dc, 0x787d, 0x4500, 0xc2d2, 0xe323, 0xe866, 0x1, 0x0);
        gbc.writeMem(0x2dc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x787d);
        EXPECT(gbc.pc(), 0x2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03BB
        gbc.setState(0x152c, 0x93b7, 0xe10, 0xcf9d, 0xfea9, 0xd25b, 0x1, 0x1);
        gbc.writeMem(0x152c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x93b7);
        EXPECT(gbc.pc(), 0x152e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03BC
        gbc.setState(0x984e, 0xa069, 0xbd10, 0x5e2d, 0xfcb2, 0x4f92, 0x0, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa069);
        EXPECT(gbc.pc(), 0x9850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984e), 0xcb);
        EXPECT(gbc.readMem(0x984f), 0xda);
        // CB DA 03BD
        gbc.setState(0xef81, 0xd40, 0xfa20, 0x656a, 0x6ed7, 0xd63d, 0x0, 0x0);
        gbc.writeMem(0xef81, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd40);
        EXPECT(gbc.pc(), 0xef83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef81), 0xcb);
        EXPECT(gbc.readMem(0xef82), 0xda);
        // CB DA 03BE
        gbc.setState(0x28d5, 0x31a6, 0x54d0, 0x35e9, 0x22d9, 0x4b06, 0x1, 0x1);
        gbc.writeMem(0x28d5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x31a6);
        EXPECT(gbc.pc(), 0x28d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03BF
        gbc.setState(0x6f30, 0x6808, 0x6400, 0xc412, 0xb356, 0x5054, 0x1, 0x0);
        gbc.writeMem(0x6f30, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6808);
        EXPECT(gbc.pc(), 0x6f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03C0
        gbc.setState(0x52c6, 0xb3ad, 0xc480, 0x3e90, 0x8d52, 0x4f84, 0x1, 0x0);
        gbc.writeMem(0x52c6, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb3ad);
        EXPECT(gbc.pc(), 0x52c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03C1
        gbc.setState(0x1384, 0x34a1, 0x52b0, 0x584, 0xf5b2, 0xc34c, 0x1, 0x1);
        gbc.writeMem(0x1384, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x34a1);
        EXPECT(gbc.pc(), 0x1386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03C2
        gbc.setState(0x2686, 0x8609, 0xd820, 0xb145, 0xfc3d, 0x32d9, 0x1, 0x1);
        gbc.writeMem(0x2686, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8609);
        EXPECT(gbc.pc(), 0x2688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03C3
        gbc.setState(0x8770, 0xe3fb, 0xfb90, 0xcaf6, 0xc1a3, 0xb4bd, 0x1, 0x1);
        gbc.writeMem(0x8770, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe3fb);
        EXPECT(gbc.pc(), 0x8772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8770), 0xcb);
        EXPECT(gbc.readMem(0x8771), 0xda);
        // CB DA 03C4
        gbc.setState(0x7eba, 0xc024, 0xf770, 0x67d4, 0xdc07, 0x1be, 0x0, 0x1);
        gbc.writeMem(0x7eba, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc024);
        EXPECT(gbc.pc(), 0x7ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03C6
        gbc.setState(0x4486, 0x8fcd, 0x8350, 0x3890, 0xc5f3, 0x602, 0x0, 0x0);
        gbc.writeMem(0x4486, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8fcd);
        EXPECT(gbc.pc(), 0x4488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03C7
        gbc.setState(0xc658, 0x7540, 0xd630, 0x63a4, 0x656b, 0xb2c6, 0x0, 0x1);
        gbc.writeMem(0xc658, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7540);
        EXPECT(gbc.pc(), 0xc65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc658), 0xcb);
        EXPECT(gbc.readMem(0xc659), 0xda);
        // CB DA 03C8
        gbc.setState(0x1975, 0x82fc, 0x4f80, 0x30a3, 0x6f38, 0x4672, 0x1, 0x1);
        gbc.writeMem(0x1975, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82fc);
        EXPECT(gbc.pc(), 0x1977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03C9
        gbc.setState(0x2f96, 0x571a, 0x18f0, 0xe71a, 0x79f2, 0x1849, 0x1, 0x0);
        gbc.writeMem(0x2f96, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x571a);
        EXPECT(gbc.pc(), 0x2f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03CA
        gbc.setState(0x2515, 0x9e7d, 0xac50, 0x41ff, 0x44ca, 0xbd5a, 0x1, 0x0);
        gbc.writeMem(0x2515, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9e7d);
        EXPECT(gbc.pc(), 0x2517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03CB
        gbc.setState(0x1985, 0x835e, 0x7750, 0xa505, 0xe2c8, 0xdb09, 0x1, 0x1);
        gbc.writeMem(0x1985, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x835e);
        EXPECT(gbc.pc(), 0x1987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03CC
        gbc.setState(0xe9c0, 0x91a3, 0x4350, 0x909d, 0x81e8, 0x48c8, 0x1, 0x0);
        gbc.writeMem(0xe9c0, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x91a3);
        EXPECT(gbc.pc(), 0xe9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c0), 0xcb);
        EXPECT(gbc.readMem(0xe9c1), 0xda);
        // CB DA 03CD
        gbc.setState(0x42fc, 0xbf31, 0x78d0, 0x417a, 0x8fb9, 0x8878, 0x1, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbf31);
        EXPECT(gbc.pc(), 0x42fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03CF
        gbc.setState(0xc10c, 0x50be, 0xbe70, 0xc48a, 0x71ec, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xc10c, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x50be);
        EXPECT(gbc.pc(), 0xc10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc10c), 0xcb);
        EXPECT(gbc.readMem(0xc10d), 0xda);
        // CB DA 03D0
        gbc.setState(0xc213, 0xc795, 0xe410, 0xcb8f, 0x4338, 0x27d8, 0x0, 0x1);
        gbc.writeMem(0xc213, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc795);
        EXPECT(gbc.pc(), 0xc215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc213), 0xcb);
        EXPECT(gbc.readMem(0xc214), 0xda);
        // CB DA 03D1
        gbc.setState(0x7dd9, 0xd39e, 0x19e0, 0x5d2, 0x3115, 0x1ee4, 0x0, 0x0);
        gbc.writeMem(0x7dd9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd39e);
        EXPECT(gbc.pc(), 0x7ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03D2
        gbc.setState(0xc77e, 0x6ac0, 0x2670, 0x7ddc, 0x4d9b, 0x8af5, 0x1, 0x1);
        gbc.writeMem(0xc77e, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6ac0);
        EXPECT(gbc.pc(), 0xc780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77e), 0xcb);
        EXPECT(gbc.readMem(0xc77f), 0xda);
        // CB DA 03D3
        gbc.setState(0xb8ef, 0x4df6, 0x5f40, 0x2d2, 0xb040, 0x2ade, 0x0, 0x0);
        gbc.writeMem(0xb8ef, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4df6);
        EXPECT(gbc.pc(), 0xb8f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ef), 0xcb);
        EXPECT(gbc.readMem(0xb8f0), 0xda);
        // CB DA 03D4
        gbc.setState(0xffe, 0xc3f6, 0xc160, 0xdb67, 0xf13e, 0xdc3e, 0x0, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc3f6);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB DA 03D5
        gbc.setState(0x8f03, 0xa677, 0xb870, 0x2d8, 0xfb89, 0xa6a0, 0x0, 0x0);
        gbc.writeMem(0x8f03, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa677);
        EXPECT(gbc.pc(), 0x8f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f03), 0xcb);
        EXPECT(gbc.readMem(0x8f04), 0xda);
        // CB DA 03D6
        gbc.setState(0xe916, 0xf6ae, 0xceb0, 0xf426, 0x932d, 0x59c2, 0x1, 0x0);
        gbc.writeMem(0xe916, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf6ae);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe916), 0xcb);
        EXPECT(gbc.readMem(0xe917), 0xda);
        // CB DA 03D7
        gbc.setState(0x94b7, 0x4f7c, 0xf00, 0x8e8e, 0x4221, 0x4619, 0x1, 0x0);
        gbc.writeMem(0x94b7, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4f7c);
        EXPECT(gbc.pc(), 0x94b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b7), 0xcb);
        EXPECT(gbc.readMem(0x94b8), 0xda);
        // CB DA 03D8
        gbc.setState(0xb750, 0x8307, 0xab30, 0x27a1, 0x170, 0x9a48, 0x0, 0x0);
        gbc.writeMem(0xb750, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8307);
        EXPECT(gbc.pc(), 0xb752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb750), 0xcb);
        EXPECT(gbc.readMem(0xb751), 0xda);
        // CB DA 03D9
        gbc.setState(0x9dfb, 0x25a3, 0xef90, 0xcdfa, 0xb267, 0x8a23, 0x0, 0x1);
        gbc.writeMem(0x9dfb, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x25a3);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dfb), 0xcb);
        EXPECT(gbc.readMem(0x9dfc), 0xda);
        // CB DA 03DA
        gbc.setState(0x2dfe, 0x754d, 0xb090, 0xbec1, 0x1a52, 0x6f36, 0x0, 0x1);
        gbc.writeMem(0x2dfe, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x754d);
        EXPECT(gbc.pc(), 0x2e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03DB
        gbc.setState(0x7a07, 0xa060, 0x7bf0, 0xaadc, 0x3e8, 0x86dc, 0x0, 0x0);
        gbc.writeMem(0x7a07, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa060);
        EXPECT(gbc.pc(), 0x7a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03DC
        gbc.setState(0x4dd5, 0x7de4, 0x6630, 0x1e59, 0x4b0a, 0xa27f, 0x1, 0x1);
        gbc.writeMem(0x4dd5, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7de4);
        EXPECT(gbc.pc(), 0x4dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03DD
        gbc.setState(0xb4b9, 0x8967, 0x510, 0xb104, 0x9767, 0xe622, 0x0, 0x0);
        gbc.writeMem(0xb4b9, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8967);
        EXPECT(gbc.pc(), 0xb4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b9), 0xcb);
        EXPECT(gbc.readMem(0xb4ba), 0xda);
        // CB DA 03DE
        gbc.setState(0xe15a, 0x1a9e, 0xdb60, 0x2512, 0xf4b1, 0x4262, 0x1, 0x0);
        gbc.writeMem(0xe15a, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1a9e);
        EXPECT(gbc.pc(), 0xe15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15a), 0xcb);
        EXPECT(gbc.readMem(0xe15b), 0xda);
        // CB DA 03DF
        gbc.setState(0x6764, 0x51a6, 0x59d0, 0x2c56, 0xfd38, 0xfed3, 0x0, 0x0);
        gbc.writeMem(0x6764, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x51a6);
        EXPECT(gbc.pc(), 0x6766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03E0
        gbc.setState(0x6782, 0x3248, 0x4310, 0x4acb, 0xf846, 0x5cd, 0x1, 0x0);
        gbc.writeMem(0x6782, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3248);
        EXPECT(gbc.pc(), 0x6784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB DA 03E1
        gbc.setState(0x8b47, 0x92a4, 0x81d0, 0x80b4, 0x5e2e, 0xf06e, 0x1, 0x0);
        gbc.writeMem(0x8b47, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x92a4);
        EXPECT(gbc.pc(), 0x8b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b47), 0xcb);
        EXPECT(gbc.readMem(0x8b48), 0xda);
        // CB DA 03E2
        gbc.setState(0x8369, 0x53fc, 0xd1c0, 0x6c71, 0x4f76, 0xd481, 0x0, 0x0);
        gbc.writeMem(0x8369, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x53fc);
        EXPECT(gbc.pc(), 0x836b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8369), 0xcb);
        EXPECT(gbc.readMem(0x836a), 0xda);
        // CB DA 03E3
        gbc.setState(0xae1f, 0xfaba, 0x4c90, 0xefd3, 0xb4b3, 0x6728, 0x1, 0x0);
        gbc.writeMem(0xae1f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfaba);
        EXPECT(gbc.pc(), 0xae21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1f), 0xcb);
        EXPECT(gbc.readMem(0xae20), 0xda);
        // CB DA 03E4
        gbc.setState(0xd3ff, 0xcf3, 0xf630, 0x7860, 0x95d7, 0xf521, 0x0, 0x1);
        gbc.writeMem(0xd3ff, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcf3);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0xda);
        // CB DA 03E5
        gbc.setState(0xae67, 0xfbda, 0x1e00, 0x78da, 0xf427, 0x9a99, 0x0, 0x1);
        gbc.writeMem(0xae67, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfbda);
        EXPECT(gbc.pc(), 0xae69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae67), 0xcb);
        EXPECT(gbc.readMem(0xae68), 0xda);
        // CB DA 03E6
        gbc.setState(0x8050, 0x3be2, 0x2ed0, 0x60ce, 0x296d, 0x9777, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3be2);
        EXPECT(gbc.pc(), 0x8052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8050), 0xcb);
        EXPECT(gbc.readMem(0x8051), 0xda);
        // CB DA 03E7
        gbc.setState(0x6e5f, 0x5c71, 0x9660, 0x20e5, 0x7a86, 0xa0aa, 0x0, 0x0);
        gbc.writeMem(0x6e5f, { 0xcb, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5c71);
        EXPECT(gbc.pc(), 0x6e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
